
FR LS     Sets local string variable using current string values  FR LS     
                                                              02/02/09

PURPOSE:  Associates a file name template or any other alphanumeric 
          string with a string (symbolic) variable.  
          Reads input from current procedure or terminal.  
          The string variable is available only inside the SPIDER
          procedure where this operation was executed. 
          'FR LS' differs from 'FR L' in that it first evaluates
          any string variables from the setting string.

SEE ALSO: FR GS
          FR G
          FR L
          RR

USAGE:    FR LS   

          .VARIABLE NAME & ASSOCIATED VALUE: [string]value 
          [Enter string's name (surrounded by []'s) and associated 
           alphanumeric string.]

          1. Example.  '<br />'
 
          '<dl>'
          '<dt>'FR L                   '</dt>' 
          '<dt>'[dir]/scratch/         '</dt>' 
          '<dt>'FR L                   '</dt>' 
          '<dt>'[file]file000          '</dt>' 
          '<dt>'FR LS                  '</dt>' 
          '<dt>'[file][dir][file]      '</dt>' 
          '<dt>'VM                     '</dt>' 
          '<dt>'echo Path: [file]      '</dt>' 
          '<dt>'EN                     '</dt>' 

          '</dl>'
          '<p />'

          When procedure executes, operation sequence is : 
          '<p />'
          .OPERATION: FR L                                    '<br />'
          .SYMBOL NAME & ASSOCIATED VALUE:   [dir]/scratch/   '<br />'
          .OPERATION: FR L                                    '<br />'
          .SYMBOL NAME & ASSOCIATED VALUE:   [file]file000    '<br />'
          .OPERATION: FR L                                    '<br />'
          .SYMBOL NAME & ASSOCIATED VALUE:   [file][dir][file]'<br />'
          .OPERATION: VM                                      '<br />'
           Path: /scratch/file000                             '<br />'
           '<p />'
     

NOTES:    1. This operation is useful when writing long procedures as
	    a variable can be initialized to contain a
	    string at the top of a procedure, then the variable
	    e.g. [raw_file] can be used throughout this and
	    following procedures.  If the string's value later changes
	    then it only has to be altered at one location in the
	    procedure.

          2. This operation can be used to change the value of
             an existing string using the current value of the string,
             without getting caught by run-time-recursion as shown in
             the above example.

SUBROUTINE: RDPR, SYMPAR, SETSYMPAR, SUBSYMPAR, PARSESYMPAR

CALLER:     DRIV1

