head	1.23;
access;
symbols
	best-code:1.15
	pre-named-reg:1.15
	pre_GPL:1.15
	prec_CA:1.15
	oct21:1.13;
locks; strict;


1.23
date	2014.01.12.16.23.44;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2012.04.12.17.43.53;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2012.03.29.14.27.57;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2012.03.28.18.57.30;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2012.01.06.14.02.10;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2011.09.26.18.02.18;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2006.09.26.18.16.24;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2006.09.25.16.15.07;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.26.15.57.59;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2000.09.22.18.08.07;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	98.02.12.17.43.59;	author pawel;	state Exp;
branches;
next	1.12;

1.12
date	98.02.12.17.35.48;	author pawel;	state Exp;
branches;
next	1.11;

1.11
date	97.08.22.18.54.08;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.01.09.14.35.54;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	96.09.03.18.00.21;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	96.04.03.19.36.51;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.03.25.16.41.15;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.02.23.17.46.55;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	95.04.18.20.23.33;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.01.27.16.31.46;	author michael;	state Exp;
branches;
next	1.3;

1.3
date	94.07.12.16.35.18;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.25.54;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.15.55;	author leith;	state Exp;
branches;
next	;


desc
@@


1.23
log
@enter
@
text
@
SH        Shift - using bilinear/trilinear interpolation ||   SH      
                                                              03/25/12

PURPOSE:  Shifts a image or image series 
          by a specified vector using bilinear interpolation. 
          Shifts volumes using trilinear interpolation.

SEE ALSO: SH F 
                   
USAGE:    SH

          .INPUT FILE NAME OR TEMPLATE (E.G. STK@@****): PIC001 
          [Enter the name of the file to be shifted.  This name can
           be for a single file, a whole stack (ending in @@), or a 
           template for a set of images (e.g stack3@@****** or 
           fil***). Templates containing asterisks will have the 
           astericks substituted with a number for the file.]

     If there is only a single input file specified the following 
     final two prompts appear:
          '<div class='"'opt_inp'"'>'

         .OUTPUT FILE: SHI001
          [Enter the name of the file where the shifted
          image is to be placed. ]

          .SHIFT COMPONENTS IN X, Y, & Z: -5.2, 6.5
          [Enter the shift vector components.]
          '</div>'

      Otherwise if the input file name contains astericks for
      a set of images the following prompts appear:
          '<div class='"'opt_inp'"'>'

          .FILE NUMBERS OR SELECTION DOC. FILE NAME: select_03 
          [Enter the file numbers to be substituted into the file name 
          template or name of a selection document file that contains 
          the input file numbers in the first register.]

          .OUTPUT FILE NAME OR TEMPLATE (E.G. IMGSTK@@****):          
          [Enter template for the names of the output file(s).]
          '</div>'

         .SHIFT DOCUMENT FILE:  savdocstksh 
          [Name of document file containing the shifts.]
 
          .REG. #'S FOR X & Y SHIFTS (OR * FOR: 2,3): 2, 3
          [Enter the register column positions in the document 
          file where these parameters are retrieved from.]
          '</div>'

      Otherwise if the input file is a whole stack the following 
      prompts appear:

          '<div class='"'opt_inp'"'>'
         .OUTPUT STACK FILE: STACK03@@
          [Enter the name of the file where the centerd
          images are to be placed.  This output file will be a 
          whole stack. Image numbers within the stack will 
          correspond to the input stack] 

          .SHIFT DOCUMENT FILE: savdocstksh 
          [Name of document file containing the shifts.]
 
          .REG. #'S FOR X & Y SHIFTS (OR * FOR: 2,3): 2, 3
          [Enter the register column positions in the document 
          file where these parameters are retrieved from.]
          '</div>'

       Different prompt variations occur for other possible combinations 
       of input and output file stacks.


NOTES: 1. The action of the operation depends on the shift specified.
          For integer shift vector components a simple index
          permutation is done. For non-integer shift values, bilinear 
          interpolation is used.

       2. Due to the use of circular shift, 'SH' has the  effect
          of multiplying the Fourier transform with:    '<br />'
          exp (2 [pi] j (KSH * KX/NX + ISH * KY/NY))    '<br />'

       3. This shift operation may have the unpleasant effect of
          moving a discontinuity into the image field (this happens
          whether or not the shift is circular).  If this is
          not desired, and cannot be removed by subsequent masking, the
          image should be recreated from its original field  by
          rewindowing.  The new window coordinates must be offset by
          -KSH,-ISH  to correspond to an application of 'SH'  with
          +KSH,+ISH.

        4. The shift parameters can be specified input from 
           register variables:  -[shix],-[shiy], will input the
           components (with inverted sign) of a shift vector
           found in a previous 'CC' and 'PK [shix],[shiy]' operation.
           Whether or not the sign has to be inverted follows
           from the order of argument files in the 'CC'
           operation.

SUBROUTINES: SHIFTS, SHIFT3, SHIFTT, SHIFT_3D


CALLER:      UTIL_1110
@


1.22
log
@typo
@
text
@d36 1
a36 1
          .ENTER FILE NUMBERS OR SELECTION DOC. FILE NAME: select_03 
d48 1
a48 1
          .ENTER REG. #'S FOR X & Y SHIFTS (OR * FOR: 2,3): 2, 3
d66 1
a66 1
          .ENTER REG. #'S FOR X & Y SHIFTS (OR * FOR: 2,3): 2, 3
@


1.21
log
@*** empty log message ***
@
text
@d1 1
a1 1
s
@


1.20
log
@*** empty log message ***
@
text
@d1 1
a1 1

d45 1
a45 6
         .ENTER FILE NUMBERS OR SELECTION DOC. FILE NAME: select_03 
          [Enter the output file numbers to be substituted into the file name 
           template or name of a selection document file that contains 
           the output file numbers in the first register column.]
 
          .SHIFT DOCUMENT FILE:  savdocstksh 
@


1.19
log
@nsam
@
text
@d3 1
a3 1
                                                              09/25/06
d5 3
a7 3
PURPOSE:  Shifts a image by a specified vector using bilinear 
          interpolation. Shifts a  volume by a specified vector 
          using trilinear interpolation.
d13 14
a26 6
          .INPUT FILE: PIC001
          [Enter the name of the image/volume to be shifted.]

          .OUTPUT FILE: SHI001
          [Enter the name of the file where the output is
          to be kept.]
d30 48
a78 11
          [In the above example, PIC001 will then be shifted by -5.2 
          units in the x direction and 6.5 units in the y direction, 
          and the result will be written into SHI001.]

NOTES: 1. The shift parameters can contained in a
          register variable:  -[shix],-[shiy], will input the
          components (with inverted sign) of a shift vector
          found in a previous 'CC' and 'PK [shix],[shiy]' operation.
          Whether or not the sign has to be inverted follows
          from the order of argument files in the 'CC'
          operation.
d80 1
a80 1
       2. The action of the operation depends on the shift specified.
d85 20
a104 19
       3.  DNEW (K,I) = DOLD (K',I')                         '<br />'
           where K' = K + KSH, I' = I + ISH                  '<br />'
           This operation shifts into sample positions only.  Note
           that  the shift is circular, '<i>'i.e.'</i>', the image is repeated in
           all directions.  The effective new coordinate pair is:'<br />'
                  K' = MOD (K + KSH, NX)                   '<br />'
                  I' = MOD (I + ISH, NY)                   '<br />'
           Because of the use of the circular shift, 'SH' has the  effect
           of multiplying the Fourier transform with:        '<br />'
           exp (2 [pi] j (KSH * KX/NX + ISH * KY/NY))    '<br />'

        4. The shift operation has the unpleasant effect of
           moving a discontinuity into the image field (this happens
           whether or not the shift is circular).  If this is
           not desired, and cannot be removed by subsequent masking, the
           image should be recreated from its original field  by
           rewindowing.  The new window coordinates must be offset by
           -KSH,-ISH  to correspond to an application of 'SH'  with
           +KSH,+ISH.
d106 1
a106 1
SUBROUTINES: SHIFT2, SHIFT1, SHIFT_PF, SHIFT3, SHIFTT, SHIFT_3D
d109 1
a109 1
CALLER: UTIL2
@


1.18
log
@trilinear
@
text
@a26 1

d45 2
a46 2
                  K' = MOD (K + KSH, NSAM)                   '<br />'
                  I' = MOD (I + ISH, NROW)                   '<br />'
d49 1
a49 1
           exp (2 [pi] j (KSH * KX/NSAM + ISH * KY/NROW))    '<br />'
@


1.17
log
@title
@
text
@d2 1
a2 1
SH        Shift - using bilinear interpolation ||                   SH      
d5 3
a7 2
PURPOSE:  Shifts a image/volume by a specified vector using bilinear 
          interpolation.
d44 1
a44 1
           that  the shift is circular, '<I>'i.e.'</I>', the image is repeated in
@


1.16
log
@updated []
@
text
@d2 1
a2 1
SH        SHift - using bilinear interpolation ||                   SH      
@


1.15
log
@3d now
@
text
@d3 1
a3 1
                                                              09/03/96
d5 2
a6 1
PURPOSE:  Shifts a picture or a volume by a specified vector.
d8 1
a8 1
SEE ALSO: SH F  (Shift using Fourier interpolation)
d13 1
a13 1
          [Enter the name of the picture to be shifted.]
d16 1
a16 1
          [Enter the name of the file where the shifted picture is
d19 1
a19 1
          .SHIFT COMPONENTS IN X, Y, Z: -5.2,6.5
d27 2
a28 2
NOTES: 1. The shift parameters can be specified by reference to
          the temporary register:  -X11,-X12, will input the
d30 1
a30 1
          found in a previous 'CC' and 'PK X11,X12' operation.
d40 2
a41 2
       3.  DNEW (K,I) = DOLD (K',I')                         '<BR>'
           where K' = K + KSH, I' = I + ISH                  '<BR>'
d44 6
a49 6
           all directions.  The effective new coordinate pair is:'<BR>'
                  K' = MOD (K + KSH, NSAM)                   '<BR>'
                  I' = MOD (I + ISH, NROW)                   '<BR>'
           Because of the use of the circular shift, SH has the  effect
           of multiplying the Fourier transform with:        '<BR>'
           exp (2 [pi] j (KSH * KX/NSAM + ISH * KY/NROW))    '<BR>'
@


1.14
log
@||
@
text
@d18 1
a18 1
          .SHIFT COMPONENTS IN X-Y: -5.2,6.5
a24 3
       If input is 3D, the system asks an additional question:

          .SHIFT COMPONENT IN Z: 2.2
@


1.13
log
@*** empty log message ***
@
text
@d2 1
a2 1
SH        SHift - using bilinear interpolation               SH      
@


1.12
log
@*** empty log message ***
@
text
@d45 1
a45 1
           that  the shift is circular;  i.e.  the image is repeated in
@


1.11
log
@*** empty log message ***
@
text
@d62 1
a62 1
SUBROUTINES: SHIFT2, SHIFT_PF, SHIFT3, SHIFTT, SHIFT_3D
@


1.10
log
@input1 -> input
@
text
@d2 1
a2 1
SH        SHift -- using bilinear interpolation               SH      
d25 1
a25 1
   If input is 3D, the system asks an additional question:
@


1.9
log
@new version
@
text
@d11 1
a11 1
          .INPUT1 FILE: PIC001
@


1.8
log
@bad note number
@
text
@d2 2
a3 2
SH        SHift -- using Fourier or bilinear interpolation          SH      
                                                              02/22/96
d5 1
a5 1
PURPOSE:  Shifts a picture by a specified vector.
d7 1
a7 2
SEE ALSO: SH BL (Shift -- force bilinear interpolation)
          SH 3  (Shift in 3D)
d18 1
a18 1
          .SHIFT PARAMETERS: -5.2,6.5
d25 4
d37 1
a37 2
       2. The action of the operation depends on the image 
          dimensions, unless the shift components are both integer.
d39 2
a40 16
          permutation is done.                            '<BR>'
              
          A. Image dimensions are a power of two: 
              For non-integer shift values,
              the shift is done in Fourier space (input and output
              are real). This results in a small error which means
              that after performing the shift forward and backward
              certain discrepancy can be found. Nevertheless this
              method is much more acurate than bilinear interpolation.
              ('SH BL' forces bilinear interpolation also for power 
              of 2 files.)                                '<BR>'
                             
          B. Image dimensions are not a power of two:
              For non-integer shift values, bilinear interpolation 
              is used [This corresponds to the action of 'SH' for
              any image dimensions before 8/29/89].
d62 1
a62 1
       4.  Fourier shift implemented by Pawel Penczek
a63 1
SUBROUTINES: SHIFT2, SHIFT_PF
@


1.7
log
@tags fixed
@
text
@d65 1
a65 1
        4: The shift operation has the unpleasant effect of
@


1.6
log
@*** empty log message ***
@
text
@d37 1
a37 1
          permutation is done. '<BR>'
d47 1
a47 1
              of 2 files.) '<BR>'
d54 2
a55 2
       3.  DNEW (K,I) = DOLD (K',I') '<BR>'
           where K' = K + KSH, I' = I + ISH '<BR>'
d58 3
a60 3
           all directions.  The effective new coordinate pair is '<BR>'
                  K' = MOD (K + KSH, NSAM)'<BR>'
                  I' = MOD (I + ISH, NROW)<BR>
d62 2
a63 2
           of multiplying the Fourier transform with: '<BR>'
           exp (2 [pi] j (KSH * KX/NSAM + ISH * KY/NROW))'<BR>'
d66 6
a71 6
           moving  a  discontinuity  into the image field (this happens
           whether  or  not  the  shift  is  circular).   If  this   is
           not desired,  and cannot be removed by subsequent masking, the
           image  should  be  recreated  from  its  original  field  by
           rewindowing.   The  new window coordinates must be offset by
           -KSH,-ISH  to  correspond  to  an  application  of  SH  with
@


1.5
log
@merged with .glo file
@
text
@d3 1
a3 1
                                                              04/18/95
d5 1
a5 1
PURPOSE:  Shifts a picture circularly by a specified vector.
d7 2
a8 1
SEE ALSO:  SH 3  (Shift in 3D)
a10 1
                 SH BL (force bilinear interpolation)
d37 1
a37 1
          permutation is done. 
d46 2
a47 1
              (BL forces bilinear interpolation also for power of 2 files.)
d54 2
a55 2
       3.  DNEW (K,I) = DOLD (K',I') <BR>
           where K' = K + KSH, I' = I + ISH
d58 2
a59 2
           all directions.  The effective new coordinate pair is <BR>
                  K' = MOD (K + KSH, NSAM)<BR>
d62 2
a63 2
           of multiplying the Fourier transform with: <BR>
           exp (2 [pi] j (KSH * KX/NSAM + ISH * KY/NROW))
d68 1
a68 1
           undesired,  and cannot be removed by subsequent masking, the
d74 1
a74 1
       4.  Fourier shift Implemented by Pawel Penczek
@


1.4
log
@option bl added
@
text
@d2 2
a3 2
SH        SHift -- using Fourier or bilinear interpolation            SH      
                                                                  08/30/89
d53 19
d73 1
a73 1
       3.  Fourier shift Implemented by Pawel Penczek
d75 3
a77 2
Subroutines: SHIFT2, SHIFT_PF
Caller: UTIL2
@


1.3
log
@replaced_tabs
@
text
@d8 1
a8 1

d10 1
d46 2
a47 1

d54 1
a54 1
       3. Implemented by Pawel Penczek
@


1.2
log
@replaced_tabs
@
text
@@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
SH        SHift -- using Fourier or bilinear interpolation	      SH      
								  08/30/89
d37 3
a39 3
	      
	  A. Image dimensions are a power of two: 
	      For non-integer shift values,
d46 4
a49 4
	  B. Image dimensions are not a power of two:
	      For non-integer shift values, bilinear interpolation 
	      is used [This corresponds to the action of 'SH' for
	      any image dimensions before 8/29/89].
@
