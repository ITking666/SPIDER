head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2015.03.09.15.00.02;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2015.01.09.16.16.12;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2014.11.21.16.37.54;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2014.11.18.19.48.56;	author leith;	state Exp;
branches;
next	;


desc
@@


1.4
log
@location of img
ls
@
text
@FQ Q      Filter - Quick Fourier, High, low pass, etc., Padded  ||   FQ Q      
                                                              11/18/14

PURPOSE:  Apply Fourier filters to an image or volume. 
          To improve boundary quality the image is padded with the average boundary
          value to twice the riginal size during filtration.

SEE ALSO: FQ QNP
          FQ 
          BC  
          FF  
          FT  
          FF PLOT  

USAGE:    FQ Q

          .INPUT FILE: PIC001
          [Enter name of input file containing a real image.]

          .OUTPUT FILE: PIC002
          [Enter name for output file which will contain the filtered real image.]

          '<table border="0" cellpadding="1">'
          '<tr>' '<td>'1:  LOW-PASS,              '</td>' '<td>' 2: HIGH-PASS              '</td>' '</tr>'
          '<tr>' '<td>'3:  GAUSS.  LOW-PASS,      '</td>' '<td>' 4: GAUSS.  HIGH-PASS      '</td>' '</tr>'
          '<tr>' '<td>'5:  FERMI                  '</td>' '<td>' 6: FERMI                  '</td>' '</tr>'
          '<tr>' '<td>'7:  BUTTER. LOW-PASS,      '</td>' '<td>' 8: BUTTER. HIGH-PASS      '</td>' '</tr>'
          '<tr>' '<td>'9:  RAISED COS. LOW-PASS,  '</td>' '<td>'10: RAISED COS. HIGH-PASS  '</td>' '</tr>'
          '<tr>' '<td>'13: RAISED SINC WINDOW,    '</td>' '<td>'14: B FACTOR               '</td>' '</tr>'
          '</table>'

          .FILTER TYPE (1-10): 7                                                                      
          [Enter filter option code.]

           Option "1" - Low-pass truncation.  Filter is a "top-hat" function
                        that truncates the Fourier transform at spatial frequency: '<i>'SPF'</i>'.

           Option "2" - High-pass truncation.  Filter is inverse "top-hat"
                        function that passes the Fourier transform beyond spatial
                        frequency: '<i>'SPF'</i>'.

           Option "3" - Gaussian low-pass.  Filter is the Gaussian function:
                        EXP(-'<i>'F'</i>'**2 / (2 * '<i>'SPF'</i>'**2)), 
                        where '<i>'F'</i>' is the frequency.

           Option "4" - Gaussian high-pass.  Filter is complement of the Gaussian function:
                        1 - EXP(-'<i>'F'</i>'**2 / (2 * '<i>'SPF'</i>'**2)),
                        where '<i>'F'</i>' is the frequency.

           Option "5" - '<a href='"'../img/fermi_lopass.jpg'"'>'Fermi low-pass'</a>'.  Filter is:      
                        1 / (1 + EXP[('<i>'F'</i>' - '<i>'SPF'</i>') / '<i>'T'</i>']) which
                        negotiates between "Top-hat" and Gaussian
                        characteristics, depending on the value of the temperature:
                        '<i>'T'</i>' (see below).

           Option "6" - '<a href='"'../img/fermi_hipass.jpg'"'>'Fermi high-pass'</a>' high-pass.  Filter is: 
                        1 / (1 + EXP[('<i>'F'</i>' - '<i>'SPF'</i>') / '<i>'-T'</i>'])
                        (Same as in Option "5", but with '<i>'T'</i>' replaced by '<i>'-T'</i>').

           Option "7" - Butterworth low-pass. Filter is:  
                        1 / (SQRT(1 + '<i>'F'</i>' / '<i>'RAD'</i>')**(2 * '<i>'ORDER'</i>'))  '<br />'
                        where                                                                  '<br />'
                        '<i>'ORDER'</i>' = [2 * log('<i>'eps'</i>'/SQRT('<i>a</i>'**2-1)) ] / [log('<i>'Flow'</i>'/'<i>'Fup'</i>')]  '<br />'
                        '<i>'RAD'</i>'   = '<i>'Flow'</i>' / (('<i>'eps'</i>')**(2 / '<i>'ORDER'</i>'))                             '<br />'
                        In the Butterworth filter the '<i>'ORDER'</i>' determines
                        the filter fall off and '<i>'RAD'</i>' corresponds to the cut-off radius. '<br />'
                        Frequencies below the lower frequency are preserved,                      '<br />'
                        frequencies above the upper frequency are removed,                        '<br />'
                        with a smooth transition in between lower and upper
                        limiting frequencies.
                        
           Option "8" - Butterworth high-pass. Filter is: 
                        1 - (1 / (SQRT(1 + '<i>'F'</i>' / '<i>'RAD'</i>')**(2 * '<i>'ORDER'</i>'))) '<br />'
                        Frequencies below the lower frequency are removed,    '<br />'
                        frequencies above upper frequency are preserved,      '<br />'
                        with a smooth transition in between lower and upper
                        limiting frequencies.
      
           Option "9" - Raised Cosine low-pass. Filter is:                                            '<br />'
                        0.5 * (COS(PI * ('<i>'F'</i>' - '<i>'Flow'</i>') / ('<i>'Flow'</i>' - '<i>'Fup'</i>')) + 1)  
                        if  '<i>'Flow'</i>' < '<i>'F'</i>' < '<i>'Fup'</i>',                          '<br />'
                        1 if '<i>'F'</i>' < '<i>'Flow'</i>', and  0 if '<i>'F'</i>' > '<i>'Fup'</i>'. '<br />'
     
           Option "10" - Raised Cosine high-pass. Filter is:                                          '<br />' 
                         0.5 * (-COS(PI*('<i>'F'</i>' - '<i>'Flow'</i>') / ('<i>'Flow'</i>' - '<i>'Fup'</i>')) + 1)  
                         if  '<i>'Flow'</i>' < '<i>'F'</i>' < '<i>'Fup'</i>'                          '<br />'
                         1 if '<i>'F'</i>' < '<i>'Flow'</i>', and 1 if '<i>'F'</i>' > '<i>'Fup'</i>'. '<br />'
   
           Option "13" - Raised sinc window for 2-D images.     '<br />'

           Option "14" - B factor filter.                       '<br />'
    
    
    For options "1-4 and 13" SPIDER asks:
          '<div class='"'opt_inp'"'>'
          .FILTER RADIUS (IN FREQUENCY OR PIXEL UNITS): 0.12 or 5
          [The filter radius (filter intrinsic frequency) can be input using either
           frequency units or pixel units. If filter radius is given in
           frequency units, they should be in the range: 0.0 - 0.5.
           If the input is > 1.0 it is treated as given in pixel units. (The frequency is
           then 1 / radius). 
           This frequency is referred to below as: '<i>'SPF'</i>'.]
          '</div>'

    For options "5-6"  SPIDER asks:
          '<div class='"'opt_inp'"'>'
          .FILTER RADIUS (IN FREQUENCY OR PIXEL UNITS): 0.12 or 5
          [The filter radius (filter intrinsic frequency) can be input using either
           frequency units or pixel units. If filter radius is given in
           frequency units, they should be in the range: 0.0 - 0.5.
           If the input is > 1.0 it is treated as given in pixel units. (The frequency is
           then 1 / radius). 
           This frequency is referred to below as: '<i>'SPF'</i>'.]
          
          .TEMPERATURE (0=CUTOFF): 0.3
          [Enter  a temperature parameter '<i>'T'</i>'
           The filter falls off roughly within this reciprocal distance (in terms of frequency units).]
          '</div>'

    For options "7-10" SPIDER asks:
          '<div class='"'opt_inp'"'>'
         .LOWER & UPPER LIMITING FREQUENCIES (IN FREQ OR PIXEL UNITS): 0.1, 0.2 
          [The Filter limiting frequencies can be given either in  frequency units or
          pixel units. If limiting frequencies are given in frequency units, they should 
          be in the range: 0.0 - 0.5. If limiting frequencies are > 1.0 
          they are treated as given in pixel units. Both values must be in the same units. 
          These values expressed as frequencies are denoted: '<i>'Flow'</i>' and '<i>'Fup'</i>'.]
          '</div>'

    For option "14" SPIDER asks:

          '<div class='"'opt_inp'"'>'
          .B FACTOR: 0.5

          .D CONSTANT: 1

          .FREQUENCY CUTOFF: 0.4
          [Where the new amplitude is the original amplitude multiplied: '<br />'
           AMP = AMP * D * (EXP(B * s**2))  when  's**2' is below the frequency-cutoff**2 and
           unchanged when above the frequency-cuttoff**2 cutoff. (See source code for details.)

NOTES:    1. 'FQ Q' is similar to operation 'FF' except that:                      '<br />'
          a) It accepts real space images and creates a real filtered image.       '<br />'
          b) It always runs in core, so it is much faster the 'FF' operation.      '<br />'

          2. 'FQ Q' is same as operation 'FQ' except that it implements more filters and
              allows Fourier output. 
              Soon it will replace 'FQ' (I hope)                                   '<br />'

          3. The FILTER RADIUS and LOWER & UPPER LIMITING FREQUENCIES can be given either in 
             frequency units ('<i>'F'</i>') or pixel units ('<i>'P'</i>'). 
             If the input is > 1.0 it is treated as given in pixel units.          '<br />'                                '<br />'
             Frequency units are absolute units (independent of image size)
             in the range: 0.0 - 0.5 (0.5 is the highest value).                   '<br />'
             The following equations  convert frequency
             units into pixel units for ('<i>'P'</i>' in range: 0 - (NX/2)):       '<br />'
             '<i>'P'</i>'   = '<i>'SPF'</i>' * NX                                  '<br />'
             '<i>'SPF'</i>' = '<i>'P'</i>'   / NX                                  '<br />'

          4. Implemented by:  Paul Penczek, Gregory Kishchenko, and ArDean Leith.
 
SUBROUTINE: FOUR1A, FOUR_FQ

CALLER:     FOUR1
@


1.3
log
@*** empty log message ***
@
text
@d50 1
a50 1
           Option "5" - '<a href='"'fermi_lopass.jpg'"'>'Fermi low-pass'</a>'.  Filter is:      
d56 1
a56 1
           Option "6" - '<a href='"'fermi_hipass.jpg'"'>'Fermi high-pass'</a>' high-pass.  Filter is: 
@


1.2
log
@*** empty log message ***
@
text
@d5 2
a6 2
          To improve boundary quality the image is padded with the average value to twice the 
          original size during filtration.
d100 3
a102 2
           If the input is > 1.0 it is treated as given in pixel units.]
           This value expressed as a frequency is denoted: '<i>'SPF'</i>'.]
d111 3
a113 2
           If the input is > 1.0 it is treated as given in pixel units.]
           This value expressed as a frequency is denoted: '<i>'SPF'</i>'.]
d138 1
a138 1
          [Where the new amplitude is the original amplitude mutltiplied: '<br />'
d146 3
a148 3
          2. 'FQ Q' is similar to operation 'FQ' except that it implements more filters. 
             Once we are confident it gives exactly the same values as 'FQ' 
             it will replace 'FQ' '<br />'                                          '<br />'
d154 1
a154 1
             in the range: 0.0 - 0.5 (0.5 is the highest value).                         '<br />'
d157 2
a158 2
             '<i>'P'</i>' = '<i>'F'</i>' * NX                                      '<br />'
             '<i>'F'</i>' = '<i>'P'</i>' / NX                                      '<br />'
@


1.1
log
@Initial revision
@
text
@d60 1
a60 1
           Option "7" - Butterworth ow-pass. Filter is:  
@
