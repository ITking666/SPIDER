head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2014.02.03.16.02.45;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2014.01.31.19.34.38;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.30.14.04.03;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2012.03.30.14.03.22;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2012.01.24.15.27.05;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.23.15.55.18;	author leith;	state Exp;
branches;
next	;


desc
@@


1.6
log
@*** empty log message ***
@
text
@CG SYM    Find center of Object - Quasi-symmetry Approximation ||  CG SYM
                                                       (3/30/12)

PURPOSE:  Compute center of object in an image (not volume) using cross-correlation 
          between original image and the image after a 180-degree rotation. 
          Coordinates are listed with respect to the SPIDER image center:  
          (NX/2 + 1, NY/2 + 1).

SEE ALSO: CG  
          CG PH 
          SH  
          SH F 
          CG PH 
          CENT PH

USAGE: CG SYM [xi],[yi],[xr],[yr]
          [This operation can return up to four optional register variables:     

           '<table class="regvar">'                                      
           '<tr>''<td class="first" align="left">' Variable'</td>' '<td align="left">' 
                                                   Example '</td>' '<td align='left'>' 
                                                   Receives '</td>' '</tr>'                           
           '<tr>''<td class="first">' First'</td>' 
                 '<td>'[xi]                '</td>' 
                 '<td>'Integer approximation of X center of gravity '</td>' '</tr>'                             

           '<tr>''<td class="first">' Second'</td>' 
                 '<td>'[yi]                 '</td>' 
                 '<td>'Integer approximation of Y center of gravity'</td>' '</tr>'                             

           '<tr>''<td class="first">' Third'</td>' 
                 '<td>'[xr]                '</td>' 
                 '<td>'Sub-pixel X center of gravity'</td>' '</tr>'                             

           '<tr>''<td class="first">' Fourth'</td>' 
                 '<td>'[yr]                '</td>' 
                 '<td>'Sub-pixel Y center of gravity'</td>' '</tr>'                             
            '</table>' 

           .INPUT FILE: IMG001
           [Enter name of image.]

NOTES: 1. Register variables [xi],[yi] receive integer approximations of the
          offset from the quasi-symmetry center. Registers [xr],[yr] receive sub-pixel
          coordinates of the offset from the quasi-symmetry center. 
          To place the center of quasi-symmetry at the image center one has to use the
          'SH' operation and reverse the signs of the shifts.

       2. Implemented by G.Kishchenko.

       3. The operation is noise- and fool-proof. It's based on 
          two-fold quasi-symmetry of objects. This operation usually 
          produces results similar to operation 'CG PH',
          but it is preferred, since it does not report incorrect 
          center for dumbbell-shaped objects.''

       4. The estimation of center of quasi-symmetry in this algorithm is based
          on cross-correlation between original image and the image after a 
          180-degree rotation, implemented as follows:            '<br />'

       i)   The 2D Fourier transform of original image is computed.   '<br />'

       ii)  The square of a complex number in each point of 2D Fourier transform
            is computed.    (Notes: it's an equivalent of multiplication of Fourier
            transform of original image and complex conjugate of image after a
            180-degree rotation, because conjugate of image after a 180-degree
            rotation is equal to Fourier transform of original image.)   '<br />'

       iii) The reversed 2D Fourier transform is computed to obtain 2D
            cross-correlation function. This is based on cross-correlation theorem
            that states that Fourier transform of the cross-correlation of two
            functions is equal to the product of multiplication of the individual
            Fourier transforms, where one of them has been complex conjugated. '<br />'

       iii) The reversed 2D Fourier transform is computed to obtain 2D
            cross-correlation. This is based on cross-correlation theorem the states
            that Fourier transform of the cross-correlation of two functions is
            equal to the product of multiplication of the individual Fourier
            transforms, where one of them has been complex conjugated.   '<br />'

        iv) The X,Y-coordinates corresponding to maximum of correlation function
            are divided by 2 to obtain the center of object.              '<br />'

SUBROUTINES: FINDCENT, CENT_SYM

CALLER:      UTIL1
@


1.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
CG SYM    Center of Object - Quasi-symmetry Approximation ||  CG SYM
d6 2
a7 2
          Coordinates are listed with respect to the SPIDER image/volume center:  
          (NX/2 + 1, NY/2 + 1, NZ/2 + 1).
d28 1
a28 1
                 '<td>'[yi]                '</td>' 
d62 1
d68 1
d74 1
d80 1
@


1.4
log
@*** empty log message ***
@
text
@d5 3
a7 1
          between original image and the image after a 180-degree rotation.
d14 1
d16 23
a38 1
USAGE: CG SYM [x],[y],[xoff],[yoff]
d43 3
a45 3
NOTES: 1. Register variables [xoff],[yoff] receive integer approximations of the
          offset from the quasi-symmetry center. Registers [xr],[yr] receive real
          number coordinates of the offset from the quasi-symmetry center. 
@


1.3
log
@*** empty log message ***
@
text
@d55 1
a55 1
SUBROUTINES: CENT, CENT_SYM
@


1.2
log
@*** empty log message ***
@
text
@d1 2
a2 2
CG SYM    Center of Object - Quasisymmetry Approximation ||    CG SYM
                                                       (1/23/12)
d13 1
a13 1
USAGE: CG SYM [x],[y],[xr],[yr]
d18 4
a21 4
NOTES: 1. Register variables [x],[y] receive integer approximations of the
          center of quazisymmetry coordinates. Registers [xr],[yr] receive real
          number coordinates of the center of gravity. 
          To place the center of quasisymmetry at the origin one has to use the
d27 1
a27 1
          two-fold quasisymmetry of objects. This operation usually 
d32 1
a32 1
       4. The estimation of center of quasisymmetry in this algorithm is based
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
CG SYM    Center of Quasisymmetry  ||                   CG SYM
d4 2
a5 2
PURPOSE:  Compute center of quasisymmetry of image using cross-correlation between
          original image and image after a 180-degree rotation.
d19 3
a21 4
           center of quazisymmetry coordinates. Registers [xr],[yr] receive real
           number coordinates of the center of gravity. Coordinates are given in
           the X, Y order.
           To place the center of quasisymmetry at the origin one has to use the
d26 9
a34 2
       3. The operation is noise- and fool-proof. It's based on partial two-fold 
          symmetry of molecular complexes.
a35 3
       4.The estimation of center of quasisymmetry in this algorithm is based
       on cross-correlation between original image and image after a 180-degree
       rotation, and executed as following:                          '<br />'
d43 5
d52 2
a53 2
       iv) The maximum of correlation on (X,Y)-plane is divided by 2 to obtain
            the coordinates of center of quasisymmetry.
@
