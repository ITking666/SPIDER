head	1.8;
access;
symbols;
locks; strict;
comment	@.\" @;


1.8
date	2011.12.05.15.43.04;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2011.12.05.15.31.00;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2009.11.16.17.14.20;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2006.10.25.16.10.15;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2006.09.27.15.23.40;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2006.09.25.18.46.24;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.13.14.13.19;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.04.20.25.49;	author leith;	state Exp;
branches;
next	;


desc
@@


1.8
log
@*** empty log message ***
@
text
@
RR S      Read Register variable - from list of variables      RR S      
                                                            12/5/2011

PURPOSE:  To read value(s) from a list of values into a register 
          variable(s).  Useful to change register variables while inside
          a 'DO' loop.  

SEE ALSO: RR
          DO

USAGE:    RR S [var1],[var2]

          .VALUE(S): 1,2,3,4.,5,6.0,7,8,9,10
          [Enter the list of floating point value(s) to choose from.
           Maximum number of values is 150. Continuation lines are
           supported if the last value on a line is a comma.] 

          .POSITION WITHIN LIST: 4,5
          [Here the fourth and fifth values from the list 
           will be selected and the values placed in
           the register variables specified on the operation line.
           The number of values to be selected is determined by the
           number of register variables on the operation line.]
 
NOTES:    1.  'RR S' may be used within a DO-loop to enter a set of
          numbers successively into a register variable:     

          '<dl>'
          '<dt>'DO  [iter]=1,5                '</dt>'                           
             '<dd>'RR S [cutoff]              '</dd>'                        
             '<dd>' 4.3, 8.1, 0.12, 5.0, 8.55 '</dd>'
             '<dd>' [iter]                    '</dd>'               
             '<dd>' ~~~                       '</dd>'                                   
             '<dd>' ~~~                       '</dd>'                                   
          '<dt>' ENDDO                        '</dt>' 
          '</dl>' 
          '<br />'
                                    
          For iter=1, [cutoff] will be filled with the value; '&'nbsp; 4.3, '<br />'
          For iter=2, [cutoff] will be fulled with the value; '&'nbsp; 8.1, '<br />'
          and so  forth.                                          '<p />'

          In releases of SPIDER prior to version: 20  this
          could be done using the convention that any set of
          parameter inputs inside a 'DO LOOP' without an enclosing
          brace of '()' would automatically be treated as a 
          list selected by the loop index.  Sets of
          parameter input inside a 'DO LOOP' with an enclosing
          brace of '()' would be treated as a 
          constant list of values.  This behavior is the most
          common source of problems in SPIDER procedures and has been 
          dropped in version 20++. 

SUBROUTINES: READRQ, REG_SET, SHRINKQ, CHKSTR

CALLER:      DRIV1
@


1.7
log
@*** empty log message ***
@
text
@d34 2
a35 2
             '<dd>' ...                       '</dd>'                                   
             '<dd>' ...                       '</dd>'                                   
@


1.6
log
@formatiing, drop in version 20
@
text
@d2 2
a3 2
RR S       Read Register variable - from list of variables        RR S      
                                                            11/15/2009
d6 1
a6 1
          variable(s).  Useful to change input parameters while inside
d16 2
a17 1
           Maximum number of values is 24.] 
d19 3
a21 2
          .POSITION WITHIN LIST: 4
          [The fourth and fifth values will be selected and placed in
a25 1

d34 2
a35 3
             '<dd>' .                         '</dd>'                                   
             '<dd>' .                         '</dd>'                                   
             '<dd>' .                         '</dd>'                                   
d40 2
a41 3
 
          For iter=1, [cutoff] will be filled with the value 4.3, '<br />'
          for iter=2, [cutoff] will be fulled with the value 8.1, '<br />'
d52 2
a53 2
          common source of problems in SPIDER procedures and will 
          be dropped in version 20. 
a55 1

@


1.5
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            04/04/2006
d26 1
a26 1
          numbers successively into a register variable: '<br />'
d28 16
a43 13
'<pre>'
       DO LB1 [iter]=1,5                             
          RR S [cuttoff]                        
          4.3,8.1,0.12,5.0,8.55 
          [iter]                
          .                                     
          .                                     
          .                                     
       LB1                                      
 '</pre>'

          For I=1, [cuttoff] will be filled with the value 4.3, and so
          forth.'<p />'
d45 1
a45 1
          In releases of SPIDER prior to version: 16  this
d47 1
a47 1
          parameter inputs inside a DO LOOP without an enclosing
d50 1
a50 1
          parameter input inside a DO LOOP with an enclosing
d53 2
a54 2
          common source of problems in SPIDER procedures and has
          finally been dropped as of version 16. 
@


1.4
log
@title
@
text
@d7 1
a7 1
          a DO loop.  
a12 2
               '<or>'
          RR S X11,X12
d29 1
a29 1
       DO LB1 I=1,5                             
d31 2
a32 1
          4.3,8.1,0.12,5.0,8.55                 
@


1.3
log
@clarified
@
text
@d2 1
a2 1
RR S       Read Register variables - from list of variables        RR S      
d13 1
a13 1
            '<or>'
@


1.2
log
@pre
@
text
@d2 1
a2 1
RR S       Read Register variables from list of variables        RR S      
d7 1
a7 1
          a SPIDER DO loop.  
d31 8
a38 8
           DO LB1 I=1,5                             
              RR S [cuttoff]                        
              4.3,8.1,0.12,5.0,8.55                 
              .                                     
              .                                     
              .                                     
           LB1                                      
'</pre>'
@


1.1
log
@new
@
text
@d28 1
a28 1
          numbers successively into a register variable: '<br>'
d30 9
a38 7
              DO LB1 I=1,5                          '<br>'
              RR S [cuttoff]                        '<br>'
              4.3,8.1,0.12,5.0,8.55                 '<br>'
              .                                     '<br>'
              .                                     '<br>'
              .                                     '<br>'
              LB1                                   '<br>'
@

