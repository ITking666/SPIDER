head	1.17;
access;
symbols
	best-code:1.8
	pre-named-reg:1.8
	pre_GPL:1.8
	prec_CA:1.8
	oct21:1.7;
locks; strict;


1.17
date	2014.01.12.17.16.30;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2012.10.17.12.34.03;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2012.10.15.14.32.13;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2012.10.09.18.45.45;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2012.08.02.14.12.02;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2012.02.15.19.35.34;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2012.02.15.19.08.58;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2012.01.06.14.51.11;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2008.10.31.15.31.02;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.04.01.19.10.45;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.08.14.17.04.33;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	96.02.01.17.19.24;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	95.07.20.17.48.14;	author gopalak;	state Exp;
branches;
next	1.4;

1.4
date	95.07.19.20.36.45;	author gopalak;	state Exp;
branches;
next	1.3;

1.3
date	94.09.07.10.53.23;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.31.49;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.14.10;	author leith;	state Exp;
branches;
next	;


desc
@@


1.17
log
@enter
@
text
@
BC        Box Convolution                                   BC
                                                            10/10/10

PURPOSE:  Performs various contrast enhancement operations in 2D and 3D
	  using local averaging in real space. For each point on image (IN) 
          determine the local average (AV) of all
	  neighboring pixels within the box size.  The original image
	  intensity at that location is then replaced by a value which is a
	  function of the original intensity and the average of its
	  neighbors moderated by a weighting factor (F).              '<br \>'
          Four different functions are available to compute the
	  output pixel (OUT) intensity:                               '<br \>'
                                                                      '<br \>'
          '<b>'High-Pass Filtering.'</b>'                             '<br \>' 
           OUT = (IN - AV) * F + IN * (1-F)                           '<br \>' 
           F = 1.0 results in a pure high-pass filtered image.
           Values of F  between 1.0 and 0.0 result in images 
           with various degrees of high spatial frequency enhancement.'<br \>'
                                                                      '<br \>'

       '<b>'Low-Pass Filtering.'</b>'                                 '<br \>' 
           OUT = AV * F + IN * (1 - F)                                '<br \>' 
           F=1.0 results in a pure low-pass filtered image.  
           Values of F between 1.0 and 0.0 result in images 
           with various degrees of low spatial frequency 
           enhancement.                                               '<br \>'
                                                                      '<br \>'
       '<b>'Local Threshold Filtering'</b>'                           '<br \>'
           (Restricted to images that have been previously stretched 
           or histogram equalized).                                   '<br \>'
           OUT = (1-F) * IN  '&'nbsp;'&'nbsp;'&'nbsp;'&'nbsp; FOR IN '&'nbsp; <  AV  '<br \>'
           OUT = (1-F) * IN + F*2  '&'nbsp;         FOR IN '&'nbsp; >= AV            '<br \>' 
           F=1.0 results in a purely threshold filtered image.
           Values of F between 1.0 and 0.0 result in images with
           various proportions of the input image added on.           '<br \>'
                                                                      '<br \>'
       '<b>'Divisive Local Contrast Correction.'</b>'                 '<br \>'
           OUT = F * IN / (AV + EPS) + F * IN                         '<br \>' 
           where 'EPS' is
           an offset constant for avoiding zero division which is
           set to one tenth the global input average.  F = 1.0 
           results in a pure divisive-corrected image.  Values of
           F between 1.0 and 0.0 result in images with various
           degrees of divisive correction.]

SEE ALSO: FQ NP  
          FF  
          FF PLOT  

USAGE:    BC

          .INPUT FILE: IMG001
          [Enter name of image/volume to be enhanced.]

          .OUTPUT FILE: OUT001
          [Enter name for the enhanced image.]

           Following filter menu appears. 
           '<table border="0" cellpadding="0" >'
           '<tr>''<td>' '&'nbsp;'&'nbsp; H  '</td>' '<td>''&'nbsp;'&'nbsp; HIGH PASS FILTER  '</td>' '</tr>'
           '<tr>''<td>' '&'nbsp;'&'nbsp; L  '</td>' '<td>''&'nbsp;'&'nbsp; LOW PASS FILTER   '</td>' '</tr>'
           '<tr>''<td>' '&'nbsp;'&'nbsp; T  '</td>' '<td>''&'nbsp;'&'nbsp; THRESHOLD FILTER  '</td>' '</tr>'
           '<tr>''<td>' '&'nbsp;'&'nbsp; D  '</td>' '<td>''&'nbsp;'&'nbsp; DIVISIVE LOCAL FILTER'</td>' '</tr>'
           '</table>'

         .FILTER OPTION (H,L,T,D): T
          [Enter the desired convolution option.]

      If the input is an image SPIDER asks:

          '<div class='"'opt_inp'"'>'
         .BOX COLUMNS & ROWS:  5, 7
          [Enter X & Y dimensions of averaging box.  The
           dimensions may be different but they both must be '<b>'odd'</b>'.]
          '</div>'

      If the input is a volume SPIDER asks:
          '<div class='"'opt_inp'"'>'
         .BOX COLUMNS, ROWS, & SLICES: 5, 5, 5
          [Enter X, Y, & Z dimensions of averaging box.  The
           dimensions may be different but they all must be '<b>'odd'</b>'.]
          '</div>'

          .FILTER WEIGHT (0.0->1.0): 0.8
          [Enter weight for mixing (F).]
   
NOTE:     1. The margins are replaced by the nearest value possible to
          calculate. This can result in errors for structures filling
          the image close to boundaries and for large box dimensions.

SUBROUTINE: BOXX, AVERG, AVERG3

CALLER:     UTIL3
@


1.16
log
@*** empty log message ***
@
text
@d67 1
a67 1
         .ENTER FILTER OPTION (H,L,T,D): T
@


1.15
log
@*** empty log message ***
@
text
@d2 2
a3 5
BC        Box Convolution                                    BC      
                                                             08/03/12
SEE ALSO: FQ NP  
          FF  
          FF PLOT  
d11 1
a11 1
	  neighbors moderated by a weighting factor (F).           '<br \>'
d13 4
a16 4
	  output pixel (OUT) intensity:                 '<br \>'
                                                        '<br \>'
          '<b>'High-Pass Filtering.'</b>'               '<br \>' 
           OUT = (IN - AV) * F + IN * (1-F)             '<br \>' 
d22 2
a23 2
       '<b>'Low-Pass Filtering.'</b>'                '<br \>' 
           OUT = AV * F + IN * (1 - F)               '<br \>' 
d27 3
a29 3
           enhancement.                                   '<br \>'
                                                          '<br \>'
       '<b>'Local Threshold Filtering'</b>'               '<br \>'
d31 1
a31 1
           or histogram equalized).                         '<br \>'
d36 4
a39 4
           various proportions of the input image added on.    '<br \>'
                                                               '<br \>'
       '<b>'Divisive Local Contrast Correction.'</b>'          '<br \>'
           OUT = F * IN / (AV + EPS) + F * IN                  '<br \>' 
d46 4
@


1.14
log
@*** empty log message ***
@
text
@d9 1
a9 1
	  using local averaging in real spice. For each point on image (IN) 
@


1.13
log
@*** empty log message ***
@
text
@d4 3
d9 2
a10 2
	  using local averaging. For each point on image (IN) 
          it determines the local average (AV) of all
d14 2
a15 2
	  neighbors moderated by a weighting factor (F). '<br \>'
       .  Four different functions are available to compute the
d69 1
a69 1
      If the input is an image the following question appears:
d77 1
a77 1
      If the input is a volume the following question appears:
@


1.12
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                             02/15/12
d13 2
a14 2
	  output pixel (OUT) intensity:                 '<br \>''<br \>'

d16 1
a16 2
           '&'nbsp;'&'nbsp; OUT = (IN - AV) * F + IN * (1-F)         '<br \>' 

d19 2
a20 1
           with various degrees of high spatial frequency enhancement.'<br \>''<br \>'
d23 1
a23 3

           '&'nbsp;'&'nbsp; OUT = AV * F + IN * (1 - F)           '<br \>' 

d27 3
a29 3
           enhancement.                                   '<br \>''<br \>'
          
       '<b>'Local Threshold Filtering'</b>'                '<br \>'
d32 2
a33 5

           '&'nbsp;'&'nbsp; OUT = (1-F) * IN        '&'nbsp;'&'nbsp;'&'nbsp;'&'nbsp; FOR IN '&'nbsp; <  AV  '<br \>'

           '&'nbsp;'&'nbsp; OUT = (1-F) * IN + F*2  '&'nbsp;         FOR IN '&'nbsp; >= AV  '<br \>' 

d36 4
a39 5
           various proportions of the input image added on.   '<br \>''<br \>'

       '<b>'Divisive Local Contrast Correction.'</b>'               '<br \>'
           '&'nbsp;'&'nbsp; OUT = F * IN / (AV + EPS) + F * IN      '<br \>' 

d50 1
a50 1
          [Enter name of image/volume file to be enhanced.]
d53 1
a53 1
          [Enter the name of file for the enhanced image.]
d55 1
a55 1
           Following pattern menu appears. 
d63 1
a63 1
         .ENTER OPTION (H,L,T,D): T
d66 7
a72 4
         .BOX SIZE  COLS, ROWS: 5,6
          [Enter X & Y dimensions of averaging box.  Note that the
           dimensions may be different.  If only COLS is entered,
           ROWS=COLS will be assumed.]
d76 3
a78 2
          .BOX SIZE  SLICES: 5 
          [Enter Z dimension of averaging box. ]
d86 1
a86 2
          the image close to boundaries and for large local area (box)
          dimensions.
@


1.11
log
@rewrite
@
text
@d69 1
a69 1
         .ENTER OPTION (H/L/T/D): T
@


1.10
log
@nx
@
text
@d3 1
a3 1
                                                             10/31/08
d6 8
a13 1
          using local averaging.
d15 2
a16 4
USAGE:    BC

          .INPUT FILE: IMG001
          [Enter name of image/volume file to be enhanced.]
d18 1
a18 18
          .OUTPUT FILE: OUT001
          [Enter the name of file for the enhanced image.

          .(H)IGH PASS / (L)OW PASS / (T)HRES / (D)IVIS: H/L/T/D
          [Enter enhancement option:

       Option "H" - High-Pass Filtering.  
          '<div class='"'opt_inp'"'>'
           For each point (IN) of 
           the input image, the average (AV) of the surrounding 
           area within a box (see below) is computed. The output 
           image (OUT) is computed according to the following 
           formula:

               OUT = (IN - AV) * F + IN * (1-F)

           where F is a weighting factor (see below).  
           F=1.0 results in a pure high-pass filtered image.
d20 1
a20 2
           with various degrees of high resolution enhancement.
          '</div>'
d22 1
a22 2
       Option "L" - Low-Pass Filtering.  
          '<div class='"'opt_inp'"'>'
d24 1
a24 4
           For each point of the input 
           image, the average (AV) of a surrounding area within 
           a box (see below) is computed. The output image is 
           computed according to the following formula:
a25 3
               OUT = AV * F + IN * (1 - F)

           where F is a weighting factor (see below).  
d29 1
a29 2
           enhancement.
          '</div>'
d31 5
a35 8
       Option "T" - Local Threshold Filtering 
          '<div class='"'opt_inp'"'>'
           (restricted to images
           that have been previously stretched or histogram 
           equalized). For each point of the input image, the 
           average (AV) of a surrounding area is computed.  
           The output image is computed according to the 
           following formula:
d37 1
a37 2
               OUT = (1.-F)*IN       FOR IN < AV
               OUT = (1.-F)*IN+F*2.  FOR IN >= AV
a38 1
           where F is a weighting factor (see below).  
d41 4
a44 2
           various proportions of the input image added on.
          '</div>'
d46 3
a48 13
       Option "D" - Divisive Local Contrast Correction. 
          '<div class='"'opt_inp'"'>'
           For each point of
           the input image, the average (AV) of a surrounding 
           area within a box (see below) is computed.  Each point
           is divided by its local average. The formula for this 
           procedure is:

               OUT = F * IN / (AV + EPS) + FC * IN

           where F is a weighting factor (see below) and EPS is
           an offset constant for avoiding zero division.  (EPS
           is set to .1 times the global input average).  F=1.0 
a51 1
          '</div>'
d53 20
a72 1
          .LOCAL AREA SIZE  COLS, ROWS: 5,6
d77 1
a77 1
     If the input is a volume the following question appears:
d79 1
a79 1
          .LOCAL AREA SIZE  SLICES: 5 
d83 2
a84 2
          FILTER WEIGHT (0.0->1.0): 0.8
          [Enter weight for mixing]
d86 1
a86 2
       
NOTE:     The margins are replaced by the nearest value possible to
@


1.9
log
@*** empty log message ***
@
text
@d11 1
a11 1
          [Enter name of image file to be enhanced.]
d19 3
a21 1
       Option "H" - High-Pass Filtering.  For each point (IN) of 
d33 1
d35 4
a38 1
       Option "L" - Low-Pass Filtering.  For each point of the input 
d50 1
d52 3
a54 1
       Option "T" - Local Threshold Filtering (restricted to images
d68 1
d70 3
a72 1
       Option "D" - Divisive Local Contrast Correction. For each point of
d82 1
a82 1
           is set to .1 times the global input average).  F=1.0
d86 1
d88 1
a88 2

          .LOCAL AREA SIZE  COL, ROWS: 5,6
d90 2
a91 2
          dimensions may be different.  If only NSAM is entered,
          NROW=NSAM will be assumed.]
d94 1
d97 1
a97 1

@


1.8
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                             4/1/02
d10 1
a10 1
          .INPUT FILE: H_PIC001
d14 1
a14 3
          [Enter the name of the file where enhanced image is to be put.
           Sample Outputs : 1:(H)IGH PASS- H_IMG010, 2:(L)OW PASS - H_IMG011,
           3:(T)HRES - H_IMG012, 4: (D)IVIS - H_IMG013]
d16 1
a16 1
          (H)IGH PASS / (L)OW PASS / (T)HRES / (D)IVIS: H/L/T/D
d19 25
a43 25
           Option "H" - High-Pass Filtering.  For each point (IN) of 
                        the input image, the average (AV) of the surrounding 
                        area within a box (see below) is computed. The output 
                        image (OUT) is computed according to the following 
                        formula:

                        OUT = (IN - AV) * F + IN * (1-F)

                        where F is a weighting factor (see below).  
                        F=1.0 results in a pure high-pass filtered image.
                        Values of F  between 1.0 and 0.0 result in images 
                        with various degrees of high resolution enhancement.

           Option "L" - Low-Pass Filtering.  For each point of the input 
                        image, the average (AV) of a surrounding area within 
                        a box (see below) is computed. The output image is 
                        computed according to the following formula:

                        OUT = AV * F + IN * (1 - F)

                        where F is a weighting factor (see below).  
                        F=1.0 results in a pure low-pass filtered image.  
                        Values of F between 1.0 and 0.0 result in images 
                        with various degrees of low spatial frequency 
                        enhancement.
d45 29
a73 29
           Option "T" - Local Threshold Filtering (restricted to images
                        that have been previously stretched or histogram 
                        equalized). For each point of the input image, the 
                        average (AV) of a surrounding area is computed.  
                        The output image is computed according to the 
                        following formula:

                        OUT = (1.-F)*IN       FOR IN < AV
                        OUT = (1.-F)*IN+F*2.  FOR IN >= AV

                        where F is a weighting factor (see below).  
                        F=1.0 results in a purely threshold filtered image.
                        Values of F between 1.0 and 0.0 result in images with
                        various proportions of the input image added on.

           Option "D" - Divisive Local Contrast Correction. For each point of
                        the input image, the average (AV) of a surrounding 
                        area within a box (see below) is computed.  Each point
                        is divided by its local average. The formula for this 
                        procedure is:

                            OUT = F * IN / (AV + EPS) + FC * IN

                        where F is a weighting factor (see below) and EPS is
                        an offset constant for avoiding zero division.  (EPS
                        is set to .1 times the global input average).  F=1.0
                        results in a pure divisive-corrected image.  Values of
                        F between 1.0 and 0.0 result in images with various
                        degrees of divisive correction.]
d75 2
a76 1
          .LOCAL AREA SIZE  COL,ROWS: 5,6
@


1.7
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                             9/7/94
d27 1
a27 1
                        OUT = (IN-AV)*F+IN*(1-F)
d39 1
a39 1
                        OUT = AV*F+IN*(1-F)
d68 1
a68 1
                            OUT = F*IN/(AV+EPS)+FC*IN
d78 1
a78 1
          [Enter dimensions of averaging box.  Note that the
d83 2
a84 4
          .LOCAL AREA SIZE  SLICES: 5,6
          [Enter dimensions of averaging box.  Note that the
          dimensions may be different.  If only NSAM is entered,
          NROW=NSAM will be assumed.]
@


1.6
log
@*** empty log message ***
@
text
@d52 1
a52 1
                        following fromula:
@


1.5
log
@modified man page
.
.
@
text
@d2 1
a2 1
BC        Box Convolution                                     BC      
d15 1
a15 1
	   Sample Outputs : 1:(H)IGH PASS- H_IMG010, 2:(L)OW PASS - H_IMG011,
d99 1
@


1.4
log
@modified manual page
.
.
@
text
@d14 2
a15 2
          [Enter name of the file where enhanced image is to be put.
	   SAMPLE OUTPUTS : 1:(H)IGH PASS- H_IMG010, 2:(L)OW PASS - H_IMG011,
@


1.3
log
@fixed prompts, cosmetic
@
text
@d10 1
a10 1
          .INPUT FILE: PIC001
d14 3
a16 1
          [Enter name of file where enhanced image is to be put.]
@


1.2
log
@replaced_tabs
@
text
@d3 1
a3 1
                                                            3/7/90
a7 5
WARNING:  The margins are replaced by the nearest value possible to
          calculate. This can result in errors for structures filling
          the image close to boundaries and for large local area (box)
          dimensions.

d16 1
a16 1
          .(H)IGH PASS/(L)OW PASS/(T)HES/(D)IVIS: H/L/T/D
d75 1
a75 1
          .ENTER BOX SIZE NSAM,NROW: 5,6
d80 8
a87 1
          .FILTER WEIGHT: 0.8
d89 6
a94 1
          
d96 2
a97 2
Subroutine: BOXX, AVERG, AVERG3
Caller:     UTIL3
@


1.1
log
@Initial revision
@
text
@@
