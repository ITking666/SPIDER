head	1.24;
access;
symbols
	best-code:1.21
	pre-named-reg:1.21
	pre_GPL:1.21
	prec_CA:1.17
	oct21:1.11;
locks; strict;


1.24
date	2011.06.14.13.02.38;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2010.12.13.13.50.22;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2009.10.05.13.18.59;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2005.05.23.21.25.12;	author bimal;	state Exp;
branches;
next	1.20;

1.20
date	2004.05.14.21.42.20;	author bimal;	state Exp;
branches;
next	1.19;

1.19
date	2004.05.14.21.36.55;	author bimal;	state Exp;
branches;
next	1.18;

1.18
date	2004.05.14.21.26.34;	author bimal;	state Exp;
branches;
next	1.17;

1.17
date	2002.05.07.19.00.40;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2002.05.06.20.33.49;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2002.05.06.14.33.29;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2001.12.12.16.09.08;	author bimal;	state Exp;
branches;
next	1.13;

1.13
date	2001.05.18.14.02.46;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.18.13.58.27;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	98.06.10.13.17.33;	author pawel;	state Exp;
branches;
next	1.10;

1.10
date	97.08.25.19.05.50;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	97.08.25.15.21.42;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	97.07.22.14.53.00;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	96.08.14.17.25.13;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	96.06.18.15.29.14;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.02.16.17.06.22;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	95.07.26.16.59.19;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.12.01.18.56.12;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.35.01;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.15.48;	author leith;	state Exp;
branches;
next	;


desc
@@


1.24
log
@*** empty log message ***
@
text
@
RT 3D     RoTate - volume, fast, tri-quadratic interpolation      RT 3D 
                                                            04/11/02

PURPOSE:  Rotate a volume by three Eulerian angles using
          tri-quadratic interpolation.

SEE ALSO: RT      
          RT 3    
          RT 3A   
          RT 3DS  
          RT 3L  
          RT 90  
          RT B    
          RT M   

USAGE:    RT 3D

          .INPUT FILE: PIC001
          [Enter name of the file to be rotated.]

          .OUTPUT FILE: ROT001
          [Enter name of the file where the rotated volume is to
          be stored.]

          .PHI, THETA, &  PSI: 10.5, 13.7, 45.8
          [Enter the rotation angles Phi (around Z),  
           Theta (around Y), and 
           Psi (around Z).]
	  
NOTES: 1. Program reads first volume into the memory - larger volumes
          may not fit. In this case use 'RT 3' instead. Unfortunately 
          'RT 3' gives slightly incorrect results, does not use the 
          proper interpolation scheme, and has sign of theta reversed.
  
       2. First rotation  is done around Z-axis (clockwise), 
          second rotation is done around Y-axis (clockwise) and  
          third  rotation is done around Z-axis (clockwise).
          All rotations are done in space coordinate system.

       3. Rotation matrix used:
       '<pre>'
       R = R(psi) * R(theta) * R(phi)

        c  s  0        c  0 -s      c  s  0
       -s  c  0    *   0  1  0   * -s  c  0
        0  0  1        s  0  c      0  0  1
       '</pre>'

       4. In the 'corners', old values are left.  Sometimes this
          leads to non-intuitive results.  E.g. a simple rotation around
          the Z axis (psi = 0) leave the first and last slices of
          a volume unrotated. If this causes problems you will have to
          mask the resulting volume.

       5. How to determine parameters to match volumes:  '<br />'
          If both X and Y axis rotations are needed, 
          it may be simpler to use two rotations 
          consecutively.                                 '<br />'
          Pick a slice (either X or Y) from the 
          volume and do a test rotation in 2D using 
          operation: 'RT'.                               '<br />'
          Change the sign of the angle you 
          determined using 'RT' and 
          apply the angles as shown here.                '<br />'
          For X rotation:    90, -angle,   -90           '<br />'
          For Y rotation:     0, -angle,    0            '<br />'
          (Note provided by: Mike Marko)
          (Interpolation quality will be poorer.)

       7. Implemented by A. Leith.

SUBROUTINES: ROTAS3, ROTS3Q, BLDR

CALLER:      UTIL3
@


1.23
log
@comments on first/last slice
@
text
@d2 1
a2 1
RT 3D     RoTate - volume, fast, quadratic interpolation      RT 3D 
a11 1
          RT 3AS   
a15 1
          RT SQ   
d27 3
a29 2
          [Enter the rotation angles Phi (around Z),  Theta (around Y),
          and Psi (around Z).]
d33 2
a34 2
          'RT 3' gives slightly incorrect results and does not use the 
          proper interpolation scheme and has sign of theta reversed.
d36 3
a38 3
       2. First rotation is done around Z-axis (clockwise), second
          rotation is done around Y-axis (clockwise) and the 
          third rotation is done around Z-axis (clockwise).
d56 1
a56 1
       5. How to determeine parameters to match volumes. '<br />'
d68 2
a69 2
          (This note provided by: Mike Marko)
          (Interpolation quality will be poorer)
@


1.22
log
@cosmetic
@
text
@d5 2
a6 2
PURPOSE:  Rotates a volume by three Eulerian angles.
          Uses tri-quadratic interpolation.
d37 1
a37 3
       2. Tri-quadratic interpolation scheme is used.

       3. First rotation is done around Z-axis (clockwise), second
d42 27
a68 20
       4. Rotation matrix used:
          '<pre>'
          R = R(psi) * R(theta) * R(phi)

           c  s  0        c  0 -s      c  s  0
          -s  c  0    *   0  1  0   * -s  c  0
           0  0  1        s  0  c      0  0  1
          '</pre>'

       5. In the corners, old values are left.

       6. How to rotate volumes.                    '<br />'
          If both X and Y axis rotations are needed, it may be simpler
          to use two rotations consecutively.       '<br />'
          Pick a slice (either X or Y) from the volume and do a test 
          rotation in 2D using operation: 'RT'.     '<br />'
          Change the sign of the angle you determimed using 'RT' and 
          apply the angles as shown here.           '<br />'
          For X rotation:    90, -angle,   -90      '<br />'
          For Y rotation:     0, -angle,    0       '<br />'
@


1.21
log
@corrected direction of rotation
@
text
@d8 10
a17 10
SEE ALSO: RT     (RoTate - image or volume, use average as background)
          RT 3   (RoTate - volume, slow)
          RT 3A  (RoTate - volume, around arbitrary center)
          RT 3DS (RoTate - volume,  linear interp.)
          RT 3AS (RoTate - volume, around arbitrary center, linear interp.)
          RT 3L  (RoTate - volume, around arbitrary line)
          RT 90  (RoTate - image or volume, by 90, 180, or 270 degrees)
          RT B   (RoTate - image or volume, supply background)
          RT M   (Rotate - image or volume, use minimum as background)
          RT SQ  (RoTate - image or volume, shift, use quadratic interpolation)
d45 1
a45 1
          '<PRE>'
d51 1
a51 1
          '</PRE>'
d55 1
a55 1
       6. How to rotate volumes. '<BR>'
d57 1
a57 1
          to use two rotations consecutively.   '<BR>'
d59 1
a59 1
          rotation in 2D using operation: 'RT'. '<BR>'
d61 3
a63 3
          apply the angles as shown here.       '<BR>'
          For X rotation:    90, -angle,   -90    '<BR>'
          For Y rotation:     0, -angle,    0     '<BR>'
@


1.20
log
@*** empty log message ***
@
text
@d39 1
a39 1
       3. First rotation is done around Z-axis (counter clockwise), second
d41 1
a41 1
          third rotation is done around Z-axis (counter clockwise).
@


1.19
log
@*** empty log message ***
@
text
@d30 1
a30 1
	  and Psi (around Z)].
@


1.18
log
@corrected Euler angle write-up
@
text
@d30 2
a31 2
	  and Psi (around Z)]. All rotations are done in space coordinate system.
 
d42 1
@


1.17
log
@*** empty log message ***
@
text
@d29 2
a30 2
          [Enter the rotation angles Phi (around Z),  Theta (around 
          the new Y after the first rotation by Phi), and Psi (around the new Z)]. 
d40 2
a41 2
          rotation is done around new Y-axis (clockwise) and the 
          third rotation is done around new Z-axis (counter clockwise).
@


1.16
log
@*** empty log message ***
@
text
@d28 3
a30 3
          .PHI & THETA: 10.5, 13.7 
          [Enter rotation angles Phi (around Z) and Theta (around 
          the new Y after the first rotation by Phi)
a31 3
          .PSI: 10.5  
          [Enter rotation angle PSI (around the new Z)]. 

@


1.15
log
@*** empty log message ***
@
text
@d11 3
a13 1
          RT 3AL (RoTate - volume, around arbitrary center, linear interp.)
@


1.14
log
@*** empty log message ***
@
text
@d2 2
a3 2
RT 3D     RoTate - volume, fast                            RT 3D
                                                        05/18/01
d5 2
a6 1
PURPOSE:  Rotates a volume by the three Eulerian angles.
d11 1
a13 1
          RT C   (Rotate - image, around arbitrary center, for small files)
d20 1
a20 1
          [Enter the name of the file to be rotated.]
d23 1
a23 1
          [Enter the name of the file where the rotated volume is to
d26 6
a31 6
          .PHI, THETA: 10.5, 13.7 
          [Enter the rotation angles Phi (around Z) and Theta (around 
          the new Y after the first rotation by Phi).]

          .Psi: 45.8
          [Enter the third rotation angle (around the new Z)]. 
d38 1
a38 3
       2. Tri-linear interpolation scheme is used.

       3. Non-matching points are left without a change.
d40 1
a40 1
       4. First rotation is done around Z-axis (counter clockwise), second
d44 1
a44 1
       5. Rotation matrix used:
d53 1
a53 1
       6. In the corners, old values are left.
d55 1
a55 1
       7. How to rotate volumes. '<BR>'
d65 3
a67 2
 
       8. Implemented by Paul Penczek.
d69 1
a69 1
SUBROUTINES: ROTAS3, ROTS3, BLDR
@


1.13
log
@typo
@
text
@d41 3
a43 1
       4. All the rotations are done clockwise.
d45 1
a45 1
       4. Rotation matrix used:
d54 1
a54 1
       5. In the corners, old values are left.
d56 1
a56 1
       6. How to rotate volumes. '<BR>'
d67 1
a67 1
       7. Implemented by Paul Penczek.
@


1.12
log
@note on how to use
@
text
@d61 2
a62 2
          For Y rotation:     0, -angle   0     '<BR>'
          For Y rotation:    90,  angle  -90    '<BR>'
@


1.11
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                        07/25/95
d25 1
a25 1
          .Phi, Theta: 10.5,13.7 
d54 12
a65 1
       6. Implemented by Paul Penczek.
@


1.10
log
@*** empty log message ***
@
text
@d39 1
a39 1
       3. Non-matching points are replaced by the average.
@


1.9
log
@changed SEE ALSO, title & cosmetic
@
text
@d7 1
a7 1
SEE ALSO: RT     (RoTate - use average as background)
d9 7
a15 7
          RT 3A  (RoTate - volume around an arbitrary center)
          RT 90  (RoTate - volume, by 90, 180, or 270 degrees)
          RT B   (RoTate - supply Background)
          RT C   (Rotate - center selected by user, for small files)
          RT M   (Rotate - use minimum as background)
          RT SQ  (RoTate - and Shift, with Quadratic interpolation)
    
@


1.8
log
@,
@
text
@d2 1
a2 1
RT 3D     RoTate a volume, fast                            RT 3D
d7 8
a14 9
SEE ALSO:   RT      (Rotate , Use average as background)
            RT 3A    (RoTate a volume around an arbitrary center)
            RT B    (Rotate , Supply background)
            RT M    (Rotate, Use minimum background)
            RT C    (Rotate, Center selected by user)
            RT 3    (Rotate a volume, slow, buggy)
            RT 3CO  (Calculate composite rotation of a series of rotations )
            RT 90   (Rotate a volume by 90, 180, or 270 degrees)
            RT SQ   (Rotate and shift using quadratic interpolation)
@


1.7
log
@*** empty log message ***
@
text
@d8 1
@


1.6
log
@tags and cosmetic and prompts fixed
@
text
@d27 1
a27 1
          the new Y after the firts rotation by Phi).]
d33 1
a33 1
          may not fit. In this case use 'RT 3' istead. Unfortunately 
@


1.5
log
@bldr added
@
text
@d18 1
a18 1
          .INPUT1 FILE: PIC001
d26 2
a27 2
          [Enter the rotation angles Phi (around Z) and Theta (around the
          new Y after the firts rotation by Phi).]
d33 3
a35 3
          may not fit. In this case use RT 3 istead. Unfortunately RT 3
          gives slightly incorrect results and does not use the proper
          interpolation scheme and has sign of theta reversed.
d37 1
a37 1
       2. The tri-linear interpolation scheme is used.
d39 1
a39 1
       3. The non-matching points are replaced by the average.
d44 2
a46 2
          R=R(psi)*R(theta)*R(phi)

d50 1
d52 1
a52 1
       5. In the corners old values are left.
d56 1
a56 1
Subroutines: ROTAS3, ROTS3, BLDR
d58 1
a58 1
Caller:      UTIL3
@


1.4
log
@redescribed purpose
@
text
@d55 1
a55 1
Subroutines: ROTAS3, ROTS3
@


1.3
log
@remove IP BS, RT SA, RT SC, RT SH and aprb.man, apsb.man
@
text
@d2 2
a3 2
RT 3D     RoTate a volume                                RT 3D
                                                        03/09/90
d11 1
a11 1
            RT 3    (Rotate a volume)
d51 1
a51 1
       5. In the cornersold values are left.
d56 2
a57 1
Cotask:      UTIL3
@


1.2
log
@replaced_tabs
@
text
@d7 3
a9 3
SEE ALSO:     RT      (Rotate , Use average as background)
             RT B    (Rotate , Supply background)
             RT M    (Rotate, Use minimum background)
d11 2
a12 2
             RT 3    (Rotate a volume)
           RT 3CO  (Calculate composite rotation of a series of rotations )
a13 3
            RT SA   (Rotate using b-Spline interpolation and average as background)
            RT SC   (Rotate using B-Spline interpolation and leave corners unaffected)
            RT SH   (Rotate and shift using B-Spline interpolation and leave corners unaffected)
@


1.1
log
@Initial revision
@
text
@@
