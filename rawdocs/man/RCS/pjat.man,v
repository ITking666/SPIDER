head	1.8;
access;
symbols
	best-code:1.7
	pre-named-reg:1.7
	pre_GPL:1.7
	prec_CA:1.6
	oct21:1.6;
locks; strict;
comment	@# @;


1.8
date	2006.09.26.17.51.05;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2004.09.02.13.53.04;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.10.05.12.59.56;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.08.26.19.52.45;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.09.10.12.49.03;	author adri;	state Exp;
branches;
next	1.3;

1.3
date	95.09.22.14.40.22;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.12.28.05.22.00;	author sibal;	state Exp;
branches;
next	1.1;

1.1
date	94.09.07.20.31.17;	author mladjadj;	state Exp;
branches;
next	;


desc
@@


1.8
log
@title
@
text
@
PJ AT     Project - 3D volume using exponential Attenuation        PJ AT
                                                               09/26/06    

PURPOSE:  Computes a projection of a 3D density distribution along
          two specified angles (azimuth angle, PHI, and tilt angle,
          THETA), using the formula:

         '<pre>'
           p(i) = SUM      [ p(i) + exp(-a*v(i,z))+ b*v(i,z) ]
                 over z
         '</pre>'

          Basic idea: The object consists of slices, which absorb
          the light comming from the back (exponential part) and also 
          illuminate the following slice (additive part). 
   
USAGE:    PJ AT 

          .INPUT VOLUME: PIC001
          [Enter the name of the file whose projection is to be
          computed. Should be a cube!]
       
          .PROJECTION SAMPLE DIM.: 110
          [Enter the sample dimension for the projection file equal
          to, or smaller than, the volume sidelength.  Arbitrary
          dimensions can be used.]

          .OUTPUT FILE: PRJ001
          [Enter the name of the file where the projection is to be
          stored.]

          .AZIMUTH ANGLE(PHI): 45.5
          [Enter the azimuth angle, in degrees.]

          .TILT ANGLE(THETA): -30.0
          [Enter the tilt angle, in degrees.]

          .SCALE FACTS IN EXP, SUM: 1., 1.
          [Enter scale factors: the first is 'a' and the second is 'b' 
          in the formula above.]

          .THRESHOLD VALUE (BELOW), ADD. CONST: 0.1, 0.5
          [Enter threshold value. Values in the volume below the
          threshold will not be used in the calculation of the
          projection. The additive constant is added to 
          each voxel that has passed the threshold criterion. 
          The effect of this value is a steeper transition between
          background and particle.]

NOTES:    1. '<strong>'Not tested!'</strongs>'
 
SUBROUTINES: MRPRREP

CALLER:      VTIL2
@


1.7
log
@cube
@
text
@d2 2
a3 2
PJ AT     ProJect 3D volume using exponential ATtenuation        PJ AT
                                                               09/02/04    
d8 6
a13 4
         '<PRE>'
             p(i) = SUM      [ p(i) + exp(-a*v(i,z))+ b*v(i,z) ]
                   over z
         '</PRE>'
d39 1
a39 1
          .SCALE FACTS IN EXP, SUM: 1.,1.
d43 1
a43 1
          .THRESHOLD VALUE (BELOW), ADD. CONST: 0.1,0.5
d51 1
a51 1
NOTES:    1. '<STRONG>'Not tested!'<STRONG>'
@


1.6
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                                 09/10/96    
d18 1
a18 1
          .THREED FILE: PIC001
d20 1
a20 1
          computed.]
@


1.5
log
@*** empty log message ***
@
text
@d49 1
a49 1
NOTES:    1. '<STRONG>'Not Distributed!'<STRONG>'
@


1.4
log
@cleanup
@
text
@d11 1
a11 1
         ',/PRE>'
a14 10


SEE ALSO: PJ 3     (ProJect 3D volume)
          PJ 3Q    (ProJect 3D volume using Eulerian angles)
          PJ 3T    (ProJect 3D volume using internal Threshold)
          PJ COL   (ProJect -- 2-COLor surface representation)
          PJ INTER (ProJect -- INTERlace 2 surface representations)
          PJ SHAD  (ProJect -- cosine SHADing)
          PJ ST    (ProJect -- Surface represenTation)
          PJ CYL   (ProJect onto CYLinder)
d49 3
a51 1
Subroutines: MRPRREP
d53 1
a53 1
Caller:      VTIL2
@


1.3
log
@removed pj_rad
@
text
@d2 2
a3 1
PJ AT     ProJection--3-dimensional, using exponential ATtenuation  PJ AT    
d5 1
a5 1
PURPOSE:  Computes a projection of a 3-D density distribution along
d7 2
a8 1
          THETA), using the formula: 
d11 2
a12 2

          Basic idea: The object consists out of slices, that absorb
d14 1
a14 1
          illuminate the following slize (additive part). 
d17 8
a24 8
SEE ALSO: PJ 3     (3D Projection)
          PJ 3Q    (Projection of 3D volumes)
          PJ 3T    (3D projection with internal threshold)
          PJ COL   (2 color surface representation)
          PJ INTER (interlace 2 surface representation)
          PJ SHAD  (cosine shading)
          PJ ST    (surface representation)
          PJ CYL   (Projection onto cylinder)
d48 2
a49 2
          [Enter scale factors, first is a, second is b in formula
          above]
d54 1
a54 1
          projection. The const , that can be added is added to 
d56 1
a56 1
          The effect of this value is a stronger transition between
@


1.2
log
@Anchors in SEE ALSO removed
Sibal. Wed Dec 28 00:12:27 EST 1994
@
text
@a22 1
          PJ RAD   (Radon transformation)
d58 2
a59 1
Cotask:      VTIL2
@


1.1
log
@non-distibution manual page
@
text
@d15 9
a23 9
SEE ALSO: <a HREF="$HT_LOC$PJ3.MAN">     PJ 3   </a> (3D Projection)
          <a HREF="$HT_LOC$PJ3Q.MAN">    PJ 3Q   </a> (Projection of 3D volumes)
          <a HREF="$HT_LOC$PJ3T.MAN">    PJ 3T   </a> (3D projection with internal threshold)
          <a HREF="$HT_LOC$PJCOL.MAN">   PJ COL  </a> ( 2 color surface representation)
          <a HREF="$HT_LOC$PJINTER.MAN"> PJ INTER</a> (interlace 2 surface representation)
          <a HREF="$HT_LOC$PJSHAD.MAN">  PJ SHAD </a> (cosine shading)
          <a HREF="$HT_LOC$PJST.MAN">    PJ ST   </a> (surface representation)
          <a HREF="$HT_LOC$PJCYL.MA1">    PJ CYL  </a> (Projection onto cylinder)
          <a HREF="$HT_LOC$PJRAD.MA1">    PJ RAD   </a> (Radon transformation)
@
