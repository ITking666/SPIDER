head	1.31;
access;
symbols
	best-code:1.24
	pre-named-reg:1.24
	pre_GPL:1.24
	prec_CA:1.20
	oct21:1.18;
locks; strict;


1.31
date	2014.01.12.16.01.00;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2013.06.12.15.00.30;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2012.08.06.17.40.47;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2012.05.23.14.47.14;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2010.07.28.13.57.04;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2010.07.28.13.54.11;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2009.09.03.17.32.05;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2004.07.09.14.57.32;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2004.05.07.15.49.59;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2004.03.09.16.39.45;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2004.01.02.20.41.58;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.03.15.52.34;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2003.01.21.21.38.10;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	99.08.10.15.48.22;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	99.05.26.18.29.40;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	98.10.29.18.57.02;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	98.06.01.19.18.28;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	98.06.01.19.00.29;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	97.12.02.19.30.26;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	97.11.24.20.08.04;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	97.11.20.14.16.34;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.11.19.17.39.17;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	97.07.14.18.54.55;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	97.07.11.15.08.16;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.04.22.15.12.01;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.03.25.19.12.28;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.02.22.19.59.58;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.01.16.21.43.57;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.08.19.11.16.06;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.36.36;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.16.31;	author leith;	state Exp;
branches;
next	;


desc
@@


1.31
log
@*** empty log message ***
@
text
@
VM         System call                                           VM      
                                                            7/27/10

PURPOSE:  To access the operating system from SPIDER using a 
          system (Unix) command.
          '<b>' Obsolete legacy operation use  
          '<a href='"'sys.html'"'>''SYS''</a>' operation now.'</b>'

SEE ALSO:  EV

USAGE:    VM
          '&'nbsp; <or> '<br />'
          VM M
          [For 'VM M' multiline input is accepted until a line
          has only a intial '.' (dot).  To put a blank
          at the end of a line, place it at the beginning of
          the following line or it will disappear.]

          .SYSTEM COMMAND:  '&'nbsp;  ls  '&'nbsp; *.OMM          
          [Enter the system command you want executed.  This may also
          be a Unix shell command file.                           '<br />' 
          '<a href='"'../user_doc.html#file_names'"'>'
          Substitution '</a>' of do-loop indices, symbolic and register variables
          is allowed anywhere in the command line.]

NOTE: 1.  SPIDER comments are not accepted in the system command line because 
          the SPIDER comment character (;) is used to string system commands 
          together on the same line in Unix.

      2.  You must specify the extension for any filenames within
          the system command as they are '<b>'NOT'</b>' appended automatically
          by SPIDER (as there is no way to recognize what is a 
          filename).  You can use the string:
          '<i>'$DATEXT '</i>' to substitute the current SPIDER data 
          extension into the corresponding position in your command
          line.  You can use the string:
          '<i>'$PRJEXT '</i>' to substitute the current SPIDER project 
          extension into the corresponding position in your command
          line.

      3.  The "VM" name for this operation is left over from the
          VAX/VMS system operation name.


      4.  Sample of substituting register variables in floating point 
          format into a 'VM' system command:                                                  '<p />'

          '<b>'
          [var] = 34.56                                                                       '<p />'

          VM   '&'nbsp;'&'nbsp;          ; To write out the following: Var is now= 34.5600    '<br />'
            '&'nbsp;'&'nbsp;echo Var is now= {%F7.4%[var]}                                    '<p />'

          VM    '&'nbsp;'&'nbsp;         ; To write out the following: Var is now= 3.4560E+01 '<br />'
            '&'nbsp;'&'nbsp;echo Var is now= {%ES11.4%[var]}                                  '<p />'
          '</b>'

      5.  Sample of substituting register variables in integer 
          format into a 'VM' system command:                                                  '<p />'
          '<b>' 
          [var] = -1                                                                          '<br />'
          VM    '&'nbsp;'&'nbsp;         ; To write out the following: Var is now= -1         '<br />'
            '&'nbsp;'&'nbsp;echo Var is now= {%I3%[var]}                                      '</b>''<p />'

          '</b>'

      6.  Sample of substituting string variables into a 'VM' system command:                                                  '<p />'
          '<b>'
          [filename] = 'gifile.gnu'                                                           '<br />'
          VM    '&'nbsp;'&'nbsp;         ; To write out the following: cat file.gnu           '<br />'
            '&'nbsp;'&'nbsp; cat [filename]                                                   '</b>''<p />'

          Place the FORTRAN format within '%' symbols followed by the register
          whose contents are to be substituted.  All of this has to be
          enclosed within the wavy brackets.       

      7.  Samples of usage within SPIDER loops.

 '<pre>'
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'<p />'
  -- Sample loop for converting series of 1024 x 512 raw images 
  -- to SGI rgb format:                                                 '<p />'
  [nsam] = 1024     ; Nsam
  [nrow] = 512      ; Nrow
  DO I=1,5          ; Loop
     VM             ; Use "frombin" to convert images
     frombin raw{***i}.$DATEXT   sgi{***i}.rgb {****[nsam]} {***[nrow]} 
  ENDDO             ; End loop
  '<p />'
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'<p />'
  -- Sample loop for renaming/renumbering series of SPIDER images:    '<p />'
  [n]=33 
  DO I=1,4               ; Loop
     VM                  ; System call for renumbering
       cp jnk{***[n]}.dat  jnk444{***I}.dat 
     [n]=[n]+1           ; Increment output file number counter
  ENDDO                  ; End loop
  '<p />'
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'<p />'
  -- Sample loop for consecutively renaming/renumbering series of SPIDER 
  -- images while skipping any missing image numbers:                  '<p />'
  [num]=0                     ; Initialize output file number counter
  DO [it]=1,4                 ; Loop
     IQ FI [exists]           ; Use "IQ FI" to see if file exists
       jnk{***[it]}           ; Filename
     ;
     IF([exists].LE.0)CYCLE   ; Skip if file not found
     [num]=[num]+1            ; Increment output file number counter
     VM                       ; System call for renaming/renumbering SPIDER images
       cp jnk{***[it]}.dat  jnk444{***[num]}.dat 
  ENDDO                       ; End loop
  '<p />'
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx '<p />'
  -- Sample showing symbolic parameter substitution within a procedure: '<p />'
  [var]=55          ; Set register variable outside of procedure  
                    ;  (binding time for parameter substitution is
                    ;   before procedure is executed!)
  @@testvm           ; Invoke '<i>'testvm'</i>' SPIDER procedure
  doc               ; Value given to: FILENAME PREFIX solicited
                    ;   by '<i>'testvm'</i>' procedure

  Contents of invoked procedure '<i>'testvm'</i>':

      FR                             
        ?FILENAME PREFIX?[pre]    
      VM                            
        rm [pre]{***[var]}.$DATEXT 
  
  Result of invoked procedure:
      rm doc055.DAT
  '<p />'
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

 '</pre>'


SUBROUTINES: VMS

CALLER:      DRIV1
@


1.30
log
@*** empty log message ***
@
text
@d126 1
a126 1
        ?ENTER FILENAME PREFIX?[pre]    
@


1.29
log
@*** empty log message ***
@
text
@d7 2
d15 4
d31 1
a31 6
      2.  For 'VM M' multiline input is accepted until a line
          has only a intial '.' (dot).  To put a blank
          at the end of a line, place it at the beginning of
          the following line or it will disappear.

      3.  You must specify the extension for any filenames within
d42 1
a42 1
      4.  The "VM" name for this operation is left over from the
a44 7
      5.  Sample of substituting Unix system environment variables into 
          a 'VM' system command.                                   '<p />'
          
          '<b>'
          VM   '&'nbsp;'&'nbsp;          ; To write out the current directory '<br />'
          echo Current dir. is now= {$PWD}                         '<p />'
          '</b>'
d46 1
a46 2
  
      6.  Sample of substituting register variables in floating point 
d59 1
a59 1
      7.  Sample of substituting register variables in integer 
d68 1
a68 1
      8.  Sample of substituting string variables into a 'VM' system command:                                                  '<p />'
d72 1
a72 1
            '&'nbsp;'&'nbsp; cat [filename]                                                   '</b>'  '<p />'
d78 1
a78 1
      9.  Samples of usage within SPIDER loops.
@


1.28
log
@*** empty log message ***
@
text
@d18 2
a19 5
          Substitution '</a>' of do-loop indices and register 
          contents for characters within {} is allowed anywhere in
          the command line (not just in filenames).  In addition
          it is possible to substitute register contents in
          floating point format, see NOTE: 6 below]
d33 1
a33 1
          filename).  However, you can use the string:
d48 1
a48 1
          VM   '&'nbsp;'&'nbsp;          ; To write out the current directory      '<br />'
d53 2
a54 2
      6.  Sample of substituting register contents in floating point 
          format into a 'VM' system command:                       '<p />'
d57 1
a57 1
          [var] = 34.56                                             '<p />'
d59 2
a60 2
          VM   '&'nbsp;'&'nbsp;          ; To write out the following: Var is now= 34.5600     '<br />'
          echo Var is now= {%F7.4%[var]}                                       '<p />'
d62 2
a63 2
          VM    '&'nbsp;'&'nbsp;         ; To write out the following: Var is now=  3.4560E+01 '<br />'
          echo Var is now= {%ES11.4%[var]}                                     '<p />'
d66 6
d73 1
a73 2
          VM    '&'nbsp;'&'nbsp;         ; To write out the following: Var is now= -1 '<br />'
          echo Var is now= {%I3%[var]}                                     '<p />'
d75 5
a79 1
          '</b>'
d85 1
a85 1
      7.  Samples of usage within SPIDER loops.
a87 1

d103 1
a103 1
     cp jnk{***[n]}.dat  jnk444{***I}.dat 
d113 1
a113 1
     jnk{***[it]}             ; Filename
d118 1
a118 1
     cp jnk{***[it]}.dat  jnk444{***[num]}.dat 
d133 1
a133 1
      ?ENTER FILENAME PREFIX?[pre]    
d135 1
a135 1
      rm [pre]{***[var]}.$DATEXT 
@


1.27
log
@ev
@
text
@d69 6
@


1.26
log
@env. var. echo
@
text
@d8 2
@


1.25
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            9/03/09
d9 1
a9 1
          '&'&nbsp; <or> '<br />'
d12 2
a13 2
          .SYSTEM COMMAND:  '&'&nbsp;  ls  '&'&nbsp; *.OMM          
          [Enter the command you want executed.  This may also
d20 1
a20 1
          floating point format, see NOTE: 5 below]
d22 3
a24 3
NOTE: 1.  Comments are not accepted in the command line because a SPIDER comment
          character (;) is used to string system commands together on the
          same line in Unix.
d45 78
a122 68
      5.  Sample of substituting register contents in floating point 
          format:   '<p />'
      '<b>'
      [var] = 34.56  '<p />'

      VM             ; To write out the following: Var is now= 34.5600     '<br />'
      echo Var is now= {%F7.4%[var]}                                       '<p />'

      VM             ; To write out the following: Var is now=  3.4560E+01 '<br />'
      echo Var is now= {%ES11.4%[var]}                                     '<p />'
      '</b>'

      Place the FORTRAN format within '%' symbols followed by the register
      whose contents are to be substituted.  All of this has to be
      enclosed within the wavy brackets.       

      6.  Samples of usage within SPIDER loops.

      '<pre>'

      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'<p />'
      -- Sample loop for converting series of 1024 x 512 raw images 
      -- to SGI rgb format:                                                  '<p />'
      [nsam] = 1024     ; Nsam
      [nrow] = 512      ; Nrow
      DO I=1,5          ; Loop
         VM             ; Use "frombin" to convert images
         frombin raw{***i}.$DATEXT   sgi{***i}.rgb {****[nsam]} {***[nrow]} 
      ENDDO             ; End loop
      '<p />'
      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'<p />'
      -- Sample loop for renaming/renumbering series of SPIDER images:    '<p />'
      [n]=33 
      DO I=1,4               ; Loop
         VM                  ; System call for renumbering
         cp jnk{***[n]}.dat   jnk444{***I}.dat 
         [n]=[n]+1           ; Increment output file number counter
      ENDDO                  ; End loop
      '<p />'
      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'<p />'
      -- Sample loop for consecutively renaming/renumbering series of SPIDER 
      -- images while skipping any missing image numbers:                  '<p />'
      [num]=0                     ; Initialize output file number counter
      DO [it]=1,4                 ; Loop
         IQ FI [exists]           ; Use "IQ FI" to see if file exists
         jnk{***[it]}             ; Filename
         ;
         IF([exists].LE.0)CYCLE   ; Skip if file not found
         [num]=[num]+1            ; Increment output file number counter
         VM                       ; System call for renaming/renumbering SPIDER images
         cp jnk{***[it]}.dat   jnk444{***[num]}.dat 
      ENDDO                       ; End loop
      '<p />'
      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx '<p />'
      -- Sample showing symbolic parameter substitution within a procedure: '<p />'
        [var]=55          ; Set register variable outside of procedure  
                          ;  (binding time for parameter substitution is
                          ;   before procedure is executed!)
        @@testvm           ; Invoke '<i>'testvm'</i>' SPIDER procedure
        doc               ; Value given to: FILENAME PREFIX solicited
                          ;   by '<i>'testvm'</i>' procedure

      Contents of invoked procedure '<i>'testvm'</i>':

            FR                             
            ?ENTER FILENAME PREFIX?[pre]    
            VM                            
            rm [pre]{***[var]}.$DATEXT 
d124 4
a127 4
      Result of invoked procedure:
            rm doc055.DAT
      '<p />'
      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
d129 1
a129 1
      '</pre>'
@


1.24
log
@vm formated x22
@
text
@d3 1
a3 1
                                                            5/08/04
d9 1
a9 1
           <or>
d12 1
a12 1
          .SYSTEM COMMAND:   ls  *.OMM           (e.g.)
d14 2
a15 2
          be a command file. '<br>' 
          '<a HREF='"'../user_doc.html#file_names'"'>'
d19 1
a19 1
          it is now possible to substitute register contents in
d22 1
a22 1
NOTE: 1.  Comments are not accepted in the command line as a SPIDER comment
d32 1
a32 1
          the system command as they are '<EM>' NOT '</EM>'appended automatically
d35 1
a35 1
          '<I>'$DATEXT '</I>' to substitute the current SPIDER data 
d38 1
a38 1
          '<I>'$PRJEXT '</I>' to substitute the current SPIDER project 
d46 10
a55 10
          format: '<p>'

      x11=34.56'<p>'

      VM             ; To write out the following: x11 is now= 34.5600 '<b>''<br>'
      echo x11 is now= {%F7.4%x11} '<p>'

      VM             ; To write out the following: x11 is now=  3.4560E+01 '</b>''<br>'
      echo x11 is now= {%ES11.4%x11} '<p>'

d61 1
a61 1
      6.  Samples of usage within SPIDER loops (on Unix).
d65 41
a105 45
      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
      -- sample loop for converting series of 1024 x 512 raw images 
      -- to SGI rgb format'<P>'
      X11 = 1024     ; nsam
      X12 = 512      ; nrow
      DO LB1 I=1,1   ; loop
      VM             ; use "imgcopy" to convert images
      frombin raw{***i}.$DATEXT   sgi{***i}.rgb {****x11} {***X12} 
      LB1            ; end loop
      '<P>'
      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'<P>'
      --sample loop for renaming/renumbering series of SPIDER images '<P>'
      
      X33=33 
      DO LB2 I=1,4     ; loop
      VM               ; system call for renumbering
      cp jnk{***X33}.vms    jnk444{***I}.vms 
      X33=X33+1
      LB2              ; end loop
      '<P>'
      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'<P>'
      --sample loop for consecutively renaming/renumbering series of SPIDER 
      -- while skipping any missing image numbers '<P>'
	
      X11=0                ; initialize output file number counter
      DO LB3 I=1,4         ; loop
      FI N                 ; use "FI N" to see if file exists
      jnk{***I}            ; filename
      ;
      IF(X2.LE.0)GOTO LB3  ; skip if file not found
      X11=X11+1            ; increment output file number counter
      VM                   ; system call for renaming/renumbering SPIDER images
      cp jnk{***I}.vms   jnk444{***X11}.vms 
      LB3                  ; end loop

      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'<P>'
      --Sample showing symbolic parameter substitution within
        a procedure '<P>'
	
        X11=55            ; set register 11 outside of procedure  
                          ; (binding time for parameter substitution is
                          ;  before procedure is executed!)
        @@testvm           ; invoke <I>testvm</I> SPIDER procedure
        doc               ; value given to FILENAME PATTERN solicited
                          ; in <I>testvm</I> procedure
d107 1
a107 1
      Contents of invoked procedure <I>testvm</I>:
d110 1
a110 1
            ?ENTER FILENAME PATTERN?<1>    
d112 1
a112 1
            rm <1>{***X11}.$DATEXT 
d116 2
a117 2

      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'<P>'
@


1.23
log
@html formating bug
@
text
@d50 1
a50 1
      VM             ; To write out the following: x11 is now= 34.5600 '<b>'
d53 1
a53 1
      VM             ; To write out the following: x11 is now=  3.4560E+01 '</b>'
@


1.22
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            3/08/04
d53 1
a53 1
      VM             ; To write out the following: x11 is now=  3.4560E+01 '<b>'
@


1.21
log
@%%
@
text
@d3 1
a3 1
                                                            1/02/04
d46 1
a46 1
          format:
d48 1
a48 2
      '<pre>'
      x11=34.56
d50 2
a51 2
      VM             ; To write out the following: x11 is now= 34.5600
      echo x11 is now= {%F7.4%x11} 
d53 2
a54 2
      VM             ; To write out the following: x11 is now=  3.4560E+01
      echo x11 is now= {%ES11.4%x11} 
a55 1
      '</pre>'
d57 1
a57 1
      Place the FORTRAN format within % symbols followed by the register
d59 1
a59 1
      enclosed within the wavy brackets.
@


1.20
log
@vm m
@
text
@d3 1
a3 1
                                                            9/03/03
d18 3
a20 1
          the command line (not just in filenames).]
d45 19
a63 1
      5.  Samples of usage within SPIDER loops (on Unix).
@


1.19
log
@qotes wrong on html
@
text
@d3 1
a3 1
                                                            5/29/99
d9 2
d14 3
a16 3
          be a command file.  
          '<A HREF='"'../user_doc.html#file_names'"'>'
          Substitution '</A>' of do-loop indices and register 
d24 6
a29 1
      2.  You must specify the extension for any filenames within
d40 1
a40 1
      3.  The "VM" name for this operation is left over from the
d43 1
a43 1
      4.  Samples of usage within SPIDER loops (on Unix).
d45 1
a45 1
      '<PRE>'
d105 1
a105 1
      '</PRE>'
@


1.18
log
@added parameter substitution
@
text
@d13 1
a13 1
          '<A HREF=../user_doc.html#file_names>'
@


1.17
log
@vms notes removed
@
text
@d33 4
a36 1
      3.  Samples of usage within SPIDER loops (on Unix).
d75 23
a99 2
      4.  The "VM" name for this operation is left over from the
          VAX/VMS system operation name.
@


1.16
log
@changed purpose
@
text
@d2 2
a3 2
VM         system call                                           VM      
                                                            10/29/98
d6 1
a6 1
          system (Unix) command or spawn (VMS) command.
d33 1
a33 1
      3.  Samples of usage within SPIDER loops (on Unix only).
d74 1
a74 3
      4.  On VAX/VMS this command only works in interactive mode.

      5.  The "VM" name for this operation is left over from the
@


1.15
log
@*** empty log message ***
@
text
@d2 2
a3 2
VM        VMS spawn or Unix system call                          VM      
                                                            7/14/97
d75 3
@


1.14
log
@*** empty log message ***
@
text
@d12 2
a13 1
          be a command file.  '<A HREF="../../user_doc.html#file_names">'
@


1.13
log
@spelling
@
text
@d12 1
a12 1
          be a command file.  '<A HREF="../user_doc.html#file_names">'
@


1.12
log
@*** empty log message ***
@
text
@d43 1
a43 1
      frombin raw{***i}.$DATEXC   sgi{***i}.rgb {****x11} {***X12} 
@


1.11
log
@*** empty log message ***
@
text
@d25 1
a25 1
          '<I>'$DATEXT'</I>'to substitute the current SPIDER data 
d28 1
a28 1
          '<I>'$PRJEXT'</I>'to substitute the current SPIDER project 
@


1.10
log
@added $DATEXC
@
text
@d25 4
a28 1
          '<I>'$DATEXC'</I>'to substitute the current SPIDER data 
@


1.9
log
@*** empty log message ***
@
text
@d24 4
a27 1
          filename).
d40 1
a40 1
      frombin raw{***i}.dat   sgi{***i}.rgb {****x11} {***X12} 
@


1.8
log
@opertion improved
@
text
@d3 1
a3 1
                                                            7/10/97
d13 3
a15 3
          Substitution '</A>' of do-loop indices
          and register contents for characters within {} is
          allowed the same as in filenames.]
d31 4
a34 1
      -- sample loop for converting series of SPIDER images to SGI rgb format'<P>'
d36 2
a37 12
      CP TO RAW      : convert SPIDER image to raw 8 bit format
      jnk{***i}      ; input image
      Y              ; yes, normalize output over range 0...255
      N              ; no header
      N              ; no padding
      jnkraw{***i}   ; raw output image
          
      VM             ; use "frombin" to convert raw image to SGI rgb
      ;                format. Registers 1 and 2 contain nsam and nrow 
      ;                from last SPIDER file which was opened (use "FI" if 
      ;                necessary to set registers)
      frombin jnkraw{***i}.vms jnk{***i}.rgb {***X1} {***X2}
@


1.7
log
@improved
@
text
@d3 1
a3 1
                                                            2/22/96
d6 1
a6 1
          spawn (VMS) or system (Unix) command.
d10 61
a70 5
       On UNIX the following prompt appears:

          .UNIX COMMAND:   ls  *.OMM           (e.g.)

       On VAX/VMS the following prompt appears:
d72 1
a72 4
          .VMS COMMAND:   DIR  *.OMM           (e.g.)

          [Enter the command you want executed.  This may also
          be a command file.]
d74 1
a74 1
NOTE:    This command only works in interactive mode.
@


1.6
log
@cosmetic
@
text
@d10 1
a10 1
      On UNIX the following prompt appears:
d14 1
a14 1
      On VAX/VMS the following prompt appears:
d19 1
a19 2
          be a command file.  Any command file will be looked up in
          the default directory.]
@


1.5
log
@updateed, improved prompt
@
text
@d22 1
a22 1
NOTE:    This comman only works in interactive mode.
@


1.4
log
@updated for unix
@
text
@d3 1
a3 1
                                                            1/16/96
d5 2
a6 2
PURPOSE:  To access the system from SPIDER using a spawn (VMS)
          or system (Unix) command.
d10 9
a18 3
          .prompt: DIR  *.OMM      (e.g.)
          [prompt is your system prompt (unix>, vms>, etc...).
          Enter the command you want executed.  This may also
d22 1
a22 1
NOTE:    This is an interactive-only command.
d26 1
a26 1
CALLER:      DRIVER
@


1.3
log
@write up to reflect access to unix or vms
@
text
@d2 2
a3 2
VM        VMS spawn                                         VM      
                                                            12/7/89
d5 2
a6 2
PURPOSE:  To access the system from SPIDER using a spawn
          command.
d10 1
a10 1
          .prompt: DIR *.OMM      (e.g.)
d18 1
a18 1
         
d20 1
a20 2
Subroutines: VMS
Cotask:      DRIVER
@


1.2
log
@replaced_tabs
@
text
@d5 1
a5 1
PURPOSE:  To access the VMS system from SPIDER using a spawn
d10 3
a12 2
          .VMS: DIR *.OMM      (e.g.)
          [Enter the VMS command you want executed.  This may also
@


1.1
log
@Initial revision
@
text
@@
