head	1.28;
access;
symbols
	best-code:1.15
	pre-named-reg:1.15
	pre_GPL:1.15
	prec_CA:1.15
	oct21:1.11;
locks; strict;


1.28
date	2015.03.09.14.59.55;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2014.02.28.15.30.56;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2013.08.27.14.59.07;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2013.08.26.16.24.31;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2013.04.26.15.01.56;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2012.11.28.19.16.10;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2012.10.09.18.48.16;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2012.07.26.17.32.11;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2012.07.19.16.40.55;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2012.07.19.16.36.59;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2009.09.08.16.10.48;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2008.02.19.17.09.58;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2006.10.04.19.37.29;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2001.04.03.20.41.50;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2001.03.30.14.17.13;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.01.11.18.21.11;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.09.22.18.08.05;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	97.08.25.19.43.08;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.08.22.19.26.48;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	96.11.22.15.44.46;	author ramani;	state Exp;
branches;
next	1.8;

1.8
date	96.08.29.17.49.26;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	96.08.14.17.19.30;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	95.11.08.21.03.50;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	95.04.14.15.46.56;	author ramani;	state Exp;
branches;
next	1.4;

1.4
date	95.02.16.19.36.56;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	94.08.18.14.49.04;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.33.24;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.14.58;	author leith;	state Exp;
branches;
next	;


desc
@@


1.28
log
@location of img
@
text
@FQ NP     Filter - Quick Fourier, High, low pass, etc, No Padding ||   FQ NP      
                                                                     8/26/13

PURPOSE:  Apply Fourier filters to an image or volume. 
          '<b>' Warning: No padding is applied, this may lead to artifacts
          near boundary of image, we suggest use of 'FQ' to avoid this.'</b>'  

SEE ALSO: BC
          FQ  
          FF  
          FP  
          FT  
          FF PLOT 

USAGE:    FQ NP

          .INPUT FILE:  PIC001
          [Enter name of input file containing real image.]

          .OUTPUT FILE: PIC002
          [Enter name of output file for filtered real image.]

          .FILTER TYPE (1-10): 7                                                                      
          [Enter filter option code.]

           Option "1" - Low-pass truncation.  Filter is a "top-hat" function
                        that truncates the Fourier transform at spatial frequency: '<i>'SPF'</i>'.

           Option "2" - High-pass truncation.  Filter is inverse "top-hat"
                        function that passes the Fourier transform beyond spatial
                        frequency: '<i>'SPF'</i>'.

           Option "3" - Gaussian low-pass.  Filter is the Gaussian function:
                        EXP(-'<i>'F'</i>'**2 / (2 * '<i>'SPF'</i>'**2)), 
                        where '<i>'F'</i>' is the frequency.

           Option "4" - Gaussian high-pass.  Filter is complement of the Gaussian function:
                        1 - EXP(-'<i>'F'</i>'**2 / (2 * '<i>'SPF'</i>'**2)),
                        where '<i>'F'</i>' is the frequency.

           Option "5" - '<a href='"'../img/fermi_lopass.jpg'"'>'Fermi low-pass'</a>'.  Filter is:      
                        1 / (1 + EXP[('<i>'F'</i>' - '<i>'SPF'</i>') / '<i>'T'</i>']) which
                        negotiates between "Top-hat" and Gaussian
                        characteristics, depending on the value of the temperature:
                        '<i>'T'</i>' (see below).

           Option "6" - '<a href='"'../img/fermi_hipass.jpg'"'>'Fermi high-pass'</a>' high-pass.  Filter is: 
                        1 / (1 + EXP[('<i>'F'</i>' - '<i>'SPF'</i>') / '<i>'-T'</i>'])
                        (Same as in Option "5", but with '<i>'T'</i>' replaced by '<i>'-T'</i>').

           Option "7" - Butterworth low-pass. Filter is:  
                        1 / (SQRT(1 + '<i>'F'</i>' / '<i>'RAD'</i>')**(2 * '<i>'ORDER'</i>'))  '<br />'
                        where                                                                  '<br />'
                        '<i>'ORDER'</i>' = [2 * log('<i>'eps'</i>'/SQRT('<i>a</i>'**2-1)) ] / [log('<i>'Flow'</i>'/'<i>'Fup'</i>')]  '<br />'
                        '<i>'RAD'</i>'   = '<i>'Flow'</i>' / (('<i>'eps'</i>')**(2 / '<i>'ORDER'</i>'))                             '<br />'
                        In the Butterworth filter the '<i>'ORDER'</i>' determines
                        the filter fall off and '<i>'RAD'</i>' corresponds to the cut-off radius. '<br />'
                        Frequencies below the lower frequency are preserved,                      '<br />'
                        frequencies above the upper frequency are removed,                        '<br />'
                        with a smooth transition in between lower and upper
                        limiting frequencies.
                        
           Option "8" - Butterworth high-pass. Filter is: 
                        1 - (1 / (SQRT(1 + '<i>'F'</i>' / '<i>'RAD'</i>')**(2 * '<i>'ORDER'</i>'))) '<br />'
                        Frequencies below the lower frequency are removed,    '<br />'
                        frequencies above upper frequency are preserved,      '<br />'
                        with a smooth transition in between lower and upper
                        limiting frequencies.
        
           Option "9" - Raised Cosine low-pass. Filter is:                                            '<br />'
                        0.5 * (COS(PI * ('<i>'F'</i>' - '<i>'Flow'</i>') / ('<i>'Flow'</i>' - '<i>'Fup'</i>')) + 1)  
                        if  '<i>'Flow'</i>' < '<i>'F'</i>' < '<i>'Fup'</i>',                          '<br />'
                        1 if '<i>'F'</i>' < '<i>'Flow'</i>', and  0 if '<i>'F'</i>' > '<i>'Fup'</i>'. '<br />'
     
           Option "10" - Raised Cosine high-pass. Filter is:                                         '<br />' 
                         0.5 * (-COS(PI*('<i>'F'</i>' - '<i>'Flow'</i>') / ('<i>'Flow'</i>' - '<i>'Fup'</i>')) + 1)  
                         if  '<i>'Flow'</i>' < '<i>'F'</i>' < '<i>'Fup'</i>'                          '<br />'
                         1 if '<i>'F'</i>' < '<i>'Flow'</i>', and 1 if '<i>'F'</i>' > '<i>'Fup'</i>'. '<br />'
        
           Option "13" - Raised sinc window (For 2-D images only). '<br />'
    
    For options "1-6 and 13" SPIDER asks:
          '<div class='"'opt_inp'"'>'
          .FILTER RADIUS (IN FREQUENCY OR PIXEL UNITS): 0.12 or 5
          [The filter radius (filter intrinsic frequency) can be input using either
           frequency units or pixel units. If filter radius is given in
           frequency units, they should be in the range: 0.0 - 0.5.
           If the input is > 1.0 it is treated as given in pixel units.]
           This value expressed as a frequency is denoted: '<i>'SPF'</i>'.]
          '</div>'

    For options "7-10" SPIDER asks:
          '<div class='"'opt_inp'"'>'
         .LOWER & UPPER LIMITING FREQUENCIES (IN FREQ OR PIXEL UNITS): 0.1, 0.2 
          [The Filter limiting frequencies can be given either in  frequency units or
          pixel units. If limiting frequencies are given in frequency units, they should 
          be in the range: 0.0 - 0.5. If limiting frequencies are > 1.0 
          they are treated as given in pixel units. Both values must be in the same units. 
          These values expressed as frequencies are denoted: '<i>'Flow'</i>' and '<i>'Fup'</i>'.]
          '</div>'

    For options "5-6" SPIDER asks:
          '<div class='"'opt_inp'"'>'
          .TEMPERATURE (0=CUTOFF): 0.3
          [Enter  a temperature parameter '<i>'T'</i>'
           The filter falls off roughly within this reciprocal distance (in terms of frequency units).]
          '</div>'

NOTES:    1. 'FQ NP' has similar functions to 'FF' except that:                    '<br />'
          a) It only accepts real space images and creates a real filtered image.  '<br />'
          b) It always runs in core, so it is much faster the 'FF' operation.      '<br />'

          2. The FILTER RADIUS and LOWER & UPPER LIMITING FREQUENCIES can be given either in 
             frequency units ('<i>'F'</i>') or pixel units ('<i>'P'</i>'). 
             If the input is > 1.0 it is treated as given in pixel units.          '<br />'                                '<br />'
             Frequency units are absolute units (independent of image size)
             in the range: 0.0 - 0.5 (0.5 is the highest value).                         '<br />'
             The following equations  convert frequency
             units into pixel units for ('<i>'P'</i>' in range: 0 - (NX/2)):       '<br />'
             '<i>'P'</i>' = '<i>'F'</i>' * NX                                      '<br />'
             '<i>'F'</i>' = '<i>'P'</i>' / NX                                      '<br />'

          3. Implemented by:  Paul Penczek and Gregory Kishchenko.
 
SUBROUTINE: FOUR1A, FQ_Q, FQ3_P

CALLER:     FOUR1
@


1.27
log
@*** empty log message ***
@
text
@d41 1
a41 1
           Option "5" - '<a href='"'fermi_lopass.jpg'"'>'Fermi low-pass'</a>'.  Filter is:      
d47 1
a47 1
           Option "6" - '<a href='"'fermi_hipass.jpg'"'>'Fermi high-pass'</a>' high-pass.  Filter is: 
@


1.26
log
@*** empty log message ***
@
text
@d79 2
d82 1
a82 1
    For options "1-6" SPIDER asks:
@


1.25
log
@*** empty log message ***
@
text
@d41 1
a41 1
           Option "5" - Fermi low-pass.  Filter is:                             '<br />'
d43 1
a43 1
                        negotiates between "top-hat" and Gaussian
d47 1
a47 1
           Option "6" - Fermi high-pass.  Filter is:                            '<br />'
@


1.24
log
@1.0 cutoff on freq now
@
text
@d2 1
a2 1
                                                                     4/26/13
d17 1
a17 1
          .INPUT FILE: PIC001
d20 1
a20 1
          .OUTPUT FILE: FIC001
d23 1
a23 1
          .Filter type (1-10): 7                                                                      
d26 2
a27 2
           Option "1" - Low-pass truncation.  Filter is "top-hat" function
                        that truncates Fourier transform at spatial frequency RAD.
d30 2
a31 2
                        function that passes Fourier transform beyond spatial
                        frequency radius RAD.
d33 7
a39 2
           Option "3" - Gaussian low-pass.  Filter is Gaussian function
                        EXP(-f**2/(2.*RAD**2)), where f is the frequency.
d41 2
a42 4
           Option "4" - Gaussian high-pass.  Filter is complement of Gaussian
                        function:  1.0-EXP(-F**2/(2.*RAD**2)).

           Option "5" - Fermi.  Filter is 1/(1+EXP[(F-RAD)/T]) which
d44 2
a45 1
                        characteristics, depending on the value of T (see below).
d47 3
a49 1
           Option "6" - Fermi  (Same as: "5").
d52 9
a60 6
                              1/(SQRT(1+F/RAD)**(2*ORDER))                                    '<br />'
                        In the actual implementation of the filter the parameters,
                        RAD and ORDER are calculated from the lower and upper limiting frequencies
                        specified by the user.
                        Frequencies below lower frequency are preserved, frequencies above upper
                        frequency are removed, with a smooth transition in between lower and upper
a61 1
                        See NOTE 3 below.
d64 4
a67 6
                        1-(1/(SQRT(1+F/RAD)**(2*ORDER)))
                        In the actual implementation of the filter the parameters,
                        RAD and ORDER are calculated from the lower and upper limiting frequencies
                        specified by the user.
                        Frequencies below lower frequency are removed, frequencies above upper
                        frequency are preserved, with a smooth transition in between lower and upper
d69 10
a78 6
                        See NOTE 3 below.
    
           Option "9" - Raised Cosine low-pass. Filter is: 
                        0.5*(COS(PI*(F-'<i>'F-low'</i>')/('<i>'F-low'</i>'-'<i>'F-up'</i>'))+1) 
                        if '<i>'F-low'</i>'<F<'<i>'F-up'</i>',                                  '<br />'
                        1 if F<'<i>'F-low'</i>',  0 if F>'<i>'F-up'</i>'.                       '<br />'
d80 1
a80 6
           Option "10" - Raised Cosine high-pass. Filter is: 
                              0.5*(-COS(PI*(F-'<i>'F-low'</i>')/('<i>'F-low'</i>'-F-up))+1) 
                              if '<i>'F-low'</i>'<F<'<i>'F-up'</i>',                            '<br />'
			      0 if F<'<i>'F-low'</i>',  1 if F>'<i>'F-up'</i>'.                 '<br />'
    
    For options 1-6:
a81 1

d83 5
a87 4
          [The filter radius (filter intrinsic frequency) can be given either
           in  frequency units or pixel units. If filter function radius is given in
           frequency units, they should be in the range 0.0 <= '<i>'f'</i>' <= 1.0.
           If the response is > 1.0 it is treated as given in pixel units.]
d90 1
a90 1
    For options 7-10:
d95 4
a98 2
          be in the range  0.0 <= f <= 1.0. If limiting frequencies are > 1.0 they are treated 
          as given in pixel units.  Both values must be in the same units.]
d100 1
a100 1
    For the Fermi filter [(5) and (6)], a temperature parameter 'T 'will be solicited:
a101 1

d103 2
a104 2
          [Roughly within this reciprocal distance (in terms of
          frequency units), the filter falls off.]
d108 1
a108 1
          a) It only accepts real space images and leaves the filtered image real. '<br />'
d112 2
a113 2
             frequency units ('<i>'f'</i>') or pixel units ('<i>'p'</i>'). If answer is > 1.0
             it is treated as given in pixel units.
d115 7
a121 21
             in the range 0.0 <= '<i>'f'</i>' <= 1.0 (1.0 is the highest value).
             The following two equations can be used to convert frequency
             units into pixel units for ('<i>'p'</i>'=0  ... (nx/2) ):              '<br />'

             '<i>'p'</i>' = '<i>'f'</i>'   * NX                                     '<br />'
             '<i>'f'</i>' = '<i>'p'</i>' / NX                                       '<br />'

          3. In the Butterworth filter the ORDER and RAD correspond to the lower and upper limiting
             frequencies.
             In the program RAD and ORDER are calculated from the parameters
             specified by the user using following equations:                           '<br />'
             RAD   = '<i>'F-low'</i>'/((eps)**(2/ORDER))                                '<br />'
             ORDER = [2*log(eps/sqrt(a**2-1))]/[log('<i>'F-low'</i>'/'<i>'F-up'</i>')]  '<br />'
             where '<i>'F-low'</i>' and '<i>'F-up'</i>' are the lower and upper limiting frequencies and 
             parameters "eps" and "a" are given by 0.882 and 10.624 resp. 
             For reference see '<a href='"'ffplot.html'"'>'FF PLOT'</a>'.

          4. In the Raised Cosine filter, '<i>'F-low'</i>' and '<i>'F-up'</i>' correspond to lower and
             upper limiting frequencies.
	  
          5. Implemented by:  Paul Penczek.
@


1.23
log
@cosmetic, freq vs pixel prompts
@
text
@d2 1
a2 1
                                                               11/29/12
d5 2
a6 2
          '<em>' Warning: No padding is applied, this may lead to artifacts
          near boundary of image, we suggest use of 'FQ' to avoid this.'</em>'  
a22 9
          '<table border="0" cellpadding="1">'
          '<tr>'
          '<td>'1: LOW-PASS,'</td>'             '<td>' 2: HIGH-PASS            '</td>' '</tr>'
          '<td>'3: GAUSS.  LOW-PASS,'</td>'     '<td>' 4: GAUSS.  HIGH-PASS    '</td>' '</tr>'
          '<td>'5: FERMI'</td>'                 '<td>' 6: FERMI                '</td>' '</tr>'
          '<td>'7: BUTTER. LOW-PASS,'</td>'     '<td>' 8: BUTTER. HIGH-PASS    '</td>' '</tr>'
          '<td>'9: RAISED COS. LOW-PASS,'</td>' '<td>'10: RAISED COS. HIGH-PASS'</td>' '</tr>'
          '</table>'

d27 1
a27 2
                        that truncates Fourier transform at spatial frequency
                        RAD.
d46 1
a46 1
                              1/(SQRT(1+F/RAD)**(2*ORDER))          '<br />'
d66 2
a67 1
                        0.5*(COS(PI*(F-'<i>'F-low'</i>')/('<i>'F-low'</i>'-'<i>'F-up'</i>'))+1) if '<i>'F-low'</i>'<F<'<i>'F-up'</i>',   '<br />'
d71 3
a73 2
                              0.5*(-COS(PI*(F-'<i>'F-low'</i>')/('<i>'F-low'</i>'-F-up))+1) if '<i>'F-low'</i>'<F<'<i>'F-up'</i>',   '<br />'
			      0 if F<'<i>'F-low'</i>',  1 if F>'<i>'F-up'</i>'.                        '<br />'
d75 1
a75 1
   For options 1-6:
d81 2
a82 2
           frequency units, they should be in the range 0.0 <= '<i>'f'</i>' <= 0.5.
           If the response is > 0.5 it is treated as given in pixel units.]
d90 3
a92 3
          be in the range  0.0 <= f <= 0.5. If limiting frequencies are > 0.5 they is treated 
          as given in pixel units.]
   
d106 1
a106 1
             frequency units ('<i>'f'</i>') or pixel units ('<i>'p'</i>'). If answer is > 0.5
d109 1
a109 1
             in the range 0.0 <= '<i>'f'</i>' <= 0.5 (0.5 is the highest value).
d113 2
a114 2
             '<i>'p'</i>' = '<i>'f'</i>'   * NX                           '<br />'
             '<i>'f'</i>' = '<i>'p'</i>' / NX                           '<br />'
d119 3
a121 3
             specified by the user using following equations:                       '<br />'
             RAD   = '<i>'F-low'</i>'/((eps)**(2/ORDER))                     '<br />'
             ORDER = [2*log(eps/sqrt(a**2-1))]/[log('<i>'F-low'</i>'/'<i>'F-up'</i>')]    '<br />'
@


1.22
log
@*** empty log message ***
@
text
@d2 1
a2 1
                                                               7/19/12
d23 1
a23 1
          '<table border="0" cellpadding="3">'
d25 5
a29 5
          '<td>'1: LOW-PASS,'</td>'             '<td>' 2: HIGH-PASS         '</td>'  '</tr>'
          '<td>'3: GAUSS.  LOW-PASS,'</td>'     '<td>' 4: GAUSS.  HIGH-PASS '</td>'  '</tr>'
          '<td>'5: FERMI            '</td>'     '<td>' 6: FERMI             '</td>'  '</tr>'            
          '<td>'7: BUTTER. LOW-PASS,'</td>'     '<td>' 8: BUTTER. HIGH-PASS '</td>'  '</tr>'
          '<td>'9: RAISED  COS. LOW-PASS,'</td>''<td>'10: RAISED  COS. HIGH-PASS'</td>' '</tr>'
d32 1
a32 1
          .Filter type (1-10): 7
d34 1
a34 1
                               
d44 1
a44 1
                        EXP(-f**2/(2.*RAD**2)), where F is the frequency.
d50 1
a50 1
                        negotiates between "top-hat" and Gaussian  
d55 2
a56 2
           Option "7" - Butterworth low-pass. Filter is
                              1/(SQRT(1+F/RAD)**(2*ORDER))         '<br />'
d58 5
a62 5
                        RAD and ORDER are calculated from the pass-band frequency
                        and cut-off frequency specified by the user.
                        Frequencies below pass band are
                        preserved, frequencies above stop band are removed, with
                        a smooth transition in between (pass band > stop band).
d65 9
a73 2
           Option "8" - Butterworth high-pass. Filter is 
                              1-(1/(SQRT(1+F/RAD)**(2*ORDER)))]
d76 2
a77 2
                              0.5*(COS(PI*(F-fp)/(fp-fs))+1) if fp<F<fs,   '<br />'
			      1 if F<fp,  0 if F>fs.                       
d80 2
a81 2
                              0.5*(-COS(PI*(F-fp)/(fp-fs))+1) if fp<F<fs,   '<br />'
			      0 if F<fp,  1 if F>fs.                        
d83 1
a83 1
    For options 1-6:
d86 5
a90 4
          .FILTER RADIUS: 0.12
          [Enter filter function radius in frequency units. They are
           of the range 0.0<=f<=0.5. For an explanation of this units,
           see FF PLOT.]
d95 7
a101 6

          .PASS-BAND AND STOP-BAND FREQUENCY: 0.1, 0.2
          [Enter filter function radii in frequency units. 
          '</div>'

    For the Fermi filter [(5) and (6)], the temperature parameter T will be solicited:
d104 1
a104 1
          .TEMPERATURE (0=CUTOFF): .3
a106 1

d109 2
a110 2
NOTES:    1. 'FQ' has similar functions to 'FF' except that:                       '<br />'
          a) It accepts only real space images and leaves the filtered image real. '<br />'
d113 10
a122 2
          2. The FILTER RADIUS can be given either in absolute units or pixel
          units. If answer is >1.0 it is treated as given in pixel units.
d124 2
a125 2
          3. In the Butterworth filter the ORDER determines
             the filter fall off and RAD corresponds to the cut-off radius.
d127 5
a131 8
             specified by the user using following equations:       '<br />'
             RAD   = fp/((eps)**(2/ORDER))                            '<br />'
             ORDER = [2*log(eps/sqrt(a**2-1))]/[log(fp/fs)]         '<br />'

             where fp and fs are the pass-band and stop-band frequencies and 
             parameters "EPS" and "A" are given by 0.882 and 10.624 resp. 
             Note that fp and fs deviate from 1.0 and 0.0 by about 0.2 and 0.09
             respectively (for a low-pass filter.)
d134 3
a136 3
          4. In the Raised Cosine filter fp and fs correspond to the pass-band
             and stop-band frequencies.

d138 1
a138 1

@


1.21
log
@*** empty log message ***
@
text
@d8 2
a9 1
SEE ALSO: FQ  
@


1.20
log
@*** empty log message ***
@
text
@d24 3
a26 3
          '<td>'1: LOW-PASS,'</td>'             '<td>' 2: HIGH-PASS,'</td>'         '</tr>'
          '<td>'3: GAUSS.  LOW-PASS,'</td>'     '<td>' 4: GAUSS.  HIGH-PASS,'</td>'   '</tr>'
          '<td>'5: FERMI   LOW-PASS,'</td>'     '<td>' 6: FERMI   LOW-PASS, '</td>'  '</tr>'            
d28 1
a28 1
          '<td>'9: RAISED  COS. LOW-PASS,'</td>''<td>'10: RAISED  COS. HIGH-PASS'</td>'  '</tr>'
d48 1
a48 1
           Option "5" - Fermi low-pass.  Filter is 1/(1+EXP[(F-RAD)/T]) which
d52 1
a52 1
           Option "6" - Fermi low-pass (Same as: "5").
@


1.19
log
@*** empty log message ***
@
text
@d55 1
a55 1
                              1/(SQRT(1+F/RAD)**(2*ORDER))
d62 1
a62 1
                        See NOTE 4 below.
d69 1
a69 1
			      1 if F<fp,  0 if F>fs.                       '<br />'
d73 1
a73 1
			      0 if F<fp,  1 if F>fs.                        '<br />'
d82 1
d89 1
d91 1
a91 2
    For the Fermi filter [(5) and (6)], the temperature
    parameter T will be solicited:
d98 1
d100 3
a102 1
NOTES:    'FQ NP' has similar functions to 'FF' except that:
d104 1
a104 6
          1. it accepts only real space images (2- & 3-D) and leaves the 
             filtered image real,

          2. it runs only in core, so it is much faster than the 'FF' operation,

          3. The FILTER RADIUS can be given either in absolute units or pixel
d107 1
a107 1
          4. In the Butterworth filter the ORDER determines
d111 1
a111 3
             
             RAD = fp/((eps)**(2/ORDER))                            '<br />'

d114 1
a114 1
             where FP and FS are the pass-band and stop-band frequencies and 
d116 1
a116 1
             Note that FP and FS deviate from 1.0 and 0.0 by about 0.2 and 0.09
d118 1
a118 1
             For reference see 'FF PLOT'.
d120 1
a120 1
          5. 1.In the Raised Cosine filter fp and fs correspond to the pass-band
d123 1
a123 1
          6. Implemented by:  Paul Penczek.
@


1.18
log
@table
@
text
@d2 1
a2 1
                                                               3/30/01
d4 1
a4 2
PURPOSE:  Applies Fourier filters to 2-D or 3-D real images. Images 
          NEED NOT have power-of-two dimensions (see notes).
d20 1
a20 1
          [Enter name of output file containing filtered real image.]
d24 5
a28 4
          '<td>'1: LOW-PASS,'</td>'          '<td>'2: HIGH-PASS,'</td>'         '</tr>'
          '<td>'3: GAUSS LOW-PASS,'</td>'    '<td>'4: GAUSS HIGH-PASS,'</td>'   '</tr>'
          '<td>'5: FERMI LOW-PASS,'</td>'    '<td>'6: FERMI HIGH-PASS, '</td>'  '</tr>'
          '<td>'7: BUTER. LOW-PASS,'</td>'   '<td>'8: BUTER. HIGH-PASS '</td>'  '</tr>'
d31 1
a31 1
          .Filter type (1-8): 7
d52 1
a52 2
           Option "6" - Fermi high-pass.  As low-pass, but T is replaced by
                        -T.
d59 3
d67 8
d76 1
d83 2
a84 1
    For options 7-8:
d89 1
a89 1
    For the Fermi filters [(5) and (6)], the temperature
d91 1
d123 4
a126 1
          5. Implemented by:  Paul Penczek.
@


1.17
log
@*** empty log message ***
@
text
@d23 7
a29 4
         1: LOW-PASS,           2: HIGH-PASS,         '<br />
         3: GAUSS LOW-PASS,     4: GAUSS HIGH-PASS,   '<br />
         5: FERMI LOW-PASS,     6: FERMI HIGH-PASS,   '<br />
         7: BUTER. LOW-PASS,    8: BUTER. HIGH-PASS   '<br />
@


1.16
log
@*** empty log message ***
@
text
@d23 4
a26 4
       1: LOW-PASS,           2: HIGH-PASS,         '<br />
       3: GAUSS LOW-PASS,     4: GAUSS HIGH-PASS,   '<br />
       5: FERMI LOW-PASS,     6: FERMI HIGH-PASS,   '<br />
       7: BUTER. LOW-PASS,    8: BUTER. HIGH-PASS   '<br />
@


1.15
log
@bad tag fixed
@
text
@d1 1
a1 1
FQ NP     Filter - Quick, No Padding ||                          FQ NP      
d9 4
a12 4
SEE ALSO: FQ     (Filter - quick)
          FF     (Fourier filter)
          FP     (Fourier interpolation)
          FT     (Fourier transformation)
d23 4
a26 3
          1: low-pass, 2: high-pass, 3: Gauss low-pass, 4: Gauss high-pass
          5: Fermi low-pass, 6: Fermi high-pass, 7: Buter low-pass,
          8: Buter high-pass
d57 1
a57 1
                        See NOTE 5 below.
d71 1
a71 1
          .PASS-BAND AND STOP-BAND FREQUENCY: 0.1,0.2
d95 1
a95 1
             specified by the user using following equations:         '<br>'
d97 1
a97 1
             RAD = fp/((eps)**(2/ORDER))                            '<br>'
d99 1
a99 1
             ORDER = [2*log(eps/sqrt(a**2-1))]/[log(fp/fs)]         '<br>'
@


1.14
log
@note about artifacts
@
text
@d7 1
a7 1
          near boundary of image, we suggest use of 'FQ' to avoid this.'<em>'  
@


1.13
log
@res ccp.man
@
text
@d2 1
a2 1
                                                               4/14/95
d6 2
a7 1
          No padding is applied.
d13 1
d18 1
a18 1
          [Enter name of input file containing real picture.]
d21 1
a21 1
          [Enter name of output file containing filtered real picture.]
d81 1
a81 1
NOTES:    FQ NP has similar functions to FF except that:
d86 1
a86 1
          2. it runs only in core, so it is much faster than the FF operation,
d94 1
a94 1
             specified by the user using following equations:         '<BR>'
d96 1
a96 1
             RAD = fp/((eps)**(2/ORDER))                            '<BR>'
d98 1
a98 1
             ORDER = [2*log(eps/sqrt(a**2-1))]/[log(fp/fs)]         '<BR>'
d100 3
a102 3
             where fp and fs are the pass-band and stop-band frequencies and 
             parameters "eps" and "a" are given by 0.882 and 10.624 resp. 
             Note that fp and fs deviate from 1.0 and 0.0 by about 0.2 and 0.09
@


1.12
log
@||
@
text
@a9 1
          FL     (Fourier list)
@


1.11
log
@title
@
text
@d1 2
a2 2
FQ NP     Filter - Quick, No Padding                          FQ NP      
                                                           4/14/95
@


1.10
log
@*** empty log message ***
@
text
@d1 1
a1 1
FQ NP     Filter Quick - No Padding                          FQ NP      
d4 1
a4 1
PURPOSE:  Applies Fourier filters to 2-D or 3-D real pictures. Pictures 
d8 1
a8 1
SEE ALSO: FQ     (Filter quick)
d105 1
a105 1
          5. Implemented by Paul Penczek.
@


1.9
log
@Ed egelman's request: gaussian filter has x^2/(2*sigma^2) i.e., additional factor of 2. in denominator.
@
text
@d1 1
a1 1
FQ NP     Filter Quick, No Padding                           FQ NP      
d8 1
a8 2

SEE ALSO: FQ     (filter quick)
d93 1
a93 1
             specified by the user using following equations:
d95 1
a95 1
             RAD = fp/((eps)**(2/ORDER))
d97 1
a97 1
             ORDER = [2*log(eps/sqrt(a**2-1))]/[log(fp/fs)]
d103 1
a103 1
             For reference check "ffplot".
d107 3
a109 2
Subroutine: FOUR1A, FQ_Q, FQ3_P
Cotask:     FOUR1
@


1.8
log
@updated
@
text
@d39 1
a39 1
                        EXP(-f**2/RAD**2), where F is the frequency.
d42 1
a42 1
                        function:  1.0-EXP(-F**2/RAD**2).
@


1.7
log
@*** empty log message ***
@
text
@d5 1
a5 1
          DO NOT have to have power-of-two dimensions (see notes).
d25 1
a25 1
          8: Buter high-pass, 9: Remez
d27 2
a28 3
          .Filter type (1-9): 7
          [Enter filter option code.  For explanation of the
          options, see 'FF'.]
d59 1
a59 4
                              1-(1/(SQRT(1+F/RAD)**(2*ORDER)))

           Option "9" - Multiplication by the Remez filter designed with the
                        help of FF PLOT command.]
a72 6
    For option 9:

          .FILTER FILE NAME: FIL001
          [Enter file name containing Remez filter designed by FF PLOT
           option.]

d82 1
d85 1
a86 3
          3. it adjusts itself to the actual size of the Remez filter file,
             this means that you can easily filter a 32x64 image with a
             filter file that was created with dimensions 256x256.
d88 1
a88 1
          The FILTER RADIUS can be given either in absolute units or pixel
a90 20
          Limitations: for 2-D 1024^2(or any combination of dimensions whose
                       product does not exceed the current memory buffer),
                       for 3-D 128^3    "       "       "       "       ".
        
          Memory buffer is currently set to 300 000 words for interactive
          version and 2 200 000  for batch Spider.

          For 3-D this limitation can be the problem, but for larger cubes one
          can use the RC option and PSF filtering.

          Memory requirements:  FQ    filters 1-6, 2D image (2*NS+2)*2*NR
                                FQ    filters 1-6, 3D image 8*NS*NR*NL
          where   NS, NR, NL are nearest powers of two to NSAM, NROW, and
          NSLICE respectively.
                                FQ    filter    7,           NSF*NRF*NLF
          where  NSF, NRF, NLF are dimensions of the Remez filter file 
          (powers-of-two only!).

          Implemented by Paul Penczek.

d106 3
a108 1
Subroutine: FQ_Q, FQ3_P
@


1.6
log
@changes for better html file
@
text
@d124 1
a124 1
             In the program RAD and ORDER are calcualted from the parameters
@


1.5
log
@modified for butterworth filter.
@
text
@d46 2
a47 2
                        negotiates between "top-hat" and Gaussian character-
                        istics, depending on the value of T (see below).
@


1.4
log
@corrected text
@
text
@a0 1

d2 1
a2 1
                                                           1/10/94
d24 2
a25 1
          5: Fermi low-pass, 6: Fermi high-pass, 7: Remez
d27 1
a27 1
          .Filter type (1-7): 7
d52 11
a62 1
           Option "7" - Multiplication by the Remez filter designed with the
d72 4
a75 1
    For option 7:
d77 2
d121 15
@


1.3
log
@rewrite of a question prompt
@
text
@d2 1
a2 1
FQ        Filter Quick, No Padding                           FQ      
d7 1
d76 1
a76 1
NOTES:    FQ basically duplicates functions of FF except that:
d80 1
a80 4
          3. it padds the picture with average automatically (to avoid problems
             with errors produced by circular boundaries) when possible. If this
             is not possible, a warning message is printed out.
          4. it adjusts itself to the actual size of the Remez filter file,
a82 6

          If the image size is not power-of-two the image is padded with
          the average to the nearest power-of-two dimension. If there is
          enough memory available it is still padded to double all dimensions
          (to avoid circular boundaries problem). After filtration the
          image is cut to the original size.
@


1.2
log
@replaced_tabs
@
text
@d23 2
a24 3
          .(1) LOW P./(2) HIGH P./(3) GAUSS L.P./(4)GAUSS H.P./
                    (5)FERMI L.P./(6)FERMI H.P./(7)REMEZ: 1
          [Enter filter option code.
d26 4
@


1.1
log
@Initial revision
@
text
@@
