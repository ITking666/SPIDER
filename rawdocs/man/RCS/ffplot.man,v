head	1.17;
access;
symbols
	best-code:1.11
	pre-named-reg:1.11
	pre_GPL:1.11
	prec_CA:1.11
	oct21:1.10;
locks; strict;


1.17
date	2014.12.02.14.55.43;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2014.01.12.17.00.26;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2012.11.05.20.00.56;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2012.10.04.15.19.55;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2012.01.06.16.08.48;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2011.10.27.16.44.13;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.11.18.26.38;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	98.02.12.15.54.54;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	98.02.12.15.44.52;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	97.08.26.19.59.40;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.08.22.21.01.45;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.08.30.19.25.20;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	96.02.28.15.59.38;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.11.08.21.03.47;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	95.04.14.15.48.15;	author ramani;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.33.17;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.14.54;	author leith;	state Exp;
branches;
next	;


desc
@@


1.17
log
@*** empty log message ***
@
text
@FF PLOT   Fourier - Filter design                            FF PLOT
                                                            04/14/95

PURPOSE:  Designs optimal 2-D or 3-D filters in Fourier or real space
          by the use of Remez exchange algorithm and subsequent 
          McClellan transform. Plots Remez, Gauss or Fermi type filters.

SEE ALSO:  FF  
           FQ
           RC

USAGE:    FF PLOT

          .(F)ERMI, (G)AUSS, (B)UTTER OR (R)EMEZ FILTER? (F/G/B/R): R
          [Enter the name of the filter to be designed. The first three 
          options produce the drawing of the filter for the 
          given set of parameters.]

       For Fermi Filter SPIDER asks:
          '<div class='"'opt_inp'"'>'

          .PLOT X-DIMENSION:
          [Enter vertical length of the plot.]

          .(L)OWPASS, (H)IGHPASS, OR (B)ANDPASS? (L/H/B):
          [Enter type of the filter to be plotted]

          .FERMI CUTOFF RADIUS, TEMP. FACTOR:
          [Enter cutoff frequency and temperature factor.]
         '</div>'

       For Bandpass filter SPIDER asks:
          '<div class='"'opt_inp'"'>'

          .FERMI CUTOFF RADIUS.,TEMP.FACTOR:
          [Enter cutoff frequency and temperature factor for the second
           cutoff.]
          '</div>'

       For Gaussian Filter SPIDER asks:
          '<div class='"'opt_inp'"'>'

          .PLOT X-DIMENSION:
          [Enter vertical length of the plot.]

          .(L)OWPASS, (H)IGHPASS, OR (B)ANDPASS? (L/H/B): B
          [Enter type of the filter to be plotted]

          .RADIUS: 
          [Enter cutoff frequency]

          .(M)ULTIPLICATIVE, (A)DDITIVE:           
          [Enter type of the filter.]
          '</div>'

       For Butterworth filter SPIDER asks:
          '<div class='"'opt_inp'"'>'

          .PLOT X-DIMENSION:
          [Enter vertical length of the plot.]

          .(L)OWPASS, (H)IGHPASS (L/H):
          [Enter type of the filter to be plotted.]

          .PASS-BAND AND STOP-BAND FREQUENCY:
          [Enter the two frequencies.]

          .LIKE AN EXAMPLE WITH STEP FUNCTION??(Y/N):
          [If answer is "Y" then it gives the plot of a step function
           and how it looks like when it is filtered using the 
           Butterworth filter with the given parameters. 
           NOTE: This currently works only for dimension (of plot)
           equal to powers of two only.
           If answer is "N" then you are back to operation command].
          '</div>'

       For Remez filter SPIDER asks:
          '<div class='"'opt_inp'"'>'

          .IMPULSE RESPONSE LENGTH: 17
          [Enter the impulse response length. It should be odd, not larger
           then 59, and never larger than the actual size of Fourier space
           filter or smaller than 3.]

          .NUMBER OF BANDS: 3
          [Enter the number of pass- or stop- bands in freq. space
           for a filter to be designed (at least 2).]

          .BAND # i - LOWER AND UPPER EDGES: 0.1,0.14
          [Enter the edges boundaries for each band.]

          .BAND # i - DESIRED VALUE: 2.3
          [Enter the desired filter for each band (e.g. 0.0 or 0.5 or
           1.0 or 3.0).]

          .BAND # i - WEIGHTING: 1
          [Enter the weight for each band; this specifies the relative
           error of approximation allowed in a given band]

          .PLOT FREQUENCY RESPONSE (Y/N): Y
          [Enter 'Y' if you want the plot of frequency response]

          .DO YOU LIKE YOUR FILTER (Y/N): Y
          [Enter 'Y' if you are satisfied with approximation obtained.
           Otherwise you go back to the first step.]

          .FILTER FILE: FIL001
          [Enter name of file where filter is to be stored.]

          .FILTER DIMENSIONS (NX,NY): 128,64
          [Enter dimensions of resulting filter in Fourier space.
           If 0 then PSF is stored to be subsequently used in 
           'RC' operation for real space filtering.]

          .NUMBER OF SLICES (NZ): 32
          [Enter number of slices for 3-D filter file. If 0 then a 2-D
          filter is produced, if >0 then a 3-D filter.]
          '</div>'

       If you answered RETURN for (NX,NY)  SPIDER asks:
          '<div class='"'opt_inp'"'>'

          .PRODUCE 2-D OR 3-D PSF (2/3)?: 3
          [Enter 2 or 3, and the file containing Point Spread Function
           of the appropriate dimensions is stored (to be used for 
           filtering with RC).
          '</div>'

NOTES: 1. Frequency units are absolute units (independent of image size) 
          in the range 0.0 <= f <= 0.5 (0.5 is the highest value).
          The following two equations can be used to convert frequency
          units into pixel units for (p=0  ... (nx/2) ):   '<br />'
          p = 2 * f   * (NX / 2)                           '<br />'
          f = 0.5 * p / (NX / 2)                           '<br />'

        2. For description of the Remez exchange algorithm see any book
           on digital filter design. 

        3. For the description of 2-D McClellan
           transformation algorithm see: '<i>''Digital filters and their
           applications''</i>' Cappellini V., Constantinides A.G., Emiliani P.

        3. For the description of the Butterworth filter see  
           '<i>'Signal processing algorithms'</i>' Samuel D.Stearns, Ruth A.David.

        4. Remez option implemented by: Paul Penczek.
                                                                    
SUBROUTINE: FILTPLOT, FERMP, GAUSSP, BUTERP, REMEZP, MRKUR3,
            ROT_P, OPSF_P, ROT3_P, OPSF3_P, INF_Q, INF3_P,
            FMRS_2, FMRS_3

CALLER:     FOUR1
@


1.16
log
@enter
@
text
@d1 1
a1 1
FF PLOT   Fourier Filter - design filter                     FF PLOT
@


1.15
log
@*** empty log message ***
@
text
@d110 1
a110 1
          .ENTER FILTER DIMENSIONS (NX,NY): 128,64
@


1.14
log
@clarified freq units
@
text
@d30 1
d69 2
a70 2
          [If answer is"Y" then it gives the plot of a step function
           and how does it look like when it is filtered using the 
@


1.13
log
@nx
@
text
@d8 3
a10 1
SEE ALSO:  FF    (Fourier filter)
d14 1
a14 1
          .(F)ERMI, (G)AUSS, (B)UTER OR (R)EMEZ FILTER? (F/G/B/R): R
d19 1
a19 1
       For Fermi Filter the required parameters are:
d30 3
a32 1
          For Bandpass filter additional questions are asked:
d39 1
a39 1
       For Gauss Filter:
d55 1
a55 1
       For Butterworth filter:
d76 1
a76 1
       For Remez filter:
d111 2
a112 2
           If 0 then PSF is stored to be subsequently used in RC command
           for real space filtering.]
d119 1
a119 1
       If you answered RETURN for (NX,NY) question then you are asked
d122 1
a122 1
          .PRODUCE 2-D OR 3-D PSF?: 3
d128 13
a140 14
NOTES: 1. Frequency units are absolute (independent of image size).
          They are in the range 0.0<=f<=0.5 (0.5 is the highest freq.).
          Here are two equations witch can help you to recalculate this
          units (f) into pixel units (kx=0, ... , (nx/2).):
          '<pre>'  
             kx=2*f*(NX/2)
                      
             f=0.5*kx/(NX/2)
           '</pre>'  
       
          For the description of the Remez exchange algorithm see any book
          on digital filter design. For the description of 2-D McClellan
          transformation algorithm see: '<i>''Digital filters and their
          applications''</i>' Cappellini V., Constantinides A.G., Emiliani P.
d142 2
a143 2
          For the description of the Butterworth filter look at 
          '<i>'Signal processing algorithms'</i>' Samuel D.Stearns, Ruth A.David.
d145 1
a145 1
          2. Remez option implemented by: Paul Penczek.
@


1.12
log
@*** empty log message ***
@
text
@d34 1
d41 1
a41 1
          .(L)OWPASS, (H)IGHPASS, OR (B)ANDPASS? (L/H/B):
d44 1
a44 1
          .RADIUS:
d47 1
a47 1
          .(M)ULTIPLICATIVE,(A)DDITIVE:           
d50 1
d71 1
d105 1
a105 1
          .(NSAM,NROW): 128,64
d110 1
a110 1
          .NUMBER OF SLICES (NSLICE): 32
d114 2
a115 1
       If you answered RETURN for (NSAM,NROW) question then you are asked
d127 1
a127 1
          units (f) into pixel units (kx=0, ... , (nsam/2).):
d129 1
a129 1
             kx=2*f*(nsam/2)
d131 1
a131 1
             f=0.5*kx/(nsam/2)
d136 2
a137 2
          transformation algorithm see: '<I>''Digital filters and their
          applications''</I>' Cappellini V., Constantinides A.G., Emiliani P.
@


1.11
log
@*** empty log message ***
@
text
@d18 1
d33 1
a33 1

d35 1
d48 1
a48 1

d50 1
d68 1
a68 1

d70 1
d110 1
a110 1

d112 1
d118 1
a118 1

d124 1
a124 1
          '<PRE>'  
d128 1
a128 1
           '</PRE>'  
d136 1
a136 1
          '<I>'Signal processing algorithms'</I>' Samuel D.Stearns, Ruth A.David.
@


1.10
log
@list of procedures
@
text
@a8 3
           FF B  (Fourier filter - bar ky direction)
           FF BX (Fourier filter - bar kx direction)
           FF S  (Fourier filter - restore surface topography)
d15 1
a15 1
          given set of parameters]
@


1.9
log
@freq units fixed
@
text
@d138 3
a140 1
SUBROUTINE: FILTPLOT, REMEZP, REMEZP
@


1.8
log
@*** empty log message ***
@
text
@d123 3
a125 8
             kx=f*NSAM
                             (approx)
             f=kx/nsam
        
        
             kx=f*(NSAM+2)
                                     (exact)
             f=0.5*kx/(nsam/2+1)
@


1.7
log
@*** empty log message ***
@
text
@d1 1
a1 1
FF PLOT   Fourier Filter - Design Filter                     FF PLOT
d135 2
a136 2
          transformation algorithm see: 'Digital filters and their
          applications' Cappellini V., Constantinides A.G., Emiliani P.
d141 1
a141 1
          2. Remez option implemented by Paul Penczek.
@


1.6
log
@updated
@
text
@d1 1
a1 1
FF PLOT   Design of Filter                                  FF PLOT
d9 3
a11 3
           FF B  (Fourier filter/bar ky direction)
           FF BX (Fourier filter/bar kx direction)
           FF S  (Fourier filter, restore surface topography)
d139 1
a139 1
          'Signal processing algorithms' Samuel D.Stearns, Ruth A.David.
@


1.5
log
@fromating was wrong
@
text
@d104 1
a104 1
           for real space filtering. This dimensions must be a powe of 2.]
d108 1
a108 4
          filter is produced, if >0 then a 3-D filter.
          Warning! :: this involves computation of appropriate FFT ::
          for larger filters this can take some time. NSAW, NROW and NSLICE
          have to be the pwoer of two.]
d143 1
a143 1
SUBROUTINE: FILTPLOT, REMEZPLOT
@


1.4
log
@changes for better html file
@
text
@d8 1
a8 2

SEE ALSO:  FF  (Fourier filter)
d10 2
a11 3
           FF BX  (Fourier filter/bar kx direction)
           FF S  (Fourier filter, restore surface topograph)

d20 1
a20 2
          For Fermi Filter:
          [The required paramters are]
d36 1
a36 1
          For Gauss Filter:
d50 1
a50 1
          For Butterworth filter:
d69 1
a69 1
          For Remez filter:
d113 1
a113 1
          If you answered RETURN for (NSAM,NROW) question then you are asked
d125 4
a128 4
        
                kx=f*NSAM
                                    (approx)
                f=kx/nsam
d131 1
a131 1
                kx=f*(NSAM+2)
d133 3
a135 2
                f=0.5*kx/(nsam/2+1)
        
d144 1
a144 1
          Remez option implemented by Paul Penczek.
d146 3
a148 2
Subroutine: FILTPLOT, REMEZPLOT
Caller:     FOUR1
@


1.3
log
@ modified for butterworth filter.
@
text
@d112 1
a112 1
          Warning! - this involves computation of appropriate FFT - 
@


1.2
log
@replaced_tabs
@
text
@a0 1

d2 1
a2 1
                                                            12/31/93
d17 2
a18 2
          .(F)ERMI, (G)AUSS, OR (R)EMEZ FILTER? (F/G/R): R
          [Enter the name of the filter to be designed. The first two 
a39 1
          [The required paramters are]
d53 19
d143 2
a149 1

@


1.1
log
@Initial revision
@
text
@@
