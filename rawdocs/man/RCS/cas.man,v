head	1.31;
access;
symbols
	best-code:1.22
	pre-named-reg:1.21
	pre_GPL:1.21
	prec_CA:1.15
	oct21:1.11;
locks; strict;


1.31
date	2014.01.12.17.26.34;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2013.03.26.17.55.24;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2010.02.26.17.21.11;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2009.09.10.11.27.24;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2009.09.02.16.53.10;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2009.07.30.16.15.38;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2009.06.22.14.45.00;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2008.11.26.13.28.06;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2008.11.04.16.12.13;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2006.03.08.15.21.19;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2004.01.22.16.15.04;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2004.01.21.15.37.13;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2003.12.10.20.22.00;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2003.12.05.17.27.35;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.11.17.15.21.11;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.10.16.16.56.02;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2001.08.06.13.55.34;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2001.04.02.14.52.21;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.01.11.18.38.14;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.06.05.13.59.55;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.07.21.17.09.20;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.06.28.18.29.31;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.06.28.18.27.30;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	97.08.22.19.11.13;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.08.22.15.51.01;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	95.11.08.21.03.21;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	95.04.25.20.39.37;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	94.09.09.11.51.14;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.07.12.16.32.00;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.23.27;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.14.15;	author leith;	state Exp;
branches;
next	;


desc
@@


1.31
log
@enter
@
text
@
CA S      Correspondence Analysis - Solution                     CA S    
                                                                3/21/13

PURPOSE:  Execute correspondence (CORAN) analysis, or Principal 
          Component Analysis (PCA) on image data.  '<br />'
          See: '<a href='"'../techs/classification/tutorial.html'"'>'
          Classification and Clustering Tutorial'</a>' for further info.

SEE ALSO: CA NOISE  
          CA SM  
          CA SR  
          CA SRA 
          CA SRD 
          CA SRE 
          CA SRI 
          CA VIS 
          SD C
  
USAGE:    CA S 

          .IMAGE FILE TEMPLATE : SEC***
          [Enter a file name template identifying the image series 
          to be analyzed.]

          .FILE NUMBERS OR SELECTION DOC. FILE NAME 1-40,45,50-70
          [Enter numbers of image files in the series.  If the images 
          are supplied as a 3D stack, then the numbers are interpreted 
          as slice numbers.]

          .MASK FILE: MAS002
          [Enter the name of the file containing a mask.  Only
          image pixels where mask pixels are greater than 0.5 are
          analyzed in CORAN or PCA. Enter '*' if no masking is desired.]

          .NUMBER OF FACTORS: 20
          [Enter the number of factors to be used.  Note that 
          eigenvectors and eigenvalues are only computed up to this
          number.]

          .CORAN, PCA, ITERATIVE PCA, OR SKIP ANALYSIS (C/P/I/S): C
          [Choose type of analysis                               '<br />'
           C: '&'nbsp; CORAN.,                                   '<br />'
           P: '&'nbsp; Principal Component Analysis.             '<br />'
           I: '&'nbsp; Iterative Principal Component Analysis.,  '<br />'
           S: '&'nbsp; Skip analysis and just create _SEQ file.]

      If CORAN is used the following question appears:
         '<div class='"'opt_inp'"'>'

          .ADDITIVE CONSTANT: 0.0
          [CORAN analysis can not accept images containing negative values.  
          If images contain negative values  this can be overcome by 
          specifying an additive constant that will be added to all 
          (within-mask) pixels of all images].
          '</div>'

          .OUTPUT FILE PREFIX: coran
          [Enter the prefix used for the output files where data are
          to be stored.  'CA S' creates five or six files to store
          the results.  In these files the variable definitions are:  

          '<pre>'
          '&'nbsp;'&'nbsp; NUMIM = Number of images
          '&'nbsp;'&'nbsp; NPIX  = Number of pixels under mask
          '&'nbsp;'&'nbsp; NFAC  = Number of factors
          '&'nbsp;'&'nbsp; NSAM  = Image x dimension
          '&'nbsp;'&'nbsp; NROW  = Image y dimension
          '&'nbsp;'&'nbsp; PCA   = 1 if PCA, 0 if CORAN
          '&'nbsp;'&'nbsp; FIM   = Original image number
          '&'nbsp;'&'nbsp; FPIX  = Pixel number
          '&'nbsp;'&'nbsp; ACTIV = Active image flag
          '&'nbsp;'&'nbsp; TRACE = Matrix trace
          '&'nbsp;'&'nbsp; FDUM  = Unused value
          '&'nbsp;'&'nbsp; N     = Number of values
          '</pre>'

          The files are:   '<p>'

          PREFIX_IMC:  '&'nbsp;    Text file with image map coordinates.       

            '<pre>' 
            '&'nbsp;'&'nbsp; NUMIM, NFAC, NSAM, NROW, NUMIM, PCA
            '&'nbsp;'&'nbsp; IMAGE(1)     COORDINATES (1..NFAC), WEIGHTP(1),     DOR, FIM(1), ACTIVE
            '&'nbsp;'&'nbsp; IMAGE(2)     COORDINATES (1..NFAC), WEIGHTP(2),     DOR, FIM(2), ACTIVE
            '&'nbsp;'&'nbsp; xx                                                 
            '&'nbsp;'&'nbsp; IMAGE(NUMIM) COORDINATES (1..NFAC), WEIGHTP(NUMIM), DOR, FIM(NUMIM), ACTIVE
            '</pre>'

          PREFIX_PIX:  '&'nbsp;    Text file with pixel map coordinates.       
            '<pre>'  
            '&'nbsp;'&'nbsp; NPIX, NFAC, NSAM , NROW , NUMIM, PCA
            '&'nbsp;'&'nbsp; PIXEL(1)    COORDINATES(1..NFAC), WEIGHTP(1), CO(1), FPIX, FDUM
            '&'nbsp;'&'nbsp; PIXEL(2)    COORDINATES(1..NFAC), WEIGHTP(2), CO(2), FPIX, FDUM
            '&'nbsp;'&'nbsp; xx                                                 
            '&'nbsp;'&'nbsp; PIXEL(NPIX) COORDINATES(1..NFAC), WEIGHTP(NPIX),CO(NPIX), FPIX, FDUM
            '</pre>'

          PREFIX_EIG:  '&'nbsp;    Text file with eigenvalues.  
            '<pre>' 
            '&'nbsp;'&'nbsp; NFAC,  TOTAL WEIGHT, TRACE, PCA,  N
            '&'nbsp;'&'nbsp; EIGENVALUE(1),    %,  CUMULATIVE %
            '&'nbsp;'&'nbsp; EIGENVALUE(2),    %,  CUMULATIVE %
            '&'nbsp;'&'nbsp; xx                                                 
            '&'nbsp;'&'nbsp; EIGENVALUE(NFAC), %,  CUMULATIVE %
            '&'nbsp;'&'nbsp; IF (PCA)
               '&'nbsp;'&'nbsp;'&'nbsp;'&'nbsp; IMAGE OR PIXEL AVERAGES (1..10)
               '&'nbsp;'&'nbsp;'&'nbsp;'&'nbsp; IMAGE OR PIXEL AVERAGES (11..20)
               '&'nbsp;'&'nbsp;'&'nbsp;'&'nbsp; xx                                                 
            '</pre>'

          PREFIX_SEQ: '&'nbsp;    Unformatted sequential file having image values under the
                          mask. This file decreases memory requirements.  
            '<pre>' 
            '&'nbsp;'&'nbsp; NUMIM,  NPIX
            '&'nbsp;'&'nbsp; IMAGE(1)     VALUES(1...NPIX), FIM(1)
            '&'nbsp;'&'nbsp; IMAGE(2)     VALUES(1...NPIX), FIM(2)
            '&'nbsp;'&'nbsp; xx                                                 
            '&'nbsp;'&'nbsp; IMAGE(NUMIM) VALUES(1...NPIX), FIM(NUMIM)
            '</pre>'

          PREFIX_SET:  '&'nbsp;  Transposed direct access file having image 
                          values under the mask. This file decreases 
                          memory requirements. Only created if transposition
                          occurs.                             
            '<pre>' 
            '&'nbsp;'&'nbsp; PIXEL(1)    VALUES(1...NUMIM)
            '&'nbsp;'&'nbsp; PIXEL(2)    VALUES(1...NUMIM)
            '&'nbsp;'&'nbsp; xx                                                 
            '&'nbsp;'&'nbsp; PIXEL(NPIX) VALUES(1...NUMIM)
            '</pre>'

          PREFIX_MAS:  '&'nbsp; Mask FILE in SPIDER image format     '<br />'

NOTES:    1. In general, it is advisable to request a large number of
          factors (even larger than number of pixels under the mask, the
          system will automatically limit the number of factors to the 
          permitted number).           

         2. '<b>'WARNING'</b>': for very large problems (the size of
          covariance matrix in the order of thousands) the methods  used
          for CORAN and PCA analysis are slow and inaccurate, the system 
          may fail on numerical accuracy or enter an endless loop.  In 
          these cases use 'Iterative PCA analysis' instead.  This same
          strategy may be useful if you get an error message:  
          *** ERROR: DIAGONALIZATION FAILURE when using CORAN.

SUBROUTINES: JPMSK1, SCORAN3, SPCA3, INCOR3, INCORT, GETCOO, GETCOOT, VPROP, FILELIST

CALLER:      UTIL1
@


1.30
log
@*** empty log message ***
@
text
@d22 1
a22 1
          .ENTER IMAGE FILE TEMPLATE : SEC***
d26 1
a26 1
          .ENTER FILE NUMBERS OR SELECTION DOC. FILE NAME 1-40,45,50-70
@


1.29
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                                2/26/10
d6 3
a8 1
          Component Analysis (PCA) on image data.  
d10 2
a11 1
SEE ALSO: CA SM  
d49 1
d56 1
d135 1
a135 6
NOTES:    1. See: 
           '<a href='"'../techs/classification/index.html'"'>'Classification and Clustering Summary'</a>' and  
           '<a href='"'../techs/classification/tutorial.html'"'>'Classification and Clustering Tutorial'</a>' 
           for further info.

         2. In general, it is advisable to request a large number of
d140 1
a140 1
         3. '<b>'WARNING'</b>': for very large problems (the size of
@


1.28
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                                9/03/09
d144 1
a144 1
          these cases suse Iterative PCA analysis instead.  This same
@


1.27
log
@*** empty log message ***
@
text
@d56 1
a56 1
          the results.  In these files the variable definitions are:  '<br />'
d59 12
a70 10
          NUMIM = Number of images
          NPIX  = Number of pixels under mask
          NFAC  = Number of factors
          NSAM  = Image x dimension
          NROW  = Image y dimension
          PCA   = 1 if PCA, 0 if CORAN
          FIM   = Original image number
          FPIX  = Pixel number
          ACTIV = Active image flag
          FDUM  = Unused value
d75 1
a75 1
          PREFIX_IMC:      Text file with image map coordinates.           '<br />'
d78 5
a82 5
            NUMIM, NFAC, NSAM, NROW, NUMIM, PCA
            IMAGE(1)     COORDINATES (1..NFAC), WEIGHTP(1),     DOR, FIM(1), ACTIVE
            IMAGE(2)     COORDINATES (1..NFAC), WEIGHTP(2),     DOR, FIM(2), ACTIVE
            xx                                                 
            IMAGE(NUMIM) COORDINATES (1..NFAC), WEIGHTP(NUMIM), DOR, FIM(NUMIM), ACTIVE
d85 1
a85 1
          PREFIX_PIX:      Text file with pixel map coordinates.          '<br />'
d87 5
a91 5
            NPIX, NFAC, NSAM , NROW , NUMIM, PCA
            PIXEL(1)    COORDINATES(1..NFAC), WEIGHTP(1), CO(1), FPIX, FDUM
            PIXEL(2)    COORDINATES(1..NFAC), WEIGHTP(2), CO(2), FPIX, FDUM
            xx                                                 
            PIXEL(NPIX) COORDINATES(1..NFAC), WEIGHTP(NPIX),CO(NPIX), FPIX, FDUM
d94 1
a94 1
          PREFIX_EIG:      Text file with eigenvalues.               '<br />'
d96 9
a104 9
            NFAC,   TOTAL WEIGHT, TRACE, PCA,   N
            EIGENVALUE(1),    %,  CUMULATIVE %
            EIGENVALUE(2),    %,  CUMULATIVE %
            xx                                                 
            EIGENVALUE(NFAC), %,  CUMULATIVE %
            IF (PCA)
               IMAGE OR PIXEL AVERAGES (1..10)
               IMAGE OR PIXEL AVERAGES (11..20)
               xx                                                 
d107 2
a108 2
          PREFIX_SEQ:     Unformatted sequential file having image values under the
                          mask. This file decreases memory requirements.             '<br>'
d110 6
a115 6
            NUMIM,  NPIX
            IMAGE(1)     VALUES(1...NPIX), FIM(1)
            IMAGE(2)     VALUES(1...NPIX), FIM(2)
            xx                                                 
            IMAGE(NUMIM) VALUES(1...NPIX), FIM(NUMIM)
          '  </pre>'
d117 1
a117 1
          PREFIX_SET:     Transposed direct access file having image 
d120 1
a120 1
                          occurs.                             '<br />'
d122 4
a125 4
            PIXEL(1)    VALUES(1...NUMIM)
            PIXEL(2)    VALUES(1...NUMIM)
            xx                                                 
            PIXEL(NPIX) VALUES(1...NUMIM)
d128 1
a128 1
          PREFIX_MAS      Mask FILE in SPIDER image format     '<br />'
@


1.26
log
@*** empty log message ***
@
text
@d2 2
a3 2
CA S      Correspondence Analysis -  Solution                     CA S    
                                                                6/18/09
d6 1
a6 1
          Component Analysis (PCA) of image data.  
d36 1
a36 1
          number. ]
d39 5
a43 5
          [Choose type of analysis                      '<br />'
           C: CORAN.,                                   '<br />'
           P: Principal Component Analysis.             '<br />'
           I: Iterative Principal Component Analysis.,  '<br />'
           S: Skip analysis and just create _SEQ file.]
d56 1
a56 1
          the results.  In these files the variable definitions are:  '<br>'
d58 1
a58 1
          '<pre>
d75 7
a81 7
          '<pre>' 
          NUMIM, NFAC, NSAM, NROW, NUMIM, PCA
          IMAGE(1)     COORDINATES (1..NFAC), WEIGHTP(1),     DOR, FIM(1), ACTIVE
          IMAGE(2)     COORDINATES (1..NFAC), WEIGHTP(2),     DOR, FIM(2), ACTIVE
                     xx                                                 
          IMAGE(NUMIM) COORDINATES (1..NFAC), WEIGHTP(NUMIM), DOR, FIM(NUMIM), ACTIVE
          '</pre>'
d84 7
a90 7
          '<pre>'  
          NPIX, NFAC, NSAM , NROW , NUMIM, PCA
          PIXEL(1)    COORDINATES(1..NFAC), WEIGHTP(1), CO(1), FPIX, FDUM
          PIXEL(2)    COORDINATES(1..NFAC), WEIGHTP(2), CO(2), FPIX, FDUM
          xx                                                 
          PIXEL(NPIX) COORDINATES(1..NFAC), WEIGHTP(NPIX),CO(NPIX), FPIX, FDUM
          '</pre>'
d93 11
a103 11
          '<pre>' 
          NFAC,   TOTAL WEIGHT, TRACE, PCA,   N
          EIGENVALUE(1),    %,  CUMULATIVE %
          EIGENVALUE(2),    %,  CUMULATIVE %
          xx                                                 
          EIGENVALUE(NFAC), %,  CUMULATIVE %
          IF (PCA)
             IMAGE OR PIXEL AVERAGES (1..10)
             IMAGE OR PIXEL AVERAGES (11..20)
             xx                                                 
          '</pre>'
d105 1
a105 1
          PREFIX_SEQ:      Unformatted sequential file having image values under the
d107 7
a113 7
          '<pre>' 
          NUMIM,  NPIX
          IMAGE(1)     VALUES(1...NPIX), FIM(1)
          IMAGE(2)     VALUES(1...NPIX), FIM(2)
          xx                                                 
          IMAGE(NUMIM) VALUES(1...NPIX), FIM(NUMIM)
          '</pre>'
d115 1
a115 1
          PREFIX_SET:      Transposed direct access file having image 
d118 7
a124 7
                          occurs. '<br />'
          '<pre>' 
          PIXEL(1)    VALUES(1...NUMIM)
          PIXEL(2)    VALUES(1...NUMIM)
          xx                                                 
          PIXEL(NPIX) VALUES(1...NUMIM)
          '</pre>'
d142 3
a144 1
          these cases use Iterative PCA Analysis instead.
@


1.25
log
@fdum
@
text
@d40 1
a40 1
           C: Coran.,                                   '<br />'
d73 1
a73 1
          PREFIX_IMC      Text file with image coordinates.           '<br />'
d77 3
a79 3
          IMAGE(1) COORDINATES     (1..NFAC), WEIGHTP(1), DOR, FIM(1), ACTIVE
          IMAGE(2) COORDINATES     (1..NFAC), WEIGHTP(2), DOR, FIM(2), ACTIVE
                     . 
d83 1
a83 1
          PREFIX_PIX      Text file with pixel coordinates.          '<br />'
d86 4
a89 4
          PIXEL(1) COORDINATES     (1..NFAC), WEIGHTP(1), CO(1), FPIX, FDUM
          PIXEL(2) COORDINATES     (1..NFAC), WEIGHTP(2), CO(2), FPIX, FDUM
                     ..
          PIXEL(NPIX) COORDINATES (1..NFAC), WEIGHTP(NPIX),CO(NPIX), FPIX, FDUM
d92 1
a92 1
          PREFIX_EIG      Text file with eigenvalues.               '<br />'
d94 5
a98 5
          NFAC,         TOTAL WEIGHT, TRACE, PCA,   N
          EIGENVALUE(1),      %,      CUMULATIVE %
          EIGENVALUE(2),      %,      CUMULATIVE %
                  ..
          EIGENVALUE(NFAC),   %,      CUMULATIVE %
d102 1
a102 1
                  ..
d105 1
a105 1
          PREFIX_SEQ      Unformatted sequential file having image values under the
d108 4
a111 4
          NUMIM, NPIX
          IMAGE(1) VALUES(1...NPIX), FIM(1)
          IMAGE(2) VALUES(1...NPIX), FIM(2)
                    ..
d115 1
a115 1
          PREFIX_SET      Transposed direct access file having image 
d120 3
a122 3
          PIXEL(1) VALUES(1...NUMIM)
          PIXEL(2) VALUES(1...NUMIM)
                     .. 
d140 1
a140 1
          for Coran and PCA analysis are slow and inaccurate, the system 
@


1.24
log
@ tutorial.html
@
text
@d3 1
a3 1
                                                                3/08/06
d59 5
a63 5
          NUMIM = NUMBER OF IMAGES
          NPIX  = NUMBER OF PIXELS UNDER MASK
          NFAC  = NUMBER OF FACTORS
          NSAM  = IMAGE X DIMENSION
          NROW  = IMAGE Y DIMENSION
d65 4
a68 2
          FIM   = ORIGINAL IMAGE NUMBER
          FPIX  = PIXEL NUMBER
d73 32
d111 1
a111 2
                     . 
                     .
d122 1
a122 2
                     . 
                     .
a125 37

          PREFIX_IMC      Text file with image coordinates.           '<br />'
          '<pre>' 
          NUMIM, NFAC, NSAM, NROW, NUMIM, PCA
          IMAGE(1) COORDINATES     (1..NFAC), WEIGHTP(1), DOR, FIM(1)
          IMAGE(2) COORDINATES     (1..NFAC), WEIGHTP(2), DOR, FIM(2)
                     . 
                     .
          IMAGE(NUMIM) COORDINATES (1..NFAC), WEIGHTP(NUMIM), DOR, FIM(NUMIM)
           '</pre>'


          PREFIX_PIX      Text file with pixel coordinates.          '<br />'
          '<pre>'  
          NPIX, NFAC, NSAM , NROW , NUMIM, PCA
          PIXEL(1) COORDINATES     (1..NFAC), WEIGHTP(1), CO(1), FPIX
          PIXEL(2) COORDINATES     (1..NFAC), WEIGHTP(2), CO(2), FPIX
                     . 
                     .
          PIXEL(NPIX) COORDINATES (1..NFAC), WEIGHTP(NPIX),CO(NPIX), FPIX
          '</pre>'


          PREFIX_EIG      Text file with eigenvalues.'<br />'
          '<pre>' NFAC,         TOTAL WEIGHT, TRACE, PCA,   N
                  EIGENVALUE(1),      %,      CUMULATIVE %
                  EIGENVALUE(2),      %,      CUMULATIVE %
                   . 
                   .
                  EIGENVALUE(NFAC),   %,      CUMULATIVE %
                  IF (PCA)
                     IMAGE OR PIXEL AVERAGES (1..10)
                     IMAGE OR PIXEL AVERAGES (11..20)
                     . 
                     .
           '</pre>'

@


1.23
log
@*** empty log message ***
@
text
@d133 6
a138 1
NOTES:   1. In general, it is advisable to request a large number of
d143 1
a143 1
         2. '<b>'WARNING'</b>': for very large problems (the size of
@


1.22
log
@fixed
@
text
@d10 1
d12 1
a13 1
          CA SRP
@


1.21
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                                1/22/04
a6 1
          The solution is found and eigenimages are calculated.
d12 1
d37 6
a42 4
          .CORAN, PCA, OR SKIP ANALYSIS (C/P/S): C
          [P: will start Principal Component Analysis.   '<br>'
           C: will start Coran Analysis.,
           S: will skip analysis and just create _SEQ file.]
a67 1

d70 2
a71 2
          PREFIX_SEQ      Sequential file having image values. This file
                          decreases memory requirements.             '<br>'
d82 3
a84 1
                          values. This file decreases memory requirements.             '<br>'
d94 1
a94 1
          PREFIX_IMC      Text file with image coordinates.           '<br>'
d105 1
a105 1
          PREFIX_PIX      Text file with pixel coordinates.          '<br>'
d107 1
a107 1
          NPIX, NFAC, NSAM , NROW , NUMIM
d116 2
a117 2
          PREFIX_EIG      Text file with eigenvalues.'<br>'
          '<pre>' NFAC,         TOTAL WEIGHT, TRACE
d130 1
a130 1
          PREFIX_MAS      Mask FILE in SPIDER image format     '<br>'
d138 4
a141 3
          covariance matrix in the order of thousands) the methods used
          are slow and inaccurate, the system may fail on numerical
          accuracy.
d143 1
a143 1
SUBROUTINES: JPMSK1, SCORAN3, INCOR3, INCORT, GETCOO, GETCOOT, VPROP, FILELIST
@


1.20
log
@skip analysis
@
text
@d2 2
a3 2
CA S      Correspondence Analysis -  Solution                      CA S    
                                                                1/21/04
d139 1
a139 1
SUBROUTINES: JPMSK1, SCORAN3, INCOR3, GETCOO, GETCOOT,  VPROP, FILELIST
@


1.19
log
@added file info
@
text
@d3 1
a3 1
                                                                12/10/03
d9 5
a13 5
SEE ALSO: CA SM  (Correspondence Analysis - factor map)
          CA SR  (Correspondence Analysis - full reconstitution of images)
          CA SRD (Correspondence AnalysiS - reconstitute differential images)
          CA SRI (Correspondence AnalysiS - reconstitute importance images)
          CA VIS (Correspondence Analysis - Create visual map)
d37 1
a37 1
          .CORAN OR PCA ANALYSIS (C/P): C
d39 2
a40 1
           C: will start Coran Analysis.]
d52 2
a53 2
          to be stored.  'CA S' creates five files to store
          the results.  Their respective names and meanings are:     '<br>'
d67 2
d72 13
a84 3
          NUMIM, NPIX, NSAM, NROW*NSLICE 
          IMAGE(1) VALUES(1...NPIX), PIA(1)
          IMAGE(2) VALUES(1...NPIX), PIA(2)
d87 1
a87 1
          IMAGE(NUMIM) VALUES(1...NPIX), PIA(NUMIM)
d94 2
a95 2
          IMAGE(1) COORDINATES     (1..NFAC), WEIGHTP(1), DOR, FIM
          IMAGE(2) COORDINATES     (1..NFAC), WEIGHTP(2), DOR, FIM
d98 1
a98 1
          IMAGE(NUMIM) COORDINATES (1..NFAC), WEIGHTP(NUMIM), DOR, FIM
d113 1
a113 1
          PREFIX_EIG      Text file with eigenvalues and eigenvectors.'<br>'
@


1.18
log
@*** empty log message ***
@
text
@d2 2
a3 2
CA S      Correspondence Analysis -  Solution                       CA S    
                                                                10/14/03
d53 13
d68 10
d79 10
d90 25
a114 2
          PREFIX_EIG      Text file with eigenvectors and eigenvalues.'<br>'
          PREFIX_MAS      SPIDER mask image file.'<br>'
@


1.17
log
@\.
@
text
@d5 1
a5 1
PURPOSE:  Execute correspondence analysis (CORAN), or Principal 
d51 1
a51 1
          to be stored.  'CA S' creates four files to store
d54 1
a54 1
                          is used to decrease memory requirements.   '<br>'
d58 1
@


1.16
log
@*** empty log message ***
@
text
@d38 2
a39 2
          [P: will start Principal Component Analysis.'<br>'
           C: will start Coran Analysis <br>'.]
d44 2
a45 2
          [CORAN can not accept images with negative values.  If images
           have negative values  this can be corrected by 
d52 1
a52 1
          the results.  Their respective names and meanings are'<BR>'
d54 4
a57 4
                          is used to decrease memory requirements.'<BR>'
          PREFIX_IMC      Text file with image coordinates'<BR>'
          PREFIX_PIX      Text file with pixel coordinates'<BR>'
          PREFIX_EIG      Text file with eigenvectors and eigenvalues'<BR>'
d62 1
a62 1
          permitted number).'<br>'
@


1.15
log
@calls
@
text
@d2 2
a3 2
CA S      Correspondence Analysis - find Solution            CA S    
                                                             8/06/01
d5 5
a9 8
PURPOSE:  Second part of CORAN or PCA: '<BR>'
          Execute correspondence analysis of image data previously
          stored in a sequential file using 'CA SI'.
          the solution is found and eigenimages are calculated.

SEE ALSO: CA SI  (Correspondence AnalysiS - initialize)
          CA SM  (Correspondence Analysis - factor map)
          CA SME (Correspondence Analysis - factor map and Eigen Values)
a12 1
          CA SRP (Correspondence Analysis - PCA reconstitution)
d15 2
a16 2

USAGE:    CA S
d18 13
a30 4
          .SEQUENTIAL FILE: SEQ001
          [Enter the name of the "sequential file" containing the
          image data, which has been previously created by 
          executing 'CA SI'.]
d32 1
a32 1
          .NUMBER OF FACTORS, COORDINATE FILE CODE: 8,1
d35 17
a51 1
          number. 'CA S' creates three files to store
d53 7
a59 33
          IMC#     image coordinates'<BR>'
          PIX#     pixel coordinates'<BR>'
          EIG#     eigenvectors and eigenvalues'<BR>'
          Here the code number is used to distinguish coordinate
          file sets of different 'CA S' runs.  The code is used in
          subsequent operations ('CA SM','CA SME','CA SR','CA SRD')
          to refer to the results of a particular run.

          .PCA (P), PCA - FORCE INCORE (I), OR CORAN(C): P, 
          [ P or Y: will start Principal Component Analysis.'<BR>'
            I: will start Principal Component Analysis and force 
               Incore-Non-Transposed (if possible) and'<BR>'.
          [C or N: will use CORAN.]
 
          .ENTER INACTIVE IMAGE NUMBERS (EG. 1-3,5,6-9 or 0 ): 0
          [The following solicitations exist to let the user define 
          a subset of images that will be treated differently from the
          rest. The subset specified below will be interpreted as THOSE 
          IMAGES, out of the total pool, THAT ARE TO BE SWITCHED 
          INACTIVE.  You can alternatively enter the name 
          of a selection document file which contains the inactive image
          numbers in the first register.


NOTES:    Depending on the memory available on the system (or allocated 
          to the user), the system will choose between 3 methods of doing
          the matrix computations involved in the Coran or PCA analysis.
          For a small number of factors requested or for a very large
          problem size (dimension of the covariance matrix) the
          iterative method will be chosen.  For a large number of factors
          or a problem size that fits into the memory a direct calculation
          will be employed.
          In general, it is advisable to request a large number of
d62 3
a64 3
          permitted number) - the direct method is faster and more
          accurate.'<br>'
          '<b>'WARNING'</b>': for very large problems (the size of
d66 1
a66 1
          are very slow and inaccurate, the system may fail on numerical
d69 1
a69 1
SUBROUTINES: JPMSK1, SCORAN3, INCOR3, GETCOO, STOCHA, ORDERE, PCA_MAIN, FILELIST
@


1.14
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                             6/05/00
d74 1
a74 1
SUBROUTINES: JPMSK1, SCORAN3, PCA_MAIN, FILELIST
@


1.13
log
@*** empty log message ***
@
text
@d18 1
@


1.12
log
@added force option
@
text
@d10 1
a10 2
SEE ALSO: CA MAP (Correspondence Analysis - nonlinear mapping)
          CA SI  (Correspondence AnalysiS - initialize)
@


1.11
log
@filelist input
@
text
@d3 1
a3 1
                                                             7/22/99
d40 5
a44 3
          .PRINCIPAL COMPONENT ANALYSIS (Y/N)?: Y or N
          [answer Y: will start Principal Component analysis.]
          [answer N: continue CORAN]
@


1.10
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                             8/22/97
d49 3
a51 1
          INACTIVE.
d72 1
a72 1
SUBROUTINES: JPMSK1, SCORAN3,  PCA_MAIN
@


1.9
log
@notes added
@
text
@d64 1
a64 1
          accurate.
@


1.8
log
@*** empty log message ***
@
text
@d51 18
a68 4
          .IN-CORE (1) TRANSPOSE (2) OR ITERATIVE (3) METHOD SOLUTION:
          [Depending on the memory available on the system (or allocated 
          to the user, the user can choose between 3 methods of doing
          the matrix computations involved in the Coran or PCA analysis)]
@


1.7
log
@SEE ALSO: improved
@
text
@d2 2
a3 2
CA S      Correspondence Analysis--find Solution           CA S    
          Principal Component Analysis--Solution           12/15/93
d5 1
a5 1
PURPOSE:  Second part of CORAN or PCA:
a26 1

d31 4
a34 4
          the results.  Their respective names and meanings are
          IMC#     image coordinates
          PIX#     pixel coordinates
          EIG#     eigenvectors and eigenvalues
d40 1
a40 1
          .Principal Component Analysis (Y/N) ?: Y or N
d51 1
a51 1
          .In-core (1) Transpose (2) OR Iterative (3) method solution:
@


1.6
log
@changes for better html file
@
text
@d10 9
a18 9
SEE ALSO: CA SI   (Initialize)
          CA SM   (Factor map)
          CA SME  (Factor map and eigenvalues)
          CA SR   (Full reconstitution of images)
          CA SRD  (Reconstitute differential (eigen) images)
          CA SRI  (Reconstitute Importance images)
          CA SRP  (PCA Full reconstitution)
          CA VIS  (Create visual map)
          CA MAP  (Non linear mapping)
d57 3
a59 2
Subroutines: JPMSK1, SCORAN3,  PCA_MAIN
Caller:      UTIL1
@


1.5
log
@remove ca sf
@
text
@d29 2
a30 2
          [Enter the number of factors to be used.  Note that eigen-
          vectors and eigenvalues are only computed up to this
d57 1
a57 3
Subroutines: JPMSK1
             SCORAN3     for CORAN method
             PCA_MAIN    for PCA method
@


1.4
log
@pawels changes
@
text
@a10 1
          CA SF   (Fetch images)
@


1.3
log
@replaced_tabs
@
text
@d10 7
a16 7
SEE ALSO: CA SF   (Stochastic--Fetch images)
          CA SI   (Initialize)
          CA SM   (Stochastic map)
          CA SME  (Stochastic map and eigen values)
          CA SR   (Stochastic or in-core full reconstitution)
          CA SRD  (Stochastic or in-core reconstitute differential (eigen) images)
          CA SRI  (Stochastic or in-core reconstitute Importance images)
d54 1
a54 1
          [depending on the memory available on the system (or allocated 
d56 1
a56 8
          the matrix computations involved in the coran or pca analysis]

NOTE:     Thisis routine used to have "P(roject)" option.
          Project-- to project the images contained in the
          current sequential file (or a subset thereof) "inactively" 
          into a factor space previously computed for a different set 
          of images. Now, this is done by re-running "CA SI" and "CA S" 
          on the (new) whole set of images.
@


1.2
log
@replaced_tabs
@
text
@@


1.1
log
@Initial revision
@
text
@d25 2
a26 2
	  image data, which has been previously created by 
	  executing 'CA SI'.]
d47 5
a51 5
	  [The following solicitations exist to let the user define 
	  a subset of images that will be treated differently from the
	  rest. The subset specified below will be interpreted as THOSE 
	  IMAGES, out of the total pool, THAT ARE TO BE SWITCHED 
	  INACTIVE.
d55 2
a56 2
	  to the user, the user can choose between 3 methods of doing
	  the matrix computations involved in the coran or pca analysis]
@
