head	1.8;
access;
symbols
	best-code:1.6
	pre-named-reg:1.6
	pre_GPL:1.6
	prec_CA:1.6
	oct21:1.5;
locks; strict;


1.8
date	2014.01.07.20.38.35;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2012.01.06.14.08.45;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.22.18.08.06;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.03.25.15.26.19;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.11.08.21.05.03;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	94.07.12.16.34.48;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.25.27;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.15.42;	author leith;	state Exp;
branches;
next	;


desc
@@


1.8
log
@rewrite
@
text
@
RC        Real Convolution ||                                   RC      
                                                            1/6/14

PURPOSE:  Computes convolution product between picture and specified
          matrix (point spread function (PSF)) in real space.  PSF is 
          assumed square/cubic.

USAGE:    RC

          .INPUT FILE: PIC001
          [Enter name of image/volume to be convoluted.]

          .OUTPUT FILE: PIC002
          [Enter name of image/volume where convoluted values are placed.]

          .PSF INPUT FILE: PSF001 / * / #
          [Enter (1) Name of file where PSF matrix is found,                    '<br />'
                 (2) '*' to indicate that PSF matrix is typed in and not saved, '<br />'
                 (3) '#' to indicate that PSF is typed in and is saved.]
 
       If 'PSF INPUT FILE' is an existing PSF file, SPIDER will read in the 
       SPIDER image format PSF file and print out its values:

              '<div class='"'opt_inp'"'>'
              .PSF IN USE                                    '<br />'
              -0.1 -0.1 -0.2 -0.1 -0.1                        '<br />'
              -0.1 -0.1 -0.3 -0.1 -0.1                        '<br />'
              -0.1 -0.1  3.0 -0.1 -0.1                        '<br />'
              -0.1 -0.1 -0.3 -0.1 -0.1                        '<br />'
              -0.1 -0.1 -0.2 -0.1 -0.1                        '<br />'

              [The convolution product between PIC001 and PSF001 is
              then computed and written into PIC002.]
              '</div>'

       If 'PSF INPUT FILE' is '*', SPIDER will read in the PSF values:

          '<div class='"'opt_inp'"'>'
              .PSF WIDTH: 5
              [Enter linear size of PSF matrix.  Number must be odd.
              See notes regarding range.'<br />''<br />' 

               Enter matrix, with <PSF WIDTH> numbers per line]

              .ROW(1): -0.1 -0.1 -0.2 -0.1 -0.1        '<br />'
              .ROW(1): -0.1 -0.1 -0.3 -0.1 -0.1        '<br />'
              .ROW(1): -0.1 -0.1  3.0 -0.1 -0.1        '<br />'
              .ROW(1): -0.1 -0.1 -0.3 -0.1 -0.1        '<br />'
              .ROW(1): -0.1 -0.1 -0.2 -0.1 -0.1        '<br />'

              [SPIDER will then normalize the PSF and print out the PSF IN EFFECT.
               Then the  convolution product between PIC001 and PSF001 is
               then computed and written into PIC002.]
              '</div>'

      If 'PSF INPUT FILE' is '#', SPIDER will read in the name of the
          PSF output file and the PSF values:

          '<div class='"'opt_inp'"'>'

              .PSF OUTPUT FILE: PSF002
              [Enter name of file where PSF matrix is to be saved.]

              .PSF WIDTH: 5
              [Enter linear size of PSF matrix.  Number must be odd.
              See notes regarding range.'<br />''<br />'
              
              Enter matrix, with <PSF WIDTH> numbers per line]

              .ROW(1): -0.1 -0.1 -0.2 -0.1 -0.1        '<br />'
              .ROW(1): -0.1 -0.1 -0.3 -0.1 -0.1        '<br />'
              .ROW(1): -0.1 -0.1  3.0 -0.1 -0.1        '<br />'
              .ROW(1): -0.1 -0.1 -0.3 -0.1 -0.1        '<br />'
              .ROW(1): -0.1 -0.1 -0.2 -0.1 -0.1        '<br />'

              [SPIDER will then normalize the PSF and print out the PSF IN EFFECT.
               Then the  convolution product between PIC001 and PSF001 is
               then computed and written into PIC002.]
              '</div>'

NOTES: 1. If PSF has "box" form (i.e., all coefficients of matrix
          have equal value), use box convolution ('BC') instead.
 
       2. Fourier convolution, 'CN', is the method of choice
          for large PSFs (with PSFs as large as the image!).

       3. 'RC' has been rarely used since it was first written.
          It is possible that bugs have developed over the years.
           
SUBROUTINES: RCONV, RCNV3_P, RCNV2_P

CALLER:      UTIL3
@


1.7
log
@*** empty log message ***
@
text
@d2 2
a3 2
RC        Real Convolution ||                                    RC      
                                                            3/25/96
d7 1
a7 1
          assumed square.
d12 1
a12 1
          [Enter name of picture to be convoluted.]
d15 1
a15 2
          [Enter name of file where convoluted picture is to be
          kept.]
d17 15
a31 16
          .PSF IN FILE: PSF001/*/#
          [Enter (1) Name of file where PSF matrix is found, 
                 (2) '*' to indicate that PSF matrix is typed in and is not 
                     to be saved,
                 (3) '#' to indicate that PSF is typed in and is to be saved.
          ]

          1.  PSF001 (refers to existing PSF file).  The system will
              then read in the PSF file and print out:        '<BR>'

              .PSF IN EFFECT                                  '<BR>'
              -0.1 -0.1 -0.2 -0.1 -0.1                        '<BR>'
              -0.1 -0.1 -0.3 -0.1 -0.1                        '<BR>'
              -0.1 -0.1  3.0 -0.1 -0.1                        '<BR>'
              -0.1 -0.1 -0.3 -0.1 -0.1                        '<BR>'
              -0.1 -0.1 -0.2 -0.1 -0.1                        '<BR>'
d35 1
d37 1
a37 1
          2.  '*' (PSF matrix to be entered, not to be saved).
d39 1
d42 1
a42 1
              See notes regarding range.]
d44 1
a44 4
              .ENTER PSF MATRIX (5 ROWS and COLUMNS): 
                #    #    #    #    # ....          '<BR>'
              
              [Enter matrix, up to <PSF WIDTH> numbers per line]
d46 5
a50 5
              -0.1 -0.1 -0.2 -0.1 -0.1        '<BR>'
              -0.1 -0.1 -0.3 -0.1 -0.1        '<BR>'
              -0.1 -0.1  3.0 -0.1 -0.1        '<BR>'
              -0.1 -0.1 -0.3 -0.1 -0.1        '<BR>'
              -0.1 -0.1 -0.2 -0.1 -0.1        '<BR>'
d52 4
a55 1
              [SPIDER will then normalize the PSF and print out]:
d57 2
a58 2
              .PSF IN EFFECT
              [...and proceed as in (1), above.]
d60 1
a60 1
          3.  '#'  (PSF matrix to be entered and saved).
d62 1
a62 1
              .PSFOUT FILE: PSF002
d67 3
a69 1
              See notes regarding range.]
d71 10
a80 1
              [...proceed as in (2), above.]
d82 2
a83 9
NOTES: 1. CPU time increases with the square of the PSF dimension.

       2. If PSF has "box" form (i.e., all coefficients of matrix
          have equal value), use box convolution ('BC').

       3. Memory required:
          p - size of PSF
          2D - NX*(p+1)+p*p
          3D - NX*NY*(p+1)+p*p*p
d85 1
a85 1
       4. Fourier convolution, 'CN', is the method of choice
d88 2
a89 3
       5. 'RC' has been rarely used since it was first 
          programmed.  It is entirely possible that bugs have
          developed over the years.
a90 4
       6. 'RC has been revised for more general application.
          PSF was assumed to be centrosymmetric in earlier 
          version.

@


1.6
log
@||
@
text
@d78 2
a79 2
          2D - NSAM*(p+1)+p*p
          3D - NSAM*NROW*(p+1)+p*p*p
d89 1
a89 1
          PSF was assumed to be centrosymmetric in ealier 
@


1.5
log
@used br tags
@
text
@d2 1
a2 1
RC        Real Convolution                                  RC      
@


1.4
log
@changes for better html file
@
text
@d3 1
a3 1
                                                            11/30/93
d26 1
a26 1
              then read in the PSF file and print out:
d28 6
a33 6
              .PSF IN EFFECT
              -0.1 -0.1 -0.2 -0.1 -0.1
              -0.1 -0.1 -0.3 -0.1 -0.1
              -0.1 -0.1  3.0 -0.1 -0.1
              -0.1 -0.1 -0.3 -0.1 -0.1
              -0.1 -0.1 -0.2 -0.1 -0.1
d45 1
a45 1
                #    #    #    #    # ....
d49 5
a53 5
              -0.1 -0.1 -0.2 -0.1 -0.1
              -0.1 -0.1 -0.3 -0.1 -0.1
              -0.1 -0.1  3.0 -0.1 -0.1
              -0.1 -0.1 -0.3 -0.1 -0.1
              -0.1 -0.1 -0.2 -0.1 -0.1
d92 3
a94 2
Subroutines: RCONV, RCNV3_P, RCNV2_P
Cotask:      UTIL3
@


1.3
log
@replaced_tabs
@
text
@d71 1
a71 2
NOTES: 1. CPU time increases with the square of the PSF dimen-
          sion.
d84 1
a84 1
       5. 'RC' has been rarely used since it was first pro-
@


1.2
log
@replaced_tabs
@
text
@@


1.1
log
@Initial revision
@
text
@d75 1
a75 1
	  have equal value), use box convolution ('BC').
d86 2
a87 2
	  programmed.  It is entirely possible that bugs have
	  developed over the years.
@
