head	1.10;
access;
symbols
	best-code:1.5
	pre-named-reg:1.5
	pre_GPL:1.5
	prec_CA:1.5
	oct21:1.5;
locks; strict;
comment	@# @;


1.10
date	2009.09.10.12.27.26;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2009.09.04.13.52.08;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.18.18.17.39;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2006.09.27.14.30.33;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2006.07.20.18.02.50;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.06.01.19.18.26;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	98.06.01.19.00.31;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	98.06.01.18.56.51;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	98.06.01.18.51.38;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	98.06.01.13.46.56;	author leith;	state Exp;
branches;
next	;


desc
@new
@


1.10
log
@*** empty log message ***
@
text
@AR IF     Arithmetic operation on image - IF allowed         AR IF     
                                                            05/28/98

PURPOSE:  Performs arithmetic operations point for point on the
          input image to create a new output image. The operations
          are conditional on the original pixel value, position in
          image, and register value(s). 
 
USAGE:    AR IF
           '&'nbsp; <OR>   '<br />'
          AR IF [x],[y],[z]

          [If register variables are present on the operation line then the 
           current value of the column value (x), row value (y), 
           and slice value (z) are placed in the respective variable.
           This allows the logical clauses to access info about
           current position in the image.)
 
           .INPUT FILE: PIC001
           [Enter the name of the input image.]
 
           .OUTPUT FILE: PIC002
           [Enter the name of the output image.]
 
           In the explanation which follows, 'P1' refers to the value
           of the current input pixel and 'P2' refers to the value of
           the current output pixel.  Arithmetic expressions can contain
           constants, functions, input pixels, and registers.  Valid
           logical comparison operators are: .LT., .LE., .EQ., .NE., 
           .GE., AND .GT. 

           .IF (...) THEN P2=f(P1):   IF (P1 .GT. 0.9) THEN P2=-1.0
           [Enter 'IF' clause and associated formula to be used to 
           compute P2 from the P1 in case the 'IF' clause is satisfied. '<br />'
           The 'IF' clause can contain a single arithmetic expression
           followed by a logical comparison to a second arithmetic
           expression. The 'if' clause must be surrounded by 
           parenthesis.  The 'THEN' delimiter is required. 

           Examples of accepted responses:                          '<br />'
           '&'nbsp;'&'nbsp;   IF (P1   .LT. 0.1)     THEN P2=0.6    '<br />'
           '&'nbsp;'&'nbsp;   IF (P1   .NE. 0.0)     THEN P2=[v1]   '<br />'
           '&'nbsp;'&'nbsp;   IF (P1   .EQ. [v4])    THEN P2=[v2]   '<br />'
           '&'nbsp;'&'nbsp;   IF (P1   .LT. RAN(0))  THEN P2=0.6    '<br />'
           '&'nbsp;'&'nbsp;   IF (P1   .LT. 0.1)     THEN P2=RAN(0) '<br />'
           '&'nbsp;'&'nbsp;   IF (P1/4 .LT. 0.1)     THEN P2=6      '<br />'
           '&'nbsp;'&'nbsp;   IF ([var].LT. 5)       THEN P2=6      '<br />'
           '&'nbsp;'&'nbsp;   IF (P1   .LT. SIN(P1)) THEN P2=6      '<br />'
           '&'nbsp;'&'nbsp;   IF (ABS(P1) .LT. P1)   THEN P2=P1     '<br />'    

           .ELSE IF (...) THEN P2=f(P1): ELSE IF(P1 .LT. -.9) THEN P2=1.0
           [Enter 'ELSE IF' clause and associated formula to be used to 
           compute P2 from the P1 in case the 'IF' clause is not 
           satisfied and the currrent 'ELSE IF' clause is satisfied.  '<br />'
           The 'ELSE' clause can contain a single arithmetic expression
           followed by a logical comparison to a second arithmetic
           expression.   '<br />'
           The 'ELSE IF' clause must be surrounded by 
           parenthesis.  The 'THEN' delimiter is required. The whole
           'ELSE IF' line can be left blank if desired.

           .ELSE FORMULA: P2=RAN(0)      
           [Enter associated formula to be used to 
           compute P2 from the P1 in case the 'IF' and 'ELSE IF' 
           clauses are not satisfied for this pixel. The whole
           'ELSE' FORMULA can be left blank if desired.


NOTES:   1. See documentation for general 
            '<a href=../user_doc.html#expressions>'rules'</a>' of 
            writing arithmetic expressions and functions in SPIDER.

         2. Since this operation is interpreting your expressions it
            is expected to be very SLOW.

SUBROUTINES: ARITHL, IFTORPN, POLISH, CALC, CHARINSIDE
 
CALLER:     UTIL2




@


1.9
log
@named registers
@
text
@d13 1
a13 1
          [If register variabless are present on the operation line then the 
d34 1
a34 1
           compute P2 from the P1 in case the 'IF' clause is satisfied.
d40 10
a49 10
           Examples of accepted responses:                     '<br />'
              IF (P1   .LT. 0.1)     THEN P2=0.6               '<br />'
              IF (P1   .NE. 0.0)     THEN P2=[v1]              '<br />'
              IF (P1   .EQ. [v4])    THEN P2=[v2]              '<br />'
              IF (P1   .LT. RAN(0))  THEN P2=0.6               '<br />'
              IF (P1   .LT. 0.1)     THEN P2=RAN(0)            '<br />'
              IF (P1/4 .LT. 0.1)     THEN P2=6                 '<br />'
              IF (X31  .LT. 5)       THEN P2=6                 '<br />'
              IF (P1   .LT. SIN(P1)) THEN P2=6                 '<br />'
              IF (ABS(P1) .LT. P1)   THEN P2= P1               '<br />'    
d54 1
a54 1
           satisfied and the currrent 'ELSE IF' clause is satisfied.
d57 2
a58 1
           expression. The 'ELSE IF' clause must be surrounded by 
@


1.8
log
@*** empty log message ***
@
text
@d10 1
a10 1
           <OR>   '<br />'
d13 1
a13 1
          [If register variables s are present on the operation line then the 
d40 10
a49 10
           Examples of accepted responses:                    '<br />'
              IF (P1   .LT. 0.1)    THEN P2=0.6               '<br />'
              IF (P1   .NE. 0.0)    THEN P2=X13               '<br />'
              IF (P1   .EQ. X13)    THEN P2=X12               '<br />'
              IF (P1   .LT. RAN(0)) THEN P2=0.6               '<br />'
              IF (P1   .LT. 0.1)    THEN P2=RAN(0)            '<br />'
              IF (P1/4 .LT. 0.1)    THEN P2=6                 '<br />'
              IF (X31  .LT. 5)      THEN P2=6                 '<br />'
              IF (P1   .LT. SIN(P1))THEN P2=6                 '<br />'
              IF (ABS(P1) .LT. P1)  THEN P2= P1               '<br />'    
@


1.7
log
@title
@
text
@d1 1
a1 1
AR IF     Arithmetic operation - IF allowed                    AR IF     
@


1.6
log
@formatting
@
text
@d1 1
a1 1
AR IF     ARithmetic operation - IF allowed                    AR IF     
d10 2
a11 2
           <OR>   '<br>'
          AR IF X31,X32,X33
d13 1
a13 1
          [If registers are present on the operation line then the 
d15 1
a15 1
           and slice value (z) are placed in the respective register.
d40 1
a40 1
           Examples of accepted responses:                   '<br />'
d69 1
a69 1
            '<A HREF=../user_doc.html#expressions>'rules'</A>' of 
@


1.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
AR IF     ARithmetic operation - IF allowed                       AR IF     
d10 2
a11 2
           <OR>
          AR IF,X31,X32,X33
d29 1
a29 1
           logical comparison operators are: .LT., .LE., .EQ., .NE.,
d32 1
a32 1
           .IF (...) THEN P2=f(P1): IF (P1 .GT. 0.9) THEN P2=-1.0
d40 10
a49 10
           Examples of accepted responses:                   '<BR>'
              IF (P1   .LT. 0.1)    THEN P2=0.6               '<BR>
              IF (P1   .NE. 0.0)    THEN P2=X13               '<BR>
              IF (P1   .EQ. X13)    THEN P2=X12               '<BR>
              IF (P1   .LT. RAN(0)) THEN P2=0.6               '<BR>
              IF (P1   .LT. 0.1)    THEN P2=RAN(0)            '<BR>
              IF (P1/4 .LT. 0.1)    THEN P2=6                 '<BR>
              IF (X31  .LT. 5)      THEN P2=6                 '<BR>
              IF (P1   .LT. SIN(P1))THEN P2=6                 '<BR>
              IF (ABS(P1) .LT. P1)  THEN P2= P1               '<BR>'    
d73 1
a73 1
            is expected to be SLOW.
@


1.4
log
@*** empty log message ***
@
text
@d69 1
a69 1
            '<A HREF="../../user_doc.html#expressions">'rules'</A>' of 
@


1.3
log
@*** empty log message ***
@
text
@d69 1
a69 1
            '<A HREF="../user_doc.html#expressions">'rules'</A>' of 
@


1.2
log
@bad title, bad tag end
@
text
@d69 1
a69 1
            '<A HREF="../user_doc.html#expressions">'rules</A> of 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
AR IF     ARithmetic operation - IF allowed                       AR      
d69 1
a69 1
            '<A HREF="../user_doc.html#expressions">'rules</A> of 
@
