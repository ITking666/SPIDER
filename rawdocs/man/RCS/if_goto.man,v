head	1.16;
access;
symbols
	best-code:1.7
	pre-named-reg:1.7
	pre_GPL:1.7
	prec_CA:1.7
	oct21:1.7;
locks; strict;


1.16
date	2015.02.23.16.25.46;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2011.12.05.20.08.32;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2009.09.09.11.49.20;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2008.08.25.12.16.23;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.18.17.24.31;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2006.11.14.15.52.38;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2006.11.14.15.48.07;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2006.09.21.15.16.53;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2006.09.11.16.13.54;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.09.17.15.49.07;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.09.26.14.18.38;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.09.24.16.40.00;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.03.22.20.27.16;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.11.08.21.03.54;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.33.34;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.15.03;	author leith;	state Exp;
branches;
next	;


desc
@@


1.16
log
@*** empty log message ***
@
text
@
IF_GOTO   Conditional jump (Scripting operation)            IF_GOTO      
                                                            11/14/11

PURPOSE:  To allow jumps to other locations in the command stream
          depending on the validity of equalities or inequalities.
          Modeled after the FORTRAN 'IF'.

SEE ALSO: IF       
          IF_THEN  
          GOTO     
          DO      

USAGE:    IF ( '<i>' <EXP> <LC> <EXP> '</i>' ) GOTO LB<N>

          Where:                          
          '<ol>'
          '<li>' '<i>' <EXP> '</i>' is an  '<a href=../user_doc.html#expressions>'
              expression'</a>'  '</li>'

          '<li>'  '<i>' <N> '</i>'  is a label, with '<i>' <N> '</i>'  assuming any value  
                between 1 and 99.] '</li>'

          '<li>' '<i>' <LC> '</i>' is a logical comparator. The following 
             comparators are available: '</li>'

#INCLUDE comparator_include.also

          '</ol>'

NOTES: 1. Examples:
            '<dl>'
             '<dt>'IF ([loop]  >= 15)      GOTO LB9  '</dt>'
             '<dt>'IF ([xsize] < [ysize])  GOTO LB12 '</dt>'
             '</dl>'

       2.  Only forward jumping is allowed. No jumping into a DO-loop.

SUBROUTINE: LOGIFQ

CALLER:     SPIDER
@


1.15
log
@*** empty log message ***
@
text
@d33 2
a34 2
             '<dt>'IF ([loop] .GE. 15)        GOTO LB9      '</dt>'
             '<dt>'IF ([xsize] .LT. [ysize])  GOTO LB12 '</dt>'
d37 1
a37 2
       2.  Only forward jumping is allowed. No jumping into a 
           DO-loop.
@


1.14
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            11/14/06
d14 1
a14 1
USAGE:    IF(<EXP>.<LC>.<EXP>) GOTO LB<N>
d18 10
a27 2
          '<li>' <EXP> is an 
               '<a href=../user_doc.html#expressions>'expression'</a>''</li>'
a28 12
          '<li>' <LC> is a logical comparator. The following comparators 
              are allowed: '</li>'
              '<dl>'
                 '<dd>'EQ '&'nbsp;'&'nbsp;  Equal         '</dd>'             
                 '<dd>'NE '&'nbsp;'&'nbsp;  Not equal     '</dd>'             
                 '<dd>'GT '&'nbsp;'&'nbsp;  Greater       '</dd>'             
                 '<dd>'GE '&'nbsp;'&'nbsp;  Greater/equal '</dd>'             
                 '<dd>'LT '&'nbsp;'&'nbsp;  Less          '</dd>'             
                 '<dd>'LE '&'nbsp;'&'nbsp;  Less/equal    '</dd>'             
              '</dl>'
          '<li>' <N> is a label, with <N> assuming any value  
                between 1 and 99.]'</li>'
d33 2
a34 2
             '<dt>'IF([loop].GE.15) GOTO LB9      '</dt>'
             '<dt>'IF ([xsize].LT.[ysize]) GOTO LB12 '</dt>'
@


1.13
log
@*** empty log message ***
@
text
@d2 1
a2 1
IF_GOTO   Conditional jump (Scripting operation)             IF_GOTO      
d7 1
a7 1
          Modeled after the FORTRAN logical 'IF'.
d18 2
a19 1
          '<li>' <EXP> is an '<a href=../user_doc.html#expressions>'expression'</a>'   '</li>'
d24 6
a29 6
                 '<dd>'EQ   equal         '</dd>'             
                 '<dd>'NE   not equal     '</dd>'             
                 '<dd>'GT   greater       '</dd>'             
                 '<dd>'GE   greater/equal '</dd>'             
                 '<dd>'LT   less          '</dd>'             
                 '<dd>'LE   less/equal    '</dd>'             
d31 2
d35 1
a35 1
          EXAMPLES:
d41 1
a41 1
NOTES: 1.  Only forward jumping is allowed. No jumping into a 
@


1.12
log
@*** empty log message ***
@
text
@d34 2
a35 2
             '<dt>'IF([loop].GE.15)GOTO LB9      '</dt>'
             '<dt>'[xsize].LT.[ysize])GOTO LB12 '</dt>'
@


1.11
log
@*** empty log message ***
@
text
@d2 1
a2 1
IF_GOTO   Conditional jump                                  IF_GOTO      
d7 1
a7 1
          Modeled after the FORTRAN logical IF.
@


1.10
log
@*** empty log message ***
@
text
@d2 1
a2 1
IF_GOTO   Conditional jump                                   IF_GOTO      
d6 1
a6 1
          depending on the validity of equalities or inequalities
@


1.9
log
@updated
@
text
@d3 1
a3 1
                                                            9/22/97
d16 15
a30 12
          '<pre>'
          Where <EXP>  is an expression
                <LC> is a logical comparator.  The following 
                     comparators are allowed:
                       EQ  equal
                       NE  not equal
                       GT  greater
                       GE  greater/equal
                       LT  less
                       LE  less/equal
                LB<N> is a label, with <N> assuming any value  
                       between 0 and 99.
d33 4
a36 4
              IF([loop].GE.15)GOTO LB9
              IF([xsize].LT.[ysize])GOTO LB12

          '</pre>'
@


1.8
log
@[reg
@
text
@d2 1
a2 1
IF_GOTO   conditional jump                                   IF_GOTO      
d5 1
a5 1
PURPOSE:  To allow jumps to other sections of the command stream
d9 4
a12 4
SEE ALSO: IF       (Conditional execution)
          IF_THEN  (Conditional execution of operation series)
          GOTO     (Unconditional jump)
          DO       (Do loop)
@


1.7
log
@*** empty log message ***
@
text
@d7 1
a7 1
          (modeled after the FORTRAN logical IF).
d16 2
a17 2
          '<PRE>'
          where <EXP>  is an expression
d30 2
a31 2
              IF(X9.GE.15)GOTO LB9
              IF(X1.LT.X50)GOTO LB12
d33 1
a33 3
          EXAMPLES OF INVALID USAGE:
              IF(X2.EQ.13.3)GOTO LB100 (Label number larger than 99.)
          '</PRE>'
a37 2
       2. Contact: J. Frank

@


1.6
log
@improved
@
text
@d2 2
a3 2
IF        conditional jump in batch mode                         IF      
                                                            3/22/96
d9 4
a12 2
SEE ALSO: GOTO (Unconditional jump in batch mode)
          DO   (Do loop)
d14 1
a14 1
USAGE:    IF(<R>.<LC>.<S>) GOTO LB<N>
d17 1
a17 2
          where <R>  is a register
                <S>  is a register or a floating point number
d30 1
a30 1
              IF(X9.GE.15.)GOTO LB9
a33 3
              IF(15.LT.X9)GOTO LB9     (Only registers allowed in
                                        first position.)
              IF(X2.EQ.5)GOTO LB1      (Decimal point missing.)
d37 1
a37 3
NOTES: 1. 'IF' is a batch-only operation.
      
       2.  Only forward jumping is allowed and no jumping into a 
d40 1
a40 1
       3. Contact: J. Frank
@


1.5
log
@caller fixed
@
text
@d2 1
a2 1
IF        conditional jumping command                       IF      
d9 3
d41 2
a42 3
       2. RULES FOR JUMPING:                           '<BR>'
               a) Only jumping forward allowed.        '<BR>'
               b) No jumping into a DO-loop allowed.   '<BR>'
@


1.4
log
@added pre tag
@
text
@d29 1
a29 1
          EXAMPLES FOR INVALID USAGE:
d36 1
a36 1
NOTES: 1. IF is a batch-only operation.
d38 3
a40 3
       2. RULES FOR JUMPING:
               a) Only jumping forward allowed. 
               b) No jumping into a DO-loop allowed.
d42 1
a42 1
       3. Contact J. Frank
d44 1
a44 1
SUBROUTINE: LOGIF
d46 1
a46 1
CALLER:     DRIVER
@


1.3
log
@changes for better html file
@
text
@d3 1
a3 1
                                                            1/14/90
d11 3
a13 2
          where <R> is a register
                <S> is a register or a floating point number
d15 7
a21 7
                      comparators are allowed:
                          EQ  equal
                          NE  not equal
                          GT  greater
                          GE  greater/equal
                          LT  less
                          LE  less/equal
d30 3
a32 3
              IF(15.LT.X9)GOTO LB9    (Only registers allowed in
                                      first position.)
              IF(X2.EQ.5)GOTO LB1     (Decimal point missing.)
d34 1
d44 3
a46 2
Subroutine: LOGIF
Caller:     DRIVER
@


1.2
log
@replaced_tabs
@
text
@d13 2
a14 2
                <LC> is a logical comparator.  The following com-
                      parators are allowed:
d21 2
a22 2
                LB<N> is a label, with <N> assuming any value be-
                       tween 0 and 99.
@


1.1
log
@Initial revision
@
text
@@
