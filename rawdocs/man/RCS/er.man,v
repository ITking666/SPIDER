head	1.9;
access;
symbols
	best-code:1.6
	pre-named-reg:1.6
	pre_GPL:1.6
	prec_CA:1.6;
locks; strict;
comment	@# @;


1.9
date	2014.02.25.18.59.31;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2013.04.10.18.14.00;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2012.06.22.14.49.50;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.17.16.17.22;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2001.02.26.19.08.28;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.20.14.43.22;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.16.20.40.03;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.16.19.08.47;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.16.17.23.10;	author leith;	state Exp;
branches;
next	;


desc
@@


1.9
log
@*** empty log message ***
@
text
@
ER        Erode object in a binary image/volume           ER      
                                                          4/10/13

PURPOSE:  Erodes object(s) inside a binary input image/volume. 

SEE ALSO: EC CL
          ER DOC
          DI
          ER SK
          ER EDM
          TH F


USAGE:    ER

          .INPUT  FILE: VOL001
          [Enter the name of the input file.]

          .OUTPUT FILE: VOL002
          [Enter  name for output file.]

          .BOX OR CROSS NEIGHBORHOOD (B/C): C
          [Shape of neighborhood.  Box is a square/cube centered on each
           voxel, cross is a 2/3-dimensional cross centered on each
           voxel.]

          .LENGTH OF NEIGHBORHOOD: 3
          [Length of the neighborhood around a voxel. Must be an
           odd number > 1.]

          .ERODE IF NUMBER OF OCCUPIED NEIGHBORS IS LESS THAN: 26
          [Voxel will be set to 0.0 (eroded) if it has fewer 
           than this many occupied neighbors.]
        
NOTES: 1.  Requires a "binary" input image/volume with pixels/voxels
           having density either zero or one.  Various 'TH' operations
           can be used to create a binary image. Eroded areas are set to
           value of zero.

       2.  Image/volume is "circularly closed" so that pixels/voxels on 
           boundaries have a neighbor on opposite boundary.

SUBROUTINES: EROSION

CALLER:      UTIL3
@


1.8
log
@*** empty log message ***
@
text
@d8 1
@


1.7
log
@*** empty log message ***
@
text
@d2 2
a3 2
ER        Erode a binary image/volume                                ER      
                                                                6/20/12
d5 1
a5 1
PURPOSE:  Erodes object in an input image/volume. 
d28 2
a29 2
          [Length of the neighborhood around a voxel. (Should be an
           odd number).]
d35 2
a36 2
NOTES: 1.  Requires a "binary" input image/volume with voxels
           having either zero or one.  Various 'TH' operateions
d40 1
a40 1
       2.  Image/volume is "circularly closed" so that voxels on 
@


1.6
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                                2/20/01
d11 2
d36 2
a37 1
           having either zero or one.  Eroded areas are set to
@


1.5
log
@ec cl
@
text
@d9 2
d37 1
a37 1
       2.  Image/olume is "circularly closed" so that voxels on 
@


1.4
log
@*** empty log message ***
@
text
@d7 1
a7 1
SEE ALSO: EC
@


1.3
log
@*** empty log message ***
@
text
@d2 2
a3 2
ER        Erode a binary volume                                     ER      
                                                                2/16/01
d5 1
a5 1
PURPOSE:  Erodes an input volume. 
d13 1
a13 1
          [Enter the name of the input volume.]
d16 1
a16 1
          [Enter  name for output volume.]
d19 2
a20 2
          [Shape of neighborhood.  Box is a cube centered on each
           voxel, cross is a 3-dimensional cross centered on each
d31 2
a32 2
NOTES: 1.  Requires a "binary" input volume with voxels
           having either zero or one. Eroded areas are set to
d35 2
a36 3
       2.  Volume is "circularly closed" so that voxels on 
           boundaries have a neighbor on opposite boundary of
           the volume.
@


1.2
log
@*** empty log message ***
@
text
@d13 1
a13 1
          [Enter the name of the input filed.]
d16 1
a16 1
          [Enter  name for output file.]
d18 8
a25 2
          .LENGTH OF THE FILTER: 3
          [Length of the neighborhood around a voxel.]
d27 2
a28 2
          .NUMBER OF NEIGHBORS: 3
          [Voxel will be set to 0.0 (eroded) if they have fewer 
a29 5

          .BOX OR CROSS (B/C): C
          [Shape of neighborhood.  Box is a cube centered on each
           voxel, Cross is a 3-dimensional cross centered on each
           voxel.]
@


1.1
log
@Initial revision
@
text
@d22 2
a23 2
          [Voxel will be set to 0.0 if it fewer than this many 
           occupied neighbors.]
d26 3
a28 1
          [Shape of neighborhood.]
d30 1
a30 1
NOTES: 1.  Require a "binary" input volume with voxels
d33 4
@
