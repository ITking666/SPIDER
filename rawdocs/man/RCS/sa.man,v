head	1.10;
access;
symbols
	best-code:1.8
	pre-named-reg:1.8
	pre_GPL:1.8
	prec_CA:1.8
	oct21:1.7;
locks; strict;


1.10
date	2012.03.13.12.14.30;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2009.09.04.14.30.52;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.01.20.27.30;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.08.25.18.34.07;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.03.25.19.23.43;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.03.25.16.37.23;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.11.08.21.05.15;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	94.07.12.16.35.10;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.25.48;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.15.52;	author leith;	state Exp;
branches;
next	;


desc
@@


1.10
log
@*** empty log message ***
@
text
@
SA        Sum Alignment                                     SA
                                                         8/01/01

PURPOSE:  To perform vector addition of rotation and shift values
          from two successive cycles of alignment of an image
          series.  The summed values, saved in registers, can then
          be applied to the original images.  Additive interpolation
          errors are thus avoided.                       '<br>'
          This operation is meant for use with the angles and shifts 
          obtained from the 'CC IC' and 'OR' operations which have 
          to be used with reversed signs in 'RT SQ'.

SEE ALSO: SA P 
          CC IC
          OR

USAGE:    SA   [xo],[yo],[zo]

          .INITIAL ROTATION ANGLE, X & Y SHIFTS: [ang],[xs],[ys] 
          [The rotation angle, the x-shift value, and the y-shift 
          value from the initial alignment cycle. These values
          will typically have been retrieved
          from a document file by an UNSAVE ('UD') operation just
          prior to the call to 'SA'.  

          .REFINED ROTATION ANGLE, X & Y SHIFTS: [angr],[xsr],[ysr] 
          [The rotation angle, the x-shift value, and the y-shift 
          value from the refinement cycle.  These three values
          can also have been unsaved in the above manner from another 
          document file, or if the 'SA' is performed in the same 
          session (procedure run) as the second cycle, they may 
          simply be current register contents (see below).

          The three registers specified on the operation line are 
          output registers, and receive the vector sums for the 
          rotation and shifts.
          
NOTES: 1. Rotational matrix used in 'SA' has form:       '<br>'
        
          '&'nbsp;'&'nbsp;'&'nbsp;  cos '&'nbsp;'&'nbsp;'&'nbsp; -sin '<br />'
          '&'nbsp;'&'nbsp;'&'nbsp;  sin '&'nbsp;'&'nbsp;'&'nbsp;  cos '<br />'
       
       2  This operation is meant for use with the angles and shifts 
          obtained from the 'CC IC' and 'OR' operations which have 
          to be used with reversed signs in 'RT SQ'.
        
       3. 'SA'  may be applied most conveniently within the second
          cycle loop.  The intermediate image series (rotated and
          translated by the amounts found in the first cycle) are
          realigned against a refined reference, and the values are
          stored in [angr],[xsr],[ysr].  The values from cycle 1 are then
          UNSAVEd into [ang],[xs],[ys], and 'SA' is used to obtain 
          [xo],[yo],[zo].
          These output values are finally applied to rotate and
          shift the unaligned original image series.  They should
          also be saved in another document file, using 'SD'.  Note
          that two input and one output series must be on disk at
          one time.  The original images may be deleted individually
          (within the DO-loop) once the corresponding final, aligned
          images have been obtained.

       4. After having obtained the resulting angle and shifts the 
          'RT SQ' operation can be applied to rotate and shift
           an image.

       5. In SPIDER 7.10+ input of numbers contained in registers is 
          no longer allowed.  Registers are only for output now execept
          when creating a document file.

SUBROUTINES: SUMALI

CALLER:      DRIV1
@


1.9
log
@named registers
@
text
@d9 4
a12 1
          errors are thus avoided.
d15 2
d33 1
a33 1
          simply be from current register contents (see below).
d39 1
a39 1
NOTES: 1. Rotational matrix used in SA has form:       '<br>'
d41 2
a42 2
                    c    -s       '<br />'
                    s     c       '<br />'
d44 3
a46 3
          It works for the angles and shifts obtained from 'CC IC'
          and 'OR' commands which have to be used with reversed
          signes in 'RT SQ'.
d48 1
a48 1
       2. 'SA'  may be applied most conveniently within the second
d63 7
a69 6
       3. After having obtained resulting angle and shifts the 'RT SQ'
          command is highly recommended for the final step.

       4. In SPIDER 7.10+ input of numbers contained in registers is 
          no longer allowed.  Registers are only for output.
         (input may still be present for backward compatibility.)
@


1.8
log
@removed register input
@
text
@d11 1
a11 1
SEE ALSO: SA P (Sum alignment - positive rotation and shift)
d13 1
a13 1
USAGE:    SA   X30,X31,X32
d15 1
a15 1
          .INITIAL ROTATION ANGLE, X & Y SHIFTS: X10,x11,x12 
d22 1
a22 1
          .REFINED ROTATION ANGLE, X & Y SHIFTS: x20,x21,x22 
d34 1
a34 1
NOTES: 1. Rotational matrix used in SA has form:       '<BR>'
d36 2
a37 2
                    c    -s       '<BR>'
                    s     c       '<BR>'
d47 3
a49 2
          stored in X20-X22.  The values from cycle 1 are then
          UNSAVEd into X10-X12, and 'SA' is used to obtain X30-X32.
@


1.7
log
@title
@
text
@d3 1
a3 1
                                                         3/27/96
d11 1
a11 1
SEE ALSO:  SA P (Sum alignment - positive rotation and shift)
d13 1
a13 1
USAGE:    SA   X10,X11,X12,X20,X21,X22,X30,X31,X32
d15 6
a20 5
          [The first three (input) registers specified contain the
          rotation angle, the x-shift value, and the y-shift value
          from the initial alignment cycle.  The second group of
          three (input) registers contain the rotation and x  and y 
          shift values from the refinement cycle.
d22 11
a32 7
          The first three will typically have been retrieved
          from a document file by an UNSAVE ('UD') operation just
          prior to the call to 'SA'.  The second three can also have
          been UNSAVEd in this manner from another document file, or,
          if the 'SA' is performed in the same session (batch run) as
          the second cycle, they may simply be the current register
          contents (see below).
a33 4
          The final three registers specified are output
          registers, and receive the vector sums for the rotation
          and shift.

d39 2
a40 2
          It works for the angles and shifts obtained from CC IC
          and OR commands which have to be used with reversed
d59 4
@


1.6
log
@cosmetic
@
text
@d11 1
a11 1
SEE ALSO:  SA P  (Sum alignment, positive rotation and shift)
@


1.5
log
@*** empty log message ***
@
text
@d56 1
a56 1
       3. After having obtained resulting angle and shifts the RT SQ
d61 1
a61 1
CALLER:      DRIVER
@


1.4
log
@changes for better html file
@
text
@d3 1
a3 1
                                                         11/27/89
d11 1
a11 1
SEE ALSO:  SA P      (Sum alignment, positive rotation and shift)
d33 1
a33 1
NOTES: 1. Rotational matrix used in SA has form:
d35 2
a36 2
                    c    -s
                    s     c
d40 1
a40 1
          signes in RT SQ.
d42 1
a42 1
       2. SA  may be applied most conveniently within the second
d59 3
a61 2
Subroutines: SUMALI
Cotask:      DRIVER
@


1.3
log
@replaced_tabs
@
text
@d18 1
a18 1
          three (input) registers contain the rotation and x- and y-
@


1.2
log
@replaced_tabs
@
text
@@


1.1
log
@Initial revision
@
text
@d21 7
a27 7
	  The first three will typically have been retrieved
	  from a document file by an UNSAVE ('UD') operation just
	  prior to the call to 'SA'.  The second three can also have
	  been UNSAVEd in this manner from another document file, or,
	  if the 'SA' is performed in the same session (batch run) as
	  the second cycle, they may simply be the current register
	  contents (see below).
d30 2
a31 2
	  registers, and receive the vector sums for the rotation
	  and shift.
@
