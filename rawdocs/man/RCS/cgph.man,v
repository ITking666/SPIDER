head	1.25;
access;
symbols
	best-code:1.10
	pre-named-reg:1.10
	pre_GPL:1.10
	prec_CA:1.9
	oct21:1.5;
locks; strict;


1.25
date	2015.03.04.17.20.23;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2014.01.31.18.58.14;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2013.05.02.14.50.28;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2012.03.27.18.54.11;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2012.03.27.18.52.08;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2012.03.21.18.34.04;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2012.01.31.14.12.55;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2012.01.24.15.26.48;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2012.01.24.14.46.19;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2011.10.05.17.26.10;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2011.08.10.13.25.05;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.11.29.18.43.14;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2009.09.08.13.06.02;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2009.09.04.13.04.58;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2006.09.27.13.24.38;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.06.14.41.19;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.16.16.04.20;	author bbaxter;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.26.15.24.42;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.11.18.44.57;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.22.18.08.00;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.01.09.16.39.24;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.08.22.15.26.29;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.11.08.21.03.29;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.32.19;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.14.27;	author leith;	state Exp;
branches;
next	;


desc
@@


1.25
log
@*** empty log message ***
@
text
@
CG PH     Center of Gravity - Phase approximation ||         CG PH
                                                            5/04/13

PURPOSE:  Compute coordinates of center of gravity of an image/volume with
          respect to the SPIDER image/volume center:  (NX/2 + 1, NY/2 + 1, NZ/2 + 1).
          using phase approximation.

SEE ALSO: CG     
          CENT PH
          SH

USAGE:    CG PH [x],[y],[xr],[yr]                 
             '&'nbsp;'&'nbsp; or:                 '<br />'
          CG PH [x],[y],[z],[xr],[yr],[zr]        '<br />'

          [For images this operation can return up to four optional register variables:     

           '<table class="regvar">'                                      
           '<tr>''<td class="first" align="left">' Variable'</td>' '<td align="left">' 
                                                   Example '</td>' '<td align='left'>' 
                                                   Receives '</td>' '</tr>'                           
           '<tr>''<td class="first">' First'</td>' 
                 '<td>'[x]                '</td>' 
                 '<td>'Integer approximation of X center of gravity'</td>' '</tr>'                             

           '<tr>''<td class="first">' Second'</td>' 
                 '<td>'[y]                '</td>' 
                 '<td>'Integer approximation of Y center of gravity'</td>' '</tr>'                             

           '<tr>''<td class="first">' Third'</td>' 
                 '<td>'[xr]                '</td>' 
                 '<td>'Sub-pixel X center of gravity'</td>' '</tr>'                             

           '<tr>''<td class="first">' Fourth'</td>' 
                 '<td>'[yr]                '</td>' 
                 '<td>'Sub-pixel Y center of gravity'</td>' '</tr>'                             
            '</table>' 

          [For volumes this operation can return up to six optional register variables:     

           '<table class="regvar">'                                      
           '<tr>''<td class="first" align="left">' Variable'</td>' '<td align="left">' 
                                                   Example '</td>' '<td align='left'>' 
                                                   Receives '</td>' '</tr>'                           
           '<tr>''<td class="first">' First'</td>' 
                 '<td>'[x]                '</td>' 
                 '<td>'Integer approximation of X center of gravity'</td>' '</tr>'                             

           '<tr>''<td class="first">' Second'</td>' 
                 '<td>'[y]                '</td>' 
                 '<td>'Integer approximation of X center of gravity'</td>' '</tr>'                             

           '<tr>''<td class="first">' Third'</td>' 
                 '<td>'[z]                '</td>' 
                 '<td>'Integer approximation of Z center of gravity'</td>' '</tr>'                             

           '<tr>''<td class="first">' Fourth'</td>' 
                 '<td>'[xr]                '</td>' 
                 '<td>'Sub-pixel X center of gravity'</td>' '</tr>'                             

          '<tr>''<td class="first">' Fifth'</td>' 
                 '<td>'[yr]                '</td>' 
                 '<td>'Sub-pixel Y center of gravity'</td>' '</tr>'                             

           '<tr>''<td class="first">' Sixth'</td>' 
                 '<td>'[zr]                '</td>' 
                 '<td>'Sub-pixel Z center of gravity'</td>' '</tr>'                             
            '</table>' 
 
          .INPUT FILE: FIL001
          [Enter name of image/volume.]

NOTES: 1. To place the center of gravity at the origin one has to
          use the 'SH' operation and reverse the signs of the 
          shifts.

       2. Implemented by P. Penczek.

       3. This operation only works for images where the object is
          bright (white) on a dark background.

       4. This  operation sometimes reports incorrect center (at the
          upper left corner) for dumbbell shaped objects. The
          error is sporadic even given the same input file. The
          implementor states: 'The code is correct.  The operation is 
          not foolproof; it sometimes fails'.
  
       5. The estimation of center of gravity in this algorithm is based 
          on phase approximation as following:              '<br />'
          i)  The projections of image densities onto X and Y axes 
              are computed.                                 '<br />'

          ii) First order 1D Fourier Transforms of each projection 
              are computed.                                '<br />'

         iii) The maxima of first order harmonics on X and Y axes are 
              taken as the coordinates of center.          '<br />'
              Beware - negative images can generate systematic 
              artifactual shift equal to half-size of image. 
              Dumbbell-shaped objects also produce the same artifact.

SUBROUTINES: FINDCENT, CENT_3PH, CENT_PH

CALLER:      UTIL1
@


1.24
log
@regvar
@
text
@d29 1
a29 1
                 '<td>'Integer approximation of X center of gravity'</td>' '</tr>'                             
@


1.23
log
@*** empty log message ***
@
text
@d9 3
a11 2
SEE ALSO:  CG     
           SH
d17 1
a17 14
          [This operation can take four or six optional register variables.       '<br />'
          For an image, if these variables are present;                           '<br />'
          First  variable receives: Integer approximation of X Center of gravity. '<br />'
          Second variable receives: Integer approximation of Y Center of gravity. '<br />'
          Third  variable receives: Sub-pixel X Center of gravity.                '<br />'
          Fourth variable receives: Sub-pixel Y Center of gravity.                '<br />'

          For a volume, if these variables are present;                           '<br />'
          First  variable receives: Integer approximation of X Center of gravity. '<br />'
          Second variable receives: Integer approximation of Y Center of gravity. '<br />'
          Third  variable receives: Integer approximation of Z Center of gravity. '<br />'
          Fourth variable receives: Sub-pixel X Center of gravity.                '<br />'
          Fifth  variable receives: Sub-pixel Y Center of gravity.                '<br />'
          Sixth  variable receives: Sub-pixel Z Center of gravity.]               '<br />'
d19 51
@


1.22
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            1/23/12
d5 3
a7 2
PURPOSE:  Compute center of object in a image/volume using phase 
          approximation.
d16 16
d35 1
a35 6
NOTES: 1. Register variables [x],[y], (and [z] in case of volumes) receive
          integer approximations of the center of gravity coordinates.
          Registers [xr],[yr], (and [zr] in case of volumes) receive real
          number coordinates of the center of gravity.
          Coordinates are given in the X, Y, Z order.    '<br />'
          To place the center of gravity at the origin one has to
d53 1
a53 1
              are computed.                         '<br />'
d56 1
a56 1
              are computed.                         '<br />'
d59 1
a59 1
              taken as the coordinates of center.        '<br />'
d62 1
a62 1
              Dumbbell-shaped figures also produce the same artifact.
@


1.21
log
@*** empty log message ***
@
text
@d52 1
a52 1
SUBROUTINES: FINDCENT, CENT_3, CENT_D
@


1.20
log
@*** empty log message ***
@
text
@d52 1
a52 1
SUBROUTINES: CENT, CENT_3, CENT_D
@


1.19
log
@removed cg sym
@
text
@d18 1
a18 1
NOTES: 1. Register variables [x],[y], (and [z] in 3-D case) receive
d20 1
a20 1
          Registers [xr],[yr], (and [zr] in 3-D case) receive real
d29 4
a32 1
       3. This  operation sometimes reports incorrect center (at the
d38 1
a38 1
       4. The estimation of center of gravity in this algorithm is based 
d41 1
a41 1
              are computed.'<br />'
d44 1
a44 1
              are computed.  '<br />'
@


1.18
log
@*** empty log message ***
@
text
@a8 1
           CG SYM    
d33 1
a33 3
          not foolproof; it sometimes fails'.  To overcome this
          problem we now recommend (2012) you use 
          '<a href='"'./cgsym.html'"'>''CG SYM'</a>' instead.
@


1.17
log
@comments
@
text
@d3 1
a3 1
                                                            1/10/12
d5 2
a6 1
PURPOSE:  Compute center of gravity of image/volume using phase approximation.
d32 1
a32 1
          error is sporadic even when given the same input file. The
d35 1
a35 1
          problem we recommend (2012) you use 
d40 2
a41 1
          i)  The projections of image densities onto X and Y axes are computed.'<br />'
d43 2
a44 1
          ii) First order 1D Fourier Transform of each projection are computed.  '<br />'
d47 1
a47 1
              taken as the coordinates of center of gravity.  '<br />'
d49 1
a49 1
              artifact shift equal to half-size of image. 
@


1.16
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            8/10/11
d8 1
d30 1
a30 1
          upper left corner) for rotationally symmetric objects. The
d33 4
a36 2
          not foolproof; it sometimes fails'.  
	  
@


1.15
log
@mistakes comments
@
text
@d36 9
a44 6
          i)    The projections of image densities onto X and Y axes are computed.'<br />'
          ii)   First order 1D Fourier Transform of each projection are computed.  '<br />'
          iii)  The maxima of first order harmonics on X and Y axes are taken as
                the coordinates of center of gravity.'<br />'
       Beware - negative images can generate systematic mistakes equal to
       half-size of image.  Symmetric images also generate mistakes.
@


1.14
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            3/17/05
d11 1
a11 1
          '&'nbsp;'&'nbsp; or:                    '<br />'
d17 3
a19 4
NOTES:  1. Register variables [x],[y] (and [z] in 3-D case) receive
          integer
          approximation of the center of gravity coordinates.
          Registers [xr],[yr] (and [zr] in 3-D case) receive real
d33 9
d45 1
a45 1
CALLER:     UTIL1
@


1.13
log
@*** empty log message ***
@
text
@d2 1
a2 1
CG PH     Center of Gravity - Phase approximation ||           CG PH
d5 1
a5 2
PURPOSE:  Compute center of gravity using phase approximation.
          The operation works for a 2-D or 3-D density distribution.
a7 1
           CG 3   
d15 1
a15 2
          [Enter name of file containing the 2-D or 3-D density 
           distribution.]
d17 1
a17 1
NOTES:  1. Register variables[x],[y] (and [z] in 3-D case) receive
d24 1
a24 1
          use 'SH' ('SH 3') operation and reverse the signs of the 
@


1.12
log
@named registers
@
text
@d12 1
a12 1
USAGE:    CG PH [x],[y],[xr],[yr]                 '<br />'
@


1.11
log
@title
@
text
@d12 3
a14 3
USAGE:    CG PH X11,X12,X21,X22          '<br />'
          or:                            '<br />'
          CG PH X11,X12, X13,X21,X22,X23 '<br />'
d20 2
a21 1
NOTES:  1.  Register variables X11, X12 (and X13 in 3-D case) contain integer
d23 1
a23 1
          Registers X21, X22 (and X23 in 3-D case) contain real
@


1.10
log
@fails message
@
text
@d2 1
a2 1
CG PH     Center of Gravity - PHase approximation ||           CG PH
d12 3
a14 3
USAGE:    CG PH X11,X12,X21,X22  '<br>'
          or:  '<br>'
          CG PH X11,X12, X13,X21,X22,X23 '<br>'
d20 1
a20 1
NOTES:  1.  Registers X11, X12 (and X13 in 3-D case) contain integer
d24 1
a24 1
          Coordinates are given in the X, Y, Z order.
@


1.9
log
@testing new manual style for alternate usage
@
text
@d3 1
a3 1
                                                            12/27/93
d12 3
a14 3
USAGE:    CG PH,X11,X12,X21,X22

          or: CG PH,X11,X12,X13,X21,X22,X23 '<BR>'
d24 1
a24 1
          Coordinates are given in the x, y, z order.
d26 4
a29 1
          use 'SH' ('SH 3') operation and reverse the signs of the shifts.
d31 5
a35 1
       2.   Implemented by P. Penczek.
@


1.8
log
@*** empty log message ***
@
text
@d12 1
a12 3
USAGE:    CG PH,X10,X11,X21,X22                  2-D data
                -- or
          CG PH,X10,X11,X12,X21,X22,X23          3-D data
d14 2
d20 1
a20 1
NOTES:  1.  Registers X10, X11 (and X12 in 3-D case) contain integer
@


1.7
log
@*** empty log message ***
@
text
@d6 1
a6 1
          The command works for a 2-D or 3-D density distribution.
d8 3
a10 3
SEE ALSO:  CG    (center of gravity)
           CG 3  (center of gravity - radius of gyration)
 
d20 1
a20 1
NOTES:    Registers X10, X11 (and X12 in 3-D case) contain integer
d25 2
a26 2
          To place the center of gravity ar the origin one has to
          use 'SH' ('SH 3') command and reverse the signs of the shifts.
d28 1
a28 1
          Implemented by P. Penczek.
@


1.6
log
@||
@
text
@d10 1
a10 2
           CG 3S (center of gravity - solid body)

@


1.5
log
@*** empty log message ***
@
text
@d2 1
a2 1
CG PH     Center of Gravity - PHase approximation           CG PH
@


1.4
log
@*** empty log message ***
@
text
@d5 2
a6 2
PURPOSE:  Compute center of gravity using phase approximation
          of a 2-D or 3-D density distribution.
@


1.3
log
@changes for better html file
@
text
@d2 1
a2 1
CG PH     Center of Gravity / PHase approximation           CG PH
d8 3
a10 3
SEE ALSO:  CG  (center of gravity)
           CG 3  (center of gravity/radius of gyration)
           CG 3S  (center of gravity/solid body)
a20 1

d27 3
a29 1
          use SH (SH 3) command and reverse the signs of the shifts.
d31 1
a31 1
          Implemented by P.Penczek.
d33 1
a33 2
Subroutine: CENT, CENT_3, CENT_D
Cotask:     UTIL1
@


1.2
log
@replaced_tabs
@
text
@d14 1
a14 1
                --or--
@


1.1
log
@Initial revision
@
text
@@
