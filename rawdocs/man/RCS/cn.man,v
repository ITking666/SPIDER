head	1.20;
access;
symbols
	best-code:1.15
	pre-named-reg:1.15
	pre_GPL:1.15
	prec_CA:1.15
	oct21:1.12;
locks; strict;


1.20
date	2012.10.15.14.33.53;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2012.01.06.15.24.37;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2009.09.10.13.29.21;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2009.09.08.13.11.56;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2006.09.27.13.27.22;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2001.01.11.18.59.11;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2000.09.22.18.08.00;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2000.02.25.16.01.19;	author bimal;	state Exp;
branches;
next	1.12;

1.12
date	97.08.22.20.42.29;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	96.09.10.14.16.25;	author adri;	state Exp;
branches;
next	1.10;

1.10
date	96.08.30.13.41.34;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	96.08.28.19.48.26;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	96.08.28.13.49.20;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	96.08.28.13.39.58;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	96.08.27.21.00.59;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	96.02.27.20.46.29;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.02.23.18.07.33;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.11.08.21.03.30;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.32.25;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.14.30;	author leith;	state Exp;
branches;
next	;


desc
@@


1.20
log
@images not picture
@
text
@CN        Convolution ||                                          CN      
                                                            09/10/96

PURPOSE:  Computes the convolution product of two images/volumes 
          by using the Fourier transform relationship.
          The dimensions of the image/volumes must correspond to each
          other.  

SEE ALSO:  CN N  
           CC     
           CC N   
           AC    
           AC N  
           CC C 
           rc
           FT  

USAGE:    CN

          .INPUT FILE: PIC001
          [Enter the name of the first image/volume.]

          .REFER FILE: REF001
          [Enter the name of the second image/volume, which is used as the
          reference.]

          .OUTPUT FILE: CNF001
          [Enter name of the file which will contain the convolution
          coefficients. It can be the same as the input file.  In 
          this case INPUT FILE will be replaced by the convolution.]


NOTES: 1. The type of the input data can be real or Fourier in any 
          mixed form.

       2. The convolution data are not scaled.

       3. The origin of the CNF is at (NX/2 + 1, NY/2 + 1, NZ/2 + 1).

       4. The convolution product contains artifacts from 
           wrap-around overlaps implicit in the Fourier computation.
           However, the convolution product is artifact-free
           within                                   '<br />'
           &'nbsp;'&'nbsp;      -L <= K <= +L       '<br />'
           &'nbsp;'&'nbsp;      -M <= I <= +M       '<br />'
          if the image/volumes are surrounded by frames containing
          the average, where the frame width is M/2 and the
          frame height is L/2.  This can be achieved by use of
          the 'PD' operation.                       '<br />'
          The complete artifact-free CCF is obtained for the
          widths M=NY/2, L=NX/2.  In this case, the padded
          image/volumes are just twice as large in each dimension as


       4. The convolution product contains artifacts from 
           wrap-around overlaps implicit in the Fourier computation.
           However, the convolution product is artifact-free
           within                                   '<br />'
           '&'nbsp;'&'nbsp;        -L <= K <= +L    '<br />'
           '&'nbsp;'&'nbsp;        -M <= I <= +M    '<br />'
           if the image/volumes are surrounded by frames containing
           the average, where the frame width is M/2 and the
           frame height is L/2.                     '<br />'
           The complete artifact-free convolution product is
           obtained for the widths M=NY/2, L=NX/2.  In this
           case, the padded image/volumes are just twice as large in
           each dimension as the original image/volumes.

       5. Note that 'RC' (Real Convolution) operation offers an 
           alternative to Fourier computation of the convolution
           product.  'RC' should be used if the width of the point
           spread function is small (<= 15).

       6. If the data cannot fit into the memory use the 'FT' and 'MU'
          commands to calculate the CNF:   '<br />'
       
          '&'nbsp;'&'nbsp; FT      '<br />'
          '&'nbsp;'&'nbsp; input1  '<br />'
          '&'nbsp;'&'nbsp; four1   '<br />'  '<br />'
 
          '&'nbsp;'&'nbsp; FT      '<br />'
          '&'nbsp;'&'nbsp; input2  '<br />'
          '&'nbsp;'&'nbsp; four2   '<br />'  '<br />'

          '&'nbsp;'&'nbsp; MU      '<br />'
          '&'nbsp;'&'nbsp; four1   '<br />'
          '&'nbsp;'&'nbsp; four2   '<br />'  '<br />'

          '&'nbsp;'&'nbsp; FT      '<br />'
          '&'nbsp;'&'nbsp; four2   '<br />'
          '&'nbsp;'&'nbsp; cnf12   '<br />'
      

          '<strong>'Warning'</strong>': The origin of cnf12 calculated 
           in this way is in (1,1,1).

SUBROUTINES: FMRS_2, FMRS_2R, FFTMCF, FMRS_1, FMRS_3, FMRS_3R,
             CNRS_2, CNRS_3, CNRD_2, CNRD_3 

CALLER:      CORR1



@


1.19
log
@nx
@
text
@d5 2
a6 3
          by using
          the Fourier transform relationship.
          The dimensions of the pictures must correspond to each
d21 1
a21 1
          [Enter the name of the first picture.]
d24 1
a24 1
          [Enter the name of the second picture, which is used as the
d46 1
a46 1
          if the pictures are surrounded by frames containing
d52 1
a52 1
          pictures are just twice as large in each dimension as
d61 1
a61 1
           if the pictures are surrounded by frames containing
d66 2
a67 2
           case, the padded pictures are just twice as large in
           each dimension as the original pictures.
d94 1
a94 1
          '<strong>'Warning'</strong>': The origin of CNF12 calculated 
@


1.18
log
@*** empty log message ***
@
text
@d4 2
a5 1
PURPOSE:  Computes the convolution product of two pictures by using
a6 1
          Operation 'CN' works for 2D as well as 3D input data.
d8 1
a8 2
          other.  The dimensions need not be powers of two
          (see 'FT' for any restrictions).
d16 1
d39 1
a39 2
       3. The origin of the CNF is at (NSAM/2 + 1, 
          NROW/2 + 1, NSLICE/2 + 1).
d52 1
a52 1
          widths M=NROW/2, L=NSAM/2.  In this case, the padded
d66 1
a66 1
           obtained for the widths M=NROW/2, L=NSAM/2.  In this
@


1.17
log
@*** empty log message ***
@
text
@d30 2
a31 2
          coefficients. It can be the same as the input file.  In this case
          INPUT FILE will be replaced by the convolution.]
d39 2
a40 1
       3. The origin of the CNF is at (NSAM/2 + 1, NROW/2 + 1).
d45 18
a62 3
           within                                                '<br />'
                  -L <= K <= +L                                  '<br />'
                  -M <= I <= +M                                  '<br />'
d65 1
a65 1
           frame height is L/2.
d71 1
a71 1
       5. Note that RC (Real Convolution) offers an 
d73 2
a74 2
           product.  RC should be used if the width of the point
           spread function is small (.le. 15).
d77 18
a94 18
          commands to calculate the CNF:
      '<pre>'
      FT
      input1
      four1

      FT
      input2
      four2

      MU
      four1
      four2

      FT
      four2
      cnf12
      '</pre>'
d96 2
a97 2
         '<strong>'Warning'</strong>': The origin of CNF12 calculated 
           in this way is in (1,1).
@


1.16
log
@title
@
text
@d62 18
a79 14
         '<pre>'
              FT
              INPUT1
              FOUR1
              FT
              INPUT2
              FOUR2
              MU
              FOUR1
              FOUR2
              FT
              FOUR2
              CNF12
         '</pre>'
@


1.15
log
@*** empty log message ***
@
text
@d1 1
a1 1
CN        CoNvolution ||                                          CN      
d6 1
a6 1
          Operation CN works for 2D as well as 3D input data.
d9 1
a9 1
          (see FT for restrictions).
d11 7
a17 6
SEE ALSO:  CN N   (CoNvolution - Normalized)
           CC     (Cross Correlation)
           CC N   (Cross Correlation - Normalized)
           AC     (Auto Correlation)
           AC N   (Auto Correlation - Normalized)
           CC C   (Cross Correlation Coefficient)
d44 3
a46 3
           within                                                '<BR>'
                  -L <= K <= +L                                  '<BR>'
                  -M <= I <= +M                                  '<BR>'
d62 1
a62 1
         '<PRE>'
d75 3
a77 3
         '</PRE>'
         '<STRONG>'Warning'</STRONG>': The origin of CNF12 calculated in 
          this way is in (1,1).
@


1.14
log
@||
@
text
@a0 1

@


1.13
log
@subroutine links
@
text
@d2 1
a2 1
CN        CoNvolution                                       CN      
@


1.12
log
@*** empty log message ***
@
text
@d79 2
a80 2
SUBROUTINES: CNRS_2, CNRS_2R, CNRS_3, CNRS_3R,
             CNRD_2, CNRD_2R, CNRD_3, CNRD_3R
@


1.11
log
@brushup
@
text
@d12 6
a17 6
SEE ALSO:  CN N   (CoNvolution, Normalized)
           CC     (Cross-Correlation)
           CC N   (Cross-Correlation, Normalized)
           AC     (Auto-Correlation)
           AC N   (Auto-Correlation, Normalized)
           CC C   (Cross-Correlation Coefficient)
d44 3
a46 3
           within                                                       '<BR>'
                  -L <= K <= +L                                         '<BR>'
                  -M <= I <= +M                                         '<BR>'
d60 1
a60 1
       6. If the data cannot fit into the memory use the FT and MU
d76 1
a76 1
         '<strong>'Warning'</strong>': The origin of CNF12 calculated in 
@


1.10
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            08/28/96
d7 11
a17 11
          Operation 'CN' works for 2D as well as 3D input data.
          The dimensions of the pictures have to correspond to each
          other.  The dimensions do not have to be powers of two
          (see 'FT' for restrictions).

SEE ALSO:  CN N   (convolution - normalized)
           CC     (cross-correlation)
           CC N   (cross-correlation - normalized)
           AC     (auto-correlation)
           AC N   (auto-correlation - normalized)
           CC C   (cross-correlation coefficient)
d25 1
a25 1
          [Enter the name of the second picture, which is used for
d29 3
a31 3
          [Enter name of the file which will contain CN coeffs.
           It can be the same as the input file.  In this case
           input file will be reaplced by the convolution.]
d44 3
a46 3
           within'<BR>'
                  -L <= K <= +L'<BR>'
                  -M <= I <= +M'<BR>'
d55 1
a55 1
       5. Note that 'RC' (REAL CONVOLUTION) offers an 
d57 2
a58 2
           product.  'RC' should be used if the width of the point
           spread function is small (<=15).
d61 2
a62 2
          commands to calculate CNF:
          '<PRE>'
d75 3
a77 2
        '</PRE>'
        '<strong>'Warning'</strong>': the origin of CNF12 calculated this way is in (1,1).
d83 3
@


1.9
log
@new version
@
text
@d29 4
a32 1
          [Enter name of the file which will contain CN coeffs.]
@


1.8
log
@*** empty log message ***
@
text
@d28 3
a32 19

          This feature allows multiple use of the 'CN' command
          with the same reference:
           '<PRE>'
             CC
             PIC001
             REF001
             CC
             PIC002
             REF001
             .
             .
             .
          '</PRE>'

          Here, REF001 originally contains real data.  On  
          completion of the first 'CN' operation, REF001 contains
          complex data.  The second 'CN' thus saves one Fourier
          transformation.
@


1.7
log
@list of procedures updated
@
text
@d89 1
a89 1
          Warning: the orgin of CNF12 calculated this way is in (1,1).
@


1.6
log
@new version
@
text
@d91 2
a92 1
SUBROUTINES: CNRD_2, CNRD_2R, CNRD_3, CNRD_3R
@


1.5
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            7/1/85
d6 12
a17 3
          the Fourier transform relationship.  The dimensions of the
          pictures have to correspond to each other, and have to be
          powers of two.
d28 25
a52 33
          .FILTERING? (Y/N): N
          [Enter 'N' as filtering has been removed, this question
           remains only for compatibility with existing proceedure
           files.]

NOTES: 1. On completion of the operation, the input file will
          contain the convolution product of PIC001 and REF001,
          and the reference file will contain the Fourier
          transform of the reference picture.
       2. The type of input data can be "R" (real) or "F" 
          '<PRE>'
          (Fourier) in any mixed form, i.e.
          "R" for first input and "F" for reference input,
          "F" for first input and "R" for reference input,
          "F" for first input and "F" for reference input,
          "R" for first input and "R" for reference input.
           This feature allows multiple use of the 'CN' command
           with the same reference:
               CN
               PIC001
               REF001
               CN
               PIC002
               REF002
           Here, REF001 originally contains real data. On 
           completion of the first 'CN' operation, REF001 contains 
           complex data.  The second 'CN' thus saves one Fourier
           transformation.
           '</PRE>'

        3. The convolution product is normalized in such a way
           that the total "energy" in the reference picture remains
           unchanged.
d54 1
a54 1
        4. The convolution product contains artifacts from 
d68 1
a68 1
        5. Note that 'RC' (REAL CONVOLUTION) offers an 
d73 17
d91 1
a91 1
SUBROUTINES: CORR1C
@


1.4
log
@updated
@
text
@a27 1
'<PRE>'
d29 1
d47 1
a47 1
'<PRE>'
@


1.3
log
@changes for better html file
@
text
@d20 3
a22 3
          [Enter 'Y' if you want to have a filtered convolution
          product, 'N' if not. See 'CC' and 'FF' for details
          about the filtering option]
d24 1
a24 1
NOTES: 1  On completion of the operation, the input file will
d28 1
a28 1

d31 4
a34 4
                  "R" for first input and "F" for reference input,
                  "F" for first input and "R" for reference input,
                  "F" for first input and "F" for reference input,
                  "R" for first input and "R" for reference input.
d37 6
a42 6
                  CN
                  PIC001
                  REF001
                  CN
                  PIC002
                  REF002
d47 1
d56 3
a58 3
           within
                  -L <= K <= +L
                  -M <= I <= +M
d73 3
a75 2
Subroutines:
Cotask:      CORR1
@


1.2
log
@replaced_tabs
@
text
@d26 2
a27 2
          and the reference file will contain the Fourier trans-
          form of the reference picture.
d29 2
a30 2
       2. The type of input data can be "R" (real) or "F" (Four-
          ier) in any mixed form, i.e.
d43 3
a45 3
           Here, REF001 originally contains real data. On comple-
           tion of the first 'CN' operation, REF001 contains com-
           plex data.  The second 'CN' thus saves one Fourier
d52 2
a53 2
        4. The convolution product contains artifacts from wrap-
           around overlaps implicit in the Fourier computation.
d61 2
a62 2
           The complete artifact-free convolution product is ob-
           tained for the widths M=NROW/2, L=NSAM/2.  In this
d66 3
a68 3
        5. Note that 'RC' (REAL CONVOLUTION) offers an alterna-
           tive to Fourier computation of the convolution prod-
           uct.  'RC' should be used if the width of the point
@


1.1
log
@Initial revision
@
text
@@
