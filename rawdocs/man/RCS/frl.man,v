head	1.10;
access;
symbols
	best-code:1.5
	pre-named-reg:1.5
	pre_GPL:1.4
	prec_CA:1.4;
locks; strict;
comment	@# @;


1.10
date	2015.02.13.17.15.13;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2009.09.09.10.58.16;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2009.09.09.10.38.31;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2008.11.04.16.50.19;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2007.10.02.13.41.09;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.07.21.05.47;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.28.18.15.27;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.28.15.30.09;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.20.15.47.45;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.19.18.25.29;	author leith;	state Exp;
branches;
next	;


desc
@new
@


1.10
log
@*** empty log message ***
@
text
@
FR L       Read (sets) a local string variable     FR L     
                                                  10/11/07

PURPOSE:  Associates a file name template or any other
          string with a string (symbolic) variable.  
          Reads input from current procedure or terminal.  
          'FR L' differs from 'FR' which
          receives input from the calling procedure or input stream.
          The string variable is available only inside the
          current SPIDER procedure.

SEE ALSO: FR
          FR F
          FR G
          RR
          VAR

USAGE:    FR L   

          .VARIABLE NAME & ASSOCIATED VALUE: [label]value 
          [Enter string variable name (surrounded by []'s) and 
           the associated alphanumeric string.]

NOTES:    1. This operation is useful when writing long procedures as
            a string variable can be initialized to contain a certain 
            value at the top of the procedure then the variable 
            e.g. [raw_file] can be used throughout the procedure.  If the 
            string's value later changes then it only has to be altered at 
            one location in the procedure.

          2. Example.  
 
          '<dl>'
          '<dt>'FR L                       '</dt>' 
          '<dt>'[raw_file]nerve{***[iter]} '</dt>' 
          '<dt>'                           '</dt>' 
          '<dt>'DO  [iter]=4,6             '</dt>' 
             '<dd>'FS                      '</dd>'             
             '<dd>'[raw_file]              '</dd>'             
          '<dt>'ENDDO                      '</dt>'
          '<dt>'                           '</dt>' 
          '<dt>'                           '</dt>' 
          '<dt>'[iter]=16                  '</dt>' 
          '<dt>'CP                         '</dt>' 
          '<dt>'[raw_file]                 '</dt>' 
          '<dt>'[raw_file]_jnk             '</dt>' 
          '<dt>'EN                         '</dt>' 
          '</dl>'
          '<p />'

          When procedure executes, operation sequence is : 
          '<p />'
            
           FS           '<br />'
           nerve004     '<br />'
           FS           '<br />'
           nerve005     '<br />'
           FS           '<br />'
           nerve006     '<br />'
          '<p />'
           CP           '<br />'
           nerve016     '<br />'
           nerve016_jnk '<br />'
          '<p />'


SUBROUTINE: RDPRMC, RDPR, SYMPAR, SETSYMPAR, SUBSYMPAR, PARSESYMPAR

CALLER:     DRIV1

@


1.9
log
@*** empty log message ***
@
text
@d2 2
a3 2
FR L       Read (sets) a local string (symbolic) variable     FR L     
                                                             10/11/07
@


1.8
log
@*** empty log message ***
@
text
@d21 1
a21 1
          .PARAMETER LABEL & ASSOCIATED VALUE: [label]value 
@


1.7
log
@*** empty log message ***
@
text
@d2 1
a2 1
FR L       Read (sets) a local symbolic parameter (string variable)  FR L     
d6 3
a8 3
          string with a string variable (symbolic parameter).  
          Reads input from current
          procedure or input stream.  'FR L' differs from 'FR' which
d10 2
d17 1
d21 3
a23 3
          .PARAMETER LABEL & ASSOCIATED VALUE:  [label]value 
          [Enter string's name (surrounded by []'s) and associated 
           alphanumeric string.]
d25 1
a25 32
          1. Example.  
 
           '<pre>'  
            FR L
            [raw_file]nerve{***[num]}

            DO [num]=4,6
              FS
              [raw_file]
            ENDDO

            [num]=4
            CP
            [raw_file]
            [raw_file]_jnk

            When procedure executes, operation sequence is :  
            
            FS
            nerve004
            FS
            nerve005
            FS
            nerve006

            CP
            nerve004
            nerve004_jnk

          '</pre>'  

NOTES:      This operation is useful when writing long procedures as
d32 37
a68 1
SUBROUTINE: DRIV1, RDPRMC, RDPR, SYMPAR, SETSYMPAR, SUBSYMPAR, PARSESYMPAR
@


1.6
log
@better title
@
text
@d13 1
a13 1
          DV SL
@


1.5
log
@update
@
text
@d2 2
a3 2
FR L      File Read, Local                                     FR L     
                                                            11/11/05
d26 1
a26 1
            [raw_file]nerve{***x23}
d28 1
a28 1
            DO LB1 x23=4,6
d31 1
a31 1
            LB1
d33 1
a33 1
            x23=4
@


1.4
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            6/19/02
d6 2
a7 1
          string with a symbolic parameter.  Reads input from current
d13 1
d18 3
a20 3
          .PARAMETER LABEL & ASSOCIATED VALUE:  <label>value'<BR>' 
          [Enter symbolic parameter id (surrounded by <>'s) and associated 
           string.]
d22 1
a22 1
          1. Example.  '<BR>'
d24 1
a24 1
           '<PRE>'  
d26 1
a26 1
            <raw_file>nerve{***x23}
d28 1
a28 2
            DO LB1 I=4,6
              x23=x0
d30 1
a30 1
              <raw_file>
d35 2
a36 2
            <raw_file>
            <raw_file>_jnk
d38 1
a38 1
            When procedure executes, operation sequence is : '<BR>'
d51 1
a51 1
          '</PRE>'  
d54 3
a56 3
            a single symbolic parameter can be initialized to contain
            a string at the top of the procedure then the symbolic parameter 
            e.g. <raw_file> can be used throughout the procedure.  If the 
@


1.3
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            3/19/01
d11 1
d16 3
a18 3
          .SYMBOLIC PARAMETER PROMPT & NUMBER:  ?prompt? <symbolic parameter number>'<BR>' 
          [Enter prompt string to be printed when procedure executes and the 
           symbolic parameter number to be assciated with the response.]
a19 3
          .$?prompt? <symbolic parameter number>:  '<BR>'
          [Enter string to be associated with this symbolic parameter number.]

d21 2
a22 3
            Inside a procedure:

          '<PRE>'  
d24 1
a24 2
            ?NERVE AXON FILE TEMPLATE? <2>
            nerve
d27 1
d29 1
a29 1
              <2>00I
d32 1
d34 2
a35 2
            <2>004
            <2>_jnk
d37 1
a37 1
            When do-loop runs operation sequence is : '<BR>'
a45 1
            Following do-loop operation sequence is : '<BR>'
d48 1
a48 1
            nerve_jnk
d54 4
a57 4
            a string at the top of the procedure then the parameter number
            e.g. <4> can be used throughout the procedure.  If the string's
            value later changes then it only has to be altered at one location
            in the procedure.
d59 1
a59 1
SUBROUTINE: DRIV1,  RDPRMC, RDPR, SETSYMPAR
@


1.2
log
@*** empty log message ***
@
text
@d62 1
a62 1
SUBROUTINE: DRIV1, FILERD, RDPR, SETSYMPAR
@


1.1
log
@Initial revision
@
text
@d53 1
a53 1
          '<PRE>'  
@
