head	1.20;
access;
symbols
	best-code:1.16
	pre-named-reg:1.14
	pre_GPL:1.14
	prec_CA:1.12
	oct21:1.7;
locks; strict;


1.20
date	2013.08.27.14.25.36;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2011.12.07.16.34.44;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2009.09.04.12.31.59;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2008.05.27.15.21.39;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.12.27.17.46.50;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.12.12.18.28.29;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2004.12.03.20.02.18;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2004.12.03.15.07.10;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2002.08.02.14.01.29;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2001.07.17.18.28.36;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.09.15.19.20.10;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.16.18.24.41;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.01.10.13.50.30;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.07.30.16.24.11;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.03.25.16.04.17;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.03.22.21.14.49;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.11.08.21.05.11;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	94.07.12.16.34.57;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.25.35;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.15.47;	author leith;	state Exp;
branches;
next	;


desc
@@


1.20
log
@*** empty log message ***
@
text
@
RR        Read (Set) Register variables                        RR      
                                                         8/27/2013

PURPOSE:  To read value(s) into a local register (numerical) variable.  Useful to 
          set numerical variables from inside a SPIDER procedure at run time. See 'VAR' 
          operation for alternative methods.

SEE ALSO: RR G
          RR C
          RR S
          VAR

USAGE:    RR [var1],[var2],[var3],...

       WITHIN AN INTERACTIVE SESSION OR WITHIN A PROCEDURE WHERE A ?SOLICITATION PROMPT?
       DOES NOT FOLLOW THE OPERATION:
         '<div class='"'opt_inp'"'>'
          RR [var1],[var2],[var3]                      '<br />'
          .VALUE(S): 4.0, 5, 6                         '<br />'
          [Enter the floating point value(s) to be put into listed
          register variables (here: [var1],[var2], and [var3]).  
          In this form the operation is equivalent to the 
          operations '[var1] = 4.', followed by: '[var2] = 5', 
          followed by: '[var3] = 6'.  Indeed, it offers no advantage 
          over these simple operations, except that it allows multiple
          register variables to be set on a single line.'<br />' 
          A procedure containing the 'RR' operation  NOT followed  by a solicitation 
          prompt reads its input from the succeeding line in the same procedure.'<br />' 
          The value may either be explicitly 
          entered (e.g. 4.0), declared as the contents of a register variable known 
          to the current procedure (e.g. [var20]), or as a string variable known in 
          the current procedure (e.g. [var_str]).]
          '</div>'


       QUERY INTERACTIVE INPUT FROM INSIDE A PROCEDURE:
         '<div class='"'opt_inp'"'>'

          RR [mag],..                 '<br />'
          ? ENTER MAGNIFICATION ?     '<br />'

          [A procedure containing the 'RR' operation followed on the next line
          by a solicitation prompt e.g. ? ENTER MAGNIFICATION ? produces the 
          following prompt in the interactive session]:

          ? ENTER MAGNIFICATION ?  4.                           '<br />'
          [The magnification value may either be explicitly entered (e.g. 4.),
          declared as the contents of a register variable already defined within
          the  interactive session (e.g. [var20]), or as a symbol
          already defined within  the interactive session (e.g. [var_sym]).  
          The value entered in any of the three forms will be stored
          in register variable: [mag].]
          '</div>'

       QUERY A CALLING PROCEDURE FROM INSIDE A PROCEDURE, WHERE A SOLICITATION PROMPT
       FOLLOWS THE OPERATION:
         '<div class='"'opt_inp'"'>'

          RR [mag],..                     '<br />'
          ? ENTER MAGNIFICATION ?         '<br />'
          [A procedure containing the 'RR' operation followed on the next line
          by a solicitation prompt (e.g. ? ENTER MAGNIFICATION ?) reads its input from 
          the succeeding line in the '<b>'calling '</b>'procedure. 
          In the calling procedure the magnification value may either be explicitly 
          entered (e.g. 4.), declared as the contents of a register variable known in the calling 
          procedure (e.g. [var20]), or as a string variable known in 
          the calling procedure (e.g. [var_str]).]
          The value entered in any of the three forms will be stored
          in register variable: [mag].]
          '</div>'


NOTES:    1. Unless you have used operation 
             '<a href='"'md.html'"'>''MD''</a>' with 
             option '<i>'() ON'</i>', 'RR' can '<b>' NO LONGER'</b>' 
             be used within a DO-loop to enter a set of
             numbers successively into a register variable.  Use
             '<a href='"'rrs.html'"'>''RR S''</a>'  instead.'<br />'

         '<small>'
         2. '<b>'Deprecated legacy usage'</b>' 
            If you have used the Mode operation 
             '<a href='"'md.html'"'>''MD''</a>' with 
             option '<i>'() ON'</i>', then operation 'RR' reverts to
             its legacy usage and can    
             be used within a DO-loop to enter a single set of
             set of numbers into multiple registers:           '<br />'
              DO I=1,5                                                '<br />'
                '&'nbsp;'&'nbsp;RR [x],[y],[z]                        '<br />'
                '&'nbsp;'&'nbsp;(4,8,12)                              '<br />'
                '&'nbsp;'&'nbsp;~~~                                   '<br />'
                '&'nbsp;'&'nbsp;~~~                                   '<br />'
              ENDDO                                                   '<br />'
            In each iteration: [x],[y],[z] will be filled with the same
            respective values: 4, 8, 12. '<br />' '<br />'

          However when the values are not enclosed within ()s, e.g.:'<br />'
              DO I=1,3                                                '<br />'
                '&'nbsp;'&'nbsp;RR [x]                                '<br />'
                '&'nbsp;'&'nbsp;4,8,12                               '<br />'
                '&'nbsp;'&'nbsp;~~~                                   '<br />'
                '&'nbsp;'&'nbsp;~~~                                   '<br />'
              ENDDO                                                   '<br />'
            In each iteration: [x] will be filled with a succeeding value
            from the list: 4, 8, 12. '<br />'

          However in this case: '<br />'
          For iteration =1, [x] will be filled with the value 4 , '<br />'
          for iteration =2, [x] will be filled with the value 8 , '<br />'
          for iteration =3, [x] will be filled with the value 12  '<br />'
          and so forth.
          '</small>'
  

SUBROUTINES: READRQ, REG_SET, SHRINKQ, CHKSTR


CALLER:      DRIV1
@


1.19
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                         12/4/2011
d5 3
a7 2
PURPOSE:  To read value(s) into register variable(s).  Useful to 
          set registers inside a SPIDER procedure at run time.
d16 2
a17 1
     WITHIN AN INTERACTIVE SESSION:
d19 2
a20 2
          RR [var1],[var2],[var3]                     '<br />'
          .VALUE(S): 4., 5, 6                         '<br />'
d25 1
a25 1
          followed by: '[var3] = 6' .  Indeed, it offers no advantage 
d27 7
a33 1
          register variables to be set on a single line.]
a35 13
       WITHIN A PROCEDURE CALLING ANOTHER PROCEDURE, WHERE A SOLICITATION PROMPT
       DOES NOT FOLLOW THE OPERATION :
         '<div class='"'opt_inp'"'>'
         RR [mag]                                     '<br />'
         4.0                                          '<br />'
         [A procedure containing the 'RR' operation  NOT followed  by a solicitation 
          prompt reads its input from the succeeding line in the same procedure. 
          The value may either be explicitly 
          entered (e.g. 4.0), declared as the contents of a register variable of the calling 
          procedure (e.g. [var20]), or as a symbol present in the calling procedure 
          (e.g. [var_sym]).  The value entered in any of the three forms will be stored
          in register variable: [mag].]
          '</div>'
d37 1
a37 2
       WITHIN A PROCEDURE CALLING THE INTERACTIVE SESSION, WHERE A SOLICITATION PROMPT
       FOLLOWS THE OPERATION:
d41 1
a41 1
          ? ENTER MAGNIFICATION ?'<br />'
d47 1
a47 1
          ? ENTER MAGNIFICATION ?  4.          '<br />'
d56 1
a56 1
       WITHIN A PROCEDURE CALLING ANOTHER PROCEDURE, WHERE A SOLICITATION PROMPT
d60 2
a61 2
          RR [mag],.. '<br />'
          ? ENTER MAGNIFICATION ?'<br />'
d64 1
a64 1
          the succeeding line in the calling procedure. 
d66 4
a69 3
          entered (e.g. 4.), declared as the contents of a register variable of the calling 
          procedure (e.g. [var20]), or as a symbol present in the calling procedure 
          (e.g. [var_sym]).  The value entered in any of the three forms will be stored
@


1.18
log
@named registers
@
text
@d2 2
a3 2
RR        Read Register variables                                 RR      
                                                            9/4/2009
d11 1
d15 2
a16 2
       IN THE INTERACTIVE SESSION:

d18 1
a18 1
          .VALUE(S): 4.,5,6                           '<br />'
d20 1
a20 1
          register variables: [var1],[var2], and [var3].  
d22 1
a22 1
          operations '[var1] = 4', followed by: '[var2] = 5', 
d26 1
d30 1
a30 1

d32 1
a32 1
         4.                                           '<br />'
d36 1
a36 1
          entered (4.), declared as the contents of a register variable of the calling 
d38 3
a40 2
          [var_sym].  The value entered in any of the three forms will be stored
          in register variable [mag].]
d44 1
d46 2
a47 2
          RR [mag],.. '<br />'
          ? ENTER MAGNIFICATION ?
d54 1
a54 1
          [The magnification value may either be explicitly entered (4.),
d57 1
a57 1
          already defined withinin the interactive session.  
d59 2
a60 1
          in register variable [mag].]
d64 1
d67 2
a68 2
          ? ENTER MAGNIFICATION ?
         [A procedure containing the 'RR' operation followed on the next line
d72 1
a72 1
          entered (4.), declared as the contents of a register variable of the calling 
d74 20
a93 26
          [var_sym].  The value entered in any of the three forms will be stored
          in register variable [mag].]


NOTES:    1.  Unless you have used operation 
            '<a href='"'md.html'"'>''MD''</a>' with 
            option '<i>'() ON'</i>' 'RR' can '<b>' NO LONGER'</b>' 
            be used within a DO-loop to enter a set of
           numbers successively into a register variable.  Use
            '<a href='"'rrs.html'"'>''RR S''</a>'  instead. '<br />'
           e.g. '<br />'
              DO [iv]=1,5                                             '<br />'
               '&'nbsp;'&'nbsp; RR S [cuttoff]                        '<br />'
               '&'nbsp;'&'nbsp; 4.3,8.1,0.12,5.0,8.55                 '<br />'
               '&'nbsp;'&'nbsp; [iv]                                  '<br />'
               '&'nbsp;'&'nbsp; .                                     '<br />'
               '&'nbsp;'&'nbsp; .                                     '<br />'
              ENDDO                                                   '<br />'

          For iteration =1, [cuttoff] will be filled with the value 4.3, 
          for iteration =2, [cuttoff] will be filled with the value 8.1.3, 
              and so forth.'<p />'

          2. 'RR' may be used within a DO-loop to enter a single 
          set of numbers into multiple registers:                     '<br />'

d97 12
a108 3
                '&'nbsp;'&'nbsp;.                                     '<br />'
                '&'nbsp;'&'nbsp;.                                     '<br />'
                '&'nbsp;'&'nbsp;.                                     '<br />'
d110 2
d113 7
a119 2
          In each iteration: [x],[y],[z] will be filled with the same 
          respective values: 4, 8, 12.
@


1.17
log
@update for () RR S
@
text
@d3 1
a3 1
                                                            5/27/2008
a12 2
            '<or>'
          RR X11,X12,X13,...
d16 2
a17 2
          RR [var1],[var2],[var3] '<br>'
          .VALUE(S): 4.,5,6
d19 1
a19 1
          register variables: [var1],[var2],[var3].  
d29 2
a30 2
         RR [mag] '<br>'
         4.'<br>'
d42 1
a42 1
          RR [mag],.. '<br>'
d49 1
a49 1
          ? ENTER MAGNIFICATION ?  4.          '<br>'
d60 1
a60 1
          RR [mag],.. '<br>'
d74 1
a74 1
            option '<i>'() ON'</i>' 'RR' can '<b>' NO LONGER'<b>' 
d77 9
a85 9
            '<a href='"'rrs.html'"'>''RR S''</a>'  instead. '<br>'
           e.g. '<br>'
              DO x10=1,5                            '<br>'
              RR S [cuttoff]                        '<br>'
              4.3,8.1,0.12,5.0,8.55                 '<br>'
              x10                                   '<br>'
              .                                     '<br>'
              .                                     '<br>'
              ENDDO                                 '<br>'
d92 1
a92 1
          set of numbers into multiple registers:          '<br>'
d94 7
a100 7
              DO I=1,5                          '<br>'
              RR [x],[y],[z]                        '<br>'
              (4,8,12)                              '<br>'
              .                                     '<br>'
              .                                     '<br>'
              .                                     '<br>'
              ENDDO                                   '<br>'
@


1.16
log
@update
@
text
@d3 1
a3 1
                                                            12/27/2005
d10 1
d74 9
a82 5
NOTES:    1.  'RR' may be used within a DO-loop to enter a set of
          numbers successively into a register variable:     '<br>'

              DO LB1 I=1,5                          '<br>'
              RR [cuttoff]                          '<br>'
d84 1
d87 1
a87 2
              .                                     '<br>'
              LB1                                   '<br>'
d89 3
a91 2
          For I=1, [cuttoff] will be filled with the value 4.3, and so
          forth.'<p />'
d93 2
a94 3
          2. 'RR' may also be used within a DO-loop with input 
          surrounded by ()'s (as usual) to enter a single set of
          numbers into multiple registers:          '<br>'
d96 1
a96 1
              DO LB1 I=1,5                          '<br>'
d102 1
a102 1
              LB1                                   '<br>'
d104 2
a105 1
          In each loop [x],[y],[z] will be filled with the same values: 4,8,12.
@


1.15
log
@native named registers
@
text
@d3 1
a3 1
                                                            12/11/2005
d8 3
@


1.14
log
@html formatting wrong
@
text
@d2 2
a3 2
RR        Read Register                                     RR      
                                                            12/03/2004
d5 2
a6 2
PURPOSE:  To read value(s) into register(s).  Useful to set registers
          inside a SPIDER procedure at run time.
d8 28
a35 1
USAGE:    RR X10,X11,X11,...
d37 2
a38 1
       OUTSIDE OF PROCEDURE:
d40 1
a40 11
          RR X10 '<br>'
          .VALUE(S): 4.
          [Enter the value (floating point) to be put into register
          X10.  In this form the command is equivalent to the 
          command 'X10 = 4'.  Indeed, it offers no advantage over this
          simple statement, however the operation allows multiple
          registers to be set on one line.]

       WITHIN A PROCEDURE AS INTERACTIVE CALL:

          RR X10,X11,X11,.. '<br>'
d43 3
a45 2
          [An interactive call to a procedure containing this
          statement produces the following ...]:
d48 4
a51 4
          [...where the value may either be explicitly entered (4.),
          declared as the contents of a register of the calling 
          command stream (e.g. X20), or, if the calling command stream is a
          procedure, declared as a previously solicited value (e.g. <2>).
d53 1
a53 1
          in register X10 and used in the subsequent computation.]
d55 2
a56 1
        WITHIN A PROCEDURE AS NON-INTERACTIVE CALL: '<br>'
d58 10
a67 1
         RR X10 '<br>'
a68 10
          [Running a procedure containing this
          statement produces the following ...]:

          .VALUE(S): 4.
          [...where the value may either be explicitly entered (4.),
          declared as the contents of a register of the calling 
          command stream (e.g. X20), or declared as a previously 
          solicited symbolic parameter value (e.g. <2>).
          The value entered in any of the three forms will be stored
          in register X10 and used in the subsequent computation.]
d70 2
a71 2
NOTES:    1.  'RR' may also be used within a DO-loop to enter a set of
          numbers successively into a register:     '<br>'
d74 1
a74 1
              RR X10                                '<br>'
d81 1
a81 1
          For I=1, X10 will be filled with the value 4.3, and so
d89 2
a90 2
              RR X10,X11,X12                        '<br>'
              (4.3,8.1,0.12)                        '<br>'
d96 1
a96 1
          In each loop X10,X11,X12 will be filled with the values:  4.3,8.1,0.12.
@


1.13
log
@typo
@
text
@d52 1
a52 1
          numbers successively into a register:
d63 1
a63 1
          forth.
d65 1
a65 1
          2 'RR' may also be used within a DO-loop with input 
d67 1
a67 1
          numbers into multiple registers:
@


1.12
log
@no ??
@
text
@d3 1
a3 1
                                                            8/02/2002
d12 1
a12 1
          RR X10 '<BR>'
d22 1
a22 1
          RR X10,X11,X11,.. '<BR>'
d28 1
a28 1
          ? ENTER MAGNIFICATION ?  4.          '<BR>'
d36 1
a36 1
        WITHIN A PROCEDURE AS NON-INTERACTIVE CALL: '<BR>'
d38 1
a38 1
         RR X10 '<BR>'
d54 7
a60 7
              DO LB1 I=1,5                          '<BR>'
              RR X10                                '<BR>'
              4.3,8.1,0.12,5.0,8.55                 '<BR>'
              .                                     '<BR>'
              .                                     '<BR>'
              .                                     '<BR>'
              LB1                                   '<BR>'
d69 7
a75 7
              DO LB1 I=1,5                          '<BR>'
              RR X10,X11,X12                        '<BR>'
              (4.3,8.1,0.12)                        '<BR>'
              .                                     '<BR>'
              .                                     '<BR>'
              .                                     '<BR>'
              LB1                                   '<BR>'
d79 1
a79 1
SUBROUTINES: READRQ, REG_SET, SHRINKQ, CHKSTR^s^p
@


1.11
log
@clarified ???.
@
text
@d3 1
a3 1
                                                            7/17/2001
d20 1
a20 1
       WITHIN A PROCEDURE:
d36 15
d79 2
a80 1
SUBROUTINES: READRQ, REG_SET, SHRINKQ, CHKSTR
@


1.10
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            1/10/2000
d6 1
a6 1
          a procedure at run time.
d8 1
a8 3
USAGE:    RR X10  ... '<BR>'
             <or>
          RR X10,X11,X11,... '<BR>'
d12 1
d22 1
a28 5
                              <or>             '<BR>'
          ? ENTER MAGNIFICATION ?  /X20        '<BR>'
                              <or>             '<BR>'
          ? ENTER MAGNIFICATION ?  <2>        '<BR>'

d31 2
a32 2
          command stream (X20), or, if the calling command stream is a
          procedure, declared as a previously solicited value (<2>).
d62 1
a62 2
          In each loop  X10,X11,X12 will be filled with the value 
          4.3,8.1,0.12.
@


1.9
log
@*** empty log message ***
@
text
@d26 1
a26 1
          statement produces the following sequence...]:
d28 5
a32 1
          ? ENTER MAGNIFICATION ?  4./X20/<2>
d72 1
a72 1
CALLER:      DRIV3
@


1.8
log
@*** empty log message ***
@
text
@d66 1
a66 1
SUBROUTINES: READRQ, READPQ, SHRINKQ, CHKSTR
@


1.7
log
@can read multiple registers
@
text
@d3 1
a3 1
                                                            7/30/99
d66 1
a66 1
SUBROUTINES: READRQ, READPQ, SHRINKQ, CHKSTRQ
@


1.6
log
@faixed formatting
@
text
@d3 1
a3 1
                                                            3/22/96
d5 2
a6 2
PURPOSE:  To read a value into a register of a procedure at run
          time.
d8 3
a10 1
USAGE:    RR X10
d14 1
a14 1
          .VALUE: 4.
d18 2
a19 1
          simple statement.]
d37 1
a37 1
NOTES:    'RR' may also be used within a DO-loop to enter a set of
d50 15
@


1.5
log
@caller
@
text
@d8 1
a8 1
OUTSIDE OF PROCEDURE:
d10 1
a10 1
USAGE:    RR X10
d18 1
a18 1
WITHIN A PROCEDURE:
a19 1
USAGE:    RR X10
d37 7
a43 7
              DO LB1 I=1,5
              RR X10
              4.3,8.1,0.12,5.0,8.55
              .
              .
              .
              LB1
d48 1
a48 1
SUBROUTINES: READR
d50 1
a50 1
CALLER:      DRIVER
@


1.4
log
@changes for better html file
@
text
@d3 1
a3 1
                                                            12/15/89
a7 1

a17 1

d49 1
d51 1
a51 2
Subroutines: READR
Cotask:      DRIVER
@


1.3
log
@replaced_tabs
@
text
@d15 2
a16 2
          X10.  In this form the command is equivalent to the com-
          mand 'X10 = 4'.  Indeed, it offers no advantage over this
d31 2
a32 2
          declared as the contents of a register of the calling com-
          mand stream (X20), or, if the calling command stream is a
@


1.2
log
@replaced_tabs
@
text
@@


1.1
log
@Initial revision
@
text
@d26 1
a26 1
	  statement produces the following sequence...]:
d33 3
a35 3
	  procedure, declared as a previously solicited value (<2>).
	  The value entered in any of the three forms will be stored
	  in register X10 and used in the subsequent computation.]
@
