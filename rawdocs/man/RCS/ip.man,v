head	1.26;
access;
symbols
	best-code:1.12
	pre-named-reg:1.12
	pre_GPL:1.12
	prec_CA:1.12
	oct21:1.10;
locks; strict;


1.26
date	2014.01.12.16.55.49;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2011.12.16.16.21.42;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2011.10.31.19.48.25;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2011.10.24.20.22.17;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2011.09.28.16.32.38;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2011.09.26.18.26.42;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2011.09.26.18.25.45;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2011.08.04.19.17.09;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2010.11.24.15.21.09;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.11.23.18.41.42;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.07.19.13.35.40;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2009.09.02.12.42.29;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2006.10.04.16.18.53;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2006.09.27.14.34.48;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.18.17.50.31;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.16.16.09.01;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.09.17.15.28.08;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	98.11.18.14.54.53;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	96.01.25.19.39.36;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	95.11.08.21.03.54;	author mladjadj;	state Exp;
branches;
next	1.6;

1.6
date	95.07.20.18.07.39;	author gopalak;	state Exp;
branches;
next	1.5;

1.5
date	95.07.19.20.38.19;	author gopalak;	state Exp;
branches;
next	1.4;

1.4
date	95.04.18.20.23.05;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.12.01.18.56.16;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.33.36;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.15.04;	author leith;	state Exp;
branches;
next	;


desc
@@


1.26
log
@enter
@
text
@
IP        Interpolate/Resize using bilinear/trilinear interpolation    IP      
                                                           09/07/11

PURPOSE:  Takes input image/volume of any dimension and creates
          interpolated image/volume of any dimension. Uses bilinear 
          interpolation for images and trilinear interpolation on 
          volumes.

SEE ALSO:  IP FS  
           IP FT  
           IP T  
           DC

USAGE:    IP

          .INPUT FILE: PIC001
          [Enter the name of the file to be interpolated.]

          .OUTPUT FILE: IMG024
          [Enter the file where the interpolated image is to be placed.]

      If input file is an image, SPIDER asks: 

          '<div class='"'opt_inp'"'>'
          .OUTPUT DIMENSIONS, NX &  NY: 72, 48,
          [Enter interpolated X & Y dimensions for the output image.]
          '</div>'

      If input file is a volume, SPIDER asks: 

          '<div class='"'opt_inp'"'>'
          .OUTPUT DIMENSIONS, NX, NY, & NZ): 72, 48, 50
           [Enter interpolated X, Y, and Z dimensions for the 
            output volume.] 
          '</div>'

NOTES: 1. This operation can be used for either interpolation or
          extrapolation.

       2. The output image does not have to have the same 
          proportions (ratio NX/NY) as the input image.

       3. Only the new X dimension
          (NX) of the output image needs be entered.
          The other dimension(s) will then be computed 
          assuming the same proportions as the input image.  For
          example, let the input image have the size 60x40.
          Then the sequence                               '<br />'
                  .OUTPUT DIMENSIONS,  NX & NY: 120
          will have the same effect as:                     '<br />'
                  .OUTPUT DIMENSIONS,  NX & NY: 120, 80

       4. The program works by throwing a new grid onto the image/volume 
          whose boundaries coincide with those of the old grid.  Each
          pixel of the new grid is computed from its old neighbors  by
          bilinear/trilinear interpolation.

       5. Note that for raw data, a  reduction  in  scale  by  'IP'
          results in a loss of S/N ratio, since only a subset of the
          original points may be used for interpolation.  The proper
          procedure maintaining the original information as much as
          possible is to apply an appropriate low-pass filtration to
          the original image (either 'FQ', or for large images design a
          Remez filter using 'FF PLOT' and use 'RC'), and decimate it
          using 'DC' operation.

       5. Pixel size in header is updated.
         
SUBROUTINES: INTERP, INTERPS, INTERP3, IRP3

CALLER:      UTIL2
@


1.25
log
@*** empty log message ***
@
text
@d26 1
a26 1
          .ENTER OUTPUT DIMENSIONS, NX &  NY: 72, 48,
d33 1
a33 1
          .ENTER OUTPUT DIMENSIONS, NX, NY, & NZ): 72, 48, 50
d50 1
a50 1
                  .ENTER OUTPUT DIMENSIONS,  NX & NY: 120
d52 1
a52 1
                  .ENTER OUTPUT DIMENSIONS,  NX & NY: 120, 80
@


1.24
log
@*** empty log message ***
@
text
@d26 2
a27 2
          .ENTER DIMENSIONS (NSAM, NROW): 72, 48,
          [Enter interpolated X & Y dimensions for the output image]
d33 2
a34 2
          .ENTER DIMENSIONS (NSAM, NROW, NSLICE): 72, 48, 50
           [Enter interpolated X, Y and Z dimensions for the 
d42 1
a42 1
          proportions (ratio NSAM/NROW) as the input image.
d45 1
a45 1
          (NSAM) of the output image needs be entered.
d50 1
a50 1
                  .ENTER DIMENSIONS,  NSAM & NROW: 120
d52 1
a52 1
                  .ENTER DIMENSIONS,  NSAM & NROW: 120, 80
@


1.23
log
@*** empty log message ***
@
text
@d70 1
a70 1
SUBROUTINES: INTERP, INTERP3, IRP3
@


1.22
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                           09/07/09
a4 2
PURPOSE:  Interpolates or resizes an image bilinear interpolation 
          or a volume using trilinear interpolation.
@


1.21
log
@*** empty log message ***
@
text
@d2 1
a2 1
IP        Interpolate - Rescales using bilinear/trilinear interpolation    IP      
d5 1
a5 1
PURPOSE:  Interpolates or rescales an image using bilinear interpolation 
d7 9
a15 6

SEE ALSO:  IP FS
           IP   
           FP   
           FQ    
           DC    
d25 14
a38 7
       If input file is an image:
          .ENTER DIMENSIONS,  NSAM & NROW: 128, 128
          [Enter the dimensions for the interpolated image.]

       If input file is a volume:
          .ENTER DIMENSIONS,  NSAM, NROW, & NSLICE: 128, 128, 128
          [Enter the dimensions for the interpolated volume.]
@


1.20
log
@*** empty log message ***
@
text
@d2 1
a2 1
IP        Interpolate - Rescales using Bilinear/trilinear interpolation    IP      
@


1.19
log
@*** empty log message ***
@
text
@d2 1
a2 1
IP        Interpolate - Bilinear                                IP      
d5 1
a5 1
PURPOSE:  Interpolates an image using bilinear interpolation 
d46 1
a46 1
       4. The program works by throwing a new grid onto the image
d49 1
a49 1
          bilinear interpolation.
@


1.18
log
@*** empty log message ***
@
text
@d8 2
a9 1
SEE ALSO:  IP T   
@


1.17
log
@*** empty log message ***
@
text
@d5 1
a5 1
PURPOSE:  Interpolates an image using bilinear interpolation
d21 1
a21 1
       For 2-D input image:
d25 1
a25 1
       For 3-D input image:
d58 2
@


1.16
log
@cosmetic
@
text
@d27 1
a27 1
          [Enter the dimensions for the interpolated image.]
d33 1
a33 1
          proportions (ratio NSAM/NROW) as the input picture.
d36 1
a36 1
          (NSAM) of the output image need be entered.
d40 1
a40 1
          Then the sequence                      '<br />'
d42 1
a42 1
          will have the same effect as:             '<br />'
d48 1
a48 1
          bilinear interpolation interpolation.
@


1.15
log
@*** empty log message ***
@
text
@d21 2
a22 2
    For 2-D input image:
          .ENTER DIMENSIONS,  NSAM & NROW: 128,128
d25 2
a26 2
    For 3-D input image:
          .ENTER DIMENSIONS,  NSAM, NROW, & NSLICE: 128,128,128
d43 1
a43 1
                  .ENTER DIMENSIONS,  NSAM & NROW: 120,80
d48 1
a48 1
          bilinear interpolation or triangular interpolation.
d55 1
a55 1
          the original image (either 'FQ', or for large images design s
@


1.14
log
@*** empty log message ***
@
text
@d2 2
a3 2
IP        Interpolate - Bilinear                                     IP      
                                                           09/17/06
d15 1
a15 1
          .INPUT FILE: H_PIC001
d18 2
a19 2
          .OUTPUT FILE: H_IMG024
          [Enter the file where the interpolated image is to be kept.]
d23 1
a23 1
          [Enter the dimensions of the interpolated image.]
d26 2
a27 6
          .ENTER DIMENSIONS,  NSAM, NROW, & NSLICE: 128,128,1
          [Enter the dimensions of the interpolated image.]

          [H_PIC001 will then be interpolated to a size of
          128 x 128, and the interpolated image will be put into
          H_IMG024.]
d55 2
a56 2
          the original image (either 'FQ', or for large images design
          Remez filter using 'FF PLOT' and use 'RC'), and to decimate it
@


1.13
log
@title
@
text
@d2 1
a2 1
IP        Interpolate - bilinear                                     IP      
@


1.12
log
@3 inputs / line posssible
@
text
@d2 2
a3 2
IP        InterPolate                                      IP      
                                                           02/17/03
d8 4
a11 4
SEE ALSO:  IP T  (Interpolation, triangular)
           FP    (Fourier interpolation)
           FQ    (Fourier filter)
           DC    (Decimate)
d44 1
a44 1
          Then the sequence'<br>'
d46 1
a46 1
          will have the same effect as:'<br>'
@


1.11
log
@*** empty log message ***
@
text
@d2 2
a3 2
IP        InterPolate                                       IP      
                                                           01/17/01
a7 1

a12 1

d21 2
a22 1
          .ENTER DIMS NSAM,NROW: 128,128
d25 3
a27 3
    For 3-D image:

          .NSLICE: 79
d29 3
a31 3
          [PIC001 will then be interpolated to a picture of size
          128x128x79, and the interpolated image will be put into
          INT001.]
d39 3
a41 3
       3. For a rectangular (2D) input image, only the new side
          length (NSAM) of the output image need be entered.
          The other side length (NROW) will then be computed 
d44 4
a47 4
          Then the sequence
                  .ENTER DIMS NSAM, NROW: 120
          will have the same effect as
                  .ENTER DIMS NSAM, NROW: 120,80
d55 3
a57 3
          results  in  a loss of S/N ratio, since only a subset of the
          original points may be used for interpolation.   The  proper
          procedure  maintaining  the  original information as much as
@


1.10
log
@summation of pixels removed
@
text
@d3 1
a3 1
                                                           09/17/99
d5 2
a6 2
PURPOSE:  Interpolates a 2-D picture using bilinear interpolation
          or a 3-D picture using trilinear interpolation.
d9 4
a12 2
SEE ALSO:  IP T  (interpolation, triangular)
           FP  (Fourier interpolation)
d17 1
a17 1
          .INPUT1 FILE: H_PIC001
d50 2
a51 4
       4. The memory needed is (NSAM*NROW*NSLICE+NSAM) in MAXMEM.

       5. The program works by throwing a new grid onto the image
          whose  boundaries coincide with those of the old grid.  Each
d53 1
a53 1
          bilinear  interpolation  or triangular interpolation.
d55 2
a56 2
       6. Note that for raw data, a  reduction  in  scale  by  IP
          results  in  a loss of s/n ratio, since only a subset of the
d60 3
a62 3
          the original image (either FQ, or for large images design
          Remez filter using FF PLOT and use RC), and to decimate it
          using DC command.
@


1.9
log
@updated
@
text
@d3 1
a3 1
                                                           04/18/95
d48 1
a48 8
       4. For an output picture with dimensions exactly two times
          smaller than those of an input picture the adding of
          four neighbouring pixels is done. The resulting picture
          contains frequencies up to 0.25 (roughly) and has improved
          SNR (two times).
          For an output picture with dimensions exactly four times
          smaller than those of an input picture the adding of sixteen
          neighbouring pixels is done (or sixty four for a 3D volume).
d50 1
a50 3
       5. The memory needed is (NSAM*NROW*NSLICE+NSAM) in MAXMEM.

       6. The program works by throwing a new grid onto the image
d55 1
a55 1
       7. Note that for raw data, a  reduction  in  scale  by  IP
d59 4
a62 3
          possible is by preceding 'IP' with 'BC'  (box  convolution).
          The  box  size  used should be comparable with the reduction
          factor.
@


1.8
log
@links changed
@
text
@d38 1
a38 1
       3. For a rectangular input image, only the new side
d55 1
a55 3
          neighbouring pixels is done.

           Notes 3, and 4 deal with 2-D pictures only.
@


1.7
log
@changes for better html file
@
text
@d10 1
@


1.6
log
@modified man page
@
text
@d34 2
a35 2
       2. The output image does not have to have the same propor-
          tions (ratio NSAM/NROW) as the input picture.
d39 2
a40 2
          The other side length (NROW) will then be computed as-
          suming the same proportions as the input image.  For
@


1.5
log
@modified man apage
@
text
@d17 2
a18 3
          .OUTPUT FILE: INT001
          [Enter the file where the interpolated image is to be kept.
	   SAMPLE OUTPUT : H_IMG024]
@


1.4
log
@merged with .glo file
@
text
@d14 1
a14 1
          .INPUT1 FILE: PIC001
d18 2
a19 1
          [Enter the file where the interpolated image is to be kept.]
@


1.3
log
@remove IP BS, RT SA, RT SC, RT SH and aprb.man, apsb.man
@
text
@d3 1
a3 1
                                                           01/13/94
d58 1
a58 1
       5. THE MEMORY NEEDED IS (NSAM*NROW*NSLICE+NSAM) in MAXMEM.
d60 12
d73 3
a75 2
Subroutines: INTERP, INTERP3, IRP3
Caller:      UTIL2
@


1.2
log
@replaced_tabs
@
text
@a9 1
           IP BS  (interpolation, B-spline)
@


1.1
log
@Initial revision
@
text
@@
