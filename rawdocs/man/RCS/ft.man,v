head	1.19;
access;
symbols
	best-code:1.10
	pre-named-reg:1.10
	pre_GPL:1.10
	prec_CA:1.9
	oct21:1.6;
locks; strict;
comment	@# @;


1.19
date	2012.09.07.11.59.58;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2011.06.23.16.24.44;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2011.06.23.16.07.28;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2011.06.13.14.46.52;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2011.06.13.14.44.41;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2011.01.21.18.54.37;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2009.09.09.13.16.34;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2008.11.04.16.37.33;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2007.12.13.14.21.00;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2004.12.09.16.24.43;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2001.08.29.17.27.35;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.26.19.31.02;	author bimal;	state Exp;
branches;
next	1.7;

1.7
date	2000.09.22.18.08.05;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	97.07.30.20.01.15;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.01.14.19.08.02;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	96.09.10.13.56.02;	author adri;	state Exp;
branches;
next	1.3;

1.3
date	96.08.27.18.59.32;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.08.27.14.45.11;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.08.27.14.28.34;	author pawel;	state Exp;
branches;
next	;


desc
@new version
@


1.19
log
@*** empty log message ***
@
text
@
FT        Fourier Transform ||                                   FT   
                                                            6/12/11

PURPOSE:  Computes forward Fourier transform of a 2D or 3D image, 
          or inverse Fourier transform of a complex Fourier-formatted 
          file.

SEE ALSO:  FF 
           FP
           FQ
           PW

USAGE:    FT

          .INPUT FILE: PIC001
          [Enter file name of data to be Fourier-transformed or file
           name of complex data to be inversely Fourier-transformed.]

          .OUTPUT FILE: IMG023
          [Enter file name which will contain the transformed 
           image/volume.]


NOTES: 1. The Fourier transform is stored in a straightforward format. 
          Coefficient (0,0) is placed in location (1,1).
          The '<a href='"'li.html'"'>'LI'</a>' operation 
          may be used to list values of a Fourier format file.

       2. Multiple threads are used (if supported by the current 
          '<a href='"'md.html'"'>'SET MP'</a>' setting). 

       3. All distributed versions of SPIDER are now linked with the 
          '<a href='"'../fftw.html'"'>'FFTW3'</a>' library. 
          This operation (and other SPIDER Fourier operations) 
          works for all possible image dimensions.               
          Fourier operations on images with dimensions that are 
          large prime numbers or products of large prime numbers 
          may be slow.  (In the unlikely case that a volume may not
          fit into memory a legacy limited dimension Fourier routine
          may be invoked.)                                    '<br />'
          
          
       4. Implemented by P. Penczek.

SUBROUTINES: FMRS, FMRS_2, FMRS_3, FFTW3, FMRS_2DR, FMRS_3DR, FMRS_1, FFTMCF

CALLER:     FOUR1, FOUR1C
@


1.18
log
@*** empty log message ***
@
text
@d46 1
a46 1
SUBROUTINES: FMRS_2, FMRS_3, FFTW3, FMRS_2DR, FMRS_3DR, FMRS_1, FFTMCF
@


1.17
log
@*** empty log message ***
@
text
@d12 1
d21 2
a22 2
          [Enter file name which will contain the transformed
          image.]
@


1.16
log
@*** empty log message ***
@
text
@d29 4
a32 1
       2. All distributed versions of SPIDER are now linked with the 
d38 3
a40 1
          may be slow.                                    '<br />'
a41 2
       2. Multiple threads are used (if supported by the current 
          '<a href='"'md.html'"'>'SET MP'</a>' setting). 
d43 1
a43 1
      3.  Implemented by P. Penczek.
d45 1
a45 1
SUBROUTINES: FFTMCF, FMRS_1, FMRS_2R, FMRS_3R, FMRS, FFTW3, FMRS_2, FMRS_2DR, FMRS_3, FMRS_3DR
@


1.15
log
@removed native spider size limitation notes
@
text
@d32 1
a32 1
          works for all possible dimensions.           '<b>' 
d35 1
a35 1
          may be slow.'<br />'
@


1.14
log
@update comments
@
text
@d3 1
a3 1
                                                            12/12/07
d27 1
a27 1
           may be used to list values of a Fourier format file.
d29 9
a37 3
       2. When SPIDER is linked with the 
          '<a href='"'../fftw.html'"'>'FFTW3'</a>' library, 
          multiple threads are used (if supported by the current 
d40 1
a40 75
       3. When SPIDER is linked with the 
          '<a href='"'../fftw.html'"'>'FFTW3'</a>' library, 
          this operation (and other SPIDER Fourier operations) 
          works for all 
          possible dimensions. '<b>' This is the case for all
          distributed SPIDER executables. '</b>'
          For dimensions that are large prime
          numbers or products of large prime numbers it may be slow.'<br />'

        4. '<small>'When using SPIDER's local FFT code  
          Fourier operations DO NOT work for the following dimensions: '<br />'
                                                                       
           29    31    37    41    43    47    53    58    59    61    62    67
           71    73    74    79    82    83    86    87    89    93    94    97
          101   103   106   107   109   111   113   116   118   122   123   124
          127   129   131   134   137   139   141   142   145   146   148   149
          151   155   157   158   159   163   164   166   167   172   173   174
          177   178   179   181   183   185   186   188   191   193   194   197
          199   201   202   203   205   206   211   212   213   214   215   217
          218   219   221   222   223   226   227   229   230   231   232   233
          235   236   237   238   239   241   244   246   247   248   249   251
          253   254   255   257   258   259   261   262   263   265   266   267
          268   269   271   273   274   277   278   279   281   282   283   284
          285   286   287   290   291   292   293   295   296   298   299   301
          302   303   305   307   309   310   311   313   314   316   317   318
          319   321   322   323   326   327   328   329   330   331   332   333
          334   335   337   339   341   344   345   346   347   348   349   353
          354   355   356   357   358   359   362   365   366   367   369   370
          371   372   373   374   376   377   379   381   382   383   385   386
          387   388   389   390   391   393   394   395   397   398   399   401
          402   403   404   406   407   409   410   411   412   413   415   417
          418   419   421   422   423   424   426   427   428   429   430   431
          433   434   435   436   437   438   439   442   443   444   445   446
          447   449   451   452   453   454   455   457   458   461   462   463
          464   465   466   467   469   470   471   472   473   474   477   478
          479   481   482   483   485   487   488   489   491   492   493   494
          496   497   498   499   501   502   503   505   506   508   509   510
          511   514   515   516   517   518   519   521   522   523   524   526
          527   530   531   533   534   535   536   537   538   541   542   543
          545   546   547   548   549   551   553   554   555   556   557   558
          559   561   562   563   564   565   566   568   569   570   571   573
          574   577   579   580   581   582   583   584   586   587   589   590
          591   592   593   595   596   597   598   599   601   602   603   604
          606   607   609   610   611   613   614   615   617   618   619   620
          622   623   626   627   628   629   631   632   633   634   635   636
          638   639   641   642   643   645   646   647   649   651   652   653
          654   655   656   657   658   659   661   662   663   664   665   666
          667   668   669   670   671   673   674   677   678   679   681   682
          683   685   687   688   689   690   691   692   694   695   696   697
          698   699   701   703   705   706   707   708   709   710   711   712
          713   714   715   716   717   718   719   721   723   724   725   727
          730   731   732   733   734   737   738   739   740   741   742   743
          744   745   746   747   749   751   752   753   754   755   757   758
          759   761   762   763   764   766   767   769   770   771   772   773
          774   775   776   777   778   779   781   782   783   785   786   787
          788   789   790   791   793   794   795   796   797   798   799   801
          802   803   804   805   806   807   808   809   811   812   813   814
          815   817   818   820   821   822   823   824   826   827   829   830
          831   834   835   837   838   839   841   842   843   844   846   848
          849   851   852   853   854   856   857   858   859   860   861   862
          863   865   866   868   869   870   871   872   873   874   876   877
          878   879   881   883   884   885   886   887   888   889   890   892
          893   894   895   897   898   899   901   902   903   904   905   906
          907   908   909   910   911   913   914   915   916   917   919   920
          921   922   923   924   925   926   927   928   929   930   932   933
          934   935   937   938   939   940   941   942   943   944   946   947
          948   949   951   952   953   954   955   956   957   958   959   961
          962   963   964   965   966   967   969   970   971   973   974   976
          977   978   979   981   982   983   984   985   986   987   988   989
          991   992   993   994   995   996   997   998   999  1001  1002  1003
         1004  1005  1006  1007  1009  1010  1011  1012  1013  1015  1016  1017
         1018  1019  1020  1021  1022  1023                                '<br />'
         (and so on....) '</small>'

       3. Implemented by P. Penczek.
@


1.13
log
@*** empty log message ***
@
text
@d5 3
a7 3
PURPOSE:  Computes Fourier transform of a 2D or 3D image, or inverse
          Fourier transform of a complex Fourier-formatted file.

a12 1

d34 8
a41 5
       3. On SGI systems equipped with SGI's LIBFFT library, or when SPIDER is
          linked with the '<a href='"'../fftw.html'"'>'FFTW'</a>' library, 
          this operation (and other SPIDER Fourier operations) works for all 
          possible dimensions. For dimensions that are large prime
          numbers or products of large prime numbers it may be slow.  '<br />'
d43 1
a43 1
        4. When using SPIDER's local FFT code  
d106 1
a106 1
         (and so on....)
d110 1
a110 1
SUBROUTINE: FFTMCF, FMRS_1, FMRS_2R, FMRS_3R, FMRS, FFTW3, FMRS_2, FMRS_2DR, FMRS_3, FMRS_3DR
@


1.12
log
@*** empty log message ***
@
text
@d16 1
a16 1
          .INPUT FILE: H_PIC001
d20 1
a20 1
          .OUTPUT FILE: H_IMG023
d39 1
a39 1
          numbers or products of large prime numbers it may be slow.  '<br>'
d42 1
a42 1
          Fourier operations DO NOT work for the following dimensions: '<br>'
d103 1
a103 1
         1018  1019  1020  1021  1022  1023'<BR>'
@


1.11
log
@FFTW3
@
text
@d108 1
a108 1
SUBROUTINE: FFTMCF, FMRS_1, FMRS_2R, FMRS_3R, FMRS_FFTW3, FMRS_2, FMRS_2DR, FMRS_3, FMRS_3DR
@


1.10
log
@better restricted dim. note
@
text
@d3 1
a3 1
                                                            12/09/04
d9 3
a11 3
SEE ALSO:  FF  (Fourier Filter) 
           FP  (Fourier interPolation)
           FQ  (Fourier transform, Quick)
d27 2
a28 1
          The operation 'LI' may be used to list values.
d30 6
a35 1
       2. On SGI systems equipped with SGI's LIBFFT library, or when SPIDER is
d40 2
a41 2
          
          When using SPIDER's local FFT code  
d108 1
a108 2
SUBROUTINE: FFTMCF, FMRS_1, FMRS_2R, FMRS_3R
            FMRS_2, FMRS_2DR, FMRS_3, FMRS_3DR
@


1.9
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            08/30/01
d29 5
a33 4
       2. On SGI systems equipped with LIBFFT library, operation 'FT' (and
          other Fourier operations) works for all possible dimensions.
          However for dimensions that are either large prime
          numbers or products of large prime numbers it can be very slow.'<BR>'
d35 2
a36 2
          On other systems (or on SGI without the LIBFFT library) 
          Fourier operations DO NOT work for the following dimensions:           '<BR>'
@


1.8
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            09/10/96
d5 2
a6 1
PURPOSE:  Computes Fourier transform of a 2D or 3D image.
d17 2
a18 2
          [Enter file name of real or complex data to be Fourier
          transformed.]
d27 1
a27 1
          The operation LI may be used to list values.
d29 3
a31 3
       2. On SGI systems equipped with LIBFFT library command FT (and
          other Fourier commands) works for all the possible dimensions,
          even though for dimensions that are either large prime
d34 2
a35 3

          On other systems (or SGI without the library) Fourier commands
          DO NOT work for the following dimensions:           '<BR>'
@


1.7
log
@||
@
text
@d101 2
a102 2
SUBROUTINE: FFTMCF, FMRS_1, FMRS_2D, FMRS_2R, FMRS_3D, FMRS_3R
            FMRS_2, FMRS_2DR,  FMRS_3, FMRS_3DR
@


1.6
log
@info about libfft
@
text
@d2 1
a2 1
FT        Fourier Transform                                 FT   
@


1.5
log
@ rm fl command
@
text
@d28 8
a35 1
       2. The list of dimensions, for which FT DOES NOT work:           '<BR>'
d96 2
a97 1
         1018  1019  1020  1021  1022  1023
@


1.4
log
@brushup
@
text
@d8 1
a8 2
SEE ALSO:  FF  (Fourier Filter)
           FL  (Fourier List)
@


1.3
log
@list of programs corrected
@
text
@d3 1
a3 1
                                                            8/27/96
d5 1
a5 1
PURPOSE:  Fourier transforms an 2-D or 3D image.
d8 4
a11 5
SEE ALSO:  FT  (Fourier transformation)
           FF  (Fourier filter)
           FL  (Fourier list)
           FP     (Fourier interpolation)
           FQ  (Fourier quick)
d18 1
a18 1
           transformed.]
d22 1
a22 1
           image.]
d25 1
a25 1
NOTES: 1. The Fourier transform comes out in a straightforward form. 
d27 1
a27 1
          The operation 'LI' may be used for display.
d29 2
a30 2
       2. The list of dimensions, for which FT DOES NOT work:

d79 1
a79 1
          863   865   866   868   869   870   871   872   873   874   876   877 
d92 1
a92 1
       3. Implemented by Paul Penczek.
@


1.2
log
@list of procedures corrected
@
text
@d98 1
a98 1
CALLER:     FOUR1
@


1.1
log
@Initial revision
@
text
@d95 2
a96 2
SUBROUTINE: FFTMCF, FMR_1,  FMRS_1, FMRS_2D, FMRS_2R, FMRS_3D, FMRS_3R.f
            FMR_2,  FMRS_2, FMRS_2DR.f  FMRS_3, FMRS_3DR
@
