head	1.12;
access;
symbols
	best-code:1.1
	pre-named-reg:1.1
	pre_GPL:1.1
	prec_CA:1.1
	oct21:1.1;
locks; strict;
comment	@# @;


1.12
date	2015.02.23.16.23.52;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2011.12.05.19.24.44;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2009.09.15.13.32.45;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2009.09.09.11.49.05;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2009.09.02.14.37.52;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2008.08.25.12.14.33;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.18.17.23.40;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.18.15.11.39;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2006.11.14.15.45.24;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2006.09.21.15.17.16;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.11.16.09.24;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	97.09.17.15.49.15;	author leith;	state Exp;
branches;
next	;


desc
@@


1.12
log
@string variable note
@
text
@
IF        Conditional expression execution (Scripting operation)   IF      
                                                            12/05/11

PURPOSE:  To allow evaluation of a conditional expression or loop iteration 
          control. (Modeled after the FORTRAN 'IF' statement).

SEE ALSO: IF_GOTO  
          IF_THEN 
          DO 
          EXIT
          CYCLE

USAGE:    IF ( '<i>' <EXP> <LC> <EXP> '</i>') '<i>' <R>'</i>' = '<i>' <EXP> '</i>'
            '&'nbsp;'&'nbsp;'&'nbsp; <or>                 '<br />'
          IF ( '<i>' <EXP> <LC> <EXP> '</i>') EXIT        '<br />'
            '&'nbsp;'&'nbsp;'&'nbsp; <or>                 '<br />'
          IF ( '<i>' <EXP> <LC> <EXP> '</i>') CYCLE       '<br />'

          Where:                          
          '<ol>'
          '<li>' '<i>' <EXP> '</i>' is an  '<a href=../user_doc.html#expressions>'expression'</a>'  '</li>'

          '<li>' '<i>' <R> '</i>' is a register variable. '</li>'

          '<li>' '<i>' <LC> '</i>' is a logical comparator. The following comparators are allowed: '</li>'
       
#INCLUDE comparator_include.also

          '</ol>'

          '<p />'

NOTES:     1. Examples:  

             '<table border="0" cellpadding="5" cellspacing="2">' 
             '<tr>''<td>' IF( [xlen] >= 15 )    '</td>''<td>''&'nbsp; [xpad]  = 57         '</td>''</tr>'
             '<tr>''<td>' IF( [xlen] .GE. 15 )  '</td>''<td>''&'nbsp; [xpad]  = 57         '</td>''</tr>'
             '<tr>''<td>' IF( [xlen] < (13-2) ) '</td>''<td>''&'nbsp; [resol] = 5.6        '</td>''</tr>'
             '<tr>''<td>' IF( [xlen] < 13 )     '</td>''<td>''&'nbsp; CYCLE  '&'nbsp;'&'nbsp;'&'nbsp;'&'nbsp;(Within a DO loop) '</td>''</tr>'  
             '</table>'

            2. <EXP> does not include setting a string variable e.g the following is NOT ALLOWED.

             '<table border="0" cellpadding="5" cellspacing="2">' 
             '<tr>''<td>' [file] = 'img000'  '</td>''<td>''&'nbsp;                      '<td>''</td>''</tr>' 
             '<tr>''<td>' IF( [xlen] < 13 )  '</td>''<td>''&'nbsp;  [file] = 'img001'   '<td>''</td>''</tr>'  
             '</table>'

Examples:  

SUBROUTINE: LOGIFQ

CALLER:     SPIDER
@


1.11
log
@*** empty log message ***
@
text
@d14 1
a14 1
USAGE:    IF ( '<i>' <EXP><LC><EXP> '</i>') '<i>' <R>'</i>' = '<i>' <EXP> '</i>'
d16 1
a16 1
          IF ( '<i>' <EXP><LC><EXP> '</i>') EXIT     '<br />'
d18 1
a18 1
          IF ( '<i>' <EXP><LC><EXP> '</i>') CYCLE    '<br />'
d37 4
a40 4
             '<tr>''<td>' IF( [xlen] .GE. 15 )     '</td>''<td>''&'nbsp;  [xpad] = 57         '<td>''</tr>'
             '<tr>''<td>' IF( [xlen] >= 15 )       '</td>''<td>''&'nbsp;  [xpad] = 57         '<td>''</tr>'
             '<tr>''<td>' IF( [xlen] .LT. (13-2) ) '</td>''<td>''&'nbsp;  [resol] = 5.6       '<td>''</tr>'
             '<tr>''<td>' IF( [xlen] .LT. 13 )     '</td>''<td>''&'nbsp;   CYCLE    '&'nbsp;'&'nbsp;'&'nbsp;'&'nbsp;(Within a DO loop) '<td>''</dt>'  
d42 9
@


1.10
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            9/03/09
d6 1
a6 1
          control (modeled after the FORTRAN 'IF' statement).
d14 5
a18 5
USAGE:    IF(<EXP>.<LC>.<EXP>) <R> = <EXP>
            '&'nbsp;'&'nbsp;<or>                    '<br />'
          IF(<EXP>.<LC>.<EXP>) EXIT                 '<br />'
            '&'nbsp;'&'nbsp;<or>                    '<br />'
          IF(<EXP>.<LC>.<EXP>) CYCLE                '<br />'
d22 7
a28 2
          '<li>' <EXP> is an 
               '<a href=../user_doc.html#expressions>'expression'</a>'  '</li>'
a29 11
          '<li>' <LC> is a logical comparator. The following comparators 
              are allowed: '</li>'
              '<dl>'
                 '<dd>'EQ '&'nbsp;'&'nbsp;  Equal         '</dd>'             
                 '<dd>'NE '&'nbsp;'&'nbsp;  Not equal     '</dd>'             
                 '<dd>'GT '&'nbsp;'&'nbsp;  Greater       '</dd>'             
                 '<dd>'GE '&'nbsp;'&'nbsp;  Greater/equal '</dd>'             
                 '<dd>'LT '&'nbsp;'&'nbsp;  Less          '</dd>'             
                 '<dd>'LE '&'nbsp;'&'nbsp;  Less/equal    '</dd>'             
              '</dl>'
          '<li>' <R> is a register variable. '</li>'
d36 6
a41 5
             '<dl>' 
             '<dt>' IF([xlen] .GE. 15.)    '&'nbsp; [xpad]=57      '</dt>'
             '<dt>' IF([xlen] .LT. (13-2)) '&'nbsp; [resol]=5.6    '</dt>'
             '<dt>' IF([xlen] .LT. 13)     '&'nbsp; CYCLE   '&'nbsp;'&'nbsp;'&'nbsp;'&'nbsp;(Within a DO loop) '</dt>'  
             '</dl>'
@


1.9
log
@*** empty log message ***
@
text
@d11 2
@


1.8
log
@*** empty log message ***
@
text
@d13 1
a13 1
            '&'nbsp;<or>                            '<br />'
d15 1
a15 1
            '&'nbsp;<or>                            '<br />'
d26 6
a31 6
                 '<dd>'EQ '&'nbsp;'&'nbsp;  equal         '</dd>'             
                 '<dd>'NE '&'nbsp;'&'nbsp;  not equal     '</dd>'             
                 '<dd>'GT '&'nbsp;'&'nbsp;  greater       '</dd>'             
                 '<dd>'GE '&'nbsp;'&'nbsp;  greater/equal '</dd>'             
                 '<dd>'LT '&'nbsp;'&'nbsp;  less          '</dd>'             
                 '<dd>'LE '&'nbsp;'&'nbsp;  less/equal    '</dd>'             
d38 1
a38 1
          EXAMPLES:  
d41 3
a43 3
             '<dt>' IF([xlen] .GE. 15.)    [xpad]=57    '</dt>'
             '<dt>' IF([xlen] .LT. (13-2)) [resol]=5.6  '</dt>'
             '<dt>' IF([xlen] .LT. 13)     CYCLE   '&'nbsp;'&'nbsp;s'&'nbsp;'&'nbsp;(Within a DO loop)                 '</dd>'
@


1.7
log
@*** empty log message ***
@
text
@d3 1
a3 1
                                                            11/14/06
d12 5
a16 5
USAGE:    IF(<EXP>.<LC>.<EXP>)   <R> = <EXP>
          <or>                            '<br />'
          IF(<EXP>.<LC>.<EXP>) EXIT       '<br />'
          <or>                            '<br />'
          IF(<EXP>.<LC>.<EXP>) CYCLE      '<br />'
d20 2
a21 1
          '<li>' <EXP> is an '<a href=../user_doc.html#expressions>'expression'</a>'   '</li>'
d26 6
a31 6
                 '<dd>'EQ   equal         '</dd>'             
                 '<dd>'NE   not equal     '</dd>'             
                 '<dd>'GT   greater       '</dd>'             
                 '<dd>'GE   greater/equal '</dd>'             
                 '<dd>'LT   less          '</dd>'             
                 '<dd>'LE   less/equal    '</dd>'             
d40 4
a43 5
             '<dl>'
             '<dt>'IF([xlen].GE.15.) [xpad]=57      '</dt>'
             '<dt>'IF([xlen].LT.(13-2)) [resol]=5.6  '</dt>'
             '<dt>'IF([xlen].LT.(13-3)) CYCLE  '</dt>'
               '<dd>'(Within a DO loop)  '</dd>'
@


1.6
log
@*** empty log message ***
@
text
@d12 1
a12 1
USAGE:    IF(<EXP>.<LC>.<EXP>) <R> = <EXP>
d41 3
a43 3
             '<dt>'IF([xlen].LT.(13-2)) [resol]=57  '</dt>'
             '<dt>'IF([xlen].LT.(13-2)) CYCLE  '</dt>'
               '<dd>'(within a DO loop  '</dd>'
@


1.5
log
@new
@
text
@d2 1
a2 1
IF        Conditional expression execution                  IF      
@


1.4
log
@*** empty log message ***
@
text
@d5 2
a6 3
PURPOSE:  To allow evaluation of a conditional expression
          (modeled after the FORTRAN 'IF' statement).

d10 1
d13 4
d41 3
a43 1
             '<dt>'IF([xlen].LT.(13-2)) [resol]=28.6  '</dt>'
@


1.3
log
@updated
@
text
@d3 1
a3 1
                                                            9/22/06
d6 2
a7 1
          (modeled after the FORTRAN IF).
d14 25
a38 17
          '<pre>'
          where <EXP>  is an expression
                <LC> is a logical comparator.  The following 
                     comparators are allowed:
                       EQ  equal
                       NE  not equal
                       GT  greater
                       GE  greater/equal
                       LT  less
                       LE  less/equal
                <R> is a register variable

          EXAMPLES:
              IF([xlen].GE.15.)[xpad]=57
              IF([xlen].LT.(13-2))[resol]=57

          '</pre>'
@


1.2
log
@[reg
@
text
@d2 2
a3 2
IF        conditional execution                                  IF      
                                                            9/22/97
d11 1
a11 1
USAGE:    IF(<EXP>.<LC>.<EXP>) X<R> = <EXP>
d23 1
a23 2
                <R> is a register number, with <R> assuming any value  
                       between 10 and 99.
d26 2
a27 2
              IF(X9.GE.15.)X45=57
              IF(X1.LT.(13-2))[resol]=57
@


1.1
log
@Initial revision
@
text
@d8 2
a9 2
SEE ALSO: IF_GOTO  (Conditional jump)
          IF_THEN  (Conditional execution of operation series)
d13 1
a13 1
          '<PRE>'
d28 1
a28 1
              IF(X1.LT.(13-2))X45=57
d30 1
a30 5
          EXAMPLES OF INVALID USAGE:
              IF(X2.EQ.13.3)X100= 5+7 (REGISTER number larger than 99.)
          '</PRE>'

NOTES: 1.  Contact: A. Leith
@

