head	1.20;
access;
symbols
	best-code:1.16
	pre-named-reg:1.16
	pre_GPL:1.16
	prec_CA:1.16
	oct21:1.14;
locks; strict;


1.20
date	2010.09.20.15.27.03;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2009.09.09.14.30.48;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2007.09.21.12.37.29;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2006.09.27.14.30.28;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2002.09.10.19.07.31;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.10.15.06.07;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	99.06.22.17.37.35;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	99.04.26.13.01.31;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	98.06.02.14.54.50;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	98.04.22.14.50.37;	author pawel;	state Exp;
branches;
next	1.10;

1.10
date	98.03.25.19.20.08;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	98.03.25.19.17.45;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	98.03.25.19.03.28;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	97.11.03.14.15.24;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.04.03.19.00.40;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	95.11.08.21.03.05;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	94.09.19.11.01.09;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.08.25.12.45.27;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.07.12.16.31.41;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.16.12.14.07;	author leith;	state Exp;
branches;
next	;


desc
@@


1.20
log
@input not same as output
@
text
@AR        Arithmetic operation                              AR      
                                                           9/20/10

PURPOSE:  Performs arithmetic operations point for point on the
          input image to create an output image.
 
SEE ALSO: NEG    
          AR SCA

USAGE:    AR

           .INPUT FILE: PIC001
           [Enter name of the input image.]
 
           .OUTPUT FILE: PIC002
           [Enter name for the output image. Can not be same disk
            image as input.]
 
           .FORMULA: P2=: P1+0.5
           [Enter formula to be used to compute the output image
           (referred to by P2) from the input image (P1). Formula
           can be any valid math expression with many variable
           registers.                                       '<br />'

           Examples of accepted formulae:                   '<br />'
                      (P1-2.)/2.+SIN(P1+2)                  '<br />'    
                      (P1/512.)+0.                          '<br />'
                      EXP(LOG((P1/512.)+0.)+[x]+[y])        '<br />'
                      4+ABS((P1-2.)/2.)                     '<br />'
                      P1**3+P1+EXP((P1-2.)/2.)              '<br />'


NOTES:   1. See documentation for general 
            '<a href=../user_doc.html#expressions>'rules'</a>' of 
            writing arithmetic expressions and functions in SPIDER.

         2. Order of application of operators follows that in
            Fortran (e.g. multiplication/division are performed
            before addition/subtraction).  Use ()'s to control
            the order where necessary.

         3. Two operators must not follow each other in the formula
            e.g. P2=p1*-1.0 is not allowed.

         4. To rescale an image's range to 0 - 255 using 'AR':

         '<pre>'
         FI [min],[max]   ; File info. operation           
         oldfilename      ; Input file                     
         8,7              ; Min and max location in header 
         ;                                             
         AR               ; Arithmetic operation           
         oldfilename      ; Input file                     
         newfile          ; Output file                    
         255 * (P1-[min]) / ([max]-[min])                    
         '</pre>'

         3. Can handle a whole stack now (Sept. 02).

         4. We have reports of this operation giving incorrect
            results on Intel based MacIntosh computers (Sept. 07)
            We think this is fixed now. 

SUBROUTINE: ARITH, POLISH, CALC
 
CALLER:     UTIL2




@


1.19
log
@*** empty log message ***
@
text
@d2 1
a2 1
                                                           9/27/07
d16 2
a17 1
           [Enter name for the output image.]
@


1.18
log
@mac bug
@
text
@d27 1
a27 1
                      EXP(LOG((P1/512.)+0.) +X22 + X23)     '<br />'
d45 1
d47 8
a54 8
         FI X21,X22   ; file info. operation       '<br />'
         oldfilename  ; input file                 '<br />'
         8,7          ; min and max location in header'<br />'
         ;'<BR>'
         AR           ; arithmetic operation        '<br />'
         oldfilename  ; input file                  '<br />'
         newfile      ; output file                 '<br />'
         255 * (P1-X21) / (X22-X21)                 '<br />'
d61 1
@


1.17
log
@title
@
text
@d2 1
a2 1
                                                           9/27/06
d33 1
a33 1
            '<A HREF=../user_doc.html#expressions>'rules'</A>' of 
d51 2
a52 2
         oldfilename  ; input file                '<br />'
         newfile      ; output file                '<br />'
d58 2
@


1.16
log
@stack & 'AR SCA'
@
text
@d1 2
a2 2
AR        ARithmetic operation                              AR      
                                                           9/10/02
d7 1
a7 1
SEE ALSO: NEG   (Negate/invert an image)
d22 1
a22 1
           registers.                                       '<BR>'
d24 6
a29 6
           Examples of accepted formulae:                   '<BR>'
                      (P1-2.)/2.+SIN(P1+2)                  '<BR>'    
                      (P1/512.)+0.                          '<BR>'
                      EXP(LOG((P1/512.)+0.) +X22 + X23)     '<BR>'
                      4+ABS((P1-2.)/2.)                     '<BR>'
                      P1**3+P1+EXP((P1-2.)/2.)              '<BR>'
d46 3
a48 3
         FI X21,X22   ; file info. operation'<BR>'
         oldfilename  ; input file'<BR>'
         8,7          ; min and max location in header'<BR>'
d50 4
a53 4
         AR           ; arithmetic operation'<BR>'
         oldfilename  ; input file'<BR>'
         newfile      ; output file'<BR>'
         255 * (P1-X21) / (X22-X21)'<BR>'
@


1.15
log
@*** empty log message ***
@
text
@d2 1
a2 1
                                                           1/10/02
d5 1
a5 1
           input image to create an output image.
d8 1
d13 1
a13 1
           [Enter the name of the input image.]
d16 1
a16 1
           [Enter the name of the output image.]
d55 3
@


1.14
log
@added see also to neg
@
text
@d2 1
a2 1
                                                           06/26/99
d42 12
@


1.13
log
@*** empty log message ***
@
text
@d2 1
a2 1
                                                           04/26/99
d7 2
@


1.12
log
@P1 not needed in expression now
@
text
@d2 1
a2 1
                                                           06/02/98
a23 1
                      P1+LOG((P1-2.)/2.)                    '<BR>'
d32 8
@


1.11
log
@*** empty log message ***
@
text
@d2 2
a3 1
                                                             03/25/98
d5 1
a5 1
           input picture to create an output picture.
d10 1
a10 1
           [Enter the name of the input picture.]
d13 1
a13 1
           [Enter the name of the output picture.]
d15 3
a17 3
           .FORMULA: P2=:P1+0.5
           [Enter formula to be used to compute the output picture
           (referred to by P2) from the input picture (P1). Formula
d19 1
a19 1
           registers and at least one P1.                    '<BR>'
d22 2
a23 2
                      (P1-2.)/2.+SIN(P1+2)                 '<BR>'    
                      (P1/512.)+0.                        '<BR>'
a28 5
 	   Examples of unacceptable formulae:   '<BR>'
           ((X1+3.)+20.)                        '<BR>'
           ((X11*4.)/16.)                       '<BR>'

     ...because in both cases the arithmetic operations do not contain P1.] 
d30 3
a32 2
NOTES: See documentation for general rules of writing arithmetic
       expressions.
@


1.10
log
@cd ../update
@
text
@d21 2
a22 2
                     ((P1-2.)/2.+SIN(P1+2))                 '<BR>'    
                      ((P1/512.)+0.)                        '<BR>'
d26 1
a26 1
                      P1+P1+EXP((P1-2.)/2.)                 '<BR>'
d29 2
a30 2
           ((X1+3.)+20.)                         '<BR>'
           ((X11*4.)/16.)                         '<BR>'
d33 3
@


1.9
log
@*** empty log message ***
@
text
@d17 3
a19 3
           can be any valid math expression with many variable  
	   registers and at least one P1.                    '<BR>'
 
@


1.8
log
@*** empty log message ***
@
text
@d14 1
a14 1
           .FORMULA: P2=:((P1+0.5)*2.)
d16 2
a17 2
           (referred to by P2) from the input picture (P1).  
	   Formula can be any valid math expression with many variable  
d28 3
a30 3
 	Examples of unacceptable formulae:   '<BR>'
        ((X1+3.)+20.)                         '<BR>'
        ((X11*4.)/16.)                         '<BR>'
@


1.7
log
@log 10
@
text
@a0 1

d2 5
a6 1
                                                            04/04/96
d8 23
a30 2
PURPOSE:  Performs arithmetic operations point for point on the
          input picture to create an output picture.
d32 1
a32 1
USAGE:    AR
d34 3
a36 2
          .INPUT FILE: PIC001
          [Enter the name of the input picture.]
a37 2
          .OUTPUT FILE: PIC002
          [Enter the name of the output picture.]
a38 50
          .FORMULA: P2=:((P1+0.5)*2.)
          [Enter formula to be used to compute the output picture
          (referred to by P2) from the input picture (P1).  Note
          that the operations can be + - * / .  If the first 
          operation is + or -, the second one can only be * or / .  If
          the first operation is * or /, the second one can only be
          + or - .  The formula entered by the user starts with the 
          two left parentheses.                            '<BR>'

          Examples of accepted formulae:                   '<BR>'
                              ((P1-2.)/2.)                 '<BR>'                              ((P1/512.)+0.)                '<BR>'

          Examples of unacceptable formulae:               '<BR>'
                              ((P1+3.)+50.)                '<BR>'
                              ((P1*4.)/10.)                '<BR>'
                   ...because in both cases the arithmetic
          operations are not mixed.                        '<BR>'

          The constants used must be floating point, i.e., the
          decimal point must be specified.]


NOTES:    1.  It is also possible to obtain the logarithm (base 10)
              of the resulting picture by simply putting LOG in 
              front of the expression, e.g.               '<BR>'
                                   LOG((P1-2.)/2.)        '<BR>'
                                   LOG((P1/512.)+0.)      '<BR>'
              It is the user's responsibility to make sure that the
              argument of the logarithm function is positive 
              everywhere.
              The main application of the LOG function is the
              display of the power spectrum.

              Additional functions possible are:               '<BR>'
                                   ABS((P1-2.)/2.)             '<BR>'
                                   EXP((P1-2.)/2.)             '<BR>'

          2.  In order to normalize a picture between 0. and 2., one
              can make use of the automatic register updating; X3
              and X4 always contain the maximum and minimum of the
              last picture accessed by SPIDER:
              '<PRE>'
              FI
              PIC001
              X10=2./(X3-X4)
              AR
              PIC001
              PIC002
              ((P1-X4)*X10)
              '</PRE>'
a39 1
SUBROUTINE: ARITH
a40 1
CALLER:     UTIL2
@


1.6
log
@added tags
@
text
@d38 3
a40 3
NOTES:    1.  It is also possible to obtain the logarithm of the
              resulting picture by simply putting LOG in front of
              the expression, e.g.                        '<BR>'
@


1.5
log
@changes for better html file
@
text
@d3 1
a3 1
                                                            08/25/94
d23 1
a23 1
          two left parentheses.
d25 6
a30 7
          Examples of accepted formulae:
                              ((P1-2.)/2.)
                              ((P1/512.)+0.)

          Examples of unacceptable formulae:
                              ((P1+3.)+50.)
                              ((P1*4.)/10.)
d32 1
a32 1
          operations are not mixed.
d40 3
a42 3
              the expression, e.g.
                                   LOG((P1-2.)/2.)
                                   LOG((P1/512.)+0.)
d49 3
a51 3
              Additional functions possible are:
                                   ABS((P1-2.)/2.)
                                   EXP((P1-2.)/2.)
d57 9
a65 8
                                     FI
                                     PIC001
                                     X10=2./(X3-X4)
                                     AR
                                     PIC001
                                     PIC002
                                     ((P1-X4)*X10)

d67 1
a67 1
Subroutine: ARITH
d69 1
a69 1
Caller:     UTIL2
@


1.4
log
@fixed see also
@
text
@d19 2
a20 2
          that the operations can be + - * / .  If the first opera-
          tion is + or -, the second one can only be * or / .  If
d32 2
a33 2
                   ...because in both cases the arithmetic opera-
          tions are not mixed.
d45 4
a48 4
              argument of the logarithm function is positive every-
              where.
              The main application of the LOG function is the dis-
              play of the power spectrum.
@


1.3
log
@*** empty log message ***
@
text
@a7 2
SEE ALSO:  SPIDER arithmatic expressions 

d68 1
@


1.2
log
@replaced_tabs
@
text
@d3 1
a3 1
                                                            12/22/93
d41 1
a41 2
NOTES:
          1.  It is also possible to obtain the logarithm of the
d70 1
a70 1
Cotask:     UTIL2
@


1.1
log
@Initial revision
@
text
@@
