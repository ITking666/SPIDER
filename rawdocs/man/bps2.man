
BP S2     Back Projection - 2D, single tilt, iterative, constrained ||  BP S2
                                                             05/03/99

PURPOSE:  Calculates 2-dimensional iterative reconstruction
          for single-tilt geometry using constraints.
          See: '<a href='"'../bp_overview.html'"'>'Comparison of 'BP' operations'</a>'. 

SEE ALSO: BP 3D    
          BP W2   

USAGE:    BP S2

          .TEMPLATE FOR 2-D PROJECTIONS: PRJ***
          [Enter the prefix of the projection file series.]

          .SELECTION DOC FILE: SELECT
          [Enter the name of the document file containing projection
           file numbers in the first column.]

          .ANGLES DOC FILE: ANGLES
          [Enter the name of the document file containing Eulerian
           angles for the projections used (psi, theta, phi).
           Only theta is actually used, psi and phi are ignored.]

          .RADIUS OF RECONSTRUCTED OBJECT, SLICE HEIGHT: 45, 30
          [The reconstruction is calculated for the circle only
           and within the slab of specified height.  This height is
           NZ dimension of resulting 3D volume.]

          .RECONSTRUCTION RANGE IN Y: 2, 73
          [The reconstruction is calculated between specified
           NY borders. Default is NY1=1, NY2=NY.
           3D volume will have dimensions: NX, NY-NY1+1, 
           height of the slice where NX is original 2D projection dimension.]

          .OUTPUT FILE: bps2_vol
          [Name of the output file.]

          .LAMBDA, CORRECTION LIMIT: 1.0e-4, 0.0
          [Lambda determines the weight of corrections. Too small
           value results in long time of calculations, too large
           value will terminate the iterations too soon.]

          .ITERATION LIMIT, NUMBER OF INTERNAL STEPS: 20, 5
          [Program will terminate after number of iterations given.
           For each iteration there is specified number of iterations
           per slice performed (internal steps).  Thus, the total
           number of steps is the product of two numbers.
           In the above example it is 20*5=100.
           Min and max constraints are enforced during each internal
           step, but smoothing is applied only once per main iteration
           (20 times in the example).
           If no smoothing is requested the iteration limit should
           be equal 1, and the all the iterations requested
           should be specified as internal steps.
           Usually 50 steps are sufficient.]

          .CONSTRAINT MODE: 8
          [Mode determines the constraints used:  '<br />'
           1 - Smoothing.                         '<br />'
           2 - Min constraint.                    '<br />'
           3 - Smoothing & min constraints.       '<br />'
           4 - (No mode 4)                        '<br />'
           5 - Max constraint.                    '<br />'
           6 - Smoothing & max constraints.       '<br />'
           7 - Min & max constraint.              '<br />'
           8 - Smoothing, min, & max constraints.
           ]

          .MINIMUM, MAXIMUM CONSTRAINTS: 1.77, 1.90
          [Values of min and max constraints. They relate to the values
           in 2D projection data.]

          .SMOOTHING CONSTANT: 0.5
          [Smoothing constant has to be 0<s<1. s=0 corresponds to no
           smoothing, s=1 is strong low-pass filtration.]

NOTES: 1. The limit of number of projections is 93.

       2. Only theta angle from the angular document file is used.
          Two remaining angles (psi and phi) are ignored.

       3. If the radius of the reconstructed circle is too large
          compared to the size of projections a warning is printed.
          The reconstruction is calculated, but it is incorrect
          on the boundary.

       4. An alternative, faster way to calculate a 3D single-tilt
          reconstruction is to use weighted backprojection 'BP W2'.

       5. Implemented by: Paul Penczek.

SUBROUTINES: BPS2,REDPRO2,ASTCYL,PREPSL_S,PRJS2,PRJC2,PRJC0,REPR2_S,
             CPPB,SMT3,DOMIN3_S,DOMAX3_S,DOCORR3_S,
             BMAX_C,BMAX_S,BMIN_C,BMIN_S,FMAX_C,FMAX_S,FMIN_C,FMIN_S

CALLER:      VTIL2
