VAR    Variable Assignment                                       VAR
                                                            05/38/10

PURPOSE:  Assign values to Register (Numeric) or Symbolic (String) variables.

SEE ALSO:  FR L
           FR G
           FR LS
           FR GS
           RR G


USAGE:    [varname] =  number                                          
           '&'nbsp;'&'nbsp;'&'nbsp; <or>                               '<br />'
          [varname] = 'chars'                                          '<br />'
           '&'nbsp;'&'nbsp;'&'nbsp; <or>                               '<br />'
          [varname] = [old-varname]                                    '<br />'
           '&'nbsp;'&'nbsp;'&'nbsp; <or>                               '<br />'
          [varname] = 'opt-chars'[varname]'opt-chars'                  '<br />'
           '&'nbsp;'&'nbsp;'&'nbsp; <or>                               '<br />'
          GLOBAL  [varname] = 'chars'                                  '<br />'
           '&'nbsp;'&'nbsp;'&'nbsp; <or>                               '<br />'
          GLOBAL  [varname] =  number                                  '<br />'
  
         [Where:                                                       '<br />'
           '<dl>'
           '<dt>''<i>' [varname] '</i>''</dt>'  
           '<dd>' Numerical (register) or string (symbolic) variable name 
                  which will be assigned a value. 
                 Variable names must start with an alphabetical letter  
                 and can contain the 36 alphanumerical characters, 
                 '-', and '_'.  The [] brackets are necessary.               '</dd>'
 
           '<dt>''<i>' 'chars' '</i>''</dt>'
                 '<dd>' A character string to be associated with the string 
                (symbolic) variable. The quotes are necessary.               '</dd>'
                
           '<dt>'<i>' number '</i>''</dt>' 
                '<dd>' A numerical value to be associated with the numerical 
                (register) variable.                                         '</dd>'

           '<dt>''<i>' [old-varname] '</i>''</dt>'
                '<dd>' The name of an existing numerical (register) 
                or string (symbolic) variable . The [] brackets are 
                necessary.  If [old-varname] is a string variable and
               [varname] does not already exist then [varname] will also
               be a string variable. '</dd>'
 
           '<dt>''<i>' 'opt-chars' '</i>''</dt>'
                 '<dd>' An optional character string to be become part of 
                 the string (symbolic) variable. The quotes are necessary.                            '</dd>'
 
           '<dt>''<i>' GLOBAL '</i>' (Abbreviate: GLO) '</dt>'
                 '<dd>' An optional flag indicating that the variable 
                 is visable in all procedures following its definition.           '</dd>'
           '</dt> '<br />' '<br />'

         A 'chars' or 'opt-chars' can have embedded blanks or double (") quotes.  '<br />' 

         Anything within a 'chars' is evaluated (bound) only when
                the string is used.                                               '<br />'

         Anything within an [old-varname] not surrounded 
                by quotes is evaluated when variable is created (NOT used).       '<br />'
                
         Some typical examples:                                                   '<br />'
           
         '&'nbsp;'&'nbsp; [str_variable]        = 'filename'                      '<br />'
         '&'nbsp;'&'nbsp; [str_variable]        = 'img{***[reg-variable]}'        '<br />'
         '&'nbsp;'&'nbsp; [str_variable]        = 'img[old-str-variable]'         '<br />'
         '&'nbsp;'&'nbsp; [str_variable]        = 'IMG{***[old-str-variable]}'    '<br />'
         '&'nbsp;'&'nbsp; [str_variable]        = [old-str-variable]              '<br />'
         '&'nbsp;'&'nbsp; global [str_variable] = 'filename'                      '<br />'
         '&'nbsp;'&'nbsp; GLOBAL [str_variable] = 'filename' 

         '&'nbsp;'&'nbsp; [reg_variable]        = 10                              '<br />'
         '&'nbsp;'&'nbsp; [reg_variable]        = 45.7*32                         '<br />'
         '&'nbsp;'&'nbsp; [reg_variable]        = -1.5678E-02                     '<br />'
         '&'nbsp;'&'nbsp; GLOBAL [reg_variable] = -2.567                          '<br />'
         '&'nbsp;'&'nbsp; GLO    [reg_variable] = 3.14                          '<br />'

         Some more complex examples:                                              '<br />'

         '&'nbsp;'&'nbsp; [new_str_variable] = '[old-str-variable]dat'            '<br />'
         '&'nbsp;'&'nbsp; [new_str_variable] =  [old-str-variable]'.dat'          '<br />'
         '&'nbsp;'&'nbsp; [new_str_variable] = 'IMG'[old-str-variable]            '<br />'
         '&'nbsp;'&'nbsp; [new_str_variable] = 'IMG'{***[old-reg-variable]}'      '<br />'
         '&'nbsp;'&'nbsp; [old_str_variable] = 'temp-dir/'[old-str-variable]      '<br />'

NOTES:  1.  GLOBAL register variables can only be created/modified by a
            '<i>'GLOBAL  [varname] = number'</i>' or the obsolete:   
            '<a href='"'rrg.html'"'>''RR G''</a>' operations.

            '<a href='"'do.html'"'>''DO''</a>', 
            '<a href='"'ud.html'"'>''UD''</a>', and 
            '<a href='"'udic.html'"'>''UD IC''</a>', can not create/set 
            a global register variable. This restriction is necessary to 
            preserve backward compatibility. 

SUBROUTINE: SYMPAR, SETSYMPAR, SUBSYMPAR, GETNEXTTOKEN

CALLER:     SPIDER
