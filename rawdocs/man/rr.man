
RR        Read (Set) Register variables                        RR      
                                                         8/27/2013

PURPOSE:  To read value(s) into a local register (numerical) variable.  Useful to 
          set numerical variables from inside a SPIDER procedure at run time. See 'VAR' 
          operation for alternative methods.

SEE ALSO: RR G
          RR C
          RR S
          VAR

USAGE:    RR [var1],[var2],[var3],...

       WITHIN AN INTERACTIVE SESSION OR WITHIN A PROCEDURE WHERE A ?SOLICITATION PROMPT?
       DOES NOT FOLLOW THE OPERATION:
         '<div class='"'opt_inp'"'>'
          RR [var1],[var2],[var3]                      '<br />'
          .VALUE(S): 4.0, 5, 6                         '<br />'
          [Enter the floating point value(s) to be put into listed
          register variables (here: [var1],[var2], and [var3]).  
          In this form the operation is equivalent to the 
          operations '[var1] = 4.', followed by: '[var2] = 5', 
          followed by: '[var3] = 6'.  Indeed, it offers no advantage 
          over these simple operations, except that it allows multiple
          register variables to be set on a single line.'<br />' 
          A procedure containing the 'RR' operation  NOT followed  by a solicitation 
          prompt reads its input from the succeeding line in the same procedure.'<br />' 
          The value may either be explicitly 
          entered (e.g. 4.0), declared as the contents of a register variable known 
          to the current procedure (e.g. [var20]), or as a string variable known in 
          the current procedure (e.g. [var_str]).]
          '</div>'


       QUERY INTERACTIVE INPUT FROM INSIDE A PROCEDURE:
         '<div class='"'opt_inp'"'>'

          RR [mag],..                 '<br />'
          ? ENTER MAGNIFICATION ?     '<br />'

          [A procedure containing the 'RR' operation followed on the next line
          by a solicitation prompt e.g. ? ENTER MAGNIFICATION ? produces the 
          following prompt in the interactive session]:

          ? ENTER MAGNIFICATION ?  4.                           '<br />'
          [The magnification value may either be explicitly entered (e.g. 4.),
          declared as the contents of a register variable already defined within
          the  interactive session (e.g. [var20]), or as a symbol
          already defined within  the interactive session (e.g. [var_sym]).  
          The value entered in any of the three forms will be stored
          in register variable: [mag].]
          '</div>'

       QUERY A CALLING PROCEDURE FROM INSIDE A PROCEDURE, WHERE A SOLICITATION PROMPT
       FOLLOWS THE OPERATION:
         '<div class='"'opt_inp'"'>'

          RR [mag],..                     '<br />'
          ? ENTER MAGNIFICATION ?         '<br />'
          [A procedure containing the 'RR' operation followed on the next line
          by a solicitation prompt (e.g. ? ENTER MAGNIFICATION ?) reads its input from 
          the succeeding line in the '<b>'calling '</b>'procedure. 
          In the calling procedure the magnification value may either be explicitly 
          entered (e.g. 4.), declared as the contents of a register variable known in the calling 
          procedure (e.g. [var20]), or as a string variable known in 
          the calling procedure (e.g. [var_str]).]
          The value entered in any of the three forms will be stored
          in register variable: [mag].]
          '</div>'


NOTES:    1. Unless you have used operation 
             '<a href='"'md.html'"'>''MD''</a>' with 
             option '<i>'() ON'</i>', 'RR' can '<b>' NO LONGER'</b>' 
             be used within a DO-loop to enter a set of
             numbers successively into a register variable.  Use
             '<a href='"'rrs.html'"'>''RR S''</a>'  instead.'<br />'

         '<small>'
         2. '<b>'Deprecated legacy usage'</b>' 
            If you have used the Mode operation 
             '<a href='"'md.html'"'>''MD''</a>' with 
             option '<i>'() ON'</i>', then operation 'RR' reverts to
             its legacy usage and can    
             be used within a DO-loop to enter a single set of
             set of numbers into multiple registers:           '<br />'
              DO I=1,5                                                '<br />'
                '&'nbsp;'&'nbsp;RR [x],[y],[z]                        '<br />'
                '&'nbsp;'&'nbsp;(4,8,12)                              '<br />'
                '&'nbsp;'&'nbsp;~~~                                   '<br />'
                '&'nbsp;'&'nbsp;~~~                                   '<br />'
              ENDDO                                                   '<br />'
            In each iteration: [x],[y],[z] will be filled with the same
            respective values: 4, 8, 12. '<br />' '<br />'

          However when the values are not enclosed within ()s, e.g.:'<br />'
              DO I=1,3                                                '<br />'
                '&'nbsp;'&'nbsp;RR [x]                                '<br />'
                '&'nbsp;'&'nbsp;4,8,12                               '<br />'
                '&'nbsp;'&'nbsp;~~~                                   '<br />'
                '&'nbsp;'&'nbsp;~~~                                   '<br />'
              ENDDO                                                   '<br />'
            In each iteration: [x] will be filled with a succeeding value
            from the list: 4, 8, 12. '<br />'

          However in this case: '<br />'
          For iteration =1, [x] will be filled with the value 4 , '<br />'
          for iteration =2, [x] will be filled with the value 8 , '<br />'
          for iteration =3, [x] will be filled with the value 12  '<br />'
          and so forth.
          '</small>'
  

SUBROUTINES: READRQ, REG_SET, SHRINKQ, CHKSTR


CALLER:      DRIV1
