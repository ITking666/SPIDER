; Tests some SPIDER segmentation filters with different input 
; parameters on a volume. 
; 
; Saves a single relevant slice from the volume in a stack. 
; 
; ArDean Leith   April 2002 
; 
; ----------------------------------- GET INPUT PARAMETERS  
FR L                         ; Input volume
[1]vol007    
 
FR G                         ; Temp. output file
[2]_3    
 
FR G                         ; Labeled output stack
[3]labeled_tests@{***x11}     
 
x40 = 62                     ; Relevant slice from your volume     

x8 8= 100                    ; Trial Threshold used in relevant operations
 
; ----------------------------------- Initialization  
 
PS Z       ; Extract relevant slice 
[1]        ; Input volume 
_9         ; Output slice 
(x40)      ; Slice number 
 
AR SCA 
_9 
_9 
0 255 

FS x42,x41 ; Find slice min & max
_9        ; Slice

NEG        ; Negate 
_9 
_8 
 
x11=1 
 
; ----------------------------------- Original Unfiltered Slice 
CP           ; Extract original relevant slice 
_9           ; Output slice 
[2]          ; Output stack 

VM  
echo "Image: {***x11} Original Slice" 

LA             ; Label the image 
[2]            ; Input stack image 
[3]            ; Output stack 
Original Slice  

x11=x11+1    ; Increment stack pointer 
 
; ----------------------------------- Original Negated Slice 
CP           ; 
_8           ; Negated slice 
[2]          ; Output stack 
VM  
echo "Image: {***x11} Negated Slice" 

LA             ; Label the image 
[2]            ; Input stack image 
[3]            ; Output stack 
Negated Slice  

x11=x11+1    ; Increment stack pointer 
 
; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx DENOISING  

; ----------------------------------- Box convolution -- low pass 
DO LB1 x20=1,3 
   x21 = x20 * 2 + 1 
 
   BC         ; Box convolution 
   [1]        ; Input volume 
   _1         ; Output volume 
   L          ; Low pass 
   x21,x21  
   x21 
   (1.0)      ; Weighting factor 
 
   PS Z       ; Extract relevant slice 
   _1         ; Temp volume 
   [2]        ; Output stack 
   (x40)      ; Slice number 
 
   VM  
   echo "Image: {***x11} BC LOW PASS  Size: {**x21}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   BC LOW PASS  Size: {**x21}  

   x11=x11+1  ; Increment stack pointer 
LB1 
 
; ----------------------------------- Box convolution -- hi pass 
DO LB2 x20=1,3 
   x21 = x20 * 2 + 1 
 
   BC         ; Box convolution 
   [1]        ; Input volume 
   _1         ; Output volume 
   H          ; Low pass 
   x21,x21  
   x21 
   (1.0)      ; Weighting factor 
 
   PS Z       ; Extract relevant slice 
   _1         ; Temp volume 
   [2]        ; Output stack 
   (x40)      ; Slice number 
 
   VM  
   echo "Image: {***x11} BC HIGH PASS  Size: {**x21}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   BC HIGH PASS  Size: {**x21}  

   x11=x11+1  ; Increment stack pointer 
LB2 

; ----------------------------------- CE -- AD, HEG 
 
 
DO LB23 x20=1,7 
   x21 = x20 * 10 
 
   CE AD        ; Anisotropic Diffusion 
   _9           ; Input slice 
   [2]         ; Output stack 
   HEG 
   (x21)        ; Iterations 
   (.25)        ; Time step 
   (1.0 1.0)    ; Sigma & Lambda 
 
   FS 
   [2]         
 
   VM  
   echo "Image: {***x11} CE AD, HEG Iter: {**x21} T: .25 S: 1" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE AD, HEG Iter: {**x21} T: .25 S: 1  

   x11=x11+1    ; Increment stack pointer 
LB23 
 
DO LB24 x20=1,7 
   x21 = x20 * 10 
 
   CE AD        ; Anisotropic Diffusion 
   _9           ; Input slice 
   [2]         ; Output stack 
   HEG 
   (x21)        ; Iterations 
   (.1)         ; Time step 
   (1.0 1.0)    ; Sigma & Lambda 
 
   FS 
   [2]         
 
   VM  
   echo "Image: {***x11} CE AD, HEG Iter: {**x21} T: .1 S: 1" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE AD, HEG Iter: {**x21} T: .1 S: 1  

   x11=x11+1    ; Increment stack pointer 
LB24 

; ----------------------------------- CE -- AD , CPF 
 
DO LB20 x20=1,5 
   x21 = x20 * 2 
   CE AD        ; Anisotropic Diffusion 
   _9          ; Input volume 
   [2]         ; Output stack 
   CPF 
   (x21)        ; iterations 
 
   VM  
   echo "Image: {***x11} CE AD, CPF Iterations: {**x21}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE AD, CPF Iterations: {**x21}  

   x11=x11+1    ; Increment stack pointer 
LB20 
 
; ----------------------------------- CE -- AD, MCD 
 
DO LB22 x20=1,5 
   x21 = x20 * 2 
   DO LB27 x22=1,4 
      x25=x22*.25 
      x26= x25*100 
      CE AD        ; Anisotropic Diffusion 
      _9           ; Input volume 
      [2]         ; Output stack 
      MCD 
      (x20)        ; iterations 
      (x25)        ; Weighting factor 
 
      VM  
      echo "Image: {***x11} CE AD, MCD Iterations: {**x20} Weight*100: {***x26}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE AD, MCD Iterations: {**x20} Weight*100: {***x26}  

      x11=x11+1    ; Increment stack pointer 
   LB27 
LB22  

; ----------------------------------- CE -- GNC 
 
DO LB3 x20=1,3 
   x21 = x20 * 2 + 1 
   CE GNC       ; GNC 
   _9           ; Input slice 
   [2]         ; Output stack 
   (x21)        ; Lambda (smaller is for smaller obj) 
   (0.02)       ; Contrast sensitivity 
   (1.0E-8)     ; accuracy 
 
   VM  
   echo "Image: {***x11} CE GNC Lambda: {**x21}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE GNC Lambda: {**x21}  

   x11=x11+1   ; Increment stack pointer 
LB3 

; ----------------------------------- CE -- Median 
 
DO LB14 x20=1,3 
   x21 = 1 + x20 * 2  
   CE MED       ; Median 
   _9          ; Input slice 
   [2]           ; Output slice 
   (x21)        ; Length 
   B            ; Box shape 
 
   VM  
   echo "Image: {***x11} CE Median  Length: {**x21} Box" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE Median  Length: {**x21} Box  

   x11=x11+1  ; Increment stack pointer 
LB14 
 

; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx INTENSITY  

; ----------------------------------- TH F

TH F         ; THF
_9          ; Input Image
[2]          ; Output stack
B            ; Below
x88          ; Threshold
X41          ; Min

VM
echo "Image: {***x11} TH F at Threshold: {***x88} "

LA
[2]
[3]          ; Output stack
TH F  Threshold: {***x88}

x11=x11+1   ; Increment stack pointer

; ----------------------------------- CE -- Stretch Single

x12 = x41 + 0.1 * (X42 - x41)
x13 = x42 - 0.1 * (X42 - x41)

CE ST       ; CE ST
_9          ; Input image
[2]         ; Output 
Single      ; Single mapping
X12
x13

VM 
echo "Image: {***x11} CE ST  Single 10..90%"

LA
[2]
[3]         ; Output stack
CE ST  Single 10..90

x11=x11+1  ; Increment stack pointer


; ----------------------------------- CE -- Histogram Equalization

CE HI        ; CE HI
_9           ; Input image
[2]          ; Output stack
N            ; No print

VM 
echo "Image: {***x11} CE HI"

LA
[2]
[3]         ; Output stack
CE HI

x11=x11+1  ; Increment stack pointer

; ----------------------------------- CE -- LAH 
 
x22=3            ; Z neighborhood 
x23=64           ; Number of bins 
 
DO LB19 x20=2,5 
   x21 = x20 * 4 + 1 
 
   CE LAH        ; Local area histogram equalization 
   _9            ; Input volume 
   [2]           ; Output volume 
   (x21 x21)     ; Neighborhood 
   (x23)         ; Number of bins 
 
   VM  
   echo "Image: {***x11} CE LAH Size: {**x21}x{**x21}x{**x22} Bins:{***x23}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE LAH Size: {**x21}x{**x21}x{**x22} Bins:{***x23}  

   x11=x11+1     ; Increment stack pointer 
LB19 
 
 


; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx TEXTURE  
 
; ----------------------------------- CE -- Haralick 
 
DO LB4 x20=0,2 
   DO LB5 x19=1,6 
      x21 = 11 + x20 * 4  
      CE HAR       ; Haralick 
      _9           ; Input slice 
      [2]          ; Output stack 
      (x21,X21)    ; Neighborhood 
      (32)         ; Intensity Levels 
      (2 2)        ; Offset 
      (x19)        ; Mode 
 
      VM  
      echo "Image: {***x11} CE Haralick  Size: {**x21} Mode:{*x19} Off:2" 

      LA             ; Label the image 
      [2]            ; Input stack image 
      [3]            ; Output stack 
      CE Haralick  Size: {**x21} Mode:{*x19} Off:2  

      x11=x11+1   ; Increment stack pointer 
   LB5 
LB4 
 
 
DO LB6 x20=0,2 
   DO LB7 x19=1,6 
      x21 = 11 + x20 * 4  
      CE HAR       ; Haralick 
      _9           ; Input slice 
      [2]         ; Output stack 
      (x21,X21)    ; Neighborhood 
      (32)         ; Intensity Levels 
      (4 4)        ; Offset 
      (x19)        ; Mode 
 
      VM  
      echo "Image: {***x11} CE Haralick  Size: {**x21} Mode:{*x19} Off:3" 

      LA             ; Label the image 
      [2]            ; Input stack image 
      [3]            ; Output stack 
      CE Haralick  Size: {**x21} Mode:{*x19} Off:3  

      x11=x11+1    ; Increment stack pointer 
   LB7 
LB6 
 
; ----------------------------------- CE -- Hurst 
 
DO LB8 x19=1,5 
   x21 = 1 + x19 * 2  
   CE HURST     ; Hurst 
   [1]          ; Input volume 
   _1           ; Output volume 
   (x21)        ; Radius 
 
   PS Z         ; Extract relevant slice 
   _1           ; Temp volume 
   [2]         ; Output stack 
   (x40)        ; Slice number 
 
   VM  
   echo "Image: {***x11} CE Hurst  Radius: {**x21}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE Hurst  Radius: {**x21}  

   x11=x11+1  ; Increment stack pointer 
LB8 
 

; ----------------------------------- CE -- Maximum 
 
DO LB10 x20=1,3 
   x21 = 1 + x20 * 2  
   CE MAX     ; Maximum 
   [1]        ; Input volume 
   _1         ; Output volume 
   (x21)      ; Radius 
 
   PS Z       ; Extract relevant slice 
   _1         ; Temp volume 
   [2]        ; Output stack 
   (x40)      ; Slice number 
 
   VM  
   echo "Image: {***x11} CE Max  Radius: {**x21}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE Max  Radius: {**x21}  

   x11=x11+1  ; Increment stack pointer 
LB10 
 

; ----------------------------------- CE -- Minimum 
 
DO LB11 x20=1,3 
   x21 = 1 + x20 * 2  
   CE MIN       ; Minimum 
   [1]          ; Input volume 
   _1           ; Output volume 
   (x21)        ; Radius 
 
   PS Z         ; Extract relevant slice 
   _1           ; Temp volume 
   [2]         ; Output stack 
   (x40)        ; Slice number 
 
   VM  
   echo "Image: {***x11} CE Min  Radius: {**x21}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE Min  Radius: {**x21}  

   x11=x11+1  ; Increment stack pointer 
LB11 
 
 
; ----------------------------------- CE -- Variance 
 
DO LB13 x20=1,5 
   x21 = 3 + x20 * 2  
   CE VAR       ; Variance 
   [1]          ; Input volume 
   _1           ; Output volume 
   (x21)        ; Radius 
 
   PS Z         ; Extract relevant slice 
   _1           ; Temp volume 
   [2]         ; Output stack 
   (x40)        ; Slice number 
 
   VM  
   echo "Image: {***x11} CE Variance  Radius: {**x21}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE Variance  Radius: {**x21}  

   x11=x11+1    ; Increment stack pointer 
LB13 
 
 
; ----------------------------------- CE -- Range 
 
DO LB12 x20=1,5 
   x21 = 1 + x20 * 2  
   CE RANGE     ; Range 
   [1]          ; Input volume 
   _1           ; Output volume 
   (x21)        ; Radius 
 
   PS Z         ; Extract relevant slice 
   _1           ; Temp volume 
   [2]         ; Output stack 
   (x40)        ; Slice number 
 
   VM  
   echo "Image: {***x11} CE Range  Radius: {**x21}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE Range  Radius: {**x21}  

   x11=x11+1    ; Increment stack pointer 
LB12 
 


; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx EDGES  
 
; ----------------------------------- CE -- Gradient 
 
CE G       ; Gradient 
[1]        ; Input volume 
_1         ; Output volume 
 
PS Z       ; Extract relevant slice 
_1         ; Temp volume 
[2]        ; Output stack 
(x40)      ; Slice number 
 
VM  
echo "Image: {***x11} CE Gradient" 

LA         ; Label the image 
[2]        ; Input stack image 
[3]        ; Output stack 
CE Gradient  

x11=x11+1  ; Increment stack pointer 
 
CE GX      ; X Gradient 
[1]        ; Input volume 
_1         ; Output volume 
 
PS Z       ; Extract relevant slice 
_1         ; Temp volume 
[2]        ; Output stack 
(x40)      ; Slice number 
 
VM  
echo "Image: {***x11} CE Gradient X" 

LA             ; Label the image 
[2]            ; Input stack image 
[3]            ; Output stack 
CE Gradient X  

x11=x11+1  ; Increment stack pointer 
 
CE GY      ; Y Gradient 
[1]        ; Input volume 
_1         ; Output volume 
 
PS Z       ; Extract relevant slice 
_1         ; Temp volume 
[2]        ; Output stack 
(x40)      ; Slice number 
 
VM  
echo "Image: {***x11} CE Gradient Y" 

LA             ; Label the image 
[2]            ; Input stack image 
[3]            ; Output stack 
CE Gradient Y  

x11=x11+1  ; Increment stack pointer 
CE GZ      ; Z Gradient 
[1]        ; Input volume 
_1         ; Output volume 
 
PS Z       ; Extract relevant slice 
_1         ; Temp volume 
[2]        ; Output stack 
(x40)      ; Slice number 
 
VM  
echo "Image: {***x11} CE Gradient Z" 

LA             ; Label the image 
[2]            ; Input stack image 
[3]            ; Output stack 
CE Gradient Z  

x11=x11+1  ; Increment stack pointer

; ----------------------------------- CE -- Laplacian 
 
DO LB9 x20=1,5 
   x21 = 1 + x20 * 2  
   CE L       ; Laplacian 
   [1]        ; Input volume 
   _1         ; Output volume 
   (x21)      ; Radius 
 
   PS Z       ; Extract relevant slice 
   _1         ; Temp volume 
   [2]        ; Output stack 
   (x40)      ; Slice number 
 
   VM  
   echo "Image: {***x11} CE Laplacian  Radius: {**x21}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE Laplacian  Radius: {**x21}  

   x11=x11+1  ; Increment stack pointer 
LB9 
 ; ----------------------------------- CE -- Sobel 
 
CE SOBEL     ; Sobel 
[1]          ; Input volume 
_1           ; Output volume 
 
PS Z         ; Extract relevant slice 
_1           ; Temp volume 
[2]         ; Output stack 
(x40)        ; Slice number 
 
VM  
echo "Image: {***x11} CE Sobel " 

LA             ; Label the image 
[2]            ; Input stack image 
[3]            ; Output stack 
CE Sobel   

x11=x11+1    ; Increment stack pointer 
 
; ----------------------------------- CE -- Frei Chen 
 
CE F 
_9            ; Sliced Image  
[2]          ; Output stack 
 
VM  
echo "Image: {***x11} CE Frei Chen" 

LA             ; Label the image 
[2]            ; Input stack image 
[3]            ; Output stack 
CE Frei Chen  

x11=x11+1     ; Increment stack pointer 
 
; ----------------------------------- CE -- Prewitt 
 
CE PRE       ; Prewitt 
[1]          ; Input volume 
_1           ; Output volume 
 
PS Z         ; Extract relevant slice 
_1           ; Temp volume 
[2]         ; Output stack 
(x40)        ; Slice number 
 
VM  
echo "Image: {***x11} CE Prewitt" 

LA             ; Label the image 
[2]            ; Input stack image 
[3]            ; Output stack 
CE Prewitt  

x11=x11+1    ; Increment stack pointer 
 

 

; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx CONTOURING  

; ----------------------------------- FC
   x22 = 4

   FC           ; FC
   _9          ; Input Image
   [2]          ; Output stack
   4            ; Number of Contours
   NO           ; No overwrite

   LA
   [2]
   [3]          ; Output stack
   FC Levels: {**x22}

   VM
   echo "Image: {***x11} FC Levels: {**x22}"
   x11=x11+1   ; Increment stack pointer

; ----------------------------------- FC E

   DO LB26 x21=1,4
      x22 = 50 + x21*10

      FC E         ; FC E
      _9          ; Input Image
      [2]          ; Output stack
      x22          ; Bottom Contour
      (10000)      ; Increment
      NO           ; No overwrite

      VM
      echo "Image: {***x11} FC E at Threshold: {***x22}"

      LA
      [2]
      [3]         ; Output stack
      FC E at Threshold: {***x22}


      x11=x11+1   ; Increment stack pointer

   LB26
; ----------------------------------- ED 
 
DO LB17 x18=1,3 
   DO LB18 x21=1,4 
      ED           ; Edge Detection (Wiener) 
      _9           ; Input image 
      [2]          ; Output stack 
      (x21)        ; Filter number 
      (x18)        ; Relative Threshold 
 
      VM  
      echo "Image: {***x11} ED  Filter:{*x21} Thresh.: {**x18}" 

      LA             ; Label the image 
      [2]            ; Input stack image 
      [3]            ; Output stack 
      ED  Filter:{*x21} Thresh.: {**x18}  

      x11=x11+1   ; Increment stack pointer 
   LB18 
LB17 

; ----------------------------------- ER EDM DIStance Map

   ER EDM       ; CE
   _9           ; Input slice
   [2]           ; Output slice
   x88          ; Threshold

   VM
   echo "Image: {***x11} ER EDM  At Threshold: {***x88}"

   LA
   [2]            ; Input stack image 
   [3]         ; Output stack
   ER EDM  Threshold: {***x88}

   x11=x11+1   ; Increment stack pointer


; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx OTHER  
 
; ----------------------------------- CE -- TopHat 
 
DO LB16 x21=0,2 
   x22 = X21 * 2 + 1 
   x23 = x22 + 2 
   CE TOP       ; TopHat 
   [1]          ; Input volume 
   _1           ; Output volume 
   (x22,x23)    ; Diameters 
 
   PS Z         ; Extract relevant slice 
   _1           ; Temp volume 
   [2]         ; Output stack 
   (x40)        ; Slice number 
 
   VM  
   echo "Image: {***x11} CE TopHat  Diameter: {**x22}" 

   LA             ; Label the image 
   [2]            ; Input stack image 
   [3]            ; Output stack 
   CE TopHat  Diameter: {**x22}  

   x11=x11+1    ; Increment stack pointer 
LB16 

; ----------------------------------- ER -- Watershed 
 
ER WA        ; Erode to Watershed Skeleton 
[1]          ; Input volume 
_1           ; Output volume 
 
PS Z         ; Extract relevant slice 
_1           ; Temp volume 
[2]         ; Output stack 
(x40)        ; Slice number 
 
VM  
echo "Image: {***x11} ER WATERSHED " 

LA             ; Label the image 
[2]            ; Input stack image 
[3]            ; Output stack 
ER WATERSHED   

x11=x11+1    ; Increment stack pointer 

 
; ----------------------------------- CE -- Ridge 
 
CE RIDGE     ; Ridge 
[1]          ; Input volume 
_1           ; Output volume 
 
PS Z         ; Extract relevant slice 
_1           ; Temp volume 
[2]          ; Output stack 
(x40)        ; Slice number 
 
VM  
echo "Image: {***x11} CE Ridge " 

LA             ; Label the image 
[2]            ; Input stack image 
[3]            ; Output stack 
CE Ridge   

x11=x11+1    ; Increment stack pointer 
 
EN 
 
 
