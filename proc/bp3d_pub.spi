; <html><head><title>Controls back projection</title></head><body><pre>
; bp3d_pub.pam                  May 2003
;
; PURPOSE: Runs 3D back projection. Creates a volume from a set of
;          input projections and their corresponding angles.
;
;
; PROCEDURES CALLED:  <a href="./wait_pub.spi">wait_pub.spi</a>
;                     <a href="./signal_pub.spi">signal_pub.spi</a>
;
; I/O PARAMETERS AND FILES ARE SET HERE:
;
; ----------------- INPUT REGISTERS -------------------------------------
x12 = 1           ; Number of OMP threads
x15 = 8           ; Number of partitions/nodes 

x17 = 1024        ; X dimension of the reconstruction
x18 = 1024        ; Y dimension of the reconstruction
x19 = 250         ; Z dimension of the reconstruction

x21 = 1           ; First slice to be reconstructed
x22 = 250         ; Last slice to be reconstructed

;<b> ----------------- INPUT FILES -------------------------------------
; -------------- May have to edit these names --------------------------
; -------------- DO NOT COPY FROM WEB BROWSER --------------------------

FR G
[aligned_image_template]data/k35_rtsq_***  ; File name template for aligned input images 

FR G
[image_selection_doc]data/sel003           ; Selection doc file for input images numbers                                                                  

FR G
[angles_doc]data/angles_both               ; Input images angle doc file                                                                  

; ----------------- OUTPUT FILES ---------------------------------------

FR G
[output_volume]jnkpub_volout                 ; Output volume filename stem

FR G
[temp_selection_doc]jnksel                 ; Temp. selection doc file stem                                                                  

FR G
[sync_doc]jnkdocparamout                   ; Sync. doc file stem for PubSub                                                                   

;  ------------------------------------------------------------------</b>

MD
TR OFF                       ; Decreases results file output
MD
VB OFF                       ; Decreases results file output

IF (x14.EQ.1) THEN
   ; -------------------- Partial 'BP 3D' run -----------------------------
   IF (x12 .GT. 1) THEN
      MD
      SET MP                 ; Set number of OMP processors
      x12
   ENDIF

   BP 3DP                    ; Back projection
   [aligned_image_template]  ; File name template for aligned input images
   [image_selection_doc]     ; Selection doc file for input images numbers
   [angles_doc]              ; Input images angle doc file
   x17,x18                   ; X-Y size of recon. (up to size of aligned images)
   x19                       ; Total depth of reconstruction(leave good area at least)
   x21,x22                   ; Desired Z-slice range to be reconstructed
   1.0E+4                    ; SNR
   [output_volume]_{***x30}  ; Partial output volume file
   [temp_selection_doc]_{***x30} ; Partial selection doc file for input images numbers

   @signal_pub(x30)          ; Create sync signal file

   MY FL                     ; Flush results file
   EN                        ; This partial SPIDER run ends now
ENDIF

IF (x14.EQ.2) THEN  ; x14 was sent on command line
   ; -------------------- Partial 'BP 3D' merge run -----------------------------

   AD S                     ; Add files in series
   [output_volume]_***      ; Input file name template
   x81,x82                  ; Input file numbers
   [output_volume]_{***x82} ; Output file name  

   @signal_pub(x81)         ; Create sync signal file

   EN
ENDIF

   ; Use PubSub to create parallel process for each micrograph
   
   UD N,x20            ; Get number of images from image selection file
   [image_selection_doc]

   x30=1                         ; New doc. file number 
   x31=0                         ; New key number

   x23= x20 / x15                ; Images per node
   x24= INT(x23)
   if (x23 .gt. x24) x24=x24+1   ; Images per node

   DO LB1 x32=1,x20              ; Loop over all existing keys
    
      UD IC x32,x50              ; Find current value for this key number
      [image_selection_doc]

      x31 = x31 + 1              ; Increment key number for doc. file
      SD x31,x50                 ; Save current value in new selection doc. file
      [temp_selection_doc]_{***x30}

      IF (x32.EQ.x20) x31=x24    ; Final key

      IF (x31.GE.x24) THEN       ; Enough keys in this selection file
         SD E                    ; Close selection doc. file 
         [temp_selection_doc]_{***x30}

         VM                      ; Start back-projection subset
         publish './spider $PRJEXT/$DATEXT @bp3d_pub {**x30} x14=1 x30={***x30}'
         
         x31=0                   ; New output key number
         IF (x32.NE.x20)x30=x30+1 ; Increment selection doc. file number
      ENDIF
   LB1

   UD ICE                        ; We are finished with this file
   [image_selection_doc]

   x29=1
   @wait_pub(x29,x30)            ; Waiting for projection subsets: 1...x30

   ; Merge all projection subsets
   IF (x15.LE.1) THEN
      VM
      \mv [output_volume]_001.$DATEXT  [output_volume].$DATEXT
   ELSE
      x91=1                          ; Starting set

      DO LB10 x99=1,100000           ; Endless loop
         x92 = INT((x30-x91+ 1) / 2) ; Number of merges 
         x94 = x91 + x92 - 1         ; Current ending set
     
         DO LB11 x77=x91,x94         ; Loop over first half of remaining sets
            x93 = x77 + x92          ; Second volume to be summed
            VM                       ; Start back-projection subset parallel merge
            publish './spider $PRJEXT/$DATEXT @bp3d_pub 1{**x93} x14=2 x81={***x77} x82={***x93}'
         LB11

         @wait_pub(x91,x94)          ; Waiting for merge subsets: x91...x93

         x91= x91 + x92
         IF (x91.GE.x30) GOTO LB12
      LB10
      LB12

      VM                            ; Move to final output volume                                                                           
      \mv [output_volume]_{***x30}.$DATEXT  [output_volume].$DATEXT 

      VM                            ; Can remove temp. files now                                                                            
      \rm [output_volume]_*.$DATEXT 
   ENDIF
    
   FS                            ; List final output volume statistics                                                                           
   [output_volume]               ; Final file
      
   EN                            ; Finished with whole run

; </body></pre></html>
