 ; <html><head><title>Controls and synchronizes refinement</title></head><body><pre>
 ;
 ; SOURCE: spider/docs/techs/recon1/Procs/gold/pub-refine.spi
 ;
 ;         New                                  ArDean Leith  Nov 2000
 ;         [rn] for endmerge                    ArDean Leith  May 2005
 ;         [] from publish                      ArDean Leith  Feb 2006
 ;         Ampenhance                           ArDean Leith  May 2006
 ;         More stacks                          ArDean Leith  Dec 2006
 ;         Existing iter_refangs bug            ArDean Leith  Aug 2010
 ;         COG centering                        ArDean Leith  Sep 2010
 ;         Dala files removed                   ArDean Leith  Jan 2012
 ;         pixsiz, resol headers,...            ArDean Leith  Aug 2012
 ;         For CTF corrected images             ArDean Leith  Oct 2013
 ;         For gold standard reconstruction     ArDean Leith  May 2014
 ;         Reference projections parallelized   ArDean Leith  Oct 2015
 ;
 ; PURPOSE: Runs on master node to control PubSub refinement.  Master procedure for
 ;          multiple iteration refinement on parallel cluster using: PubSub to control
 ;          distribution of parallel jobs. Each data group uses one parallel process.
 ;
 ; I/O Registers & files are set in: <a href="./refine-settings.spi">refine-settings.spi</a>
 ;
 ; INPUT REGISTERS:
 ;   [r2]                     Radius of object 
 ;   [alignsh]                Translation shift allowed is +-[alignsh]
 ;   [iter-end]               Ending iteration
 ;
 ; 
 ; INPUT FILES: ('***' denotes group here)
 ;   [params]                ../params                                Params file           (one)
 ;   [vol_orig]              ../Reconstruction/vol01                  Initial volume file   (one)
 ;   [sel_group_orig]        ../Reconstruction/input/bp_sel_group     Group selection file  (one)
 ;   [sel_parts_orig]        ../Reconstruction/input/bp_sel_part_***  Group particle selection files (one/group)
 ;   [group_align_orig]      ../Reconstruction/input/bp_align_01_***  Alignment parameter files      (one/group)
 ;   [unaligned_images_orig] ../Reconstruction/input/bp_data_ctfd_*** Unaligned image stacks         (one/group)
 ;
 ; PROCEDURES CALLED:
 ;    refine-settings          <a href="./refine-settings.spi">    refine-settings.spi</a>
 ;    refine-prepare           <a href="./refine-prepare.spi">     refine-prepare.spi</a>
 ;
 ;    publish                  <a href="./publish.perl">           publish.perl</a>
 ;    ... pub-refine-start     <a href="./pub-refine-start.spi">   pub-refine-start</a>          
 ;    ....... refine-settings  <a href="./refine-settings.spi">    refine-settings.spi</a>            
 ;    ....... refine-prjloop   <a href="./refine-prjloop.spi">     refine-prjloop.spi</a>            
 ;    ....... refine-loop      <a href="./refine-loop.spi">        refine-loop.spi</a>            
 ;    ....... refine-smangloop <a href="./refine-smangloop.spi">   refine-smangloop.spi</a>            
 ;    ....... refine-bp        <a href="./refine-bp.spi">          refine-bp.spi</a>            
 ;
 ;    refine-merge             <a href="./refine-merge.spi">       refine-merge.spi</a>
 ;    ... enhance (optional)   <a href="./enhance.spi">            enhance.spi</a>
 ;
 ; -------------------------------- END BATCH HEADER ----------------------------

 MD
   TR OFF                    ; Loop info turned off
 MD
   VB OFF                    ; File info turned off
 MD
   SET MP                    ; Use only one or two processors if using master node!!
   2 

 ; Input initial parameters & file names but not angular steps
 @refine-settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[winsiz],[incore-yn],[prepare-yn],[bp-type])

 IF ( [prepare-yn] > 0 ) THEN 
   ; Prepare input files (only needs to be done once)  
   @refine-prepare([pixsiz],[iter1]) 
 ENDIF

 SYS
   echo -e "  Alignment shift:   {%I0%[alignsh]}   Alignment radius: {%I0%[r2]}"
 SYS
   echo    "  Projection radius: {%I0%[prj-radius]}" ; echo

 SD /     ITERATION     MASKED-RES    RESOLUTION
   [iter_resol]               ; Resolution doc file              (output)
 SD E     
   [iter_resol]               ; Resolution doc file              (finished)

 UD N [num-grps]              ; Find number of groups
   [sel_group]                ; Group selection file      (input)

 DO [iter]=[iter1],[iter-end] ; Loop over all iterations ----------------------------------

   ; List desired angles for reference projections in a doc file.

   @refine-refangles([iter],[smallang-yn],[ampenhance],[ang-step],[ang-limit],[num-angs])      

   ; Create stacks holding reference projections 'PJ 3F' from both subset reference volumes 
   ; in parallel. Waits for all subscribing nodes to finish their projections. 

   @pub-prjrefs([iter],[num-grps],[prj-radius])

   ; Process experimental images in parallel by groups of images using Pubsub.
   ; Find alignment ('AP SHC' or 'AP REF') parameters for experimental images to align with optimal 
   ; projection image. This is done for two subsets of images, 
   ; Then align the images ('RT SF'), and backproject ('BP 32F') to create two subset volumes

   [task]   = [smallang-yn]     ; pub-refine-start starts: refine-loop or refine-smangloop
   [script] = 'publish ./spider $PRJEXT/$DATEXT @pub-refine-start'
   @pub-submit([iter],[num-grps],[task])
     [script]                 ; Script that runs projection parallel job

   ; Consolidate all parallel group volumes for both subsets ('AS S') into two subset output volumes, 
   ; find resolution ('FSC') using the two subsets and
   ; filter the combined volumes to limit resolution ('FD C') 

   @refine-merge([pixsiz],[iter],[ampenhance],[r2],[sphdecon])

   SYS
     echo " Iteration: {%I0%[iter]} Finished" ; echo

   MY FL                      ; Flush results
 ENDDO                        ; End of loop over all iterations ----------------------------

 SYS                          ; Echo current time 
   echo -n "  Refinement finished after iteration: {**[iter]}   " ; date '+ TIME: %x  %X' ; echo  

 EN
 ; </pre></body></html>




 
