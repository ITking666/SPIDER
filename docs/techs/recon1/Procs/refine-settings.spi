 ([sp_pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sp_lambda],[smallang-yn],[sp_winsiz],[incore-yn],[prepare-yn],[bp-type])
 ;
 ; <html><head><title>Sets refinement parameters and files</title></head><body><pre>
 ;
 ; PURPOSE: Sets refinement parameters and files for refinement without defocus grouping
 ;
 ; SOURCE:  spider/docs/techs/recon1/Procs/refine_settings.spi
 ;          New                                    ArDean Leith Jul 2002
 ;          []                                     ArDean Leith Dec 2005
 ;          Rewritten, more stacks                 ArDean Leith Dec 2006
 ;          Input locations altered                ArDean Leith Dec 2009
 ;          Variable assignment                    ArDean Leith Jan 2010
 ;          Even-odd replaced                      ArDean Leith Jan 2011
 ;          Dala removal                           ArDean Leith Jan 2012
 ;          [pixsiz] returned, fsc, ofsc...        ArDean Leith Aug 2012
 ;          Skip 3.3,3...                          ArDean Leith Sep 2012
 ;          For CTF corrected images               ArDean Leith Oct 2013
 ;          Removed gmask                          ArDean Leith  Apr 2015
;
 ; INPUT REGISTERS:       None
 ;
 ; OUTPUT REGISTERS (SET  BELOW):
 ;   [sp_pixsiz]          Pixel size                  (A) 
 ;   [r2]                 Object alignment radius     (pixels)
 ;   [alignsh]            Alignment shift +- allowed  (pixels) 
 ;   [prj-radius]         Object projection radius    (pixels)
 ;   [iter1]              Starting iteration
 ;   [iter-end]           Ending   iteration
 ;   [sp_lambda]          Electron wavength Lambda    (A)
 ;   [smallang-yn]        Small angle refinement flag (1 == true)
 ;   [sp_winsiz]          Image/window size = volume size
 ;   [incore-yn]          Incore (1 == true)
 ;   [prepare-yn]         Prepare input files, only once (1 == true)
 ;
 ;<b> ---------Set Refinement parameters from parameter file ----------</b>
 ;<pre> 

 ; ---- Adjust these parameters for your project --------------- EDIT -----

 [prepare-yn]  = 1    ; Prepare input images (>0 == yes,  only needs to be done once)
 [incore-yn]   = 1    ; Load input images into incore stack (>0 == yes we have enough memory)
 [bp-type]     = 1    ; Backprojection method (1==BP CG, 2==BP 32F, 3==BP RP, 4==BP 3N)

 [alignsh]     = 8    ; Alignment shift (pixels) searched is +- this value
 [iter1]       = 1    ; Starting alignment step (iteration)
 [iter-end]    = 12   ; Ending   alignment step (iteration)

 [diam]        = 349  ; Diameter of the structure (A) used in alignment search.
                      ;    Diameter is used to find radius for alignment.
                      ;    Default is for a ribosome. EDIT as needed!
  
 [win-frac]    = 0.95 ; Fraction of window diameter used in projection (.95 == use 95% of window size)

 [smallang-yn] = 0    ; Use small angle refinement instead of regular (1 == Yes)

 ; Following two variables are used during usual refinement (one value / iteration) (Set: 20 iterations)
 GLO [ang-steps]  = '15,3.3,3, 2,2,  2,1.5,1.5,1.5,1.5,  1.5,1.5,1.5,1.5,1.5,   1.5,1.5,1.5,1.5,1.5' ; Angular degree steps  

 GLO [ang-limits] = ' 0,0,  0,15,8,  6,5,  5,  5,5, 5,   5,  5,  5,  5,  5,     5,  5,  5,  5,  5'    ; Angular limits

 ; Following two string variables are only used during 'small angle refinement'
 GLO [ang-steps-sm] = '0.5'                                                 ; Angular degree steps  

 GLO [thetas-sm]    = '2.0'                                                 ; Theta range

 ; Following flag variables are used to activate OPTIONAL amplitude enhancement
 GLO [amp-enhance-flags] = '0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0'     ; Amplitude enhancement selector 


 ;<b> ============== DO NOT COPY FROM WEB BROWSER ==============</b>
 ; ----------------- Input files ---  May have to EDIT these file names ------

 GLO [params]                = '../params'                                  ; Parameter doc file  (one)  

 GLO [input_orig]            = '../Reconstruction/input'                    ; Main dir. for input files

 GLO [vol_orig]              = '../Reconstruction/vol_{**[iter]}'           ; Initial reconstructed volume (one)   

 GLO [sel_group_orig]        = '[input_orig]/bp_sel_group'                  ; Group selection doc file  (one)                  

 GLO [sel_parts_orig]        = '[input_orig]/bp_sel_part_{***[grp]}'        ; Particle selection doc file (one/group)

 GLO [unaligned_images_orig] = '[input_orig]/bp_data_ctfd_{***[grp]}'       ; Original unaligned images stack (one/group)

 ; OPTIONAL  files only needed if using amplitude enhancement
 GLO [scattering_doc]        = '[input_dir]/scattering'                     ; OPTIONAL enhancement doc file input     (one)
 GLO [mask]                  = '[input_dir]/mask'                           ; OPTIONAL mask for amplitude enhancement (one)

 GLO [symmetry_doc]          = '*'                                          ; OPTIONAL symmetry file for 'back projection' (one)

 ; -------------- Output files -- No need to edit for default refinement ----------

 GLO [input_dir]             = 'input/'                                     ; Main dir. for input files

 GLO [final_dir]              = 'final/'                                    ; Main dir. for output files
 GLO [temp_work_dir]          = 'work/'                                     ; Temp work dir
 GLO [temp_local_dir]         = '/scratch/'                                 ; OPTIONAL local disk scratch dir for PubSub use

 GLO [start_vol]              = 'input/vol_01'                              ; Initial reconstructed volume copy  (one) 

 GLO [sel_group]              = 'input/sel_group'                           ; Group selection doc file           (one)

 GLO [sel_parts]              = 'input/sel_part_{***[grp]}'                 ; Particle selection doc file        (one/group)

 GLO [unaligned_images]       = 'input/data_{***[grp]}'                     ; Unaligned images stack (usually links) (one/group)

 GLO [current_vol]            = 'final/vol_{**[iter]}'                      ; Produced by 'AP SH' or previous iter. (one)  
 GLO [next_vol]               = 'final/vol_{**[next-iter]}'                 ; Filtered, shifted volume              (one/iter)

 GLO [group_align]            = 'final/align_{**[iter]}_{***[grp]}'         ; Aignment parameter input file    (one/group/iter)
 GLO [next_group_align]       = 'final/align_{**[next-iter]}_{***[grp]}'    ; Alignment parameter output file  (one/group/iter)

 GLO [group_vol]              = 'work/vol_{**[iter]}_{***[grp]}'            ; Current group volumes     (one/group/iter) 
 GLO [next_group_vol]         = 'work/vol_{**[next-iter]}_{***[grp]}'       ; Next group volumes        (one/group/iter) 
 GLO [next_group_vol_template]= 'work/vol_{**[next-iter]}_***'              ; Group volume template   

 GLO [ref_projs]              = 'work/refproj_{**[iter]}'                   ; Reference projections     (one/iter)

 GLO [iter_refangs]           = 'work/ang_refs_{**[iter]}'                  ; Reference angle file      (one/iter)
 GLO [iter_sel_refangs]       = 'work/sel_ang_refs_{**[iter]}'              ; Ref. angle selection file (one/iter)
   
 GLO [next_u_fsc]             = 'final/fscdoc_u_{**[next-iter]}'            ; Merged unmasked FSC curve doc file (one/iter)
 GLO [next_m_fsc]             = 'final/fscdoc_m_{**[next-iter]}'            ; Merged masked   FSC curve doc file (one/iter)

 GLO [iter_resol]             = 'final/resolutions'                         ; Overall resolution doc file (one)
       
 GLO [img_ang_vora]           = 'final/angvora_{**[iter]}_{***[grp]}'       ; OPTIONAL, Small angle refinement ref. angles        (one/group/iter)
 GLO [temp_ref_projs]         = '_5@'                                       ; OPTIONAL, Small angle refinement local scratch file (deleted)
 
 GLO [enhance_doc]            = 'work/enhance_doc_{**[next-iter]}'          ; OPTIONAL, Enhancement doc file output      (one/iter)

 GLO [ref_rings]              = 'work/SCR_{**[iter]}_{***[grp]}'            ; OPTIONAL, Reference rings files output     (one/group/iter)
 GLO [wait_file]              = 'jnk_waited_***'                            ; OPTIONAL, Created when local copy finished (one/group)

 GLO [finished_file]          = 'jnk_sync_{****[rn]}_'                      ; OPTIONAL, Created when parallel segment finished (one/group)

 GLO [temp_in_images]         = '_8@'                                       ; OPTIONAL, Used by alignment & back projection internally
 GLO [temp_out_images]        = 'work/dala_{***[grp]}@'                     ; OPTIONAL, Used if [incore-yn] == 0  or small angle ref.(deleted)

 ; ----------------- END BATCH HEADER ---------------------------------

 ; Read some reconstruction parmeters from doc file

 UD 5, [sp_pixsiz]                     ; Get pixelsize (A)   
   [params]                            ; Parameter doc. file

 UD 6, [sp_kev]                        ; Electron energy (kV)
   [params]                            ; Parameter doc. file

 UD 17, [sp_winsiz]                    ; Get windowsize (pixels), used to find projection radius 
   [params]                            ; Parameter doc. file

 UD E                                  ; End params doc. file usage

 ; ---- Should not need to alter following parameters --------------------------

 ; Calculate lambda (A) from electron voltage now 
 [sp_lambda] = 12.398 / SQR([sp_kev] * (1022.0 + [sp_kev]))

 [r2]  = INT([diam]/(2.0*[sp_pixsiz])) ; Alignment radius (pixels) used in alignment search

 ; Ensure that sum of alignment radius + translation is within window dimensions 
 [ring-sh] = [r2] + [alignsh]          ; Last ring + translation step
 [maxrad]  = INT([sp_winsiz]/2) - 1    ; Max. radius of object in window

 IF ( [ring-sh] >= [maxrad] ) THEN
   ; Must reduce radius of outer ring, not translation step
   [r2] = [maxrad] - [alignsh] - 2     ; Reduces rotational search radius 
 ENDIF

 [prj-radius] = INT(([win-frac]*[sp_winsiz])/2.0 )  ; Convert fraction to pixel radius

 RE
 ; </pre></body></html>
