 ; <html><head><title>Seperate good particles by view</title></head><body><pre>
 ;
 ; PURPOSE:   Seperate good particles by view
 ;            Useful for pre-existing good-particle lists
 ;
 ; USAGE:     clean ; ./spider spi/dat @intersect-byview
 ;
 ; REQUIRES:  spider/docs/techs/recon1/Procs/verify-settings.spi
 ;
 ; INPUTS:  (Where *** denotes group,  ### denotes view,   ??? denotes class)
 ;   [ref_view_list]       = 'sel_proj'                          ; List of projection views            (one)
 ;   [prj_dir]             = 'views/prj###'                      ; View sub-directories                (one/view)
 ;   [view_list]           = 'views/prj###/sel_part_byv'         ; Total particle selection files      (one/view)
 ;
 ; If writing average images:
 ;   [params]              = '../params'                         ; Parameter doc file                  (one)
 ;   [aligned_images]      = '../Alignment/output/dala_01_***@'  ; Aligned-images                      (one/group)
 ;
 ; OUTPUTS:  
 ;   [good_particles]      = 'views/prj###/sel_part_byv_good'    ; Good-particle list                  (one/view)
 ;   [bad_particles]       = 'views/prj###/sel_part_byv_bad'     ; Sorted bad-particle list            (one/view) 
 ;   [parts_vsview_good]   = 'views/parts_vsview_good'           ; Total # of good particles           (one/view)
 ;   [good_view_avg]       = 'views/goodavg'                     ; OPTIONAL good view-average stack    (one/view)
 ;
 ; ---------------------- Parameters  ----------------------

 [saveAvgYN]  = 1     ; Flag to save unfiltered view-average (1 == save, slow)

 ; ------------------------ Inputs ------------------------
 
 [combined_part_list] = '../Averages/sel_part_combined_good'    ; Combined list of particles (one)
 
 ; ------------------- END BATCH HEADER -------------------

 MD
   TR OFF                                    ; Decrease results file output
 MD
   VB OFF                                    ; Decrease results file output

 ; Set common filenames & parameters
 @verify-settings

 ; Set temporary filenames

 [temp_goodbyview_unsorted] = 'tmp_goodbyview_3_ccrot'
 [temp_badbyview_unsort]    = 'tmp_badbyview_1_unsort'
 [temp_fullsize_stack]      = '_1'
 [temp_variance_incore]     = '_3'

 SYS
   echo 
   
 ; Make circular mask
 IF ( [saveAvgYN]  > 0 ) THEN
   SYS
     echo "Will write averages" ; echo
    
   ; Get parameters
   UD 17, [windowSize]
     [params]
   UD E

   [maskRadius] = [windowSize]/2
    
   DE
     [good_view_avg]@
 
 ELSE
   SYS
     echo "Will not write averages" ; echo
 ENDIF

 ; Prepare output-stats doc
 DE
   [parts_vsview_good]
 SD /        #KEPT      GOODCLASSES    PREVERIFY      PERCENT
   [parts_vsview_good]

 ; Initialize total kept-particle counter
 [kept-parts] = 0

 ; Get number of reference-views
 UD N [num-refs]
   [ref_view_list]

 ; Loop through reference-views
 DO [view-key] = 1,[num-refs]
 
  ; Get view #
   UD IC [view-key],[view]
     [ref_view_list]

   
   ; CHECK IF THERE ARE ANY PARTICLES

   ; Look for selection file
   IQ FI [sel-exists]
     [view_list][view]

   ; If no selection file
   IF ( [sel-exists] == 0 ) THEN
     SYS
       echo " View: {%I4%[view]}   No particles found "

     [tot-view-parts]   = 0
     [good-class-parts] = 0
     [goodViewParts]    = 0
     [fraction-kept]    = 0

     SYS
       touch [good_particles][view].$DATEXT
     ; Downstream procedures will look for this file

     GOTO LB7
   ENDIF


   ; Get total number of particles in current reference view
   UD N [tot-view-parts]
     [view_list][view]

   ; Intersect view list with good-particle list
   DOC AND
     [view_list][view]             ; View particle selection file          (input)
     [combined_part_list]          ; Combined good-particle selection file (input)
     [temp_goodbyview_unsorted]    ; File    (output)
     2                             ; Column # to find intersection: global#

   DE
     [good_particles][view]         ; File    (removed)
   SD /     VIEW_WIN     GLOBAL_NUM    GRP_WIN        CCROT       MIRROR       GRP_NUM    VIEW
     [good_particles][view]         ; File    (output)
   SD E
     [good_particles][view]         ; File    (closed)

   ; Sort good particles by CCC, Append to labeled header
   DOC SORT A
     [temp_goodbyview_unsorted]
     [good_particles][view]         ; File      (output)
     -4                             ; Column # to sort: CCROT, Reverse sort order
     Y                              ; Renumber keys 

   ; Clean up
   DE
     [temp_goodbyview_unsorted]         ; File    (removed)
     
   ; Get #good particles
   UD N [goodViewParts]
     [good_particles][view]


   ; CREATED SORTED BAD-PARTICLE LIST

   ; Create bad-particle list
   DOC SUBTRACT
     [view_list][view]          ; Re-keyed total-particle selection doc (w/CCC) (input)
     [good_particles][view]     ; Good-particle selection doc, no CCC           (input)
     [temp_badbyview_unsort]    ; Bad-particle selection doc, unrenumbered      (output)
     1                          ; Column # to subtract: view-slice#

   DE
     [bad_particles][view]
   
   ; Get # of bad particles
   UD N [bad-parts]
     [temp_badbyview_unsort]

   IF ( [bad-parts] > 0 ) THEN
     ; Sort bad particles by CCC, from highest to lowest
     SD /     VIEW_WIN     GLOBAL_NUM    GRP_WIN        CCROT       MIRROR       GRP_NUM    VIEW
       [bad_particles][view]   ; File    (output)
     SD E
       [bad_particles][view]   ; File    (closed)

     DOC SORT A
       [temp_badbyview_unsort]
       [bad_particles][view]   ; File      (output)
       -4                      ; Column# to sort: CCROT, Reverse sort
       Y                       ; Renumber keys
   ENDIF

   ; Clean up
   DE
     [temp_badbyview_unsort]

    ; Calculate percentage kept
   IF ( [tot-view-parts] > 0 )  [fraction-kept] = 100*[goodViewParts]/[tot-view-parts]

   
   LB7  ; Jump here if no selection file 

   
   IF ( [saveAvgYN]  > 0 ) THEN
     IF ( [goodViewParts] > 0 ) THEN
       DE
         [temp_fullsize_stack]@        ; Stack     (removed)

       MS
         [temp_fullsize_stack]@        ; Stack     (output)
         [windowSize],[windowSize]     ; Dimensions
         [goodViewParts]               ; Max image allowed
         
       ; Loop through particles
       DO LB62 [pkey] = 1,[goodViewParts]
       
         ; Get global#, group#, group-slice#, and mirroring
         UD IC [pkey], [viewWin],[gloNum],[grpWin],[ccrot],[mir],[grp]
           [good_particles][view]
         
         ; Mirror, if necessary
         IF ( [mir] < 0 ) THEN
           MR
             [aligned_images][grp][grpWin]           ; Image          (input)
             [temp_fullsize_stack]@{******[pkey]}    ; Mirrored image (output)
             Y                                       ; Mirror around y-axis
         ELSE
           CP
             [aligned_images][grp][grpWin]
             [temp_fullsize_stack]@{******[pkey]}
         ENDIF
         
       LB62
       ; End particle-loop
       
       ; Close docs
       UD ICE
         [good_particles][view]
       
       ; Average images
       AS R
         [temp_fullsize_stack]@******     ; File          (input)
         1-[goodViewParts]                ; Image range
         A                                ; All particles
         [good_view_avg]@{***[view]}      ; Average file  (output)
         [temp_variance_incore]           ; variance  (output, not saved)
     ENDIF
   ENDIF

   SYS
     echo " View: {%I4%[view]}   Found {%i0%[goodViewParts]} good particles"
   
   ; Write to stats doc
   SD [view], [goodViewParts],[good-class-parts],[tot-view-parts],[fraction-kept]
     [parts_vsview_good]

   ; Increment total kept-particle counter
   [kept-parts] = [kept-parts] + [goodViewParts]
 ENDDO                       ; End view-loop -----------------

 ; Close docs
 UD ICE
   [ref_view_list]

 [dummy] = -[num-refs]     ; Dummy variable
 SD /         GOODPARTICLES
   [parts_vsview_good]     ; File    (output)
 SD [dummy], [kept-parts]  ; File    (output)
   [parts_vsview_good]
 SD E
   [parts_vsview_good]     ; File    (closed)

 SYS
   echo ; echo -n " Done, kept: {%I0%[kept-parts]} particles    "; date ; echo

 EN D

 ; Modified 2016-05-31
 ;    2016-05-16 (trs) -- adapted from verify-combine-classes.spi

 ; </pre></body></html>
