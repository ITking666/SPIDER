head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2016.03.25.18.26.12;	author leith;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@ ; <html><head><title>Restacks particles and optionally applies CTF correction</title></head><body><pre>
 ;
 ; PURPOSE: Normalizes particles to average of zero and standard devaiation of one.
 ;          Operates on a group selection file and particle selection files with stacked particles
 ;  
 ; SOURCE:  spider/docs/techs/recon1/Procs/normalize.spi  
 ; 
 ; USAGE:   clean ; spider spi/dat @@normalize

 ; ------------------- Parameters -------------------


 ; ------------------ Input files -----------------------

 [in _dir]    = 'win_1'                 ; Input directory

 [sel_grp]    = '[in _dir]/sel_group'      ; Group selection file     (one)

 [sel_part]   = '[in _dir]/sel_part_****'  ; Particle selection file  (one/group)

 [old_stack]  = '[in _dir]/data_***@@*****'  ; Existing particle stack  (one/group)

 ; ----------------- Output files -----------------------

 [out_dir]    = 'jnkwin_2'                   ; Output directory            

 [new_stack]  = '[out_dir]/data_***@@*****'   ; New particle stacks      (one/group)

 ; -------------- END BATCH HEADER -------------------------------

 MD                                 ; Skip unnecessary output 
   VB OFF
 MD                                 ; Skip unnecessary output 
   TR OFF

 SYS                                ; Create output directory if needed
   mkdir -p [out_dir]

 [ngrp] = 0                         ; Initialize total groups  
 [ntot] = 0                         ; Initialize total particles

 DO                                 ; Loop over all  groups -----------------
   UD NEXT [key], [grp]             ; Get group number
     [sel_grp]                      ; Group selection file   (input)
   IF ( [key] <= 0 ) EXIT

   ; Count number of groups
   [ngrp] = [ngrp] + 1        

   FI H [maxim]
     [old_stack][grp]
     MAXIM

   ; Count number of selected particles
   [ntot] = [ntot] + [maxim]   
     
   SYS
     echo " Particles:: {%I0%[maxim]} " ; echo

   DO   [part]=1,[maxim]            ; Loop over all particles in group -----------

     !UD NEXT [key], [part]         ; Get next input particle number
     !  [sel_part][grp]             ; Particle selection file    (input)
     !IF ( [key] <= 0) EXIT
     !; Count number of selected particles
     ![ntot] = [ntot] + 1        

     FI H [min],[max],[av],[std]
       [old_stack][grp][part]
       MIN,MAX,AV,SIG

     AR 
       [old_stack][grp][part]
       [new_stack][grp][part]
       (P1-[av])/[std]

   ENDDO                          ; End loop over particles ------------

   UD NEXT E                      ; (Goes into infinite loop without this)
     [sel_part][grp]

   SYS
     echo "  Groups: {%I0%[ngrp]}   Particles: {%I0%[ntot]} " ; echo

 ENDDO                            ; End loop over groups ------------------
   
 SYS
   echo "  Groups: {%I0%[ngrp]}   Particles: {%I0%[ntot]} " ; echo

 EN
 ; </pre></body></html>
@
