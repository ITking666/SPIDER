head	1.10;
access;
symbols
	Pre_gold:1.8;
locks;
comment	@# @;


1.10
date	2016.07.05.14.47.12;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2016.07.01.16.03.29;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2013.12.13.16.28.54;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2013.12.05.19.37.24;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2013.11.20.16.43.53;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2013.11.17.20.57.46;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2013.11.15.18.48.30;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2013.11.08.19.26.58;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.19.18.33.14;	author tapu;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.23.02.47.44;	author tapu;	state Exp;
branches;
next	;


desc
@new file -- assigns global particle number
@


1.10
log
@cosmetic
@
text
@ ; <html><head><title>Create new particle selection doc files</title></head><body><pre>
 ;
 ; SOURCE:  spider/docs/techs/recon1/Procs/number-parts.spi     Jul 2013 ArDean Leith
 ;
 ; PURPOSE: Create new particle selection doc files listing the verified particle numbers.
 ;          Optionally stores project ID, micrograph number, original window number, and
 ;          a new global particle number in image file header. 
 ;          This procedure does NOT restack images, it just creates particle selection doc files.
 ;
 ; USAGE:   clean ; spider spi/dat @@number-parts

 ; ------------------- Parameters -------------------

 [projid]         = 1      ; Project id number  (arbitrary)

 [first-global]   = 1      ; First global particle number

 [max-particles]  = 0      ; Max number of particles/micrograph (0 == keep all)

 [labelheader-yn] = 1      ; Put label in the image header? (0 == no)

 ; --------------------- Inputs ---------------------

 [sel_micrograph] = '../sel_micrograph'        ; Micrograph selection list   (one)

;[old_sel_part]   = 'win/sel_part_****'        ; Original        particle selection files (one/micrograph)
 [old_sel_part]   = 'win/sel_good_****'        ; Visually picked particle selection files (one/micrograph)

 [win_stacks]     = 'win/data_bymic_****'      ; OPTIONAL Micrograph stacks (Used if labelling image header)

 ; --------------------- Output ---------------------

 [good_dir]       = 'good'                     ; New selection doc files directory (one)

 [new_sel_part]   = '[good_dir]/sel_part_****' ; Particle selection doc files  (one/micrograph)

 [micwin2global]  = 'win/micwin2glonum_****'   ; Global particle lookup tables (one/micrograph)

 [global2micwin]  = 'win/glonum2micwin'        ; Global particle lookup tables (one)
 
 [summary_doc]    = 'percent_selected'         ; Summary doc file              (one)

 ; ---------------- END BATCH HEADER ----------------

 ; Temporary file
 [temp_old_doc_nodupes] = 'tmpgood_nodupes'

 DE                                 ; Clean up pre-existing file
   [summary_doc]                    ; Doc file        (removed)

 SD /       MIC_NUM     KEPT_PARTS    TOTAL_PARTS      %_KEPT
   [summary_doc]                    ; Doc file        (output)

 DE                                 ; Clean up pre-existing file
   [global2micwin]                  ; Doc file        (removed)

 SD / KEY: GLOBAL_NUM   REG: MIC-NUM   MIC-WIN 
   [global2micwin]                  ; Global particle lookup table (output)

 ; Initialize global-particle counter
 [global-num] = [first-global] - 1

 IF ( [labelheader-yn] >= 1) THEN
   SYS
     echo "  Placing global particle # in image header" ; echo 
 ELSE
   SYS
     echo "  Not placing global particle # in image header" ; echo 
 ENDIF

 SYS                                 ; Create directory if needed
   mkdir -p [good_dir] 

 ; Get number of micrographs
 UD N [num-mics]                     ; Get number
   [sel_micrograph]                  ; Doc file        (input)  

 DO [mic-key]=1,[num-mics]           ; Loop over all all micrographs ----------

   UD IC [mic-key], [mic]            ; Get micrograph number
     [sel_micrograph]                ; Micrograph selection file (input)

   ; Delete pre-existing files and label new files
   DE
     [micwin2global][mic]            ; Doc file        (removed)
   ; Label for new global number doc file
   SD / KEY: WIN_NUM    REG:  GLOBAL-NUM    MICROGRAPH  
     [micwin2global][mic]            ; Doc file        (output)

   DE
     [new_sel_part][mic]             ; Doc file        (removed)
   SD /         WIN         MIC_WIN         MIC      GLOBAL_NUM        GRP
     [new_sel_part][mic]             ; Doc file        (output)

   ; Get number of particles including duplicates
   UD N [tot-parts]
     [old_sel_part][mic]             ; Doc file        (input)

   ; Remove duplicates and sort
   AT IT                             ; Sort doc file
     [old_sel_part][mic]             ; Doc file        (input)
     [temp_old_doc_nodupes]          ; Doc file        (output)

   ; Get # particles kept
   UD N [num-particles]              ; Get # particles
     [temp_old_doc_nodupes]          ; Doc file        (input)   

   ; Limit # particles/micrograph if desired
   IF ([max-particles] > 0) THEN
     IF ( [num-particles] > [max-particles] ) [num-particles] = [max-particles]
   ENDIF

   ; Loop through all particles for this micrograph --------------------
   DO [p-key] = 1,[num-particles]

     ; Read micrograph window #
     UD IC [p-key], [win]
       [temp_old_doc_nodupes]        ; Doc file        (input)               ;  

     ; Increment global #
     [global-num] = [global-num] + 1

     ; Write global # micrograph to global-particle lookup table
     SD [p-key], [global-num], [mic]
       [micwin2global][mic]          ; Doc file        (output)
        
     SD [global-num],[mic],[win]
       [global2micwin]               ; Global particle lookup table (output)

    ; Write details to particle selection file
     SD [p-key],[p-key],[win],[mic],[global-num],  [mic]
       [new_sel_part][mic]                 ; Doc file        (output)
        
     IF ( [labelheader-yn] >= 1 ) THEN

        ; Put global # into image header
        ST H                               ; Set header values
          [win_stacks]@@****[mic][p-key]    ; Image file   (input)
          PROJ,MIC,NUM,GLONUM              ; Header locations
          [projid],[mic],[win],[global-num]  ; Values

     ENDIF
   ENDDO                              ; End particle-loop

   ; Close docs
   UD ICE                             ; Close document file
     [temp_old_doc_nodupes]           ; Doc file        (closed) 
   SD E                               ; Close document file
     [micwin2global][mic]             ; Doc file        (closed)
   SD E                               ; Close document file
     [new_sel_part][mic]              ; Doc file        (closed)
   DE                                 ; Delete document file
     [temp_old_doc_nodupes]           ; Doc file        (removed)

   ; Count # of particles
   UD N [kept]                        ; Get # of particles
     [new_sel_part][mic]              ; Doc file        (input)

   SYS
     echo "  Kept: {%I6%[kept]} particles from micrograph: {%I4%[mic]}"

   [percent-kept] = 100 * [kept]/[tot-parts]
   ; Maybe should trap for zero someday

   ; Write to summary doc
   SD [mic-key], [mic],[kept],[tot-parts],[percent-kept]
     [summary_doc]                  ; Doc file        (output)
 ENDDO                              ; End micrograph loop

 UD ICE                             ; Close document file
   [sel_micrograph]                 ; Doc file        (closed)

 SD /          MICROGRAPHS   TOTAL_PARTS
   [summary_doc]                    ; Doc file        (output)
 SD -1, [num-mics],[global-num]
   [summary_doc]                    ; Doc file        (output)
 SD E                               ; Close document file
   [summary_doc]                    ; Doc file        (output)
 SD E                               ; Close document file
   [global2micwin]                  ; Doc file        (closed) 

 SYS
   echo ; echo "  Kept: {%I0%[global-num]} particles from: {%I0%[num-mics]} micrographs" ; echo 

 EN

 ; Modified 2013-10-26
 ;    2013-10-26 (agl) -- Added current group col. to particle selection files
 ;    2013-10-16 (agl) -- Syntax modernized, file names changed
 ;    2012-07-19 (trs) -- Creates output directory if needed
 ;    2012-05-01 (trs) -- Optionally writes global particle number to header position 42
 ;    2012-04-05 (trs) -- Doesn't use output from pnums.spi anymore
 ;    2012-04-05 (trs) -- Adapted from listallparticles.spi
 ;    2010-09-02 (trs & ay) --  Trap for >999 micrographs for 'SD [dummy]' line
 ;    2009-10-16 (trs) -- Removed option for unstacked images
 ;    2008-10-03 (trs) -- Added output file micwin2global
 ;    2008-10-03 (trs) -- Assigns global particle number
 ;    2007-12-17 (trs) -- Optional parameter for maximum number of particles per micrograph
 ;    2007-10-10 (trs) -- Gets number of micrographs from SEL_MICROGRAPH 
 ; </pre></body></html>
@


1.9
log
@good/good****'            ; Hand-picked particle selection file (one/micrograph)
< ;; [old_sel_part]   = 'win/sel_part_****'
@
text
@d14 1
a14 1
 [projid]           = 1      ; Project id number  (arbitrary)
@


1.8
log
@Hand-picked particle sele.... tapu
@
text
@d14 1
a14 1
 [proj]           = 1      ; Project id number  (arbitrary)
d24 1
a24 1
 [sel_micrograph] = '../sel_micrograph'        ; Micrograph selection list (one)
d26 2
a27 2
 [old_sel_part]   = 'good/good****'            ; Hand-picked particle selection file (one/micrograph)
;; [old_sel_part]   = 'win/sel_part_****'        ; Hand-picked particle selection file (one/micrograph)
d33 1
a33 1
 [good_dir]       = 'good'                     ; Selection doc files directory (one)
d41 1
a41 1
 [summary_doc]    = 'percent_selected'         ; Summary doc file             (one)
d65 1
a65 1
     echo " Placing global particle # in image header" ; echo 
d68 1
a68 1
     echo " Not placing global particle # in image header" ; echo 
d140 1
a140 1
          [proj],[mic],[win],[global-num]  ; Values
d160 1
a160 1
     echo " Kept: {%I6%[kept]} particles from micrograph: {%I4%[mic]}"
d183 1
a183 1
   echo ; echo " Kept: {%I0%[global-num]} particles from: {%I0%[num-mics]} micrographs" ; echo 
d188 12
a199 12
 ;    2013-10-26 (agl) -- added current group col. to particle selection files
 ;    2013-10-16 (agl) -- syntax modernized, file names changed
 ;    2012-07-19 (trs) -- creates output directory if needed
 ;    2012-05-01 (trs) -- optionally writes global particle number to header position 42
 ;    2012-04-05 (trs) -- doesn't use output from pnums.spi anymore
 ;    2012-04-05 (trs) -- adapted from listallparticles.spi
 ;    2010-09-02 (trs & ay) --  trap for >999 micrographs for 'SD [dummy]' line
 ;    2009-10-16 (trs) -- removed option for unstacked images
 ;    2008-10-03 (trs) -- added output file micwin2global
 ;    2008-10-03 (trs) -- assigns global particle number
 ;    2007-12-17 (trs) -- optional parameter for maximum number of particles per micrograph
 ;    2007-10-10 (trs) -- gets number of micrographs from SEL_MICROGRAPH 
@


1.7
log
@comment
@
text
@d26 2
a27 2
 [old_sel_part]   = 'good/ngood***'            ; Hand-picked particle selection file (one/micrograph)
![old_sel_part]   = 'win/sel_part_****'        ; Auto-picked particle selection file (one/micrograph)
d187 1
a187 1
 ; Modified 2013-10-16
@


1.6
log
@cosmetic
@
text
@d27 1
a27 1
![old_sel_part]   = 'win/sel_part_****'        ; Hand-picked particle selection file (one/micrograph)
@


1.5
log
@new_name
@
text
@d24 1
a24 1
 [sel_micrograph] = '../sel_micrograph'     ; Micrograph selection list (one)
d26 2
a27 3
![old_sel_part]   = 'win/'                  ; Automatically picked particle selection file
[old_sel_part]   = 'good/ngood***'         ; Hand-picked particle selection file (one/micrograph)
! [old_sel_part]   = 'win/sel_part_****'     ; Hand-picked particle selection file (one/micrograph)
d29 1
a29 2
![win_stacks]     = 'win/winser_****'       ; OPTIONAL Micrograph stacks (used if labelling image header)
 [win_stacks]     = 'win/data_bymic_****'   ; OPTIONAL Micrograph stacks (used if labelling image header)
@


1.4
log
@using_settings
@
text
@d3 1
a3 1
 ; SOURCE:  spider/docs/techs/recon1/Procs/number-particles.spi     Jul 2013 ArDean Leith
d10 1
a10 1
 ; USAGE:   clean ; spider spi/dat @@number-particles
@


1.3
log
@rewrite_syntax_filenames
@
text
@d27 2
a28 2
![old_sel_part]   = 'good/ngood***'         ; Hand-picked particle selection file (one/micrograph)
 [old_sel_part]   = 'win/sel_part_****'     ; Hand-picked particle selection file (one/micrograph)
@


1.2
log
@creates directories if needed
@
text
@d1 134
a134 105
; Creates list of all particles for each micrograph
;
; Adapted from listallparticles.spi

; ------------------- Parameters -------------------
[first-global]   = 1      ; first global particle number
[max-particles]  = 0      ; maximum number of particles per micrograph (0 == keep all)
[labelheader-yn] = 1      ; label image header? (0==no)

; --------------------- Inputs ---------------------
fr l
[micrograph_list]../sel_micrograph                  ; micrograph list
fr l
[old_mic_part_doc]good/good{****[mic-num]}          ; hand-picked selection doc
;[old_mic_part_doc]win/sel_particle_{****[mic-num]}  ; automatically picked selection doc
fr l
[micrograph_stacks]win/winser_{****[mic-num]}       ; micrograph stacks (used if labelling the image header)

; --------------------- Output ---------------------
fr l
[mic2global]win/globalmic{****[mic-num]}     ; micrograph-slice to global-particle lookup table
; KEY:MIC_SLICE /  GLOBAL_PARTICLE_NUM
fr l
[good_dir]good                               ; output directory for selection docs
fr l
[new_mic_part_doc]good/ngood{****[mic-num]}  ; filename template for list of particles, for each micrograph
;       MIC_SLICE    GLOBALPART
fr l
[summary_doc]percent_selected                ; summary doc
;        MIC_NUM      KEPTPARTS    TOTAL_PARTS   PERCENTKEPT

; ---------------- END BATCH HEADER ----------------

; Temporary files
fr l
[temp_old_doc_nodupes]tmpgood_nodupes

de  ; clean up pre-existing file
[summary_doc]
SD /       MIC_NUM      KEPTPARTS    TOTAL_PARTS   PERCENTKEPT
[summary_doc]

; initialize global-particle counter
[global-number] = [first-global] - 1

; write global# to image header
if([labelheader-yn].ge.1) then
    vm
    echo "Adding global particle number to header" ; echo
else
    vm
    echo "Not adding global particle number to header" ; echo
endif

vm
echo "if(! -d [good_dir]) mkdir -p [good_dir]"|csh

; get #micrographs
ud n,[num-mics]
[micrograph_list]  ; _sort

; loop through micrographs
do lb1 [mic-key]=1,[num-mics]
    ; get micrograph#
    ud ic [mic-key], [mic-num]
    [micrograph_list]  ; _sort
    
    ; delete pre-existing files
    de
    [mic2global]
    de
    [new_mic_part_doc]

    ; get #particles including duplicates
    ud n [tot-parts]
    [old_mic_part_doc]

    ; remove duplicates
    at it
    [old_mic_part_doc]
    [temp_old_doc_nodupes]

    ; get #particles-kept
    ud n [num-particles]
    [temp_old_doc_nodupes]  ; WAS [old_mic_part_doc]

    ; limit #particles/micrograph
    if([max-particles].gt.0) then
        if ([num-particles].gt.[max-particles]) then 
            [num-particles] = [max-particles]
        endif
    endif

    ; loop through particles
    do lb2 [particle-key] = 1,[num-particles]
        ; read micrograph-rank
        ud ic [particle-key], [micrograph-rank]
        [temp_old_doc_nodupes]  ; WAS [old_mic_part_doc]

        ; increment global#
        [global-number] = [global-number] + 1

        ; write to MIC2GLOBAL
        sd [micrograph-rank], [global-number]
        [mic2global]
d136 67
a202 74
        ; write global# to image header
        if([labelheader-yn].ge.1) then
            st     ; SeT
            [micrograph_stacks]@@{****[micrograph-rank]}
            B      ; _B_uffer
            (42)   ; header location
            [global-number]
        endif
    lb2
    ; end particle-loop

    ; close docs
    ud ice
    [temp_old_doc_nodupes]  ; WAS [old_mic_part_doc]
    de
    [temp_old_doc_nodupes]
    SD /     GLOBAL_PART
    [mic2global]
    sd e
    [mic2global]

    ; re-key MIC2GLOBAL
    doc key
    [mic2global]
    [new_mic_part_doc]
    SD /      MIC_SLICE    GLOBAL_PART
    [new_mic_part_doc]
    sd e
    [new_mic_part_doc]

    ; count #particles
    ud n [included-counter]
    [new_mic_part_doc]

    vm
    echo "Kept {****[included-counter]} particles from [old_mic_part_doc]"

    [percent-kept] = 100*[included-counter]/[tot-parts]
    ; maybe should trap for zero someday

    ; write to summary doc
    sd [mic-key], [mic-num],[included-counter],[tot-parts],[percent-kept]
    [summary_doc]
lb1
; end micrograph loop

; close document
ud ice
[micrograph_list]  ; _sort

[dummy] = -1
SD /          MICROGRAPHS   TOTAL_PARTS
[summary_doc]
sd [dummy], [num-mics],[global-number]
[summary_doc]
sd e
[summary_doc]

vm
echo ; echo "Done -- Kept {******[global-number]} particles from {*****[num-mics]} micrographs"

en d

; Modified 2012-07-19
;    2012-07-19 (trs) -- creates output directory if needed
;    2012-05-01 (trs) -- optionally writes global particle number to header position 42
;    2012-04-05 (trs) -- doesn't use output from pnums.spi anymore
;    2012-04-05 (trs) -- adapted from listallparticles.spi
;    2010-09-02 (trs & ay) --  trap for >999 micrographs for 'SD [dummy]' line
;    2009-10-16 (trs) -- removed option for unstacked images
;    2008-10-03 (trs) -- added output file mic2global
;    2008-10-03 (trs) -- assigns global particle number
;    2007-12-17 (trs) -- optional parameter for maximum number of particles per micrograph
;    2007-10-10 (trs) -- gets number of micrographs from SEL_MICROGRAPH 
@


1.1
log
@Initial revision
@
text
@d21 5
a28 3
[mic2global]win/globalmic{****[mic-num]}     ; micrograph-slice to global-particle lookup table
; KEY:MIC_SLICE /  GLOBAL_PARTICLE_NUM
fr l
d55 3
d170 2
a171 1
; Modified 2012-05-01
@
