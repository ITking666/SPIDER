head	1.61;
access;
symbols
	Pre_gold:1.57
	GPL_update:1.34
	pre_rewrite_2010:1.32
	pre_more_stack:1.28
	best-code:1.28
	no-named-regs:1.27
	pre_GPL:1.27
	tag_version1_0:1.27;
locks;
comment	@# @;


1.61
date	2016.03.25.18.45.19;	author leith;	state Exp;
branches;
next	1.60;

1.60
date	2016.03.10.20.28.25;	author leith;	state Exp;
branches;
next	1.59;

1.59
date	2016.03.08.20.50.44;	author leith;	state Exp;
branches;
next	1.58;

1.58
date	2016.02.09.20.31.59;	author leith;	state Exp;
branches;
next	1.57;

1.57
date	2016.01.08.16.06.06;	author leith;	state Exp;
branches;
next	1.56;

1.56
date	2014.09.08.17.51.51;	author leith;	state Exp;
branches;
next	1.55;

1.55
date	2014.08.05.16.01.29;	author leith;	state Exp;
branches;
next	1.54;

1.54
date	2014.08.05.15.26.57;	author leith;	state Exp;
branches;
next	1.53;

1.53
date	2014.05.19.12.36.07;	author leith;	state Exp;
branches;
next	1.52;

1.52
date	2014.05.08.14.48.14;	author leith;	state Exp;
branches;
next	1.51;

1.51
date	2014.05.01.14.57.33;	author leith;	state Exp;
branches;
next	1.50;

1.50
date	2014.04.18.17.59.13;	author leith;	state Exp;
branches;
next	1.49;

1.49
date	2013.11.08.19.28.14;	author leith;	state Exp;
branches;
next	1.48;

1.48
date	2012.09.19.15.51.08;	author leith;	state Exp;
branches;
next	1.47;

1.47
date	2012.09.18.18.59.59;	author leith;	state Exp;
branches;
next	1.46;

1.46
date	2012.09.18.18.45.27;	author leith;	state Exp;
branches;
next	1.45;

1.45
date	2012.09.05.17.47.41;	author leith;	state Exp;
branches;
next	1.44;

1.44
date	2012.08.01.17.54.32;	author leith;	state Exp;
branches;
next	1.43;

1.43
date	2012.03.14.17.47.06;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	2012.01.05.15.47.28;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	2011.09.22.17.47.21;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	2011.04.23.18.02.57;	author leith;	state Exp;
branches;
next	1.39;

1.39
date	2010.11.04.16.20.33;	author leith;	state Exp;
branches;
next	1.38;

1.38
date	2010.10.04.12.47.19;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2010.09.01.14.53.35;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2010.08.17.15.31.42;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2010.08.16.17.22.05;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2010.01.21.19.08.31;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2010.01.19.19.08.41;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2009.02.10.15.24.56;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2007.02.02.15.28.02;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2007.01.19.14.28.12;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2007.01.17.16.35.13;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2006.01.04.14.29.16;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2005.02.16.18.05.38;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2005.02.15.17.00.47;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2005.02.15.16.57.27;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2005.02.10.17.07.27;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2005.02.02.16.41.06;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2005.02.01.16.25.05;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2005.01.27.19.04.55;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2004.10.12.16.20.46;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2004.10.07.16.11.03;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2004.10.04.19.30.14;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2004.10.04.12.20.03;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2004.09.30.13.06.07;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2004.09.13.13.21.29;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2004.09.10.19.35.24;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2004.08.18.13.44.44;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2004.07.26.17.42.43;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2004.07.12.16.27.19;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2004.06.29.15.43.44;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2004.03.18.15.13.29;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.21.15.28.23;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.15.17.06.20;	author bbaxter;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.21.13.02.39;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.05.20.31.19;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.16.19.09.03;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.08.18.17.29;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.31.16.26.28;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.28.17.10.33;	author leith;	state Exp;
branches;
next	;


desc
@@


1.61
log
@[iter-end] parameter
@
text
@ ([ang-step],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-type],[iter-end])

 ; <html><head><title>Small angle refinement group loop</title></head><body><pre>
 ;
 ; SOURCE: spider/docs/techs/recon1/Procs/smangloop.spi
 ;         New                                 ArDean Leith  Nov 2002
 ;         Rewrite                             ArDean Leith  Oct 2004
 ;         Avg CCROT degredations              ArDean Leith  Feb 2005
 ;         []                                  ArDean Leith  Dec 2005
 ;         More stacks                         ArDean Leith  Dec 2006
 ;         Removed iter1 parameter             ArDean Leith  Feb 2007
 ;         Filenames & UD NEXT                 ArDean Leith  Dec 2009
 ;         COG centering removed               ArDean Leith  Sep 2010
 ;         TF COR                              ArDean Leith  Nov 2010
 ;         For CTF corrected images            ArDean Leith  Oct 2013
 ;         For gold standard reconstruction    ArDean Leith  May 2014
 ; 
 ; PURPOSE: Small angle refinement group loop.  Runs for each group on each iteration.
 ;          Finds parameters ('AP REF') which align experimental images with 
 ;          projections from current reference volume,
 ;          rotationally aligns ('RT SF') images ,  and 
 ;          backprojects ('BP **') images into new volume.

 ; CALLED FROM: <a href="./pub_refine_start.spi">pub_refine_start</a> OR   
 ;              <a href="./refine.spi">refine.spi</a>  
 ;
 ; REGISTERS AND FILES ARE SET IN: <a href="refine settings.spi">refine settings.spi</a>
 ;
 ; INPUT REGISTERS:
 ;    [ang-step]             Angular step                    
 ;    [r2]                   Pixel radius of object used in alignment
 ;    [alignsh]              Shift allowed is +-[alignsh]
 ;    [prj-radius]           Radius (pixels) of structure for projection
 ;    [iter]                 Alignment step iteration counter  
 ;    [grp]                  Current defocus group                      
 ;    [pixsiz]               Pixel size                              
 ;    [bp-type]              Type of 'back projection'                              
 ;
 ;   '##' denotes iteration,  '##+' denotes next iteration, and '***' denotes group
 ; INPUT FILES:
 ;    [sel_parts_s]          input/select_***        Group particle selection files  (one/group)
 ;    [iter_refangs]         work/ref_angs_##        Ref. angles doc file            (one/iteration)       
 ;    [unaligned_images]     input/data_***          Unaligned stacked image files   (one-stack/group)
 ;    [ref_projs_s]          work/refproj_##_s@@      Reference projections           (two/iteration)
 ;    [group_align_s]        final/align##_***_s@@    Alignment parameter doc files   (two/iteration/group)    
 ;
 ; OUTPUT FILES:
 ;    [next_group_align_s]   final/align##+_***s@@    Alignment parameter doc files   (two/iteration/group)
 ;    [next_group_vol_s]     work/vol_##+_***_s@@     Group subset volumes            (two/iteration/group)
 ;    [next_group_vol]       work/vol##+_***         Reconstructed group volumes     (one/iteration/group)
 ;
 ;    [temp_out_images]      work/dala##+_***        Aligned stacked image file      (one/group)
 ;    [ang_vora]             final/angvora_##_***    Projection angles doc file      (one/group)        
 ;    [temp_ref_projs]       _5@@                     Reference projections           (created & deleted)
 ;
 ; INLINE BUFFERS USED: _5@@
 ;
 ; ----------------- END BATCH HEADER -------------------------------------

 SYS
   echo -n "  Starting: small-angle refine loop  Iteration: {%I0%[iter]}  Group:{%I3%[grp]} --- " ; date '+ %x  %X'

 [r1]        = 5.0                   ; First radius for 'AP REF' (Can alter this)
 [big_move]  = 1.5 * [ang-step]      ; Angular distance for big moves.
 [next-iter] = [iter]+1
 
 FI H [maxim],[nx],[ny]              ; Find total number of images (not [numparts])
   [unaligned_images]@@               ; Input file needed                  (input)
   MAXIM, NX, NY                     ; Max. image number, image size

 UD N [num-refs]                     ; Get number of reference images used
   [ang_voea]                        ; Reference images angles doc file (input)

 MS                                  ; Make MT inline stack for ref. projections
   [temp_ref_projs]                  ; Empty stack                        (output)
   [nx],[nx],1                       ; Image size
   [num-refs]                        ; Number of images allowed in stack

 MY FL                               ; Flush results file

 DE                                  ; Delete existing files  
   [next_group_align]_s1             ; Alignment parameter doc file   (deleted)
 DE                                  ; Delete existing files  
   [next_group_align]_s2             ; Alignment parameter doc file   (deleted)

 ; Make header for next group align doc files 
 SD /PSI, THE, PHI, REF, EXP, ANG, SX, SY, NPROJ, DIFF, CCROT, ANG, SX, SY, MIR-CC
    [next_group_align]_s1            ; Alignment parameter doc file   (output)
 SD /PSI, THE, PHI, REF, EXP, ANG, SX, SY, NPROJ, DIFF, CCROT, ANG, SX, SY, MIR-CC
    [next_group_align]_s2             ; Alignment parameter doc file   (output)

 [num-big]    = 0                    ; Number of angular changes above iter. stop limit
 [toobig]     = 0                    ; Not OK to stop iterating
 [sum-ccrot]  = 0.0                  ; Sum of CCROT correlation coefficients
 [num-degred] = 0.0                  ; Number of CCROT degredations
 [sum-degred] = 0.0                  ; Sum of CCROT degredations
 [num-impr]   = 0.0                  ; Number of CCROT improvements
 [sum-impr]   = 0.0                  ; Sum of CCROT improvements
 [sum-diff]   = 0.0
 [num-imgs]   = 0                    ; Number of images in current group

 DO [s] = 1,2                        ; Loop over resolution subsets ---------------

   DO                                ; Loop over all particles
     UD NEXT [key],[img]             ; Get particle number  
       [sel_parts_s]                 ; Group particle selection file   (input) 
     IF ( [key] <= 0 ) EXIT          ; End of images in selection doc file
 
     [num-imgs] = [num-imgs] + 1     ; # of images in current group

     ; Format of alignment parameters doc file is:
     ;         PSI,THE,PHI,           REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
     UD IC [img], [psi],[the],[phi],  [d],[exp], [d],[d],[d], [d],[d],[old-ccrot]
       [group_align_s]               ; Input alignment parameters doc file

     DE                              ; Delete  
       [ang_vora]                    ; angvora doc file                (removed)

     VO RAS                          ; Rotate projection dir.   
       [ang_voea]                    ; Relative angles file            (input)
       -[phi],-[the],-[psi]          ; Offset
       1, 0                          ; Psi set to zero
       [ang_vora]                    ; Doc file for angles to search   (output)

     ; Create stack holding set of reference projections from input volume.
     PJ 3Q                           ; Create ref. projections
      [vol]                          ; Current volume                  (input)  
      [prj-radius]                   ; Radius of computed object
      1-[num-refs]                   ; Ref. projection file numbers 
      [ang_vora]                     ; Angles in search area doc file  (input)
      [temp_ref_projs]******         ; Template for ref. projections   (output)

     ; Find ref. image matching exp. image.  Output to registers not doc file
     ;       PSI,THE,PHI,       REF#,EXP#, ANG,  SX, SY,    NPROJ,DIFF,     CCROT,  CURRENT_ALIGN
     AP REF  [psi],[the],[phi], [ref],[exp], [inp],[sx],[sy], [nproj],[diff], [ccrot], [t0],[t1],[t2],[t3]
       [temp_ref_projs]******         ; Template of existing ref. projections (input) 
       1-[num-refs])                  ; Ref. projection file numbers
       [alignsh]                      ; Shift search range
       [r1], [r2], 1                  ; First, last ring, & skip
       [ang_vora]                     ; Ref. angles file                   (input)
       SCR.{******[grp]}              ; No scratch file (usually will fit in-core)
       [unaligned_images]@@******      ; Original unaligned  image stack    (input)
       [img]                          ; Current exp. image file number
       [group_align_s]                ; Alignment parameters doc file      (input)
       0                              ; Angular projection restriction
       N, Y                           ; No mirrored projection check,  align first 

     ;         PSI,THE,PHI,         REF#,EXP#, ANG,  SX,  SY,   NPROJ,DIFF,CCROT
     SD [img], [psi],[the],[phi],  [ref],[img],[inp],[sx],[sy], [num-refs],[diff],[ccrot], [t0],[t1],[t2],[t3]
       [next_group_align_s]                              ; Next align. doc file (output)

     IF ( [ccrot] < [old-ccrot] ) THEN
       [sum-degred]=[sum-degred]+([old-ccrot]-[ccrot]) ; Sum average CCROT degredation
       [num-degred]=[num-degred]+1                     ; Increment   CCROT degredations counter
     ELSE
       [sum-impr] = [sum-impr]+([ccrot]-[old-ccrot])   ; Sum average CCROT improvement
       [num-impr] = [num-impr]+1                       ; Increment   CCROT improvements counter
     ENDIF

     IF ( [diff] > [big_move]) [num-big]=[num-big]+1   ; Increment large displacement counter
     [sum-ccrot] = [sum-ccrot]+[ccrot]                 ; Sum rotational CCC (for average).
     [sum-diff]  = [sum-diff]+[diff]                   ; Sum of angular differences
      
     ; Apply combined transformation to original particle image
     RT SF                                             ; Rotate & shift
       [unaligned_images]@@{******[img]}                ; Unaligned original images stack (input)
       [temp_out_images]{******[img]}                  ; Temp aligned exp. images stack  (output)
       [inp]                                           ; Inplane rotation angle
       [sx],[sy]                                       ; X & Y shift

   ENDDO                       ; End of loop over all particles --------------------

   ; Calculate new, refined subset volume using centered projections and 
   ; angles from align doc. file.  

   @@refine-bp([iter],[iter-end],[grp],[s], [bp-type],[prj-radius])

   UD ICE                      ; Close this file here
     [group_align_s]           ; Doc file                         (closed)                 

 ENDDO                         ; End of loop over resolution subsets ----------------------------

 DE
   [ang_vora]                  ; Doc file                         (removed)
 DE                            ; Delete
   [temp_ref_projs]            ; Ref. projections file            (removed)
 DE                            ; Delete
   [temp_out_images]@@          ; Aligned image stack              (removed)

 ; Find % of images showing excessive change in angular displacement
 [toobig]=100*[num-big]/[num-imgs]  ; % of images with excessive change in ang. displacement

 SYS
   echo " Iteration: {%I2%[iter]} Group: {%I3%[grp]}   Excessive changes: {%I3%[toobig]}%"

 [avg-ccrot]  = [sum-ccrot]/[num-imgs]                        ; Average CCROT 
 [avg-degred] = 0.0                                           ; Average CCROT degredation
 IF ( [num-degred] > 0)[avg-degred]=[sum-degred]/[num-degred] ; Average CCROT degredation
 [avg-impr]   = 0.0                                           ; Average CCROT improvement
 IF ([num-impr] > 0) [avg-impr] = [sum-impr]/[num-impr]       ; Average CCROT improvement
 [per-degred] = 100*[num-degred]/[num-imgs]                   ; Percent images with CCROT degredation
 [avg-diff]   = [sum-diff]/[num-imgs]                         ; Average angular difference

 SYS
   echo " CCROT degred.: {%I3%[per-degred]}%  Avg degred.: {%F8.2%[avg-degred]}  Avg improve: {%F8.2%[avg-impr]}"

 SD / %Large angles, Avg. Ang-diff,  Avg. CCROT, % degred.,  Avg degred.,  Avg improv.
   [next_group_align]                                         ; Alignment doc file   (output)
 SD -2, [toobig],[avg-diff],[avg-ccrot],[per-degred],[avg-degred],[avg-impr]
   [next_group_align]                                         ; Alignment doc file   (output)
 SD E                                                         ; Close doc file  
   [next_group_align]                                         ; Alignment doc file   (closed)
 
 RE
 ; </pre></body></html>

@


1.60
log
@rnamed converge_lim, [ang-step-sm] --> [ang-step]
@
text
@d1 1
a1 1
 ([ang-step],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-type])
d42 1
a42 1
 ;    [iter_refangs]         work/ang_refs_##        Ref. angles doc file            (one/iteration)       
d176 1
a176 1
   @@refine-bp([iter],[grp],[s], [bp-type],[prj-radius])
@


1.59
log
@refine-bp([next-iter] bug, comments
@
text
@d1 1
a1 1
 ([ang-step-sm],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-type])
d30 1
a30 1
 ;    [ang-step-sm]          Angular steps                    
d61 1
a61 1
   echo -n " Starting: small-angle refine loop  Iteration: {%I0%[iter]}  Group:{%I3%[grp]} --- " ; date '+ %x  %X'
d63 3
a65 3
 [r1]           = 5.0                ; First radius for 'AP REF' (Can alter this)
 [converge_lim] = 1.5*[ang-step-sm]  ; Angular distance limit for stopping iters (is GLOBAL).
 [next-iter]    = [iter]+1
d72 1
a72 1
   [iter_refangs]                    ; Reference images angles doc. file (input)
d117 1
a117 1
       [ang_vora]                ; angvora doc file                (removed)
d120 1
a120 1
       [iter_refangs]                ; Relative angles file            (input)
d160 1
a160 1
     IF ( [diff] > [converge_lim]) [num-big]=[num-big]+1  ; Increment large displacement counter
@


1.58
log
@Gold_standard
@
text
@d19 4
a22 2
 ;          Finds parameters to align images to projections from reference volume (AP REF),
 ;          aligns images (RT SF),  and backprojects images into new volume(BP **)
a40 1
 ;    [gmask]                final/gmask             Gaussian mask (from prepare)    (one)
a59 2
 !              UNTESTED !!!!!!!!!!!!!!!!!!!!!!!!!

d103 1
a103 1
 
d171 1
a171 7
     ; Soft masking of particle before back projection
     MUL 2
       [gmask]                                         ; Mask image                       (input)
       [temp_out_images]{*****[img]}                   ; Temp aligned exp. images stack   (input)
       [temp_out_images]{*****[img]}                   ; Temp aligned exp. images stack   (output)

   ENDDO                        ; End of loop over all particles --------------------
d176 1
a176 1
   @@refine-bp([next-iter],[grp],[s], [bp-type],[prj-radius])
@


1.57
log
@parameters use iter
@
text
@d1 1
a1 1
 ([ang-step],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-type])
d6 11
a16 10
 ;         New                              ArDean Leith  Nov 2002
 ;         Rewrite                          ArDean Leith  Oct 2004
 ;         Avg CCROT degredations           ArDean Leith  Feb 2005
 ;         []                               ArDean Leith  Dec 2005
 ;         More stacks                      ArDean Leith  Dec 2006
 ;         Removed iter1 parameter          ArDean Leith  Feb 2007
 ;         Filenames & UD NEXT              ArDean Leith  Dec 2009
 ;         COG centering removed            ArDean Leith  Sep 2010
 ;         TF COR                           ArDean Leith  Nov 2010
 ;         For CTF corrected images         ArDean Leith  Oct 2013
d20 2
a21 2
 ;          aligns images (RT SF),  backprojects images into new volume(BP **)
 ;
d28 8
a35 7
 ;   [r2]                      Radius (pixels) of the structure
 ;   [alignsh]                 Shift allowed is +-[alignsh]
 ;   [prj-radius]              Radius (pixels) of structure for projection
 ;   [iter]                    Alignment step iteration counter  
 ;   [grp]                     Current defocus group                      
 ;   [pixsiz]                  Pixel size                              
 ;   [bp-type]                 Type of 'back projection'                              
d37 1
a37 1
 ;  '##' denotes iteration,  '##+' denotes next iteration, and '***' denotes group
d39 6
a44 4
 ;   [sel_parts]               input/select_***        Particle selection doc file  (one)
 ;   [group_align]             final/align##+_***      Alignment parameter doc file (one/group)
 ;   [unaligned_images]        input/data***@@          Unaligned stacked image file (one/group) 
 ;   [iter_refangs]            work/ang_refs_##        Reference angles doc   file  (one)      
d47 7
a53 10
 ;   [next_group_align]        final/align##+_***      Alignment parameter doc file (one/group)
 ;   [next_group_vol]          work/vol##+_***         Reconstructed group volume   (one/group)
 ;
 ;   [temp_out_images]         work/dala##+_***        Aligned stacked image file   (one/group)
 ;   [img_ang_vora]            final/angvora_##_***    Projection angles doc file   (one/group)        
 ;
 ;   [temp_out_images]         work/dala##+_***        Aligned stacked images   (created & deleted)
 ;   [next_group_vol]_s1       work/vol_##+_***_s1     Volume subset            (created & deleted)
 ;   [next_group_vol]_s2       work/vol_##+_***_s2     Volume subset            (created & deleted)
 ;   [temp_ref_projs]          _5@@                     Reference projections    (created & deleted)
d59 2
d62 1
a62 1
   echo -n " Starting: refine-smangloop  Iteration: {%I0%[iter]}  Group:{%I3%[grp]} --- " ; date '+ %x  %X'
d64 3
a66 5
 [r1]        = 5.0                   ; First radius for 'AP REF' (Can alter this)
 [converg]   = 1.5*[ang-step]        ; Angular distance limit for stopping iters.
 [converg]                           ; Echo converg 

 [next-iter] = [iter]+1
a74 1

d80 1
a80 2
 DE                                  ; Remove existing align parameter doc file 
   [next_group_align]
d82 8
a89 1
 ; Make header for next group align doc file 
d91 1
a91 1
   [next_group_align]                ; Alignment angle doc file        (output)
d103 6
a108 6
 MY FL                               ; Flush results file

 DO                                  ; Loop over all particles
    UD NEXT [key],[img]              ; Get particle number  
      [sel_parts]                    ; Group particle selection file   (input) 
    IF ( [key] <= 0 ) EXIT           ; End of images in selection doc file
d110 1
a110 1
    [num-imgs] = [num-imgs] + 1      ; # of images in current group
d112 17
a128 17
    ; Format of alignment parameters doc file is:
    ;         PSI,THE,PHI,           REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
    UD IC [img], [psi],[the],[phi],  [d],[exp], [d],[d],[d], [d],[d],[old-ccrot]
      [group_align]                  ; Input alignment parameters doc file

    DE                               ; Delete  
      [img_ang_vora]                 ; angvora doc file                (removed)

    VO RAS                           ; Rotate projection dir.   
      [iter_refangs]                 ; Relative angles file            (input)
      -[phi],-[the],-[psi]           ; Offset
      1, 0                           ; Psi set to zero
      [img_ang_vora]                 ; Doc file for angles to search   (output)

    ; Create stack holding set of reference projections from input volume.
    PJ 3Q                            ; Create ref. projections
      [current_vol]                  ; Current volume                  (input)  
d131 1
a131 1
      [img_ang_vora]                 ; Angles in search area doc file  (input)
d134 30
a163 32
    MY FL                            ; Flush results file

    ; Find ref. image matching exp. image.  Output to registers not doc file
    ;       PSI,THE,PHI,       REF#,EXP#, ANG,  SX, SY,    NPROJ,DIFF,     CCROT,  CURRENT_ALIGN
    AP REF  [psi],[the],[phi], [ref],[exp], [inp],[sx],[sy], [nproj],[diff], [ccrot], [t0],[t1],[t2],[t3]
      [temp_ref_projs]******         ; Template of existing ref. projections (input) 
      1-[num-refs])                  ; Ref. projection file numbers
      [alignsh]                      ; Shift search range
      [r1], [r2], 1                  ; First, last ring, & skip
      [img_ang_vora]                 ; Ref. angles file                   (input)
      SCR.{******[grp]}              ; No scratch file (usually will fit in-core)
      [unaligned_images]@@******      ; Original unaligned  image stack    (input)
      [img]                          ; Current exp. image file number
      [group_align]                  ; Alignment parameters doc file      (input)
      0                              ; Angular projection restriction
      N,Y                            ; No mirrored projection check,  align first 

    ;         PSI,THE,PHI,         REF#,EXP#, ANG,  SX,  SY,   NPROJ,DIFF,CCROT
    SD [img], [psi],[the],[phi],  [ref],[img],[inp],[sx],[sy], [num-refs],[diff],[ccrot], [t0],[t1],[t2],[t3]
      [next_group_align]                              ; Next align. doc file (output)

    IF ( [ccrot] < [old-ccrot] ) THEN
      [sum-degred]=[sum-degred]+([old-ccrot]-[ccrot]) ; Sum average CCROT degredation
      [num-degred]=[num-degred]+1                     ; Increment   CCROT degredations counter
    ELSE
      [sum-impr] = [sum-impr]+([ccrot]-[old-ccrot])   ; Sum average CCROT improvement
      [num-impr] = [num-impr]+1                       ; Increment   CCROT improvements counter
    ENDIF

    IF ( [diff] > [converg] ) [num-big]=[num-big]+1   ; Increment large displacement counter
    [sum-ccrot] = [sum-ccrot]+[ccrot]                 ; Sum rotational CCC (for average).
    [sum-diff]  = [sum-diff]+[diff]                   ; Sum of angular differences
d165 17
a181 8
    ; Apply combined transformation to original particle image
    RT SF                                             ; Rotate & shift
      [unaligned_images]@@{******[img]}                ; Unaligned original images stack (input)
      [temp_out_images]{******[img]}                  ; Temp aligned exp. images stack  (output)
      [inp]                                           ; Inplane rotation angle
      [sx],[sy]                                       ; X & Y shift

 ENDDO                         ; End of loop over all particles --------------------
d183 1
a183 4
 UD ICE                        ; Close this file here
   [group_align]               ; Doc file                         (closed)                 
 DE
   [img_ang_vora]              ; Doc file                         (removed)
d185 2
a186 2
  ; Calculate new, refined volume using centered projections and 
 ; angles from align doc. file.  
d188 1
a188 1
 @@refine-bp([iter],[grp], [bp-type],[prj-radius])
d190 2
d193 1
a193 1
   [temp_ref_projs]            ; Ref. projections file             (removed)
d195 1
a195 11
   [temp_out_images]@@          ; Aligned image stack               (removed)

 IF ( [iter] > 1) THEN         ; Not first iteration
    DE                         ; Delete 
      [group_vol]              ; Previous group vol.               (removed)        
    DE                         ; Delete
      [group_vol]_s1           ; Previous subset 1 group vol.      (removed)
    DE                         ; Delete 
      [group_vol]_s2           ; Previous subset 2 group vol.      (removed)
 ENDIF

d198 1
a198 1
 [toobig]=100*[num-big]/[num-imgs]     ; % of images with excessive change in ang. displacement
d201 1
a201 1
   echo "  Iteration: {%I2%[iter]} Group: {%I3%[grp]}   Excessive changes: {%I3%[toobig]}%"
d212 1
a212 1
   echo "  CCROT degred.: {%I3%[per-degred]}%  Avg degred.: {%F8.2%[avg-degred]}  Avg improve: {%F8.2%[avg-impr]}"
d215 1
a215 1
   [next_group_align]                   ; Alignment doc file   (output)
d217 3
a219 3
   [next_group_align]                   ; Alignment doc file   (output)
 SD E                                   ; Close doc file  
   [next_group_align]                   ; Alignment doc file   (closed)
a221 1

@


1.56
log
@removed projection masking
@
text
@d74 1
a167 2
    ; Soft masking of particle before back projection (removed -not usefull)

d175 1
a175 2
 
 ; Calculate new, refined volume using centered projections and 
d178 1
a178 1
 @@refine-bp([next-iter],[grp], [bp-type],[prj-radius])
d199 1
a199 1
   echo " Iteration: {%I2%[iter]} Group: {%I3%[grp]}   Excessive changes: {%I3%[toobig]}%"
d210 1
a210 1
   echo " CCROT degred.: {%I3%[per-degred]}%  Avg degred.: {%F8.2%[avg-degred]}  Avg improve: {%F8.2%[avg-impr]}"
@


1.55
log
@reverted to non-gold
@
text
@a40 1
 ;   [gmask]                   final/gmask             Gaussian mask (from prepare) (one)
d167 1
a167 5
    ; Soft masking of particle before back projection
    MUL 2
      [gmask]                                         ; Mask image                       (input)
      [temp_out_images]{*****[img]}                   ; Temp aligned exp. images stack   (input)
      [temp_out_images]{*****[img]}                   ; Temp aligned exp. images stack   (output)
@


1.54
log
@improved
@
text
@d1 1
a1 1
 ([ang-step-sm],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-type])
d6 10
a15 11
 ;         New                                 ArDean Leith  Nov 2002
 ;         Rewrite                             ArDean Leith  Oct 2004
 ;         Avg CCROT degredations              ArDean Leith  Feb 2005
 ;         []                                  ArDean Leith  Dec 2005
 ;         More stacks                         ArDean Leith  Dec 2006
 ;         Removed iter1 parameter             ArDean Leith  Feb 2007
 ;         Filenames & UD NEXT                 ArDean Leith  Dec 2009
 ;         COG centering removed               ArDean Leith  Sep 2010
 ;         TF COR                              ArDean Leith  Nov 2010
 ;         For CTF corrected images            ArDean Leith  Oct 2013
 ;         For gold standard reconstruction    ArDean Leith  May 2014
d19 2
a20 2
 ;          aligns images (RT SF),  and backprojects images into new volume(BP **)

d27 7
a33 8
 ;    [ang-step-sm]          Angular steps                    
 ;    [r2]                   Pixel radius of object used in alignment
 ;    [alignsh]              Shift allowed is +-[alignsh]
 ;    [prj-radius]           Radius (pixels) of structure for projection
 ;    [iter]                 Alignment step iteration counter  
 ;    [grp]                  Current defocus group                      
 ;    [pixsiz]               Pixel size                              
 ;    [bp-type]              Type of 'back projection'                              
d35 1
a35 1
 ;   '##' denotes iteration,  '##+' denotes next iteration, and '***' denotes group
d37 5
a41 6
 ;    [gmask]                final/gmask             Gaussian mask (from prepare)    (one)
 ;    [sel_parts_s]          input/select_***        Group particle selection files  (one/group)
 ;    [iter_refangs]         work/ang_refs_##        Ref. angles doc file            (one/iteration)       
 ;    [unaligned_images]     input/data_***          Unaligned stacked image files   (one-stack/group)
 ;    [ref_projs_s]          work/refproj_##_s@@      Reference projections           (two/iteration)
 ;    [group_align_s]        final/align##_***_s@@    Alignment parameter doc files   (two/iteration/group)    
d44 10
a53 7
 ;    [next_group_align_s]   final/align##+_***s@@    Alignment parameter doc files   (two/iteration/group)
 ;    [next_group_vol_s]     work/vol_##+_***_s@@     Group subset volumes            (two/iteration/group)
 ;    [next_group_vol]       work/vol##+_***         Reconstructed group volumes     (one/iteration/group)
 ;
 ;    [temp_out_images]      work/dala##+_***        Aligned stacked image file      (one/group)
 ;    [ang_vora]             final/angvora_##_***    Projection angles doc file      (one/group)        
 ;    [temp_ref_projs]       _5@@                     Reference projections           (created & deleted)
d59 2
a60 1
 !              UNTESTED !!!!!!!!!!!!!!!!!!!!!!!!!
d62 3
a64 2
 SYS
   echo -n " Starting: small-angle refine loop  Iteration: {%I0%[iter]}  Group:{%I3%[grp]} --- " ; date '+ %x  %X'
d66 1
a66 3
 [r1]           = 5.0                ; First radius for 'AP REF' (Can alter this)
 [converge_lim] = 1.5*[ang-step-sm]  ; Angular distance limit for stopping iters (is GLOBAL).
 [next-iter]    = [iter]+1
d80 2
a81 6
 MY FL                               ; Flush results file

 DE                                  ; Delete existing files  
   [next_group_align]_s1             ; Alignment parameter doc file   (deleted)
 DE                                  ; Delete existing files  
   [next_group_align]_s2             ; Alignment parameter doc file   (deleted)
d83 1
a83 1
 ; Make header for next group align doc files 
d85 1
a85 3
    [next_group_align]_s1            ; Alignment parameter doc file   (output)
 SD /PSI, THE, PHI, REF, EXP, ANG, SX, SY, NPROJ, DIFF, CCROT, ANG, SX, SY, MIR-CC
    [next_group_align]_s2             ; Alignment parameter doc file   (output)
d97 6
a102 6
 DO [s] = 1,2                        ; Loop over resolution subsets ---------------
 
   DO                                ; Loop over all particles
     UD NEXT [key],[img]             ; Get particle number  
       [sel_parts_s]                 ; Group particle selection file   (input) 
     IF ( [key] <= 0 ) EXIT          ; End of images in selection doc file
d104 1
a104 1
     [num-imgs] = [num-imgs] + 1     ; # of images in current group
d106 17
a122 17
     ; Format of alignment parameters doc file is:
     ;         PSI,THE,PHI,           REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
     UD IC [img], [psi],[the],[phi],  [d],[exp], [d],[d],[d], [d],[d],[old-ccrot]
       [group_align_s]               ; Input alignment parameters doc file

     DE                              ; Delete  
       [ang_vora]                ; angvora doc file                (removed)

     VO RAS                          ; Rotate projection dir.   
       [iter_refangs]                ; Relative angles file            (input)
       -[phi],-[the],-[psi]          ; Offset
       1, 0                          ; Psi set to zero
       [ang_vora]                    ; Doc file for angles to search   (output)

     ; Create stack holding set of reference projections from input volume.
     PJ 3Q                           ; Create ref. projections
      [vol]                          ; Current volume                  (input)  
d125 1
a125 1
      [ang_vora]                     ; Angles in search area doc file  (input)
d128 32
a159 30
     ; Find ref. image matching exp. image.  Output to registers not doc file
     ;       PSI,THE,PHI,       REF#,EXP#, ANG,  SX, SY,    NPROJ,DIFF,     CCROT,  CURRENT_ALIGN
     AP REF  [psi],[the],[phi], [ref],[exp], [inp],[sx],[sy], [nproj],[diff], [ccrot], [t0],[t1],[t2],[t3]
       [temp_ref_projs]******         ; Template of existing ref. projections (input) 
       1-[num-refs])                  ; Ref. projection file numbers
       [alignsh]                      ; Shift search range
       [r1], [r2], 1                  ; First, last ring, & skip
       [ang_vora]                     ; Ref. angles file                   (input)
       SCR.{******[grp]}              ; No scratch file (usually will fit in-core)
       [unaligned_images]@@******      ; Original unaligned  image stack    (input)
       [img]                          ; Current exp. image file number
       [group_align_s]                ; Alignment parameters doc file      (input)
       0                              ; Angular projection restriction
       N, Y                           ; No mirrored projection check,  align first 

     ;         PSI,THE,PHI,         REF#,EXP#, ANG,  SX,  SY,   NPROJ,DIFF,CCROT
     SD [img], [psi],[the],[phi],  [ref],[img],[inp],[sx],[sy], [num-refs],[diff],[ccrot], [t0],[t1],[t2],[t3]
       [next_group_align_s]                              ; Next align. doc file (output)

     IF ( [ccrot] < [old-ccrot] ) THEN
       [sum-degred]=[sum-degred]+([old-ccrot]-[ccrot]) ; Sum average CCROT degredation
       [num-degred]=[num-degred]+1                     ; Increment   CCROT degredations counter
     ELSE
       [sum-impr] = [sum-impr]+([ccrot]-[old-ccrot])   ; Sum average CCROT improvement
       [num-impr] = [num-impr]+1                       ; Increment   CCROT improvements counter
     ENDIF

     IF ( [diff] > [converge_lim]) [num-big]=[num-big]+1  ; Increment large displacement counter
     [sum-ccrot] = [sum-ccrot]+[ccrot]                 ; Sum rotational CCC (for average).
     [sum-diff]  = [sum-diff]+[diff]                   ; Sum of angular differences
d161 12
a172 17
     ; Apply combined transformation to original particle image
     RT SF                                             ; Rotate & shift
       [unaligned_images]@@{******[img]}                ; Unaligned original images stack (input)
       [temp_out_images]{******[img]}                  ; Temp aligned exp. images stack  (output)
       [inp]                                           ; Inplane rotation angle
       [sx],[sy]                                       ; X & Y shift

     ; Soft masking of particle before back projection
     MUL 2
       [gmask]                                         ; Mask image                       (input)
       [temp_out_images]{*****[img]}                   ; Temp aligned exp. images stack   (input)
       [temp_out_images]{*****[img]}                   ; Temp aligned exp. images stack   (output)

   ENDDO                        ; End of loop over all particles --------------------

   ; Calculate new, refined subset volume using centered projections and 
   ; angles from align doc. file.  
d174 6
a179 1
   @@refine-bp([next-iter],[grp],[s], [bp-type],[prj-radius])
d181 3
a183 2
   UD ICE                      ; Close this file here
     [group_align_s]           ; Doc file                         (closed)                 
d185 1
a185 1
 ENDDO                         ; End of loop over resolution subsets ----------------------------
a186 2
 DE
   [ang_vora]                  ; Doc file                         (removed)
d188 1
a188 1
   [temp_ref_projs]            ; Ref. projections file            (removed)
d190 11
a200 1
   [temp_out_images]@@          ; Aligned image stack              (removed)
d203 1
a203 1
 [toobig]=100*[num-big]/[num-imgs]  ; % of images with excessive change in ang. displacement
d220 1
a220 1
   [next_group_align]                                         ; Alignment doc file   (output)
d222 3
a224 3
   [next_group_align]                                         ; Alignment doc file   (output)
 SD E                                                         ; Close doc file  
   [next_group_align]                                         ; Alignment doc file   (closed)
d227 1
@


1.53
log
@([ang-step] added
@
text
@d1 1
a1 1
 ([ang-step],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-type])
d6 11
a16 10
 ;         New                              ArDean Leith  Nov 2002
 ;         Rewrite                          ArDean Leith  Oct 2004
 ;         Avg CCROT degredations           ArDean Leith  Feb 2005
 ;         []                               ArDean Leith  Dec 2005
 ;         More stacks                      ArDean Leith  Dec 2006
 ;         Removed iter1 parameter          ArDean Leith  Feb 2007
 ;         Filenames & UD NEXT              ArDean Leith  Dec 2009
 ;         COG centering removed            ArDean Leith  Sep 2010
 ;         TF COR                           ArDean Leith  Nov 2010
 ;         For CTF corrected images         ArDean Leith  Oct 2013
d20 2
a21 2
 ;          aligns images (RT SF),  backprojects images into new volume(BP **)
 ;
d28 8
a35 7
 ;   [r2]                      Radius (pixels) of the structure
 ;   [alignsh]                 Shift allowed is +-[alignsh]
 ;   [prj-radius]              Radius (pixels) of structure for projection
 ;   [iter]                    Alignment step iteration counter  
 ;   [grp]                     Current defocus group                      
 ;   [pixsiz]                  Pixel size                              
 ;   [bp-type]                 Type of 'back projection'                              
d37 1
a37 1
 ;  '##' denotes iteration,  '##+' denotes next iteration, and '***' denotes group
d39 6
a44 5
 ;   [sel_parts]               input/select_***        Particle selection doc file  (one)
 ;   [group_align]             final/align##+_***      Alignment parameter doc file (one/group)
 ;   [unaligned_images]        input/data***@@          Unaligned stacked image file (one/group) 
 ;   [iter_refangs]            work/ang_refs_##        Reference angles doc   file  (one)      
 ;   [gmask]                   final/gmask             Gaussian mask (from prepare) (one)
d47 7
a53 10
 ;   [next_group_align]        final/align##+_***      Alignment parameter doc file (one/group)
 ;   [next_group_vol]          work/vol##+_***         Reconstructed group volume   (one/group)
 ;
 ;   [temp_out_images]         work/dala##+_***        Aligned stacked image file   (one/group)
 ;   [img_ang_vora]            final/angvora_##_***    Projection angles doc file   (one/group)        
 ;
 ;   [temp_out_images]         work/dala##+_***        Aligned stacked images   (created & deleted)
 ;   [next_group_vol]_s1       work/vol_##+_***_s1     Volume subset            (created & deleted)
 ;   [next_group_vol]_s2       work/vol_##+_***_s2     Volume subset            (created & deleted)
 ;   [temp_ref_projs]          _5@@                     Reference projections    (created & deleted)
d59 2
d62 1
a62 1
   echo -n " Starting: refine-smangloop  Iteration: {%I0%[iter]}  Group:{%I3%[grp]} --- " ; date '+ %x  %X'
d64 3
a66 5
 [r1]        = 5.0                   ; First radius for 'AP REF' (Can alter this)
 [converg]   = 1.5*[ang-step]        ; Angular distance limit for stopping iters.
 [converg]                           ; Echo converg 

 [next-iter] = [iter]+1
d80 6
a85 2
 DE                                  ; Remove existing align parameter doc file 
   [next_group_align]
d87 1
a87 1
 ; Make header for next group align doc file 
d89 3
a91 1
   [next_group_align]                ; Alignment angle doc file        (output)
d103 6
a108 6
 MY FL                               ; Flush results file

 DO                                  ; Loop over all particles
    UD NEXT [key],[img]              ; Get particle number  
      [sel_parts]                    ; Group particle selection file   (input) 
    IF ( [key] <= 0 ) EXIT           ; End of images in selection doc file
d110 1
a110 1
    [num-imgs] = [num-imgs] + 1      ; # of images in current group
d112 17
a128 17
    ; Format of alignment parameters doc file is:
    ;         PSI,THE,PHI,           REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
    UD IC [img], [psi],[the],[phi],  [d],[exp], [d],[d],[d], [d],[d],[old-ccrot]
      [group_align]                  ; Input alignment parameters doc file

    DE                               ; Delete  
      [img_ang_vora]                 ; angvora doc file                (removed)

    VO RAS                           ; Rotate projection dir.   
      [iter_refangs]                 ; Relative angles file            (input)
      -[phi],-[the],-[psi]           ; Offset
      1, 0                           ; Psi set to zero
      [img_ang_vora]                 ; Doc file for angles to search   (output)

    ; Create stack holding set of reference projections from input volume.
    PJ 3Q                            ; Create ref. projections
      [current_vol]                  ; Current volume                  (input)  
d131 1
a131 1
      [img_ang_vora]                 ; Angles in search area doc file  (input)
d134 30
a163 32
    MY FL                            ; Flush results file

    ; Find ref. image matching exp. image.  Output to registers not doc file
    ;       PSI,THE,PHI,       REF#,EXP#, ANG,  SX, SY,    NPROJ,DIFF,     CCROT,  CURRENT_ALIGN
    AP REF  [psi],[the],[phi], [ref],[exp], [inp],[sx],[sy], [nproj],[diff], [ccrot], [t0],[t1],[t2],[t3]
      [temp_ref_projs]******         ; Template of existing ref. projections (input) 
      1-[num-refs])                  ; Ref. projection file numbers
      [alignsh]                      ; Shift search range
      [r1], [r2], 1                  ; First, last ring, & skip
      [img_ang_vora]                 ; Ref. angles file                   (input)
      SCR.{******[grp]}              ; No scratch file (usually will fit in-core)
      [unaligned_images]@@******      ; Original unaligned  image stack    (input)
      [img]                          ; Current exp. image file number
      [group_align]                  ; Alignment parameters doc file      (input)
      0                              ; Angular projection restriction
      N,Y                            ; No mirrored projection check,  align first 

    ;         PSI,THE,PHI,         REF#,EXP#, ANG,  SX,  SY,   NPROJ,DIFF,CCROT
    SD [img], [psi],[the],[phi],  [ref],[img],[inp],[sx],[sy], [num-refs],[diff],[ccrot], [t0],[t1],[t2],[t3]
      [next_group_align]                              ; Next align. doc file (output)

    IF ( [ccrot] < [old-ccrot] ) THEN
      [sum-degred]=[sum-degred]+([old-ccrot]-[ccrot]) ; Sum average CCROT degredation
      [num-degred]=[num-degred]+1                     ; Increment   CCROT degredations counter
    ELSE
      [sum-impr] = [sum-impr]+([ccrot]-[old-ccrot])   ; Sum average CCROT improvement
      [num-impr] = [num-impr]+1                       ; Increment   CCROT improvements counter
    ENDIF

    IF ( [diff] > [converg] ) [num-big]=[num-big]+1   ; Increment large displacement counter
    [sum-ccrot] = [sum-ccrot]+[ccrot]                 ; Sum rotational CCC (for average).
    [sum-diff]  = [sum-diff]+[diff]                   ; Sum of angular differences
d165 17
a181 12
    ; Apply combined transformation to original particle image
    RT SF                                             ; Rotate & shift
      [unaligned_images]@@{******[img]}                ; Unaligned original images stack (input)
      [temp_out_images]{******[img]}                  ; Temp aligned exp. images stack  (output)
      [inp]                                           ; Inplane rotation angle
      [sx],[sy]                                       ; X & Y shift

    ; Soft masking of particle before back projection
    MUL 2
      [gmask]                                         ; Mask image                       (input)
      [temp_out_images]{*****[img]}                   ; Temp aligned exp. images stack   (input)
      [temp_out_images]{*****[img]}                   ; Temp aligned exp. images stack   (output)
d183 1
a183 6
 ENDDO                         ; End of loop over all particles --------------------

 UD ICE                        ; Close this file here
   [group_align]               ; Doc file                         (closed)                 
 DE
   [img_ang_vora]              ; Doc file                         (removed)
d185 2
a186 3
 
 ; Calculate new, refined volume using centered projections and 
 ; angles from align doc. file.  
d188 1
a188 1
 @@refine-bp([next-iter],[grp], [bp-type],[prj-radius])
d190 2
d193 1
a193 1
   [temp_ref_projs]            ; Ref. projections file             (removed)
d195 1
a195 11
   [temp_out_images]@@          ; Aligned image stack               (removed)

 IF ( [iter] > 1) THEN         ; Not first iteration
    DE                         ; Delete 
      [group_vol]              ; Previous group vol.               (removed)        
    DE                         ; Delete
      [group_vol]_s1           ; Previous subset 1 group vol.      (removed)
    DE                         ; Delete 
      [group_vol]_s2           ; Previous subset 2 group vol.      (removed)
 ENDIF

d198 1
a198 1
 [toobig]=100*[num-big]/[num-imgs]     ; % of images with excessive change in ang. displacement
d215 1
a215 1
   [next_group_align]                   ; Alignment doc file   (output)
d217 3
a219 3
   [next_group_align]                   ; Alignment doc file   (output)
 SD E                                   ; Close doc file  
   [next_group_align]                   ; Alignment doc file   (closed)
a221 1

@


1.52
log
@sub1 --> s1
group fsc removed
@
text
@d1 1
a1 1
 ([r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[bp-type])
d19 1
a19 2
 ;          aligns images (RT SF),  backprojects images into new volume(BP **), & 
 ;          determines group resolution (FSC)    
d62 2
a63 2
 [radius1]   = 5.0                   ; First radius for 'AP REF' (Can alter this)
 [converg]   = 1.5*[ang-step-sm]     ; Angular distance limit for stopping iters.
a74 4
 FI H [maxim],[nx],[ny]              ; Find total number of images (not [numparts])
   [unaligned_images]@@               ; Input file needed                  (input)
   MAXIM, NX, NY                     ; Max. image number, image size

a81 1
 MY FL                               ; Flush results file
d97 2
d136 1
a136 1
      [radius1], [r2], 1             ; First, last ring, & skip
d183 1
a183 2
 ; angles from align doc. file.  Creates two additional volumes from 
 ; random half subsets of images for use in resolution calculation.
a186 6
 ; Record group reconstruction resolution in doc file
 SD [iter],[iter],[grp],[m-res] 
   [grp_resol]                 ; Group resolution summary file     (output)
 SD E                          ;  
   [grp_resol]                 ; Group resolution summary file     (closed)

d203 1
a203 1
 [toobig]=100*[num-big]/[num-imgs]  ; % of images with excessive change in ang. displacement
@


1.51
log
@refine-bp
@
text
@a46 1
 ;   [next_group_m_fsc]        work/fscdoc_m_##_***    Group FSC curve doc file     (one/group)
d52 2
a53 2
 ;   [next_group_vol]_sub1     work/vol_##+_***_sub1   Volume subset            (created & deleted)
 ;   [next_group_vol]_sub2     work/vol_##+_***_sub2   Volume subset            (created & deleted)
a191 16

 DE                            ; Delete any existing fsc file
   [next_group_m_fsc]          ; FSC curve doc file                 (removed) 

 ; Determine group masked reconstruction FSC
 FSC [half],[spfreq],[m-res]   ; Find phase residual &  shell correl.
   [next_group_vol]_sub1       ; Reconstructed vol - subset 1       (input)
   [next_group_vol]_sub2       ; Reconstructed vol - subset 2       (input)
   0.5, [r2]                   ; Shell width, mask radius
   [pixsiz], 0.5               ; Pixel size, 50% level
   [next_group_m_fsc]          ; FSC group doc file                 (output)
   *                           ; No Gnuplot file wanted

 SYS                           ; Echo progress
   echo " Iteration: {%I0%[iter]} Group:{%I3%[grp]}  Resolution: {%F6.2%[m-res]}"

d207 1
a207 1
      [group_vol]_sub1         ; Previous subset 1 group vol.      (removed)
d209 1
a209 1
      [group_vol]_sub2         ; Previous subset 2 group vol.      (removed)
@


1.50
log
@bugs fixed
@
text
@d1 1
a1 1
 ([r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz])
d34 1
a184 1
 MY FL                         ; Flush results file
d186 1
d191 1
a191 1
 [bp-type] = 2                  ; Switch to 'BP CG' 
a192 26
 IF  ( [bp-type] == 2 ) THEN
 
   BP 32F                      ; Back Projection - 3D Fourier
     [temp_out_images]******   ; Current aligned images template     (input)
     [sel_parts]               ; Particle selection doc file         (input)
     [next_group_align]        ; Alignment parameter doc file        (input)
     *                         ; No symmetries  
     [next_group_vol]          ; Reconstructed group vol - overall   (output)
     [next_group_vol]_sub1     ; Reconstructed group vol - subset 1  (output)
     [next_group_vol]_sub2     ; Reconstructed group vol - subset 2  (output)

 ELSEIF ( [bp-type] == 1 ) THEN
   ; Create group volumes using 'BP CG 3' 
   BP CG 3                     ; Back Projection - CG
     [temp_out_images]******   ; Current aligned images template     (input)
     [sel_parts]               ; Group particle selection doc file   (input)
     [prj-radius]              ; Radius of restored object
     [next_group_align]        ; Alignment parameters doc file       (input)
     L                         ; Use linear interpolation 
     [next_group_vol]          ; Reconstructed group vol - overall   (output)
     [next_group_vol]_sub1     ; Reconstructed group vol - subset 1  (output)
     [next_group_vol]_sub2     ; Reconstructed group vol - subset 2  (output)
     1.0E-5, 0.0               ; Error limit, chi^2 limit
     25, 1                     ; Iteration limit, mode
     2000                      ; Weighting
 ENDIF
d194 1
a194 1
 DE                            ; Delete  file
a253 1
 MY FL                                  ; Flush results file
d255 1
@


1.49
log
@rewrite_syntax_filenames
@
text
@d1 1
a1 1
 ([r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[incore-yn],[iter-end])
a7 2
 ;         Exp images name bug              ArDean Leith  Jan 2005
 ;         BP align bug                     ArDean Leith  Feb 2005
d17 4
a20 3
 ; PURPOSE: Small angle refinement group loop.  Runs for each group on each iteration
 ;          Finds alignment (AP SHC), aligns (RT SF), 
 ;          backprojects (BP 32F), & determines group resolution (FSC)    
d22 1
a22 1
 ; CALLED FROM: <a href="./pub_refine_start.spi">pub_refine_start</a> or   
a33 2
 ;   [incore-yn]               Use incore file for images                              
 ;   [iter-end]                Final iteration                              
d37 5
a41 6
 ;   [sel_parts]               input/select_***        Particle selection doc file
 ;   [group_align]             final/align##+_***      Alignment parameter doc file
 ;   [unaligned_images]        input/data***@@          Unaligned stacked image file  
 ;   [iter_refangs]            work/ang_refs_##        Reference angles doc   file        
 ;   [aligned_images]          input/dala##_***        Aligned stacked image  files
 ;   [gmask]                   work/gmask              Gaussian mask (from prepare)
d44 13
a56 6
 ;   [next_group_align]        final/align##+_***      Alignment parameter doc file
 ;   [next_group_vol]          work/vol##+_***         Reconstructed group volume
 ;   [next_group_fsc]          final/fscdoc##+_***_m   Group FSC curve doc file
 
 ;   [next_aligned_images]     work/dala##+_***        Aligned stacked image file
 ;   [img_ang_vora]            final/angvora_##_***    Projection angles doc file         
d58 1
a58 6
 ;   [next_group_vol]_sub1     work/vol_##+_***_sub1   (Created & deleted)
 ;   [next_group_vol]_sub2     work/vol_##+_***_sub2   (Created & deleted)
 ;   [temp_out_images]         work/work_images        (Created & deleted if [incore-yn] = 0 )
 ;   [temp_ref_projs]                                  (Created & deleted)
 ; 
 ; INLINE BUFFERS USED: _1
d64 1
a64 1
 [converg]   = 1.5*[ang-step-sm]        ; Angular distance limit for stopping iters.
d70 1
a70 1
   [unaligned_images]@@               ; Input file needed                 (input)
d77 1
a77 1
   [unaligned_images]@@               ; Input file needed                 (input)
d81 1
a81 1
   [temp_ref_projs]                  ; Empty stack                       (output)
d104 3
a106 3
    UD NEXT [key],[img]              ; Get particle image number from sel. file
      [sel_parts]                    ; Group particle selection file      (input) 
    IF ([key] <= 0) EXIT             ; End of images in selection doc file
d126 1
a126 1
      [current_vol]                  ; Current volume                   (input)  
d129 2
a130 2
      [img_ang_vora]                 ; Angles in search area doc file   (input)
      [temp_ref_projs]******         ; Template for ref. projections    (output)
d136 1
a136 1
    AP REF  [psi],[the],[phi], [ref],[exp], [inp],[sx],[sy], [nproj],[diff], [ccrot], x70,x71,x72,x73
d141 1
a141 1
      [img_ang_vora]                 ; Ref. angles file                  (input)
d143 1
a143 1
      [aligned_images]@@******        ; Aligned original image stack      (input)
d145 1
a145 1
      [group_align]                  ; Alignment parameters doc file     (input)
d147 1
a147 1
      0                              ; Mirrored projection check flag 
d150 2
a151 2
    SD [img], [psi],[the],[phi],  [ref],[img],[inp],[sx],[sy], [num-refs],[diff],[ccrot], x70,x71,x72,x73
      [next_group_align]                               ; Next align. doc file (output)
d154 2
a155 2
       [sum-degred]=[sum-degred]+([old-ccrot]-[ccrot]) ; Sum average CCROT degredation
       [num-degred]=[num-degred]+1                     ; Increment   CCROT degredations counter
d157 2
a158 2
       [sum-impr] = [sum-impr]+([ccrot]-[old-ccrot])   ; Sum average CCROT improvement
       [num-impr] = [num-impr]+1                       ; Increment   CCROT improvements counter
d161 3
a163 3
    IF ( [diff] > [converg]) [num-big]=[num-big]+1     ; Increment large displacement counter
    [sum-ccrot] = [sum-ccrot]+[ccrot]                  ; Sum rotational CCC (for average).
    [sum-diff]  = [sum-diff]+[diff]                    ; Sum of angular differences
d165 12
a176 7
    ; Apply combined transformation to original exp. sample image
    RT SQ                                              ; Rotate & shift
      [unaligned_images]@@{******[img]}                 ; Unaligned original images stack (input)
      [next_aligned_images]@@{******[img]}              ; New aligned exp. images stack   (output)
      [inp]                                            ; Inplane rotation angle
      [sx],[sy]                                        ; X & Y shift
 ENDDO                          ; End of loop over all particles --------------------
d178 1
d180 2
a181 2
 UD ICE                         ; Close this file here
   [group_align]                ; Doc file                         (closed)                 
d183 2
a184 1
   [img_ang_vora]               ; Doc file                         (removed)
d190 28
a217 8
 BP 32F                         ; Back projection, 3D, Fourier space
   [next_aligned_images]@@****** ; Template for aligned images      (input)
   [sel_parts]                  ; Particle selection doc file      (input)
   [next_group_align]           ; Align parameters doc file        (input)
   *                            ; No symmetries file  
   [next_group_vol]             ; Reconstructed vol - overall      (output)
   [next_group_vol]_sub1        ; Reconstructed vol - subset 1     (output)
   [next_group_vol]_sub2        ; Reconstructed vol - subset 2     (output)
d219 2
a220 2
 DE                             ; Delete  file
   [next_group_fsc]             ; FSC curve doc file               (removed) 
d223 7
a229 7
 FSC [half],[spfreq],[m-res]    ; Find phase residual &  shell correl.
   [next_group_vol]_sub1        ; Reconstructed vol - subset 1     (input)
   [next_group_vol]_sub2        ; Reconstructed vol - subset 2     (input)
   0.5, [r2]                    ; Shell width, mask radius
   [pixsiz], 0.5                ; Pixel size, 50% level
   [next_group_fsc]             ; FSC group doc file               (output)
   *                            ; No Gnuplot file wanted
d231 1
a231 1
 SYS                            ; Echo for isolating stack overflow
d235 17
a251 15
 SD [iter], [iter],[grp],[m-res] ; Save resolution
   [grp_resol]                   ; Group resolution summary file   (output)
 SD E                            ;  
   [grp_resol]                   ; Group resolution summary file   (closed)

 DE                             ; Delete
   [temp_ref_projs]             ; Ref. projections file            (removed)

 IF ( [iter] > 1) THEN          ; Not first iteration
    DE                          ; Delete 
      [group_vol]               ; Previous group vol.              (removed)        
    DE                          ; Delete
      [group_vol]_sub1          ; Previous subset 1 group vol.     (removed)
    DE                          ; Delete 
      [group_vol]_sub2          ; Previous subset 2 group vol.     (removed)
d259 1
a259 1
   echo " Iteration: {**[iter]} Group: {***[grp]}   Excessive changes: {***[toobig]}%"
d270 1
a270 1
   echo " CCROT degred.: {***[per-degred]}%  Avg degred.: {%F8.2%[avg-degred]}  Avg improve: {%F8.2%[avg-impr]}"
d279 1
a279 1
 MY FL
@


1.48
log
@[radius] --> [r2], cosmetic
@
text
@d1 1
a1 52
([r2],[alignsh],[prj-radius],[iter],[grp],[toobig],[pixsiz])
; <html><head><title>Small angle refinement group loop</title></head><body><pre>
;
; SOURCE: spider/docs/techs/recon/newprogs/smangloop.pam
;         New                              ArDean Leith  Nov  2002
;         Rewrite                          ArDean Leith  Oct  2004
;         Avg CCROT degredations           ArDean Leith  Feb  2005
;         More stacks                      ArDean Leith  Dec  2006
;         Filenames & UD NEXT              ArDean Leith  Dec  2009
;         COG centering removed            ArDean Leith  Sep  2010
;         TF COR                           ArDean Leith  Nov  2010
;         UD NEXT E                        ArDean Leith  Sep  2011
;         Dala removal                     ArDean Leith  Jan  2012
;         pixsiz, resol headers,...        ArDean Leith  Aug 2012
; 
; PURPOSE: Small angle refinement group loop.  Runs for each defocus 
;          group on each iteration
;
; CALLED FROM: <a href="./pub_refine_start.pam">pub_refine_start</a> or   
;              <a href="./refine.pam">refine.pam</a>  
;
; REGISTERS AND FILES ARE SET IN: <a href="refine settings.pam">refine settings.pam</a>
;
; INPUT REGISTERS:
;   [r2]                    Radius (pixels) of the object
;   [alignsh]               Shift allowed is +-[alignsh]
;   [prj-radius]            Radius (pixels) of object for projection
;   [iter]                  Alignment step iteration counter  
;   [grp]                   Current defocus group                      
;   [toobig]                Iteration ending flag   (returned)
;   [ang-step]              Angular difference stopping limit (String)   
;
; '##' denotes iteration,  '##+' denotes next iteration, and '***' denotes group
; INPUT FILES:
;   [sel_particles]         input/select_***       Particle selection doc file
;   [iter_vft]              final/vft##            Current filtered volume (From refine)
;   [temp_ctf_file]         work/ctf***            CTF corrected volume (From prepare)
;   [group_align]           final/align##+_***     Alignment parameter doc file
;   [unaligned_images]      input/data***@@         Unaligned stacked image file  
;   [iter_refangs]          work/ang_refs_##       Reference angles doc    file        
;
; OUTPUT FILES:
;   [img_ang_vora]          final/angvora_##_***   Projection angles doc file         
;   [next_group_vol]        work/vol##+            Reconstructed group volume
;   [next_group_align]      final/align##+_***     Alignment parameter  doc file
;   [next_group_fsc]        final/fscdoc_##+_***   FSC resolution curve doc file
;
;   [next_group_vol]_sub1   work/vol_##+_sub1      (Created & deleted)  
;   [next_group_vol]_sub2   work/vol_##+_sub2      (Created & deleted) 
;   [temp_ref_projs]                               (Created & deleted)
; 
; INLINE BUFFERS USED: _1, _13
d3 61
a63 2
 VM
   echo -n " In smangloop, Iteration: {**[iter]}  Group: {***[grp]}  " ; date '+ Time: %x  %X'
d66 2
a67 1
 [converg]   = 10000                 ; Dummy angular distance limit for stopping iters.
d71 4
d78 3
a80 11
 MY FL                               ; Flush results file

 ; Multiply Fourier of current vol. by CTF file for this group
 TF COR                              ; CTF correction
   [iter_vft]                        ; Fourier of current volume         (input}
   [temp_ctf_file]                   ; CTF  file                         (input)
   _1                                ; _1 created here                   (output)

 FI H [nx]                           ; Find image size
   _1                                ; CTF corrected current volume      (input) 
   NX                                ; Get NX from header
d88 2
a89 1
 [next_group_align]
d93 1
a93 1
   [next_group_align]                ; (output)
d107 3
a109 2
      [sel_particles]                ; Group particle selection file      (input) 
    IF ([key] .LE. 0) EXIT           ; End of images in selection doc file
d113 2
a114 2
    ;         PSI,THE,PHI,          REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
    UD IC [img], [psi],[the],[phi], [d],[exp], [d],[d],[d], [d],[d],[old-ccrot]
d117 2
a118 2
    DE                               ; Remove existing angles doc file  
      [img_ang_vora]                 ;                                  (removed)
d121 1
a121 1
      [iter_refangs]                 ; Relative angles file             (input)
d124 1
a124 1
      [img_ang_vora]                 ; Doc file for angles to search    (output)
d127 2
a128 2
    PJ 3F                            ; Create ref. projections
      _1                             ; CTF corrected current volume     (input)              
d130 1
a130 1
      (1-[num-refs])                 ; Ref. projection file numbers 
d140 1
a140 1
      (1-[num-refs])                 ; Ref. projection file numbers
d142 1
a142 1
      [radius1],[r2],1           ; First, last ring, & skip
d144 2
a145 2
      [ref_rings].{******[grp]}      ; No scratch file (usually will fit in-core)
      [unaligned_images]@@******      ; Aligned original image stack      (input)
d148 2
a149 2
      0, 0                           ; Angular projection search restriction
      N,Y                            ; Check mir projections, align first
d155 1
a155 1
    IF ([ccrot] .LT. [old-ccrot]) THEN
d159 2
a160 2
       [sum-impr]=[sum-impr]+([ccrot]-[old-ccrot])     ; Sum average CCROT improvement
       [num-impr]=[num-impr]+1                         ; Increment   CCROT improvements counter
d163 3
a165 3
    IF ([diff] .GT.[converg]) [num-big]=[num-big]+1    ; Increment large displacement counter
    [sum-ccrot]=[sum-ccrot]+[ccrot]                    ; Sum rotational CCC (for average).
    [sum-diff]=[sum-diff]+[diff]                       ; Sum of angular differences
d167 8
a174 1
 ENDDO
d177 12
a188 28
   [group_align]                ; Doc file                         (closed) 
                 
 UD NEXT E                      ; Close this file here 
   [sel_particles]              ; Group particle selection file    (closed) 

 FI H [maxim]                   ; Find total number of images (not [numparts])
   [unaligned_images]@@;         ; Input file needed                (input)
   MAXIM                        ; Max. image number header position

 ; Note: If 'INLN_WRTLIN ARRAY OVERFLOW',  replace: _2 with disk based stack file     
 MS                             ; Make empty inline stack  
   _2@@                          ; Empty stack                        (output)
   [nx],[nx],1                  ; Image size
   [maxim]                      ; Number of images allowed in stack

 ; Apply new alignments to original particle images
 RT SF                          ; Rotate & shift operation
   [unaligned_images]@@******    ; Unaligned original stacked images 
   [sel_particles]              ; Particle selection file             (input) 
   6,0,7,8                      ; Reg. #s for angle, scale, & shift
   [next_group_align]           ; Alignment parameter doc file        (input)
   _2@@******                    ; Current aligned images              (output)
 
 ; Calculate refined 3D structure using centered projections and new angles. 
 BP 32F                         ; Back projection, Fourier space
   _2@@******                    ; Aligned stacked images              (input)
   [sel_particles]              ; Particle selection doc file         (input)
   [next_group_align]           ; Align parameters doc file           (input)
d190 3
a192 6
   [next_group_vol]             ; Reconstructed vol - overall         (output)
   [next_group_vol]_sub1        ; Reconstructed vol - subset 1        (output)
   [next_group_vol]_sub2        ; Reconstructed vol - subset 2        (output)

 DE                             ; Delete  file
   _2@@                          ; Image file                          (removed) 
d195 1
a195 1
   [next_group_fsc]             ; FSC doc file                        (removed) 
d197 4
a200 3
 FSC [half],[spfreq],[res]      ; Find phase residual &  shell correl.
   [next_group_vol]_sub1        ; Reconstructed group vol - subset 1  (input)
   [next_group_vol]_sub2        ; Reconstructed group vol - subset 2  (input)
d202 2
a203 2
   [pixsiz]                     ; Pixel size
   [next_group_fsc]             ; FSC group doc file                  (output)
d206 19
a224 15
 VM
   echo " Group: {**[grp]}        Resolution:  {%f6.2%[res]}" 
 SD [iter], [iter],[grp],[res]  ; Save in doc file
   [grp_resol]                  ; Group resolution summary file      (output)

 DE                             ; Remove ref. projections file        (removed)
 [temp_ref_projs] 

 IF ([iter] .GT. 1) THEN        ; Not first iteration
    DE                          ; Remove previous group vol. 
      [group_vol]              
    DE                          ; Remove previous subset 1 group vol.
      [group_vol]_sub1
    DE                          ; Remove previous subset 2 group vol.
      [group_vol]_sub2
d227 1
d229 1
a229 1
 [toobig] = 100*[num-big]/[num-imgs]  ; % of images with excessive 
d231 1
a231 1
 VM
d234 7
a240 7
 [avg-ccrot]  = [sum-ccrot]/[num-imgs]                           ; Average CCROT 
 [avg-degred] = 0.0                                              ; Average CCROT degredation
 IF ([num-degred] .GT. 0)[avg-degred]=[sum-degred] /[num-degred] ; Average CCROT degredation
 [avg-impr]   = 0.0                                              ; Average CCROT improvement
 IF ([num-impr] .GT. 0) [avg-impr]=[sum-impr]/[num-impr]         ; Average CCROT improvement
 [per-degred] = 100*[num-degred]/[num-imgs]                      ; Percent images with CCROT degredation
 [avg-diff]   = [sum-diff]/[num-imgs]                            ; Average angular difference
d242 1
a242 1
 VM
d246 1
a246 2
   [next_group_align]                 ; Next align. doc file   (output)

d248 3
a250 4
   [next_group_align]                 ; Next align. doc file   (output)

 SD E                                 ; Close doc file  
   [next_group_align]                 ; Next align. doc file   (output)
d254 1
a254 1
</body></pre></html>
@


1.47
log
@wrong file names fixed
@
text
@d1 1
a1 1
([radius],[alignsh],[prj-radius],[iter],[grp],[toobig],[pixsiz])
d25 1
a25 1
;   [radius]                Radius (pixels) of the structure
d27 1
a27 1
;   [prj-radius]            Radius (pixels) of structure for projection
d50 1
a50 1
;   [temp_ref_projs]                                 (Created & deleted)
d135 1
a135 1
      [radius1],[radius],1           ; First, last ring, & skip
a198 9
 @@softmask([radius])            ; Pixel radius for masking
   [next_group_vol]_sub1        ; Reconstructed group vol - subset 1  (output)
   [next_group_vol]_sub2        ; Reconstructed group vol - subset 2  (output)
   _13                          ; Incore mask volume                  (output)
   [next_group_vol]_sub1        ; Reconstructed group vol - subset 1  (output)
   [next_group_vol]_sub2        ; Reconstructed group vol - subset 2  (output)

 DE                             ; Delete incore mask volume
   _13                          ; Inline file no longer needed        (removed)
d205 1
a205 1
   0.5                          ; Shell width
d210 5
d228 1
a228 1
 [toobig]=100*[num-big]/[num-imgs]  ; % of images with excessive change in ang. displacement
d233 2
a234 2
 [avg-ccrot] = [sum-ccrot]/[num-imgs]                            ; Average CCROT 
 [avg-degred]=0.0                                                ; Average CCROT degredation
d236 1
a236 1
 [avg-impr]=0.0                                                  ; Average CCROT improvement
d239 1
a239 1
 [avg-diff]=[sum-diff]/[num-imgs]                                ; Average angular difference
@


1.46
log
@*** empty log message ***
@
text
@d25 7
a31 7
;   [radius]                  Radius (pixels) of the structure
;   [alignsh]                 Shift allowed is +-[alignsh]
;   [prj-radius]              Radius (pixels) of structure for projection
;   [iter]                    Alignment step iteration counter  
;   [grp]                     Current defocus group                      
;   [toobig]                  Iteration ending flag   (returned)
;   [ang-step]                Angular difference stopping limit (String)   
d35 6
a40 6
;   [sel_particles]           input/select_***             Particle selection doc file
;   [iter_vft]                final/vft##                  Current filtered volume (From refine)
;   [temp_ctf_file]           work/ctf***                  CTF corrected volume (From prepare)
;   [group_align]             final/align##+_***           Alignment parameter doc file
;   [unaligned_images]        input/data***@@               Unaligned stacked image file  
;   [iter_refangs]            work/ang_refs_##             Reference angles doc    file        
d43 4
a46 4
;   [img_ang_vora]            final/angvora_##_***         Projection angles doc file         
;   [next_group_vol]          work/defgrp***/vol##+        Reconstructed group volume
;   [next_group_align]        final/align##+_***           Alignment parameter  doc file
;   [next_group_fsc]          final/defgrp***/fscdoc_##+_***  FSC resolution curve doc file
d48 3
a50 3
;   [next_group_vol]_sub1     work/defgrp***/vol_##+_sub1  (Created & deleted)  
;   [next_group_vol]_sub2     work/defgrp***/vol_##+_sub2  (Created & deleted) 
;   [temp_ref_projs]                                       (Created & deleted)
@


1.45
log
@works
@
text
@d46 1
a46 1
;   [next_group_fsc]          final/defgrp***/fsc_##+_***  FSC resolution curve doc file
@


1.44
log
@MS,  _2 needed @@
@
text
@d1 1
a1 1
([radius],[alignsh],[prj-radius],[iter],[grp],[toobig])
a6 2
;         Exp images name bug              ArDean Leith  Jan  2005
;         BP align bug                     ArDean Leith  Feb  2005
a7 1
;         []                               ArDean Leith  Dec  2005
a8 1
;         Removed iter1 parameter          ArDean Leith  Feb  2007
d14 1
d33 1
a33 1
;  '##' denotes iteration,  '##+' denotes next iteration, and '***' denotes group
d36 2
a37 2
;   [iter_vft]                final/vft##                  Current filtered volume (from refine)
;   [temp_ctf_file]           work/ctf***                  CTF corrected volume (from prepare)
d40 1
a40 1
;   [iter_refangs]            work/ang_refs_##             Reference angles doc   file        
d45 2
a46 2
;   [next_group_align]        final/align##+_***           Alignment parameter doc file
;   [next_group_dres]         final/defgrp***/dres##+      FSC resolution curve doc file
d52 1
a52 1
; INLINE BUFFERS USED: _1
d55 1
a55 1
 echo -n " In smangloop, Iteration: {**[iter]}  Group: {***[grp]}  " ; date '+ Time: %x  %X'
d63 1
a63 1
 [iter_refangs]                      ; Reference images angles doc. file (input)
d69 3
a71 3
 [iter_vft]                          ; Fourier of current volume         (input}
 [temp_ctf_file]                     ; CTF  file                 (input)
 _1                                  ; _1 created here           (output)
d74 2
a75 2
 _1                                  ; CTF corrected current volume      (input) 
 NX                                  ; Get NX from header
d78 3
a80 3
 [temp_ref_projs]                    ; Empty stack                       (output)
 ([nx],[nx],1)                       ; Image size
 [num-refs]                          ; Number of images allowed in stack
d87 1
a87 1
 [next_group_align]                  ; (output)
d101 1
a101 1
    [sel_particles]                  ; Group particle selection file      (input) 
d106 2
a107 2
    ;         PSI,THE,PHI,           REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
    UD IC [img], [psi],[the],[phi],  [d],[exp], [d],[d],[d], [d],[d],[old-ccrot]
d111 1
a111 1
     [img_ang_vora]                  ;                                 (removed)
d114 1
a114 1
      [iter_refangs]                 ; Relative angles file            (input)
d116 2
a117 2
       1, 0                          ; Psi set to zero
      [img_ang_vora]                 ; Doc file for angles to search   (output)
d120 1
a120 1
    PJ 3Q                            ; Create ref. projections
d146 1
a146 1
    [next_group_align]                                 ; Next align. doc file (output)
d174 1
a174 1
   _2@@                           ; Empty stack                       (output)
d179 1
a179 1
 RT SQ                          ; Rotate & shift operation
d181 1
a181 1
   [sel_particles]              ; Particle selection file            (input) 
d183 2
a184 2
   [next_group_align]           ; Alignment parameter doc file       (input)
   _2@@******                    ; Current aligned images             (output)
d188 3
a190 3
   _2@@******                    ; Aligned stacked images           (input)
   [sel_particles]              ; Particle selection doc file      (input)
   [next_group_align]           ; Align parameters doc file        (input)
d192 3
a194 3
   [next_group_vol]             ; Reconstructed vol - overall      (output)
   [next_group_vol]_sub1        ; Reconstructed vol - subset 1     (output)
   [next_group_vol]_sub2        ; Reconstructed vol - subset 2     (output)
d197 11
a207 1
 [next_group_dres]              ; FSC doc file                     (removed) 
d209 1
a209 1
 _2@@                            ; Image file                       (removed) 
d211 7
a217 9
 RF 3                           ; Phase Residual &  shell correl.
   [next_group_vol]_sub1        ; Volume file - subset 1           (input) 
   [next_group_vol]_sub2        ; Volume file - subset 2           (input) 
   0.5                          ; Ring width
   0.2, 2.0                     ; Lower and upper scale factor
   C                            ; Missing cone
   90.0                         ; Maximum tilt angle 
   3                            ; Factor for noise comparison
   [next_group_dres]             ; FSC doc file                     (output)
d219 1
a219 1
 DE                             ; Remove ref. projections file     (removed)
d224 1
a224 1
    [group_vol]              
d226 1
a226 1
    [group_vol]_sub1
d228 1
a228 1
    [group_vol]_sub2
d235 1
a235 1
 echo " Iteration: {**[iter]} Group: {***[grp]}   Excessive changes: {***[toobig]}%"
d246 1
a246 1
 echo " CCROT degred.: {***[per-degred]}%  Avg degred.: {%F8.2%[avg-degred]}  Avg improve: {%F8.2%[avg-impr]}"
d249 1
a249 1
 [next_group_align]                   ; Next align. doc file   (output)
d252 1
a252 1
 [next_group_align]                   ; Next align. doc file   (output)
d255 1
a255 1
 [next_group_align]                   ; Next align. doc file   (output)
d258 1
a258 1
RE
@


1.43
log
@missing [ in next_group_dres]
@
text
@d177 1
a177 1
   _2                           ; Empty stack                       (output)
@


1.42
log
@no dala files
@
text
@d212 1
a212 1
   next_group_dres]             ; FSC doc file                     (output)
@


1.41
log
@UD NEXT E
@
text
@d17 1
a40 1
;   [aligned_images]          input/dala##_***             Aligned stacked image  files
a45 1
;   [next_aligned_images]     work/dala##+_***             Aligned stacked image file
d70 1
a70 1
 ; Multiply Fourier of current volume by CTF file for this group
d76 1
a76 1
 FI H [nsam]                         ; Find image size
d78 1
a78 1
 NSAM                                ; Get NSAM from header
d82 1
a82 1
 ([nsam],[nsam],1)                   ; Image size
d111 1
a111 1
    [group_align]                    ; Input alignment parameters doc file
d113 2
a114 2
    DE                               ; Remove existing angvora doc file  
    [img_ang_vora]                   ; angvora
d117 4
a120 4
    [iter_refangs]                   ; Relative angles file            (input)
    -[phi],-[the],-[psi]             ; Offset
    (1,0)                            ; Psi set to zero
    [img_ang_vora]                   ; Doc file for angles to search   (output)
d124 5
a128 5
    _1                               ; CTF corrected current volume     (input)              
    [prj-radius]                     ; Radius of computed object
    (1-[num-refs])                   ; Ref. projection file numbers 
    [img_ang_vora]                   ; Angles in search area doc file   (input)
    [temp_ref_projs]******           ; Template for ref. projections    (output)
d135 11
a145 11
    [temp_ref_projs]******           ; Template of existing ref. projections (input) 
    (1-[num-refs])                   ; Ref. projection file numbers
    [alignsh]                        ; Shift search range
    ([radius1],[radius],1)           ; First, last ring, & skip
    [img_ang_vora]                   ; Ref. angles file                  (input)
    SCR.{******[grp]}                ; No scratch file (usually will fit in-core)
    [aligned_images]@@******          ; Aligned original image stack      (input)
    [img]                            ; Current exp. image file number
    [group_align]                    ; Alignment parameters doc file     (input)
    (0)                              ; Angular projection search restriction
    (0)                              ; Mirrored projection check flag 
a162 6
    ; Apply combined transformation to original exp. sample image
    RT SQ                                              ; Rotate & shift
    [unaligned_images]@@{******[img]}                   ; Unaligned original images stack  (input)
    [next_aligned_images]@@{******[img]}                ; New aligned exp. images stack    (output)
    [inp]                                              ; Inplane rotation angle
    [sx],[sy]                                          ; X & Y shift
d166 1
a166 1
 [group_align]                  ; Doc file                         (closed) 
d169 1
a169 1
 [sel_particles]                ; Group particle selection file    (closed) 
d171 18
d190 8
a197 8
 BP 32F                         ; Back projection, 3D, Fourier space
 [next_aligned_images]@@******   ; Template for aligned images      (input)
 [sel_particles]                ; Particle selection doc file      (input)
 [next_group_align]             ; Align parameters doc file        (input)
 *                              ; No symmetries file  
 [next_group_vol]               ; Reconstructed vol - overall      (output)
 [next_group_vol]_sub1          ; Reconstructed vol - subset 1     (output)
 [next_group_vol]_sub2          ; Reconstructed vol - subset 2     (output)
d201 2
d205 8
a212 8
 [next_group_vol]_sub1          ; Volume file - subset 1           (input) 
 [next_group_vol]_sub2          ; Volume file - subset 2           (input) 
 (0.5)                          ; Ring width
 (0.2,2.0)                      ; Lower and upper scale factor
 C                              ; Missing cone
 (90.0)                         ; Maximum tilt angle 
 (3)                            ; Factor for noise comparison
 [next_group_dres]              ; FSC doc file                     (output)
@


1.40
log
@undefined ang-step
@
text
@d16 1
d172 5
a176 2
 UD ICE                                                ; Close this file here
 [group_align]                  
@


1.39
log
@TF COR
@
text
@d61 1
a61 2
 [converg]   = 1.5*[ang-step]        ; Angular distance limit for stopping iters.
 [converg]                           ; Echo converg 
@


1.38
log
@odd/even --> sub
data + time compacted
@
text
@d15 2
a16 1
;  
d23 1
a23 1
; REGISTERS AND FILES ARE SET IN: <a href="refine settings.pam">refine settings.pam</a>)
d55 1
a55 1
; INLINE BUFFERS USED: _1, _4
d72 1
a72 1
 MU                                  ; Multiply
a75 8
 *                                   ; No more multiplications
 
 FT                                  ; Fourier transform
 _1                                  ; Fourier of CTF corrected volume   (input)
 _4                                  ; CTF corrected current volume      (output) 

 DE                                  ; _1 can be deleted here 
 _1                                  ; Fourier of CTF corrected current volume
d78 1
a78 1
 _4                                  ; CTF corrected current volume      (input) 
d125 1
a125 1
    _4                               ; CTF corrected current volume     (input)              
d133 1
a133 1
    ; Find reference image matching experimental image.  Output to registers not doc file
@


1.37
log
@echo -n
@
text
@d6 2
a7 2
;         rewrite                          ArDean Leith  Oct  2004
;         exp images name bug              ArDean Leith  Jan  2005
d9 1
a9 1
;         avg CCROT degredations           ArDean Leith  Feb  2005
d11 4
a14 3
;         more stacks                      ArDean Leith  Dec  2006
;         removed iter1 parameter          ArDean Leith  Feb  2007
;         filenames & UD NEXT              ArDean Leith  Dec  2009
d22 1
a22 1
; REGISTERS AND FILES ARE SET IN: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam)
d35 1
a35 1
;   [sel_particles]           input/select_***             Particle selection doc. file
d38 1
a38 1
;   [aligned_images]          input/dala##_***             Aligned stacked image files
d41 1
a41 1
;   [iter_refangs]            work/ang_refs_##             Reference angles doc. file        
d45 2
d48 4
a51 5
;   [next_group_vol]          work/defgrp***/vol##+        Reconstructed volume
;   [next_group_vol]_odd      work/defgrp***/vol_##+_odd   (Created & deleted)  
;   [next_group_vol]_even     work/defgrp***/vol_##+_even  (Created & deleted) 
;   [next_group_dres]         final/defgrp***/dres##+      Resolution curve doc. file
;   [img_ang_vora]            final/angvora_##_***                 
d73 2
a74 2
 [temp_ctf_file]                     ; CTF  file     (work/ctf{grp})     (input)
 _1                                  ; _1 created here                   (output)
d84 1
a84 1
 FI [nsam]                           ; Find image size
d86 1
a86 1
 (2)                                 ; Location of nsam in header
d89 1
a89 1
 [temp_ref_projs]                    ; MT stack                          (output)
d100 1
a100 1
 [num-big]    = 0                    ; Number of angular changes above iteration stop limit
d108 1
a108 1
 [num-imgs]   = 0                    ; # of images in current group
d116 1
a116 1
    ; Format of alignment parameters doc. file is:
d119 1
a119 1
    [group_align]                    ; Input alignment parameters doc. file
d121 1
a121 1
    DE                               ; Remove existing angvora doc. file  
d124 1
a124 1
    VO RAS                      
d128 1
a128 1
    [img_ang_vora]                   ; Doc. file for angles to search  (output)
d135 1
a135 1
    [img_ang_vora]                   ; Angles in search area doc. file  (input)
d140 1
a140 1
    ; Find reference image matching experimental image.  Output to registers not doc. file
d149 1
a149 1
    [aligned_images]@@******          ; Aligned original image stack           (input)
d151 1
a151 1
    [group_align]                    ; Alignment parameters doc. file     (input)
d169 1
a169 1
    [sum-diff]=[sum-diff]+[diff]                        ; Sum of angular differences
d185 1
a185 1
 [sel_particles]                ; Particle selection doc. file     (input)
d188 3
a190 14
 [next_group_vol]tmp            ; Reconstructed 3D file            (output)
 [next_group_vol]_odd           ; Reconstructed 3D file            (output)
 [next_group_vol]_even          ; Reconstructed 3D file            (output)

 CG PH,x11,x11,x11,[xcg],[ycg],[zcg]  ; Find center of gravity of new vol.
 [next_group_vol]tmp

 SH F                           ; Shift new vol. to center of gravity
 [next_group_vol]tmp            ; volume file - voltmp            (input)
 [next_group_vol]               ; volume file - vol               (output)
 -[xcg],-[ycg],-[zcg]           ; Shift amounts

 DE                             ; Delete temp vol. file - vol{iter}tmp
 [next_group_vol]tmp
d193 1
a193 1
 [next_group_dres]              ; FSC document file - dres 
d196 2
a197 2
 [next_group_vol]_odd           ; First  volume file             (input) 
 [next_group_vol]_even          ; Second volume file             (input) 
d203 1
a203 1
 [next_group_dres]              ; Resolution document file      (output)
d205 1
a205 1
 DE                             ; Remove ref. projections file (no longer needed)
d211 4
a214 4
    DE                          ; Remove previous odd group vol.
    [group_vol]_odd
    DE                          ; Remove previous even group vol.
    [group_vol]_even
d235 1
a235 1
 [next_group_align]                   ; Next align. doc file  (output)
d238 1
a238 1
 [next_group_align]                   ; Next align. doc file  (output)
d241 1
a241 1
 [next_group_align]                   ; Next align. doc file
@


1.36
log
@echo format
@
text
@d21 1
a21 1
; REGISTERS AND FILES ARE SET IN: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam); INPUT REGISTERS:
d55 1
a55 1
 echo " In smangloop, Iteration: {**[iter]}  Group: {***[grp]}  " ; date '+ Time: %x  %X'
@


1.35
log
@cosmetic
@
text
@d55 1
a55 3
 echo " In smangloop, Iteration: {**[iter]}  Group: {***[grp]}"
 VM
 date '+ Time: %x  %X'
@


1.34
log
@ang-step , sp_maxspfreq parameter
@
text
@a23 1
;   [toobig]                  Iteration ending flag   (returned)
d29 2
a33 1
;   [ang-step]                (2.0)                        Angular difference stopping limit (String)   
d61 2
@


1.33
log
@simplify-rewrite
@
text
@d1 1
a1 1
([ang-step],[radius],[alignsh],[prj-radius],[iter],[grp],[toobig],[maxspfreq])
d5 10
a14 10
;                        New                              ArDean Leith  Nov  2002
;                        rewrite                          ArDean Leith  Oct  2004
;                        exp images name bug              ArDean Leith  Jan  2005
;                        BP align bug                     ArDean Leith  Feb  2005
;                        avg CCROT degredations           ArDean Leith  Feb  2005
;                        []                               ArDean Leith  Dec  2005
;                        more stacks                      ArDean Leith  Dec  2006
;                        removed iter1 parameter          ArDean Leith  Feb  2007
;                        filenames & UD NEXT              ArDean Leith  Dec  2009
;
a23 1
;   [ang-step]                Angular difference stopping limit   
d33 1
d52 1
a52 3
; PROCEDURES CALLED: 
;
; INLINE BUFFERS USED: _1,_4
d230 1
a230 1
 echo "Iteration: {**[iter]} Group: {***[grp]}   Excessive changes: {***[toobig]}%"
@


1.32
log
@clone dir changes
@
text
@d4 10
a13 8
; SOURCE: smangloop.pam                                     ArDean Leith  Nov. 2002
;                          rewrite                          ArDean Leith  Oct. 2004
;                          exp images name bug              ArDean Leith  Jan. 2005
;                          BP align bug                     ArDean Leith  Feb. 2005
;                          avg CCROT degredations           ArDean Leith  Feb. 2005
;                          []                               ArDean Leith  Dec. 2005
;                          more stacks                      ArDean Leith  Dec. 2006
;                          removed iter1 parameter          ArDean Leith  Feb. 2007
a14 2
; MASTER COPY: /net/bali/usr1/spider/docs/techs/recon/programs/
; 
d33 1
a33 3
; INPUT FILES (SET IN: refine_settings  <a href="./refine_settings.pam">refine_settings.pam</a>.pam):
;   [order_select]            input/order_select           Image ID doc. file
;   [sorted_order_select]     input/order_select_sort      Image ID doc. fil
d40 1
a40 2
;   [iter_ang_voea]           final/angvoea_##             Ref. angles doc. file        
;   [iter_select_voea]        final/selvoea_##             Ref. angles selection doc. file    
d42 1
a42 1
; OUTPUT FILES(SET IN: refine_settings <a href="./refine_settings.pam">refine_settings.pam</a>.pam):
d46 2
a47 2
;   [next_group_vol]_odd      work/defgrp***/vol_##+_odd   (created & deleted)  
;   [next_group_vol]_even     work/defgrp***/vol_##+_even  (created & deleted) 
d50 1
a50 1
;   [temp_ref_projs]_5@@                                    (created & deleted)
d61 3
a63 3
 [radius1] = 5.0                           ; First radius for 'AP REF' (Can alter this)
 [converg] = 1.5*[ang-step]                ; Angular distance limit for stopping iters.
 [next-iter]=[iter]+1
d65 2
a66 16
 UD N [num-refs]                           ; Get number of ref. imges 
 [iter_select_voea]                        ; Reference image selection file   (input)

 ; Get number of images in current group
 UD N,[numgrps]                            ; Find number of defocus groups
 [order_select]                            ;                                  (input)

 DO [i]=1,[numgrps]                        ; Loop over defocus groups  --------
    ;         GROUP, PART.               
    UD IC [i], [grpt], [num-imgs]          ; Get current number of particles 
    [order_select]                         ; Doc file listing groups          (input)    
    IF ([grpt].EQ.[grp]) EXIT
 ENDDO
                                           ; Got number of particles in group
 UD ICE
 [order_select]
d68 1
a68 1
 MY FL                                     ; Flush results file
d71 5
a75 5
 MU                                        ; Multiply
 [iter_vft]                                ; Fourier of current volume         (input}
 [temp_ctf_file]                           ; CTF  file     (work/ctf{grp})     (input)
 _1                                        ; _1 created here                   (output)
 *                                         ; No more multiplications
d77 15
a91 15
 FT                                        ; Fourier transform
 _1                                        ; Fourier of CTF corrected volume   (input)
 _4                                        ; CTF corrected current volume      (output) 

 DE                                        ; _1 can be deleted here 
 _1                                        ; Fourier of CTF corrected current volume

 FI [nsam]                                 ; Find image size
 _4                                        ; CTF corrected current volume      (input) 
 (2)                                       ; Location of nsam in header

 MS                                        ; Make MT inline stack for ref. projections
 [temp_ref_projs]                          ; MT stack                          (output)
 ([nsam],[nsam],1)                         ; Image size
 [num-refs]                                ; Number of images allowed in stack
d93 1
a93 1
 DE                                        ; Remove existing align parameter doc file 
d108 1
d110 2
a111 2
 DO  [numpart]=1,[num-imgs]          ; Loop over all particles
    UD [numpart], [img]              ; Get current particle number 
d113 2
d125 1
a125 1
    [iter_ang_voea]                  ; Relative angles file            (input)
d216 1
a216 1
 DE                             ; Remove - refproj (no longer needed)
@


1.31
log
@[iter1]
@
text
@d39 1
a39 1
;   [aligned_images]          input/dala##_***@@            Aligned stacked image files
d46 1
a46 1
;   [next_aligned_images]     work/dala##+_***@@            Aligned stacked image file
d75 1
a75 1
 DO LB1 [i]=1,[numgrps]                    ; Loop over defocus groups  --------
d77 5
a81 5
    UD IC [i], [grpt], [num-imgs]         ; Get current number of particles 
    [order_select]                        ; Doc file listing groups          (input)    
    IF ([grpt].EQ.[grp])GOTO LB2
 LB1
 LB2                                       ; Got number of particles in group
d126 1
a126 1
 DO LB3 [numpart]=1,[num-imgs]       ; Loop over all particles
d163 1
a163 1
    [aligned_images]******           ; Aligned original images           (input)
d188 1
a188 1
    [next_aligned_images]{******[img]}                 ; New aligned exp. images stack    (output)
d191 1
a191 1
 LB3
d198 1
a198 1
 [next_aligned_images]******    ; Template for aligned images      (input)
@


1.30
log
@for stacks
@
text
@d1 1
a1 1
([ang-step],[radius],[alignsh],[prj-radius],[iter],[grp],[toobig],[iter1],[maxspfreq])
d11 1
a28 1
;   [iter1]                   Starting alignment iteration    
d233 1
a233 1
 IF ([iter] .GT. [iter1]) THEN  ; Not first iteration
@


1.29
log
@added stacks, named variables
@
text
@d183 1
a183 1
    [sum-diff]=[sumdiff]+[diff]                        ; Sum of angular differences
d253 2
a254 2
 [perdegred] = 100*[degred]/[num-imgs]                           ; Percent images with CCROT degredation
 [avg-diff]=[sum-diff]//[num-imgs]                               ; Average angular difference
d257 1
a257 1
 echo " CCROT degred.: {***[perdegred]}%  Avg degred.: {%F8.2%[avg-degred]}  Avg improve: {%F8.2%[avg-impr]}"
d262 1
a262 1
 SD -2, [toobig],[avg-diff],[avg-ccrot],[perdegred],[avg-degred],[avg-impr]
@


1.28
log
@uses named registers
@
text
@d1 1
a1 1
([ang-step],[radius],[winsize],[alignsh],[prj-radius],[iter],[grp],[toobig],[iter1],[maxspfreq])
d4 8
a11 6
; SOURCE: smangloop.pam -- Small angle refinement group loop   al Nov. 2002
;                                                              al Oct. 2004
;                                       exp images name bug    al Jan. 2005
;                                       BP align bug           al Feb. 2005
;                                       avg CCROT degreations  al Feb. 2005
;                                       []                     al Dec. 2005
d14 2
a15 1
; PURPOSE:    Runs for each defocus group on each iteration
d17 2
a18 1
; CALLED FROM: <a href="./pub_starter.pam">pub_starter.pam</a>  
d23 31
a53 30
;    [ang-step]                   Angular difference stopping limit   
;    [toobig]                     Iteration ending flag   (returned)
;    [radius]                     Radius (pixels) of the structure
;    [winsize]                    Image size
;    [alignsh]                    Shift allowed is +-[alignsh]
;    [prj-radius]                 Radius (pixels) of structure for projection
;    [iter1]                      Starting alignment iteration    
;    [iter]                       Alignment step iteration counter  
;    [grp]                        Current defocus group                      

; INPUT FILES:
;    input/order_select                   [order_select]       Image ID doc. file
;    work/defgrp(***grp}/select           [group_select]       (from prepare)
;    final/vft{**iter}                    [iter_vft]           (from refine)
;    work/ctf{***grp}                     [temp_ctf_file]      (from prepare)
;    input/dala{**iter}_{***group}@@       [aligned_images]     Aligned stacked image files
;    final/align{**iter+1}_{***grp}       [group_align]        (from inital alignment)
;    input/data{***grp}@@                  [unaligned_images]   Unaligned stacked image file  
;    final/angvoea_{**iter}               [iter_ang_voea]        
;    final/selvoea_{**iter}               [iter_select_voea] 
;
; OUTPUT FILES:
;    work/dala{**iter+1}_{***grp}@@           [next_aligned_images]
;    final/align{**iter+1}_{***grp}          [group_align]
;    work/defgrp{***grp}/vol{**iter}         [next_group_vol]
;    work/defgrp{***grp}/vol_{**iter+1}_odd  [next_group_vol]_odd  (deleted in mergegroups)
;    work/defgrp{***grp}/vol_{**iter+1}_even [next_group_vol]_even (deleted in mergegroups)
;    _5@@                                     [temp_ref_projs]      (created & deleted)
;    final/defgrp{***grp}/dres{**iter+1}     [next_group_dres]     (created dres output doc. file
;    final/angvora_{**iter}_{***iter}        [img_ang_vora]        
d55 3
a57 6
; INLINE BUFFERS USED: _1

   VM
   echo "In smangloop, Iteration: {**[iter]}  Group: {***[grp]}"
   VM
   date
d59 8
a66 4
   [radius1] = 5.0             ; First radius for 'AP REF' (Can alter this)

   [converg] = 1.5*[ang-step]  ; Angular distance limit for stopping iters.
   [next-iter]=[iter]+1
d68 2
a69 2
   UD N [num-refs]             ; Get number of ref. projections for this iteration
   [iter_select_voea]
d71 22
a92 92
   UD IC [grp], [num-imgs]     ; Get number of experimental images in this group
   [order_select]
   UD ICE
   [order_select]

   MY FL                   ; Flush results file

   MU                      ; Multiply Fourier vol by CTF 
   [iter_vft]              ; Fourier of vol for this iter.     (final/vft{iter} (input)
   [temp_ctf_file]         ; CTF correction file for this group (work/ctf{grp}) (input)
   _1                      ; Multiplied volume                                  (output)
   *
 
   FT                      ; Back Fourier transform
   _1                      ; Fourier of CTF corrected current volume      (input)
   _4                      ; CTF corrected current volume created here    (output)

   DE                      ; _1 can be deleted here 
   _1                      ; Fourier of CTF corrected current volume

   MS                      ; Make MT inline stack for ref. projections
   [temp_ref_projs]        ;                                              (output)
   ([winsize],[winsize],1) ; Image size
   [num-refs]              ; Number of images allowed in stack

   DE                      ; Remove any existing next group align doc file 
   [next_group_align]

   ; Make header for next group align doc file 
   SD /PSI, THE, PHI, REF, EXP, ANG, SX, SY, NPROJ, DIFF, CCROT, ANG, SX, SY, MIR-CC
   [next_group_align]                  ; (output)

   [num-big]    = 0                    ; Number of angular changes above iteration stop limit
   [toobig]     = 0                    ; Not OK to stop iterating
   [avg-ccrot]  = 0.0                  ; Average CCROT correlation coefficient
   [degred]     = 0.0                  ; CCROT degredation counter
   [avg-degred] = 0.0                  ; Average CCROT degredation
   [num-impr]   = 0.0                  ; CCROT improvement counter
   [avg-impr]   = 0.0                  ; Average CCROT improvement

   DO LB1 [img]=1,[num-imgs]           ; Loop over experimental sample images

      ; Format of the alignment parameters doc. file is:
      ;         PSI,THE,PHI,           REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
      UD IC [img], [psi],[the],[phi],  [d],[exp], [d],[d],[d], [d],[d],[old-ccrot]
      [group_align]                    ; Input alignment parameters doc. file

      DE                               ; Remove existing angvora doc. file  
      [img_ang_vora]                   ; angvora

      VO RAS                      
      [iter_ang_voea]                  ; Relative angles file            (input)
      -[phi],-[the],-[psi]             ; Offset
      (1,0)                            ; Psi set to zero
      [img_ang_vora]                   ; Doc. file for angles to search  (output)

      ; Create stack holding set of reference projections from input volume.
      PJ 3Q                            ; Create ref. projections
      _4                               ; CTF corrected current volume     (input)              
      [prj-radius]                     ; Radius of computed object
      (1-[num-refs])                   ; Ref. projection file numbers 
      [img_ang_vora]                   ; Angles in search area doc. file  (input)
      [temp_ref_projs]******           ; Template for ref. projections    (output)

      MY FL                            ; Flush results file

      ; Find reference image matching experimental image Output to registers not doc. file
      ;       PSI,THE,PHI,       REF#,EXP#, ANG,  SX, SY,    NPROJ,DIFF,     CCROT,  CURRENT_ALIGN
      AP REF  [psi],[the],[phi], [ref],[exp], [inp],[sx],[sy], [nproj],[diff], [ccrot], x70,x71,x72,x73
      [temp_ref_projs]******           ; Template of existing ref. projections (input) 
      (1-[num-refs])                   ; Ref. projection file numbers
      [alignsh]                        ; Shift search range
      ([radius1],[radius],1)           ; First, last ring, & skip
      [img_ang_vora]                   ; Ref. angles file                  (input)
      SCR.{******[grp]}                ; No scratch file (usually will fit in-core)
      [aligned_images]******           ; Aligned original images - dala    (input)
      [img]                            ; Current exp. image file number
      [group_align]                    ; Alignment parameters doc. file     (input)
      (0)                              ; Angular projection search restriction
      (0)                              ; Mirrored projection check flag 

      ;         PSI,THE,PHI,         REF#,EXP#, ANG,  SX,  SY,   NPROJ,DIFF,CCROT
      SD [img], [psi],[the],[phi],  [ref],[img],[inp],[sx],[sy], [num-refs],[diff],[ccrot], x70,x71,x72,x73
      [next_group_align]                                 ; Next align. doc file

      IF ([ccrot] .LT. [old-ccrot]) THEN
         [avg-degred]=[avg-degred]+([old-ccrot]-[ccrot]) ; Sum average CCROT degredation
         [degred]=[degred]+1                             ; Increment   CCROT degredations counter
      ELSE
         [avg-impr]=[avg-impr]+([ccrot]-[old-ccrot])     ; Sum average CCROT improvement
         [num-impr]=[num-impr]+1                         ; Increment   CCROT improvements counter
      ENDIF
d94 90
a183 2
      IF ([diff] .GT.[converg]) [num-big]=[num-big]+1    ; Increment large displacement counter
      [avg-ccrot]=[avg-ccrot]+[ccrot]                    ; Sum rotational CCC (for average).
d185 82
a266 81
      ; Apply combined transformation to original exp. sample image
      RT SQ                                              ; Rotate & shift
      [unaligned_images]{******[img]}                    ; Unaligned original images stack  (input)
      [next_aligned_images]{******[img]}                 ; New aligned experimental images stack 
      [inp]                                              ; Inplane rotation angle
      [sx],[sy]                                          ; X & Y shift

   LB1

   UD ICE                         ; Close this file here
   [group_align]                  

   ; Calculate refined 3D structure using centered projections and new angles. 
   BP 32F                         ; Back projection, 3D, Fourier space
   [next_aligned_images]******    ; Template for aligned images      (input)
   [group_select]                 ; Selection doc. file              (input)
   [next_group_align]             ; Align parameters doc file        (input)
   *                              ; No symmetries  
   [next_group_vol]tmp            ; Reconstructed 3D file - voltmp   (output)
   [next_group_vol]_odd           ; Reconstructed 3D file - vol_odd  (output)
   [next_group_vol]_even          ; Reconstructed 3D file - vol_even (output)

   CG PH,x11,x11,x11,[xcg],[ycg],[zcg]  ; Find center of gravity of new vol.
   [next_group_vol]tmp

   SH F                           ; Shift new vol. to center of gravity
   [next_group_vol]tmp            ; volume file - voltmp     (input)
   [next_group_vol]               ; volume file - vol        (output)
   -[xcg],-[ycg],-[zcg]                 ; Shift

   DE                             ; Delete temp vol. file - vol{iter}tmp
   [next_group_vol]tmp

   DE                             ; Delete  file
   [next_group_dres]              ; FSC document file - dres 

   RF 3                           ; Phase Residual &  shell correl.
   [next_group_vol]_odd           ; First  volume file      (input) 
   [next_group_vol]_even          ; Second volume file      (input) 
   (0.5)
   (0.2,2.0)
   C
   (90.0)
   (3)
   [next_group_dres]              ; FSC document file - dres (output)

   DE                             ; Remove - refproj 
   [temp_ref_projs] 

   IF ([iter] .GT. [iter1]) THEN  ; Not first iteration
      DE                          ; Remove previous vol 
      [group_vol]              
      DE                          ; Remove previous vol_odd
      [group_vol]_odd
      DE                          ; Remove previous vol_even
      [group_vol]_even
   ENDIF

   ; Find % of images showing excessive change in angular displacement
   [toobig]=100*[num-big]/[num-imgs]  ; % of images with excessive change in ang. displacement

   VM
   echo "Iteration: {**[iter]} Group: {***[grp]}   Excessive changes: {***[toobig]}%"

   [avg-ccrot] = [avg-ccrot]/[num-imgs]                      ; Average CCROT 
   IF ([degred] .GT. 0) [avg-degred]=[avg-degred] /[degred]  ; Average CCROT degredation
   IF ([num-impr] .GT. 0) [avg-impr]=[avg-impr]/[num-impr]   ; Average CCROT improvement
   [degred] = [degred]/[num-imgs]                            ; Percent images with CCROT degredation

   VM
   echo "Percent degred.: {%f10.2%[degred]}  Avg degred.: {%f10.2%[avg-degred]}  Avg improve: {%f10.2%[avg-impr]}"

   SD / %Large angles, Avg. CCROT, % degred.,  Avg degred.,  Avg improv.
   [next_group_align]                   ; Next align. doc file

   SD -1, [toobig],[avg-ccrot],[degred],[avg-degred],[avg-impr]
   [next_group_align]                   ; Next align. doc file

   ; Close doc files        
   SD E
   [next_group_align]                   ; Next align. doc file
d268 1
a268 1
   MY FL
@


1.27
log
@x14 passed to smangloop
@
text
@d1 1
a1 1
(x41,x42,x51,x52,x55,x56,x76,x77,x47,x74,x14)
d9 1
d19 9
a27 10
;    x41                     Angular difference stopping limit   
;    x42                     Angular search range      
;    x47                     Iteration ending flag   (returned)
;    x51                     Radius (pixels) of the structure
;    x52                     Image size
;    x55                     Shift allowed is +-x55
;    x56                     Radius (pixels) of structure for projection
;    x74                     Starting alignment iteration    
;    x76                     Alignment step iteration counter  
;    x77                     Current defocus group                      
d53 1
a53 1
   echo "In smangloop, Iteration: {**x76}  Group: {***x77}"
d57 4
a60 2
 x54 = 5.0                 ; First radius for 'AP REF' (Can alter this)
   x16 = 1.5 * x41         ; Angular distance limit for stopping iters.
d62 1
a62 3
   x86 = x76 + 1           ; Next iteration number

   UD N x53                ; Get number of ref. projections for this iteration
d65 1
a65 1
   UD IC x77, x79          ; Get number of experimental images in this group
d87 2
a88 2
   (x52,x52,1)             ; Image size
   x53                     ; Number of images allowed in stack
d95 1
a95 1
   [next_group_align]      ;                                              (output)
d97 7
a103 7
   x46 = 0                             ; Number of angular changes above iteration stop limit
   x47 = 0                             ; Not OK to stop iterating
   x91 = 0.0                           ; Average CCROT correlation coefficient
   x40 = 0.0                           ; CCROT degredation counter
   x39 = 0.0                           ; Average CCROT degredation
   x37 = 0.0                           ; CCROT improvement counter
   x38 = 0.0                           ; Average CCROT improvement
d105 1
a105 1
   DO LB1 x50=1,x79                    ; Loop over experimental sample images
d108 2
a109 3
      ;         PSI,THE,PHI,  REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT

      UD IC x50, x17,x18,x19, x11,x20,   x23,x24,x25, x29,x12,x90
d117 1
a117 1
      -x19,-x18,-x17                   ; Offset
d124 2
a125 2
      x56                              ; Radius of computed object
      (1-x53)                          ; Ref. projection file numbers 
d132 2
a133 2
      ;       PSI,THE,PHI, REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT, CURRENT_ALIGN
      AP REF  x17,x18,x19, x15,x20,   x61,x62,x63, x11,x12,x31,     x70,x71,x72,x73
d135 3
a137 3
      (1-x53)                          ; Ref. projection file numbers
      x55                              ; Shift search range
      (x54,x51,1)                      ; First, last ring, & skip
d139 1
a139 1
      SCR.{******x77}                  ; No scratch file (usually will fit in-core)
d141 1
a141 1
      x50                              ; Current exp. image file number
d146 7
a152 7
      ;       PSI,THE,PHI,  REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
      SD x50, x17,x18,x19,  x15,x50,   x61,x62,x63, x53,x12,x31,  x70,x71,x72,x73
      [next_group_align]               ; Next align. doc file

      IF (x31 .LT. x90) THEN
         x39 = x39 + (x90 - x31)       ; Sum average CCROT degredation
         x40 = x40 + 1                 ; Increment   CCROT degredations counter
d154 2
a155 2
         x38 = x38 + (x31 - x90)       ; Sum average CCROT improvement
         x37 = x37 + 1                 ; Increment   CCROT improvements counter
d158 2
a159 3
      IF (x12 .GT. x16) x46 = x46 + 1  ; Increment large displacement counter

      x91 = x91 + x31                  ; Sum rotational CCC (for average).
d162 5
a166 5
      RT SQ                            ; Rotate & shift
      [unaligned_images]{******x50}    ; Unaligned original images stack  (input)
      [next_aligned_images]{******x50} ; New aligned experimental images stack 
      x61                              ; Inplane rotation angle
      x62,x63                          ; X & Y shift
d170 1
a170 1
   UD ICE                              ; Close this file here
d183 1
a183 1
   CG PH,x11,x11,x11,x21,x22,x23  ; Find center of gravity of new vol.
d189 1
a189 1
   -x21,-x22,-x23                 ; Shift
d210 1
a210 1
   IF (x76 .GT. x74) THEN         ; Not first iteration
d220 1
a220 1
   x47 = 100 * x46 / x79  ;   % of images with excessive change in angular displacement
d223 1
a223 1
   echo "Iteration: {**x76} Group: {***x77}   Excessive changes: {***x47}%"
d225 4
a228 4
   x91 = x91 / x79                      ; Average CCROT 
   IF (x40 .GT. 0) x39 = x39 / x40      ; Average CCROT degredation
   IF (x37 .GT. 0) x38 = x38 / x37      ; Average CCROT improvement
   x40 = x40 / x79                      ; Percent images with CCROT degredation
d231 1
a231 1
   echo "Percent degred.: {%f10.2%x40}  Avg degred.: {%f10.2%x39}  Avg improve: {%f10.2%x38}"
d236 1
a236 1
   SD -1, x47,x91,x40,x39,x38
@


1.26
log
@bad       [next_group_align]               ; Next align. doc file
@
text
@d1 1
a1 1
(x41,x42,x51,x52,x55,x56,x76,x77,x47,x74)
d110 1
a110 1
      UD IC x50, x17,x18,x19, x14,x20,   x23,x24,x25, x29,x12,x90
@


1.25
log
@doc file wrong for ccrot,  IF (x76 .GT. x74) for deletions, & cosmetic
@
text
@a145 1
      [next_group_align]               ; Next align. doc file
@


1.24
log
@avg CCROT degreations wrong
@
text
@d30 1
a30 1
;    input/order_select                   [order_select]       Image ID doc. fil
d62 1
a62 1
   UD N x53                ; Get number of ref projections
d65 1
a65 1
   UD IC x77, x79          ; Get number of images in this group
d72 4
a75 4
   MU                      ; Multiply
   [iter_vft]              ; Fourier of vol for this iter.     (final/vft{iter}
   [temp_ctf_file]         ; CTF correction file for this group (work/ctf{grp})
   _1                      ; _1 created here
d79 2
a80 2
   _1                      ; Fourier of CTF corrected current volume
   _4                      ; CTF corrected current volume created here 
d86 1
a86 1
   [temp_ref_projs]
d94 2
a95 2
   SD /  PSI, THE, PHI,     REF#, EXP#,    ANG, SX, SY,  NPROJ ,DIFF, CCROT     
   [next_group_align]
d97 7
a103 7
   x46 = 0                 ; Number of angular changes above iteration stop limit
   x47 = 0                 ; Not OK to stop iterating
   x91 = 0.0               ; Average CCROT correlation coefficient
   x40 = 0.0               ; CCROT degredation counter
   x39 = 0.0               ; Average CCROT degredation
   x37 = 0.0               ; CCROT improvement counter
   x38 = 0.0               ; Average CCROT improvement
d105 1
a105 1
   DO LB1 x50=1,x79        ; Loop over experimental sample images
d117 1
a117 1
      [iter_ang_voea]                  ; Relative angles file
d146 1
d149 1
a149 1
      SD x50, x17,x18,x19,  x15,x20,   x61,x62,x63, x11,x12,x31,  x70,x71,x72,x73
d166 2
a167 2
      [unaligned_images]{****x50}      ; Unaligned original images (stack)
      [next_aligned_images]{****x50}   ; New aligned experimental images (stack) 
d176 5
a180 5
   ; Calculate new, refined 3D structure using centered projections and new angles. 
   BP 32F                         ; Back Projection - 3D Fourier
   [next_aligned_images]******    ; Template for aligned images
   [group_select]                 ; Selection doc. file   - select
   [next_group_align]             ; Align doc file - align
d186 1
a186 1
   CG PH,x11,x11,x11,x21,x22,x23  ; Find center of Gravity of new vol.
d197 3
d210 1
a210 1
   DE                             ; Remove - refproj (no longer needed)
d213 7
a219 7
   IF (x76.GT.x74) THEN           ; Not first iteration
      DE                          ; Remove bpr from this iter
      [group_bpr]              
      DE                          ; Remove bpr_odd
      [group_bpr]_odd
      DE                          ; Remove bpr_even
      [group_bpr]_even
d234 1
a234 1
   echo "Percent degredation: {%f10.2%x40}  Avg degredation: {%f10.2%x39}  Avg improve: {%f10.2%x38}"
d236 1
a236 1
   SD / Large angles, % degredation, Avg degredation, Avg improvement
d239 1
a239 1
   SD -1, x91,x40,x39,x38
@


1.23
log
@BP align bug fixed
@
text
@d8 1
a8 1
;
d100 4
a103 4
   x40 = 0.0               ; Degredation counter
   x37 = 0.0               ; Average degredataion
   x39 = 0.0               ; Improvement counter
   x38 = 0.0               ; Average improvement
d153 1
a153 1
         x40 = x40 + 1                 ; Degredations counter
d156 1
a156 1
         x37 = x37 + 1                 ; Improvements counter
d161 1
a161 1
      x91 = x91 + x31                 ; Sum rotational CCC (for average).
d219 1
a219 2
   x46 = x46 / x79  ; Fraction of images with excessive change in angular displacement
   x47 = x46 * 100  ; % of images with excessive change in angular displacement
a224 1
   x40 = x40 / x79                      ; Percent images with CCROT degredation
d227 1
@


1.22
log
@fixed bugs
@
text
@d7 1
d179 1
a179 1
   [group_align]                  ; Align doc file - align
@


1.21
log
@no mirror wanted in AP REF, many cosmetic
@
text
@d6 2
d51 4
a54 4
      VM
      echo "In smangloop, Iteration: {**x76}  Group: {***x77}"
      VM
      date
d56 2
a57 113
  x54=5.0                 ; First radius for 'AP REF' (Can alter this)
      x16=1.5*x41             ; Angular distance limit for stopping iters.
 
      x58=int(x52/2)+1        ; Image center
      x86=x76+1               ; Next iteration
      x48=0                   ; Number of angular changes
      x46=0                   ; Number of angular changes greater than iteration stop limit
      x47=0                   ; Not OK to stop iterating

      UD N x53                ; Gets number of ref projections
      [iter_select_voea]

      x78 = 1.0               ; Beginning image number

      UD IC x77, x79          ; Gets number of images in this group
      [order_select]
      UD ICE
      [order_select]

      MY FL                   ; Flush results file

      MU                      ; Multiply
      [iter_vft]              ; Fourier of vol for this iter. (final/vft{iter}
      [temp_ctf_file]         ; CTF correction  file          (work/ctf{grp})
      _1                      ; _1 created here
      *
 
      FT                      ; Back Fourier transform
      _1                      ; Fourier of CTF corrected current volume
      _4                      ; CTF corrected current volume created here 

      DE                      ; _1 can be deleted here 
      _1                      ; Fourier of CTF corrected current volume

      MS                      ; Make MT inline stack for ref. projections
      [temp_ref_projs]
      (x52,x52,1)             ; Image size
      x53                     ; Number of images allowed in stack

      DE                      ; Remove any existing next group align doc file 
      [next_group_align]

      ; Make header for next group align doc file 
      SD / PSI,THE,PHI,     MIR-REF,EXP#,    ANG,SX,SY,   NPROJ,DIFF,CCROT     
      [next_group_align]

      x91 = 0.0               ; Average CCROT correlation coefficient
      x40 = 0.0               ; Degredation counter
      x37 = 0.0               ; Average degredataion
      x39 = 0.0               ; Improvement counter
      x38 = 0.0               ; Average improvement

      DO LB1 x50=1,x79        ; Loop over experimental sample images

         ; Format of the alignment parameters doc. file is:
         ;         PSI,THE,PHI, MIR-REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT

         UD IC x50, x17,x18,x19, x14,x20,      x23,x24,x25, x29,x12,x90
         [group_align]                    ; Input alignment parameters doc. file

         DE                               ; Remove existing angvora doc. file  
         [img_ang_vora]                   ; angvora

         VO RAS                                                                 
         [iter_ang_voea]                  ; Relative angles file
         -x19,-x18,-x17                   ; Offset
         (1,0)                            ; Psi set to zero
         [img_ang_vora]                   ; Doc. file for angles to search  (output)

         ; Create stack holding set of reference projections from input volume.
         PJ 3Q                            ; Create ref. projections
         _4                               ; CTF corrected current volume     (input)              
         x56                              ; Radius of computed object
         x78-x53                          ; Ref. projection file numbers 
         [img_ang_vora]                   ; Angles in search area doc. file  (input)
         [temp_ref_projs]******           ; Template for ref. projections    (output)

         MY FL                            ; Flush results file

         ; Find reference image matching experimental image Output to registers not doc. file
         ;       PSI,THE,PHI, REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT, CURRENT_ALIGN
         AP REF  x17,x18,x19, x15,x20,   x61,x62,x63, x11,x12,x31,     x70,x71,x72,x73
         [temp_ref_projs]******           ; Template of existing ref. projections 
         x78-x53                          ; Ref. projection file numbers
         x55                              ; Shift search range
         (x54,x51,1)                      ; First, last ring, & skip
         [img_ang_vora]                   ; Ref. angles file    (input)
         SCR.{******x77}                  ; No scratch file if fits in-core
         [aligned_images]{******x50}      ; Aligned original images (dala stack)
         (1)                              ; Current exp. image file number
         [group_align]                    ; Alignment parameters doc. file     (input)
         (0)                              ; Angular projection search restriction
         (0)                              ; Mirrored projection check flag 

         ;       PSI,THE,PHI, MIR-REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
         SD   x50, x17,x18,x19, x15,x20,    x61,x62,x63,  x11,x12,x31,  x70,x71,x72,x73
         [next_group_align]               ; Next align. doc file

         IF (x31 .LT. x90) THEN
            x39 = x39 + (x90 - x31)       ; Sum average degredation
            x40 = x40 + 1                 ; Degredations counter
            ;;VM
            ;;echo {***x50} ------- DEGRADES----
            ;;VM
            ;;echo initial alis: {%f6.1%x23},{%f6.1%x24},{%f6.1%x25} CC: {%f8.1%x90} : {%f6.0%x14}
            ;;VM
            ;;echo final alis..: {%f6.1%x61},{%f6.1%x62},{%f6.1%x63} CC: {%f8.1%x31} : {%f6.0%x15}
            ;;VM
            ;;echo rots........: {%f6.1%x17},{%f6.1%x18},{%f6.1%x19}.....{%f6.1%x93},{%f6.1%x94},{%f6.1%x95}
         ELSE
            x38 = x38 +(x31 - x90)        ; Sum average improvement
            x37 = x37 + 1                 ; Improvements counter
         ENDIF
d59 1
a59 2
         x48 = x48 + 1
         IF (x12 .GT. x16) x46 = x46+1    ; Increment large displacement counter
d61 2
a62 2
          x91 = x91 + x31                 ; Sum rotational correlation coefficient (for average).
        
d64 92
a155 53
         ; Apply combined transformation to original exp. sample image
         RT SQ                            ; Rotate & shift
         [unaligned_images]{****x50}      ; Unaligned original images (stack)
         [next_aligned_images]{****x50}   ; New aligned experimental images (stack) 
         x61                              ; Inplane rotation angle
         x62,x63                          ; X & Y shift
      LB1

      UD ICE                              ; Close this file here
      [group_align]                  

      ; Calculate new, refined 3D structure using centered projections and new angles. 
      BP 32F                         ; Back Projection - 3D Fourier
      [next_aligned_images]******    ; Template for aligned images
      [group_select]                 ; Selection doc. file   - select
      [group_align]                  ; Align doc file - align
      *                              ; No symmetries  
      [next_group_vol]tmp            ; Reconstructed 3D file - voltmp
      [next_group_vol]_odd           ; Reconstructed 3D file - vol_odd
      [next_group_vol]_even          ; Reconstructed 3D file - vol_even

      CG PH,x11,x11,x11,x21,x22,x23  ; Find center of Gravity of new vol.
      [next_group_vol]tmp

      SH F                           ; Shift new vol. to center it
      [next_group_vol]tmp            ; Input  file - voltmp
      [next_group_vol]               ; Output file - vol
      -x21,-x22
      -x23

      DE                             ; Delete temp file - vol{iter}tmp
      [next_group_vol]tmp

      RF 3                           ; Phase Residual &  shell correl.
      [next_group_vol]_odd           ; First  volume input file  
      [next_group_vol]_even          ; Second volume input file
      (0.5)
      (0.2,2.0)
      C
      (90.0)
      (3)
      [next_group_dres]              ; Output document file - dres

      DE                             ; Remove - refproj (no longer needed)
      [temp_ref_projs] 

      IF (x76.GT.x74) THEN           ; Not first iteration
         DE                          ; Remove bpr from this iter
         [group_bpr]              
         DE                          ; Remove bpr_odd
         [group_bpr]_odd
         DE                          ; Remove bpr_even
         [group_bpr]_even
d157 2
d160 81
a240 24
      ; Find % of images showing excessive change in angular displacement
      x46 ; DEBUG reg 46
      x46 = x46 / x48
      x47 = x46 * 100
      VM
      echo "Iteration: {**x76} Group: {***x77}   Excessive changes: {***x47}%"

      x91=x91/x79                          ; Large projection angles
      x39=x39/x40                          ; Average degredation
      x40=x40/x79                          ; Percent CCROT Degredation
      x38=x38/x37                          ; Average improvement

      VM
      echo "Percent degredation: {%f10.2%x40}  Avg degredation: {%f10.2%x39}  Avg improve: {%f10.2%x38}"

      SD / Large angles, % degredation, Avg degredation, Avg improvement
      [next_group_align]                   ; Next align. doc file

      SD -1,x91,x40,x39,x38
      [next_group_align]                   ; Next align. doc file

      ; Close doc file usages        
      SD E
      [next_group_align]                   ; Next align. doc file
d242 1
a242 1
      MY FL
@


1.20
log
@x49 shud have been x40 in SD
@
text
@d4 2
a5 2
; smangloop.pam -- Small angle refinement group loop   al Nov. 2002
;                                                      al Oct. 2004
d8 1
a8 1
; PURPOSE:    Runs  for each defocus group on each iteration
d24 1
a24 1
;    x77                     Defocus group                      
d47 1
a47 1
; INLINE BUFFERS USED: _1,_2
d63 1
a63 1
      UD N,x53                ; Gets x53 = number of ref projections
d66 1
a66 1
      x78=1.0                 ; Beginning image number
d68 1
a68 1
      UD IC,x77,x79           ; Sets x79 to number of images in this group
a92 5
      MS                      ; Make MT inline stack for possible mirrored image
      _2@@                     ; Aligned experimental image 
      (x52,x52,1)             ; Image size
      (1)                     ; Single image

d95 1
d106 1
a106 1
      DO LB1 x50=x78,x79     ; Loop over experimental sample images
a113 20
        IF (x14.LT.0)THEN
            ; In 3d space projection with direction: (psi, theta, phi) has 
            ; mirrored (around x-axis) counterpart: (-psi, 180-theta, phi+180).
            ; mirrored (around x-axis) counterpart: (-psi, 180+theta, phi).
            x14 = -x14                    ; No longer mirrored

            x17 = -x17                    ; PSI is usually 0.0?
            x18 = 180 + x18               ; 180 degrees opposite projection

            MR 
            [aligned_images]{******x50}   ; Aligned original images (stack)
            _2@@1                          ; Aligned experimental image 
            Y                             ; Axis

         ELSE
            CP 
            [aligned_images]{******x50}   ; Aligned original images (dala stack)
            _2@@1                          ; Aligned experimental image 
         ENDIF

d133 1
a133 11
         DE
         [group_align]_mir                ; Mirrored alignment parameters doc. file

         SD 1, x17,x18,x19, x14,x20,       x23,x24,x25, x29,x12,x90
         [group_align]_mir                ; Adjusted alignment parameters doc. file

         SD E
         [group_align]_mir                ; Adjusted alignment parameters doc. file

         ; Use 'AP REF' to find reference image matching experimental image   
         ; Outputs to registers not doc. file
d136 11
a146 11
         [temp_ref_projs]******    ; Template of existing ref. projections 
         x78-x53                   ; Ref. projection file numbers
         x55                       ; Shift search range
         (x54,x51,1)               ; First, last ring, & skip
         [img_ang_vora]            ; Ref. angles file    (input)
         SCR.{******x77}           ; No scratch file if fits in-core
         _2@@*                      ; Template for current exp. aligned image 
         (1)                       ; Current exp. image file number
         [group_align]_mir         ; Temp mirrored alignment parameters doc. file (input)
         (0)                       ; Angular projection search restriction
         (1)                       ; Mirrored projection check flag 
d150 1
a150 1
         [next_group_align]                 ; Next align. doc file
a151 5
         ;;if (x15 .lt. 0) then  
         ;; VM
         ;; echo {***x50} ----- MIRRORED ------
         ;;endif

d153 2
a154 2
            x39=x39+(x90-x31)               ; Sum average degredation
            x40 = x40 + 1                   ; Degredations counter
d164 2
a165 2
            x38=x38+(x31-x90)               ; Sum average improvement
            x37=x37+1                       ; Improvements counter
d168 2
a169 2
         x48=x48+1
         IF(x12.GT.x16)x46=x46+1 ; Increment large displacement counter
d171 2
a172 2
         ; Sum the rotational correlation coefficient (for average).
         x91=x91+x31
d175 5
a179 19
         IF(x81.GE.0) THEN                 ; No mirror
            RT SQ                          ; Rotate & shift
            [unaligned_images]{****x50}    ; Unaligned original images (stack)
            [next_aligned_images]{****x50} ; New aligned experimental images (stack) 
            x61                            ; Inplane rotation angle
            x62,x63                        ; X & Y shift
         ELSE                              ; Mirrored
            RT SQ                          ; Rotate & shift
            [unaligned_images]{******x21}  ; Unaligned original image
            _1                             ; Temp. output file
            x61                            ; Inplane rotation angle
            x62,x63                        ; Shifts

            MR                             ; Mirror
            _1                             ; Rotated, unaligned original image
            [next_aligned_images]{****x50} ; New aligned experimental images (stack) 
            Y                              ; Around Y axis
         ENDIF

d182 1
a182 1
      UD ICE                               ; Close this file here
a183 2
      DE
      [group_align]_mir                    ; Mirrored parameters doc. file
d185 1
a185 9
      ; Remove inline files
      DE
      _1
      DE
      _2

      ; Calculate new, refined 3D structure using centered 
      ; projections  and the corrected angles from angular
      ; document file angles***. 
d195 1
a195 2
      ; Center 3D
      CG PH,x11,x11,x11,x21,x22,x23  ; Center of Gravity of new vol.
d198 1
a198 1
      SH F                           ; Shift new vol.
d220 1
a220 1
      IF(x76.GT.x74) THEN            ; Not first iteration
d242 1
a242 1
      echo Percent degredation: {%f10.2%x40}  Avg degredation: {%f10.2%x39}  Avg improve: {%f10.2%x38}
@


1.19
log
@SD had bad /
@
text
@d311 1
a311 1
      SD -1,x91,x49,x39,x38
@


1.18
log
@output messages
@
text
@d104 2
a105 2
      x91 = 0.0               ; Zero the sum of correlation coefficients
      x49 = 0.0               ; Degredation counter
d107 1
a108 1
      x39 = 0.0               ; Improvement counter
d193 1
a193 1
            x49 = x49 + 1                   ; Degredations counter
a234 17
      x91=x91/x79                          ; Large projection angle
      x49=x49/x79                          ; CCROT Degredataion
      x39=x39/x40                          ; Average degredation
      x38=x38/x37                          ; Average improvement
vm
echo percent degredation: {%f10.2%x49}  Avg degredation: {%f10.2%x39}  Avg improve: {%f10.2%x38}

      SD \ Large angles, % degredation, Avg degredation, Avg improvement
      [next_group_align]                   ; Next align. doc file

      SD -1,x91,x49,x39,x38
      [next_group_align]                   ; Next align. doc file

      ; Close doc file usages        
      SD E
      [next_group_align]                   ; Next align. doc file
 
d293 26
a318 7
   ; find % of images showing excessive change in angular displacement
   x46 ; DEBUG reg 46
   x46 = x46 / x48
   x47 = x46 * 100
   VM
   echo "Iteration: {**x76} Group: {***x77}   Excessive changes: {***x47}%"
   MY FL
@


1.17
log
@works!
@
text
@d142 4
a145 4
         [iter_ang_voea] 
         -x19,-x18,-x17
         (1,0)
         [img_ang_vora]                ; Doc. file for angles to search  (output)
d159 1
d162 1
d167 1
a167 2
         ; Restricted search, do not check mirrored positions.
         ; Output to registers not doc. file
d186 5
d192 4
a195 8
            x49 = x49 + 1                   ; Degredation counter
         ENDIF
 
         IF (x31 .LT. x90) THEN
            x39=x39+(x90-x31)               ; Average degredation
            x49 = x49 + 1                   ; Degredation counter
            VM
            echo {***x50} ------- DEGRADES----
d202 3
a204 3
         else
            x38=x38+(x31-x90)               ; Average improvement
            x37=x37+1                       ; mprovement counter
a206 19
         ;;if (x15 .lt. 0) then ; ---------------------------------
         ;; VM
         ;; echo {***x50} ----- MIRRORED ------
         ;;endif
         ;;if (x31 .lt. x90) then
         ;; VM
         ;; echo {***x50} ------- DEGRADES----
         ;;else
         ;; VM
         ;; echo {***x50} ------- BETTER ----
         ;;endif
         ;; VM
         ;; echo initial alis: {%f6.1%x23},{%f6.1%x24},{%f6.1%x25} CC: {%f8.1%x90} : {%f6.0%x14}
         ;; VM
         ;; echo final   alis: {%f6.1%x61},{%f6.1%x62},{%f6.1%x63} CC: {%f8.1%x31} : {%f6.0%x15}
         ;; VM
         ;; echo final   rots: {%f6.1%x17},{%f6.1%x18},{%f6.1%x19}
         ;;endif ---------------------------------------------------

d214 1
a214 1
         IF(x81.GE.0) THEN               ; No mirror
d242 1
a242 1
      SD \ Large angls, % degredation, Avg degredation, Avg improvement
@


1.16
log
@corrected bugs
@
text
@d106 4
d119 3
a121 3
;           In 3d space projection with direction: (psi, theta, phi) has 
;           mirrored (around x-axis) counterpart: (-psi, 180-theta, phi+180).
;           mirrored (around x-axis) counterpart: (-psi, 180+theta, phi).
d141 5
a145 14
         DO LB2 x11=1,x53                 ; Loop over all ref. angles
            UD IC x11, x27,x28,x29        ; Set of relative search angles  (input) 
            [iter_ang_voea] 

            x38 = x18 - x28               ; Offset relative angle vs current angle

            SD x11, x17,x38,x19           ; Save new set of reference angles
            [img_ang_vora]                ; Doc. file for angles to search  (output)
         LB2

         UD ICE
         [iter_ang_voea]                  ; Set of relative search angles (input)
         SD E
         [img_ang_vora]                   ; Doc. file for angles to search (output)
d178 1
a178 1
         (180)                     ; Angular projection search restriction
d189 16
d254 9
a262 1
      SD -1,x91,x49
@


1.15
log
@comment
@
text
@d4 2
a5 2
; smangloop.pam -- Small angle refinement group loop   al Nov 2002
;
d18 1
a18 1
;    x51                     Radius of the structure
d21 1
a21 1
;    x56                     Radius of the structure for projection
d27 7
a33 7
;    input/order_select                   [order_select]        Image ID doc. fil
;    work/defgrp(***grp}/select           [group_select]        (from prepare)
;    final/vft{**iter}                    [iter_vft]            (from refine)
;    work/ctf{***grp}                     [temp_ctf_file]       (from prepare)
;    input/dala{**iter}_{***group}@@       [aligned_images]      Aligned stacked image files
;    final/align{**iter+1}_{***grp}       [group_align]         (from inital alignment)
;    input/data{***grp}@@                  [unaligned_images]    Unaligned stacked image file  
d47 1
a47 1
; INLINE BUFFERS USED: _1,_2,_3
d90 7
a96 2
      x52,x52,x78
      x53
d99 8
a106 3
      [next_group_align] 

      x91= 0.0                ; Zero the sum of correlation coefficients
a107 2
      DO LB55 x50=x78,x79     ; Loop over experimental sample images

d109 1
a109 1
         ;          PSI,THE,PHI, MIR-REF#,EXP#, ANG,SX,SY,   NPR OJ,DIFF
d111 2
a112 2
         UD IC,x50, x17,x18,x19, x15,x20,       x23,x24,x25, x29,x12
         [group_align]             ; Input alignment parameters doc. file
d114 1
a114 1
         IF (x15.LT.0)THEN
d118 14
a131 4
            x15=-x15
            x17=-x17               ; Usually 0.0?
            x18=180+x18
            x19=x19
d133 3
a135 24
         
;VM
;echo initial {***x50}= {%f6.1%x17},{%f6.1%x18},{%f6.1%x19}

         CP                        ; Copy current image to inline file (for speed)
         [aligned_images]{****x50} ; Current aligned image input file
         _6@@1                      ; Inline file 

         DE                     ; Remove any existing angvora doc. file  
         [img_ang_vora]       ; angvora

         VO RAS                 ; Rotate angles to get angular range
         [iter_ang_voea]        ; Set of relative search angles  (input)
         -x19,-x18,-x17         ; Initial rotation 
         (1,0.0)                ; First Euler angle (PSI) set to zero
         [img_ang_vora]         ; Doc. file for angles to search  (output)

         ; Create stack holding set of angular ref. projections from input volume.
         PJ 3Q                   ; Create reference projections
         _4                      ; Input volume                
         x56                     ; Radius of object
         x78-x53                 ; File numbers
         [img_ang_vora]          ; Angles in search area doc. file  (input)
         [temp_ref_projs]******  ; Template for ref. projections  (output)
d137 31
a167 1
         MY FL                   ; Flush results file
d172 13
a184 14
         ;       PSI,THE,PHI, REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
         AP REF  x17,x18,x19, x15,x20,   x61,x62,x63, x11,x12,x31
         [temp_ref_projs]****** ; Template of existing ref. projections 
         x78-x53                ; Ref. projection file numbers
         x55                    ; Shift search range
         (x54,x51,1)            ; First, last ring & skip
         [img_ang_vora]         ; Ref. angles file  (input)
         SCR.{******x77}        ; No scratch file if fits in-core
         [aligned_images]****   ; Template for current exp. aligned image (always 1) 
         x50                    ; Current exp. images file numbers
         [group_align]          ; Exp. images alignment doc. file (input)
         x42                    ; Angular projection search restriction
         (0)                    ; Mirrored projection check flag NO!
         ;[next_group_align]     ; NO Alignment doc file
d186 2
a187 3

         ;       PSI,THE,PHI, REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
         SD   x50, x17,x18,x19, x15,x20,   x61,x62,x63, x11,x12,x31,x70,x71,x72,x73
d190 22
a211 2
;VM
;echo final  {***x50}= {%f6.1%x17},{%f6.1%x18},{%f6.1%x19}
d220 25
a244 14
         RT SQ                          ; Rotate & shift
         [unaligned_images]{****x50}    ; Unaligned original images (stack)
         [next_aligned_images]{****x50} ; New aligned experimental images (stack) 
         x61                            ; Inplane rotation angle
         x62,x63                        ; X & Y shift

         UD ICE                         ; Must close this file here
         [img_ang_vora]                 ; angvora

      LB55

      x91=x91/x79
      SD -1,x91
      [next_group_align]                 ; Next align. doc file
d248 1
a248 1
      [next_group_align]                 ; Next align. doc file
d250 1
a250 1
      UD ICE                             ; Close this file here
d252 2
a259 5
      DE
      _3
      DE
      _6

d309 1
a309 1
x46 ; DEBUG reg 46
@


1.14
log
@fixed some problems
@
text
@d255 1
a255 2
   ; If fewer than 5% rotated by more than 1.5 * angular distance
   ;      step used, We can stop now
@


1.13
log
@bad comments
@
text
@d43 1
a43 1
;    local/refproj{**iter}_{***grp}@@         [temp_ref_projs]      (created & deleted)
d45 1
a45 1
;    final/angvora_{**iter}                  [group_ang_vora]        
d47 1
a47 1
; INLINE BUFFERS USED: _1,_2,_3,_6
d54 1
a54 1
  x54=10.0                 ; First radius for 'AP REF' (Can alter this)
a62 4
      x57=2*x55+1             ; Shift allowed is +-x55, input images are padded
      x95=x52-x55+1
      x60=x55+1               ; Center of the windowed CCF

d67 2
a68 1
      UD IC,x77,x79           ; x79 is number of images in this group
a69 1

a95 6
      DOC SORT                ; Sort the alignment doc file by ref. number
      [group_align] 
      [group_align]_tmp
      (4)                     ; Fourth col. is ref #
      N                       ; Do not renumber keys

a96 1
      x97= 0                  ; Last reference used
d98 1
a98 1
      DO LB55 x50=x78,x79     ; Loop over all experimental sample  images
d101 1
a101 1
         ;          PSI,THE,PHI, MIR-REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF
d103 1
a103 1
         UD IC,x50, x17,x18,x19, x15,x11,       x23,x24,x25, x29,x12
a105 1
         x20=x15
d116 3
d120 1
a120 1
         [aligned_images]{****x15} ; Current image input file
d123 2
a124 19

         IF (x15.NE.x97)THEN
            ; This is a new projection direction
            DE                     ; Remove any existing angvora doc. file  
            [group_ang_vora]       ; angvora

            VO RAS                 ; Rotate angles to get angular range
            [iter_ang_voea]        ; Set of relative search angles
            -x19,-x18,-x17         ; Initial rotation 
            (1,0.0)                ; First Euler angle (PSI) set to zero
            [group_ang_vora]       ; Output doc. file lists angles in search area

            ; Create stack holding set of angular ref. projections from input volume.
            PJ 3Q                  ; Create reference projections
            _4                     ; Input volume                
            x56                    ; Radius of object
            x78-x53                ; File numbers
            [group_ang_vora]       ; Angles in search area doc. file  (input)
            [temp_ref_projs]****** ; Template for ref. projections    (output)
d126 13
a138 2
            x97=x20                ; Current ref. proj. set in use
         ENDIF
d140 1
a140 1
         MY FL                     ; Flush results file
d146 21
a166 13
         AP REFT x11,x11,x11, x11,x11,   x61,x62,x63, x11,x12,x31
         [temp_ref_projs]@@****** ; Template of existing ref. projections 
         x78-x53               ; Ref. projection file numbers
         x55                   ; Shift search range
         (x54,x51,1)           ; First, last ring & skip
         [iter_ang_voea]       ; Ref. angles file (input)
         SCR.{******x77}       ; No scratch file if fits in-core
         _6@@*                  ; Template for current exp. aligned image (always 1) 
         (1)                   ; Current exp. images file numbers
         [group_align]         ; Exp. images alignment doc. file (input)
         x42                   ; Angular projection search restriction
         (0)                   ; Mirrored projection check flag NO!
         [next_group_align]    ; Alignment doc file (output)
d176 2
a177 2
         [unaligned_images]{****x15}    ; Unaligned original images (stack)
         [next_aligned_images]{****x15} ; New aligned experimental images (stack) 
d182 1
a182 1
         [group_ang_vora]               ; angvora
@


1.12
log
@mirror calc changed again
@
text
@d119 3
a121 3
C           In 3d space projection with direction: (psi, theta, phi) has 
c           mirrored (around x-axis) counterpart: (-psi, 180-theta, phi+180).
c           mirrored (around x-axis) counterpart: (-psi, 180+theta, phi).
@


1.11
log
@x56 for proj. radius
@
text
@d121 1
d123 3
a125 3
            x17=-x17               ; Always 0.0
            x18=180-x18
            x19=180+x19
@


1.10
log
@test for mirrored needed,
@
text
@d1 1
a1 1
(x41,x42,x51,x52,x55,x76,x77,x47,x74)
d21 1
a46 2
; PROCEDURES CALLED:
;
a62 1
      x56=2*x52               ; Double the size
d146 1
a146 1
            x51                    ; Radius of object
@


1.9
log
@ap ref
@
text
@d1 1
a1 1
(x41,x51,x52,x55,x76,x77,x47,x74,x75)
d15 2
a16 1
;    x41                     Angular steps           (varies with iter)
a21 1
;    x75                     Ending alignment   iteration   
d46 1
a46 1
; PROCEDURES CALLED: @@angdif
d55 2
a56 2
  x54=10.0                 ; First radius for AP (Can alter this)
      x17=1.5*x41             ; Angular distance limit for stopping iters.
d108 1
a108 1
      x91=0.0                 ; Zero the sum of correlation coefficient
d113 2
a114 5
         ; Format of the align parameters doc file is:
         ; angle, angle, angle, ref#,CC, inplane angle, Sx, Sy, mirror, ang. diff
         ; x29=flag for Y-mirror (0-no mirror; 1-mirror)
         UD IC,x50,x13,x14,x15,x96,x23,x24,x25,x29,x12
         [group_align]          ; Input alignment parameters doc. file
d116 14
a129 1
         CP                   ; Copy current image to inline file (for speed)
d131 1
a131 1
         _6_1                      ; Inline file 
d135 1
d141 2
a142 2
            -x15,-x14,-x13         ; Initial rotation 
            (1,0.0)                ; First Euler angle (PSI)set to zero
d153 1
a153 1
            x97=x15                ; Current ref. proj. set in use
d156 1
a156 1
         MY FL                  ; Flush results file
d161 2
a162 9

         ; x81=most similar reference, x82=CC, x83=in-plane rotation angle,
         ; x12=angular change

         ; x81=most similar reference, x82=CC, x83=in-plane rotation angle,
         ; x12=angular change

C     &       '<,<,<, REF#,CCROT,INPLANE <, SX,SY, MIR, < DIFF,PEAKV'
         AP REFT x11,x11,x11, x11,x31,x61,x62,x63,x11,x12
d164 1
a164 1
         x78-x53               ; Ref. projections file numbers
d167 1
a167 1
         [iter_ang_voea]       ; Input - angvoea ref. angles file
d169 1
a169 1
         _6_*                  ; Template for current exp. aligned images 
d171 2
a172 2
         [group_align]         ; Exp. images alignment doc. file < < < .....
         x14                   ; Angular projection search restriction
d174 1
a174 1
         [next_group_align]    ; Output - alignment doc file
d177 1
a177 1
         IF(x12.GT.x17)x46=x46+1 ; Increment large displacement counter
d183 5
a187 5
         RT SQ                        ; Rotate & shift
         [unaligned_images]{****x15}  ; Unaligned original images (stack)
         [next_aligned_images]{****x15} ; New aligned experimental image 
         x61                          ; Angle
         x62,x63                      ; Shift
d189 2
a190 2
         UD ICE                       ; Must close this file here
         [group_ang_vora]             ; angvora
@


1.8
log
@align doc file used now
@
text
@d56 1
a56 1
      x45=1.5*x41             ; Angular distance limit for stopping iters.
d102 6
d109 1
a112 4
         CP                   ; Copy current image to inline file (for speed)
         [aligned_images]{****X50} ; Current image input file
         _6                        ; Inline file 

d114 1
a114 1
         ; angle, angle, angle, CC, inplane angle, Sx, Sy, mirror, ang. diff
d116 1
a116 1
         UD IC,x50,x13,x14,x15,x11,x23,x24,x25,x29,x12
d119 4
a122 2
         DE                     ; Remove any existing angvora doc. file  
         [group_ang_vora]       ; angvora
d124 17
a140 13
         VO RAS                 ; Rotate angles to get angular range
         [iter_ang_voea]        ; Set of relative search angles
         -x15,-x14,-x13         ; Initial rotation 
         (1,0.0)                ; First Euler angle (PSI)set to zero
         [group_ang_vora]       ; Output doc. file lists angles in search area

         ; Create stack holding set of angular ref. projections from input volume.
         PJ 3Q                  ; Create reference projections
         _4                     ; Input volume                
         x51                    ; Radius of object
         x78-x53                ; File numbers
         [group_ang_vora]       ; Angles in search area doc. file  (input)
         [temp_ref_projs]******  ; Template for ref. projections    (output)
d142 3
d147 1
a147 1
         ; Use 'AP RNS' to find reference image matching experimental image   
d154 18
a171 14
         AP RNS x81,x82,x83
         [temp_ref_projs]******  ; Template for limited range ref. projections 
         x78-x53                 ; Ref. projections file numbers
         x54,x51                 ; First & last ring
         (0)                     ; Skip
         SCR.{******x77}         ; No scratch file if fits in-core
         _6                      ; Current exp. image 

         UD IC,x81,x66,x67,x68   ; Get angles chosen for this image
         [group_ang_vora]        ; angvora

         ; Find extent of angular distance change
         @@angdif(x13,x14,x15,x66,x67,x68,x12)
x12
d173 1
a173 50
         IF(x12.GT.x45)x46=x46+1 ; Increment large displacement counter

         RT SQ                   ; Rotate the images
         _6                      ; Current aligned image     
         _1                      ; Rotated aligned original images
         x83                     ; Inplane angle (from 'AP RNS')
         (0,0)                   ; No shift

         PD                      ; Pad to 2X size
         _1                      ; Rotated aligned original images
         _3                      ; Padded, rotated aligned original images
         x56,x56                 ; Padded size
         B
         (1,1)

         PD                          ; Pad ref. image 
         [temp_ref_projs]{******x81}  ; Current reference image 
         _2                          ; Padded current ref. image
         x56,x56                     ; Padded size
         N
         (0.000E+00)
         (1,1)
       
         ; Use cross-correlation to center exp. image inside ref. image
         ; Calculate shifts

         CC N       ; Calculate cross-correlation
         _3         ; Padded current exp. image
         _2         ; Padded current reference image
         _3         ; CC image

         WI        ; Window from padded CC image
         _3        ; Padded CC image
         _2        ; Windowed (orig. size) image
         x57,x57
         x95,x95

         PK x10,x11,x11,x11,x31,x32,x33    ; Peak search within CC image
         _2
         (0)

         IF (x10 .LE. 0.0) THEN
            ; When there was no peak found, translation is (0,0).  In this 
            ; case get a value at the origin of the CCF
            ; and store in in shift document file.  This value is needed for
            ; sorting and calculation of the average correlation coeff.
             GP x33
            _2
            x60,x60
         ENDIF
d175 2
a176 2
         ; Increment sum for average correlation coefficient.
         x91=x91+x33
d178 6
a183 44
         ; Combine rotation, mirror, and shift with the previous 
         ; transformation and apply to the original experimental images
         x31=-x31
         x32=-x32

         IF(x29.EQ.0)  THEN
            ; Not mirrored
            SA P,x61,x62,x63               ; Output to registers
            x23,x24,x25                    ; Old inplane angle, & shifts
            x83,x31,x32                    ; New inplane angle, & shifts
            x64=0

            RT SQ                          ; Rotate & shift
            [unaligned_images]{****x50}    ; Unaligned original image 
            [next_aligned_images]{****x50} ; New aligned experimental image 
            x61                            ; Rotation
            x62,x63                        ; Shift
         ELSE
            ; Mirrored
            x35=-x83
            x36=-x31
            SA P,x61,x62,x63               ; Output to registers
            x23,x24,x25                    ; Old inplane angle, & shifts
            x35,x36,x32                    ; New inplane angle, & shifts
            x64=1 
            
            RT SQ                          ; Rotate & shift
            [unaligned_images]{****x50}    ; Unaligned original image stack
            _1                             ; Temp. aligned experimental image
            x61                            ; Rotation
            x62,x63                        ; Shift

            MR                             ; Mirror
            _1                             ; Temp. inline file
            [next_aligned_images]{****x50} ; New aligned experimental image 
            Y
          ENDIF

         ; Save alignment parameters
         ; angle, angle, angle, cc, inplane angle, Sx, Sy, mirror, ang. diff
         ; x64=flag for Y-mirror (0-no mirror; 1-mirror)
         ; x12=angular difference in this iteration
         SD x50,x66,x67,x68,x82,x61,x62,x63,x64,x12         
         [next_group_align]              ; Next align. doc file
d185 2
a186 2
         UD ICE                          ; Must close this file here
         [group_ang_vora]                ; angvora
a210 5
      ; If fewer than 5% rotated by more than 1.5 * angular distance
      ;      step used, We can stop now
x46 ; DEBUG reg 46
      x46 = x46 / x48
      IF(x46.LE.0.05)  x47=1 ; OK to stop for this group (returned)
d258 6
d265 1
a265 1
   echo "smangloop: Iteration:{**x76} Group:{***x77} returning x47: {***x47}"
d268 1
a268 24
; -----------------------------------------------------------------------

         ; Retrieve header angles for this exp. image from image header
         ; x81=similar ref. #  x82=CC & x83=Initial rotation  x18=iteration  
         ; x23= Inplane rotation angle, x24=Sx, x25=Sy, x29= 0-1 Y-mirror flag (0-no mirror; 1-mirror)
         FI x81,x82,x83,x18,x23,x24,x25,x29
         _6
         (101,102,103,104,105,106,107,108)     ; Header positions of angles

         IF (x18 .NE. x76) THEN
             x18
             x76
             VM
             echo: No header angles in image{******x50} for iteration:{**x76}
             EN
         ENDIF

         ST     ; Store angles & trans data in image header for next iter
         [aligned_images]{****x50}         ; New aligned experimental image
         B                                 ; Header location changes
         (101,102,103,104,105,106,107,108) ; Header locations
         X66,x67,x68,x86,X61,X62,X63,X64   ; Header values

; </body></pre></html>
@


1.7
log
@changed 5 stars to 6 stars
@
text
@d30 2
a31 2
;    input/dala{**iter}_{***group}@@       [aligned_images_stem] Aligned stacked image files
;    final/align{**iter+1}_{***grp}       [group_align_stem]    (from inital alignment)
d37 2
a38 2
;    work/dala{**iter+1}_{***grp}@@           [aligned_images_stem]
;    final/align{**iter+1}_{***grp}          [group_align_stem]
d100 1
a100 1
      [group_align_stem]{**x86}_{***x77}
d107 1
a107 1
         [aligned_images_stem]{**x76}_{***x77}@@{****X50} ; Current image input file
d114 1
a114 1
         [group_align_stem]{**x76}_{***x77}  ; Input alignment parameters doc. file
d137 1
a137 1
         ; Output angles to registers not doc. file
d143 1
a143 1
         [temp_ref_projs]******   ; Template for limited range ref. projections 
d147 1
a147 1
         SCR.{******x77}          ; No scratch file if fits in-core
d162 1
a162 1
         x83                     ; Angle (from 'AP RNS')
d218 3
a220 3
            SA P,x61,x62,x63
            x23,x24,x25
            x83,x31,x32
d225 1
a225 1
            [aligned_images_stem]{**x86}_{***x77}@@{****x50} ; New aligned experimental image 
d232 3
a234 3
            SA P,x61,x62,x63
            x23,x24,x25
            x35,x36,x32
d245 1
a245 1
            [aligned_images_stem]{**x86}_{***x77}@@{****x50} ; New aligned experimental image 
d254 1
a254 1
         [group_align_stem]{**x86}_{***x77}  ; Next align. doc file
d263 1
a263 1
      [group_align_stem]{**x86}_{***x77} ; Next align. doc file
d267 1
a267 1
      [group_align_stem]{**x86}_{***x77} ; Next align. doc file
d270 1
a270 1
      [group_align_stem]{**x76}_{***x77}                  
d292 1
a292 1
      [aligned_images_stem]{**x86}_{***x77}@@****** ; Template for aligned images
d294 1
a294 1
      [group_align_stem]{**x86}_{***x77}  ; Angles doc file - angles
d356 1
a356 1
         [aligned_images_stem]{**x76}_{***x77}@@{****x50}         ; New aligned experimental image
@


1.6
log
@*** empty log message ***
@
text
@d131 1
a131 1
         [temp_ref_projs]*****  ; Template for ref. projections    (output)
d143 1
a143 1
         [temp_ref_projs]*****   ; Template for limited range ref. projections 
d147 1
a147 1
         SCR.{*****x77}          ; No scratch file if fits in-core
d173 1
a173 1
         [temp_ref_projs]{*****x81}  ; Current reference image 
d292 1
a292 1
      [aligned_images_stem]{**x86}_{***x77}@@***** ; Template for aligned images
d351 1
a351 1
             echo: No header angles in image{*****x50} for iteration:{**x76}
@


1.5
log
@bad x13 for current angle
@
text
@d30 2
a31 2
;    input/dala{**iter}_{***group}@@       [aligned_images]      Aligned stacked image files
;    final/align{**iter+1}_{***grp}       [group_align]         (from inital alignment)
d37 2
a38 2
;    work/dala{**iter+1}_{***grp}@@           [next_aligned_images]
;    final/align{**iter+1}_{***grp}          [next_group_align]
d46 1
a46 1
; PROCEDURES CALLED: 
d48 1
a48 1
; INLINE BUFFERS USED: _1,_2,_3 ,_8,_6
d99 2
a100 4
;CP                           ; Load aligned images into inline stack
;[aligned_images]            ;    (for speed)
;_8@@
;x79
d102 1
a102 2
      DE                        ; Remove any existing group align doc file 
      [next_group_align]
d104 1
a104 1
      x91=0.0                   ; Zero the sum of correlation coefficient
d106 2
a107 4
      DO LB55 x50=x78,x79          ; Loop over all experimental sample  images

         CP                        ; Copy current image to inline file (for speed)
         [aligned_images]{****X50} ; Current image input file
d114 1
a114 1
         [group_align]          ; Input alignment parameters doc. file
d223 5
a227 5
            RT SQ                        ; Rotate & shift
            [unaligned_images]{****x50}  ; Unaligned original image 
            [aligned_images]{****x50}    ; New aligned experimental image 
            x61                          ; Rotation
            x62,x63                      ; Shift
d237 9
a245 9
            RT SQ                        ; Rotate & shift
            [unaligned_images]{****x50}  ; Unaligned original image stack
            _1                           ; Temp. aligned experimental image
            x61                          ; Rotation
            x62,x63                      ; Shift

            MR                           ; Mirror
            _1                           ; Temp. inline file
            [aligned_images]{****x50}    ; New aligned experimental image 
d254 1
a254 1
         [next_group_align]              ; Next align. doc file
d263 1
a263 1
      [next_group_align]
d267 1
a267 1
      [next_group_align]                ; Next group align file
d269 2
a270 2
      UD ICE                            ; Close this file here
      [group_align]                  
d292 1
a292 1
[aligned_images]*****                ; Template for 2D aligned images
d294 1
a294 1
      [next_group_align]             ; Angles doc file       - angles
d323 1
a323 9
      ; store aligned projections 
      CP                             ; Create disk copy of aligned images
      [aligned_images] 
      [next_aligned_images]          ; No longer overwrites input files!!

;DE
;_8
;
      DE                           ; Remove - refproj (no longer needed)
d326 2
a327 3

      IF(x76.GT.x74) THEN          ; Not first iteration
         DE                        ; Remove bpr from this iter
d329 1
a329 1
         DE                        ; Remove bpr_odd
d331 1
a331 1
         DE                        ; Remove bpr_even
a332 2
;  DE                              ; Remove dala02.....
;  [aligned_images] 
d335 1
a335 1
   echo "Smangloop: {***x77} returning x47: {***x47}"
d356 1
a356 1
         [aligned_images]{****x50}         ; New aligned experimental image
@


1.4
log
@*** empty log message ***
@
text
@d118 1
a118 1
         UD IC,x50,x25,x26,x27,x11,x23,x24,x25,x29,x12
d361 1
a361 1
         (101,102,103,104,105,106,107,108)     ; header positions of angles
@


1.3
log
@register usage
@
text
@d1 1
a1 1
(x41,x42,x51,x52,x55,x76,x77,x47,x74,x75)
d12 1
a12 1
; I/O REGISTERS AND FILES ARE SET IN: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam); INPUT REGISTERS:
d16 1
a16 1
;    x42                     Restrict angular search (varies with iter)
d31 1
a31 1
;    final/trans{**iter}_{***grp}         [current_group_trans] (from inital alignment)
a32 1
;    final/defgrp{***grp}/angles{**iter}  [group_angles]        (for iter 2...)
d38 1
a38 3
;    final/trans{**iter+1}_{***grp}          [next_group_trans]
;    final/defgrp{***grp}/angles{**iter+1}   [next_group_angles]
;    final/defgrp{***grp}/apmd{**iter+1}     [group_apmd]
d104 2
a105 6
      DE                        ; Remove any existing group ang doc file 
      [next_group_angles]
      DE                        ; Remove any existing next group trans doc file
      [next_group_trans]   
      DE                        ; Remove any existing next ang doc output file  
      [group_apmd]              ; apmd
d109 1
a109 6
      MS                        ; Make MT inline stack to hold 1 exp. image
      _6@@
      x52,x52,x78
      1

      DO LB55 x50=x78,x79           ; Loop over all experimental sample  images
d111 1
a111 1
         CP                         ; Copy current image to inline file (for speed)
d113 1
a113 16
         _6@@1                       ; Inline file (stack just for ***)

         ; Retrieve header angles for this exp. image from image header
         ; x81=similar ref. #  x82 & x83=Initial rotation  x18=iteration  
         ; x23= Angle, x24=Sx, x25=Sy, x29= 0-1 Y-mirror flag (0-no mirror; 1-mirror)
         FI x81,x82,x83,x18,x23,x24,x25,x29
         _6@@1
         (101,102,103,104,105,106,107,108)     ; header positions of angles

         IF (x18 .NE. x76) THEN
             x18
             x76
             VM
             echo: No header angles in image{*****x50} for iteration:{**x76}
             EN
         ENDIF
d115 5
a119 2
;;; UD IC,x50,x81,x82,x83  ; Get angles from group angles file for this image
;;;[group_angles]       ; Set of current angles for this image
d126 3
a128 3
         -x83,-x82,-x81         ; Initial rotation 
         (1,0.0)                ; First Euler angle set to zero
         [group_ang_vora]       ; Output doc. file has angles in search area
d140 1
a140 1
         ; Use 'AP RN' to find reference image matching experimental image   
d145 1
a145 1
         ; x10=experimental image number, x12=angular change
d147 1
a147 1
         AP RN x81,x82,x83,x11,x11,x10,x12
a151 1
         [group_ang_vora]        ; Ref. progections angles
d153 2
a154 9
         [aligned_images]****    ; Current image input file
         x50                     ; Experimental image number
         [group_angles]          ; Experimental image angles 
         x42                     ; Angular restriction

         ; x81=similar proj,  x83=inplane rot. angle
         SD x50,x81,x82,x83,x11,x11,x10,x12  ; Save the rotation angles found
         [group_apmd]            ; Output - apmd doc file
 
a157 3
         SD x50,x66,x67,x68      ; Save angles chosen for this image
         [next_group_angles]          

d159 2
d165 1
a165 1
         _6@@1                    ; Current aligned image     
d167 1
a167 1
         x83                     ; Angle (from AP RN)
d216 2
a217 9
         ; Combine rotation, mirror, and shift with the previous transformation
         ; Format of the transformation parameters doc file is:
         ;   angle, Sx, Sy, flag for Y-mirror (0-no mirror; 1-mirror)

         UD IC,x50,x23,x24,x25,x29
         [current_group_trans]         ; Input  - trans(iter)

         ; Combine transformations including mirror and apply
         ; to the original experimental images
d254 6
a259 8
         SD x50,x61,x62,x63,x64          ; Create here
         [next_group_trans]              ; Next trans. doc file

         ST     ; Store angles & trans data in image header for next iter
         [aligned_images]{****x50}         ; New aligned experimental image
         B                                 ; Header location changes
         (101,102,103,104,105,106,107,108) ; Header locations
         X66,x67,x68,x86,X61,X62,X63,X64   ; Header values
d261 2
a262 2
         UD ICE                    ; Must close this file here
         [group_ang_vora]          ; angvora
d268 1
a268 1
      [next_group_trans]
d272 1
a272 1
      [next_group_trans]             ; Next group trans file
d274 2
a275 5
      SD E
      [next_group_angles]            ; Next group angles file

      UD ICE
      [current_group_trans]          ; Input  - trans(iter)
d284 2
d299 1
a299 1
      [next_group_angles]            ; Angles doc file       - angles
d354 23
@


1.2
log
@*** empty log message ***
@
text
@d12 2
d22 2
a23 2
;    x76                     Alignment step iteration counter  (varies with iter)
;    x77                     Defocus group                     (varies with group)
d25 1
a25 1
; INPUT FILES (SET IN: refine settings  <a href="./refine settings.pam">refine settings.pam</a>.pam):
d37 1
a37 1
; OUTPUT FILES(SET IN: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam):
d51 1
a51 1
; INLINE BUFFERS USED: _1,_2,_3 ,_8
a83 1
      ; Get all aligned input projections
d85 2
a86 2
      [iter_vft]              ; Input file for this iter. (final/vft{iter}
      [temp_ctf_file]         ; Multiplier input file     (work/ctf{grp})
d90 3
a92 3
      FT                      ; Fourier transform
      _1
      _4                      ; _4 created here (ctf corrected vol.)
d95 1
a95 1
      _1
d97 2
a98 2
      MS                      ; Make MT inline stack for ref projections
      [temp_ref_projs]@@
d103 1
a103 1
;[aligned_images]@@            ;    (for speed)
d116 25
a140 1
      DO LB55 x50=x78,x79       ; Loop over all input images
d142 2
a143 2
         UD IC,x50,x81,x82,x83  ; Get angles from group angles file for this image
         [group_angles]       ; Set of current angles for this image
d145 1
a145 1
         DE                     ; Remove any existing angvora doc output file  
d152 1
a152 1
         [group_ang_vora]       ; Output doc. file has angles in search range
d156 1
a156 1
         _4                     ; Input volume                 (input)
d159 2
a160 2
         [group_ang_vora]       ; Angles in search range doc file  (input)
         [temp_ref_projs]@@***** ; Template for projections   (output) - refproj
d164 1
a164 1
         ; Use AP RN to match experimental projecdtion image to reference projs.
d166 1
d168 3
d172 1
a172 1
         [temp_ref_projs]@@*****  ; Template for limited range ref. projections 
d176 1
a176 1
         [group_ang_vora]        ; Input - ref. proj. angles angvora file
d178 3
a180 3
[aligned_images]@@****            ; 2D experimental image file 
         x50                     ; Experimental image file number
         [group_angles]          ; Input  - angles 
d183 1
d193 1
d198 2
a199 2
[aligned_images]@@{****x50}            ; 2D aligned images     
         _1                      ; Rotated & shifted images
d201 1
a201 3
         (0,0)                   ; Shift

         x94=0                   ; No need to mirror
d204 3
a206 3
         _1    
         _3
         x56,x56
d210 4
a213 4
         PD                     ; Pad ref. image (2d ref. projs)
         [temp_ref_projs]@@{*****x81} 
         _2
         x56,x56
d218 1
a218 2
         ; Use cross-correlation to center 2D images
         ; Use already calculated projections as reference images
d222 7
a228 7
         _3
         _2
         _3

         WI         ; Window from padded image
         _3
         _2
d232 1
a232 1
         PK x10,x11,x11,x11,x31,x32,x33    ; Peak search
d249 1
a249 5
         x31=-x31
         x32=-x32

         ; Combine rotation, mirror, and shift and use 'RT SQ'
         ; Combine with the previous transformation
d256 5
a260 2
         ;@@combat[x23,x24,x25,x29,x83,x31,x32,x94,x61,x62,x63,x64]
         ; Combine transformations including mirror
d262 1
d266 7
a272 1
            x64=x94
d274 1
d280 16
a295 6
            IF(x94.EQ.0) THEN
               x64=1             
            ELSE
               x64=0             
            ENDIF
         ENDIF
d297 5
a301 2
         SD x50,x61,x62,x63,x64
         [next_group_trans]        ; Next trans. doc file
a302 19
         ; Apply combined transformation to the original experimental image
         IF(x64.EQ.0) THEN
            RT SQ                  ; Rotate & shift
            [unaligned_images]{****x50}  ; Unaligned original images stack
[aligned_images]@@{****x50}         ;  2D experimental projs 
            x61
            x62,x63
         ELSE
            RT SQ                  ; Rotate & shift
            [unaligned_images]{****x50}  ; Unaligned original images stack
            _1
            x61
            x62,x63
            MR                     ; Mirror
            _1
[aligned_images]@@{****x50}         ; 2D experimental projs 
            Y
         ENDIF
      
d306 1
a306 1
       LB55
a329 2
;     ---------------------- End of alirn ----------------------------

d340 1
a340 1
[aligned_images]@@*****                       ; Template for 2D aligned images
d371 4
a374 4
; store aligned projections 
 CP                             ; Create disk copy of aligned images
 [aligned_images]@@ 
 [next_aligned_images]@@         ; No longer overwrites input files!!
d390 2
a391 2
         ;  DE                        ; Remove dala02.....
         ;  [aligned_images] 
@


1.1
log
@Initial revision
@
text
@d47 1
a47 1
; PROCEDURES CALLED: lang
d52 1
a52 1
      echo "In grploop, Iteration: {**x76}  Group: {***x77}"
d56 1
a56 1
   x54=10.0                 ; First radius for AP (Can alter this)
d367 1
a367 1
   echo "Grploop: {***x77} returning x47: {***x47}"
@
