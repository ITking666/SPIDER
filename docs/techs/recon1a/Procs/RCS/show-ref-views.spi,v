head	1.17;
access;
symbols
	Pre_gold:1.14
	GPL_update:1.7
	pre_rewrite_2010:1.6
	pre_more_stack:1.4
	best-code:1.4
	no-named-regs:1.4
	pre_GPL:1.4
	tag_version1_0:1.4;
locks;
comment	@:: @;


1.17
date	2016.11.08.15.00.21;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2016.07.05.16.30.14;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2016.03.24.14.42.11;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2013.12.13.16.12.14;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2013.11.13.19.42.37;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2013.11.13.19.41.47;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2013.11.13.16.52.50;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2013.11.12.14.03.23;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2013.11.08.19.28.24;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2012.05.23.03.08.31;	author tapu;	state Exp;
branches;
next	1.7;

1.7
date	2010.01.19.18.53.15;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2009.12.23.14.58.14;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.17.16.35.47;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.02.18.48.04;	author bbaxter;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.03.20.40.20;	author bbaxter;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.25.19.42.51;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.24.18.13.20;	author bbaxter;	state Exp;
branches;
next	;


desc
@spider batch file
@


1.17
log
@used tapu's recent changes
@
text
@ ; <html><head><title>Creates average and variance images</title></head><body><pre>
 ;
 ; SOURCE: spider/docs/techs/recon1/Procs/show-ref-views.spi
 ;
 ; PURPOSE: Creates a large circular plot (a SPIDER image) containing smaller 
 ;          circles representing the 83 angular groups. The radii of the small
 ;          circles are proportional to the number of particles for each view.
 ;          <b>Selects  '*_good'input file if it exists otherwise selects: '*_all'.</b>
 ;          Can display plot.
 ;
 ; USAGE:   clean ; ./spider spi/dat @@show-ref-views

 ; <b>I/O PARAMETERS AND FILES ARE SET HERE:

 ;  ------------ Parameters -------------------------------------

 [wantGoodYN]   = 0    ; Use 0 for all particles, 1 for verified particles
                       ; If outputs for verified particles don't exist, then all particles will be used
 
 [scale]        = 1    ; Scale factor, if circles get too big or too small (default == 1)
 
 [autoOpen]     = 2    ; Automatically open plot? (0 == No, 1 == ImageMagick display, 2 == qview)

 [disp-type]    = 1    ;  1 = put projection numbers in display
                       ;  0 = don't put in numbers
                       ; -1 = numbers only, no circles!

 [backgd]       = 1    ; 1 = white background, 0 = black background

 [disp-dim]     = 640  ; Display dimension
 [outer-diam]   = 600  ; Diameter of outer circle

 [num-views]    = 83   ; Number of reference projections


 ;  ------------ Input files ---------------------------------------

 ; KEY=VIEW# /     TOTPARTS
 [how_many_prefix]  = 'views/parts_vsview'                    ; Number of particles per view

 ; --------------- Output files  -----------------------------------

 [display_prefix]    = 'show_ref_views'         ; All group plot image

 ; -------------- END BATCH HEADER ---------------------------------</b>

; Set common filenames & parameters
 @@verify-settings
 [iter] = 0

 IQ FI [goodexist]           ; See if this should access 'all' or 'good'
   [how_many_prefix]_good

 ; Will only use the verified ('_good') data if it exists *and* if [wantGoodYN] = 1
 IF ( [wantGoodYN] == 1 ) THEN
   IF ( [goodexist] == 1 ) THEN
     [useGood] = 1
   ELSE
     SYS
       echo ' Verified particle list [how_many_prefix]_good.$DATEXT not found.  Trying all particles...' ; echo
   ENDIF
 ENDIF
 
 IF ( [useGood] == 1 ) THEN
   [allvsgood] = '_good'
 ELSE
   [allvsgood] = '_all'
 ENDIF

 ; Concatenate name
 [display]  = '[display_prefix][allvsgood]'
 [how_many] = '[how_many_prefix][allvsgood]'

 SYS
   echo " Computing image of reference view usage" ; echo ' '

 [height-digit]  = INT(13/2)
 [width-1digit]  = INT(10/2)
 [width-2digits] = INT(23/2)

 BL     ; Create a blank image
   _1
   [disp-dim],[disp-dim]
   N
   0.0 

 [half-dim]  = INT(([disp-dim]+1)/2)

 ; Draw outline
 PT
   _1
   L          ; Line
   1,[half-dim]  ; Starting point
   [disp-dim],[half-dim]    ; Ending point
   Y          ; Continue?
   L          ; Line
   [half-dim],1      ; Starting point
   [half-dim],[disp-dim]    ; Ending point
   N          ; Continue?

 [outer-radius] = ([outer-diam]+1)/2

 ; Draw the large circles
 PT
   _1
   CL         ; Circle Line
   [half-dim],[half-dim]    ; Center coordinates
   [outer-radius]        ; Radius
   N          ; Do not Continue

 ; '''''''''''''''''''''''''''''''''''''''''''''''''''''
 ; If they want labels, do them 1st
 ; '''''''''''''''''''''''''''''''''''''''''''''''''''''

 IF ( [disp-type] == 0 ) GOTO LB8

 ;; if [disp-type] > 0, numbered labels are added
 ;; They're drawn w/ lower left corner at (x,y), so they need to be shifted.
 ;; Digits from the LA command are approx 13 pixels high,
 ;;       10 pix wide (single digit),23 p wide (2 digits)

 DO [view] = 1,[num-views]
   UD IC [view], [psi],[theta],[phi]      ; doc file with reference angles
     [iter_refangs]

   ; Force theta between 0 & 90 (shouldn't be necessary with VO EA)
   IF ( [theta] > 90.0 ) THEN
     [theta] = 180.0-[theta]
     [phi]   = [phi]+180.0

     ; force phi between 0 & 360 (shouldn't be necessary with VO EA)
     IF ( [phi]> 360.0 )  [phi]=[phi]-360.0

   ENDIF

   [theta-latitude] = ([theta]/90) * [outer-radius]
   ; Looking down the Hilbert sphere like looking down at the North Pole, where
   ; theta is equivalent to latitude, except here the North Pole corresponds to latitude 0.

   [xcoord] = cos([phi])*[theta-latitude] + [half-dim]  ; formerly [v81]
   [ycoord] = sin([phi])*[theta-latitude] + [half-dim]  ; formerly [v82]
   
   ; Add a label-----------------
   [label-ycoord] = [ycoord] + [height-digit]    ; y coord

   ; Label x-coord depends on number of digits
   IF ([view].LT.10) THEN   ; single digit
      [label-xcoord] = [xcoord]-[width-1digit]
      
      LA L   
        _1
        _2
        {*[view]}
        [label-xcoord],[label-ycoord]

   ELSE
      [label-xcoord] = [xcoord]-[width-2digits]
      
      LA L   
        _1
        _2
        {**[view]}
        [label-xcoord],[label-ycoord]

   ENDIF

   CP
     _2
     _1

 ENDDO


 LB8  ; Jump here is display-type is 0

 AR
   _1
   _2
   p1/2

 RP      ; This little hack keeps the max=1 for subsequent graphix
   _2
   1,1 
   1 

 CP
   _2
   _1

 ; '''''''''''''''''''''''''''''''''''''''''''''''''''''
 ; The main loop that draws the circles
 
 DO [view]= 1,[num-views]

   UD IC [view],[psi],[theta],[phi]      ; doc file with reference angles
     [iter_refangs]

   IF ( [theta] > 90.0 ) THEN
     [theta]=180.0-[theta]
     [phi]=[phi]+180.0

     IF( [phi] .lt. 360.0 ) GOTO LB2
     [phi]=[phi]-360.0

   ENDIF

   [theta-latitude] = ([theta]/90) * [outer-radius]
   [xcoord] = cos([phi])*[theta-latitude] + [half-dim]
   [ycoord] = sin([phi])*[theta-latitude] + [half-dim]

   UD IC [view], [num-parts]
     [how_many]     ; Doc file: how many particles in each view

   ; Skip unpopulated views
   IF([num-parts] == 0) CYCLE

   [popul-radius] = sqr([num-parts])*[scale]

   ; Draw a circle
   PT
     _1
     CL  ; _C_ircle _L_ine
     [xcoord],[ycoord]
     [popul-radius]
     N                 ; Continue?

 ENDDO

 RP                   ; Undo the little hack
   _1
  1,1
  0 

 ; Invert, if necessary
 IF ( [backgd] > 0 ) THEN
   NEG
     _1
     [display]
 ELSE
   CP
     _1
     [display]    ; Output file
 ENDIF

 UD ICE
   [iter_refangs]
 UD ICE
   [how_many]

 CP TO TIF    ; was JPG
   [display]              ; SPIDER  file       (input)
   [display].tif          ; JPG     file       (output)
;(CP TO JPG was giving an error in Ubuntu.)
 
 IF ([autoOpen] == 1) THEN
   SYS                      ; Display image using display (from ImageMagick)
     display [display].tif &
 ELSEIF ([autoOpen] == 2) THEN
   SYS                      ; Display image using qview (from SPIRE)
     qview [display].$DATEXT &
 ELSE
   SYS
     echo ; echo " Use Web to show reference view usage:  [display].$DATEXT" ; echo ' '
 ENDIF

 EN D

 ; Modified 2016-10-19
 ;    TO DO: intelligent scaling factor
 ;    2016-05-04 (trs) -- added option to open plot automatically, using ImageMagick or qview
 ;    2016-04-27 (trs) -- was previously ignoring [wantGoodYN]
 ;    2016-04-27 (trs) -- writing output as TIFF (CP TO JPG gives an error in Ubuntu)
 ;    2013-11-27 (trs) -- user-defined dimensions
 ;    2013-10-23 (agl) -- New file names, modernized syntax & cosmetic
 ;    2011-11-23 (trs) -- added user-defined scale factor for radii
 ;    2011-11-02 (trs) -- re-annotated

 ; </pre></body></html>
@


1.16
log
@DIS,   used verify-settings for input file
@
text
@d17 2
a18 1
 [want-good-yn] = 0    ; Set to one if you want to plot 'good' ref views (not 'all')
d21 2
d28 1
a28 1
 [backgd]       = 1    ;  1 = white background, 0 = black background
d39 1
a39 1
 [how_many_prefix]  = 'views/parts_vsview'      ; Number of particles per view
d54 11
a64 1
 IF ( [goodexist] == 1 ) THEN
d75 1
a75 1
   echo "  Computing image of reference view usage" ; echo ' '
d250 4
a253 2
 SYS
   echo "  Use Web to show reference view usage:  [display].$DATEXT" ; echo ' '
d255 10
a264 3
 DIS
   [display]              ; SPIDER  file       (input)
                          ; Options
d268 1
a268 1
 ; Modified 2016-7-7
d270 3
a272 1
 ;    2016-07-07 (agl) -- Autodisplay
@


1.15
log
@echo formatting,  input file locations changed
@
text
@d25 1
a25 1
 [backgd]       = 1    ; 1 = white background, 0 = black background
d27 2
a28 2
 [disp-dim]     = 640  ; display dimension
 [outer-diam]   = 600  ; diameter of outer circle
a34 4
![ref_image_angles]        = '../Alignment/ref_image_angles'  ; Doc file of the projection angles
 [in_dir]              = '../Reconstruction/jnk-output-works'  ; Aligned-images  directory (one)
 [ref_image_angles]    = '[in_dir]/ang_refs_00'            ; Reference view angles         (one)

d44 4
d111 1
a111 1
     [ref_image_angles]
d183 1
a183 1
     [ref_image_angles]
d233 1
a233 1
   [ref_image_angles]
d238 1
a238 1
   echo ; echo "  Use Web to show reference view usage:  [display].$DATEXT" ; echo ' '
d240 1
a240 1
 CP TO JPG
d242 1
a242 3
   [display]              ; JPG     file       (output)
 SYS                      ; Display image
   display [display].jpg &
d246 1
a246 1
 ; Modified 2013-11-27
d248 1
@


1.14
log
@-- user-defined dimensions (tapu)
@
text
@d35 3
a37 1
 [refangles]        = '../Alignment/refangles'  ; Doc file of the projection angles
d62 1
a62 1
   echo " Computing image of reference view usage" ; echo ' '
d111 1
a111 1
     [refangles]
d183 1
a183 1
     [refangles]
d233 1
a233 1
   [refangles]
d238 1
a238 1
   echo ; echo " Use Web to show reference view usage:  [display].$DATEXT" ; echo ' '
@


1.13
log
@using_settings
@
text
@d15 3
a17 1
![want-good-yn] = 1    ; Set to one if you want to plot 'good' ref views (not 'all')
d19 2
d27 3
a31 1
 [scale]        = 1.0  ; Scale factor, if circles get too big or too small (default == 1)
d68 1
a68 1
   607, 607 
d72 2
d78 2
a79 2
   1,303      ; Starting point
   605,303    ; Ending point
d82 2
a83 2
   303,1      ; Starting point
   303,605    ; Ending point
d86 2
d92 3
a94 3
   303,303    ; Center coordinates
   302        ; Radius
   N          ; Do not COntinue
d121 1
a121 1
   [theta-latitude] = ([theta]/90) * 300
a123 2
   ; 300 is the radius of the outer circle.
   
d125 2
a126 3
   [xcoord] = cos([phi])*[theta-latitude] + 303  ; formerly [v81]
   [ycoord] = sin([phi])*[theta-latitude] + 303  ; formerly [v82]
   ; half-dim==303
d129 1
a129 1
   [label-ycoord] = [ycoord]+[height-digit]    ; y coord
d192 3
a194 3
   [theta-latitude] = ([theta]/90) * 300
   [xcoord] = cos([phi])*[theta-latitude] + 303
   [ycoord] = sin([phi])*[theta-latitude] + 303
d246 1
a246 1
 ; Modified 2013-10-16
d248 1
@


1.12
log
@using_settings
@
text
@d11 1
a11 1
 ; USAGE:        clean ; ./spider spi/dat @@show-ref-views
a31 1
![how_many_prefix]  = 'views/how_many'          ; Number of particles per projection
a32 1
 ; KEY=VIEW# /     TOTPARTS
@


1.11
log
@using_settings
@
text
@d8 2
a9 3
 ;          Selects input file for: '_good' or '_all'
 ;          Select  '*_good'input file if it exists otherwise 
 ;          selects: '*_all'.
d31 1
@


1.10
log
@consolidated_filenames
@
text
@d33 1
a33 1
 [how_many_prefix]  = 'views/parts_per_view'    ; Number of particles per view
@


1.9
log
@rewrite_syntax_filenames
@
text
@d99 2
a100 2
 DO [view-num] = 1,[num-views]
   UD IC [view-num], [psi],[theta],[phi]      ; doc file with reference angles
d127 1
a127 1
   IF ([view-num].LT.10) THEN   ; single digit
d133 1
a133 1
        {*[view-num]}
d142 1
a142 1
        {**[view-num]}
d173 1
a173 1
 DO [view-num]= 1,[num-views]
d175 1
a175 1
   UD IC [view-num],[psi],[theta],[phi]      ; doc file with reference angles
d178 1
a178 1
   IF([theta] > 90.0) THEN
d182 1
a182 1
     IF([phi].lt.360.0) GOTO LB2
d191 1
a191 1
   UD IC [view-num], [num-parts]
@


1.8
log
@merged and annotated display and display_p
@
text
@d1 12
a12 75
; <html><head><title>Creates average and variance images</title></head><body><pre>
;
; SOURCE: spider/docs/techs/recon/newprogs/display.spi
;
; PURPOSE: Creates a large circular plot (a SPIDER image) containing smaller 
;          circles representing the 83 angular groups. The radii of the 83 small
;          circles are proportional to the number of particles in each group.
;
; This batch files creates displays for all defocus groups.

; <b>I/O PARAMETERS AND FILES ARE SET HERE:

[disp-type] =  1  ; 1 = put projection numbers in display
                  ; 0 = don't put in numbers
                  ; -1 = numbers only, no circles!

[backgd]    = 1    ; 1 = white background, 0 = black background
[num-views] = 83   ; number of reference projections
[scale]     = 1.0  ; scale factor, if circles get too big or too small (default==1)

;  ------------ Input files ---------------------------------------

[refangles] = '../Alignment/refangles'   ; Doc file of the 83 angles

[how_many]  = 'how_many-total'           ; Number of particles per projection
; KEY=VIEW# /     TOTPARTS

; --------------- Output files  -----------------------------------

[display]    = 'cndis'                       ; All group plot image

; -------------- END BATCH HEADER ---------------------------------</b>

VM
echo " Computing images of reference view usage" ; echo ' '

[height-digit]  = INT(13/2)
[width-1digit]  = INT(10/2)
[width-2digits] = INT(23/2)

BL     ; Create a blank image
_1
(607,607)
N
(0.0)

; Draw outline
PT
_1
L          ; _L_ine
(1,303)    ; Starting point
(605,303)  ; Ending point
Y          ; Continue?
L          ; _L_ine
(303,1)    ; Starting point
(303,605)  ; Ending point
N          ; Continue?

; Draw the large circles
PT
_1
CL         ; _C_ircle _L_ine
(303,303)  ; Center coordinates
(302)      ; Radius
N          ; Continue?

; '''''''''''''''''''''''''''''''''''''''''''''''''''''
; If they want labels, do them 1st
; '''''''''''''''''''''''''''''''''''''''''''''''''''''

IF ([disp-type].EQ.0) GOTO LB8
;; if [disp-type] > 0, numbered labels are added
;; They're drawn w/ lower left corner at (x,y), so they need to be shifted.
;; Digits from the LA command are approx 13 pixels high,
;;       10 pix wide (single digit),23 p wide (2 digits)
d14 86
a99 1
DO [view-num] = 1,[num-views]
d101 6
a106 1
   [refangles]
d108 2
a109 8
   ; force theta between 0 & 90 (shouldn't be necessary with VO EA)
   IF([theta].le.90.0) GOTO LB12
   [theta]=180.0-[theta]
   [phi]=[phi]+180.0

   ; force phi between 0 & 360 (shouldn't be necessary with VO EA)
   IF([phi].lt.360.0) GOTO LB12
   [phi]=[phi]-360.0
d111 1
a111 1
   LB12
d123 1
a123 1
   ; add a label-----------------
d126 1
a126 1
   ; label x-coord depends on number of digits
d131 4
a134 4
      _1
      _2
      {*[view-num]}
      [label-xcoord],[label-ycoord]
d140 4
a143 4
      _1
      _2
      {**[view-num]}
      [label-xcoord],[label-ycoord]
d148 2
a149 2
   _2
   _1
d151 1
a151 1
ENDDO
a152 1
IF ([disp-type].LT.0) CYCLE   ; Skip the circles
d154 1
a154 1
LB8  ; jump here is display-type is 0
d156 4
a159 4
AR
_1
_2
p1/2
d161 4
a164 4
RP      ; This little hack keeps the max=1 for subsequent graphix
_2
(1,1)
(1)
d166 3
a168 3
CP
_2
_1
d170 2
a171 2
; '''''''''''''''''''''''''''''''''''''''''''''''''''''
; The main loop that draws the circles
d173 1
a173 1
DO [view-num]= 1,[num-views]
d176 1
a176 1
   [refangles]
d178 3
a180 3
   IF([theta].le.90.0) GOTO LB2
   [theta]=180.0-[theta]
   [phi]=[phi]+180.0
d182 2
a183 2
   IF([phi].lt.360.0) GOTO LB2
   [phi]=[phi]-360.0
d185 1
a185 1
   LB2
d192 1
a192 1
   [how_many]     ; Doc file: how many particles in each view
d194 2
a195 2
   ; skip unpopulated views
   IF([num-parts].eq.0) CYCLE
d201 9
d211 2
a212 11
   CL  ; _C_ircle _L_ine
   [xcoord],[ycoord]
   [popul-radius]
   N   ; Continue?

ENDDO

RP      ; Undo the little hack
_1
(1,1)
(0)
d214 2
a215 2
; invert, if necessary
IF ([backgd].GT.0) THEN
d217 3
a219 3
   _1
   [display]
ELSE
d221 8
a228 3
   _1
   [display]    ; Output file
ENDIF
d230 2
a231 9
UD ICE
[refangles]
UD ICE
[how_many]

VM
echo ' '
VM
echo " Use Web to show  image of overall reference view usage:  [display].$DATEXT" ; echo ' '
d233 13
a245 6
EN D

; Modified 2011-11-23
;    TO DO: intelligent scaling factor
;    2011-11-23 (trs) -- added user-defined scale factor for radii
;    2011-11-02 (trs) -- re-annotated
d247 1
a247 1
; </body></pre></html>
@


1.7
log
@simplify-rewrite
@
text
@d13 7
a19 5
[type] =  1  ; 1 = put projection numbers in display
             ; 0 = don't put in numbers
             ; -1 = numbers only, no circles!

[back] = 1   ; 1 = white background, 0 = black background
d23 1
a23 3
[refangles] = '../Alignment/refangles'  ; Doc file of the 83 angles

[defgrps]   = '../Alignment/sel_group'  ; Defocus groups selection file
d25 2
a26 1
[how_many]  = 'how_many'                ; Number of particles per projection
d30 1
a30 5
[displaydir]      = 'display'                        ; Directory for group gnuplot command script

[display]    = '[displaydir]/cndis_by_group'         ; Stacked plot images

[displayall] = '[displaydir]/cndis_all_groups'       ; All group plot image
d35 1
a35 1
mkdir -p [displaydir]
d37 92
a128 2
VM
echo " Computing images of reference view usage" ; echo ' '
a129 9
DO                                      ; Loop over all defocus group(s)
   UD NEXT [key],[grp]                  ; Get group from group sel. file
   [defgrps]
   IF ([key] .LE. 0) EXIT               ; End of groups in doc file

   @@display_p([type],[back])
   [refangles]                          ; Reference angles file                 (input)
   df{***[grp]}/[how_many]              ; Doc file of particles per projection  (input)
   [display]@@{***[grp]}                 ; Stacked image file                    (output)
d132 46
a177 2
VM
echo " Use Web Montage to display stacked images of reference view usage from: [display].$DATEXT"
d179 7
a185 1
; Put sum of all defocus groups in [displayall]
d187 1
a187 1
[grp] = 0
d189 20
a208 4
@@display_p([type],[back])
[refangles]                          ; Reference angles file                 (input)
[how_many]                           ; Doc file # of particles / projection  (input)
[displayall]                         ; Output file                           (input)
d213 1
a213 1
echo " Use Web to show  image of overall reference view usage:  [displayall].$DATEXT" ; echo ' '
d215 7
a221 1
EN 
@


1.6
log
@() around proc param.
@
text
@d3 1
a3 1
; SOURCE: Display.spi
a19 2
FR G
[refangles]../Alignment/refangles    ; Doc file of the 83 angles
d21 1
a21 2
FR G                                     
[defgrps]sel_group                  ; Defocus groups selection file
d23 1
a23 2
FR G
[how_many]how_many                   ; Number of particles per projection
d25 2
d28 2
a29 2
FR G
[displaydir]display                  ; Directory for output files
d31 1
a31 2
FR G
[display]cndis                       ; Output plot images
d33 2
d40 2
a41 2
UD N,[numgrps]                  ; Get number of groups 
[defgrps]                       ; Group selection doc file      (input)
d43 2
a44 2
DO [numgrp]=1,[numgrps]         ; Loop over all defocus group(s)
   UD IC [numgrp],[grp]         ; Get current defocus group number
d46 1
d49 3
a51 3
   [refangles]                       ; Reference angles file
   df{***[grp]}/[how_many]           ; Doc file of particles per projection
   [displaydir]/[display]{***[grp]}  ; Output files
d54 4
a57 1
; Put sum of all defocus groups in output file000
d62 3
a64 3
[refangles]           
[how_many]                        ; Overall no. of particles / projection
[displaydir]/[display]{***[grp]}  ; Output file
d67 1
a67 1
echo " Created circular plots [displaydir]/[display]*** of projection angles"
d69 1
a69 1
echo ' '
@


1.5
log
@added stacks, named variables
@
text
@d14 2
a15 2
            ; 0 = don't put in numbers
            ; -1 = numbers only, no circles!
d17 1
a17 1
[back] = 1  ; 1 = white background, 0 = black background
d44 1
a44 1
DO LB1 [numgrp]=1,[numgrps]     ; Loop over all defocus group(s)
d48 1
a48 1
   @@display_p[[type],[back]]
d52 1
a52 1
LB1
d58 1
a58 1
@@display_p[[type],[back]]
@


1.4
log
@added registers for adding projections numbers to the plot
@
text
@d3 1
a3 1
; SOURCE: Display.bat
d13 3
a15 5
x77 = 1  ; 1 = put projection numbers in display
         ; 0 = don't put in numbers
         ; -1 = numbers only, no circles!

x78 = 1 ; 1 = white background, 0 = black background
d17 1
d23 2
a24 2
FR G
[order]order_defocus                 ; List of defocus groups
d41 2
a42 2
UD N,x23                           ; Number of defocus groups
[order]
d44 9
a52 1
DO LB1 x22 = 1,x23
d54 1
a54 5
   @@display_p[x77,x78]
   [refangles]                     ; Reference angles file
   df{***x22}/[how_many]           ; Doc file of particles per projection
   [displaydir]/[display]{***x22}  ; Output files
LB1
d56 1
a56 1
; put sum of all defocus groups in output file000
d58 1
a58 2
x22 = 0
@@display_p[x77,x78]
d60 2
a61 2
[how_many]           ; overall no. of particles per projection
[displaydir]/[display]{***x22}  ; Output file
d63 5
@


1.3
log
@added sum of all defocus groups --> cndis000
@
text
@d11 1
a11 1
; I/O PARAMETERS AND FILES ARE SET HERE:
d13 8
a20 1
; <b> ------------ Input files ---------------------------------------
d47 1
a47 1
   @@display_p
d56 1
a56 1
@@display_p
@


1.2
log
@ap sh
@
text
@d46 8
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
; Display.bat
d3 1
a3 3
; Creates a large circular plot (a SPIDER image) containing smaller 
; circles representing the 83 angular groups. The radii of the 83 small
; circles are proportional to the number of particles in each group.
d5 4
d11 3
a13 1
; ----------- Input files --------------
d15 2
a16 1
<refangles>../Alignment/refangles    ; doc file of the 83 angles
d18 2
a19 1
<order>order_defocus  ; list of defocus groups
d21 3
a23 1
<df>df              ; defocus group directory template
d25 1
a25 1
<how_many>how_many  ; number of particles per projection
a26 3
; ----------- Output files --------------
FR G
<displaydir>display  ; directory for output files
d28 1
a28 1
<display>cndis   ; output plot images
d30 1
a30 1
; -------------- END BATCH HEADER --------------------------
d33 1
a33 1
mkdir -p <displaydir>
d35 2
a36 2
UD N,x23   ; number of defocus groups
<order>
d40 5
a44 4
@@display_p
<refangles>                     ; angles file
<df>{***x22}/<how_many>         ; doc file of particles per projection
<displaydir>/<display>{***x22}  ; output files
d46 2
a47 2
LB1
EN D
@
