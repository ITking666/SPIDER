head	1.88;
access;
symbols
	Pre_gold:1.78
	GPL_update:1.50
	pre_rewrite_2010:1.46
	pre_more_stack:1.39
	best-code:1.38
	no-named-regs:1.37
	pre_GPL:1.37
	tag_version1_0:1.37;
locks;
comment	@# @;


1.88
date	2016.05.31.18.58.48;	author leith;	state Exp;
branches;
next	1.87;

1.87
date	2016.03.30.18.07.01;	author leith;	state Exp;
branches;
next	1.86;

1.86
date	2016.03.29.19.59.01;	author leith;	state Exp;
branches;
next	1.85;

1.85
date	2016.03.28.19.10.17;	author leith;	state Exp;
branches;
next	1.84;

1.84
date	2016.03.21.16.25.54;	author leith;	state Exp;
branches;
next	1.83;

1.83
date	2016.03.17.14.05.59;	author leith;	state Exp;
branches;
next	1.82;

1.82
date	2016.03.11.13.48.28;	author leith;	state Exp;
branches;
next	1.81;

1.81
date	2016.03.10.20.27.30;	author leith;	state Exp;
branches;
next	1.80;

1.80
date	2016.03.08.20.51.33;	author leith;	state Exp;
branches;
next	1.79;

1.79
date	2016.02.09.20.31.55;	author leith;	state Exp;
branches;
next	1.78;

1.78
date	2015.12.08.18.05.56;	author leith;	state Exp;
branches;
next	1.77;

1.77
date	2015.04.20.18.23.36;	author leith;	state Exp;
branches;
next	1.76;

1.76
date	2014.10.07.15.38.40;	author leith;	state Exp;
branches;
next	1.75;

1.75
date	2014.09.08.17.51.08;	author leith;	state Exp;
branches;
next	1.74;

1.74
date	2014.08.14.16.03.54;	author tapu;	state Exp;
branches;
next	1.73;

1.73
date	2014.08.05.15.56.24;	author leith;	state Exp;
branches;
next	1.72;

1.72
date	2014.08.05.15.32.36;	author leith;	state Exp;
branches;
next	1.71;

1.71
date	2014.05.22.14.54.15;	author leith;	state Exp;
branches;
next	1.70;

1.70
date	2014.05.22.14.51.41;	author leith;	state Exp;
branches;
next	1.69;

1.69
date	2014.05.08.18.27.32;	author leith;	state Exp;
branches;
next	1.68;

1.68
date	2014.05.08.16.04.40;	author leith;	state Exp;
branches;
next	1.67;

1.67
date	2014.05.08.14.47.57;	author leith;	state Exp;
branches;
next	1.66;

1.66
date	2014.05.01.14.59.33;	author leith;	state Exp;
branches;
next	1.65;

1.65
date	2014.04.18.18.02.39;	author leith;	state Exp;
branches;
next	1.64;

1.64
date	2013.11.08.19.28.05;	author leith;	state Exp;
branches;
next	1.63;

1.63
date	2012.12.11.17.53.32;	author leith;	state Exp;
branches;
next	1.62;

1.62
date	2012.12.10.17.09.06;	author leith;	state Exp;
branches;
next	1.61;

1.61
date	2012.09.18.18.47.51;	author leith;	state Exp;
branches;
next	1.60;

1.60
date	2012.09.12.18.34.57;	author leith;	state Exp;
branches;
next	1.59;

1.59
date	2012.09.12.18.22.57;	author leith;	state Exp;
branches;
next	1.58;

1.58
date	2012.08.31.15.44.44;	author leith;	state Exp;
branches;
next	1.57;

1.57
date	2012.01.05.15.48.33;	author leith;	state Exp;
branches;
next	1.56;

1.56
date	2011.01.07.18.59.33;	author leith;	state Exp;
branches;
next	1.55;

1.55
date	2011.01.07.18.53.28;	author leith;	state Exp;
branches;
next	1.54;

1.54
date	2010.12.21.15.27.29;	author leith;	state Exp;
branches;
next	1.53;

1.53
date	2010.11.04.18.20.30;	author leith;	state Exp;
branches;
next	1.52;

1.52
date	2010.11.01.14.46.05;	author leith;	state Exp;
branches;
next	1.51;

1.51
date	2010.10.29.18.05.57;	author leith;	state Exp;
branches;
next	1.50;

1.50
date	2010.01.29.22.37.02;	author bbaxter;	state Exp;
branches;
next	1.49;

1.49
date	2010.01.28.14.48.25;	author bbaxter;	state Exp;
branches;
next	1.48;

1.48
date	2010.01.21.19.07.24;	author leith;	state Exp;
branches;
next	1.47;

1.47
date	2010.01.19.19.07.33;	author leith;	state Exp;
branches;
next	1.46;

1.46
date	2009.04.24.11.13.16;	author leith;	state Exp;
branches;
next	1.45;

1.45
date	2009.04.20.15.13.10;	author leith;	state Exp;
branches;
next	1.44;

1.44
date	2009.02.10.16.29.24;	author leith;	state Exp;
branches;
next	1.43;

1.43
date	2009.02.10.15.24.42;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	2009.01.14.12.16.52;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	2007.07.17.13.47.47;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	2007.01.17.16.35.12;	author leith;	state Exp;
branches;
next	1.39;

1.39
date	2006.05.09.16.27.51;	author leith;	state Exp;
branches;
next	1.38;

1.38
date	2006.01.04.14.29.03;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2005.02.15.15.14.16;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2005.01.26.17.05.15;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2005.01.18.16.44.38;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2005.01.07.16.16.59;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2004.11.12.15.24.40;	author bbaxter;	state Exp;
branches;
next	1.32;

1.32
date	2004.09.22.13.58.19;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2004.09.10.19.34.23;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2004.08.24.15.59.38;	author bbaxter;	state Exp;
branches;
next	1.29;

1.29
date	2004.08.20.15.36.42;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2004.08.17.15.50.26;	author bbaxter;	state Exp;
branches;
next	1.27;

1.27
date	2004.08.10.17.38.44;	author bbaxter;	state Exp;
branches;
next	1.26;

1.26
date	2004.08.09.20.27.21;	author bbaxter;	state Exp;
branches;
next	1.25;

1.25
date	2004.08.09.13.20.58;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2004.07.12.16.27.05;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2004.06.29.15.47.01;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2004.06.02.14.27.59;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2004.06.01.15.00.12;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2004.03.29.16.13.56;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2004.03.29.16.10.20;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2004.03.18.15.13.12;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.11.21.15.27.22;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.10.24.13.09.59;	author bbaxter;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.18.16.27.03;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.08.05.13.36.49;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.02.19.13.23;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.05.21.13.02.38;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.06.16.20.26;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.24.18.57.15;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.16.19.09.02;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.31.16.24.52;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.28.15.00.27;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2003.03.10.15.34.26;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.21.16.25.18;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.02.14.30.52;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.02.14.15.50;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.12.20.26.43;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.09.19.32.43;	author leith;	state Exp;
branches;
next	;


desc
@@


1.88
log
@[fscplots], qsub 2 == PBS with memory estimate
@
text
@ ([sp_pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[qsub],[incore-yn],[gold-std],[bp-type])
 ;
 ; <html><head><title>Sets refinement parameters and files</title></head><body><pre>
 ;
 ; SOURCE:  spider/docs/techs/recon1/Procs/refine_settings.spi
 ;          New                                    ArDean Leith Jul 2002
 ;          [] variables                           ArDean Leith Dec 2005
 ;          Rewritten, more stacks                 ArDean Leith Dec 2006
 ;          Variable assignment                    ArDean Leith Jan 2010
 ;          Even-odd replaced                      ArDean Leith Jan 2011
 ;          Dala removal                           ArDean Leith Jan 2012
 ;          [pixsiz] returned, fsc, ofsc...        ArDean Leith Aug 2012
 ;          Skip 3.3,3...                          ArDean Leith Sep 2012
 ;          For CTF corrected images               ArDean Leith Oct 2013
 ;          For gold standard reconstruction       ArDean Leith May 2014
 ;          Added spherical deconvolution          ArDean Leith Jan 2016
 ;          Inlined params, changed dirs           ArDean Leith Mar 2016
 ;
 ; INPUT REGISTERS:    None
 ;
 ; OUTPUT REGISTERS:
 ;   [sp_pixsiz]       Pixel size                    (A) 
 ;   [r2]              Object alignment radius       (pixels)
 ;   [alignsh]         Alignment shift +- allowed    (pixels) 
 ;   [prj-radius]      Object projection radius      (pixels)
 ;   [iter1]           Starting iteration
 ;   [iter-end]        Ending   iteration
 ;   [sphdecon]        Spherical deconvolution angle (degrees)
 ;   [smallang-yn]     Small angle refinement flag   (1 == True)
 ;   [qsub]            Specifies que type            (1 == use PBS)
 ;   [incore-yn]       Incore files                  (1 == true)
 ;   [gold-std]        Use 'gold-standard' work-flow (1 == True)
 ;   [bp-type]         Backprojection method         (2 == 'BP 3F')
 ;
 ; 
 ; ------------- Adjust these parameters for your project --------------- EDIT -----

 [qsub]        = 1     ; Specifies que (1 == use PBS, 2 == PBS with memory estimate, 0 == use PubSub, <0 == none)

 [diam]        = 420   ; Diameter of the object (A), used to find radius for alignment.

 [sp_pixsiz]   = 1.68  ; Pixel size  from 'params.spi' file (A)  

 [sp_winsiz]   = 280   ; Window size from 'params.spi' file (pixels)   

 [win-frac]    = 0.95  ; Fraction of window diameter used in projection (0.95 == 95%)

 [incore-yn]   = 1     ; Load input images into incore stack (>0 == yes we have enough memory)

 [alignsh]     = 8     ; Alignment shift (pixels) searched is +- this value

 [iter1]       = 1     ; Starting alignment step (iteration)
 [iter-end]    = 12    ; Ending alignment step   (iteration)
  
 [bp-type]     = 2     ; Backprojection method (1=='BP CG', 2=='BP 3F', 3=='BP RP', 4=='BP 3N')

 [sphdecon]    = 0     ; Spherical deconvolution angle in degreees (0 == Do not deconvolve)

 [gold-std]    = 1     ; Use 'gold-standard resolution' work-flow (1 == use gold, 0 == use legacy)

 ; Following two string variables are used during usual refinement (one value / iteration) (Set for up to: 20 iterations)
!GLO [ang-steps]  = '15,10,3.3,3,2,  2,2,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5'      ; Angular separation (degrees)    
 GLO [ang-steps]  = '15,3.3,3, 2,2,  2,1.5,1.5,1.5,1.5,  1.5,1.5,1.5,1.5,1.5,   1.5,1.5,1.5,1.5,1.5' ; Angular separation (degrees)  

!GLO [ang-limits] = '0,0,0,  0,15,  8,6,5,5,5, 5,5,5,5,5, 5,5,5,5,5'      ; Angular separation limits (degrees)
 GLO [ang-limits] = '0,0,0,  15,8,  6,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5,5'    ; Angular separation limits (degrees)

 ; Following string variable is used to activate OPTIONAL amplitude enhancement (Set for up to: 20 iterations)
 GLO [amp-enhance-flags] = '0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0'  ; Amplitude enhancement selector 

 [smallang-yn] = 0    ; Use small angle refinement instead of regular (1 == Yes)

 ; Following two global register variables are only used during 'small angle refinement'
 GLO [ang-step-sm] =  5                    ; Angular degree step      
 GLO [theta-sm]    =  2.0                  ; Theta range  

 ; ----------------- Original input files ---  May have to EDIT these names, These files must exist ------

 GLO [in_dir]              = '../win_1'                             ; Dir. for starting selection files
 GLO [out_dir]             = '../final_1/'                          ; Dir. for significant output files

 GLO [sel_group]           = '[in_dir]/sel_group'                   ; Group selection doc file         (one)

 GLO [sel_parts]           = '[in_dir]/sel_part_{***[grp]}'         ; Particle selection doc files     (one/group)

 GLO [vol_orig]            = '[in_dir]/reference_volume_fqnp'       ; Initial reference volume         (one)   

 ; This variable: [unaligned_images] must be an absolute path to images or a link to an absolute path! 
 GLO [unaligned_images]    = '[in_dir]/data_{***[grp]}'             ; Original unaligned images stack  (one/group)
                
 ; OPTIONAL files needed if using amplitude enhancement
 GLO [scattering_doc]      = '[in_dir]/scattering'                  ; OPTIONAL enhancement doc file    (one)
 GLO [mask]                = '[in_dir]/mask'                        ; OPTIONAL mask for enhancement    (one)

 ; OPTIONAL local dir for speeding up parallel use 
 GLO [local_work_dir]      = '/scratch'                             ; OPTIONAL local scratch dir for parallel use (one)

 ; OPTIONAL doc file needed if using symmetry                         
 GLO [symmetry_doc]        = '*'                                    ; OPTIONAL symmetry doc file for 'back projection' (one)

 ; OPTIONAL initial alignment parameter doc file if starting from reconstruction 
!GLO [group_align_orig]    = '[in_dir]/align_{**[iter]}_{***[grp]}' ; OPTIONAL Initial alignment parameter file (one/group) 
 GLO [group_align_orig]    = '*'                                    ; OPTIONAL Initial alignment parameter file (one/group) 

 ; -------------- Output files -- Usually no need to edit for default refinement ---------------------

 GLO [work_dir]            = 'work/'                                      ; Work dir                           (one)

 GLO [sel_parts_s]         = '[sel_parts]_s{*[s]}'                        ; Particle subset selection doc file (two/group)

 GLO [vol]                 = '[out_dir]/vol_{**[iter]}'                   ; Current volume   
 GLO [vol_s]               = '[vol]_s{*[s]}'                              ; Current subset volume              (two/iter)  

 GLO [next_vol]            = '[out_dir]/vol_{**[next-iter]}'              ; Next volume                        (one/iter)
 GLO [next_vol_s]          = '[next_vol]_s{*[s]}'                         ; Next subset volume                 (two/iter)

 GLO [group_vol_stem]      = '[work_dir]/vol_{**[iter]}_{***[grp]}_***'   ; Current group volume               (one/group/iter)           
 GLO [group_vol_s]         = '[work_dir]/vol_{**[iter]}_{***[grp]}_s{*[s]'; Current group subset volumes       (two/group/iter) 

 GLO [next_group_vol]      = '[work_dir]/vol_{**[next-iter]}_{***[grp]}'  ; Next group volume                  (one/group/iter)
   
 GLO [next_group_vol_stem] = '[work_dir]/vol_{**[next-iter]}_***_s{*[s]}' ; Next subset group volume stem       
 GLO [next_group_vol_s]    = '[next_group_vol]_s{*[s]}'                   ; Next subset group volume           (two/group/iter) 

 GLO [group_align]         = '[out_dir]/align_{**[iter]}_{***[grp]}'      ; Group alignment doc file   
 GLO [group_align_s]       = '[group_align]_s{*[s]}'                      ; Group subset alignment doc files   (two/group/iter)
 GLO [next_group_align]    = '[out_dir]/align_{**[next-iter]}_{***[grp]}' ; Next group alignment doc file  
 GLO [next_group_align_s]  = '[next_group_align]_s{*[s]}'                 ; Next group subset alignment doc file (one/group/iter)

 GLO [iter_refangs]        = '[work_dir]/ref_angs_{**[iter]}'             ; Reference angle file               (one/iter)
 GLO [iter_refangs_grp]    = '[work_dir]/ref_angs_{**[iter]}_{***[grp]}'  ; Reference projection angles doc file  (one/group/iter) (deleted)

 GLO [ref_projs_s]         = '[work_dir]/ref_projs_{**[iter]}_s{*[s]}'    ; Subset reference projections       (one/iter)
 GLO [ref_projs_s_grp]     = '[ref_projs_s]_{***[grp]}@@'                  ; Subset group reference projections (two/group/iter) (deleted)

 GLO [fsc_mask]            = '[out_dir]/fsc_mask'                         ; Mask for FSC                       (one) 
 GLO [next_u_fsc]          = '[out_dir]/fscdoc_u_{**[next-iter]}'         ; Unmasked FSC curve doc file        (one/iter)
 GLO [next_m_fsc]          = '[out_dir]/fscdoc_m_{**[next-iter]}'         ; Masked   FSC curve doc file        (one/iter)
 GLO [m_fsc]               = '[out_dir]/fscdoc_m_{**[iter]}'              ; Masked   FSC curve doc file        (one/iter)
 GLO [fsc_plots]           = 'fsc_iter.gpl'                               ; Gnuplot script for FSC plotting    (one) 

 GLO [iter_resol]          = '[out_dir]/resolutions'                      ; Overall resolution doc file        (one)
       
 GLO [ang_voea]            = '[out_dir]/angvoea'                          ; OPTIONAL, Small angle refinement ref. angles        (one/group/iter)
 GLO [ang_vora]            = '[out_dir]/angvora_{**[iter]}_{***[grp]}'    ; OPTIONAL, Small angle refinement ref. angles        (one/group/iter)
 GLO [temp_ref_projs]      = '_5@@'                                        ; OPTIONAL, Small angle refinement local scratch file (deleted)
 
 GLO [enhance_doc]         = '[work_dir]/enhance_doc_{**[next-iter]}'     ; OPTIONAL, Enhancement doc file output      (one/iter)

 GLO [ref_rings]           = '[work_dir]/SCR_{**[iter]}_{***[grp]}'       ; OPTIONAL, Reference rings files output     (one/group/iter)
 GLO [wait_file]           = 'jnk_waited_***'                             ; OPTIONAL, Created when local copy finished (one/group)

 GLO [finished_file]       = 'jnk_sync_{****[rn]}_'                       ; OPTIONAL, Created when parallel segment finished (one/group)

 GLO [temp_in_images]      = '_8@@'                                        ; OPTIONAL, Used by alignment & back projection internally
 GLO [temp_out_images]     = '[work_dir]/dala_{***[grp]}@@'                ; OPTIONAL, Used if [incore-yn] == 0  or small angle ref. (deleted)

 ; ----------------- END BATCH HEADER ---------------------------------

 ; ---- Should not need to adjust following parameters --------------------------

 [r2]  = INT([diam]/(2.0*[sp_pixsiz])) ; Alignment radius (pixels) used in alignment search

 ; Ensure that sum of alignment radius + translation is within window dimensions 
 [ring-sh] = [r2] + [alignsh]          ; Last ring + translation step
 [maxrad]  = INT([sp_winsiz]/2) - 1    ; Max radius of object in window

 IF ( [ring-sh] >= [maxrad] ) THEN
   ; Must reduce radius of outer ring, not translation step
   [r2] = [maxrad] - [alignsh] - 2     ; Reduces rotational search radius 
 ENDIF

 [prj-radius] = INT(([win-frac]*[sp_winsiz])/2.0 )  ; Convert fraction to pixel radius

 RE
 ; </pre></body></html>
@


1.87
log
@comments
@
text
@d38 1
a38 1
 [qsub]        = 1     ; Specifies que (1 == use PBS, 0 == use PubSub, <0 == none)
d136 1
a136 1
 GLO [m_fsc]               = '[out_dir]/fscdoc_m_{**[iter]}'              ; Masked   FSC curve doc file        (one/iter)
d139 2
a140 1
 GLO [fscplots]            = 'fsc_iter.gnu'                               ; Gnuplot script for FSC plotting    (one) 
@


1.86
log
@fsc plot file added
@
text
@d59 1
a59 1
 [gold-std]    = 0     ; Use 'gold-standard resolution' work-flow (1 == use gold, 0 == use legacy)
d62 2
a63 2
!GLO [ang-steps]  = '15,10,3.3,3,2,  2,2,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5'      ; Angular degree steps    
 GLO [ang-steps]  = '15,3.3,3, 2,2,  2,1.5,1.5,1.5,1.5,  1.5,1.5,1.5,1.5,1.5,   1.5,1.5,1.5,1.5,1.5' ; Angular degree steps  
d65 2
a66 2
!GLO [ang-limits] = '0,0,0,0,15, 8,6,5,5,5, 5,5,5,5,5, 5,5,5,5,5'           ; Angular limits
 GLO [ang-limits] = '0,0,0,  15,8,  6,5,  5,  5,5, 5,   5,  5,  5,  5,  5,     5,  5,  5,  5,  5'    ; Angular limits
d88 1
d139 1
a139 1
 GLO [fscplots]            = 'fsc_iter.gnu'                               ; Text file of gnuplot commands      (one) 
@


1.85
log
@refproj --> ref_projs filename
@
text
@d138 1
@


1.84
log
@added [gold-std] parameter, filenames changed
@
text
@d129 2
a130 2
 GLO [iter_refangs]        = '[work_dir]/ang_refs_{**[iter]}'             ; Reference angle file               (one/iter)
 GLO [iter_refangs_grp]    = '[work_dir]/ang_refs_{**[iter]}_{***[grp]}'  ; Reference projection angles doc file  (one/group/iter) (deleted)
d132 1
a132 1
 GLO [ref_projs_s]         = '[work_dir]/refproj_{**[iter]}_s{*[s]}'      ; Subset reference projections       (one/iter)
@


1.83
log
@Inlined params, changed dirs
@
text
@d1 1
a1 1
 ([sp_pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[qsub],[incore-yn],[prepare-yn],[bp-type])
d22 4
a25 4
 ;   [sp_pixsiz]       Pixel size                  (A) 
 ;   [r2]              Object alignment radius     (pixels)
 ;   [alignsh]         Alignment shift +- allowed  (pixels) 
 ;   [prj-radius]      Object projection radius    (pixels)
d29 5
a33 5
 ;   [smallang-yn]     Small angle refinement flag   (1 == true)
 ;   [qsub]            Specifies que type
 ;   [incore-yn]       Incore files (1 == true)
 ;   [prepare-yn]      Prepare input files for first use (1 == true)
 ;   [bp-type]         Backprojection method
d42 1
a42 1
 [sp_pixsiz]   = 1.68  ; Pixel size from 'params.spi' file (A)  
a47 2
 [prepare-yn]  = 0     ; Prepare input images     (>0 == yes,  only needs to be done once) (UNUSED)

d57 3
a59 1
 [sphdecon]    = 0     ; Spherical deconvolution angle (0 == Do not deconvolve)
d79 2
a80 4
 GLO [params]              = '../params'                                ; Parameter doc file  (one)  

 GLO [in_dir]              = '../win_1'                                 ; Dir. for starting selection files
 GLO [out_dir]             = '../final_1/'                              ; Dir. for significant output files
d82 1
a82 1
 GLO [sel_group]           = '[in_dir]/sel_group'                       ; Group selection doc file         (one)
d84 1
a84 1
 GLO [sel_parts]           = '[in_dir]/sel_part_{***[grp]}'             ; Particle selection doc files     (one/group)
d86 1
a86 1
 GLO [vol_orig]            = '[in_dir]/reference_volume_fqnp'           ; Initial reference volume         (one)   
d88 1
a88 1
 GLO [unaligned_images]    = '[in_dir]/data_{***[grp]}'                 ; Original unaligned images stack  (one/group)
d91 2
a92 2
 GLO [scattering_doc]      = '[in_dir]/scattering'                      ; OPTIONAL enhancement doc file    (one)
 GLO [mask]                = '[in_dir]/mask'                            ; OPTIONAL mask for enhancement    (one)
d95 1
a95 1
 GLO [local_work_dir]      = '/scratch'                                 ; OPTIONAL local scratch dir for parallel use (one)
d98 1
a98 1
 GLO [symmetry_doc]        = '*'                                        ; OPTIONAL symmetry doc file for 'back projection' (one)
d101 2
a102 2
!GLO [group_align_orig]    = '[input_orig]/align_{**[iter]}_{***[grp]}' ; OPTIONAL Initial alignment parameter file (one/group) 
 GLO [group_align_orig]    = '*'                                        ; OPTIONAL Initial alignment parameter file (one/group) 
d104 1
a104 1
 ; -------------- Output files -- No need to edit for default refinement ----------
d110 2
a111 2
 GLO [vol]                 = '[out_dir]/vol_{**[iter]}'                   ; Current volume from previous iter. (two/iter)  
 GLO [vol_s]               = '[vol]_s{*[s]}'                              ; Current volume from previous iter. (two/iter)  
d113 2
a114 2
 GLO [next_vol]            = '[out_dir]/vol_{**[next-iter]}'              ; Next volume stem   
 GLO [next_vol_s]          = '[next_vol]_s{*[s]}'                         ; Next subset volume stem            (one/iter)
d116 1
a116 1
 GLO [group_vol_stem]      = '[work_dir]/vol_{**[iter]}_{***[grp]}_***'   ; Current group volume stem           
d119 3
a121 2
 GLO [next_group_vol_stem] = '[work_dir]/vol_{**[next-iter]}_***_s{*[s]}' ; Next group volume stem   
 GLO [next_group_vol]      = '[work_dir]/vol_{**[next-iter]}_{***[grp]}'  ; Next group volume                  (one/group/iter)   
d124 1
a124 1
 GLO [group_align]         = '[out_dir]/align_{**[iter]}_{***[grp]}'      ; Group alignment doc file stem  
d126 2
a127 2
 GLO [next_group_align]    = '[out_dir]/align_{**[next-iter]}_{***[grp]}' ; Next group alignment doc file stem 
 GLO [next_group_align_s]  = '[next_group_align]_s{*[s]}'                 ; Next group subset alignment doc files (one/group/iter)
d153 1
a153 1
 GLO [temp_out_images]     = '[work_dir]/dala_{***[grp]}@@'                ; OPTIONAL, Used if [incore-yn] == 0  or small angle ref.(deleted)
@


1.82
log
@removed params.dat reading
@
text
@d1 1
a1 1
 ([sp_pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[sp_winsiz],[incore-yn],[prepare-yn],[bp-type])
d17 1
d30 1
a30 1
 ;   [sp_winsiz]       Image/window size = volume size
d34 3
d38 1
a38 4
 ;
 ;<b> ---------Set Refinement parameters from parameter file ----------</b>
 
 ; ---- Adjust these parameters for your project --------------- EDIT -----
d40 1
a40 1
 [sp_pixsiz]   = 1.1  ; Pixel size from params.spi file (A)   
d42 1
a42 1
 [sp_winsiz]   = 400  ; Window size  from params.spi file (pixels) 
d44 1
a44 1
 [win-frac]    = 0.95 ; Fraction of window diameter used in projection (0.95 == use 95% of window size)
d46 1
a46 3
 [diam]        = 414  ; Diameter of the structure (A) used in alignment search.
                      ;   (Default is for a ribosome. EDIT as needed.)
                      ;    Diameter is used to find radius for alignment.
d48 1
a48 1
 [prepare-yn]  = 1    ; Prepare input images   (>0 == yes,  only needs to be done once)
d50 1
a50 1
 [incore-yn]   = 1    ; Load input images into incore stack (>0 == yes we have enough memory)
d52 1
a52 1
 [alignsh]     = 8    ; Alignment shift (pixels) searched is +- this value
d54 2
a55 2
 [iter1]       = 1    ; Starting alignment step (iteration)
 [iter-end]    = 12   ; Ending alignment step   (iteration)
d57 1
a57 1
 [bp-type]     = 2    ; Backprojection method (1=='BP CG', 2=='BP 3F', 3=='BP RP', 4=='BP 3N')
d59 1
a59 1
 [sphdecon]    = 0    ; Spherical deconvolution angle (0 == Do not deconvolve)
a70 1

d77 1
a77 1
 ; ----------------- Original input files ---  May have to EDIT these names ------
d79 1
a79 1
 GLO [params]                = '../params'                                  ; Parameter doc file  (one)  
d81 2
a82 2
!GLO [input_orig]            = '../Reconstruction/input'                    ; Main dir. for input files
 GLO [input_orig]            = 'data'                                       ; Main dir. for input files
d84 1
a84 5
!GLO [vol_orig]              = '../Reconstruction/vol{**[iter]}'            ; Initial reconstructed volume or reference volume (one)   
 GLO [vol_orig]              = 'data/reference_volume'                      ; Initial reconstructed volume or reference volume (one)   
                 
!GLO [sel_group_orig]        = '[input_orig]/bp_sel_group'                  ; Group selection doc file  (one)                  
 GLO [sel_group_orig]        = '[input_orig]/sel_group'                     ; Group selection doc file  (one)                  
d86 1
a86 2
!GLO [sel_parts_orig]        = '[input_orig]/sel_part_{***[grp]}'           ; Particle selection doc file (one/group)
 GLO [sel_parts_orig]        = '[input_orig]/sel_part_{***[grp]}'           ; Particle selection doc file (one/group)
d88 1
a88 2
!GLO [unaligned_images_orig] = '[input_orig]/bp_data_ctfd_{***[grp]}'       ; Original unaligned images stack (one/group)
 GLO [unaligned_images_orig] = '[input_orig]/data_{***[grp]}'               ; Original unaligned images stack (one/group)
d90 5
a94 3
 ; OPTIONAL  files only needed if using amplitude enhancement
 GLO [scattering_doc]        = '[input_dir]/scattering'                     ; OPTIONAL enhancement document input     (one)
 GLO [mask]                  = '[input_dir]/mask'                           ; OPTIONAL mask for amplitude enhancement (one)
d96 2
a97 1
 GLO [symmetry_doc]          = '*'                                          ; OPTIONAL symmetry file for 'back projection' (one)
d99 6
a104 2
!GLO [group_align_orig]      = '[input_orig]/bp_align_{**[iter]}_{***[grp]}'; OPTIONAL Initial alignment parameter file (one/group) 
 GLO [group_align_orig]      = '*'                                          ; OPTIONAL Initial alignment parameter file (one/group) 
d108 1
a108 9
 GLO [input_dir]             = 'input/'                                  ; Main dir. for input files
 GLO [final_dir]             = 'final/'                                  ; Main dir. for output files
 GLO [temp_work_dir]         = 'work/'                                   ; Temp work dir
 GLO [temp_local_dir]        = '/scratch/'                               ; OPTIONAL local disk scratch dir for PubSub use

 GLO [sel_group]             = 'input/sel_group'                         ; Group selection doc file           (one)

 GLO [sel_parts]             = 'input/sel_part_{***[grp]}'               ; Particle selection doc file stem   (one/group)
 GLO [sel_parts_s]           = '[sel_parts]_s{*[s]}'                     ; Particle selection doc file        (one/group)
d110 1
a110 2
 GLO [unaligned_images]      = 'input/data_ctfd_{***[grp]}'              ; Unaligned images stack (usually links) (one/group)
 GLO [unaligned_images]      = 'input/data_{***[grp]}'                   ; Unaligned images stack (usually links) (one/group)
d112 2
a113 2
 GLO [vol]                   = 'final/vol_{**[iter]}'                    ; Current volume from previous iter. (two)  
 GLO [vol_s]                 = '[vol]_s{*[s]}'                           ; Current volume from previous iter. (two)  
d115 2
a116 2
 GLO [next_vol]              = 'final/vol_{**[next-iter]}'               ; Next volume stem   
 GLO [next_vol_s]            = '[next_vol]_s{*[s]}'                      ; Filtered, shifted volumes          (one/iter)
d118 2
a119 2
 GLO [group_vol_stem]        = 'work/vol_{**[iter]}_{***[grp]}_***'      ; Current group volumes              (two/group/iter) 
 GLO [group_vol_s]           = 'work/vol_{**[iter]}_{***[grp]}_s{*[s]'   ; Current group volumes              (two/group/iter) 
d121 3
a123 3
 GLO [next_group_vol_stem]   = 'work/vol_{**[next-iter]}_***_s{*[s]}'    ; Next group volume stem   
 GLO [next_group_vol]        = 'work/vol_{**[next-iter]}_{***[grp]}'     ; Next group volume                  (one/group/iter)   
 GLO [next_group_vol_s]      = '[next_group_vol]_s{*[s]}'                ; Next group volume                  (two/group/iter) 
d125 4
a128 4
 GLO [group_align]           = 'final/align_{**[iter]}_{***[grp]}'       ; Group alignment doc file stem  
 GLO [group_align_s]         = '[group_align]_s{*[s]}'                   ; Group alignment doc files          (two/group/iter)
 GLO [next_group_align]      = 'final/align_{**[next-iter]}_{***[grp]}'  ; Next group alignment doc file stem 
 GLO [next_group_align_s]    = '[next_group_align]_s{*[s]}'              ; Next group alignment doc files     (one/group/iter)
d130 2
a131 2
 GLO [iter_refangs]          = 'work/ang_refs_{**[iter]}'                ; Reference angle file               (one/iter)
 GLO [iter_refangs_grp]      = 'work/ang_refs_{**[iter]}_{***[grp]}'     ; Reference projection angles doc file  (one/group/iter) (deleted)
d133 2
a134 2
 GLO [ref_projs_s]           = 'work/refproj_{**[iter]}_s{*[s]}'         ; Reference projections              (one/iter)
 GLO [ref_projs_s_grp]       = '[ref_projs_s]_{***[grp]}@@'               ; Group reference projections        (one/group/iter) (deleted)
d136 3
a138 3
 GLO [m_fsc]                 = 'final/fscdoc_m_{**[iter]}'               ; Masked   FSC curve doc file        (one/iter)
 GLO [next_u_fsc]            = 'final/fscdoc_u_{**[next-iter]}'          ; Unmasked FSC curve doc file        (one/iter)
 GLO [next_m_fsc]            = 'final/fscdoc_m_{**[next-iter]}'          ; Masked   FSC curve doc file        (one/iter)
d140 1
a140 1
 GLO [iter_resol]            = 'final/resolutions'                       ; Overall resolution doc file        (one)
d142 3
a144 3
 GLO [ang_voea]              = 'final/angvoea'                           ; OPTIONAL, Small angle refinement ref. angles        (one/group/iter)
 GLO [ang_vora]              = 'final/angvora_{**[iter]}_{***[grp]}'     ; OPTIONAL, Small angle refinement ref. angles        (one/group/iter)
 GLO [temp_ref_projs]        = '_5@@'                                     ; OPTIONAL, Small angle refinement local scratch file (deleted)
d146 1
a146 1
 GLO [enhance_doc]           = 'work/enhance_doc_{**[next-iter]}'        ; OPTIONAL, Enhancement doc file output      (one/iter)
d148 2
a149 2
 GLO [ref_rings]             = 'work/SCR_{**[iter]}_{***[grp]}'          ; OPTIONAL, Reference rings files output     (one/group/iter)
 GLO [wait_file]             = 'jnk_waited_***'                          ; OPTIONAL, Created when local copy finished (one/group)
d151 1
a151 1
 GLO [finished_file]         = 'jnk_sync_{****[rn]}_'                    ; OPTIONAL, Created when parallel segment finished (one/group)
d153 2
a154 2
 GLO [temp_in_images]        = '_8@@'                                     ; OPTIONAL, Used by alignment & back projection internally
 GLO [temp_out_images]       = 'work/dala_{***[grp]}@@'                   ; OPTIONAL, Used if [incore-yn] == 0  or small angle ref.(deleted)
@


1.81
log
@GLO [ang-step-sm] =  5  global reg now
@
text
@d5 1
a5 1
 ; SOURCE:  spider/docs/techs/recon1/Procs/gold/refine_settings.spi
d18 1
a18 1
 ; INPUT REGISTERS:       None
d20 14
a33 12
 ; OUTPUT REGISTERS (SET  BELOW):
 ;   [sp_pixsiz]          Pixel size                  (A) 
 ;   [r2]                 Object alignment radius     (pixels)
 ;   [alignsh]            Alignment shift +- allowed  (pixels) 
 ;   [prj-radius]         Object projection radius    (pixels)
 ;   [iter1]              Starting iteration
 ;   [iter-end]           Ending   iteration
 ;   [sphdecon]           Spherical deconvolution angle (degrees)
 ;   [smallang-yn]        Small angle refinement flag   (1 == true)
 ;   [sp_winsiz]          Image/window size = volume size
 ;   [incore-yn]          Incore files (1 == true)
 ;   [prepare-yn]         Prepare input files for first use (1 == true)
d39 11
a49 1
 [prepare-yn]  = 0;1  ; Prepare input images   (>0 == yes,  only needs to be done once)
a52 2
 [bp-type]     = 2    ; Backprojection method (1==BP CG, 2==BP 32F, 3==BP RP, 4==BP 3N)

d55 1
a55 1
 [iter1]       = 8    ; Starting alignment step (iteration)
a56 2

 [diam]        = 436  ; Diameter of the structure (A) used in alignment search. EDIT as needed.
d58 1
a58 1
 [win-frac]    = 0.95 ; Fraction of window diameter used in projection (e.g. 0.95 == use 95% of window size)
d60 1
a60 3
 [smallang-yn] = 0    ; Use small angle refinement instead of regular (1 == Yes)

 [sphdecon]    = 4    ; Spherical deconvolution angle (0 == Do not deconvolve)
d69 6
d76 1
a76 1
 GLO [ang-step-sm] =  5                    ; Angular degree steps      
a78 4
 ; Following string variable is used to activate OPTIONAL amplitude enhancement (Set for up to: 20 iterations)
 GLO [amp-enhance-flags] = '0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0'     ; Amplitude enhancement selector 

 ;<b> ============== DO NOT COPY FROM WEB BROWSER ==============</b>
a167 10
 ; Read some reconstruction parmeters from doc file

 UD 5, [sp_pixsiz]                     ; Get pixel size (A)   
   [params]                            ; Parameter doc. file

 UD 17, [sp_winsiz]                    ; Get window size (pixels), used to find projection radius 
   [params]                            ; Parameter doc. file

 UD E                                  ; End params doc. file usage

d174 1
a174 1
 [maxrad]  = INT([sp_winsiz]/2) - 1    ; Max. radius of object in window
@


1.80
log
@[ang_vora]
@
text
@d38 1
d40 1
d44 1
d46 1
a46 1
 [iter-end]    = 10   ; 12   ; Ending alignment step   (iteration)
d63 3
a65 3
 ; Following two string variables are only used during 'small angle refinement'
 GLO [ang-steps-sm] =  '0.5'                                                ; Angular degree steps      
 GLO [thetas-sm]    =  '2.0'                                                ; Theta range  
d67 1
a67 1
 ; Following flag variables are used to activate OPTIONAL amplitude enhancement (Set for up to: 20 iterations)
d144 1
@


1.79
log
@Gold_standard
@
text
@d141 1
a141 1
 GLO [img_ang_vora]          = 'final/angvora_{**[iter]}_{***[grp]}'     ; OPTIONAL, Small angle refinement ref. angles        (one/group/iter)
@


1.78
log
@removed unused [grp_resol]
@
text
@d1 1
a1 1
 ([sp_pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sp_lambda],[smallang-yn],[sp_winsiz],[incore-yn],[prepare-yn],[bp-type])
d5 1
a5 3
 ; PURPOSE: Sets refinement parameters and files for refinement without defocus grouping
 ;
 ; SOURCE:  spider/docs/techs/recon1/Procs/refine_settings.spi
d7 1
a7 1
 ;          []                                     ArDean Leith Dec 2005
a8 1
 ;          Input locations altered                ArDean Leith Dec 2009
d15 3
a17 2
 ;          Removed gmask                          ArDean Leith  Apr 2015
;
d27 2
a28 2
 ;   [sp_lambda]          Electron wavength Lambda    (A)
 ;   [smallang-yn]        Small angle refinement flag (1 == true)
d30 2
a31 2
 ;   [incore-yn]          Incore (1 == true)
 ;   [prepare-yn]         Prepare input files, only once (1 == true)
d34 1
a34 2
 ;<pre> 

d37 1
a37 1
 [prepare-yn]  = 1    ; Prepare input images (>0 == yes,  only needs to be done once)
d39 1
a39 1
 [bp-type]     = 1    ; Backprojection method (1==BP CG, 2==BP 32F, 3==BP RP, 4==BP 3N)
d42 2
a43 2
 [iter1]       = 1    ; Starting alignment step (iteration)
 [iter-end]    = 12   ; Ending   alignment step (iteration)
d45 1
a45 3
 [diam]        = 349  ; Diameter of the structure (A) used in alignment search.
                      ;    Diameter is used to find radius for alignment.
                      ;    Default is for a ribosome. EDIT as needed!
d47 1
a47 1
 [win-frac]    = 0.95 ; Fraction of window diameter used in projection (.95 == use 95% of window size)
d51 4
a54 1
 ; Following two variables are used during usual refinement (one value / iteration) (Set: 20 iterations)
d57 2
a58 1
 GLO [ang-limits] = ' 0,0,  0,15,8,  6,5,  5,  5,5, 5,   5,  5,  5,  5,  5,     5,  5,  5,  5,  5'    ; Angular limits
d61 2
a62 3
 GLO [ang-steps-sm] = '0.5'                                                 ; Angular degree steps  

 GLO [thetas-sm]    = '2.0'                                                 ; Theta range
d64 1
a64 1
 ; Following flag variables are used to activate OPTIONAL amplitude enhancement
a66 1

d68 1
a68 1
 ; ----------------- Input files ---  May have to EDIT these file names ------
d72 2
a73 1
 GLO [input_orig]            = '../Reconstruction/input'                    ; Main dir. for input files
d75 5
a79 1
 GLO [vol_orig]              = '../Reconstruction/vol_{**[iter]}'           ; Initial reconstructed volume (one)   
d81 2
a82 1
 GLO [sel_group_orig]        = '[input_orig]/bp_sel_group'                  ; Group selection doc file  (one)                  
d84 2
a85 3
 GLO [sel_parts_orig]        = '[input_orig]/bp_sel_part_{***[grp]}'        ; Particle selection doc file (one/group)

 GLO [unaligned_images_orig] = '[input_orig]/bp_data_ctfd_{***[grp]}'       ; Original unaligned images stack (one/group)
d88 1
a88 1
 GLO [scattering_doc]        = '[input_dir]/scattering'                     ; OPTIONAL enhancement doc file input     (one)
d93 3
d98 6
a103 1
 GLO [input_dir]             = 'input/'                                     ; Main dir. for input files
d105 2
a106 3
 GLO [final_dir]              = 'final/'                                    ; Main dir. for output files
 GLO [temp_work_dir]          = 'work/'                                     ; Temp work dir
 GLO [temp_local_dir]         = '/scratch/'                                 ; OPTIONAL local disk scratch dir for PubSub use
d108 2
a109 1
 GLO [start_vol]              = 'input/vol_01'                              ; Initial reconstructed volume copy  (one) 
d111 2
a112 1
 GLO [sel_group]              = 'input/sel_group'                           ; Group selection doc file           (one)
d114 2
a115 1
 GLO [sel_parts]              = 'input/sel_part_{***[grp]}'                 ; Particle selection doc file        (one/group)
d117 2
a118 1
 GLO [unaligned_images]       = 'input/data_{***[grp]}'                     ; Unaligned images stack (usually links) (one/group)
d120 3
a122 2
 GLO [current_vol]            = 'final/vol_{**[iter]}'                      ; Produced by 'AP SH' or previous iter. (one)  
 GLO [next_vol]               = 'final/vol_{**[next-iter]}'                 ; Filtered, shifted volume              (one/iter)
d124 4
a127 2
 GLO [group_align]            = 'final/align_{**[iter]}_{***[grp]}'         ; Aignment parameter input file    (one/group/iter)
 GLO [next_group_align]       = 'final/align_{**[next-iter]}_{***[grp]}'    ; Alignment parameter output file  (one/group/iter)
d129 2
a130 3
 GLO [group_vol]              = 'work/vol_{**[iter]}_{***[grp]}'            ; Current group volumes     (one/group/iter) 
 GLO [next_group_vol]         = 'work/vol_{**[next-iter]}_{***[grp]}'       ; Next group volumes        (one/group/iter) 
 GLO [next_group_vol_template]= 'work/vol_{**[next-iter]}_***'              ; Group volume template   
d132 2
a133 1
 GLO [ref_projs]              = 'work/refproj_{**[iter]}'                   ; Reference projections     (one/iter)
d135 3
a137 5
 GLO [iter_refangs]           = 'work/ang_refs_{**[iter]}'                  ; Reference angle file      (one/iter)
 GLO [iter_sel_refangs]       = 'work/sel_ang_refs_{**[iter]}'              ; Ref. angle selection file (one/iter)
   
 GLO [next_u_fsc]             = 'final/fscdoc_u_{**[next-iter]}'            ; Merged unmasked FSC curve doc file (one/iter)
 GLO [next_m_fsc]             = 'final/fscdoc_m_{**[next-iter]}'            ; Merged masked   FSC curve doc file (one/iter)
d139 1
a139 1
 GLO [iter_resol]             = 'final/resolutions'                         ; Overall resolution doc file (one)
d141 2
a142 2
 GLO [img_ang_vora]           = 'final/angvora_{**[iter]}_{***[grp]}'       ; OPTIONAL, Small angle refinement ref. angles        (one/group/iter)
 GLO [temp_ref_projs]         = '_5@@'                                       ; OPTIONAL, Small angle refinement local scratch file (deleted)
d144 1
a144 1
 GLO [enhance_doc]            = 'work/enhance_doc_{**[next-iter]}'          ; OPTIONAL, Enhancement doc file output      (one/iter)
d146 2
a147 2
 GLO [ref_rings]              = 'work/SCR_{**[iter]}_{***[grp]}'            ; OPTIONAL, Reference rings files output     (one/group/iter)
 GLO [wait_file]              = 'jnk_waited_***'                            ; OPTIONAL, Created when local copy finished (one/group)
d149 1
a149 1
 GLO [finished_file]          = 'jnk_sync_{****[rn]}_'                      ; OPTIONAL, Created when parallel segment finished (one/group)
d151 2
a152 2
 GLO [temp_in_images]         = '_8@@'                                       ; OPTIONAL, Used by alignment & back projection internally
 GLO [temp_out_images]        = 'work/dala_{***[grp]}@@'                     ; OPTIONAL, Used if [incore-yn] == 0  or small angle ref.(deleted)
d158 1
a158 1
 UD 5, [sp_pixsiz]                     ; Get pixelsize (A)   
d161 1
a161 4
 UD 6, [sp_kev]                        ; Electron energy (kV)
   [params]                            ; Parameter doc. file

 UD 17, [sp_winsiz]                    ; Get windowsize (pixels), used to find projection radius 
d166 1
a166 4
 ; ---- Should not need to alter following parameters --------------------------

 ; Calculate lambda (A) from electron voltage now 
 [sp_lambda] = 12.398 / SQR([sp_kev] * (1022.0 + [sp_kev]))
@


1.77
log
@gmask removed
cosmetic
@
text
@a124 1
 GLO [grp_resol]              = 'final/group_resolutions'                   ; Group   resolution doc file (one)
@


1.76
log
@[iter-end]    = 12,  [ang-steps], [ang-limits], [group_align_ori
@
text
@d5 2
a16 1
 ;          gmask                                  ArDean Leith Dec 2012
d18 2
a19 1
 ;
d46 1
a46 1
 [iter-end]    = 12   ; Ending alignment step   (iteration)
a48 1
                      ;   (Default is for a ribosome. EDIT as needed.)
d50 1
d52 1
a52 1
 [win-frac]    = 0.95 ; Fraction of window diameter used in projection (.95 == use 95% window size)
d71 1
a71 1
 ; ----------------- Input files ---  May have to EDIT these names ------
d86 1
a86 1
 GLO [scattering_doc]        = '[input_dir]/scattering'                     ; OPTIONAL enhancement document input     (one)
a127 2
 GLO [gmask]                  = 'final/gmask'                               ; Mask used during back projection - UNUSED (one)

d156 1
a156 1
 ; ---- Should not need to adjust following parameters --------------------------
@


1.75
log
@mask is UNUSED now
@
text
@d38 1
a38 1
 [prepare-yn]  = 1    ; Prepare input images   (>0 == yes,  only needs to be done once)
d44 1
a44 1
 [iter-end]    = 4    ; Ending alignment step   (iteration)
d54 4
a57 3
 ; Following two string variables are used during usual refinement (one value / iteration) (Set: 20 iterations)
 GLO [ang-steps]  = '15,10,3.3,3,2, 2,2,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5' ; Angular degree steps    
 GLO [ang-limits] = '0,0,0,0,15, 8,6,5,5,5, 5,5,5,5,5, 5,5,5,5,5'           ; Angular limits
d60 3
a62 2
 GLO [ang-steps-sm] = '0.5'                                                   ; Angular degree steps      
 GLO [thetas-sm]    = '2.0'                                                  ; Theta range  
d67 1
a80 2
 GLO [group_align_orig]      = '[input_orig]/bp_align_{**[iter]}_{***[grp]}'; Initial alignment parameter file (one/group) 

a91 1

@


1.74
log
@Input volume name was missing an underscore
@
text
@d126 1
a126 1
 GLO [gmask]                  = 'final/gmask'                               ; Mask used during back projection (one)
@


1.73
log
@reverted to non-gold
@
text
@d72 1
a72 1
 GLO [vol_orig]              = '../Reconstruction/vol{**[iter]}'            ; Initial reconstructed volume (one)   
@


1.72
log
@improved
@
text
@a16 1
 ;          For gold standard reconstruction       ArDean Leith May 2014
d40 1
a40 1
 [bp-type]     = 2    ; Backprojection method (1==BP CG, 2==BP 32F, 3==BP RP, 4==BP 3N)
d44 1
a44 1
 [iter-end]    = 14   ; Ending alignment step   (iteration)
d50 1
a50 1
 [win-frac]    = 0.95 ; Fraction of window diameter used in projection (e.g. 0.95 == use 95% of window size)
d54 3
a56 6
 ; Following two string variables are used during usual refinement (one value / iteration) (Set for up to: 20 iterations)
!GLO [ang-steps]  = '15,10,3.3,3,2,   2,2,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5'    ; Angular degree steps    
 GLO [ang-steps]  = '15,10,3.3,3.3,3, 2,2,2,1.5,1.5, 1.5,1.5,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5, 1.5' ; Angular degree steps    

!GLO [ang-limits] = '0,0,0,0,15, 8,6,5,5,5, 5,5,5,5,5, 5,5,5,5,5'           ; Angular limits
 GLO [ang-limits] = '0,0,0,15,8, 6,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5'           ; Angular limits
d59 2
a60 2
 GLO [ang-steps-sm] =  '0.5'                                                ; Angular degree steps      
 GLO [thetas-sm]    =  '2.0'                                                ; Theta range  
d62 1
a62 1
 ; Following flag variables are used to activate OPTIONAL amplitude enhancement (Set for up to: 20 iterations)
d76 1
a76 1
 GLO [sel_parts_orig]        = '[input_orig]/sel_part_{***[grp]}'           ; Particle selection doc file (one/group)
d90 2
a91 4
 GLO [input_dir]             = 'input/'                                  ; Main dir. for input files
 GLO [final_dir]             = 'final/'                                  ; Main dir. for output files
 GLO [temp_work_dir]         = 'work/'                                   ; Temp work dir
 GLO [temp_local_dir]        = '/scratch/'                               ; OPTIONAL local disk scratch dir for PubSub use
d93 3
a95 1
 GLO [sel_group]             = 'input/sel_group'                         ; Group selection doc file           (one)
d97 1
a97 2
 GLO [sel_parts]             = 'input/sel_part_{***[grp]}'               ; Particle selection doc file stem   (one/group)
 GLO [sel_parts_s]           = '[sel_parts]_s{*[s]}'                     ; Particle selection doc file        (one/group)
d99 1
a99 1
 GLO [unaligned_images]      = 'input/data_ctfd_{***[grp]}'              ; Unaligned images stack (usually links) (one/group)
d101 1
a101 2
 GLO [vol]                   = 'final/vol_{**[iter]}'                    ; Current volume from previous iter. (two)  
 GLO [vol_s]                 = '[vol]_s{*[s]}'                           ; Current volume from previous iter. (two)  
d103 1
a103 2
 GLO [next_vol]              = 'final/vol_{**[next-iter]}'               ; Next volume stem   
 GLO [next_vol_s]            = '[next_vol]_s{*[s]}'                      ; Filtered, shifted volumes          (one/iter)
d105 2
a106 2
 GLO [group_vol_stem]        = 'work/vol_{**[iter]}_{***[grp]}_***'      ; Current group volumes              (two/group/iter) 
 GLO [group_vol_s]           = 'work/vol_{**[iter]}_{***[grp]}_s{*[s]'   ; Current group volumes              (two/group/iter) 
d108 2
a109 3
 GLO [next_group_vol_stem]   = 'work/vol_{**[next-iter]}_***'            ; Next group volume stem   
 GLO [next_group_vol]        = 'work/vol_{**[next-iter]}_{***[grp]}'     ; Next group volume stem   
 GLO [next_group_vol_s]      = '[next_group_vol]_s{*[s]}'                ; Next group volume                  (two/group/iter) 
d111 3
a113 4
 GLO [group_align]           = 'final/align_{**[iter]}_{***[grp]}'       ; Group alignment doc file stem  
 GLO [group_align_s]         = '[group_align]_s{*[s]}'                   ; Group alignment doc files          (two/group/iter)
 GLO [next_group_align]      = 'final/align_{**[next-iter]}_{***[grp]}'  ; Next group alignment doc file stem 
 GLO [next_group_align_s]    = '[next_group_align]_s{*[s]}'              ; Next group alignment doc files     (one/group/iter)
d115 4
a118 1
 GLO [iter_refangs]          = 'work/ang_refs_{**[iter]}'                ; Reference angle file               (one/iter)
d120 2
a121 5
 GLO [ref_projs_s]           = 'work/refproj_{**[iter]}_s{*[s]}'         ; Reference projection stacks        (two/iter)

 GLO [m_fsc]                 = 'final/fscdoc_m_{**[iter]}'               ; Masked FSC curve doc file        (one/iter)
 GLO [next_u_fsc]            = 'final/fscdoc_u_{**[next-iter]}'          ; Unmasked FSC curve doc file        (one/iter)
 GLO [next_m_fsc]            = 'final/fscdoc_m_{**[next-iter]}'          ; Masked   FSC curve doc file        (one/iter)
d123 2
a124 1
 GLO [iter_resol]            = 'final/resolutions'                       ; Overall resolution doc file        (one)
d126 1
a126 1
 GLO [gmask]                 = 'final/gmask'                             ; Mask used during back projection   (one)
d128 2
a129 2
 GLO [img_ang_vora]          = 'final/angvora_{**[iter]}_{***[grp]}'     ; OPTIONAL, Small angle refinement ref. angles        (one/group/iter)
 GLO [temp_ref_projs]        = '_5@@'                                     ; OPTIONAL, Small angle refinement local scratch file (deleted)
d131 1
a131 1
 GLO [enhance_doc]           = 'work/enhance_doc_{**[next-iter]}'        ; OPTIONAL, Enhancement doc file output      (one/iter)
d133 2
a134 2
 GLO [ref_rings]             = 'work/SCR_{**[iter]}_{***[grp]}'          ; OPTIONAL, Reference rings files output     (one/group/iter)
 GLO [wait_file]             = 'jnk_waited_***'                          ; OPTIONAL, Created when local copy finished (one/group)
d136 1
a136 1
 GLO [finished_file]         = 'jnk_sync_{****[rn]}_'                    ; OPTIONAL, Created when parallel segment finished (one/group)
d138 2
a139 2
 GLO [temp_in_images]        = '_8@@'                                     ; OPTIONAL, Used by alignment & back projection internally
 GLO [temp_out_images]       = 'work/dala_{***[grp]}@@'                   ; OPTIONAL, Used if [incore-yn] == 0  or small angle ref.(deleted)
d145 1
a145 1
 UD 5, [sp_pixsiz]                     ; Get pixel size (A)   
d151 1
a151 1
 UD 17, [sp_winsiz]                    ; Get window size (pixels), used to find projection radius 
@


1.71
log
@vol_02...
@
text
@d17 1
d41 1
a41 1
 [bp-type]     = 1    ; Backprojection method (1==BP CG, 2==BP 32F, 3==BP RP, 4==BP 3N)
d45 1
a45 1
 [iter-end]    = 4    ; Ending alignment step   (iteration)
d51 1
a51 1
 [win-frac]    = 0.95 ; Fraction of window diameter used in projection (.95 == use 95% window size)
d55 6
a60 3
 ; Following two string variables are used during usual refinement (one value / iteration) (Set: 20 iterations)
 GLO [ang-steps]  = '15,10,3.3,3,2, 2,2,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5' ; Angular degree steps    
 GLO [ang-limits] = '0,0,0,0,15, 8,6,5,5,5, 5,5,5,5,5, 5,5,5,5,5'           ; Angular limits
d63 2
a64 2
 GLO [ang-steps-sm] = '0.5'                                                   ; Angular degree steps      
 GLO [thetas-sm]    = '2.0'                                                  ; Theta range  
d66 1
a66 1
 ; Following flag variables are used to activate OPTIONAL amplitude enhancement
d80 1
a80 1
 GLO [sel_parts_orig]        = '[input_orig]/bp_sel_part_{***[grp]}'        ; Particle selection doc file (one/group)
d94 4
a97 1
 GLO [input_dir]             = 'input/'                                     ; Main dir. for input files
d99 1
d101 2
a102 3
 GLO [final_dir]              = 'final/'                                    ; Main dir. for output files
 GLO [temp_work_dir]          = 'work/'                                     ; Temp work dir
 GLO [temp_local_dir]         = '/scratch/'                                 ; OPTIONAL local disk scratch dir for PubSub use
d104 1
a104 1
 GLO [start_vol]              = 'input/vol_01'                              ; Initial reconstructed volume copy  (one) 
d106 2
a107 1
 GLO [sel_group]              = 'input/sel_group'                           ; Group selection doc file           (one)
d109 2
a110 1
 GLO [sel_parts]              = 'input/sel_part_{***[grp]}'                 ; Particle selection doc file        (one/group)
d112 2
a113 1
 GLO [unaligned_images]       = 'input/data_{***[grp]}'                     ; Unaligned images stack (usually links) (one/group)
d115 3
a117 2
 GLO [current_vol]            = 'final/vol_{**[iter]}'                      ; Produced by 'AP SH' or previous iter. (one)  
 GLO [next_vol]               = 'final/vol_{**[next-iter]}'                 ; Filtered, shifted volume              (one/iter)
d119 4
a122 2
 GLO [group_align]            = 'final/align_{**[iter]}_{***[grp]}'         ; Aignment parameter input file    (one/group/iter)
 GLO [next_group_align]       = 'final/align_{**[next-iter]}_{***[grp]}'    ; Alignment parameter output file  (one/group/iter)
d124 3
a126 3
 GLO [group_vol]              = 'work/vol_{**[iter]}_{***[grp]}'            ; Current group volumes     (one/group/iter) 
 GLO [next_group_vol]         = 'work/vol_{**[next-iter]}_{***[grp]}'       ; Next group volumes        (one/group/iter) 
 GLO [next_group_vol_template]= 'work/vol_{**[next-iter]}_***'              ; Group volume template   
d128 3
a130 7
 GLO [ref_projs]              = 'work/refproj_{**[iter]}'                   ; Reference projections     (one/iter)

 GLO [iter_refangs]           = 'work/ang_refs_{**[iter]}'                  ; Reference angle file      (one/iter)
 GLO [iter_sel_refangs]       = 'work/sel_ang_refs_{**[iter]}'              ; Ref. angle selection file (one/iter)
   
 GLO [next_u_fsc]             = 'final/fscdoc_u_{**[next-iter]}'            ; Merged unmasked FSC curve doc file (one/iter)
 GLO [next_m_fsc]             = 'final/fscdoc_m_{**[next-iter]}'            ; Merged masked   FSC curve doc file (one/iter)
d132 1
a132 2
 GLO [grp_resol]              = 'final/group_resolutions'                   ; Group   resolution doc file (one)
 GLO [iter_resol]             = 'final/resolutions'                         ; Overall resolution doc file (one)
d134 1
a134 1
 GLO [gmask]                  = 'final/gmask'                               ; Mask used during back projection (one)
d136 2
a137 2
 GLO [img_ang_vora]           = 'final/angvora_{**[iter]}_{***[grp]}'       ; OPTIONAL, Small angle refinement ref. angles        (one/group/iter)
 GLO [temp_ref_projs]         = '_5@@'                                       ; OPTIONAL, Small angle refinement local scratch file (deleted)
d139 1
a139 1
 GLO [enhance_doc]            = 'work/enhance_doc_{**[next-iter]}'          ; OPTIONAL, Enhancement doc file output      (one/iter)
d141 2
a142 2
 GLO [ref_rings]              = 'work/SCR_{**[iter]}_{***[grp]}'            ; OPTIONAL, Reference rings files output     (one/group/iter)
 GLO [wait_file]              = 'jnk_waited_***'                            ; OPTIONAL, Created when local copy finished (one/group)
d144 1
a144 1
 GLO [finished_file]          = 'jnk_sync_{****[rn]}_'                      ; OPTIONAL, Created when parallel segment finished (one/group)
d146 2
a147 2
 GLO [temp_in_images]         = '_8@@'                                       ; OPTIONAL, Used by alignment & back projection internally
 GLO [temp_out_images]        = 'work/dala_{***[grp]}@@'                     ; OPTIONAL, Used if [incore-yn] == 0  or small angle ref.(deleted)
d153 1
a153 1
 UD 5, [sp_pixsiz]                     ; Get pixelsize (A)   
d159 1
a159 1
 UD 17, [sp_winsiz]                    ; Get windowsize (pixels), used to find projection radius 
@


1.70
log
@vol_01
@
text
@d105 2
a106 2
 GLO [current_vol]            = 'final/vol{**[iter]}'                       ; Produced by 'AP SH' or previous iter. (one)  
 GLO [next_vol]               = 'final/vol{**[next-iter]}'                  ; Filtered, shifted volume              (one/iter)
@


1.69
log
@ang-steps-sm back to string
@
text
@d97 1
a97 1
 GLO [start_vol]              = 'input/vol01'                               ; Initial reconstructed volume copy  (one) 
@


1.68
log
@ GLO [ang-step-sm] =  0.5                                                   ; Angular degree steps
 GLO [theta-sm]    =  2.0                                                  ; Theta range
@
text
@d54 1
a54 1
 ; Following two variables are used during usual refinement (one value / iteration) (Set: 20 iterations)
d58 3
a60 3
 ; Following two register variables are only used during 'small angle refinement'
 GLO [ang-step-sm] =  0.5                                                   ; Angular degree steps      
 GLO [theta-sm]    =  2.0                                                  ; Theta range  
@


1.67
log
@sub1 --> s1
group fsc removed
@
text
@d58 3
a60 3
 ; Following two variables are only used during 'small angle refinement'
 GLO [ang-step-sm] = '0.5'                                                  ; Angular degree steps      
 GLO [theta-range] = '2.0'                                                  ; Theta range  
@


1.66
log
@calling parameters changed for bp_type
@
text
@a119 1
 GLO [next_group_m_fsc]       = 'work/fscdoc_m_{**[next-iter]}_{***[grp]}'  ; Masked group    FSC curve doc file (one/group/iter)
@


1.65
log
@temp_out_images
@
text
@d1 1
a1 1
 ([sp_pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sp_lambda],[smallang-yn],[sp_winsiz],[incore-yn],[prepare-yn])
d40 1
a40 1
 [bp-type]     = 2    ; Backprojection method (1==BP CG, 2==BP 32F, 3==BP RP, 4==BP 3N)
d85 2
@


1.64
log
@rewrite_syntax_filenames
@
text
@d8 1
a8 1
 ;          Rewritten  More stacks                 ArDean Leith Dec 2006
a10 1
 ;          Uses AP SH for 2 iters                 ArDean Leith Oct 2010
d18 1
a18 1
 ; INPUT REGISTERS:       none
a32 1
 ;<b> ============== DO NOT COPY FROM WEB BROWSER =====================</b>
d54 3
a56 3
 ; Following two variables are used during usual refinement (one value / iteration)
 GLO [ang-steps]  = '15,10,3.3,3,2,2,2,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5' ; Angular degree steps    
 GLO [ang-limits] = '0,0,0,0,15,8,6,5,5,5,5,5,5,5,5,5,5,5'                          ; Angular limits
d59 2
a60 2
 GLO [ang-step-sm]  = '0.5'                                                         ; Angular degree steps      
 GLO [theta-range]  = '2.0'                                                         ; Theta range  
d63 1
a63 1
 GLO [amp-enhance-flags] = '0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0'                        ; Amplitude enhancement selector 
d125 1
a125 1
 GLO [gmask]                  = 'work/gmask'                                ; Mask used during back projection (one)
d127 2
a128 1
 GLO [img_ang_vora]           = 'final/angvora_{**[iter]}_{***[grp]}'       ; OPTIONAL, Small angle refinement use only  (one/group/iter)
d138 1
a138 1
 GLO [temp_out_images]        = 'work/dala_{***[grp]}@@'                     ; OPTIONAL, File created if [incore-yn] == 0  (deleted)
@


1.63
log
@'gmask bug
@
text
@d1 52
a52 37
([sp_pixsiz],[r2],[shrange],[prj-radius],[iter1],[iter-end],[sp_lambda],[small-ang],[sp_winsiz],[converg])
;
; <html><head><title>Sets refinement parameters and files</title></head><body><pre>
;
; SOURCE:  spider/docs/techs/recon/newprogs/refine_settings.pam
;          New                                    ArDean Leith Jul 2002
;          []                                     ArDean Leith Dec 2005
;          Rewritten  More stacks                 ArDean Leith Dec 2006
;          Input locations altered                ArDean Leith Dec 2009
;          Variable assignment                    ArDean Leith Jan 2010
;          Uses AP SH for 2 iters                 ArDean Leith Oct 2010
;          Even-odd replaced                      ArDean Leith Jan 2011
;          Dala removal                           ArDean Leith Jan 2012
;          [pixsiz] returned, fsc, ofsc...        ArDean Leith Aug 2012
;          Skip 3.3,3...                          ArDean Leith Sep 2012
;          gmask                                  ArDean Leith Dec 2012
;
; INPUT REGISTERS:
;   none
;
; OUTPUT REGISTERS (SET  BELOW):
;   [sp_pixsiz]          Pixel size                  (A) 
;   [r2]                 Object alignment radius     (pixels)
;   [shrange]            Alignment shift +- allowed  (pixels) 
;   [prj-radius]         Object projection radius    (pixels)
;   [iter1]              Starting iteration
;   [iter-end]           Ending   iteration
;   [sp_lambda]          Electron wavength Lambda    (A)
;   [small-ang]          Small angle refinement flag (1 = true)
;   [sp_winsiz]          Image/window size = volume size
;   [converg]            Convergence criterion fraction
;
;<b> ============== DO NOT COPY FROM WEB BROWSER ==============</b>
;<b> ---------Set Refinement parameters from parameter file ----------</b>
;<pre> 
   
 GLO [params]  = '../params'     ; Parameter doc file    (REQUIRED input file)
d54 1
a54 2
 UD 5,[sp_pixsiz]     ; Get pixelsize (A)   
   [params]           ; Parameter doc. file
d56 3
a58 2
 UD 6,[sp_kev]        ; Electron energy (kV)
   [params]           ; Parameter doc. file
d60 3
a62 2
 UD 17,[sp_winsiz]    ; Get windowsize (pixels), used to find projection radius 
   [params]           ; Parameter doc. file
d64 2
a65 1
 UD E                 ; End params doc. file usage
d67 2
a68 2
 ; Calculate lambda (A) from electron voltage now 
 [sp_lambda] = 12.398 / SQR([sp_kev] * (1022.0 + [sp_kev]))
d70 1
a70 1
 ; ---- Adjust these parameters for your project --------------------- EDIT -----
d72 1
a72 9
 [shrange]  = 6       ; Alignment shift (pixels) searched is +- this value
 [iter1]    = 1       ; Starting alignment step (iteration)
 [iter-end] = 5       ; Ending alignment step   (iteration)

 [diam]     = 349     ; Diameter of the structure (A) used in alignment search.
                      ;   (Default is for ribosome. EDIT as needed.)
                      ;   Diameter is used to find radius for last alignment ring.
  
 [win-frac] = 0.95    ; Fraction of window diameter used in projection (.95= use 95% window size)
d74 1
a74 2
 [converg]  = 0.05    ; Convergence criterion fraction
                      ;   Converges when [converg] of all images move < 1.5 * stepsize.
d76 1
a76 1
 [small-ang] = 0      ; For SMALL angle refinement set this to 1
d78 1
a78 9
 IF ([small-ang].NE.1)) THEN
   ; For normal angle refinement
   GLO [ang-steps]  = '3.3,3.,2.,2.,2.,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5'  ; Angular degree steps   
   GLO [ang-limits] = '0.,0.,15.,8.,6.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.'            ; Angular limits
 ELSE
   ; For SMALL angle refinement
   GLO [ang-step-sm]  = '(0.5)'      ; Angular degree steps      
   GLO [theta-range]  = '(2.0)'      ; Theta range  
 ENDIF
d80 1
a80 1
 GLO [amp-enhance-flags] = '.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0'  ; Amplitude enhancement selector 
d82 1
a82 1
 ; ---- Should not need to adjust following parameters --------------------------
d84 3
a86 1
 [r2]  = INT([diam]/(2.0*[sp_pixsiz])) ; Alignment radius (pixels) used in alignment search
d88 1
a88 3
 ; Ensure that sum of alignment radius + translation are within window dimensions 
 [ring-sh] = [r2] + [shrange]          ; Last ring + translation step
 [maxrad]  = INT([sp_winsiz]/2) - 1    ; Max. radius of object in window
d90 1
a90 4
 IF ([ring-sh].GE.[maxrad]) THEN
   ; Must reduce radius of outer ring, not translation step
   [r2] = [maxrad] - [shrange] - 2    ; Reduces rotational search radius 
 ENDIF
a91 1
 [prj-radius] = INT(([win-frac]*[sp_winsiz])/2.0 )  ; Convert fraction to radius in pixels 
d93 3
a95 2
 ;<b> ============== DO NOT COPY FROM WEB BROWSER ==============</b>
 ; ----------------- Input files ---  May have to EDIT these names ------
d97 1
a97 1
 GLO [input_dir]             = 'input/'                                     ; Main dir. for input files
d99 1
a99 1
 GLO [vol_orig]              = '../Reconstruction/vol{**[iter]}'            ; Initial reconstructed volume   
d101 1
a101 1
 GLO [sel_group_orig]        = '../Reconstruction/sel_group_cclim'          ; Group selection doc file                    
d103 1
a103 1
 GLO [sel_particles_orig]    = '../Reconstruction/sel_particles_{***[grp]}' ; Particle selection doc file
d105 2
a106 1
 GLO [group_align_orig]      = '../Alignment/align_{**[iter]}_{***[grp]}'   ; Initial alignment parameter file 
d108 2
a109 1
 GLO [unaligned_images_orig] = '../Alignment/data{***[grp]}'                ; Original unaligned images stack
d111 3
a113 3
 ; Following two files OPTIONAL (Only needed if using amplitude enhancement)
 GLO [scattering_doc]        = 'input/scattering'                           ; OPTIONAL enhancement document input
 GLO [mask]                  = 'input/mask'                                 ; OPTIONAL mask for amplitude enhancement
d115 1
a115 1
 ; -------------- Output files -- No need to edit for default refinement ----------
d117 6
a122 3
 GLO [final_dir]              = 'final/'                                    ; Main dir. for output files
 GLO [temp_work_dir]          = 'work/'                                     ; Temp work dir
 GLO [temp_local_dir]         = '/scratch/'                                 ; OPTIONAL local disk scratch dir for PubSub use
d124 4
a127 1
 GLO [start_vol]              = 'input/vol01'                               ; Initial reconstructed volume copy  
d129 3
a131 2
 GLO [sel_group]              = 'input/sel_group'                           ; Group selection doc file
 GLO [sel_group_sorted]       = 'input/sel_group_sort'                      ; Sorted group selection doc file
d133 2
a134 1
 GLO [sel_particles]          = 'input/sel_particles_{***[grp]}'            ; Particle selection doc file
d136 1
a136 1
 GLO [unaligned_images]       = 'input/data{***[grp]}'                      ; Unaligned images stack (usually links)
d138 2
a139 2
 GLO [current_vol]            = 'final/vol{**[iter]}'                       ; Produced by 'AP SH' or previous iter.   
 GLO [next_vol]               = 'final/vol{**[next-iter]}'                  ; Made for next iter.   
d141 1
a141 1
 GLO [next_val]               = 'final/val{**[next-iter]}'                  ; Volumes
d143 1
a143 2
 GLO [group_align]            = 'final/align_{**[iter]}_{***[grp]}'         ; Aignment parameter input file 
 GLO [next_group_align]       = 'final/align_{**[next-iter]}_{***[grp]}'    ; Alignment parameter output file 
d145 2
a146 3
 GLO [group_vol]              = 'work/vol_{**[iter]}_{***[grp]}'            ; Current group volumes   
 GLO [next_group_vol]         = 'work/vol_{**[next-iter]}_{***[grp]}'       ; Next group volumes   
 GLO [next_group_vol_template]= 'work/vol_{**[next-iter]}_***'              ; Group volume template  
d148 2
a149 4
 IF ([small-ang].EQ.0) THEN
   GLO [temp_ref_projs]       = '[temp_local_dir]/refproj{**[iter]}_{***[grp]}' ; For temp. local scratch file (deleted)
 ELSE
   GLO [img_ang_vora]         = 'final/angvora_{**[iter]}_{***[grp]}'       ; For Small angles use only  
d151 2
a152 2
   GLO [temp_ref_projs]       = '_5@@'                                       ; For Small angles temp. local scratch file (deleted)
 ENDIF
d154 1
a154 2
 GLO [temp_ctf_file]          = 'input/ctf{***[grp]}'                       ; CTF correction files
 GLO [temp_ctf_file_template] = 'input/ctf***'                              ; CTF correction file template
d156 1
a156 1
 GLO [iter_vft]               = 'final/vft{**[iter]}'                       ; Temp. vft file template
d158 2
a159 3
 GLO [group_bpr]              = 'final/bpr{**[iter]}_{***[grp]}'            ; Group volume file
 GLO [group_bpr_template]     = 'final/bpr{**[next-iter]}_***'              ; Group volume template
 GLO [next_group_bpr]         = 'final/bpr{**[next-iter]}_{***[grp]}'       ; Group volume file
d161 1
a161 5
 GLO [iter_refangs]           = 'work/ang_refs_{**[iter]}'                  ; Iter. ref. angle file
 GLO [iter_sel_refangs]       = 'work/sel_ang_refs_{**[iter]}'              ; Iter. ref. angle selection file
   
 GLO [next_fsc]               = 'final/fscdoc_{**[next-iter]}'              ; FSC doc file
 GLO [next_group_fsc]         = 'final/fscdoc_{**[next-iter]}_{***[grp]}'   ; Group FSC doc file
d163 3
a165 2
 GLO [ofsc]                   = 'final/ofscdoc_{**[next-iter]}'             ; Overall FSC doc file  from 'BP R'
 GLO [next_group_ofsc]        = 'final/ofscdoc_{**[next-iter]}_{***[grp]}'  ; Group   FSC doc files from 'BP R'
d167 4
a170 6
 GLO [grp_resol]              = 'final/group_resolutions'                   ; Group resolution doc file
 GLO [iter_resol]             = 'final/resolutions'                         ; Overall resolution doc file
       
 GLO [bpr]                    = 'final/bpr{**[next-iter]}'                  ; Refined output volume

 GLO [temp_gmask]             = '[temp_work_dir]/gmask_{***[grp]}'          ; Mask for back projection
d172 1
a172 4
 GLO [enhance_doc]            = 'work/enhance_doc_{**[next-iter]}'          ; OPTIONAL Enhancement doc file output
 GLO [ref_rings]              = 'work/SCR_{**[iter]}_{***[grp]}'            ; OPTIONAL Reference rings files output

 ; ----------------- END BATCH HEADER ---------------------------------
d175 1
a175 1
 ; </body></pre></html>
@


1.62
log
@[temp_gmask] defined
@
text
@d174 1
a174 1
 GLO [temp_gmask]             = [temp_work_dir]/'gmask_{***[grp]}'          ; Mask for back projection
@


1.61
log
@fsc --> fscdoc file names
@
text
@d16 1
d163 2
a164 2
 GLO [next_fsc]               = 'final/fscdoc_{**[next-iter]}'                 ; FSC doc file
 GLO [next_group_fsc]         = 'final/fscdoc_{**[next-iter]}_{***[grp]}'      ; Group FSC doc file
d166 2
a167 2
 GLO [ofsc]                   = 'final/ofscdoc_{**[next-iter]}'                ; Overall FSC doc file  from 'BP R'
 GLO [next_group_ofsc]        = 'final/ofscdoc_{**[next-iter]}_{***[grp]}'     ; Group   FSC doc files from 'BP R'
d173 2
@


1.60
log
@comments
@
text
@d162 2
a163 2
 GLO [next_fsc]               = 'final/fsc_{**[next-iter]}'                 ; FSC doc file
 GLO [next_group_fsc]         = 'final/fsc_{**[next-iter]}_{***[grp]}'      ; Group FSC doc file
d165 2
a166 2
 GLO [ofsc]                   = 'final/ofsc_{**[next-iter]}'                ; Overall FSC doc file  from 'BP R'
 GLO [next_group_ofsc]        = 'final/ofsc_{**[next-iter]}_{***[grp]}'     ; Group   FSC doc files from 'BP R'
@


1.59
log
@skip 3.3,3...
@
text
@d12 1
a12 1
;          Even-odd removed                       ArDean Leith Jan 2011
d15 1
a15 1
;          skip 3.3,3...                          ArDean Leith Sep 2012
d21 4
a24 4
;   [sp_pixsiz]          Pixel size (A) 
;   [r2]                 Alignment radius of structure  (pixels)
;   [shrange]            Alignment shift +- allowed     (pixels) 
;   [prj-radius]         Projection radius of structure (pixels)
d27 3
a29 3
;   [sp_lambda]          Lambda  (A)
;   [small-ang]          Small angle refinement flag (1 is true)
;   [sp_winsiz]          Image or window size = volume size
@


1.58
log
@[pixsiz] returned, fsc, ofsc...
@
text
@d15 1
d71 1
a71 1
   GLO [ang-steps]  = '2.,2.,2.,2.,2.,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5'  ; Angular degree steps   
@


1.57
log
@no more dala files
@
text
@d1 1
a1 1
([sp_maxspfreq],[r2],[shrange],[prj-radius],[iter1],[iter-end],[sp_lambda],[small-ang],[sp_winsiz],[converg])
d14 1
d20 1
a20 1
;   [sp_maxspfreq]       Maximum spatial freq (1/A) 
d35 1
a35 1
GLO [params]  = '../params'     ; Parameter doc file    (REQUIRED input file)
d37 2
a38 2
UD 5,[sp_pixsiz]      ; Get pixelsize (A/pixel) (.17730) 
[params]              ; Parameter doc. file
d40 2
a41 2
UD 6,[sp_kev]         ; Electron energy (kV)
[params]              ; Parameter doc. file
d43 2
a44 2
UD 14,[sp_lambda]     ; Get Lambda (A) 
[params]              ; Parameter doc. file
d46 1
a46 2
UD 15,[sp_maxspfreq]  ; Get maximum spatial frequency (1/A) 
[params]              ; Parameter doc. file
d48 2
a49 2
UD 17,[sp_winsiz]     ; Get windowsize (Pixels), used to find projection radius 
[params]              ; Parameter doc. file
d51 1
a51 1
UD E                  ; End params doc. file usage
d53 3
a55 1
; ---- Adjust these parameters for your project --------------------- EDIT -----
d57 1
a57 5
[shrange]  = 6        ; Alignment shift (pixels) searched is +- this value
[iter1]    = 1        ; Starting alignment step (iteration)
[iter-end] = 4        ; Ending alignment step   (iteration)

[diam]     = 349      ; Diameter of the structure (A) used in alignment search.
d61 1
a61 1
[win-frac] = 0.95     ; Fraction of window diameter used in projection (.95= use 95% window size)
d63 1
a63 1
[converg]  = 0.05     ; Convergence criterion fraction
d66 1
a66 1
[small-ang] = 0       ; For SMALL angle refinement set this to 1
d68 5
a72 1
IF ([small-ang].EQ.1) THEN
d76 1
a76 5
ELSE
   ; For normal angle refinement
   GLO [ang-steps]  = '2.,2.,2.,2.,2.,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5'  ; Angular degree steps   
   GLO [ang-limits] = '0.,0.,15.,8.,6.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.'            ; Angular limits
ENDIF
d78 1
a78 1
GLO [amp-enhance-flags] = '.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0'  ; Amplitude enhancement selector 
d80 1
a80 1
; ---- Should not need to adjust following parameters --------------------------
d82 1
a82 1
[r2]  = INT([diam]/(2.0*[sp_pixsiz])) ; Alignment radius (pixels) used in alignment search
d84 3
a86 3
; Ensure that sum of alignment radius + translation are within window dimensions 
[ring-sh] = [r2] + [shrange]          ; Last ring + translation step
[maxrad]  = INT([sp_winsiz]/2) - 1    ; Max. radius of object in window
d88 1
a88 1
IF ([ring-sh].GE.[maxrad]) THEN
d91 1
a91 1
ENDIF
d93 1
a93 1
[prj-radius] = INT(([win-frac]*[sp_winsiz])/2.0 )  ; Convert fraction to radius in pixels 
d95 2
a96 2
;<b> ============== DO NOT COPY FROM WEB BROWSER ==============</b>
; ----------------- Input files ---  May have to EDIT these names ------
d98 1
a98 1
GLO [input_dir]             = 'input/'                                     ; Main dir. for input files
d100 1
a100 1
GLO [vol_orig]              = '../Reconstruction/vol{**[iter]}'            ; Initial reconstructed volume   
d102 1
a102 1
GLO [sel_group_orig]        = '../Reconstruction/sel_group_cclim'          ; Group selection doc file                    
d104 1
a104 1
GLO [sel_particles_orig]    = '../Reconstruction/sel_particles_{***[grp]}' ; Particle selection doc file
d106 1
a106 1
GLO [group_align_orig]      = '../Alignment/align_{**[iter]}_{***[grp]}'   ; Initial alignment parameter file 
d108 1
a108 1
GLO [unaligned_images_orig] = '../Alignment/data{***[grp]}'                ; Original unaligned images stack
d110 3
a112 3
; Following two files OPTIONAL (Only needed if using amplitude enhancement)
GLO [scattering_doc]        = 'input/scattering'                           ; OPTIONAL enhancement document input
GLO [mask]                  = 'input/mask'                                 ; OPTIONAL mask for amplitude enhancement
d114 1
a114 1
; -------------- Output files -- No need to edit for default refinement ----------
d116 3
a118 3
GLO [final_dir]              = 'final/'                                      ; Main dir. for output files
GLO [temp_work_dir]          = 'work/'                                       ; Temp work dir
GLO [temp_local_dir]         = '/scratch/'                                   ; An OPTIONAL local disk scratch dir for PubSub use
d120 1
a120 1
GLO [start_vol]              = 'input/vol01'                                 ; Initial reconstructed volume copy  
d122 2
a123 2
GLO [sel_group]              = 'input/sel_group'                             ; Group selection doc file
GLO [sel_group_sorted]       = 'input/sel_group_sort'                        ; Sorted group selection doc file
d125 1
a125 1
GLO [sel_particles]          = 'input/sel_particles_{***[grp]}'              ; Particle selection doc file
d127 1
a127 1
GLO [unaligned_images]       = 'input/data{***[grp]}'                        ; Unaligned images stack (usually links)
d129 2
a130 2
GLO [current_vol]            = 'final/vol{**[iter]}'                         ; Produced by 'AP SH' or previous iter.   
GLO [next_vol]               = 'final/vol{**[next-iter]}'                    ; Made for next iter.   
d132 1
a132 1
GLO [next_val]               = 'final/val{**[next-iter]}'                    ; Volumes
d134 2
a135 2
GLO [group_align]            = 'final/align_{**[iter]}_{***[grp]}'           ; Aignment parameter input file 
GLO [next_group_align]       = 'final/align_{**[next-iter]}_{***[grp]}'      ; Alignment parameter output file 
d137 3
a139 1
; -------------------------
d141 4
a144 3
GLO [group_vol]              = 'work/vol_{**[iter]}_{***[grp]}'            ; Current group volumes   
GLO [next_group_vol]         = 'work/vol_{**[next-iter]}_{***[grp]}'       ; Next group volumes   
GLO [next_group_vol_template]= 'work/vol_{**[next-iter]}_***'              ; Group volume template  
d146 2
a147 4
IF ([small-ang].EQ.0) THEN
  GLO [temp_ref_projs]       = '[temp_local_dir]/refproj{**[iter]}_{***[grp]}' ; For temp. local scratch file (deleted)
ELSE
  GLO [img_ang_vora]         = 'final/angvora_{**[iter]}_{***[grp]}'      ; For Small angles use only  
d149 2
a150 2
  GLO [temp_ref_projs]       = '_5@@'                                      ; For Small angles temp. local scratch file (deleted)
ENDIF
d152 1
a152 1
GLO [next_dres]              = 'final/dres{**[next-iter]}'                ; Next resolution output doc. file
d154 3
a156 2
GLO [temp_ctf_file]          = 'input/ctf{***[grp]}'                       ; CTF correction files
GLO [temp_ctf_file_template] = 'input/ctf***'                              ; CTF correction file template
d158 5
a162 1
GLO [iter_vft]               = 'final/vft{**[iter]}'                       ; Temp. vft file template
d164 2
a165 8
GLO [group_bpr]              = 'final/bpr{**[iter]}_{***[grp]}'            ; Group volume file
GLO [group_bpr_template]     = 'final/bpr{**[next-iter]}_***'              ; Group volume template
GLO [next_group_bpr]         = 'final/bpr{**[next-iter]}_{***[grp]}'       ; Group volume file

GLO [iter_refangs]           = 'work/ang_refs_{**[iter]}'                  ; Iter. reference angle file
GLO [iter_sel_refangs]       = 'work/sel_ang_refs_{**[iter]}'              ; Iter. ref. angle selection file
   
GLO [next_group_dres]        = 'final/dres{**[next-iter]}_{***[grp]}'      ; Group dres output doc. file
d167 2
a168 4
GLO [dbpr]                   = 'final/dbpr{**[next-iter]}'                 ; Output resolution doc files
GLO [next_group_dbpr]        = 'final/dbpr{**[next-iter]}_{***[grp]}'      ; Output group resolution doc files
GLO [dbpr_resol]             = 'final/resolutions'                         ; Output resolution doc file
GLO [grp_resol]              = 'final/group_resolutions'                   ; Output resolution doc file
d170 1
a170 1
GLO [bpr]                    = 'final/bpr{**[next-iter]}'                  ; Refined output volume
d172 2
a173 2
GLO [enhance_doc]            = 'work/enhance_doc_{**[next-iter]}'          ; OPTIONAL Enhancement doc file output
GLO [ref_rings]          = 'work/SCR_{**[iter]}_{***[grp]}'            ; OPTIONAL Reference rings files output
d175 1
a175 1
; ----------------- END BATCH HEADER ---------------------------------
d177 2
a178 2
RE
; </body></pre></html>
@


1.56
log
@comments
@
text
@d13 1
d112 1
a112 3
GLO [aligned_images_orig]   = '../Alignment/dala{**[iter]}_{***[grp]}'     ; Initial aligned images

; Following two files OPTIONAL (only needed if using amplitude enhancement)
d118 3
a120 5
GLO [final_dir]             = 'final/'                                      ; Main dir. for output files
GLO [temp_work_dir]         = 'work/'                                       ; Temp work dir
GLO [temp_local_dir]        = '/scratch/'                                   ; An OPTIONAL local disk scratch dir for PubSub use

GLO [start_vol]             = 'input/vol01'                                 ; Initial reconstructed volume copy  
d122 1
a122 2
GLO [sel_group]             = 'input/sel_group'                             ; Group selection doc file
GLO [sel_group_sorted]      = 'input/sel_group_sort'                        ; Sorted group selection doc file
d124 2
a125 1
GLO [sel_particles]         = 'input/sel_particles_{***[grp]}'              ; Particle selection doc file
d127 1
a127 1
GLO [unaligned_images]      = 'input/data{***[grp]}'                        ; Unaligned images stack (usually links)
d129 1
a129 2
GLO [current_vol]           = 'final/vol{**[iter]}'                         ; Produced by 'AP SH' or previous iter.   
GLO [next_vol]              = 'final/vol{**[next-iter]}'                    ; Made for next iter.   
d131 2
a132 1
GLO [next_val]              = 'final/val{**[next-iter]}'                    ; Volumes
d134 1
a134 2
GLO [group_align]           = 'final/align_{**[iter]}_{***[grp]}'           ; Aignment parameter input file 
GLO [next_group_align]      = 'final/align_{**[next-iter]}_{***[grp]}'      ; Alignment parameter output file 
d136 2
a137 2
GLO [aligned_images]        = 'work/dala{**[iter]}_{***[grp]}'              ; Current aligned images in stack
GLO [next_aligned_images]   = 'work/dala{**[next-iter]}_{***[grp]}'         ; Next aligned images stack
d177 1
@


1.55
log
@even-odd gone
@
text
@d6 7
a12 6
;          New                                       ArDean Leith Jul 2002
;          []                                        ArDean Leith Dec 2005
;          Rewritten  More stacks                    ArDean Leith Dec 2006
;          Input locations altered                   ArDean Leith Dec 2009
;          Variable assignment                       ArDean Leith Jan 2010
;          Uses AP SH for 2 iters                    ArDean Leith Oct 2010
d99 1
a99 1
GLO [input_dir]              = 'input/'                                     ; Main dir. for input files
d101 1
a101 1
GLO [vol_orig]               = '../Reconstruction/vol{**[iter]}'            ; Initial reconstructed volume   
d103 1
a103 1
GLO [sel_group_orig]         = '../Reconstruction/sel_group_cclim'          ; Group selection doc file                    
d105 1
a105 1
GLO [sel_particles_orig]     = '../Reconstruction/sel_particles_{***[grp]}' ; Particle selection doc file
d107 1
a107 1
GLO [group_align_orig]       = '../Alignment/align_{**[iter]}_{***[grp]}'   ; Initial alignment parameter file 
d109 1
a109 1
GLO [unaligned_images_orig]  = '../Alignment/data{***[grp]}'                ; Original unaligned images stack
d111 1
a111 1
GLO [aligned_images_orig]    = '../Alignment/dala{**[iter]}_{***[grp]}'     ; Initial aligned images
d114 2
a115 2
GLO [scattering_doc]         = 'input/scattering'                           ; OPTIONAL enhancement document input
GLO [mask]                   = 'input/mask'                                 ; OPTIONAL mask for amplitude enhancement
a119 1

a125 1

a132 1

a140 1

d145 3
a147 3
GLO [group_vol]               = 'work/vol_{**[iter]}_{***[grp]}'            ; Current group volumes   
GLO [next_group_vol]          = 'work/vol_{**[next-iter]}_{***[grp]}'       ; Next group volumes   
GLO [next_group_vol_template] = 'work/vol_{**[next-iter]}_***'              ; Group volume template  
d150 1
a150 1
  GLO [temp_ref_projs]        = '[temp_local_dir]/refproj{**[iter]}_{***[grp]}' ; For temp. local scratch file (deleted)
d152 1
a152 1
  GLO [img_ang_vora]          = 'final/angvora_{**[iter]}_{***[grp]}'      ; For Small angles use only  
d154 1
a154 1
  GLO [temp_ref_projs]        = '_5@@'                                      ; For Small angles temp. local scratch file (deleted)
d157 1
a157 1
GLO [next_dres]               = 'final/dres{**[next-iter]}'                ; Next resolution output doc. file
@


1.54
log
@parallel names with alignment & cosmetic
@
text
@a130 4
GLO [sel_particles_odd]     = 'input/sel_particles_odd_{***[grp]}'          ; Particle selection doc file

GLO [sel_particles_even]    = 'input/sel_particles_even_{***[grp]}'         ; Particle selection doc file

@


1.53
log
@labels
@
text
@d1 1
a1 1
([sp_maxspfreq],[radius],[alignsh],[prj-radius],[iter1],[iter-end],[sp_lambda],[small-ang],[sp_winsiz],[converg])
d18 3
a20 3
;   [radius]             Radius of structure  (pixels)
;   [alignsh]            Alignment shift +- allowed  (pixels) 
;   [prj-radius]         Projection radius  (pixels)
d23 1
a23 1
;   [sp_lambda]          Lambda  (Angstroms)
d53 1
a53 1
[alignsh]  = 6        ; Alignment shift (pixels) searched is +- this value
d82 1
a82 1
[radius]  = INT([diam]/(2.0*[sp_pixsiz])) ; Alignment radius (pixels) used in alignment search
d85 2
a86 2
[ring-sh] = [radius] + [alignsh]          ; Last ring + translation step
[maxrad]  = INT([sp_winsiz]/2) - 1        ; Max. radius of object within window
d89 2
a90 2
   ; Must reduce alignment radius (last ring), not translation step
   [radius] = [maxrad] - [alignsh] - 2    ; Reduces alignment radius 
@


1.52
log
@[ang-step-sm],[theta-range]
@
text
@d34 1
a34 1
UD 5,[sp_pixsiz]      ; Get pixelsize (Angstroms/pixel) (.17730) 
d40 1
a40 1
UD 14,[sp_lambda]     ; Get Lambda (Angstroms) 
d43 1
a43 1
UD 15,[sp_maxspfreq]  ; Get maximum spatial frequency (1/Angstroms) 
d57 1
a57 1
[diam]     = 349      ; Diameter of the structure (Angstroms) used in alignment search.
@


1.51
log
@GLO [ang-limits] = '0.,0. for 2 AP SH iters
@
text
@d64 1
a64 1
                      ;   Converges when [converg] % of all images move < 1.5 * stepsize.
d70 2
a71 2
   GLO [ang-step]   = '(0.5)'      ; Angular degree step  (CAN EDIT THIS)    
   GLO [ang-limit]  = '(2.0)'      ; Restriction on ang. search degrees  (CAN EDIT THIS)
d74 2
a75 2
   GLO [ang-steps]  = '2.,2.,2.,2.,2.,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5'  ; Angular degree steps (CAN EDIT THIS)  
   GLO [ang-limits] = '0.,0.,15.,8.,6.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.' ; Angular limits
d78 1
a78 1
GLO [amp-enhance-flags] = '.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0'  ; Amplitude enhancement selector (CAN EDIT THIS)
@


1.50
log
@added comment to line with [ang-limits]
@
text
@d6 6
a11 5
;          New                                       ArDean Leith    Jul 2002
;          []                                        ArDean Leith    Dec 2005
;          Rewritten  More stacks                    ArDean Leith    Dec 2006
;          Input locations altered                   ArDean Leith    Dec 2009
;          Variable assignment                       ArDean Leith    Jan 2010
d58 1
a58 1
                      ;   (Default 276A is for ribosome. EDIT as needed.)
d70 2
a71 2
   GLO [ang-step]   = '(0.5)'      ; Angular degree step (CAN EDIT THIS)    
   GLO [ang-limit]  = '(2.0)'      ; Restriction on ang. search degrees (CAN EDIT THIS)
d75 1
a75 1
   GLO [ang-limits] = '0.,15.,8.,6.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.' ; Angular limits
d152 2
a153 2
GLO [group_vol]               = 'work/vol_{**[iter]}_{***[grp]}'            ; Current group volume.   
GLO [next_group_vol]          = 'work/vol_{**[next-iter]}_{***[grp]}'       ; Next group volume.   
d157 1
a157 1
  GLO [temp_ref_projs]        = '[temp_local_dir]/refproj{**[iter]}_{***[grp]}' ; For Temporary local scratch file (deleted)
d159 1
a159 1
  GLO [img_ang_vora]          = 'final/angvora_{**[iter]}_{***[grp]}'      ; For SMALL angles use only  
d161 1
a161 1
  GLO [temp_ref_projs]        = '_5@@'                                      ; For SMALL angles temporary local scratch file (deleted)
d164 1
a164 1
GLO [next_dres]               = 'final/dres{**[next-iter]}'                ; Next dres output doc. file
d187 1
a187 1
GLO [enhance_doc]            = 'work/enhance_doc_{**[next-iter]}'          ; OPTIONAL Enhancement document output
@


1.49
log
@fixed typo for [dbpr]
@
text
@d74 1
a74 1
   GLO [ang-limits] = '0.,15.,8.,6.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.'
@


1.48
log
@ang-step. sp_maxspfreq
@
text
@d179 1
a179 1
GLO [dbpr]                   = 'final/dbpr{**[next-iter]'}                 ; Output resolution doc files
@


1.47
log
@simplify-rewrite
@
text
@d69 2
a70 2
   GLO [ang-steps]  = '(0.5)'      ; Angular degree step (CAN EDIT THIS)    
   GLO [ang-limits] = '(2.0)'      ; Restriction on ang. search degrees (CAN EDIT THIS)
@


1.46
log
@ang-steps
@
text
@d1 1
a1 1
([maxspfreq],[radius],[alignsh],[prj-radius],[iter1],[iter-end],[lambda],[small-ang],[winsize],[converg])
d5 6
a10 3
; SOURCE: refine_settings.pam                    ArDean Leith    Jul 2002
;                                    []          ArDean Leith    Dec 2005
;                        Rewritten  More stacks  ArDean Leith    Dec 2006
a11 2
; MASTER COPY: /net/bali/usr1/spider/docs/techs/recon/newprogs/
;
d13 1
d16 4
a19 4
;   [maxspfreq]          Maximum spatial freq (1/A) 
;   [radius]             Radius of structure (pixels)
;   [alignsh]            Alignment shift +- allowed (pixels) 
;   [prj-radius]         Projection radius (pixels)
d22 1
a22 1
;   [lambda]             Lambda (Angstroms)
d24 1
a24 1
;   [winsize]            Image or window size = volume size
d28 1
a28 1
;<b> ---------Try to set Refinement parameters from parameter file ----------</b>
d30 2
a31 2
FR G   
[params]input/params                                    ; Parameter doc file
d33 2
a34 2
UD 5,[pixsize]     ; Get pixelsize (Angstroms/pixel) (.17730) 
[params]           ; Parameter doc. file
d36 2
a37 2
UD 6,[kev]         ; Electron energy (kV)
[params]           ; Parameter doc. file
d39 2
a40 2
UD 14,[lambda]     ; Get Lambda (Angstroms) 
[params]           ; Parameter doc. file
d42 2
a43 2
UD 15,[maxspfreq]  ; Get maximum spatial frequency (1/Angstroms) 
[params]           ; Parameter doc. file
d45 2
a46 2
UD 17,[winsize]    ; Get windowsize (Pixels), used to find projection radius 
[params]           ; Parameter doc. file
d48 1
a48 1
UD E               ; End params doc. file usage
d52 7
a58 7
[alignsh]  = 6    ; Alignment shift (pixels) searched is +- this value
[iter1]    = 1    ; Starting alignment step (iteration)
[iter-end] = 3    ; Ending alignment step   (iteration)

[diam]     = 349  ; Diameter of the structure (Angstroms) used in alignment search.
                  ;   (Default 276A is for ribosome. EDIT as needed.)
                  ;   This diameter is used to find radius for last alignment ring.
d60 1
a60 1
[win-frac] = 0.95 ; Fraction of window diameter used in projection (.95= use 95% window size)
d62 2
a63 2
[converg]  = 0.05 ; Convergence criterion fraction
                  ;   Converges when [converg] % of all images move < 1.5 * stepsize.
d65 1
a65 1
[small-ang] = 0   ; For SMALL angle refinement set this to 1
d69 2
a70 2
   FR G           ; Angular degree step (CAN EDIT THIS)    
   [ang-steps](0.5) 
d72 3
a74 4
   FR G           ; Angular degree steps (CAN EDIT THIS)    
   [ang-steps]2.,2.,2.,2.,2.,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5 
   FR G           ; Restriction on ang. search degrees (CAN EDIT THIS)    
   [ang-limits]0.,15.,8.,6.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.
d77 1
a77 2
FR G              ; Amplitude enhancement selector (CAN EDIT THIS)    
[amp-enhance-flags].0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0 
d81 1
a81 1
[radius]  = INT([diam]/(2.0*[pixsize])) ; Alignment radius (pixels) used in alignment search
d84 2
a85 2
[ring-sh] = [radius] + [alignsh]  ; Last ring + translation step
[maxrad]  = INT([winsize]/2) - 1  ; Max. radius of object within window
d89 1
a89 1
   [radius] = [maxrad] - [alignsh] - 1      ; Reduces alignment radius 
d92 8
a99 1
[prj-radius] = INT(([win-frac]*[winsize])/2.0 )  ; Convert fraction to radius in pixels 
d101 1
a101 2
; If maximum spatial frequency is not given, compute it from pixel size in params file
IF ([maxspfreq].LE.0)   [maxspfreq] = 1.0 / (2.0 * [pixsize])
d103 1
a103 2
; If Lambda is not given, compute it from electron energy in params file
IF ([lambda].LE.0)   [lambda] = 12.398 / SQR([kev] * (1022.0 + [kev]))
d105 3
a107 2
;<b> ============== DO NOT COPY FROM WEB BROWSER ==============</b>
; ----------------- Input files ---  May have to EDIT these names ------
d109 1
a109 18
FR G
[input_dir]input/                                       ; Main dir. for input files
FR G   
[params]input/params                                    ; Parameter doc file
FR G
[order_select]input/order_select                        ; Group selection doc file                    
FR G
[sorted_order_select]input/order_select_sort            ; Sorted group selection doc file
FR G
[start_vol]input/vol{**[iter]}                          ; Initial reconstructed volume   
FR G
[sel_particles]input/select_{***[grp]}                  ; Particle selection doc file
FR G
[start_group_align]input/align_{**[iter]}_{***[grp]}    ; Alignment parameter file 
FR G
[unaligned_images]input/data{***[grp]}                  ; Original unaligned images stack
FR G
[start_aligned_images]input/dala{**[iter]}_{***[grp]}   ; Initial aligned images
d112 2
a113 4
FR G
[scattering_doc]input/scattering                        ; OPTIONAL enhancement document input
FR G
[mask]input/mask                                        ; OPTIONAL Mask for amplitude enhancement
d117 10
a126 27
FR G
[final_dir]final/                                        ; Main dir. for output files
FR G
[temp_local_dir]/scratch/                                ; A local disk scratch dir
FR G
[temp_work_dir]work/                                     ; Temp work dir
FR G
[sel_particles_odd]input/selectodd_{***[grp]}            ; Particle selection doc file
FR G
[sel_particles_even]input/selecteven_{***[grp]}          ; Particle selection doc file

FR G
[current_vol]final/vol{**[iter]}                          ; Produced by 'AP SH' or previous iter.   
FR G
[next_vol]final/vol{**[next-iter]}                        ; Made for next iter.   
FR G
[next_val]final/val{**[next-iter]}                        ; Volumes

FR G
[group_align]final/align_{**[iter]}_{***[grp]}            ; Aignment parameter input file 
FR G
[next_group_align]final/align_{**[next-iter]}_{***[grp]}  ; Alignment parameter output file 

FR G
[aligned_images]work/dala{**[iter]}_{***[grp]}            ; Current aligned images in stack
FR G
[next_aligned_images]work/dala{**[next-iter]}_{***[grp]} ; Next aligned images stack
d128 21
d151 3
a153 6
FR G
[group_vol]work/vol_{**[iter]}_{***[grp]}                 ; Current group volume.   
FR G
[next_group_vol]work/vol_{**[next-iter]}_{***[grp]}       ; Next group volume.   
FR G
[next_group_vol_template]work/vol_{**[next-iter]}_***     ; Group volume template  
d156 1
a156 2
   FR G
   [temp_ref_projs][temp_local_dir]/refproj{**[iter]}_{***[grp]} ; For Temporary local output file (deleted)
d158 1
a158 2
   FR G                                         
   [img_ang_vora]final/angvora_{**[iter]}_{***[grp]}      ; For SMALL angles use only  
d160 1
a160 2
   FR G
   [temp_ref_projs]_5@@                                    ; For SMALL angles temporary local output file (deleted)
d163 10
a172 2
FR G
[next_dres]final/dres{**[next-iter]}                    ; Next dres output doc. file
d174 2
a175 19
FR G
[temp_ctf_file]input/ctf{***[grp]}                      ; CTF correction files
FR G
[temp_ctf_file_template]input/ctf***                    ; CTF correction file template

FR G
[iter_vft]final/vft{**[iter]}                           ; Temp. vft file template

FR G
[group_bpr]final/bpr{**[iter]}_{***[grp]}               ; Group volume file
FR G
[group_bpr_template]final/bpr{**[next-iter]}_***        ; Group volume template
FR G
[next_group_bpr]final/bpr{**[next-iter]}_{***[grp]}     ; Group volume file

FR G
[iter_ang_voea]work/angvoea_{**[iter]}                  ; Iter. angle voea file
FR G
[iter_select_voea]work/selvoea_{**[iter]}               ; Iter. angle voea selection file
d177 1
a177 2
FR G
[next_group_dres]final/dres{**[next-iter]}_{***[grp]}   ; Group dres output doc. file
d179 4
a182 8
FR G
[dbpr]final/dbpr{**[next-iter]}                         ; Output resolution doc files
FR G
[next_group_dbpr]final/dbpr{**[next-iter]}_{***[grp]}   ; Output group resolution doc files
FR G
[dbpr_resol]final/resolutions                           ; Output resolution doc file
FR G
[grp_resol]final/group_resolutions                      ; Output resolution doc file
d184 1
a184 2
FR G
[bpr]final/bpr{**[next-iter]}                           ; Refined output volume
d186 1
a186 2
FR G
[enhance_doc]work/enhance_doc_{**[next-iter]}           ; Enhancement document output
@


1.45
log
@smangloop ang-step
@
text
@d9 1
a9 1
; MASTER COPY: /net/bali/usr1/spider/dev/refine/
d68 1
a68 3
   [ang-steps].5,.5,.5,.5,.5,.5,.5,.5,.5,.5,.5,.5,.5,.5,.5,.5,.5, 
   FR G           ; Restriction on ang. search degrees (CAN EDIT THIS)    
   [ang-limits]2.,2.,2.,2.,2.,2.,2.,2.,2.,2.,2.,2.,2.,2.,2.,2.,2.,2., 
d71 1
a71 1
   [ang-steps]2.0,2.0,2.0,2.0,2.0,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.4,1.5 
d73 1
a73 1
   [ang-limits]0.0,15.0,8.0,6.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0
d77 1
a77 1
[amp-enhance-flags].0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0, 
a135 1

@


1.44
log
@bad aligned_images] definition
@
text
@d68 1
a68 1
   [ang-steps](0.5) 
d70 1
a70 1
   [ang-limits](2.0) 
d73 1
a73 1
   [ang-steps]2.0,2.0,2.0,2.0,2.0,1.5,1.5,1.5,1.5,1.5,1.5 
d75 1
a75 1
   [ang-limits]0.0,15.0,8.0,6.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0
d79 1
a79 1
[amp-enhance-flags]0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 
@


1.43
log
@clone dir changes
@
text
@d157 1
a157 1
[aligned_images]input/dala{**[iter]}_{***[grp]}           ; Current aligned images in stack
@


1.42
log
@[temp_local_dir]/scratch/
@
text
@d122 1
a122 1
[start_aligned_images]input/dala{**[iter]}_{***[grp]}   ; Initial aligned images prefix
d133 1
a133 1
[final_dir]final/                                       ; Main dir. for output files
d135 1
a135 2
[temp_local_dir]/scratch/                               ; A local disk scratch dir
;;[temp_local_dir]/tmp/                                 ; A local disk scratch dir
d137 1
a137 1
[temp_work_dir]work/                                    ; Temp work dir
d140 1
a140 1
[sel_particles_odd]input/selectodd_{***[grp]}           ; Particle selection doc file
d142 1
a142 1
[sel_particles_even]input/selecteven_{***[grp]}         ; Particle selection doc file
d145 1
a145 1
[current_vol]final/vol{**[iter]}                         ; Produced by 'AP SH' or previous iter.   
d147 1
a147 1
[next_vol]final/vol{**[next-iter]}                       ; Made for next iter.   
d149 1
a149 1
[next_val]final/val{**[next-iter]}                       ; Volumes
d152 1
a152 1
[group_align]final/align_{**[iter]}_{***[grp]}           ; Aignment parameter input file 
d154 1
a154 1
[next_group_align]final/align_{**[next-iter]}_{***[grp]} ; Alignment parameter output file 
d157 1
a157 1
[aligned_images_prefix]work/dala{**[iter]}_{***[grp]}    ; Current aligned images prefix
d159 1
a159 3
[aligned_images][aligned_images_prefix]@@                 ; Current aligned images in stack
FR G
[next_aligned_images]work/dala{**[next-iter]}_{***[grp]}@@ ; Next aligned images stack
d164 1
a164 1
[group_vol]work/vol_{**[iter]}_{***[grp]}                ; Current group volume.   
d166 1
a166 1
[next_group_vol]work/vol_{**[next-iter]}_{***[grp]}      ; Next group volume.   
d168 1
a168 1
[next_group_vol_template]work/vol_{**[next-iter]}_***    ; Group volume template  
d175 1
a175 1
   [img_ang_vora]final/angvora_{**[iter]}_{***[grp]}     ; For SMALL angles use only  
d178 1
a178 1
   [temp_ref_projs]_5@@                                   ; For SMALL angles Temporary local output file (deleted)
d182 1
a182 1
[next_dres]final/dres{**[next-iter]}                     ; Next dres output doc. file
@


1.41
log
@/tmp for ref_projs
@
text
@d135 2
a136 1
[temp_local_dir]/tmp/                                   ; A local disk scratch dir
@


1.40
log
@added stacks, named variables
@
text
@d135 1
a135 1
[temp_local_dir]local/                                  ; A local disk scratch dir
@


1.39
log
@ampenhance bug
@
text
@d5 3
a7 2
; SOURCE: refine_settings.pam                ArDean Leith    Jul 2002
;                                    []      ArDean Leith    Dec 2005
d13 1
a13 1
; OUTPUT REGISTERS (NEED TO SET THESE BELOW):
a24 8
; INITIAL INPUT FILES NEEDED:
;   ../params                       [params]            Parameter doc. file
;   input/order_select              [order_select]      Group selection doc. file
;   input/data{***grp}@@             [unaligned_images]  Unaligned stacked image file  
;   input/dala{**iter}_{***grp}@@    [aligned_images]    Aligned stacked image files
;   input/align_{**iter}_{***grp}   [group_align}       Alignment parameters 
;   input/vol{**iter}               [initial_vol]       Initial starting volume
;
a27 1

d29 1
a29 1
[params]input/params     ; Parameter doc file
d31 1
a31 1
UD 5,[pixsize]     ; Get pixelsize (Angstroms/pixel) 
d50 1
a50 1
[alignsh]  = 7    ; Alignment shift (pixels) searched is +- this value
d54 1
a54 1
[diam]     = 276  ; Diameter of the structure (Angstroms) used in alignment search.
d106 15
a120 5
[order_select]input/order_select                         ; Order selection doc file                    

FR G                            
[initial_vol]input/vol{**[iter1]}                        ; Initial starting volume                 
  
d122 1
a122 1
[initial_group_align]input/align_{**[iter]}_{***[grp]}   ; Initial alignment doc files
d124 1
d126 1
a126 2
[unaligned_images]input/data{***[grp]}@@                  ; Original unaligned images stack

d128 1
a128 1
[initial_aligned_images]input/dala{**[iter]}_{***[grp]}  ; Initial aligned images stack
d133 3
a135 13
[temp_local_dir]local/                                    ; A local disk scratch dir

IF ([small-ang].EQ.0) THEN
   FR G
   [temp_ref_projs][temp_local_dir]/refproj{**[iter]}_{***[grp]} ; For Temporary local output file (deleted)
ELSE
   FR G                                         
   [img_ang_vora]final/angvora_{**[iter]}_{***[grp]}     ; For SMALL angles use only  

   FR G
   [temp_ref_projs]_5@@                                   ; For SMALL angles Temporary local output file (deleted)
ENDIF

d137 1
a137 1
[sorted_order_select]input/order_select_sort             ; Sorted input selection doc file
d140 1
a140 1
[group_vol]work/vol_{**[iter]}_{***[grp]}                ; Current group volume.   
d142 1
a142 3
[next_group_vol]work/vol_{**[next-iter]}_{***[grp]}      ; Next group volume.   
FR G
[next_group_vol_template]work/vol_{**[next-iter]}_***    ; Group volume template  
a144 2
[next_val]final/val{**[next-iter]}                       ; Volumes
FR G
d148 2
d152 3
a154 1
[next_dres]final/dres{**[next-iter]}                     ; Next dres output doc. file
d163 2
d166 1
a166 1
[temp_work_dir]work/                                    ; Temp work dir.
d168 14
a181 1
[final_dir]final/                                       ; Main dir. for output files
d184 1
a184 1
[group_select]work/select_{***[grp]}                    ; Group selection doc file
d187 1
a187 1
[temp_ctf_file]work/ctf{***[grp]}                       ; Temp. ctf files
d189 1
a189 1
[temp_ctf_file_template]work/ctf***                     ; Temp. ctf file template
d197 1
a197 1
[group_bpr_template]final/bpr{**[next-iter]}_***         ; Group volume template
d199 1
a199 1
[next_group_bpr]final/bpr{**[next-iter]}_{***[grp]}      ; Group volume file
a206 5
[group_align]final/align_{**[iter]}_{***[grp]}          ; Group align input file 
FR G
[next_group_align]final/align_{**[next-iter]}_{***[grp]}; Group align output file 

FR G
a221 3
[mask]input/mask                                        ; Mask for amplitude enhancement

FR G
a223 3
FR G
[scattering_doc]input/scattering                        ; Enhancement document input

@


1.38
log
@uses named registers
@
text
@d87 1
a87 1
[amp-enhance-flag]0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 
@


1.37
log
@defined grp_resol output file
@
text
@d1 1
a1 1
(x76,x41,x42,x14,x51,x55,x56,x74,x75,x71,x70,x52,x16,x90)
d5 2
a6 1
; SOURCE: refine_settings.pam                ArDean Leith    July 2002
a10 1
;    x76                 Current iteration
d13 10
a22 13
;   x41                  Angle step used in search (degrees)
;   x42                  Restriction on angle used in search (degrees)
;   x14                  Maximum spatial freq (1/A) 
;   x51                  Radius of structure (pixels)
;   x55                  Alignment shift +- allowed (pixels) 
;   x56                  Projection radius (pixels)
;   x74                  Starting iteration
;   x75                  Ending   iteration
;   x71                  Lambda (Angstroms)
;   x70                  Small angle refinement flag (1 is true)
;   x52                  Image or window size = volume size
;   x16                  Convergence criterion fraction
;   x90                  Amplitude enhancement selector flag (1 is true) 
d28 2
a29 2
;   input/dala{**iter}_{***group}@@  [aligned_images]    Aligned stacked image files
;   input/align_{**iter}_{***group} [group_align}       Alignment parameters 
d39 2
a40 2
UD 5,x39   ; Get pixelsize (Angstroms/pixel) 
[params]   ; Parameter doc. file
d42 2
a43 2
UD 6,x72   ; Electron energy (kV)
[params]   ; Parameter doc. file
d45 2
a46 2
UD 14,x71  ; Get Lambda (Angstroms) 
[params]   ; Parameter doc. file
d48 2
a49 2
UD 15,x14  ; Get maximum spatial frequency (1/Angstroms) 
[params]   ; Parameter doc. file
d51 2
a52 2
UD 17,x52  ; Get windowsize (Pixels), used to find projection radius 
[params]   ; Parameter doc. file
d54 1
a54 1
UD E       ; End params doc. file usage
d58 7
a64 8
x55 = 7    ; Alignment shift (pixels) searched is +- this value

x74 = 1    ; Starting alignment step (iteration)
x75 = 6    ; Ending alignment step   (iteration)

x50 = 276  ; Diameter of the structure (Angstroms) used in alignment search.
           ;   (Default 276A is for ribosome. EDIT as needed.)
           ;   This diameter is used to find radius for last alignment ring.
d66 1
a66 1
x57 = 0.95 ; Fraction of window diameter used in projection (.95= use 95% window size)
d68 2
a69 2
x16 = 0.05 ; Convergence criterion fraction
           ;   Converges when x16 % of all images move < 1.5 * stepsize.
d71 1
a71 1
x70 = 0    ; For SMALL angle refinement set this to 1
d73 11
a83 16
IF (x76.NE.0) THEN
   ; Set registers 41 & 42 for current iteration
   x98 = ABS(x76)
   IF (x70.EQ.1) THEN
      ; For SMALL angle refinement
      x41 = 0.5   ; Angular degree step                      (CAN EDIT THIS)    
      x42 = 2.0   ; Restriction on angular search in degrees (CAN EDIT THIS)
   ELSE
      DO LB1 x21=1,x98
         RR x41   ; Sequence of angular degree steps (CAN EDIT THIS)
         2.0,2.0,2.0,2.0,2.0,1.5,1.5,1.5,1.5,1.5,1.5

         RR x42    ; Restriction on angular search in degrees (CAN EDIT THIS)
         0.0,15.0,8.0,6.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0
      LB1
   ENDIF
d86 2
a87 2
RR x90   ; Amplitude enhancement selector (CAN EDIT THIS)
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 
d89 1
a89 5
IF (x76.LT.0) THEN
   RE    ; RETURN (Can skip filename setting here)
ENDIF

; ---- Should be no need to adjust following parameters --------------------------
d91 1
a91 1
x51 = INT(x50/(2.0*x39))    ; Alignment radius (pixels) used in alignment search
d94 2
a95 2
x46 = x51 + x55             ; Last ring + translation step
x45 = INT(x52/2) - 1        ; Max. radius of object within window
d97 1
a97 1
IF (x46.GE.x45) THEN
d99 1
a99 1
   x51 = x45 - x55 - 1      ; Reduces alignment radius 
d102 1
a102 1
x56 = INT( (x57*x52)/2.0 )  ; Convert fraction to radius in pixels 
d105 1
a105 1
IF (x14.LE.0)   x14 = 1.0 / (2.0 * x39)
d108 1
a108 1
IF (x71.LE.0)   x71 = 12.398 / SQR(x72 * (1022.0 + x72))
d114 1
a114 1
[order_select]input/order_select                  ; Order selection input doc file                    
d117 1
a117 1
[initial_vol]input/vol{**x74}                     ; Initial starting volume                 
d120 1
a120 1
[initial_group_align]input/align_{**x76}_{***x77} ; Initial alignment doc files
d123 1
a123 1
[unaligned_images]input/data{***x77}@@             ; Original unaligned images stack
d126 1
a126 1
[initial_aligned_images]input/dala{**x76}_{***x77} ; Initial aligned images stack
d131 1
a131 1
[temp_local_dir]local/                            ; A local disk scratch dir
d133 1
a133 1
IF (x70.EQ.0) THEN
d135 1
a135 1
   [temp_ref_projs][temp_local_dir]/refproj{**x76}_{***x77} ; For Temporary local output file (deleted)
d138 1
a138 1
   [img_ang_vora]final/angvora_{**x76}_{***x77} ; For SMALL angles use only  
d141 1
a141 1
   [temp_ref_projs]_5@@                           ; For SMALL angles Temporary local output file (deleted)
d145 1
a145 1
[sorted_order_select]input/order_select_sort     ; Sorted input selection doc file
d148 1
a148 1
[group_vol]work/vol_{**x76}_{***x77}             ; Current group volume.   
d150 1
a150 1
[next_group_vol]work/vol_{**x86}_{***x77}        ; Next group volume.   
d152 1
a152 1
[next_group_vol_template]work/vol_{**x86}_***    ; Group volume template  
d155 1
a155 1
[next_val]final/val{**x86}                       ; volumes
d157 1
a157 1
[current_vol]final/vol{**x76}                    ; Produced by 'AP SH' or previous iter.   
d159 1
a159 1
[next_vol]final/vol{**x86}                       ; Made for next iter.   
d162 1
a162 1
[next_dres]final/dres{**x86}                     ; Next dres output doc. file
d165 1
a165 1
[aligned_images_prefix]work/dala{**x76}_{***x77} ; Current aligned images prefix
d167 1
a167 1
[aligned_images][aligned_images_prefix]@@         ; Current aligned images in stack
d169 1
a169 1
[next_aligned_images]work/dala{**x86}_{***x77}@@  ; Next aligned images stack
d172 1
a172 1
[temp_work_dir]work/                            ; Temp work directory
d174 1
a174 1
[final_dir]final/                               ; Main directory for output files
d177 1
a177 1
[group_select]work/select_{***x77}              ; Group selection doc file
d180 1
a180 1
[temp_ctf_file]work/ctf{***x77}                 ; Temp. ctf files
d182 1
a182 1
[temp_ctf_file_template]work/ctf***             ; Temp. ctf file template
d185 1
a185 1
[iter_vft]final/vft{**x76}                      ; Temp. vft file template
d188 1
a188 1
[group_bpr]final/bpr{**x76}_{***x77}            ; Group volume file
d190 1
a190 1
[group_bpr_template]final/bpr{**x86}_***        ; Group volume template
d192 1
a192 1
[next_group_bpr]final/bpr{**x86}_{***x77}       ; Group volume file
d195 1
a195 1
[iter_ang_voea]work/angvoea_{**x76}             ; Iter. angle voea file
d197 1
a197 1
[iter_select_voea]work/selvoea_{**x76}          ; Iter. angle voea selection file
d200 1
a200 1
[group_align]final/align_{**x76}_{***x77}       ; Group align input file 
d202 1
a202 1
[next_group_align]final/align_{**x86}_{***x77}  ; Group align output file 
d205 1
a205 1
[next_group_dres]final/dres{**x86}_{***x77}      ; Group dres output doc. file
d208 1
a208 1
[dbpr]final/dbpr{**x86}                          ; Output resolution doc files
d210 1
a210 1
[next_group_dbpr]final/dbpr{**x86}_{***x77}      ; Output group resolution doc files
d212 1
a212 1
[dbpr_resol]final/resolutions                    ; Output resolution doc file
d214 2
a215 2
[grp_resol]final/group_resolutions               ; Output resolution doc file

d217 1
a217 1
[bpr]final/bpr{**x86}                            ; Refined output volume
d220 1
a220 1
[mask]input/mask                                 ; Mask for amplitude enhancement
d223 1
a223 1
[enhance_doc]work/enhance_doc_{**x86}            ; Enhancement document output
d226 1
a226 1
[scattering_doc]input/scattering                 ; Enhancement document input
@


1.36
log
@scattering_doc
@
text
@d226 2
@


1.35
log
@passes x90 (amplitude correction flag) now
@
text
@d234 4
a237 1
[enhance_doc]work/enhance_doc_{**x86}            ; Enhancement document
@


1.34
log
@moved: IF (x76.LT.0) THEN   up
@
text
@d1 1
a1 1
(x76,x41,x42,x14,x51,x55,x56,x74,x75,x71,x70,x52,x16)
d22 1
a22 1
;   x70                  SMALL angle refinement flag (1 is true)
d25 1
d29 2
a31 1
;   input/data{***grp}@@             [unaligned_images]  Unaligned stacked image file  
a32 1
;   input/order_select              [order_select]      Image ID doc. file
d95 3
d106 1
a106 1
; Check that sum of alignment radius + translation are within window dimensions 
d117 1
a117 1
; If maximum spatial frequency is not given, compute it from pixelsize
d120 1
a120 1
; If Lambda is not given, compute it from electron energy
d230 6
a236 1

@


1.33
log
@put "Parameter doc file" comment on the same line as the symbolic variable
@
text
@d94 4
a117 5

IF (x76.LT.0) THEN
   RE    ; RETURN (Can skip filename setting here)
ENDIF

@


1.32
log
@x52 (image size) got from refine_settings
@
text
@d38 2
a39 2
FR G       ; Parameter doc file
[params]input/params 
@


1.31
log
@reordered parameters and cosmetic
@
text
@d1 1
a1 1
(x76,x41,x42,x14,x51,x55,x56,x74,x75,x71,x70,x12,x16)
d23 1
a23 1
;   x12                  Number of OMP processes wanted
d38 2
a39 2
FR G
[params]../params     ; Parameter doc file
d41 2
a42 2
UD 5,x39              ; Get pixelsize (Angstroms/pixel) 
[params]              ; Parameter doc. file
d44 2
a45 2
UD 6,x72              ; Electron energy (kV)
[params]              ; Parameter doc. file
d47 2
a48 2
UD 14,x71             ; Get Lambda (Angstroms) 
[params]              ; Parameter doc. file
d50 2
a51 2
UD 15,x14             ; Get maximum spatial frequency (1/Angstroms) 
[params]              ; Parameter doc. file
d53 2
a54 2
UD 17,x44             ; Get windowsize (Pixels), used to find projection radius 
[params]              ; Parameter doc. file
d56 1
a56 1
UD E       ; End this doc. file usage
a75 2
x12 = 0    ; Number of OMP processes wanted (0 = use all)

d100 1
a100 1
x45 = INT(x44/2) - 1        ; Max. radius of object within window
d107 1
a107 1
x56 = INT( (x57*x44)/2.0 )  ; Convert fraction to radius in pixels 
@


1.30
log
@had to move parameter file stuff up to register settings, cos there was a RE between where the regs were set, and where their actual values were computed
@
text
@d10 1
a10 1
;    x76                  Current iteration
d13 6
a18 4
;   x14                  Maximum spatial freq[a-1] (used in prepare)
;   x51                  Radius of structure
;   x55                  Shift allowed is +-x55
;   x56                  Projection radius
d21 1
a21 1
;   x71                  Lambda(angstroms) (used in prepare)
d24 1
a24 1
;   x16                  Convergence criterion percentage
d27 6
a32 5
;   input/dala{**iter}_{***group}@@  [aligned_images]     Aligned stacked image files
;   input/data{***grp}@@             [unaligned_images]   Unaligned stacked image file  
;   input/align_{**iter}_{***group} [group_align}        Alignment parameters 
;   input/order_select              [order_select]       Image ID doc. file
;   input/vol{**iter}               [initial_vol]        Initial starting volume
a33 3
; This refinement procedure assumes preliminary angular doc files exist.
; The CCF file is windowed to prevent too large shifts of projections.

d35 2
a36 22
;<b> ------------------  Refinement parameters ----------------</b>
;<pre>
; Try to compute as many parameters as possible from parameter file:
FR G
[params]../params           ; parameter doc file

UD 5,x39    ; Get pixelsize to compute alignment radius
[params]

UD 15, x14   ; Maximum spatial frequency[a-1] 
[params]
; if no max.spat.freq., then compute it from the pixelsize
IF (x14.EQ.0)  x14 = 1.0 / (2.0 * x39)

UD 14,x71    ; Lambda[angstroms] 
[params]
; if no lambda, then compute it from the electron energy
IF (x71.EQ.0)  THEN
   UD 6,x71    ; kV
   [params]
   x71 = 12.398 / SQR(x71 * (1022.0 + x71))
ENDIF
d38 2
a39 2
UD 17,x44  ; windowsize: use x56% windowsize to compute projection radius 
[params]
d41 2
a42 1
; ---- Adjust these parameters for your project
d44 2
d47 2
a48 1
x55=7      ; Shift allowed is +-N, input images are padded
d50 2
a51 2
x74=1      ; Starting alignment step (iteration)
x75=6      ; Ending alignment step   (iteration)
d53 2
a54 4
x51= 276   ; diameter of the structure (Angstroms) used in alignment search.
           ; (default 276A is for ribosome. Adjust as needed.)
           ; diameter (x51 is next converted to radius for last ring (pixels).
X51 = INT(x51/(2.0*x39)) ; radius(A) of the structure in alignment search
d56 1
a56 2
x56=0.95   ; percent of the window diameter used in projection
           ;  (.95 = use 95% window size)
d58 1
a58 1
x56 = INT( (x56*x44)/2.0 )  ; convert percentage to radius in pixels 
d60 1
d62 2
a63 2
x16=.05    ; Convergence criterion percentage
;          ; Convergence is when x16 % of images move < 1.5 * stepsize.
d65 5
a69 5
x70=0      ; For SMALL angle refinement set this to 1

x12=0      ; Number of OMP processes wanted (0 = use all)


d71 2
a72 1
; check that alignment radius (x51) + translation (x55) are < windowsize (x44)
d74 1
a74 2
x45 = INT(x44/2) - 1   ; max radius
x46 = x51 + x55        ; last ring + translation step
d76 1
a76 9
; This next step reduces alignment radius (last ring), not translation step
IF (x46.GE.x45) THEN
   DO LB88 x44 = 1,x45
      x51 = x51 - 1
      x46 = x51 + x55
      IF (x46.LE.x45) GOTO LB87
   LB88
ENDIF
LB87
a77 1

d80 1
a80 1
   x98=ABS(x76)
d83 2
a84 2
      x41= 0.5 ; Angular steps                 (CAN EDIT THIS)    
      x42= 2.0 ; Restriction on angular search (CAN EDIT THIS)
d87 1
a87 1
         RR x41      ;  Sequence of angular steps (CAN EDIT THIS)
d90 1
a90 1
         RR x42      ;  Restriction on angular search (CAN EDIT THIS)
d94 25
a118 3
   IF (x76.LT.0) THEN
      RE    ; RETURN
   ENDIF
d121 1
d123 1
a123 2
; ----------------- Input files   May have to edit these names ------

d126 1
a126 1
[order_select]input/order_select          ; Order selection input doc file                    
d129 1
a129 1
[initial_vol]input/vol{**x74}             ; Initial starting volume                 
d135 1
a135 1
[unaligned_images]input/data{***x77}@@              ; Original unaligned images stack
d160 2
d184 1
a184 1
[temp_work_dir]work/                            ; tmp work directory
d186 1
a186 1
[final_dir]final/                               ; directory for output files
a210 1

a214 5

;FR G
;[group_align]final/align_{**x76}_{***x77}
;FR G
;[next_group_align]final/align_{**x86}_{***x77}
@


1.29
log
@group_ang_vora now is img_ang_vora
@
text
@d37 25
d63 1
d69 4
a72 2
x51= 276   ; diameter of the structure (Angstroms) used in alignment search
           ; (Use 276A for ribosome. Radius in alignment = x51/2 )
d77 4
a81 1
x16=.05    ; Convergence criterion percentage
d87 18
a127 2
FR G
[params]../params                ; parameter doc file
a239 44
; read parameter file

UD 5,x39    ; Get pixelsize from [params] file and compute alignment radius
[params]

UD 15, x14   ; Maximum spatial frequency[a-1] 
[params]

UD 14,x71    ; Lambda[angstroms] 
[params]

UD 17,x44  ; windowsize: use x56% windowsize to compute projection radius 
[params]

; if no max.spat.freq., then compute it from the pixelsize
IF (x14.EQ.0)  x14 = 1.0 / (2.0 * x39)

; if no lambda, then compute it from the electron energy
IF (x71.EQ.0)  THEN
   UD 6,x71    ; kV
   [params]
   x71 = 12.398 / SQR(x71 * (1022.0 + x71))
ENDIF

x56 = INT( (x56*x44)/2.0 )   

X51 = INT(x51/(2.0*x39)) ; radius(A) of the structure in alignment search

; check that alignment radius (x51) + translation (x55) are < windowsize (x44)

x45 = INT(x44/2) - 1   ; max radius

x46 = x51 + x55   ; last ring + translation step

; reduces alignment radius (last ring), not translation step

IF (x46.GE.x45) THEN
   DO LB88 x44 = 1,x45
      x51 = x51 - 1
      x46 = x51 + x55
      IF (x46.LE.x45) GOTO LB87
   LB88
ENDIF
LB87
@


1.28
log
@moved alignment radius, projection radius (x51,x56) up to user-defined area
@
text
@d108 1
a108 1
   [group_ang_vora]final/angvora_{**x76}_{***x77} ; For SMALL angles RN use only  
@


1.27
log
@added various comments required by SPIRE
@
text
@d38 1
a38 1
x55=7          ; Shift allowed is +-N, input images are padded
d40 2
a41 2
x74=1          ; Starting alignment step (iteration)
x75=6          ; Ending alignment step   (iteration)
d43 2
a44 4
;x51=(computed below) ; Radius of the structure used in alignment search
;x56=(computed below) ; Radius of the structure used in projection
;x14=(computed below) ; Maximum spatial frequency[a-1] (used in prepare)
;x71=(computed below) ; Lambda[angstroms] (used in prepare)
d46 2
a47 2
;              ; Convergence is when x16 % of images move < 1.5 * stepsize.
x16=.05        ; Convergence criterion percentage
d49 2
a50 1
x70=0          ; For SMALL angle refinement set this to 1
d52 1
a52 1
x12=0          ; Number of OMP processes wanted (0 = use all)
d54 2
d193 5
d200 1
d204 1
a204 1
UD 17,x44  ; windowsize: use 95% windowsize to compute projection radius 
a205 1
x56 = INT( (0.95*x44)/2.0 )   
d207 13
a219 4
UD 5,x39    ; Get pixelsize from [params] file and compute alignment radius
[params]
 
X51 = INT(138.0/x39)  ; Use 138A radius for ribosome
@


1.26
log
@computes a number of parameters from the params file; section added after batch header that checks to see if translation step + ring size exceed windowsize.
@
text
@d34 2
a35 2
;<b> -------------- Edit next 11 Refinement parameters -------------</b>
;<b> -------------- DO NOT COPY FROM WEB BROWSER -------------------</b>
d38 1
a38 1
x55=7          ; Shift allowed is +-x55, input images are padded
d51 1
a51 1
x70=0          ; For SMALL angle refinement set x70=1
d76 1
a77 1
; ----------------- DO NOT COPY FROM WEB BROWSER -------------------</b>
d83 1
a83 1
[order_select]input/order_select                 ; Order selection input doc file                    
d85 2
a86 2
FR G                                             ; Initial starting volume
[initial_vol]input/vol{**x74}                   
d106 2
a107 2
   FR G                                          ; For SMALL angles RN use only
   [group_ang_vora]final/angvora_{**x76}_{***x77}    
d122 1
a122 1
[next_val]final/val{**x86}  
d139 1
a139 1
[temp_work_dir]work/
d141 1
a141 1
[final_dir]final/
d152 1
a152 1
[iter_vft]final/vft{**x76}
d172 4
a175 4
FR G
[group_align]final/align_{**x76}_{***x77}
FR G
[next_group_align]final/align_{**x86}_{***x77}
d190 1
a190 1
; ----------------- END BATCH FILE HEADER ---------------------------------
@


1.25
log
@angular restrict for first iter now 0 (used x42 now)
@
text
@a37 1
x51=68         ; Radius of the structure used in alignment search
d39 1
a39 1
x56=68         ; Radius of the structure used in projection
d43 4
a46 2
x14=0.1773049  ; Maximum spatial frequency[a-1] (used in prepare)
x71=0.02501    ; Lambda[angstroms] (used in prepare)
d78 2
d81 1
d185 1
a185 1
[dbpr_resol]final/resolutions                    ; Output resolution text file
d189 33
@


1.24
log
@x56 for proj readius
@
text
@d67 1
a67 1
         15.0,15.0,8.0,6.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0
@


1.23
log
@changed angle limits back to b96 ones
@
text
@d1 1
a1 1
(x76,x41,x42,x14,x51,x55,x74,x75,x71,x70,x12,x16)
d16 1
d38 1
a38 1
x51=68         ; Radius of the structure
d40 1
@


1.22
log
@removed ctfs file (done in prepare now)
@
text
@d62 1
a62 1
         2.0,2.0,2.0,1.8,1.6,1.5,1.5,1.5,1.5,1.5,1.5
@


1.21
log
@initial_vol setting
@
text
@d5 1
a5 1
; refine_settings.pam                ArDean Leith    July 2002
d26 1
a26 1
;   input/align_{**iter}_{***group} [group_align}       Original alignment parameters 
d28 1
a28 2
;   input/vol{**iter}               [initial_vol]        Initial volume
;   input/ctfs                      [ctf_input]          Initial CTF file   
a78 3
FR G
[ctf_input]input/ctfs                            ; Initial ctf input file

d80 1
a80 1
[initial_vol]input/vol{**x74}                    ; Produced by 'AP SH' or previous iter. 
d83 1
a83 1
[initial_group_align]input/align_{**x76}_{***x77} ; Initial group align doc files
d86 1
a86 1
[unaligned_images]input/data{***x77}@@            ; Original unaligned images stack
@


1.20
log
@names
@
text
@d13 9
a21 9
;    x14                  Maximum spatial freq[a-1] (used in prepare)
;    x51                  Radius of structure
;    x55                  Shift allowed is +-x55
;    x74                  Starting iteration
;    x75                  Ending   iteration
;    x71                  Lambda(angstroms) (used in prepare)
;    x70                  SMALL angle refinement flag (1 is true)
;    x12                  Number of OMP processes wanted
;    x16                  Convergence criterion percentage
d24 6
a29 6
;    input/dala{**iter}_{***group}@@ [aligned_images]     Aligned stacked image files
;    input/data{***grp}@@            [unaligned_images]   Unaligned stacked image file  
;    input/align_{**iter}_{***group} [group_align}       Original alignment parameters 
;    input/order_select             [order_select]       Image ID doc. file
;    input/vol{**iter}              [initial_vol]        Initial volume
;    input/ctfs                     [ctf_input]          Initial CTF file   
d83 2
a84 2
FR G                                             ; Initial volume
[initial_vol]input/vol{**x76}                    ; Produced by 'AP SH' or previous iter. 
@


1.19
log
@ap sh
@
text
@d38 1
a38 1
x51=69         ; Radius of the structure
d84 1
a84 1
[initial_vol]input/vol{**x76}                    ; Produced by 'AP MQ' or previous iter. 
d122 1
a122 1
[current_vol]final/vol{**x76}                    ; Produced by AP MQ or previous iter.   
@


1.18
log
@ap ref
@
text
@d1 1
a1 1
(x76,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70,x12,x16)
d10 1
a10 1
;    x76                     Current   iteration
a14 1
;    x52                  Image size
a17 2
;    x65                  Starting defocus group
;    x66                  Ending   defocus group
a38 1
x52=155        ; Image size
a42 3
x65=1          ; Starting defocus group
x66=3          ; Ending defocus group

d58 1
a58 1
      x41= 0.5 ; Angular steps (CAN EDIT THIS)    
d93 1
a93 6
[initial_aligned_images]input/dala{**x76}_{***x77}      ; Current aligned images stack
FR G
[aligned_images_prefix]work/dala{**x76}_{***x77}       ; Current aligned images stack

FR G
[aligned_images]work/dala{**x76}_{***x77}@@      ; Current aligned images stack
d130 5
a134 1
[next_aligned_images]input/dala{**x86}_{***x77}@@ ; Next aligned images stack
d142 1
a142 1
[group_select]work/select_{***x77} ; Group selection doc file
d160 1
a160 1
[iter_ang_voea]final/angvoea_{**x76}              ; Group angle voea file
d162 1
a162 1
[iter_select_voea]final/selvoea_{**x76}           ; Group angle voea selection file
d166 1
a166 1
[group_align]final/align_{**x76}_{***x77}          ; Group align input file 
d168 1
a168 1
[next_group_align]final/align_{**x86}_{***x77}     ; Group align output file 
d176 1
a176 1
[next_group_dres]final/dres{**x86}_{***x77}        ; Group dres output doc. file
d179 1
a179 1
[dbpr]final/dbpr{**x86}                            ; Output resolution doc files
d181 1
a181 1
[next_group_dbpr]final/dbpr{**x86}_{***x77}         ; Output group resolution doc files
d183 1
a183 1
[dbpr_resol]final/resolutions                      ; Output resolution text file
d186 1
a186 1
[bpr]final/bpr{**x86}                             ; Refined output volume
@


1.17
log
@align doc file used
@
text
@d1 1
a1 1
(x76,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70,x12)
d13 12
a24 11
;    x14                     Maximum spatial freq[a-1] (used in prepare)
;    x51                     Radius of structure
;    x52                     Image size
;    x55                     Shift allowed is +-x55
;    x74                     Starting iteration
;    x75                     Ending   iteration
;    x65                     Starting defocus group
;    x66                     Ending   defocus group
;    x71                     Lambda(angstroms) (used in prepare)
;    x70                     SMALL angle refinement flag (1 is true)
;    x12                     Number of OMP processes wanted
d29 1
a29 1
;    input/align{**iter}_{***group} [group_align}        Original alignment parameters 
d41 3
a43 3
x51=59         ; Radius of the structure
x52=130        ; Image size
x55=6          ; Shift allowed is +-x55, input images are padded
d45 1
a45 1
x75=10         ; Ending alignment step (iteration)
d48 1
a48 1
x66=10         ; Ending defocus group
d50 1
a50 1
x14=0.177304960; Maximum spatial frequency[a-1] (used in prepare)
d53 3
d70 1
a70 1
         2.0,2.0,2.0,2.0,2.0,1.5,1.5,1.5,1.5,1.5,1.5
d73 1
a73 1
         15.0,15.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0
d94 1
a94 1
[initial_group_align]input/align{**x76}_{***x77} ; Initial group align doc files
d100 6
a105 2
[aligned_images]input/dala{**x76}_{***x77}@@      ; Current aligned images stack
;[aligned_images]work/dala{**x76}_{***x77}@@      ; Current input aligned images stack
d107 1
a107 1
; ----------------- Output files -- No need to edit for default refinement ----------
d116 2
a117 2
   FR G                                           ; For SMALL angles RN use only
   [group_ang_vora]final/defgrp{***x77}/angvora_{**x76}    
d120 1
a120 1
   [temp_ref_projs]_5@@                            ; For SMALL angles Temporary local output file (deleted)
d124 1
a124 1
[sorted_order_select]input/order_select_sort        ; Sorted input selection doc file
d127 1
a127 1
[next_group_vol]work/defgrp{***x77}/vol_{**x86}     ; Next group volume.   
d129 1
a129 1
[next_group_vol_template]work/defgrp***/vol_{**x86} ; Group volume template  
a142 1
;[next_aligned_images]work/dala{**x86}_{***x77}@@ ; Next aligned images stack
a147 4
FR G
[final_group_dirs]final/defgrp{***x77}          ; Final group dirs.
FR G
[temp_group_dirs]work/defgrp{***x77}            ; Final group dirs.
d150 1
a150 1
[group_select]work/defgrp{***x77}/select        ; Group selection doc file
d161 1
a161 1
[group_bpr]final/defgrp{***x77}/bpr{**x76}        ; Group volume file
d163 1
a163 1
[group_bpr_template]final/defgrp***/bpr{**x86}    ; Group volume template
d165 1
a165 1
[next_group_bpr]final/defgrp{***x77}/bpr{**x86}   ; Group volume file
d172 1
d174 1
a174 1
[group_apmd]final/defgrp{***x77}/apmd{**x76}      ; Group AP MD input file 
d176 1
a176 1
[next_group_apmd]final/defgrp{***x77}/apmd{**x86} ; Group AP MD input file 
d179 1
a179 1
[group_align]final/align{**x76}_{***x77}          ; Group align input file 
d181 1
a181 1
[next_group_align]final/align{**x86}_{***x77}     ; Group align output file 
d184 1
a184 1
[next_group_dres]final/defgrp{***x77}/dres{**x86}  ; Group dres output doc. file
d189 1
a189 1
[next_group_dbpr]final/defgrp{***x77}/dbpr{**x86}  ; Output group resolution doc files
@


1.16
log
@changed  SET MP = 0 : use all processors available
@
text
@d28 2
a29 2
;    input/trans{**iter}_{***group} [group_trans}        Original alignment offsets 
;    input/order_select             [order_select]       Image ID doc. fil
d31 1
a31 1
;    input/ctfs                     [ctf_input]          CTF Starting file   
d59 6
a64 6
   DO LB1 x21=1,x98
      IF (x70.EQ.1) THEN
         ; For SMALL angle refinement
         x41= 0.5 ; Angular steps (CAN EDIT THIS)    
         x42= 2.0 ; Restriction on angular search (CAN EDIT THIS)
      ELSE
d70 2
a71 3

      ENDIF
   LB1
d90 1
a90 1
[initial_group_trans]input/trans{**x76}_{***x77} ; Initial group translations doc files
a135 2
FR G
[aligned_images_stem]input/dala
a137 5
[group_trans]final/trans{**x76}_{***x77} ; Current group translations doc files
FR G
[next_group_trans]final/trans{**x86}_{***x77}    ; Next group translations doc files
             
FR G
a169 7
[initial_angles]input/angles{**x76}_{***x77}      ; SMALL Group angles files (unused??)
FR G
[group_angles]final/angles{**x76}_{***x77}        ; Group angles files (iter 2...)
FR G
[next_group_angles]final/angles{**x86}_{***x77}   ; Group angles files (iter 2...)

FR G
d173 1
d175 1
a175 2
[group_align]final/align{**x76}_{***x77}          ; Group align output file 

a177 2
FR G
[group_align_stem]final/align
@


1.15
log
@group_apmd bug
@
text
@d54 1
a54 1
x12=2          ; Number of OMP processes wanted
@


1.14
log
@dala position
@
text
@d185 3
a187 1
[group_apmd]final/defgrp{***x77}/apmd{**x86}      ; Group AP MD input file 
@


1.13
log
@*** empty log message ***
@
text
@d78 2
a79 3
; ----------------- Input files -------------------------------------
;<b> -------------- May have to edit these names -------------------</b>
;<b> -------------- DO NOT COPY FROM WEB BROWSER -------------------</b>
d82 1
a82 1
[order_select]input/order_select2                ; Order selection input doc file                    
d96 5
a100 2
; ----------------- Output files -------------------------------------------
; ----------------- No need to edit for default refinement -----------------
a133 3
FR G
[aligned_images]input/dala{**x76}_{***x77}@@      ; Current aligned images stack
;[aligned_images]work/dala{**x76}_{***x77}@@      ; Current input aligned images stack
@


1.12
log
@*** empty log message ***
@
text
@d105 1
a105 1
   [temp_ref_projs][temp_local_dir]/refproj{**x76}_{***x77}@@ ; For Temporary local output file (deleted)
@


1.11
log
@junk filename removed (bad)
@
text
@d83 1
a83 1
[order_select]input/order_select2               ; Order selection input doc file                    
d86 1
a86 1
[ctf_input]input/ctfs                           ; Original ctf input file
d88 3
d92 1
a92 1
[initial_vol]input/vol{**x76}                     ; Produced by 'AP MQ' or previous iter.   
d95 1
a95 1
[initial_group_trans]input/trans{**x76}_{***x77}  ; Initial group translations doc files
d97 2
a98 2
FR G
[unaligned_images]input/data{***x77}@@             ; Original unaligned images stack
d101 1
a101 1
[temp_local_dir]local/tmp/hxgao                   ; A local disk scratch dir
a102 3
FR G                                              ; For SMALL angles RN use only
[group_ang_vora]final/defgrp{***x77}/angvora_{**x76}    

d107 3
d111 1
a111 1
   [temp_ref_projs]_5@@                                     ; For SMALL angles Temporary local output file (deleted)
a113 3
; ----------------- Output files -------------------------------------------
; ----------------- No need to edit for default refinement -----------------

d138 2
d192 2
@


1.10
log
@*** empty log message ***
@
text
@d115 1
a115 2
[sorted_order_select]input/junk      ; Sorted input selection doc file
;;!!![sorted_order_select]input/order_select_sort      ; Sorted input selection doc file
@


1.9
log
@*** empty log message ***
@
text
@d44 1
a44 1
x74=7       ; Starting alignment step (iteration)!!!!!!!!!!!!
a45 2
x75=10      ; Ending alignment step (iteration)

a47 1
x66=2        ; Ending defocus group!!!!!!!!!!!!!!!!!!!
d51 1
d53 1
a53 1
x70=1        ; For SMALL angle refinement set x70=1!!!!!!!!!!!
a102 1
;Comment out one of the following two assignments 
@


1.8
log
@*** empty log message ***
@
text
@d1 1
a1 1
(x76,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x70)
d7 1
a7 1
; MASTER COPY: /net/bali/usr1/spider/docs/techs/recon/programs/
d23 1
d36 1
a36 1
;<b> -------------- Edit next 10 Refinement parameters -------------</b>
d44 1
d46 2
a47 1
x75=5          ; Ending alignment step (iteration)
d50 1
d55 2
d62 12
a73 7
      RR x41      ;  Sequence of angular steps (CAN EDIT THIS)
      2.0,2.0,2.0,2.0,2.0,1.5,1.5,1.5
;     0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5  ; typical SMALL angles

      RR x42      ;  Restriction on angular search (CAN EDIT THIS)
      15.0,15.0,5.0,5.0,5.0,5.0,5.0,5.0
;     2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0  ;typical SMALL angles
a96 3
[initial_aligned_images]input/dala{**x76}_{***x77} ; Initial aligned images stack

FR G
d106 7
a112 5
FR G
[temp_ref_projs][temp_local_dir]/refproj{**x76}_{***x77} ; For Temporary local output file (deleted)
;;FR G
;;[temp_ref_projs]_5                                     ; For SMALL angles Temporary local output file (deleted)

d118 2
a119 1
[sorted_order_select]input/order_select_sort      ; Sorted input selection doc file
d137 2
a138 1
[aligned_images]input/dala{**x76}_{***x77}       ; Current aligned images stack
d140 2
a141 4
[next_aligned_images]input/dala{**x86}_{***x77}  ; Next aligned images stack
;[aligned_images]work/dala{**x76}_{***x77}       ; Current input aligned images stack
;[next_aligned_images]work/dala{**x86}_{***x77}  ; Next aligned images stack

d144 1
a144 1
[current_group_trans]final/trans{**x76}_{***x77} ; Current group translations doc files
d188 6
a193 1
[group_apmd]final/defgrp{***x77}/apmd{**x86}       ; Group AP MD output file 
a207 1
  
@


1.7
log
@*** empty log message ***
@
text
@d1 1
a1 1
(x76,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71)
d3 1
a3 1
; <html><head><title>Sets refinement parameters and files </title></head><body><pre>
d22 1
d50 1
d58 2
d62 1
d97 3
a99 1
Comment out one of the following two assingments 
a101 2
FR G
[temp_ref_projs][temp_local_dir]/refproj{**x76}_{***x77} ; For Temporary local output file (deleted)
d171 1
a171 1
[initial_angles]input/angles{**x76}_{***x77}      ; SMALL Group angles files (iter 2...)
@


1.6
log
@*** empty log message ***
@
text
@d38 2
a39 2
x51=76         ; Radius of the structure
x52=155        ; Image size
d42 2
a43 1
x75=9          ; Ending alignment step (iteration)
d45 1
a45 2
x66=43         ; Ending defocus group
x66=3
d47 2
a48 2
x14=0.17730496 ; Maximum spatial frequency[a-1] (used in prepare)
x71=0.02501    ; Lambda[angstroms] (used in prepare 1..36)
d69 1
a69 1
[order_select]input/order_select                ; Order selection input doc file                    
d87 10
a96 1
[temp_local_dir]local/tmp/leith                   ; A local disk scratch dir
d98 1
a150 3
[temp_ref_projs][temp_local_dir]/refproj{**x76}_{***x77} ; Temporary local output file (deleted)

FR G
d166 3
a168 1
[group_angles]final/defgrp{***x77}/angles{**x76}  ; Group angles files (iter 2...)
d170 1
a170 1
[next_group_angles]final/defgrp{***x77}/angles{**x86} ; Group angles files (iter 2...)
@


1.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
(x76,x41,x42,x14,x51,x52,x55,x74,x75,x65,x66,x71,x72)
a21 1
;    x72                     Lambda(angstroms) (used in prepare)
a48 1
x72=0.03701    ; Lambda[angstroms] (used in prepare 37....)
@


1.4
log
@after test
@
text
@d1 36
a36 15
; <html><head><title>Sets names and locations of refinement files </title></head><body><pre>
; where.pam                ArDean Leith    July 2002
; Source location: 
;
; INPUT:
;    dala{***group}                 Aligned stacked files
;    data{***group}                 Unaligned stacked files
;    trans{***group}                Trans. doc. files
;    order_select                   Selection doc. file
;    vol{***iter}                   Original tarting volume
;    ctfs                           CTF Starting file   
;
; ----------------- Input files -------------------------------------------
;<b> -------------- May have to edit these names ------------------------</b>
;<b> -------------- DO NOT COPY FROM WEB BROWSER ------------------------</b>
d39 34
d74 1
a74 1
<order_select>input/order_select                ; Order selection input doc file                    
d77 1
a77 1
<ctf_input>input/ctfs                           ; Original ctf input file
d80 1
a80 1
<initial_vol>input/vol{**x76}                   ; Produced by 'AP MQ' or previous iter.   
d83 1
a83 1
<initial_group_trans>input/trans{**x76}_{***x77}  ; Initial group translations doc files
d86 1
a86 1
<initial_aligned_images>input/dala{**x76}_{***x77} ; Initial aligned images stack
d89 1
a89 1
<unaligned_images>input/data{***x77}@@             ; Original unaligned images stack
d95 1
a95 1
<sorted_order_select>input/order_select_sort    ; Sorted input selection doc file
d98 1
a98 1
<next_group_vol>work/defgrp{***x77}/vol_{**x86}      ; Next group volume.   
d100 1
a100 1
<next_group_vol_template>work/defgrp***/vol_{**x86}  ; Group volume template  
d103 1
a103 1
<next_val>final/val{**x86}  
d105 1
a105 1
<current_vol>final/vol{**x76}                    ; Produced by AP MQ or previous iter.   
d107 1
a107 1
<next_vol>final/vol{**x86}                       ; Made for next iter.   
d110 1
a110 1
<next_dres>final/dres{**x86}                     ; Next dres output doc. file
d113 1
a113 1
<aligned_images>input/dala{**x76}_{***x77}       ; Current aligned images stack
d115 3
a117 3
<next_aligned_images>input/dala{**x86}_{***x77}  ; Next aligned images stack
;<aligned_images>work/dala{**x76}_{***x77}       ; Current input aligned images stack
;<next_aligned_images>work/dala{**x86}_{***x77}  ; Next aligned images stack
d121 1
a121 1
<current_group_trans>final/trans{**x76}_{***x77} ; Current group translations doc files
d123 1
a123 1
<next_group_trans>final/trans{**x86}_{***x77}    ; Next group translations doc files
d126 1
a126 1
<temp_work_dir>work/
d128 1
a128 1
<temp_local_dir>local/
d130 1
a130 1
<final_dir>final/
d132 1
a132 3
<final_group_dirs>final/defgrp{***x77}          ; Final group dirs.
FR G
<temp_group_dirs>work/defgrp{***x77}            ; Final group dirs.
d135 1
a135 1
<group_select>work/defgrp{***x77}/select        ; Group selection doc file
d138 1
a138 1
<temp_ctf_file>work/ctf{***x77}                 ; Temp. ctf files
d140 1
a140 1
<temp_ctf_file_template>work/ctf***             ; Temp. ctf file template
d143 1
a143 1
<temp_ref_projs>/usr/local/tmp/refproj{**x76}_{***x77} ; Temporary local output file (deleted)
d146 1
a146 1
<vft_for_iter>final/vft{**x76}
d149 1
a149 3
<bpr>final/bpr{**x86}                    ; Refined output volume
FR G
<group_bpr>final/defgrp{***x77}/bpr{**x76}        ; Group volume file
d151 1
a151 1
<group_bpr_template>final/defgrp***/bpr{**x86}    ; Group volume template
d153 1
a153 1
<next_group_bpr>final/defgrp{***x77}/bpr{**x86}        ; Group volume file
d156 1
a156 1
<group_ang_voea>final/defgrp{***x77}/angvoea      ; Group angle voea file
d158 1
a158 1
<group_select_voea>final/defgrp{***x77}/selvoea   ; GRoup angle voea selection file
d161 1
a161 1
<group_angles>final/defgrp{***x77}/angles{**x76}  ; Group angles files (iter 2...)
d163 1
a163 1
<next_group_angles>final/defgrp{***x77}/angles{**x86} ; Group angles files (iter 2...)
d166 1
a166 1
<group_apmd>final/defgrp{***x77}/apmd{**x86}       ; Group AP MD output file 
d169 1
a169 1
<next_group_dres>final/defgrp{***x77}/dres{**x86}  ; Group dres output doc. file
d172 1
a172 1
<dbpr>final/dbpr{**x86}                            ; Output resolution doc files
d174 4
a177 1
<next_group_dbpr>final/defgrp{***x77}/dbpr{**x86}  ; Output group resolution doc files
d179 1
a179 1
<dbpr_resol>final/resolutions                      ; Output resolution text file
@


1.3
log
@*** empty log message ***
@
text
@d3 1
a3 1
; Source location: /net/sicily/usr1/leith/clus/spahn/refine/pubsub/linux
d6 6
a11 6
; dala{***group}                     Stack files
; data{***group}                     Stack files
; trans{***group}                    Trans. Doc. files
; order_select                       Selection Doc. file
; vol{***iter}                       Starting volume
; ctfs                               CTF Starting file   
a12 1
; Note:  X76 contains iteration number and X77 contains defocus group.
d16 1
d25 1
a25 1
<starting_vol>input/vol{**x76}                  ; Produced by 'AP MQ' or previous iter.   
d28 1
a28 1
<initial_trans_docs>input/trans{**x76}_{***x77} ; Initial group translations doc files
d31 1
a31 1
<starting_aligned_images>input/dala{**x76}_{***x77} ; Initial aligned images stack
d34 1
a34 1
<unaligned_images>input/data{***x77}             ; Original unaligned images stack
a35 3
FR G
<temp_ref_projs>/usr/local/tmp/refproj{**x76}_{***x77} ; temporary local output file (deleted)

d40 2
a41 1
<sorted_order_select>input/order_select_sort    ; sorted input selection doc file
d43 1
a43 1
<next_vol>final/vol{**x86}                      ; made for next iter.   
d45 1
a45 1
<current_vol>final/vol{**x76}                   ; produced by AP MQ or previous iter.   
d48 1
a48 7
<next_group_vol>work/defgrp{***x77}/vol_{**x86}       ; next group volume.   
FR G
<next_group_vol1>work/defgrp{***x77}/vol1_{**x86}     ; even group volume   
FR G
<next_group_vol2>work/defgrp{***x77}/vol2_{**x86}     ; odd  group volume.   
FR G
<next_group_vol_template>work/defgrp***/vol_{**x86}   ; group volume template  
d50 1
a50 1
<next_group_vol1_template>work/defgrp***/vol1_{**x86} ; even  group volume template  
d52 1
a52 1
<next_group_vol2_template>work/defgrp***/vol2_{**x86} ; odd   group volume template  
d55 1
a55 5
<next_vol1>final/vol1_{**x86}                    ; next even group volume   
FR G
<next_vol2>final/vol2_{**x86}                    ; next odd group volume.   
FR G
<next_dres>final/dres{**x86}                     ; next dres output doc. file
d58 1
a58 1
<aligned_images>input/dala{**x76}_{***x77}      ; Current aligned images stack
d60 3
a62 3
<next_aligned_images>input/dala{**x86}_{***x77} ; Next aligned images stack
;<aligned_images>work/dala{**x76}_{***x77}      ; Current input aligned images stack
;<next_aligned_images>work/dala{**x86}_{***x77} ; Next aligned images stack
d66 1
a66 1
<current_trans_docs>final/trans{**x76}_{***x77} ; current group translations doc files
d68 1
a68 1
<next_trans_docs>final/trans{**x86}_{***x77}    ; Next group translations doc files
d77 1
a77 1
<final_group_dirs>final/defgrp{***x77}          ; final group dirs.
d79 1
a79 1
<temp_group_dirs>work/defgrp{***x77}            ; final group dirs.
d82 1
a82 1
<group_select>work/defgrp{***x77}/select         ; group selection doc file
d85 1
a85 1
<temp_ctf_file>work/ctf{***x77}                  ; temp ctf files
d87 1
a87 1
<temp_ctf_file_template>work/ctf***              ; temp ctf file template
d89 2
d96 1
a96 1
<group_bpr>final/defgrp{***x77}/bpr               ; group back projection file template
d98 1
a98 1
<group_bpr_template>final/defgrp***/bpr           ; group back projection file template
d100 3
a102 1
<bpr_template>final/bpr                          ; output volume
d105 1
a105 1
<group_ang_voea>final/defgrp{***x77}/angvoea       ; group angle voea file
d107 1
a107 1
<group_select_voea>final/defgrp{***x77}/selvoea   ; group angle voea selection file
d110 1
a110 1
<group_angles>final/defgrp{***x77}/angles{**x76}  ; group angles files (iter 2...)
d112 1
a112 1
<next_group_angles>final/defgrp{***x77}/angles{**x86}  ; group angles files (iter 2...)
d115 1
a115 1
<group_apmd>final/defgrp{***x77}/apmd{**x86}       ; group AP MD output file 
d118 1
a118 1
<next_group_dres>final/defgrp{***x77}/dres{**x86}  ; group dres output doc. file
d121 3
a123 1
<next_dbpr>final/dbpr{**x86}                      ; output resolution doc files
d125 1
a125 1
<next_group_dbpr>final/defgrp{***x77}/dbpr{**x86} ; output group resolution doc files
d127 1
a127 2
FR G
<next_val>final/val{**x86}    
@


1.2
log
@*** empty log message ***
@
text
@d19 1
a19 1
[order_select]input/order_select                ; Order selection input doc file                    
d22 1
a22 1
[ctf_input]input/ctfs                           ; Original ctf input file
d25 1
a25 1
[starting_vol]input/vol{**x76}                  ; Produced by 'AP MQ' or previous iter.   
d28 1
a28 1
[initial_trans_docs]input/trans{**x76}_{***x77} ; Initial group translations doc files
d31 1
a31 1
[starting_aligned_images]input/dala{**x76}_{***x77} ; Initial aligned images stack
d34 1
a34 1
[unaligned_images]input/data{***x77}             ; Original unaligned images stack
d37 1
a37 1
[temp_ref_projs]/usr/local/tmp/refproj{**x76}_{***x77} ; temporary local output file (deleted)
d43 1
a43 1
[sorted_order_select]input/order_select_sort    ; sorted input selection doc file
d45 1
a45 1
[next_vol]final/vol{**x86}                      ; made for next iter.   
d47 1
a47 1
[current_vol]final/vol{**x76}                   ; produced by AP MQ or previous iter.   
d50 1
a50 1
[next_group_vol]work/defgrp{***x77}/vol_{**x86}       ; next group volume.   
d52 1
a52 1
[next_group_vol1]work/defgrp{***x77}/vol1_{**x86}     ; even group volume   
d54 1
a54 1
[next_group_vol2]work/defgrp{***x77}/vol2_{**x86}     ; odd  group volume.   
d56 1
a56 1
[next_group_vol_template]work/defgrp***/vol_{**x86}   ; group volume template  
d58 1
a58 1
[next_group_vol1_template]work/defgrp***/vol1_{**x86} ; even  group volume template  
d60 1
a60 1
[next_group_vol2_template]work/defgrp***/vol2_{**x86} ; odd   group volume template  
d63 1
a63 1
[next_vol1]final/vol1_{**x86}                    ; next even group volume   
d65 1
a65 1
[next_vol2]final/vol2_{**x86}                    ; next odd group volume.   
d67 1
a67 1
[next_dres]final/dres{**x86}                     ; next dres output doc. file
d70 1
a70 1
[aligned_images]input/dala{**x76}_{***x77}      ; Current aligned images stack
d72 3
a74 3
[next_aligned_images]input/dala{**x86}_{***x77} ; Next aligned images stack
;[aligned_images]work/dala{**x76}_{***x77}      ; Current input aligned images stack
;[next_aligned_images]work/dala{**x86}_{***x77} ; Next aligned images stack
d78 1
a78 1
[current_trans_docs]final/trans{**x76}_{***x77} ; current group translations doc files
d80 1
a80 1
[next_trans_docs]final/trans{**x86}_{***x77}    ; Next group translations doc files
d83 1
a83 1
[temp_work_dir]work/
d85 1
a85 1
[temp_local_dir]local/
d87 1
a87 1
[final_dir]final/
d89 1
a89 1
[final_group_dirs]final/defgrp{***x77}          ; final group dirs.
d91 1
a91 1
[temp_group_dirs]work/defgrp{***x77}            ; final group dirs.
d94 1
a94 1
[group_select]work/defgrp{***x77}/select         ; group selection doc file
d97 1
a97 1
[temp_ctf_file]work/ctf{***x77}                  ; temp ctf files
d99 1
a99 1
[temp_ctf_file_template]work/ctf***              ; temp ctf file template
d103 1
a103 1
[vft_for_iter]final/vft{**x76}
d106 1
a106 1
[group_bpr]final/defgrp{***x77}/bpr               ; group back projection file template
d108 1
a108 1
[group_bpr_template]final/defgrp***/bpr           ; group back projection file template
d110 1
a110 1
[bpr_template]final/bpr                          ; output volume
d113 1
a113 1
[group_ang_voea]final/defgrp{***x77}/angvoea       ; group angle voea file
d115 1
a115 1
[group_select_voea]final/defgrp{***x77}/selvoea   ; group angle voea selection file
d118 1
a118 1
[group_angles]final/defgrp{***x77}/angles{**x76}  ; group angles files (iter 2...)
d120 1
a120 1
[next_group_angles]final/defgrp{***x77}/angles{**x86}  ; group angles files (iter 2...)
d123 1
a123 1
[group_apmd]final/defgrp{***x77}/apmd{**x86}       ; group AP MD output file 
d126 1
a126 1
[next_group_dres]final/defgrp{***x77}/dres{**x86}  ; group dres output doc. file
d129 1
a129 1
[next_dbpr]final/dbpr{**x86}                      ; output resolution doc files
d131 1
a131 1
[next_group_dbpr]final/defgrp{***x77}/dbpr{**x86} ; output group resolution doc files
d134 1
a134 1
[next_val]final/val{**x86}    
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
<order_select>input/order_select                ; Order selection input doc file                    
d22 1
a22 1
<ctf_input>input/ctfs                           ; Original ctf input file
d25 1
a25 1
<starting_vol>input/vol{**x76}                  ; Produced by 'AP MQ' or previous iter.   
d28 1
a28 1
<initial_trans_docs>input/trans{**x76}_{***x77} ; Initial group translations doc files
d31 1
a31 1
<starting_aligned_images>input/dala{**x76}_{***x77} ; Initial aligned images stack
d34 1
a34 1
<unaligned_images>input/data{***x77}             ; Original unaligned images stack
d37 1
a37 1
<temp_ref_projs>/usr/local/tmp/refproj{**x76}_{***x77} ; temporary local output file (deleted)
d43 1
a43 1
<sorted_order_select>input/order_select_sort    ; sorted input selection doc file
d45 1
a45 1
<next_vol>final/vol{**x86}                      ; made for next iter.   
d47 1
a47 1
<current_vol>final/vol{**x76}                   ; produced by AP MQ or previous iter.   
d50 1
a50 1
<next_group_vol>work/defgrp{***x77}/vol_{**x86}       ; next group volume.   
d52 1
a52 1
<next_group_vol1>work/defgrp{***x77}/vol1_{**x86}     ; even group volume   
d54 1
a54 1
<next_group_vol2>work/defgrp{***x77}/vol2_{**x86}     ; odd  group volume.   
d56 1
a56 1
<next_group_vol_template>work/defgrp***/vol_{**x86}   ; group volume template  
d58 1
a58 1
<next_group_vol1_template>work/defgrp***/vol1_{**x86} ; even  group volume template  
d60 1
a60 1
<next_group_vol2_template>work/defgrp***/vol2_{**x86} ; odd   group volume template  
d63 1
a63 1
<next_vol1>final/vol1_{**x86}                    ; next even group volume   
d65 1
a65 1
<next_vol2>final/vol2_{**x86}                    ; next odd group volume.   
d67 1
a67 1
<next_dres>final/dres{**x86}                     ; next dres output doc. file
d70 1
a70 1
<aligned_images>input/dala{**x76}_{***x77}      ; Current aligned images stack
d72 3
a74 3
<next_aligned_images>input/dala{**x86}_{***x77} ; Next aligned images stack
;<aligned_images>work/dala{**x76}_{***x77}      ; Current input aligned images stack
;<next_aligned_images>work/dala{**x86}_{***x77} ; Next aligned images stack
d78 1
a78 1
<current_trans_docs>final/trans{**x76}_{***x77} ; current group translations doc files
d80 1
a80 1
<next_trans_docs>final/trans{**x86}_{***x77}    ; Next group translations doc files
d83 1
a83 1
<temp_work_dir>work/
d85 1
a85 1
<temp_local_dir>local/
d87 1
a87 1
<final_dir>final/
d89 1
a89 1
<final_group_dirs>final/defgrp{***x77}          ; final group dirs.
d91 1
a91 1
<temp_group_dirs>work/defgrp{***x77}            ; final group dirs.
d94 1
a94 1
<group_select>work/defgrp{***x77}/select         ; group selection doc file
d97 1
a97 1
<temp_ctf_file>work/ctf{***x77}                  ; temp ctf files
d99 1
a99 1
<temp_ctf_file_template>work/ctf***              ; temp ctf file template
d103 1
a103 1
<vft_for_iter>final/vft{**x76}
d106 1
a106 1
<group_bpr>final/defgrp{***x77}/bpr               ; group back projection file template
d108 1
a108 1
<group_bpr_template>final/defgrp***/bpr           ; group back projection file template
d110 1
a110 1
<bpr_template>final/bpr                          ; output volume
d113 1
a113 1
<group_ang_voea>final/defgrp{***x77}/angvoea       ; group angle voea file
d115 1
a115 1
<group_select_voea>final/defgrp{***x77}/selvoea   ; group angle voea selection file
d118 1
a118 1
<group_angles>final/defgrp{***x77}/angles{**x76}  ; group angles files (iter 2...)
d120 1
a120 1
<next_group_angles>final/defgrp{***x77}/angles{**x86}  ; group angles files (iter 2...)
d123 1
a123 1
<group_apmd>final/defgrp{***x77}/apmd{**x86}       ; group AP MD output file 
d126 1
a126 1
<next_group_dres>final/defgrp{***x77}/dres{**x86}  ; group dres output doc. file
d129 1
a129 1
<next_dbpr>final/dbpr{**x86}                      ; output resolution doc files
d131 1
a131 1
<next_group_dbpr>final/defgrp{***x77}/dbpr{**x86} ; output group resolution doc files
d134 1
a134 1
<next_val>final/val{**x86}    
@
