#!/bin/tcsh
#PBS -S /bin/tcsh             # Shell
#PBS -V                       # Import shell variables
#PBS -l nodes=1:ppn=20        # Nodes and processors / node
#PBS -d .                     # Use current directory
#PBS -z                       # Does not echo starting info
#PBS -j oe                    # Merge output and error streams
#PBS -o ./jnk_cluster.log     # jnk_cluster.log appears when task ends!

##PBS -k eo                   # Unused

# Get environment variables
source ~/.cshrc

# Record task and target node in: pbs.log
echo '  'Run:'      '$run  On: `head --lines=1  $PBS_NODEFILE | cut -d' ' -f1` '  ' `date '+ %x  %X'`  >>&! pbs.log

# Execute: $run   and redirect std output and error to: run.log
$run  >>&!  run.log 

# Record task finish time and target node in: pbs.log
echo '  'Finished: $run  On: `head --lines=1  $PBS_NODEFILE | cut -d' ' -f1` '  ' `date '+ %x  %X'`  >>&! pbs.log

# ---------------------- Unused below here -------------------------------------

#$run >>&  jnk-sphtime.log
##  qsub -v run="[run]" sphqsub.pbs >>& jnk-sphtime.log
#  echo node1 node2 node3 node4 | cut -d' ' -f1
#
#  In tcsh redirection the ! symbol means overwrite the existing file even if noclobber is set.
#  
#  In other words, if noclobber is set then:
#      * cmd > file   will write stdout to file if file does not exist
#      * cmd > file   will fail if file exists
#      * cmd >> file  will append stdout to file if file exists
#      * cmd >> file  will fail if file does not exist
#      * cmd >! file  will write stdout to file, overwriting any existing file
#      * cmd >>! file will append stdout to file, creating the file if it does not already exist
#  
#  If noclobber is not set then the ! has no effect:
#      * cmd > file   will write stdout to file, overwriting any existing file
#      * cmd >> file  will append stdout to file
#      * cmd >! file  will write stdout to file, overwriting any existing file
#      * cmd >>! file will append stdout to file

