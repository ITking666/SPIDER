;;([grp])

 ; <html><head><title>Calculate two half-set reconstructions for each group</title></head><body><pre>
 ; SOURCE: spider/docs/techs/recon1/Procs/bp-main.spi   
 ;
 ; PURPOSE: Calculate two half-set reconstructions for each group
 ;
 ; INPUT:   Group must be read into this procedure

 MD
   TR OFF                       ; Decrease results file output
 MD
   VB OFF                       ; Decrease results file output
 MD                            
   SET MP
   0

 [pubsub] = 1
 IF ( [grp] == 0 ) THEN
    RR [grp]                    ; Input group from caller
      ?ENTER GROUP?
    ; SYS
    ;   echo " RR grp: {***[grp]}"
    [pubsub] = 0
 ENDIF
     
 ; Set parameter and file names
 @bp-settings([stk-opt],[r-fsc],[bp-type],[r-bp],[cg-err],[cg-chi],[cg-iter],[cg-mode],[cg-lam],[rp-lam],[rp-cor],[rp-iter],[sp_pixsiz],[incore-yn])

 ; Initialize counters

 FI H [numparts]               ; Get number of particles 
   [aligned_images][grp]@      ; Image stack                         (input)
   MAXIM                       ; Max. image number in stack      
 
 IF ([incore-yn] == 0) THEN
   ; Use on-disk image stack
   [temp_images] = '[aligned_images][grp]@'
 
 ELSE
   ; Load input image stack into incore image stack first
   [temp_images] = '_8@'

   CP                          ; Load input images into incore stack
     [aligned_images][grp]@    ; Image stack                         (input)
     [temp_images]             ; Incore stack                        (output)
     [numparts]                ; Stack size
 ENDIF

 SYS
   mkdir -p [group_dir][grp]

 SYS
   echo ' 'Back projecting from: [temp_images]'   ' Group: {%I3%[grp]}'  ' Images: {%I6%[numparts]}  

 MY FL                         ; Flush results file
 
 IF ( [bp-type] == 1 ) THEN

   ; Create group volumes using 'BP CG 3' .
   BP CG 3                     ; Back Projection - CG
     [temp_images]*****        ; Template for image files            (input)
     [sel_parts][grp]          ; Group particle selection doc file   (input)
     [rad-bp]                  ; Radius of restored object
     [group_align][grp]        ; Alignment parameter doc file        (input)
     F                         ; Fourier-based spline interpolation
     [group_vol][grp]          ; Reconstructed group vol - overall   (output)
     [group_vol_1][grp]        ; Reconstructed group vol - subset 1  (output)
     [group_vol_2][grp]        ; Reconstructed group vol - subset 2  (output)
     [cg-err],[cg-chi]         ; Error limit, chi^2 limit
     [cg-iter],[cg-mode]       ; Iteration limit, mode
     [cg-lam]                  ; Weighting

 ELSEIF ( [bp-type] == 2 ) THEN

   BP 32F                      ; Back Projection - 3D Fourier
     [temp_images]*****        ; Template for image files            (input)
     [sel_parts][grp]          ; Particle selection doc file         (input)
     [group_align][grp]        ; Alignment parameter doc file        (input)
     [symmetry_doc]            ; Symmetries doc file (* = none)      (input)
     [group_vol][grp]          ; Reconstructed group vol - overall   (output)
     [group_vol_1][grp]        ; Reconstructed group vol - subset 1  (output)
     [group_vol_2][grp]        ; Reconstructed group vol - subset 2  (output)

 ELSEIF ( [bp-type] == 3 ) THEN

   ; Compute the group subset reconstructions. --------------------------------
   BP RP 3 [niter]             ; [niter] returns # iterations used
     [temp_images]*****        ; Template for image files            (input)
     [sel_parts][grp]          ; Particle selection doc file         (input)
     [r-bp]                    ; Radius of restored object
     [group_align][grp]        ; Alignment parameter doc file        (input)
     [symmetry_doc]            ; Symmetries doc file (* = none)      (input)
     [group_vol][grp]          ; Reconstructed group vol - overall   (output)
     [group_vol_1][grp]        ; Reconstructed group vol - subset 1  (output)
     [group_vol_2][grp]        ; Reconstructed group vol - subset 2  (output)
     [rp-lam],[rp-cor]         ; Lambda, correction limit
     [rp-iter],0               ; Iteration limit, mode
     .5, .5                    ; Minimum, maximum
     .5                        ; Smoothing constant

 ELSEIF ( [bp-type] ==  4 ) THEN
   
   ; Split into odd and even selection lists
   DOC SPLIT
     [sel_parts][grp]          ; Particle selection doc file         (input)
     [selodd][grp]             ; Odd  particle selection doc file    (output)         
     [seleven][grp]            ; Even particle selection doc file    (output)         

   ; Reconstruct odd volume
   BP 3N
     [temp_images]******       ; Template for image files            (input)
     [selodd][grp]             ; Odd  particle selection doc file    (output)         
     [group_align][grp]        ; Alignment parameter doc file        (input)
     [symmetry_doc]            ; Symmetries doc file (* = none)      (input)
     [group_vol_1][grp]        ; Reconstructed group vol - subset 1  (output)

   ; Reconstruct even volume
   BP 3N
     [temp_images]*****        ; Template for image files            (input)
     [seleven][grp]            ; Even particle selection doc file    (output)
     [group_align][grp]        ; Alignment parameter doc file        (input)
     [symmetry_doc]            ; Symmetries doc file (* = none)      (input)
     [group_vol_2]             ; Reconstructed group vol - subset 2  (output)

   ; Reconstruct combined volume
   BP 3N
     [temp_images]*****        ; Template for image files            (input)
     [sel_parts][grp]          ; Particle selection doc file         (input)
     [group_align][grp]        ; Alignment parameter doc file        (input)
     [symmetry_doc]            ; Symmetries doc file (* = none)      (input)
     [group_vol][grp]          ; Reconstructed group vol - overall   (output)
 ENDIF


 IF ( [incore-yn] > 0) THEN
   DE                          ; Delete incore stack                (deleted)
     [temp_images]
 ENDIF 
   
 IF ( [pubsub] == 1 ) THEN
    SYS                        ; File created when finished (one/group)
       touch [finished_file][grp] 
    EN
 ENDIF

 RE

 ; </pre></body></html>
