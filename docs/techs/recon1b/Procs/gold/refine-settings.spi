 ([sp_pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[smallang-yn],[sp_winsiz],[incore-yn],[prepare-yn],[bp-type])
 ;
 ; <html><head><title>Sets refinement parameters and files</title></head><body><pre>
 ;
 ; SOURCE:  spider/docs/techs/recon1/Procs/gold/refine_settings.spi
 ;          New                                    ArDean Leith Jul 2002
 ;          [] variables                           ArDean Leith Dec 2005
 ;          Rewritten, more stacks                 ArDean Leith Dec 2006
 ;          Variable assignment                    ArDean Leith Jan 2010
 ;          Even-odd replaced                      ArDean Leith Jan 2011
 ;          Dala removal                           ArDean Leith Jan 2012
 ;          [pixsiz] returned, fsc, ofsc...        ArDean Leith Aug 2012
 ;          Skip 3.3,3...                          ArDean Leith Sep 2012
 ;          For CTF corrected images               ArDean Leith Oct 2013
 ;          For gold standard reconstruction       ArDean Leith May 2014
 ;          Added spherical deconvolution          ArDean Leith Jan 2016
 ;
 ; INPUT REGISTERS:       None
 ;
 ; OUTPUT REGISTERS (SET  BELOW):
 ;   [sp_pixsiz]          Pixel size                  (A) 
 ;   [r2]                 Object alignment radius     (pixels)
 ;   [alignsh]            Alignment shift +- allowed  (pixels) 
 ;   [prj-radius]         Object projection radius    (pixels)
 ;   [iter1]              Starting iteration
 ;   [iter-end]           Ending   iteration
 ;   [sphdecon]           Spherical deconvolution angle (degrees)
 ;   [smallang-yn]        Small angle refinement flag   (1 == true)
 ;   [sp_winsiz]          Image/window size = volume size
 ;   [incore-yn]          Incore files (1 == true)
 ;   [prepare-yn]         Prepare input files for first use (1 == true)
 ;
 ;<b> ---------Set Refinement parameters from parameter file ----------</b>
 ;<pre> 

 ; ---- Adjust these parameters for your project --------------- EDIT -----

 [prepare-yn]  = 0;1  ; Prepare input images   (>0 == yes,  only needs to be done once)
 [incore-yn]   = 1    ; Load input images into incore stack (>0 == yes we have enough memory)
 [bp-type]     = 2    ; Backprojection method (1==BP CG, 2==BP 32F, 3==BP RP, 4==BP 3N)

 [alignsh]     = 8    ; Alignment shift (pixels) searched is +- this value
 [iter1]       = 5    ; Starting alignment step (iteration)
 [iter-end]    = 10   ; 12   ; Ending alignment step   (iteration)

 [diam]        = 436  ; Diameter of the structure (A) used in alignment search.
                      ;   (Default is for a ribosome. EDIT as needed.)
                      ;    Diameter is used to find radius for alignment.
  
 [win-frac]    = 0.95 ; Fraction of window diameter used in projection (e.g. 0.95 == use 95% of window size)

 [smallang-yn] = 0    ; Use small angle refinement instead of regular (1 == Yes)

 [sphdecon]    = 0    ; Spherical deconvolution angle (0 == Do not deconvolve)

 ; Following two string variables are used during usual refinement (one value / iteration) (Set for up to: 20 iterations)
!GLO [ang-steps]  = '15,10,3.3,3,2,  2,2,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5, 1.5,1.5,1.5,1.5,1.5'      ; Angular degree steps    
 GLO [ang-steps]  = '15,3.3,3, 2,2,  2,1.5,1.5,1.5,1.5,  1.5,1.5,1.5,1.5,1.5,   1.5,1.5,1.5,1.5,1.5' ; Angular degree steps  

!GLO [ang-limits] = '0,0,0,0,15, 8,6,5,5,5, 5,5,5,5,5, 5,5,5,5,5'           ; Angular limits
 GLO [ang-limits] = '0,0,0,  15,8,  6,5,  5,  5,5, 5,   5,  5,  5,  5,  5,     5,  5,  5,  5,  5'    ; Angular limits

 ; Following two string variables are only used during 'small angle refinement'
 GLO [ang-steps-sm] =  '0.5'                                                ; Angular degree steps      
 GLO [thetas-sm]    =  '2.0'                                                ; Theta range  

 ; Following flag variables are used to activate OPTIONAL amplitude enhancement (Set for up to: 20 iterations)
 GLO [amp-enhance-flags] = '0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0'     ; Amplitude enhancement selector 

 ;<b> ============== DO NOT COPY FROM WEB BROWSER ==============</b>
 ; ----------------- Input files ---  May have to EDIT these names ------

 GLO [params]                = '../params'                                  ; Parameter doc file  (one)  

!GLO [input_orig]            = '../Reconstruction/input'                    ; Main dir. for input files
 GLO [input_orig]            = 'data'                                       ; Main dir. for input files

!GLO [vol_orig]              = '../Reconstruction/vol{**[iter]}'            ; Initial reconstructed volume (one)   
 GLO [vol_orig]              = 'data/reference_volume'                      ; Initial reconstructed volume (one)   
                 
!GLO [sel_group_orig]        = '[input_orig]/bp_sel_group'                  ; Group selection doc file  (one)                  
 GLO [sel_group_orig]        = '[input_orig]/sel_group'                     ; Group selection doc file  (one)                  

!GLO [sel_parts_orig]        = '[input_orig]/sel_part_{***[grp]}'           ; Particle selection doc file (one/group)
 GLO [sel_parts_orig]        = '[input_orig]/sel_part_{***[grp]}'           ; Particle selection doc file (one/group)

!GLO [group_align_orig]      = '[input_orig]/bp_align_{**[iter]}_{***[grp]}'; Initial alignment parameter file (one/group) 
 GLO [group_align_orig]      = '*'                                          ; Initial alignment parameter file (one/group) 

!GLO [unaligned_images_orig] = '[input_orig]/bp_data_ctfd_{***[grp]}'       ; Original unaligned images stack (one/group)
 GLO [unaligned_images_orig] = '[input_orig]/data_{***[grp]}'               ; Original unaligned images stack (one/group)

 ; OPTIONAL  files only needed if using amplitude enhancement
 GLO [scattering_doc]        = '[input_dir]/scattering'                     ; OPTIONAL enhancement document input     (one)
 GLO [mask]                  = '[input_dir]/mask'                           ; OPTIONAL mask for amplitude enhancement (one)

 GLO [symmetry_doc]          = '*'                                          ; OPTIONAL symmetry file for 'back projection' (one)

 ; -------------- Output files -- No need to edit for default refinement ----------

 GLO [input_dir]             = 'input/'                                  ; Main dir. for input files
 GLO [final_dir]             = 'final/'                                  ; Main dir. for output files
 GLO [temp_work_dir]         = 'work/'                                   ; Temp work dir
 GLO [temp_local_dir]        = '/scratch/'                               ; OPTIONAL local disk scratch dir for PubSub use

 GLO [sel_group]             = 'input/sel_group'                         ; Group selection doc file           (one)

 GLO [sel_parts]             = 'input/sel_part_{***[grp]}'               ; Particle selection doc file stem   (one/group)
 GLO [sel_parts_s]           = '[sel_parts]_s{*[s]}'                     ; Particle selection doc file        (one/group)

 GLO [unaligned_images]      = 'input/data_ctfd_{***[grp]}'              ; Unaligned images stack (usually links) (one/group)
 GLO [unaligned_images]      = 'input/data_{***[grp]}'                   ; Unaligned images stack (usually links) (one/group)

 GLO [vol]                   = 'final/vol_{**[iter]}'                    ; Current volume from previous iter. (two)  
 GLO [vol_s]                 = '[vol]_s{*[s]}'                           ; Current volume from previous iter. (two)  

 GLO [next_vol]              = 'final/vol_{**[next-iter]}'               ; Next volume stem   
 GLO [next_vol_s]            = '[next_vol]_s{*[s]}'                      ; Filtered, shifted volumes          (one/iter)

 GLO [group_vol_stem]        = 'work/vol_{**[iter]}_{***[grp]}_***'      ; Current group volumes              (two/group/iter) 
 GLO [group_vol_s]           = 'work/vol_{**[iter]}_{***[grp]}_s{*[s]'   ; Current group volumes              (two/group/iter) 

 GLO [next_group_vol_stem]   = 'work/vol_{**[next-iter]}_***_s{*[s]}'    ; Next group volume stem   
 GLO [next_group_vol]        = 'work/vol_{**[next-iter]}_{***[grp]}'     ; Next group volume                  (one/group/iter)   
 GLO [next_group_vol_s]      = '[next_group_vol]_s{*[s]}'                ; Next group volume                  (two/group/iter) 

 GLO [group_align]           = 'final/align_{**[iter]}_{***[grp]}'       ; Group alignment doc file stem  
 GLO [group_align_s]         = '[group_align]_s{*[s]}'                   ; Group alignment doc files          (two/group/iter)
 GLO [next_group_align]      = 'final/align_{**[next-iter]}_{***[grp]}'  ; Next group alignment doc file stem 
 GLO [next_group_align_s]    = '[next_group_align]_s{*[s]}'              ; Next group alignment doc files     (one/group/iter)

 GLO [iter_refangs]          = 'work/ang_refs_{**[iter]}'                ; Reference angle file               (one/iter)
 GLO [iter_refangs_grp]      = 'work/ang_refs_{**[iter]}_{***[grp]}'     ; Reference projection angles doc file  (one/group/iter) (deleted)

 GLO [ref_projs_s]           = 'work/refproj_{**[iter]}_s{*[s]}'         ; Reference projections              (one/iter)
 GLO [ref_projs_s_grp]       = '[ref_projs_s]_{***[grp]}@'               ; Group reference projections        (one/group/iter) (deleted)

 GLO [m_fsc]                 = 'final/fscdoc_m_{**[iter]}'               ; Masked   FSC curve doc file        (one/iter)
 GLO [next_u_fsc]            = 'final/fscdoc_u_{**[next-iter]}'          ; Unmasked FSC curve doc file        (one/iter)
 GLO [next_m_fsc]            = 'final/fscdoc_m_{**[next-iter]}'          ; Masked   FSC curve doc file        (one/iter)

 GLO [iter_resol]            = 'final/resolutions'                       ; Overall resolution doc file        (one)
       
 GLO [img_ang_vora]          = 'final/angvora_{**[iter]}_{***[grp]}'     ; OPTIONAL, Small angle refinement ref. angles        (one/group/iter)
 GLO [temp_ref_projs]        = '_5@'                                     ; OPTIONAL, Small angle refinement local scratch file (deleted)
 
 GLO [enhance_doc]           = 'work/enhance_doc_{**[next-iter]}'        ; OPTIONAL, Enhancement doc file output      (one/iter)

 GLO [ref_rings]             = 'work/SCR_{**[iter]}_{***[grp]}'          ; OPTIONAL, Reference rings files output     (one/group/iter)
 GLO [wait_file]             = 'jnk_waited_***'                          ; OPTIONAL, Created when local copy finished (one/group)

 GLO [finished_file]         = 'jnk_sync_{****[rn]}_'                    ; OPTIONAL, Created when parallel segment finished (one/group)

 GLO [temp_in_images]        = '_8@'                                     ; OPTIONAL, Used by alignment & back projection internally
 GLO [temp_out_images]       = 'work/dala_{***[grp]}@'                   ; OPTIONAL, Used if [incore-yn] == 0  or small angle ref.(deleted)

 ; ----------------- END BATCH HEADER ---------------------------------

 ; Read some reconstruction parmeters from doc file

 UD 5, [sp_pixsiz]                     ; Get pixel size (A)   
   [params]                            ; Parameter doc. file

 UD 6, [sp_kev]                        ; Electron energy (kV)
   [params]                            ; Parameter doc. file

 UD 17, [sp_winsiz]                    ; Get window size (pixels), used to find projection radius 
   [params]                            ; Parameter doc. file

 UD E                                  ; End params doc. file usage

 ; ---- Should not need to adjust following parameters --------------------------

 ; Calculate lambda (A) from electron voltage now 
 [sp_lambda] = 12.398 / SQR([sp_kev] * (1022.0 + [sp_kev]))

 [r2]  = INT([diam]/(2.0*[sp_pixsiz])) ; Alignment radius (pixels) used in alignment search

 ; Ensure that sum of alignment radius + translation is within window dimensions 
 [ring-sh] = [r2] + [alignsh]          ; Last ring + translation step
 [maxrad]  = INT([sp_winsiz]/2) - 1    ; Max. radius of object in window

 IF ( [ring-sh] >= [maxrad] ) THEN
   ; Must reduce radius of outer ring, not translation step
   [r2] = [maxrad] - [alignsh] - 2     ; Reduces rotational search radius 
 ENDIF

 [prj-radius] = INT(([win-frac]*[sp_winsiz])/2.0 )  ; Convert fraction to pixel radius

 RE
 ; </pre></body></html>
