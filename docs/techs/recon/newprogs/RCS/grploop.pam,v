head	1.71;
access;
symbols
	GPL_update:1.53
	pre_rewrite_2010:1.51
	pre_more_stack:1.41
	best-code:1.40
	no-named-regs:1.39
	pre_GPL:1.39
	tag_version1_0:1.39;
locks; strict;
comment	@# @;


1.71
date	2015.04.28.15.47.15;	author leith;	state Exp;
branches;
next	1.70;

1.70
date	2015.04.20.18.07.04;	author leith;	state Exp;
branches;
next	1.69;

1.69
date	2012.12.12.15.14.27;	author leith;	state Exp;
branches;
next	1.68;

1.68
date	2012.12.10.17.09.50;	author leith;	state Exp;
branches;
next	1.67;

1.67
date	2012.09.19.15.43.55;	author leith;	state Exp;
branches;
next	1.66;

1.66
date	2012.09.18.19.09.58;	author leith;	state Exp;
branches;
next	1.65;

1.65
date	2012.09.12.18.19.49;	author leith;	state Exp;
branches;
next	1.64;

1.64
date	2012.01.12.18.54.17;	author leith;	state Exp;
branches;
next	1.63;

1.63
date	2012.01.05.16.17.06;	author leith;	state Exp;
branches;
next	1.62;

1.62
date	2012.01.05.15.49.35;	author leith;	state Exp;
branches;
next	1.61;

1.61
date	2011.01.07.18.34.05;	author leith;	state Exp;
branches;
next	1.60;

1.60
date	2010.11.04.16.19.21;	author leith;	state Exp;
branches;
next	1.59;

1.59
date	2010.10.29.18.41.25;	author leith;	state Exp;
branches;
next	1.58;

1.58
date	2010.10.29.13.10.10;	author leith;	state Exp;
branches;
next	1.57;

1.57
date	2010.10.27.15.14.23;	author leith;	state Exp;
branches;
next	1.56;

1.56
date	2010.10.15.19.26.32;	author leith;	state Exp;
branches;
next	1.55;

1.55
date	2010.10.08.12.47.32;	author leith;	state Exp;
branches;
next	1.54;

1.54
date	2010.08.17.13.57.02;	author leith;	state Exp;
branches;
next	1.53;

1.53
date	2010.01.21.19.04.47;	author leith;	state Exp;
branches;
next	1.52;

1.52
date	2010.01.19.18.53.43;	author leith;	state Exp;
branches;
next	1.51;

1.51
date	2009.04.07.11.27.46;	author leith;	state Exp;
branches;
next	1.50;

1.50
date	2009.02.10.15.23.33;	author leith;	state Exp;
branches;
next	1.49;

1.49
date	2008.06.18.15.29.50;	author leith;	state Exp;
branches;
next	1.48;

1.48
date	2008.03.26.17.12.32;	author leith;	state Exp;
branches;
next	1.47;

1.47
date	2007.07.17.13.46.56;	author leith;	state Exp;
branches;
next	1.46;

1.46
date	2007.05.14.14.39.39;	author leith;	state Exp;
branches;
next	1.45;

1.45
date	2007.04.03.20.02.34;	author leith;	state Exp;
branches;
next	1.44;

1.44
date	2007.02.02.16.42.10;	author leith;	state Exp;
branches;
next	1.43;

1.43
date	2007.02.02.15.27.34;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	2007.01.17.16.35.07;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	2006.08.29.13.57.26;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	2006.01.04.14.28.17;	author leith;	state Exp;
branches;
next	1.39;

1.39
date	2005.02.15.15.12.12;	author leith;	state Exp;
branches;
next	1.38;

1.38
date	2005.02.10.19.33.14;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2005.02.07.17.08.06;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2005.01.27.15.50.21;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2005.01.18.16.50.49;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2005.01.07.18.22.14;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2005.01.06.15.24.49;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2005.01.04.16.20.27;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2004.11.12.16.35.39;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2004.11.12.16.08.01;	author bbaxter;	state Exp;
branches;
next	1.29;

1.29
date	2004.11.10.16.36.30;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2004.09.17.13.48.02;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2004.09.14.15.46.22;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2004.08.09.13.21.29;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2004.07.23.18.34.42;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2004.07.23.12.43.29;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2004.07.22.18.32.54;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2004.07.12.16.25.58;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2004.06.29.15.43.31;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2004.06.09.20.04.30;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2004.05.10.18.22.33;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2004.03.29.15.58.47;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2004.03.18.15.12.41;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.11.21.15.24.02;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.18.16.25.59;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.08.15.17.05.55;	author bbaxter;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.02.19.13.22;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.05.21.13.02.36;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.04.24.14.13.39;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.16.19.08.53;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.04.18.05.41;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.03.19.44.17;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.31.16.25.24;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2003.03.26.19.05.50;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2003.03.07.17.08.45;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.21.16.25.21;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.02.14.30.22;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.12.21.07.55;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.09.19.32.43;	author leith;	state Exp;
branches;
next	;


desc
@@


1.71
log
@changes for [too-big], cosmetic,  formatting of echos
@
text
@([ang-step],[ang-limit],[r2],[alignsh],[prj-radius],[iter],[grp],[n-big],[pixsiz])

; <html><head><title>Main refinement group loop</title></head><body><pre>
;
; SOURCE: spider/docs/techs/recon/newprogs/grploop.pam    
;         Original                                   ArDean Leith  Nov 2000
;         %degredations                              ArDean Leith  Feb 2005
;         []                                         ArDean Leith  Dec 2005
;         More stacks & 'RT SQ' selection            ArDean Leith  Dec 2006
;         'AP SH' use                                ArDean Leith  Feb 2007
;         Group sel. filename                        ArDean Leith  Dec 2009
;         Echo formatting                            ArDean Leith  Aug 2010
;         COG centering removed                      ArDean Leith  Sep 2010
;         'AP SH' for 2 iters, Skip=2                ArDean Leith  Sep 2010
;         'TF COR'                                   ArDean Leith  Nov 2010
;         Dala removal                               ArDean Leith  Jan 2012
;         'AP SHC', skip=1, FSC mask                 ArDean Leith  Sep 2012
;         Denoise exp images                         ArDean Leith  Dec 2012
;         'AP' selection changed                     ArDean Leith  Apr 2015
;         [n-big]                                    ArDean Leith  Apr 2015
; 
; PURPOSE: Main refinement loop. Runs for each defocus group on each iteration
;
; CALLED FROM: <a href="./pub_refine_start.pam">pub_refine_start</a>  or   
;              <a href="./refine.pam">refine.pam</a>  
;
; I/O Registers & files are set in: <a href="refine_settings.pam">refine_settings.pam</a>)
;
; INPUT REGISTERS:
;    [ang-step]             Angular steps                     (Varies with iter)
;    [ang-limit]            Restrict angular search           (Varies with iter)
;    [r2]                   Radius of object used in alignment (pixels)
;    [alignsh]              Shift allowed is +-[alignsh]
;    [prj-radius]           Radius of object used in projection
;    [iter]                 Alignment step iteration counter  (Varies with iter)
;    [grp]                  Defocus group                     (Varies with group)
;    [pixsiz]               Pixel size
; OUTPUT REGISTERS:
;    [n-big]                # of images whose proj. angle moved by > 1.5*[ang-step]
;
;  '##' denotes iteration,  '##+' denotes next iteration,  '***' denotes group
; INPUT FILES:
;    [sel_particles]        input/select_***        Group particle selection files
;    [iter_vft]             final/vft##             Current iteration's filtered volume 
;    [temp_ctf_file]        work/ctf***             CTF corrected group volume from prepare
;    [group_align]          final/align##_***       Alignment parameter doc files     
;    [unaligned_images]     input/data***           Unaligned stacked image files  
;    [iter_refangs]         work/ang_refs_##        Ref. angles doc file for this iteration        
;
; OUTPUT FILES:
;    [next_group_align]     final/align##+_***      Alignment parameter doc file
;    [next_group_vol]       work/vol##+_***         Reconstructed group volume
;    [next_group_fsc]       final/fscdoc##+_***     Group FSC curve doc file
;
;    [next_group_vol]_sub1  work/vol_##+_***_sub1   (Created & later deleted)
;    [next_group_vol]_sub2  work/vol_##+_***_sub2   (Created & later deleted)
;    [temp_ref_projs]       tmp/refproj##_***       (Created & later deleted)
; 
; PROCEDURES CALLED: 
;
; INLINE BUFFERS USED: _1, _8

 SYS
   echo -n " Start grploop for iteration: {**[iter]}  Group: {***[grp]} --- " ; date '+ %x  %X'
 
 [r1] = 5.0                         ; First radius for AP (Can alter this)
 [ang-change-thr] = 1.5*[ang-step]  ; Convergence criterion ang. distance limit.
 [next-iter] = [iter]+1

 FI H [maxim],[nx],[ny]             ; Find total number of images (not [numparts])
   [unaligned_images]@@;             ; Input file needed                 (input)
   MAXIM,NX,NY                      ; Max. image number, image size

 UD N [num-refs]                    ; Get number of reference images used
   [iter_refangs]                   ; Reference images angles file      (input)

 ; Multiply Fourier of current volume by CTF file for this group
 TF COR
   [iter_vft]                       ; Fourier of current volume         (input}
   [temp_ctf_file]                  ; CTF file                          (input)
   _1                               ; CTF corrected volume              (output) 
 
 MY FL                              ; Flush results file

 DE                                 ; Remove existing ref projections  
   [temp_ref_projs]@@                ; Template for ref. projections    (output) 

 ; Create stack holding angular reference projections from CTF corrected volume.
 PJ 3F                              ; Projection operation
   _1                               ; CTF corrected volume             (input)
   [prj-radius]                     ; Radius of object
   1-[num-refs]                     ; Ref. angles used    
   [iter_refangs]                   ; Ref. angles doc file             (input)
   [temp_ref_projs]@@******          ; Template for ref. projections    (output) 

 DE                                 ; _1 can be deleted here
   _1                               ; CTF corrected current volume     (removed)
 DE                                 ; Remove existing alignment doc file  
   [next_group_align]               ; Alignment parameter doc file
 DE                                 ; Remove existing scratch file    (rare)  
   [ref_rings]                      ; Reference rings scratch file 

 MY FL                              ; Flush results file

 ; Copy to inline file to increase access speed a little
 ; Note: If INLN_WRTLIN ARRAY OVERFLOWS,  remove: _8@@ and just use [unaligned_images]@@     
 CP                                 ; Copy unaligned images to inline stack
   [unaligned_images]@@              ; Input file needed                (input)
   _8@@                              ; Unaligned images stack           (output)
   [maxim]                          ; Number of images in stack _8@@

 ; Find reference projection matching current aligned image
 ;   (For large images change 'skip' to 2 or 3 to decrease memory)
 
 ; Default for  unknown return value
 [n-big] = -1

 [align-first] = 'N'
 [align-doc]   = '*'
 IF ( [iter] > 1 ) THEN
    [align-first] = 'F'  ! FBS used for alignment 
    [align-doc]   = [group_align]
 ENDIF

 IF ( [iter] <= 2 ) THEN
   AP SHC                           ; (Can change this)  
     [temp_ref_projs]@@******        ; Template for ref. projections    (input)
     1-[num-refs]                   ; Ref. projection file numbers
     [alignsh],1                    ; Shift search range, Step size
     [r1],[r2],1                    ; First, last radial ring, & skip
     [iter_refangs]                 ; Ref. angles file                 (input)
     _8@@******                      ; Template for unaligned images    (input)
     [sel_particles]                ; Particle selection files         (input)
     [align-doc]                    ; No alignment parameter doc file  (input)
     [ang-limit],[ang-change-thr]   ; Angular search restriction
     Y, [align-first], Y            ; Check mir, Do not align first, denoise
     [next_group_align]             ; Alignment parameter doc file     (output)

   ; Report some 'AP SHC' alignment statistics 
   IF ( [iter] == 1 ) THEN 

     UD N  [n-exp]                  ; Find number of exp. images
       [sel_particles]              ; Particle selection files         (input)
     SYS
        echo " Iteration: {**[iter]} Group: {*****[grp]}  Particles:{%I0%[n-exp]} "

   ELSE 

     UD -2,[per-greater],[avg-angdif],[avg-ccrot],[degred],[avg-degred],[avg-impr],[n-exp]
       [next_group_align]           ; Alignment parameter doc file     (input)

     SYS
       echo " Iter: {**[iter]} Group: {***[grp]}  Large angle changes: {%F6.2%[per-greater]}% "
     SYS
       echo " CCROT degred.: {***[degred]}%   Avg. degred.:{%F6.2%[avg-degred]}  Avg. improve.:{%F6.2%[avg-impr]}"
   ENDIF


 ELSE
   AP REF                           ; Poorer search than 'AP SH' but 4-5x faster
     [temp_ref_projs]@@******        ; Template for ref. projections    (input)
     1-[num-refs]                   ; Ref. projection file numbers
     [alignsh]                      ; Shift search range
     [r1],[r2],1                    ; First, last radial ring, & skip
     [iter_refangs]                 ; Ref. angles file                   (input)
     [ref_rings]                    ; No such file if rings fit in-core  (rare output)
     _8@@******                      ; Template for unaligned images      (input)
     [sel_particles]                ; Particle selection files           (input)
     [group_align]                  ; Alignment parameter doc file       (input)
     [ang-limit],[ang-change-thr]   ; Angular search restriction
     Y, Y                           ; Check mir projections, align first
     [next_group_align]             ; Alignment parameter doc file       (output)

   ; Report some 'AP REF' alignment statistics 
   UD -2,[per-greater],[avg-angdif],[avg-cc],[degred],[avg-degred],[avg-impr],[n-exp]
     [next_group_align]           ; Alignment parameter doc file     (input)

   SYS
      echo " Iter: {**[iter]} Group: {***[grp]}  Large angle changes: {%F6.2%[per-greater]}% "

   IF ( [iter] > 3 ) THEN 
      SYS
        echo " CC degred.: {***[degred]}%   Avg. degred.:{%F6.2%[avg-degred]}  Avg. improve.:{%F6.2%[avg-impr]}"
   ENDIF

   UD E                             ; Close doc file access

   ; Return # of images whose projection angle changed by > [ang-change-thr]
   [n-big] = [per-greater] * [n-exp]  

 ENDIF


 ; Apply new alignments to original particle images
 RT SF                          ; Rotate & shift operation
   [unaligned_images]@@******    ; Unaligned original stacked images 
   [sel_particles]              ; Particle selection file            (input) 
   6,0,7,8                      ; Reg. #s for angle, scale, & shift
   [next_group_align]           ; Alignment parameter doc file       (input)
   _8@@******                    ; Current aligned images             (output)
  
 SYS                            ; Echo for isolating stack overflow
   echo " Back projecting group: {****[grp]}"

 MY FL

 ; Calculate new, refined volume using centered projections and 
 ; angles from align doc. file.  Creates two additional volumes from 
 ; random half subsets of images for use in resolution calculation.

 ; (If you have large images which give problems allocating memory in 'BP 32F', 
 ;     substitute operation 'BP 3F'.  Use that operation three times (with 3 
 ;     appropriate selection files for the images to be included) to create 
 ;     the three output volumes one by one.)
 BP 32F                         ; Back Projection - 3D Fourier
   _8@@******                    ; Current aligned images template     (input)
   [sel_particles]              ; Particle selection doc file         (input)
   [next_group_align]           ; Alignment parameter doc file        (input)
   *                            ; No symmetries  
   [next_group_vol]             ; Reconstructed group vol - overall   (output)
   [next_group_vol]_sub1        ; Reconstructed group vol - subset 1  (output)
   [next_group_vol]_sub2        ; Reconstructed group vol - subset 2  (output)

 DE                             ; _8 no longer needed
   _8

 MY FL                          ; Flush results file

 FSC [half],[spfreq],[res]      ; Find phase residual &  shell correl.
   [next_group_vol]_sub1        ; Reconstructed group vol - subset 1  (input)
   [next_group_vol]_sub2        ; Reconstructed group vol - subset 2  (input)
   0.5, [r2]                    ; Shell width, mask radius
   [pixsiz]                     ; Pixel size
   [next_group_fsc]             ; FSC group doc file                  (output)
   *                            ; No Gnuplot file wanted

 SD [iter], [iter],[grp],[res]  ; Save in doc file
   [grp_resol]                  ; Group resolution summary file      (output)

 SYS                             ; Remove ref. projections (no longer needed)
   \rm -f [temp_ref_projs]*.$DATEXT 


 IF ( [iter] > 1 ) THEN         ; Not first iteration
   DE                           ; Remove previous group volume 
     [group_vol]                ;          
   DE                           ; Remove previous subset 1 group vol.
     [group_vol]_sub1           ;    
   DE                           ; Remove previous subset 2 group vol.
     [group_vol]_sub2           ;    
 ENDIF

 MY FL
 RE

; </body></pre></html>

@


1.70
log
@'AP' selection changed, cosmetic
@
text
@d1 1
a1 1
([ang-step],[ang-limit],[r2],[alignsh],[prj-radius],[iter],[grp],[toobig],[pixsiz])
d20 1
d27 1
a27 1
; I/O Registers & files are set in: <a href="./refine settings.pam">refine settings.pam</a>)
d37 1
a37 1
;
d39 1
a39 1
;    [toobig]               % of images whose proj. angle moved by > 1.5*[ang-step]
d115 11
a125 1
 IF ([iter] == 1) THEN
d134 1
a134 1
     *                              ; No alignment parameter doc file  (input)
d136 1
a136 1
     Y, N, Y                        ; Check mir, Do not align first, denoise
d139 2
a140 2
     ; Default for  unknown return value
     [toobig] = 100
d142 4
a145 2
   SYS
     echo " Iteration: {**[iter]} Group: {*****[grp]}"
d147 1
a147 13
 ELSEIF ([iter] == 2) THEN
   AP SHC                           ; (Can change this)  
     [temp_ref_projs]@@******        ; Template for ref. projections    (input)
     1-[num-refs]                   ; Ref. projection file numbers
     [alignsh],1                    ; Shift search range, Step size
     [r1],[r2],1                    ; First, last radial ring, & skip
     [iter_refangs]                 ; Ref. angles file                 (input)
     _8@@******                      ; Template for unaligned images    (input)
     [sel_particles]                ; Particle selection files         (input)
     [group_align]                  ; Alignment parameter doc file     (input)
     [ang-limit],[ang-change-thr]   ; Angular search restriction
     Y, F, Y                        ; Check mir, align first using FSB, denoise
     [next_group_align]             ; Alignment parameter doc file     (output)
d149 8
a156 2
     ; Default for  unknown return value
     [toobig] = 100
a157 2
   SYS
     echo " Iteration: {**[iter]} Group: {*****[grp]}"
d172 13
a184 1
     [next_group_align]             ; Alignment parameter doc file     (output)
a185 4
   ; Check size of change in proj. angle
   ;     %BIG-ANGDIF,       AVG-ANGDIF,  AVG-CCROT, %WORSE,  AVG-WORSE,   AVG-BETTER      
   UD -2,[percent-greater],[AVG-ANGDIF],[avg-ccrot],[degred],[avg-degred],[avg-impr]
     [next_group_align]             ; Alignment parameter doc file     (input)
d188 2
a189 2
   ; Return % of image whose proj. angle moved by > 1.5*[ang-step] criterion
   [toobig] = [percent-greater]* 100
a190 6
   IF ([iter] >= 4) THEN
     SYS
       echo " Iter: {**[iter]} Group: {***[grp]}  Excessive changes: {%F6.2%[percent-greater]}% "
     SYS
       echo " CCROT degred.: {***[degred]}%   Avg. degred.:{%F6.2%[avg-degred]}  Avg. improve.:{%F6.2%[avg-impr]}"
   ENDIF
d193 1
d244 1
a244 1
 IF ([iter] > 1) THEN        ; Not first iteration
@


1.69
log
@gmask name bug
@
text
@d6 14
a19 13
;         Original                                ArDean Leith  Nov 2000
;         %degredations                           ArDean Leith  Feb 2005
;         []                                      ArDean Leith  Dec 2005
;         More stacks & 'RT SQ' selection         ArDean Leith  Dec 2006
;         'AP SH' use                             ArDean Leith  Feb 2007
;         Group sel. filename                     ArDean Leith  Dec 2009
;         Echo formatting                         ArDean Leith  Aug 2010
;         COG centering removed                   ArDean Leith  Sep 2010
;         'AP SH' for 2 iters, Skip=2             ArDean Leith  Sep 2010
;         TF COR                                  ArDean Leith  Nov 2010
;         Dala removal                            ArDean Leith  Jan 2012
;         AP SHC, skip=1, FSC mask                ArDean Leith  Sep 2012
;         Denoise exp images, mask befor bp       ArDean Leith  Dec 2012
a56 1
;    [temp_gmask]           work/gmask_***          (Created & later deleted)
d62 1
a62 1
 VM
a72 8
 ; Create temporary Gaussian mask 
 MO                                 ; Mask
   [temp_gmask]                     ; Mask file                         (output)
   [nx],[ny]                        ; Size 
   G1                               ; Super-gaussian 1
   *                                ; Use image center
   [prj-radius],[prj-radius]        ; Radius

d114 21
a134 1
 IF ([iter] .LE. 2) THEN
d145 1
a145 1
     Y, F, Y                        ; Check mir, align first, denoise
d151 1
a151 1
   VM
d178 2
a179 2
   IF ([iter] .GE. 4) THEN
     VM
d181 1
a181 1
     VM
d193 2
a194 11
 
  ; Soft masking of particle prior to back projection
  MUL 2
   [temp_gmask]                      ; Mask image                 (input)
    _8@@*                        ; Template for image series  (input)   
   [sel_particles]              ; Particle selection file            (input) 
    _8@@*                        ; Template for image series  (output)   
   [sel_particles]              ; Particle selection file            (input) 

 
 VM                             ; Echo for isolating stack overflow
d232 1
a232 1
 VM                             ; Remove ref. projections (no longer needed)
d236 1
a236 4
 DE                             ; Remove soft mask file 
   [temp_gmask]                 ;  
        
 IF ([iter] .GT. 1) THEN        ; Not first iteration
@


1.68
log
@MUL 2 for masking added
denoising added to grploop
@
text
@d184 1
a184 1
   [gmask]                      ; Mask image                 (input)
@


1.67
log
@use FBS in SHC (Y)
@
text
@d18 1
d56 1
d64 1
a64 1

d69 12
d107 1
a107 1
 DE                                 ; Remove existing scratch file  (rare)  
d112 2
a113 5
 FI H [maxim],[nx],[ny]             ; Find total number of images (not [numparts])
   [unaligned_images]@@;             ; Input file needed                (input)
   MAXIM,NX,NY                      ; Max. image number header position

 ; Note: If INLN_WRTLIN ARRAY OVERFLOWS,  replace: _8@@ with disk based stack file     
d133 1
a133 1
     Y, Y                           ; Check mir projections, align first
d182 9
d197 2
a198 2
 ; the corrected angles from align doc. file.  Creates two additional
 ; volumes from random half subsets of images for use in resolution calculation.
d233 3
d237 1
a237 1
   DE                           ; Remove previous group vol. 
@


1.66
log
@fscdoc file name, AP SHC  F rotate
@
text
@d29 1
a29 1
;    [r2]                   Radius of structure used in alignment (pixels)
d31 1
a31 1
;    [prj-radius]           Radius of structure used in projection
d98 1
a98 1
 FI H [maxim]                       ; Find total number of images (not [numparts])
d100 1
a100 1
   MAXIM                            ; Max. image number header position
d122 1
a122 1
     Y, F                           ; Check mir projections, align first
d143 1
a143 1
     Y, F                           ; Check mir projections, align first
@


1.65
log
@ AP SHC, skip=1, FSC mask
@
text
@d50 1
a50 1
;    [next_group_fsc]       final/fsc##+_***        Group FSC curve doc file
d122 1
a122 1
     Y, Y                           ; Check mir projections, align first
d143 1
a143 1
     Y, Y                           ; Check mir projections, align first
d178 1
a178 1
 ; volumes from two subsets of images for use in resolution calculation.
@


1.64
log
@comments
@
text
@d1 2
a2 1
([ang-step],[ang-limit],[radius],[alignsh],[prj-radius],[iter],[grp],[toobig],[sp_maxspfreq])
a10 1
;         tmp dir purge                           ArDean Leith  Mar 2008
d17 1
d29 1
a29 1
;    [radius]               Radius of the structure           (pixels)
d50 1
a50 1
;    [next_group_dres]      final/dres##+           Group resolution curve doc file
d56 1
a56 1
; PROCEDURES CALLED: saveresp
d61 1
a61 1
 echo -n " Start grploop for iteration: {**[iter]}  Group: {***[grp]} --- " ; date '+ %x  %X'
d63 3
a65 3
 [radius1]=5.0                      ; First radius for AP (Can alter this)
 [ang-change-thresh]=1.5*[ang-step] ; Convergence criterion ang. distance limit.
 [next-iter]=[iter]+1
d79 1
a79 1
 [temp_ref_projs]@@                  ; Template for ref. projections    (output) 
d82 1
a82 1
 PJ 3Q                              ; Projection operation
d90 1
a90 2
 _1                                 ; CTF corrected current volume     (removed)

d92 1
a92 1
 [next_group_align]                 ; Alignment parameter doc file
d94 1
a94 1
 [ref_rings]                        ; Reference rings scratch file 
d110 1
d112 12
a123 13
 
    AP SH                             ; (Can change this)  
      [temp_ref_projs]@@******         ; Template for ref. projections    (input)
      1-[num-refs]                    ; Ref. projection file numbers
      [alignsh],1                     ; Shift search range, Step size
      [radius1],[radius],2            ; First, last radial ring, & skip
      [iter_refangs]                  ; Ref. angles file                 (input)
      _8@@******                       ; Template for unaligned images    (input)
      [sel_particles]                 ; Particle selection files         (input)
      [group_align]                   ; Alignment parameter doc file     (input)
      [ang-limit],[ang-change-thresh] ; Angular search restriction
      Y,Y                             ; Check mir projections, align first
      [next_group_align]              ; Alignment parameter doc file     (output)
d125 2
a126 2
    ; Default for  unknown return value
    [toobig]= 100
d128 2
a129 2
    VM
    echo " Iteration: {**[iter]} Group: {*****[grp]}"
d132 19
a150 20
 
    AP REF                            ; Poorer search than 'AP SH' but 4-5x faster
      [temp_ref_projs]@@******         ; Template for ref. projections    (input)
      (1-[num-refs])                  ; Ref. projection file numbers
      [alignsh]                       ; Shift search range
      ([radius1],[radius],1)          ; First, last radial ring, & skip
      [iter_refangs]                  ; Ref. angles file                   (input)
      [ref_rings]                     ; No such file if rings fit in-core  (rare output)
      _8@@******                       ; Template for unaligned images      (input)
      [sel_particles]                 ; Particle selection files           (input)
      [group_align]                   ; Alignment parameter doc file       (input)
      [ang-limit],[ang-change-thresh] ; Angular search restriction
      Y,Y                             ; Check mir projections, align first
      [next_group_align]              ; Alignment parameter doc file     (output)

    ; Check size of change in proj. angle
    ;     %BIG-ANGDIF,       AVG-ANGDIF,  AVG-CCROT, %WORSE,  AVG-WORSE,   AVG-BETTER      
    UD -2,[percent-greater],[AVG-ANGDIF],[avg-ccrot],[degred],[avg-degred],[avg-impr]
      [next_group_align]              ; Alignment parameter doc file     (input)
    UD E                              ; Close doc file access
d152 2
a153 2
    ; Return % of image whose proj. angle moved by > 1.5*[ang-step] criterion
    [toobig]=[percent-greater]* 100
d155 2
a156 2
    IF ([iter] .GE. 4) THEN
       VM
d158 1
a158 1
       VM
d160 1
a160 1
    ENDIF
d164 1
a164 1
 RT SQ                          ; Rotate & shift operation
d172 1
a172 1
 echo " Back projecting group: {****[grp]}"
d194 1
a194 1
 _8
d198 1
a198 1
 RF 3 [unused],[spfreq]         ; Find phase residual &  shell correl.
d201 7
a207 10
   0.5                          ; Ring width
   0.2, 2.0                     ; Lower and upper scale factor
   C                            ; Missing cone
   90.0                         ; Maximum tilt angle 
   3                            ; Factor for noise comparison
   [next_group_dres]            ; FSC group doc file                 (output)

 ; Record this group's reconstruction resolution in doc file
 @@saveresp([sp_maxspfreq],[iter],[grp],[spfreq])
 [grp_resol]                    ; Group resolution summary file      (output)
d210 2
a211 1
 \rm -f [temp_ref_projs]*.$DATEXT 
d214 6
a219 6
    DE                          ; Remove previous group vol. 
    [group_vol]                 ;          
    DE                          ; Remove previous subset 1 group vol.
    [group_vol]_sub1            ;    
    DE                          ; Remove previous subset 2 group vol.
    [group_vol]_sub2            ;    
d224 1
@


1.63
log
@deleted: [temp_ref_projs]@@ before using it
@
text
@d18 1
a18 1
; PURPOSE: Main refinement group loop. Runs for each defocus group on each iteration
d102 1
a102 1
 ; Note: If 'INLN_WRTLIN ARRAY OVERFLOW',  replace: _8@@ with disk based stack file     
a110 1
    ; Use 'AP SH' (Can change this) 
d112 1
a112 1
    AP SH                             ;   
d118 1
a118 1
      _8@@******                       ; Template for exp. aligned images (input)
d133 1
a133 1
    AP REF                            ; Poorer search than 'AP REF' but 4-5x faster
d140 1
a140 1
      _8@@******                       ; Template for exp. aligned images   (input)
@


1.62
log
@no dala files
@
text
@d77 3
d89 1
a89 1
   _1                               ; CTF corrected current volume     (removed)
d92 1
a92 1
   [next_group_align]               ; Alignment parameter doc file
d94 1
a94 1
   [ref_rings]                      ; Reference rings scratch file 
@


1.61
log
@sub1...
@
text
@d16 3
a18 2
;
; PURPOSE: Main refinement group loop.  Runs for each defocus group on each iteration
a44 1
;    [aligned_images]       input/dala##_***        Aligned stacked image files
d46 1
a46 2
; OUTPUT FILES):
;    [next_aligned_images]  work/dala##+_***        Aligned stacked image files
d67 1
a67 1
 [iter_refangs]                     ; Reference images angles file      (input)
d71 3
a73 3
 [iter_vft]                         ; Fourier of current volume         (input}
 [temp_ctf_file]                    ; CTF file                          (input)
 _1                                 ; CTF corrected volume              (output) 
d79 5
a83 5
 _1                                 ; CTF corrected volume             (input)
 [prj-radius]                       ; Radius of object
 1-[num-refs]                       ; Ref. angles used    
 [iter_refangs]                     ; Ref. angles doc file             (input)
 [temp_ref_projs]@@******            ; Template for ref. projections    (output) 
d86 1
a86 1
 _1                                 ; CTF corrected current volume
a87 11
 FI H [maxim],[ns],[nr]             ; Find total number of images (not [numparts])
 [aligned_images]@@                  ; Input file needed                (input)
 MAXIM,NSAM,NROW                                    ; Max. image number header position

 ; Note: If 'INLN_WRTLIN ARRAY OVERFLOW',  replace: _8@@ with disk based stack file

 CP                                 ; Copy current aligned images to inline stack
 [aligned_images]@@                  ; Input file needed                (input)
 _8@@                                ; Current aligned images stack     (output)
 [maxim]                            ; Number of images in stack _8@@
  
d89 3
a91 4
 [next_group_align]                 ; Alignment parameter doc file

 DE                                 ; Remove existing scratch file  
 work/SCR_{**[iter]}_{***[grp]}     ; Reference rings scratch file 
d95 9
a103 4
 [useapsh]= 1                       ; Use 'AP SH' (Can change this)
 IF ([iter] .GE. 3) THEN
    [useapsh] = 0                   ; Use 'AP REF'instead of 'AP SH'
 ENDIF
d107 15
a121 13
 IF ([useapsh] .EQ. 1) THEN
    AP SH                           ; More exhaustive search than 'AP REF' but 4-5x slower
    [temp_ref_projs]@@******         ; Template for ref. projections    (input)
    (1-[num-refs])                  ; Ref. projection file numbers
    ([alignsh],1)                   ; Shift search range, Step size
    ([radius1],[radius],2)          ; First, last radial ring, & skip
    [iter_refangs]                  ; Ref. angles file                 (input)
    _8@@******                       ; Template for exp. aligned images (input)
    [sel_particles]                 ; Particle selection files         (input)
    [group_align]                   ; Alignment parameter doc file     (input)
    [ang-limit],[ang-change-thresh] ; Angular search restriction
    (1)                             ; Check mirrored projections
    [next_group_align]              ; Alignment parameter doc file     (output)
d130 14
a143 14

    AP REF                          ; Poorer search than 'AP REF' but 4-5x faster
    [temp_ref_projs]@@******         ; Template for ref. projections    (input)
    (1-[num-refs])                  ; Ref. projection file numbers
    [alignsh]                       ; Shift search range
    ([radius1],[radius],1)          ; First, last radial ring, & skip
    [iter_refangs]                  ; Ref. angles file                 (input)
    work/SCR_{**[iter]}_{***[grp]}  ; No scratch file if fits in-core
    _8@@******                       ; Template for exp. aligned images (input)
    [sel_particles]                 ; Particle selection files         (input)
    [group_align]                   ; Alignment parameter doc file     (input)
    [ang-limit],[ang-change-thresh] ; Angular search restriction
    (1)                             ; Check mirrored projections
    [next_group_align]              ; Alignment parameter doc file     (output)
d148 2
a149 2
    [next_group_align]              ; Alignment parameter doc file     (input)
    UD E                            ; Close doc file access
d162 1
a162 1
 ; Apply transformations to all original particle images
d164 5
a168 5
 [unaligned_images]@@******      ; Unaligned original stacked images 
 [sel_particles]                ; Particle selection file            (input) 
 (6,0,7,8)                      ; Reg. #s for angle, scale, & shift
 [next_group_align]             ; Alignment parameter doc file       (input)
 _8@@******                      ; Current aligned images             (output)
a169 5
 ; Store aligned projections (Do now in case 'BP' fails)
 CP                             ; Create hard copy of aligned images
 _8@@                            ; Aligned images in inline file      (input)
 [next_aligned_images]@@         ; On disk file                       (output)

d184 7
a190 7
 _8@@******                      ; Current aligned images template     (input)
 [sel_particles]                ; Particle selection doc file         (input)
 [next_group_align]             ; Alignment parameter doc file        (input)
 *                              ; No symmetries  
 [next_group_vol]               ; Reconstructed group vol - overall   (output)
 [next_group_vol]_sub1          ; Reconstructed group vol - subset 1  (output)
 [next_group_vol]_sub2          ; Reconstructed group vol - subset 2  (output)
d198 8
a205 8
 [next_group_vol]_sub1          ; Reconstructed group vol - subset 1  (input)
 [next_group_vol]_sub2          ; Reconstructed group vol - subset 2  (input)
 (0.5)                          ; Ring width
 (0.2,2.0)                      ; Lower and upper scale factor
 C                              ; Missing cone
 (90.0)                         ; Maximum tilt angle 
 (3)                            ; Factor for noise comparison
 [next_group_dres]              ; FSC group doc file                 (output)
a220 2
    DE                          ; Remove previous aligned images
    [aligned_images]            ;    
@


1.60
log
@TF COR
@
text
@d25 2
a26 2
;    [ang-step]             Angular steps                     (varies with iter)
;    [ang-limit]            Restrict angular search           (varies with iter)
d30 2
a31 2
;    [iter]                 Alignment step iteration counter  (varies with iter)
;    [grp]                  Defocus group                     (varies with group)
d38 7
a44 7
;    [sel_particles]        input/select_***             Group particle selection files
;    [iter_vft]             final/vft##                  Current iteration's filtered volume 
;    [temp_ctf_file]        work/ctf***                  CTF corrected group volume from prepare
;    [aligned_images]       input/dala##_***             Aligned stacked image files
;    [group_align]          final/align##+_***           Alignment parameter doc files     
;    [unaligned_images]     input/data***                Unaligned stacked image files  
;    [iter_refangs]         work/ang_refs_##             Ref. angles doc file for this iteration        
d47 4
a50 4
;    [next_group_align]     final/align##_***            Alignment parameter doc file
;    [next_aligned_images]  work/dala##+_***             Aligned stacked image files
;    [next_group_vol]       work/defgrp***/vol##         Reconstructed group volume
;    [next_group_dres]      final/defgrp***/dres##+      Group resolution curve doc file
d52 3
a54 3
;    [next_group_vol]_sub1  work/defgrp***/vol_##+_sub1  (Created & deleted)
;    [next_group_vol]_sub2  work/defgrp***/vol_##+_sub2  (Created & deleted)
;    [temp_ref_projs]       tmp/refproj##_***            (Created & deleted)
d61 1
a61 1
 echo -n " Start iteration: {**[iter]}  Group: {***[grp]}" ; date '+ Time: %x  %X'
d63 2
a64 2
 [radius1]=5.0                             ; First radius for AP (Can alter this)
 [ang-change-thresh]=1.5*[ang-step]        ; Convergence criterion ang. distance limit.
d67 2
a68 2
 UD N [num-refs]                           ; Get number of reference images used
 [iter_refangs]                            ; Reference images angles file      (input)
d72 3
a74 3
 [iter_vft]                                ; Fourier of current volume         (input}
 [temp_ctf_file]                           ; CTF file                          (input)
 _1                                        ; CTF corrected volume              (output) 
d76 1
a76 1
 MY FL                                     ; Flush results file
d79 20
a98 19
 PJ 3Q                                     ; Projection operation
 _1                                        ; CTF corrected volume             (input)
 [prj-radius]                              ; Radius of object
 1-[num-refs]                              ; Ref. angles used    
 [iter_refangs]                            ; Ref. angles doc file             (input)
 [temp_ref_projs]@@******                   ; Template for ref. projections    (output) 

 DE                                        ; _1 can be deleted here
 _1                                        ; CTF corrected current volume

 FI H [maxim]                              ; Find total number of images (not [numparts])
 [aligned_images]@@                         ; Input file needed                (input)
 MAXIM                                     ; Max. image number header position

 ; Note: If 'INLN_WRTLIN ARRAY OVERFLOW',  replace: _8@@ with [aligned_images]@@
 CP                                        ; Copy current aligned images to inline stack
 [aligned_images]@@                         ; Input file needed                (input)
 _8@@                                       ; Current aligned images stack     (output)
 [maxim]                                   ; Number of images in stack _8@@
d100 2
a101 2
 DE                                        ; Remove existing alignment doc file  
 [next_group_align]                        ; Alignment parameter doc file
d103 2
a104 2
 DE                                        ; Remove existing scratch file  
 work/SCR_{**[iter]}_{***[grp]}            ; Reference rings scratch file 
d106 1
a106 1
 MY FL                                     ; Flush results file
d108 1
a108 1
 [useapsh]= 1                              ; Use 'AP SH' (Can change this)
d110 1
a110 1
    [useapsh] = 0                          ; Use 'AP REF'instead of 'AP SH'
d116 12
a127 12
    AP SH                                  ; More exhaustive search than 'AP REF' but 4-5x slower
    [temp_ref_projs]@@******                ; Template for ref. projections    (input)
    (1-[num-refs])                         ; Ref. projection file numbers
    ([alignsh],1)                          ; Shift search range, Step size
    ([radius1],[radius],2)                 ; First, last radial ring, & skip
    [iter_refangs]                         ; Ref. angles file                 (input)
    _8@@******                              ; Template for exp. aligned images (input)
    [sel_particles]                        ; Particle selection files         (input)
    [group_align]                          ; Alignment parameter doc file     (input)
    [ang-limit],[ang-change-thresh]        ; Angular search restriction
    (1)                                    ; Check mirrored projections
    [next_group_align]                     ; Alignment parameter doc file     (output)
d137 13
a149 13
    AP REF                                 ; Poorer search than 'AP REF' but 4-5x faster
    [temp_ref_projs]@@******                ; Template for ref. projections    (input)
    (1-[num-refs])                         ; Ref. projection file numbers
    [alignsh]                              ; Shift search range
    ([radius1],[radius],1)                 ; First, last radial ring, & skip
    [iter_refangs]                         ; Ref. angles file                 (input)
    work/SCR_{**[iter]}_{***[grp]}         ; No scratch file if fits in-core
    _8@@******                              ; Template for exp. aligned images (input)
    [sel_particles]                        ; Particle selection files         (input)
    [group_align]                          ; Alignment parameter doc file     (input)
    [ang-limit],[ang-change-thresh]        ; Angular search restriction
    (1)                                    ; Check mirrored projections
    [next_group_align]                     ; Alignment parameter doc file     (output)
d154 2
a155 2
    [next_group_align]                     ; Alignment parameter doc file     (input)
    UD E                                   ; Close doc file access
@


1.59
log
@cosmetic labels
@
text
@d15 1
d58 1
a58 1
; INLINE BUFFERS USED: _1, _4, _8
d71 1
a71 1
 MU                                        ; Multiply
d74 1
a74 2
 _1                                        ; Fourier of CTF corrected vol      (output)
 *                                         ; End multiplications
a75 7
 FT                                        ; Fourier back transform
 _1                                        ; Fourier of CTF corrected volume   (input)
 _4                                        ; CTF corrected current volume      (output) 

 DE                                        ; _1 can be deleted here 
 _1                                        ; Fourier of CTF corrected vol      (removed)

d80 1
a80 1
 _4                                        ; CTF corrected current volume     (input)
d86 2
a87 2
 DE                                        ; _4 can be deleted here
 _4                                        ; CTF corrected current volume
d89 1
a89 1
 FI X [maxim]                              ; Find total number of images (not [numparts])
d91 1
a91 1
 (26)                                      ; Max. image number header position
d93 1
d98 1
a98 2
 ; Note: If 'INLN_WRTLIN ARRAY OVERFLOW',  replace: _8@@ with [aligned_images]@@
 
d168 6
a173 6
 RT SQ                                     ; Rotate & shift operation
 [unaligned_images]@@******                 ; Unaligned original stacked images 
 [sel_particles]                           ; Particle selection file           (input) 
 (6,0,7,8)                                 ; Reg. numbers for angle, scale, & shift
 [next_group_align]                        ; Alignment parameter doc file      (input)
 _8@@******                                 ; Current aligned images            (output)
d176 3
a178 3
 CP                                        ; Create hard copy of aligned images
 _8@@                                       ; Aligned images in inline file     (input)
 [next_aligned_images]@@                    ; On disk file                      (output)
d180 1
a180 1
 VM                                        ; Echo for isolating stack overflow
d226 1
a226 1
    [group_vol]                 ;   work/vol_{**[iter]}_{***[grp]}      
d228 1
a228 1
    [group_vol]_sub1            ;   work/vol_{**[iter]}_{***[grp]}_sub1
d230 3
a232 3
    [group_vol]_sub2            ;   work/vol_{**[iter]}_{***[grp]}_sub2
    DE                          ; Remove previous current aligned images
    [aligned_images]            ;   work/dala{**[iter]}_{***[grp]}
@


1.58
log
@'AP SH' for 2 iters, Skip=2,  & cosmetic labels
@
text
@d72 2
a73 2
 [temp_ctf_file]                           ; CTF  file     (work/ctf{grp})     (input)
 _1                                        ; _1 created here                   (output)
d81 1
a81 1
 _1                                        ; Fourier of CTF corrected current vol
d86 1
a86 1
 PJ 3Q                                     ; Create reference projections
@


1.57
log
@cosmetic
@
text
@d14 1
d35 1
a35 1
;  '##' denotes iteration,  '##+' denotes next iteration, and '***' denotes group
d37 3
a39 3
;    [sel_particles]        input/select_***             Particle selection file
;    [iter_vft]             final/vft##                  Current filtered volume 
;    [temp_ctf_file]        work/ctf***                  CTF corrected volume from prepare
d41 1
a41 1
;    [group_align]          final/align##+_***           Alignment parameter doc file     
d43 1
a43 1
;    [iter_refangs]         work/ang_refs_##             Ref. angles doc file        
d48 2
a49 2
;    [next_group_vol]       work/defgrp***/vol##         Reconstructed volume
;    [next_group_dres]      final/defgrp***/dres##+      Resolution curve doc file
d104 1
a104 1
 ; Note: If 'INLN_WRTLIN ARRAY OVERFLOW',  replace: _8@@ with [aligned_images]@@ 
d115 1
a115 1
 IF ([iter] .GT. 1) THEN
d124 1
a124 1
    (1-[num-refs])                         ; Ref. projections file numbers
d126 1
a126 1
    ([radius1],[radius],1)                 ; First, last radial ring, & skip
d145 1
a145 1
    (1-[num-refs])                         ; Ref. projections file numbers
d166 6
a171 5
    VM
    echo " Iter: {**[iter]} Group: {***[grp]}  Excessive changes: {%F6.2%[percent-greater]}% "

    VM
    echo " CCROT degred.: {***[degred]}%   Avg. degred.:{%F6.2%[avg-degred]}  Avg. improve.:{%F6.2%[avg-impr]}"
d182 1
a182 1
 ; Store aligned projections (Do now in case BP fails)
d222 1
a222 1
 [next_group_dres]              ; FSC group  doc file                (output)
d224 1
a224 1
 ; Record this groups reconstruction resolution in doc file
@


1.56
log
@extra [temp_ref_projs]@@****** line removed
@
text
@d103 1
a103 1
 ; Note: If 'INLN_WRTLIN ARRAY OVERFLOW',  replace: _8@@ with [aligned_images]@@                                        ; Copy current aligned images to inline stack
@


1.55
log
@COG centering removed
@
text
@a143 2

    [temp_ref_projs]@@******                ; Template for ref. projections    (input)
@


1.54
log
@Echo formatting, better comments
@
text
@d13 1
d17 1
a17 1
; CALLED FROM: <a href="./pub_refine_start.pam">pub_refine_start</a> or   
d20 1
a20 1
; I/O Registers & files are set in: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam)
d23 3
a25 3
;    [ang-step]             Angular steps           (varies with iter)
;    [ang-limit]            Restrict angular search (varies with iter)
;    [radius]               Radius of the structure (pixels)
d27 1
a27 1
;    [prj-radius]           Radius of the structure used in projection
d42 1
a42 1
;    [iter_refangs]         work/ang_refs_##             Ref. angles doc. file        
d48 5
a52 4
;    [next_group_dres]      final/defgrp***/dres##+      Resolution curve doc. file
;    [next_group_vol]_odd   work/defgrp***/vol_##+_odd   (Created & deleted)
;    [next_group_vol]_even  work/defgrp***/vol_##+_even  (Created & deleted)
;    [temp_ref_projs]       /tmp/refproj##_***           (Created & deleted)
d80 1
a80 1
 _1                                        ; Fourier of CTF corrected current volume
d89 1
a89 1
 [iter_refangs]                            ; Ref. angles doc. file            (input)
d129 1
a129 1
    [group_align]                          ; Alignment parameter doc. file    (input)
d138 1
a138 1
    echo " Iteration: {**[iter]} Group: {*****[grp]} "
d153 1
a153 1
    [group_align]                          ; Alignment parameter doc. file    (input)
d161 2
a162 2
    [next_group_align]                        ; Alignment parameter doc file      (input)
    UD E                                      ; Close doc file access
d168 1
a168 1
    echo " Iteration: {**[iter]} Group: {*****[grp]}  Excessive changes: {%f8.2%[percent-greater]}% "
d171 1
a171 1
    echo " CCROT Degredation: {***[degred]}%   Avg. degred.: {%F8.2%[avg-degred]}  Avg. improve.: {%F8.2%[avg-impr]}"
d188 1
a188 1
 echo " Back projecting group: {*****[grp]}"
d194 1
a194 1
 ; volumes from odd/even images for use in resolution calculation.
d201 3
a203 3
 _8@@******                      ; Template for current aligned images  (input)
 [sel_particles]                ; Particle selection doc. file         (input)
 [next_group_align]             ; Alignment parameter doc file         (input)
d205 3
a207 3
 [next_group_vol]tmp            ; Reconstructed 3D file                (output)
 [next_group_vol]_odd           ; Reconstructed 3D file                (output)
 [next_group_vol]_even          ; Reconstructed 3D file                (output)
a213 12
 ; Find center of gravity of the temp. volume
 CG PH [unused],[unused],[unused],[xcg],[ycg],[zcg]  ; Center of Gravity of vol.
 [next_group_vol]tmp            ; Volume                             (input)

 SH F                           ; Shift temp volume to its center of gravity
 [next_group_vol]tmp            ; Temp. volume  file                 (input)
 [next_group_vol]               ; Final group volume                 (output)
 -[xcg],-[ycg],-[zcg]           ; Shift

 DE                             ; Delete temp volume file 
 [next_group_vol]tmp

d215 2
a216 2
 [next_group_vol]_odd           ; First  volume file                (input)
 [next_group_vol]_even          ; Second volume file                (input)
d222 1
a222 1
 [next_group_dres]              ; Resolution document file          (output)
d226 1
a226 1
 [grp_resol]                    ; Resolution summary file           (output)
d228 1
a228 1
 VM                             ; Remove - refproj (no longer needed)
d234 4
a237 4
    DE                          ; Remove previous odd group vol.
    [group_vol]_odd             ;   work/vol_{**[iter]}_{***[grp]}_odd
    DE                          ; Remove previous even group vol.
    [group_vol]_even            ;   work/vol_{**[iter]}_{***[grp]}_even
@


1.53
log
@sp_maxspfreq
@
text
@d11 2
a12 1
;         group sel. filename                     ArDean Leith  Dec 2009
d48 3
a50 3
;    [next_group_vol]_odd   work/defgrp***/vol_##+_odd   (created & deleted)
;    [next_group_vol]_even  work/defgrp***/vol_##+_even  (created & deleted)
;    [temp_ref_projs]       /tmp/refproj##_***           (created & deleted)
d57 1
a57 3
 echo " In grploop, Iteration: {**[iter]}  Group: {***[grp]}"
 VM
 date '+ Time: %x  %X'
d101 1
d119 1
a119 2
    ; 'AP SH' gives more exhaustive search than 'AP REF' but is 4-5x slower
    AP SH 
d140 3
a142 1
    AP REF 
d253 1
a253 1
RE
@


1.52
log
@simplify-rewrite
@
text
@d1 1
a1 1
([ang-step],[ang-limit],[radius],[alignsh],[prj-radius],[iter],[grp],[toobig],[maxspfreq])
d4 8
a11 7
; SOURCE: grploop.pam    Original                            ArDean Leith  Nov 2000
;                        %degredations                       ArDean Leith  Feb 2005
;                        []                                  ArDean Leith  Dec 2005
;                        More stacks & 'RT SQ' selection     ArDean Leith  Dec 2006
;                        'AP SH' use                         ArDean Leith  Feb 2007
;                        tmp dir purge                       ArDean Leith  Mar 2008
;                        group sel. filename                 ArDean Leith  Dec 2009
a12 2
; MASTER COPY: spider/docs/techs/recon/newprogs/
; 
d234 1
a234 1
 @@saveresp([maxspfreq],[iter],[grp],[spfreq])
@


1.51
log
@shortedn comment
@
text
@d10 1
d12 1
a12 1
; MASTER COPY: /net/bali/usr1/spider/docs/techs/recon/newprogs/
d19 2
d34 1
a34 3
; INPUT FILES (SET IN: refine_settings  <a href="./refine_settings.pam">refine_settings.pam</a>.pam):
;    [order_select]         input/order_select           Image ID doc. fil
;    [sorted_order_select]  input/order_select_sort      Image ID doc. fil
d41 1
a41 2
;    [iter_ang_voea]        final/angvoea_##             Ref. angles doc. file        
;    [iter_select_voea]     final/selvoea_##             Ref. angles selection doc. file    
d43 1
a43 1
; OUTPUT FILES (SET IN: refine_settings <a href="./refine_settings.pam">refine_settings.pam</a>.pam):
d66 1
a66 12
 [iter_select_voea]                        ;

 UD N,[numgrps]                            ; Find number of defocus groups
 [sorted_order_select]                     ;            (input)

 ; Get number of images in this group
 DO [i]=1,[numgrps]                        ; Loop over defocus groups  -----------
    ;         GROUP, PART.               
    UD IC [i], [grpt], [numparts]          ; Get number of particles 
    [sorted_order_select]                  ; Doc file listing groups (input)    
    IF ([grpt].EQ.[grp]) EXIT
 ENDDO                                     ; Got number of particles in this group
a67 3
 UD ICE
 [sorted_order_select]

d88 2
a89 2
 [iter_select_voea]                        ; Ref. angles selection doc. file  (input) 
 [iter_ang_voea]                           ; Ref. angles doc. file            (input)
d100 1
a100 1
 [aligned_images]@@                          ; Input file needed                (input)
d112 1
a112 1
 [useapsh]= 0                              ; Do not use 'AP SH' (Can change this)
d126 1
a126 1
    [iter_ang_voea]                        ; Ref. angles file                 (input)
d147 1
a147 1
    [iter_ang_voea]                        ; Ref. angles file                 (input)
@


1.50
log
@clone dir changes
@
text
@d66 1
a66 1
 [iter_select_voea]                        ; Ref. angles selection doc. file  (input)
d69 1
a69 1
 [sorted_order_select]                     ;                                  (input)
@


1.49
log
@rm -rf /tmp/* >& /dev/null
@
text
@d45 1
a45 1
;    [next_aligned_images]  work/dala##+_***@@            Aligned stacked image files
d64 1
a64 1
  
d72 1
a72 1
 DO LB1 [i]=1,[numgrps]                    ; Loop over defocus groups  -----------
d76 2
a77 3
    IF ([grpt].EQ.[grp])GOTO LB2
 LB1
 LB2                                       ; Got number of particles in this group
a97 10
 ; Clear tmp directory and create temp local dir., divert errors to junk
 VM
 \rm -rf /tmp/* >& /dev/null

 VM
 mkdir -p [temp_local_dir]

 VM                                        ; So anyone can delete it
 chmod 777 [temp_local_dir]

d110 1
a110 1
 [aligned_images]                          ; Input file needed                (input)
d114 1
a114 1
 [aligned_images]                          ; Input file needed                (input)
d197 1
a197 1
 [next_aligned_images]                     ; On disk file                      (output)
d263 1
a263 1
    [aligned_images_prefix]     ;   work/dala{**[iter]}_{***[grp]}
@


1.48
log
@tmp dir & AP SH changes
@
text
@d99 1
a99 1
 ; Create and delete tmp directory and tmp files
d101 1
a101 1
 rm -rf /tmp/*
d106 1
a106 1
 VM
@


1.47
log
@/tmp for ref_projs
@
text
@d9 1
d99 10
d159 6
a179 1
 ENDIF
d181 5
a185 5
 ; Check size of change in proj. angle
 ;     %BIG-ANGDIF,       AVG-ANGDIF,  AVG-CCROT, %WORSE,  AVG-WORSE,   AVG-BETTER      
 UD -2,[percent-greater],[AVG-ANGDIF],[avg-ccrot],[degred],[avg-degred],[avg-impr]
 [next_group_align]                        ; Alignment parameter doc file      (input)
 UD E                                      ; Close doc file access
d187 2
a188 2
 ; Return % of image whose proj. angle moved by > 1.5*[ang-step] criterion
 [toobig]=[percent-greater]* 100
d190 2
a191 2
 VM
 echo " Iteration: {**[iter]} Group: {*****[grp]}  Excessive changes: {%f8.2%[percent-greater]}% "
d193 3
a195 2
 VM
 echo " CCROT Degredation: {***[degred]}%   Avg. degred.: {%F8.2%[avg-degred]}  Avg. improve.: {%F8.2%[avg-impr]}"
d211 1
a211 1
 echo " Back projectiing group: {*****[grp]}"
@


1.46
log
@bug deleting: work/dala
@
text
@d46 1
d49 1
a49 2
;    [next_group_dres]      final/defgrp***/dres##+      Resolution curve doc. file
;    [temp_ref_projs]_5@@                                 (created & deleted)
@


1.45
log
@[unaligned_images]@@******
@
text
@d257 1
a257 1
    [aligned_images]            ;   work/dala{**[iter]}_{***[grp]}
@


1.44
log
@[useapsh]= 0
@
text
@a164 8
 ; Apply transformations to all original particle images
 RT SQ                                     ; Rotate & shift operation
 [unaligned_images]@@******                 ; Unaligned original stacked images 
 [sel_particles]                           ; Particle selection file           (input) 
 (6,0,7,8)                                 ; Reg. numbers for angle, scale, & shift
 [next_group_align]                        ; Alignment parameter doc file      (input)
 _8@@                                       ; Current aligned images            (output)
 
d175 1
a175 1
 echo " Iteration: {**[iter]} Group: {*****[grp]}  Excessive changes: {%f8.2%[toobig]} %:{%f8.2%[percent-greater]}% "
d180 9
a188 1
 ; Store aligned projections 
d190 2
a191 2
 _8@@                                       ; Aligned images in inline file      (input)
 [next_aligned_images]                     ; No longer overwrites input files!! (output)
d194 1
a194 1
 echo " Commencing back projection"
@


1.43
log
@[iter1]
@
text
@d126 3
a128 4
 [useapsh]= 0                              ; Do not use 'AP SH'
 IF ([ang-limit] .LT. 0) THEN
    [useapsh]   = 1                        ; Use 'AP SH'instead of  'AP REF'
    [ang-limit] = -[ang-limit]             ; Reset the angular limit
@


1.42
log
@added stacks, named variables
@
text
@d1 1
a1 1
([ang-step],[ang-limit],[radius],[alignsh],[prj-radius],[iter],[grp],[toobig],[iter1],[maxspfreq])
d4 5
a8 4
; SOURCE: grploop.pam     original                            ArDean Leith  Nov 2000
;                         %degredations                       ArDean Leith  Feb 2005
;                         []                                  ArDean Leith  Dec 2005
;                         more stacks & RT SQ selection       ArDean Leith  Dec 2006
a22 1
;    [iter1]                Starting alignment iteration    
d87 1
a87 1
 *
d126 6
d134 31
a164 13
 AP REF 
 [temp_ref_projs]@@******                   ; Template for ref. projections    (input)
 (1-[num-refs])                            ; Ref. projections file numbers
 [alignsh]                                 ; Shift search range
 ([radius1],[radius],1)                    ; First, last radial ring, & skip
 [iter_ang_voea]                           ; Ref. angles file                  (input)
 work/SCR_{**[iter]}_{***[grp]}            ; No scratch file if fits in-core
 _8@@******                                 ; Template for exp. aligned images  (input)
 [sel_particles]                           ; Particle selection files          (input)
 [group_align]                             ; Alignment parameter doc. file     (input)
 [ang-limit],[ang-change-thresh]           ; Angular projection search restriction
 (1)                                       ; Check mirrored projections
 [next_group_align]                        ; Alignment parameter doc file      (output)
d166 2
a167 2
 ; Apply transformations to original exp. images
 RT SQ                                     ; Rotate & shift
d183 2
a184 2
 ;;VM
 ;;echo " Iteration: {**[iter]} Group: {*****[grp]}  Excessive changes: {%f8.2%[toobig]} %:{%f8.2%[percent-greater]}% "
d199 1
a199 1
 ; Calculate new, refined volume using centered projections  and 
d219 1
a219 1
 MY FL
d221 3
a223 4
 ; Find center of the temp. output volume
 CG PH,[unused],[unused],[unused],[xcg],[ycg],[zcg]  ; Center of Gravity of vol.
 [next_group_vol]tmp
 MY FL
d225 1
a225 1
 SH F                           ; Shift temp vol to center of gravity
d243 1
a243 1
 ; Record group resolution in doc file
d250 1
a250 1
 IF ([iter] .GT. [iter1]) THEN  ; Not first iteration
@


1.41
log
@comments for big image methods
@
text
@d1 1
a1 1
([ang-step],[ang-limit],[radius],[winsize],[alignsh],[prj-radius],[iter],[grp],[toobig],[iter1],[maxspfreq])
d4 5
a8 3
; grploop.pam -- Main refinement group loop   al Nov 2000
;                              %degredations  al Feb 2005
;                              []             al Dec 2005
d11 1
a11 1
; PURPOSE:    Runs for each defocus group on each iteration
d13 2
a14 1
; CALLED FROM: <a href="./pub_starter.pam">pub_starter.pam</a>  
d19 1
a19 2
;    [radius]               Radius of the structure
;    [winsize]              Image size
d25 1
d29 1
a29 1
;
d31 19
a49 18
;    input/order_select                   [order_select]        Image ID doc. fil
;    work/select_{***group}               [group_select]        (from prepare)
;    final/vft{**iter}                    [iter_vft]            (from refine)
;    work/ctf{***grp}                     [temp_ctf_file]       (from prepare)
;    input/dala{**iter}_{***group}@@       [aligned_images]      Aligned stacked image files
;    final/align{**iter}_{***group}       [next_group_align]
;    input/data{***grp}@@                  [unaligned_images]    Unaligned stacked image file  
;    final/angvoea_{**iter}               [iter_ang_voea]        
;    final/selvoea_{**iter}               [iter_select_voea] 
;
; OUTPUT FILES(SET IN: refine_settings <a href="./refine_settings.pam">refine_settings.pam</a>.pam):
;    work/dala{**iter+1}_{***group}@@      [next_aligned_images]
;    final/align{**iter+1}_{***group}     [next_group_align]
;    work/vol{**iter}_{***group}          [next_group_vol]      
;    work/vol_{**iter+1}_odd_{***group}   [next_group_vol]_odd  (Deleted in mergegroups)
;    work/vol_{**iter+1}_even_{***group}  [next_group_vol]_even (Deleted in mergegroups)
;    local/refproj{**iter}_{***group}@@    [temp_ref_projs]      (Created & deleted)
;    final/dres{**iter+1}_{***group}      [next_group_dres]     (Resolution output doc. file
d51 1
a51 1
; PROCEDURES CALLED: 
d60 2
d63 15
a77 9
 [radius1]=5.0             ; First radius for AP (Can alter this)
 [converg]=1.5*[ang-step]  ; Convergence criterion angular distance limit.
 
 [numt]=0                  ; Number of angular changes
 [num-greater]=0           ; Number of angular changes greater than iteration stop limit

 UD N [num-refs]
 [iter_select_voea]
 MY FL                     ; Flush results file
a78 2
 UD IC [grp],[num-imgs]    ; Sets [num-imgs]=number of images in this group
 [order_select]
d80 1
a80 1
 [order_select]
d83 4
a86 4
 MU                        ; Multiply
 [iter_vft]                ; Fourier of current volume (final/vft{iter}
 [temp_ctf_file]           ; CTF  file     (work/ctf{grp})
 _1                        ; _1 created here
d89 31
a119 22
 FT                        ; Fourier transform
 _1                        ; Fourier of CTF corrected current volume
 _4                        ; CTF corrected current volume created here 

 DE                        ; _1 can be deleted here 
 _1                        ; Fourier of CTF corrected current volume

 ; Create stack holding angular reference projections from input volume.
 PJ 3Q                     ; Create reference projections
 _4                        ; CTF corrected current volume     (input)
 [prj-radius]              ; Radius of object
 [iter_select_voea]        ; Ref. angles selection doc. file  (input) - selvoea
 [iter_ang_voea]           ; Ref. angles doc. file            (input)
 [temp_ref_projs]@@******   ; Template for ref. projections    (output) - refproj

 DE                        ; _4 can be deleted here
 _4                        ; CTF corrected current volume

 CP                        ; Copy current aligned images to inline stack
 [aligned_images]          ; Input file needed 
 _8@@                       ; Current aligned images stack _8 created here (large)
 [num-imgs]                ; Number of images in stack _8@@
d121 2
a122 2
 DE                        ; Remove existing next alignment doc output file  
 [next_group_align]        ; Alignment doc file
d124 1
a124 4
 DE                        ; Remove existing scratch file  
 work/SCR_{**[iter]}_{***[grp]} ; Reference rings scratch file 

 MY FL                     ; Flush results file
d127 1
a127 1
 ;   (For larger images change skip to 2 or 3 to decrease memory)
d129 26
a154 35
 [temp_ref_projs]@@******   ; Template of existing ref. projections 
 (1-[num-refs])            ; Ref. projections file numbers
 [alignsh]                 ; Shift search range
 ([radius1],[radius],1)    ; First, last ring & skip
 [iter_ang_voea]           ; Ref. angles file  (input)
 work/SCR_{**[iter]}_{***[grp]} ; No scratch file if fits in-core
 _8@@******                 ; Template for current exp. aligned images 
 (1-[num-imgs])            ; Current exp. images file numbers
 [group_align]             ; Exp. images alignment doc. file < < < .....
 [ang-limit]               ; Angular projection search restriction
 (1)                       ; Check mirrored projections
 [next_group_align]        ; Alignment doc file (output)

 ; Close input doc file       
 UD ICE
 [iter_ang_voea]           ; Finished with  angvoea

 ; Use cross-correlation to center 2D images
 ; Use already calculated projections as reference images

 [avg-ccrot]  = 0.0        ; Average correlation coefficient
 [num-impr]   = 0.0        ; CCROT improvement counter
 [avg-impr]   = 0.0        ; Average CCROT improvement
 [avg-degred] = 0.0        ; Average CCROT degredataion
 [degred]     = 0.0        ; CCROT degredation counter

 IQ FI [got-ali]           ; See if have previous alignment
 [group_align]             ; Doc file from previous alignment
 [cols]=0
 IF ([got-ali].GT. 0) THEN ; Find cols. in previous align. doc file
    UD N [got-ali],[cols]
    [group_align]          ; Doc file from previous alignment
 ENDIF

 DO LB5 [img]=1,[num-imgs] ; Loop over all sample images
a155 57
    ; Retrieve new alignment file data (just created above)
    ;          PSI,THE,PHI, REF#,EXP#,  ANG,  SX,  SY,   NPROJ,  DIFF,      CCROT
    UD IC,[img], [d],[d],[d], [ref],[d],[inp],[sx],[sy], [nproj],[ang-diff],[ccrot]
    [next_group_align]                 ; Doc file just created by 'AP REF'

    IF ([cols] .GT. 0) THEN 
       ; Find changes in CC for this iteration

       ;            PSI,THE,PHI, REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT
       UD IC [img], [d],[d],[d], [d],[d],   [d],[d],[d], [d],[d],[ccrot-prev]
       [group_align]                   ; Doc file from previous  'AP REF

       IF ([ccrot] .LT. [ccrot-prev]) THEN
          [avg-degred]=[avg-degred]+([ccrot-prev]-[ccrot]) ; Sum CCROT average degredation
          [degred]=[degred]+1                              ; CCROT degredations counter
       ELSE
          [avg-impr]=[avg-impr]+([ccrot]-[ccrot-prev])     ; Sum CCROT average improvement
          [num-impr]=[num-impr]+1                          ; CCROT improvements counter
       ENDIF
    ENDIF

    IF ([ref] .NE. 0) THEN
       ; Reference projection found within restricted search area
       [numt]=[numt]+1                                  ; Count successful searches
       IF ([ang-diff].GT.[converg])[num-greater]=[num-greater]+1 ; Count large angle displacements
       [avg-ccrot] = [avg-ccrot]+[ccrot]                ; Sum rotational CC's (for average).
    ENDIF

    ; Apply combined transformation to original exp. sample image
    IF ([ref] .GE. 0) THEN            ; No mirror
       RT SQ                          ; Rotate & shift
       [unaligned_images]{******[img]}; Unaligned original images (stack)
       _8@@{******[img]}               ; Current aligned images (output)
       [inp]                          ; Inplane rotation angle
       [sx],[sy]                      ; Shifts

    ELSE                              ; Mirrored
       RT SQ                          ; Rotate & shift
       [unaligned_images]{******[img]}; Unaligned original image
       _1                             ; Temp. output file
       [inp]                          ; Inplane rotation angle
       [sx],[sy]                      ; Shifts

       MR                             ; Mirror
       _1                             ; Rotated, unaligned original image
       _8@@{******[img]}               ; Current aligned images (output)
       Y                              ; Around Y axis
    ENDIF
 LB5

 ; Close doc files       
 UD ICE
 [next_group_align]                  ; Finished with align. doc file
 UD ICE
 [group_align]                       ; Finished with align. doc file

 ; Check size of change in proj. angle
d157 1
a157 4
 [num-greater]=[num-greater]/[numt]
 [toobig]=[num-greater]* 100
 VM
 echo " Iteration: {**[iter]} Group: {*****[grp]}  Excessive changes: {***[toobig]}% "
d159 2
a160 4
 [avg-ccrot]=[avg-ccrot]/[numt]                          ; Averaged CCROT
 IF ([degred].GT. 0) [avg-degred]=[avg-degred]/[degred]  ; Average CCROT degredation
 [degred]=100*[degred]/[num-imgs]                        ; Percent CCROT degredation
 IF ([num-impr] .GT. 0) [avg-impr]=[avg-impr]/[num-impr] ; Average CCROT improvement
a164 9
 SD -1,[avg-ccrot],[degred],[avg-degred],[avg-impr]    ; Save avg. CC... in doc file comment key
 [next_group_align]

 SD E
 [next_group_align]                 ; Finished with next group align doc. file

 DE                                 ; Remove temp. inline files
 _1

d166 3
a168 3
 CP                                 ; Create hard copy of aligned images
 _8@@
 [next_aligned_images]              ; No longer overwrites input files!!
d170 1
a170 1
 VM                                 ; Echo this for isolating stack overflow
d184 3
a186 3
 _8@@******                      ; Template for current aligned images
 [group_select]                 ; Selection doc. file   - select
 [next_group_align]             ; Alignment doc file    - align
d188 3
a190 4
 [next_group_vol]tmp            ; Reconstructed 3D file - voltmp
 [next_group_vol]_odd           ; Reconstructed 3D file - vol_odd
 [next_group_vol]_even          ; Reconstructed 3D file - vol_even

d197 2
a198 2
 ; Center 3D
 CG PH,[unused],[unused],[unused],[xcg],[ycg],[zcg]  ; Center of Gravity of new vol.
d202 6
a207 6
 SH F                           ; Shift new vol.
 [next_group_vol]tmp            ; Input  file - voltmp
 [next_group_vol]               ; Output file - vol
 -[xcg],-[ycg]
 -[zcg]
 DE                             ; Delete temp file - vol{iter}tmp
d210 13
a222 12
 RF 3 [unused],[spfreq]         ; Phase Residual &  shell correl.
 [next_group_vol]_odd           ; First  volume input file  
 [next_group_vol]_even          ; Second volume input file
 (0.5)
 (0.2,2.0)
 C
 (90.0)
 (3)
 [next_group_dres]              ; Output document file - dres

 @@saveresp([maxspfreq],[iter],[grp],[spfreq]) ; Record group resolution in doc file
 [grp_resol]                    ; Output file
@


1.40
log
@uses named registers
@
text
@d29 3
a31 3
;    work/select_{***group}               [group_select]       (from prepare)
;    final/vft{**iter}                    [iter_vft]           (from refine)
;    work/ctf{***grp}                     [temp_ctf_file]      (from prepare)
d41 1
a41 1
;    work/vol{**iter}_{***group}          [next_group_vol]
d45 1
a45 1
;    final/dres{**iter+1}_{***group}      [next_group_dres]     (Created dres output doc. file
d111 1
d240 7
a246 1
 ; the corrected angles from align doc. file
d256 1
@


1.39
log
@x14 passed in for grp. resolution
@
text
@d1 1
a1 1
(x41,x42,x51,x52,x55,x56,x76,x77,x47,x74,x14)
d6 1
d14 9
a22 9
;    x41                     Angular steps           (varies with iter)
;    x42                     Restrict angular search (varies with iter)
;    x51                     Radius of the structure
;    x52                     Image size
;    x55                     Shift allowed is +-x55
;    x56                     Radius of the structure used in porjection
;    x74                     Starting alignment iteration    
;    x76                     Alignment step iteration counter  (varies with iter)
;    x77                     Defocus group                     (varies with group)
d24 1
a24 1
;    x47                     % of images whose proj. angle moved by > 1.5*x41
d39 1
a39 1
;    work/dala{**iter+1}_{***grp}@@        [next_aligned_images]
d44 1
a44 1
;    local/refproj{**iter}_{***grp}@@      [temp_ref_projs]      (Created & deleted)
d51 11
a61 4
      VM
      echo " In grploop, Iteration: {**x76}  Group: {***x77}"
      VM
      date '+ Time: %x  %X'
d63 15
a77 24
      x54=5.0                 ; First radius for AP (Can alter this)
      x17=1.5*x41             ; Convergence criterion angular distance limit.
 
      x58=int(x52/2)+1        ; Image center
      x86=x76+1               ; Next iteration
      x48=0                   ; Number of angular changes
      x46=0                   ; Number of angular changes greater than iteration stop limit
      x99=1

      UD N,x53
      [iter_select_voea]
      MY FL                     ; Flush results file

      UD IC,x77,x79             ; Sets x79 to number of images in this group
      [order_select]
      UD ICE
      [order_select]

      ; Multiply Fourier of current volume by CTF file for this group
      MU                        ; Multiply
      [iter_vft]                ; Fourier of current volume (final/vft{iter}
      [temp_ctf_file]           ; CTF  file     (work/ctf{grp})
      _1                        ; _1 created here
      *
d79 214
a292 215
      FT                        ; Fourier transform
      _1                        ; Fourier of CTF corrected current volume
      _4                        ; CTF corrected current volume created here 

      DE                        ; _1 can be deleted here 
      _1                        ; Fourier of CTF corrected current volume

      ; Create stack holding angular reference projections from input volume.
      PJ 3Q                     ; Create reference projections
      _4                        ; CTF corrected current volume     (input)
      x56                       ; Radius of object
      [iter_select_voea]        ; Ref. angles selection doc. file  (input) - selvoea
      [iter_ang_voea]           ; Ref. angles doc. file            (input)
      [temp_ref_projs]@@******   ; Template for ref. projections    (output) - refproj

      DE                        ; _4 can be deleted here
      _4                        ; CTF corrected current volume

      CP                        ; Copy current aligned images to inline stack
      [aligned_images]          ; Input file needed 
      _8@@                       ; Current aligned images stack _8 created here (large)
      x79                       ; Number of images in stack _8@@

      DE                        ; Remove existing next alignment doc output file  
      [next_group_align]        ; Alignment doc file

      DE                        ; Remove existing scratch file  
      work/SCR_{**x76}_{***x77} ; Reference rings scratch file 

      MY FL                     ; Flush results file

      ; Find reference projection matching current aligned image
      AP REF 
      [temp_ref_projs]@@******   ; Template of existing ref. projections 
      (1-x53)                   ; Ref. projections file numbers
      x55                       ; Shift search range
      (x54,x51,1)               ; First, last ring & skip
      [iter_ang_voea]           ; Ref. angles file  (input)
      work/SCR_{**x76}_{***x77} ; No scratch file if fits in-core
      _8@@******                 ; Template for current exp. aligned images 
      (1-x79)                   ; Current exp. images file numbers
      [group_align]             ; Exp. images alignment doc. file < < < .....
      x42                       ; Angular projection search restriction
      (1)                       ; Check mirrored projections
      [next_group_align]        ; Alignment doc file (output)

      ; Close input doc file       
      UD ICE
      [iter_ang_voea]           ; Finished with  angvoea

      ; Use cross-correlation to center 2D images
      ; Use already calculated projections as reference images

      x91 = 0.0                 ; Average correlation coefficient
      x37 = 0.0                 ; CCROT improvement counter
      x38 = 0.0                 ; Average CCROT improvement
      x39 = 0.0                 ; Average CCROT degredataion
      x40 = 0.0                 ; CCROT degredation counter

      IQ FI x95                 ; See if have previous alignment
      [group_align]             ; Doc file from previous alignment
      x96 = 0
      IF (x95.GT. 0) THEN       ; Find cols. in previous align. doc file
         UD N,x95,x96
        [group_align]           ; Doc file from previous alignment
      ENDIF

      DO LB5 x21=1,x79          ; Loop over all sample images

         ; Retrieve new alignment file data (just created above)
         ;          PSI,THE,PHI, REF#,EXP#,  ANG,SX,SY,   NPROJ,DIFF,CCROT
         UD IC,x21, x80,x80,x80, x81,x80,    x61,x62,x63, x80,x12,x31
         [next_group_align]                 ; Doc file just created by 'AP REF'

         IF (x96 .GT. 0) THEN 
            ; Find changes in CC for this iteration

            ;          PSI,THE,PHI, REF#,EXP#,  ANG,SX,SY,   NPROJ,DIFF,CCROT
            UD IC,x21, x80,x80,x80, x93,x80,    x80,x80,x80, x80,x94,x90
            [group_align]                   ; Doc file from previous  'AP REF

            IF (x31 .LT. x90) THEN
               x39 = x39 + (x90-x31)        ; Sum CCROT average degredation
               x40 = x40 + 1                ; CCROT degredations counter
            ELSE
               x38 = x38+(x31-x90)          ; Sum CCROT average improvement
               x37 = x37+1                  ; CCROT improvements counter
             ENDIF
         ENDIF

         IF (x81 .NE. 0) THEN
            ; Reference projection found within restricted search area
            x48 = x48 + 1                ; Count successful searches
            IF (x12.GT.x17)x46 = x46 + 1 ; Count large angle displacements
            x91 = x91+x31                ; Sum rotational CC's (for average).
         ENDIF

         ; Apply combined transformation to original exp. sample image
         IF (x81 .GE. 0) THEN            ; No mirror
            RT SQ                        ; Rotate & shift
            [unaligned_images]{******x21}; Unaligned original images (stack)
            _8@@{******x21}               ; Current aligned images (output)
            x61                          ; Inplane rotation angle
            x62,x63                      ; Shifts

         ELSE                            ; Mirrored
            RT SQ                        ; Rotate & shift
            [unaligned_images]{******x21}; Unaligned original image
            _1                           ; Temp. output file
            x61                          ; Inplane rotation angle
            x62,x63                      ; Shifts

            MR                           ; Mirror
            _1                           ; Rotated, unaligned original image
            _8@@{******x21}               ; Current aligned images (output)
            Y                            ; Around Y axis
         ENDIF
      LB5

      ; Close doc files       
      UD ICE
      [next_group_align]                 ; Finished with align. doc file
      UD ICE
      [group_align]                      ; Finished with align. doc file

      ; Check size of change in proj. angle
      ; Return % of image whose proj. angle moved by > 1.5*x41 criterion
      x46 = x46 / x48
      x47 = x46 * 100
      VM
      echo " Iteration: {**x76} Group: {*****x77}  Excessive changes: {***x47}% "

      x92 = x91 / x48                     ; Averaged CCROT
      IF (x40 .GT. 0) x39 = x39 / x40     ; Average CCROT degredation
      x40 = 100* x40 / x79                ; Percent CCROT degredation
      IF (x37 .GT. 0) x38 = x38 / x37     ; Average CCROT improvement

      VM
      echo " CCROT Degredation: {***x40}%   Avg. degred.: {%F8.2%x39}  Avg. improve.: {%F8.2%x38}"

      SD -1,x92,x40,x39,x38               ; Save avg. CC... in doc file comment key
      [next_group_align]

      SD E
      [next_group_align]                 ; Finished with next group align doc. file

      ; Remove temp. inline files
      DE
      _1

      ; Store aligned projections 
      CP                                 ; Create hard copy of aligned images
      _8@@
      [next_aligned_images]              ; No longer overwrites input files!!

      VM                                 ; Echo this for isolating stack overflow
      echo " Commencing back projection"

      MY FL

      ; Calculate new, refined volume using centered projections  and 
      ; the corrected angles from align doc. file
      BP 32F                         ; Back Projection - 3D Fourier
      _8@@******                      ; Template for current aligned images
      [group_select]                 ; Selection doc. file   - select
      [next_group_align]             ; Alignment doc file    - align
      *                              ; No symmetries  
      [next_group_vol]tmp            ; Reconstructed 3D file - voltmp
      [next_group_vol]_odd           ; Reconstructed 3D file - vol_odd
      [next_group_vol]_even          ; Reconstructed 3D file - vol_even

      DE                             ; _8 no longer needed
      _8

      MY FL

      ; Center 3D
      CG PH,x11,x11,x11,x21,x22,x23  ; Center of Gravity of new vol.
      [next_group_vol]tmp
      MY FL

      SH F                           ; Shift new vol.
      [next_group_vol]tmp            ; Input  file - voltmp
      [next_group_vol]               ; Output file - vol
      -x21,-x22
      -x23
      DE                             ; Delete temp file - vol{iter}tmp
      [next_group_vol]tmp

      RF 3 x69,x68                         ; Phase Residual &  shell correl.
      [next_group_vol]_odd           ; First  volume input file  
      [next_group_vol]_even          ; Second volume input file
      (0.5)
      (0.2,2.0)
      C
      (90.0)
      (3)
      [next_group_dres]              ; Output document file - dres

      @@saveresp(x14,x76,x77,x68)     ; Record group resolution in doc file
      [grp_resol]                    ; Output file

      VM                             ; Remove - refproj (no longer needed)
      \rm -f [temp_ref_projs]*.$DATEXT 

      IF (x76 .GT. x74) THEN         ; Not first iteration
         DE                          ; Remove previous group vol. 
         [group_vol]                 ;   work/vol_{**x76}_{***x77}      
         DE                          ; Remove previous odd group vol.
         [group_vol]_odd             ;   work/vol_{**x76}_{***x77}_odd
         DE                          ; Remove previous even group vol.
         [group_vol]_even            ;   work/vol_{**x76}_{***x77}_even
         DE                          ; Remove previous current aligned images
         [aligned_images]            ;   work/dala{**x76}_{***x77}
      ENDIF
d294 1
a294 1
      MY FL
@


1.38
log
@CCROT degredation % error fixed
@
text
@d1 1
a1 1
(x41,x42,x51,x52,x55,x56,x76,x77,x47,x74)
d269 1
a269 1
      RF 3                           ; Phase Residual &  shell correl.
d279 3
d285 2
a286 2
      IF(x76.LT.x75) THEN            ; Not last iteration
         DE                          ; Remove group vol. from this iter
d288 1
a288 1
         DE                          ; Remove odd group vol.
d290 1
a290 1
         DE                          ; Remove even group vol.
d292 1
a292 1
         DE                          ; Remove current aligned images
@


1.37
log
@date
@
text
@d5 1
a5 1
;
d66 1
a66 1
      MY FL                   ; Flush results file
d68 1
a68 1
      UD IC,x77,x79           ; Sets x79 to number of images in this group
d74 4
a77 4
      MU                      ; Multiply
      [iter_vft]              ; Fourier of current volume (final/vft{iter}
      [temp_ctf_file]         ; CTF  file     (work/ctf{grp})
      _1                      ; _1 created here
d80 3
a82 3
      FT                      ; Fourier transform
      _1                      ; Fourier of CTF corrected current volume
      _4                      ; CTF corrected current volume created here 
d84 2
a85 2
      DE                      ; _1 can be deleted here 
      _1                      ; Fourier of CTF corrected current volume
d88 14
a101 14
      PJ 3Q                   ; Create reference projections
      _4                      ; CTF corrected current volume     (input)
      x56                     ; Radius of object
      [iter_select_voea]      ; Ref. angles selection doc. file  (input) - selvoea
      [iter_ang_voea]         ; Ref. angles doc. file            (input)
      [temp_ref_projs]@@****** ; Template for ref. projections    (output) - refproj

      DE                   ; _4 can be deleted here
      _4                   ; CTF corrected current volume

      CP                   ; Copy current aligned images to inline stack
      [aligned_images]     ; Input file needed 
      _8@@                  ; Current aligned images stack _8 created here (large)
      x79                  ; Number of images in stack _8@@
d103 2
a104 2
      DE                   ; Remove existing next alignment doc output file  
      [next_group_align]   ; Alignment doc file
d106 1
a106 1
      DE                   ; Remove existing scratch file  
d109 1
a109 1
      MY FL                ; Flush results file
d134 4
a137 4
      x37 = 0.0                 ; Average degredataion
      x38 = 0.0                 ; Average improvement
      x39 = 0.0                 ; Improvement counter
      x40 = 0.0                 ; Degredation counter
d162 2
a163 4
               x39 = x39 + (x90-x31)        ; Sum average degredation
               x40 = x40 + 1                ; Degredations counter
               ;;VM
               ;;echo {***x21} DEGRADES - Ref: {******x93} Diff: {%f6.1%x94}
d165 2
a166 4
               x38 = x38+(x31-x90)          ; Sum average improvement
               x37 = x37+1                  ; Improvements counter
               ;;VM
               ;;echo {***x21} BETTER --- Ref: {******x93} Diff: {%f6.1%x94} CCROT: {%f6.0%x90}...{%f6.0%x31}"
d172 3
a174 3
            x48 = x48 + 1                 ; Count successful searches
            IF (x12.GT.x17)x46 = x46 + 1  ; Count large angle displacements
            x91 = x91+x31                 ; Sum rotational CC's (for average).
d210 1
a210 1
      echo " Iteration: {**x76} Group: {*****x77}   Excessive changes: {***x47}% CCROT Degredation: {***x40}%%"
d213 3
a215 3
      IF (x40 .GT. 0) x39 = x39 / x40     ; Average degredation
      x40 = x40 / x79                     ; Percent CCROT Degredation
      IF (x37 .GT. 0) x38 = x38 / x37     ; Average improvement
d218 1
a218 1
      echo " CCROT Degredation: {***x40}%   Avg. degredation: {%F8.2%x39}  Avg. improvement: {%F8.2%x37}"
d231 1
a231 1
      CP                             ; Create hard copy of aligned images
d233 1
a233 1
      [next_aligned_images]          ; No longer overwrites input files!!
d235 1
a235 1
      VM                             ; Echo this for isolating stack overflow
d279 1
a279 1
      VM                           ; Remove - refproj (no longer needed)
d282 9
a290 9
      IF(x76.LT.x75) THEN          ; Not last iteration
         DE                        ; Remove group vol. from this iter
         [group_vol]               ;   work/vol_{**x76}_{***x77}      
         DE                        ; Remove odd group vol.
         [group_vol]_odd           ;   work/vol_{**x76}_{***x77}_odd
         DE                        ; Remove even group vol.
         [group_vol]_even          ;   work/vol_{**x76}_{***x77}_even
         DE                        ; Remove current aligned images
         [aligned_images]          ;   work/dala{**x76}_{***x77}
@


1.36
log
@comments
@
text
@d53 1
a53 1
      date
@


1.35
log
@added CCROT degredation output back
@
text
@d8 1
a8 1
; PURPOSE:    Runs  for each defocus group on each iteration
d51 1
a51 1
      echo "In grploop, Iteration: {**x76}  Group: {***x77}"
d106 3
d214 1
a214 1
      echo "Iteration: {**x76} Group: {*****x77}   Excessive changes: {***x47}%"
d221 4
a224 1
      SD -1,x92,x40,x39,x38               ; Save avg. CC in doc file
d240 1
a240 1
      echo "Commencing back projection"
@


1.34
log
@cosmetic
@
text
@d108 1
a108 1
      ; Use AP REF to find ref. projection matching current aligned image
d110 1
a110 1
      [temp_ref_projs]@@******  ; Template of existing ref. projections 
d125 1
a125 1
      [iter_ang_voea]        ; Finished with  angvoea
a128 1
      ; Calculate shifts
d130 13
a142 1
      x91 = 0.0               ; Average correlation coefficient
d144 1
a144 1
      DO LB5 x21=1,x79     ; Loop over all sample images
d149 1
a149 1
         [next_group_align]             ; Doc file just created by 'AP REF'
d151 2
d154 15
a168 5
        IF(x81.NE.0) THEN
            ; Ref. projection found within restricted search area
            x48=x48+1                    ; Count successful searches
            IF(x12.GT.x17)x46=x46+1      ; Count large angle displacements
            x91=x91+x31                  ; Sum rotational CC's (for average).
d171 7
d179 1
a179 1
         IF(x81.GE.0) THEN               ; No mirror
d213 4
a216 1
      x92=x91/x48                        ; Averaged CCROT
d218 1
a218 1
      SD -1,x92                          ; Save avg. CC in doc file
@


1.33
log
@ echo "Commencing back projection"
@
text
@d26 1
a26 1
; INPUT FILES (SET IN: refine settings  <a href="./refine settings.pam">refine settings.pam</a>.pam):
d37 1
a37 1
; OUTPUT FILES(SET IN: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam):
@


1.32
log
@      work/SCR_{**x76}_{***x77} ; No scratch file if fits in-core
@
text
@d200 5
@


1.31
log
@removed degredation statistics
@
text
@d110 12
a121 12
      [temp_ref_projs]@@****** ; Template of existing ref. projections 
      (1-x53)               ; Ref. projections file numbers
      x55                   ; Shift search range
      (x54,x51,1)           ; First, last ring & skip
      [iter_ang_voea]       ; Ref. angles file  (input)
      SCR.{******x77}       ; No scratch file if fits in-core
      _8@@******             ; Template for current exp. aligned images 
      (1-x79)               ; Current exp. images file numbers
      [group_align]         ; Exp. images alignment doc. file < < < .....
      x42                   ; Angular projection search restriction
      (1)                   ; Check mirrored projections
      [next_group_align]    ; Alignment doc file (output)
@


1.30
log
@changed AP REF's .CHECK MIRRORED POSITIONS input from (1.0) to (1)
@
text
@a131 4
      x37 = 0.0               ; Average degredataion
      x38 = 0.0               ; Average improvement
      x39 = 0.0               ; Improvement counter
      x40 = 0.0               ; Degredation counter
a134 4
         ; Retrieve current alignment data (from previous iteration)
         UD IC,x21, x80,x80,x80, x81,x80,    x61,x62,x63, x80,x12,x90
         [group_align]                  ; Doc file from previous  'AP REF'

a139 11
         IF (x31 .LT. x90) THEN
            x39=x39+(x90-x31)            ; Sum average degredation
            x40 = x40 + 1                ; Degredations counter
            ;;VM
            ;;echo {***x21} DEGRADES-- Ref: {******x81} Diff: {%f6.1%x12} CCROT: {%f6.0%x90}...{%f6.0%x31}"
         ELSE
            x38=x38+(x31-x90)            ; Sum average improvement
            x37=x37+1                    ; Improvements counter
            ;;VM
            ;;echo {***x21} BETTER---- Ref: {******x81} Diff: {%f6.1%x12} CCROT: {%f6.0%x90}...{%f6.0%x31}"
         ENDIF
d183 1
a183 7
      x92=x91/x48                          ; Averaged CCROT
      if(x40.gt.0)x39=x39/x40              ; Average degredation
      x40=x40/x79                          ; Percent CCROT Degredation
      if(x37.gt.0)x38=x38/x37              ; Average improvement

      VM
      echo Percent degredation: {%f10.2%x40}  Avg deg.: {%f10.2%x39}  Avg improve: {%f10.2%x38}
d185 1
a185 1
      SD -1,x92,x40,x39,x38                ; Save avg. CC in doc file
@


1.29
log
@ccrot tracking output added
@
text
@d120 1
a120 1
      (1.0)                 ; Check mirrored projections
@


1.28
log
@{{ bug
@
text
@d48 1
a48 1
; INLINE BUFFERS USED: _1,_2,_3 ,_8
a67 2
      x78=1.0                 ; Beginning image number

a105 3
      ; Use AP REF to find ref. projection matching current aligned image
      x19 = 1.0            ; Check mirrored images

d108 1
d111 1
a111 1
      x78-x53               ; Ref. projections file numbers
d117 1
a117 1
      x78-x79               ; Current exp. images file numbers
d120 1
a120 1
      x19                   ; Mirrored projection check flag
d131 28
a158 9
      x91=0.0                ; Average correlation coefficient

      DO LB5 x21=x78,x79     ; Loop over all sample images

         ; Retrieve alignment file data (just created above)
         ;          PSI,THE,PHI, MIR-REF#,EXP#, ANG,SX,SY,   NPROJ,DIFF,CCROT

         UD IC,x21, x80,x80,x80, x81,x80,       x61,x62,x63, x80,x12,x31
         [next_group_align]              ; Doc file just created by 'AP REF'
d160 1
a160 1
         IF(x81.NE.0) THEN
d170 2
a171 2
            [unaligned_images]{******x21}  ; Unaligned original images (stack)
            _8@@{******x21}                 ; Current aligned images (output)
d177 1
a177 1
            [unaligned_images]{******x21}  ; Unaligned original image
d184 1
a184 1
            _8@@{******x21}                 ; Current aligned images (output)
d192 14
d207 4
a210 2
      x91=x91/x48                        ; Averaged cross correlation
      SD -1,x91                          ; Save avg. CC in doc file
d219 5
a223 4
      DE
      _2
      DE
      _3
d236 3
a263 8
      ; Store aligned projections 
      CP                             ; Create hard copy of aligned images
      _8@@
      [next_aligned_images]          ; No longer overwrites input files!!

      DE
      _8

d278 1
a278 7
   ; Check size of change in proj. angle
   ; Return % of image whose proj. angle moved by > 1.5*x41 criterion
   x46 = x46 / x48
   x47 = x46 * 100
   VM
   echo "Iteration: {**x76} Group: {***x77}   Excessive changes: {***x47}%"
   MY FL
@


1.27
log
@******x21 for > 10000 images
DE [group_bpr] not needed used DE [group_vol]
@
text
@d162 1
a162 1
            [unaligned_images]{{******x21}  ; Unaligned original image
d169 1
a169 1
            _8@@{{******x21}                 ; Current aligned images (output)
@


1.26
log
@angular restrict for first iter uses x42 now
@
text
@d155 2
a156 2
            [unaligned_images]{****x21}  ; Unaligned original images (stack)
            _8@@{****x21}                 ; Current aligned images (output)
d162 1
a162 1
            [unaligned_images]{****x21}  ; Unaligned original image
d169 1
a169 1
            _8@@{****x21}                 ; Current aligned images (output)
d240 7
a246 7
      IF(x76.GT.x74) THEN          ; Not first iteration
         DE                        ; Remove bpr from this iter
         [group_bpr]              
         DE                        ; Remove bpr_odd
         [group_bpr]_odd
         DE                        ; Remove bpr_even
         [group_bpr]_even
d248 1
a248 1
         [aligned_images]
@


1.25
log
@more * in exp image name
@
text
@a108 1
      x18 = 0.0            ; No angular restriction
a110 3
      IF (x76.GE. 2) THEN  ; Second... iteration
         x18 = x42         ; Angular projection search restriction
      ENDIF
d123 1
a123 1
      x18                   ; Angular projection search restriction
@


1.24
log
@UD ICE [next_group_align]
@
text
@d124 1
a124 1
      _8@@****               ; Template for current exp. aligned images 
@


1.23
log
@close [next_group_align] before SD -1
@
text
@d180 1
a180 1
      [group_align]                      ; Finished with align. doc file
@


1.22
log
@x56 for projection radius
@
text
@d178 4
a184 4

      ; Close doc files       
      UD ICE
      [group_align]                      ; Finished with align. doc file
@


1.21
log
@psi,the,phi
@
text
@d1 1
a1 1
(x41,x42,x51,x52,x55,x76,x77,x47,x74)
d18 1
d92 1
a92 1
      x51                     ; Radius of object
@


1.20
log
@cosmetic
@
text
@d1 1
a1 1
(x41,x42,x51,x52,x55,x76,x77,x47,x74,x75)
a18 1
;    x75                     Ending alignment   iteration   
d55 1
a55 1
      x17=1.5*x41             ; Convergence criterion Angular distance limit.
d108 2
a109 2
      x14 = 0.0            ; No angular restriction
      x15 = 1.0            ; Check mirrored images
d112 1
a112 1
         x14 = x42         ; Angular projection search restriction
d126 2
a127 2
      x14                   ; Angular projection search restriction
      x15                   ; Mirrored projection check flag
d132 1
a132 1
      [iter_ang_voea]                   ; Finished with  angvoea
d143 1
a143 1
         ; PHI,THE,PSI,      REF#, EXP#, ANG, SX,SY,NPROJ,   DIFF, CCROT
d145 2
a146 2
         UD IC,x21, x80,x80,x80, x81,x80, x61,   x62,x63,x80, x12,x31
         [next_group_align]          ; Doc file just created by 'AP REF'
d150 3
a152 3
            x48=x48+1                ; Count successful searches
            IF(x12.GT.x17)x46=x46+1  ; Count large angle displacements
            x91=x91+x31              ; Sum rotational CC's (for average).
d183 1
a183 1
      [group_align]                  ; Finished with align. doc file
d186 1
a186 1
      [next_group_align]             ; Finished with next group align doc. file
@


1.19
log
@comments & cosmetic
@
text
@d144 1
a144 1
         ; <,<,<,              REF#, EXP#, INP<, SX,SY,NPROJ, < DIFF, CCROT
@


1.18
log
@ap ref
@
text
@d22 2
d112 1
a112 1
      IF (x76.EQ. 2) THEN  ; Second iteration
a114 5

      IF (x76.GT. 2) THEN  ; Third... iteration
         x14 = x42         ; Angular projection search restriction
         x15 = 1.0         ; Check mirrored images
      ENDIF
d255 2
a256 2
   ; Check size of angular distance
   ; Return % of image whose proj. angle moved by > x17 criterion
@


1.17
log
@ap ref
@
text
@d25 1
a25 1
;    input/order_select                   [order_select]       Image ID doc. fil
d36 7
a42 7
;    work/dala{**iter+1}_{***grp}@@           [next_aligned_images]
;    final/align{**iter+1}_{***group}        [next_group_align]
;    work/vol{**iter}_{***group}             [next_group_vol]
;    work/vol_{**iter+1}_odd_{***group}      [next_group_vol]_odd  (deleted in mergegroups)
;    work/vol_{**iter+1}_even_{***group}     [next_group_vol]_even (deleted in mergegroups)
;    local/refproj{**iter}_{***grp}@@         [temp_ref_projs]      (created & deleted)
;    final/dres{**iter+1}_{***group}         [next_group_dres]     (created dres output doc. file
d67 1
a69 1

d93 1
a93 1
      [temp_ref_projs]_n@@****** ; Template for ref. projections  (output) - refproj
a105 6

      x56=2*x52            ; Double the size
      x57=2*x55+1          ; Shift allowed is +-x55, input images padded
      x95=x52-x55+1
      x60=x55+1            ; Center of the windowed CCF

d120 2
a121 2
      AP REFT
      [temp_ref_projs]_n@@****** ; Template of existing ref. projections 
d125 1
a125 1
      [iter_ang_voea]       ; Input - angvoea ref. angles file
d132 1
a132 1
      [next_group_align]    ; Output - alignment doc file
d147 1
a147 1
         ; <,<,<, REF#, CCROT, INPLANE<, SX,SY,MIRROR, < DIFF, PEAKV
d149 2
a150 2
         UD IC,x21, x80,x80,x80, x81,x31, x61, x62,x63,x64, x12
         [next_group_align]   ; Doc file just created by 'AP REF'
d154 3
a156 5
            x48=x48+1
            IF(x12.GT.x17)x46=x46+1    ; Count large angle displacements

            ; Sum the rotational correlation coefficient (for average).
            x91=x91+x31
d160 1
a160 1
         IF(x64.LE.0) THEN               ; No mirror
d164 2
a165 2
            x61                          ; Angle
            x62,x63                      ; Shift
d170 3
a172 3
            _1                           ;  (output)
            x61                          ; Angle
            x62,x63                      ; Shift
d181 1
a181 1
      x91=x91/x48
d192 1
a192 1
      ; Remove inline files
a199 1

d244 2
a245 2
;;;      VM                           ; Remove - refproj (no longer needed)
;;;      \rm -f [temp_ref_projs]_n*.$DATEXT 
d254 2
@


1.16
log
@align doc file used
@
text
@d22 2
a23 1

d26 1
a26 1
;    work/defgrp(***grp}/select           [group_select]       (from prepare)
d30 1
a30 1
;    final//align{**iter}_{***group}      [next_group_align]
d38 5
a42 6
;    final/defgrp{***grp}/apmd{**iter+1}     [next_group_apmd]
;    work/defgrp{***grp}/vol{**iter}         [next_group_vol]
;    work/defgrp{***grp}/vol_{**iter+1}_odd  [next_group_vol]_odd  (deleted in mergegroups)
;    work/defgrp{***grp}/vol_{**iter+1}_even [next_group_vol]_even (deleted in mergegroups)
;    local/refproj{**iter}_{***grp}@@         [temp_ref_projs]    (created & deleted)
;    final/defgrp{***grp}/dres{**iter+1}     [next_group_dres]   (created dres output doc. file
d54 1
a54 1
      x45=1.5*x41             ; Angular distance limit for stopping iters.
d60 1
a60 1
      x47=0                   ; Not OK to stop iterating
d93 1
a93 1
      [temp_ref_projs]@@****** ; Template for ref. projections    (output) - refproj
a94 1

d103 2
a104 2
      DE                   ; Remove existing next ang doc output file  
      [next_group_apmd]    ; apmd doc file
a110 1
      MY FL                ; Flush results file
d112 3
a114 1
      ; Use AP to find ref. projection matching each current aligned image
d116 3
a118 11
      ; x76 - selector: ali = 1, alr=2, aln=3
      IF (x76.EQ.1) THEN   ;  first iteration
         AP MD      
         [temp_ref_projs]@@******  ; Template of ref. projs 
         x78-x53           ; File numbers
         x54,x51           ; First & last ring
         (0)               ; Skip
         SCR.{******x77}   ; No scratch file wanted
         _8@@****           ; Template for current aligned images 
         x78-x79           ; File numbers
         [next_group_apmd] ; Output - apmd doc file
d120 3
d124 15
d140 3
a142 32
      IF (x76.EQ. 2) THEN  ; Second iteration
         ; Check mirrored positions only during second iteration
         AP RD
         [temp_ref_projs]@@******  ; Template of ref. projections 
         x78-x53           ; File numbers
         x54,x51           ; First & last ring
         (0)               ; Skip
         [iter_ang_voea]   ; Input - angvoea file
         SCR.{******x77}   ; No scratch file if fits in-core
         _8@@****           ; Template for current aligned images 
         x78-x79           ; File numbers
         [group_align]     ; Input  - align 
         x42               ; Angular restriction
         [next_group_apmd] ; Output - apmd doc file

      ENDIF                

      IF (x76.GE.3) THEN     ; Third or later iteration
         ;  Restricted search, do not check mirrored positions.
         AP RN
         [temp_ref_projs]@@******  ; Template for ref. projections 
         x78-x53           ; File numbers
         x54,x51           ; First & last ring
         (0)               ; Skip
         [iter_ang_voea]   ; Input - angvoea file
         SCR.{******x77}   ; No scratch file if fits in-core
         _8@@****           ; Template for current aligned images 
         X78-X79           ; File numbers
         [group_align]     ; Input  - align 
         x42               ; Angular restriction
         [next_group_apmd] ; Output - apmd doc file
      ENDIF
a147 3
      DE                    ; Remove existing  group align doc file 
      [next_group_align]

d152 2
a153 85
         ; x83 contains inplane rotation angle
         ; For iterations > 1, x12 contains angular difference
         UD S,x21,x81,x82,x83,x11,x11,x11,x12
         [next_group_apmd]   ; Doc file just created by 'AP'

         IF(x81.EQ.0) THEN
            ; No ref. projection found, set everything to zero
            x31=0
            x32=0
            x83=0
            x94=0
         ELSE

            RT SQ               ; Rotate the current aligned image
            _8@@{****x21}        ; Current aligned original image  input   
            _1                  ; Rotated aligned original image output
            x83                 ; Inplane rotation angle from 'AP'
            (0,0)               ; No shift

            IF(x81.LT.0) THEN
               ; Experimental image has to be mirrored
               x94=1
               x81=-x81
               MR              ; Mirror experimental image
               _1
               _2
               Y               ; Mirror around Y axis

               PD              ; Pad mirrored image to 2X size 
               _2
               _3              ; Padded mirrored output
               x56,x56
               N
               (0.000E+00)
               (1,1)           ; Upper left corner
            ELSE
               x94=0           ; No need to mirror
               PD              ; Pad image to 2X size
               _1
               _3              ; Padded output
               x56,x56
               B
               (1,1)           ; Upper left corner
            ENDIF

            UD IC,x81,x66,x67,x68        ; Get angles from ref. image
            [iter_ang_voea]              ; angvoea

            IF(x76.GT.x74)  THEN         ; Not first iteration
               x48=x48+1
               IF(x12.GT.x45)x46=x46+1   ; Count large displacements
            ENDIF

            ; (this could be done once?? al Mar 03)
            PD                          ; Pad ref. projection 
            [temp_ref_projs]@@{******x81} 
            _2
            x56,x56
            N
            (0.000E+00)
            (1,1)                       ; Upper left corner
       
            CC N                        ; Calculate cross-correlation
            _3
            _2                          ; Padded reference image
            _3                          ; CC image

            WI                          ; Window from padded image
            _3                          ; CC image
            _2
            x57,x57
            x95,x95

            PK x10,x11,x11,x11,x31,x32,x33
            _2
            (0)
            IF (x10 .LE. 0.0) THEN
               ; When there was no peak found, translation is (0,0).  In this 
               ; case get a value at the origin of the CCF
               ; and store in in shift document file.  This value is needed for
               ; sorting and calculation of the average correlation coeff.
                GP x33
               _2
               x60,x60
            ENDIF
d155 2
a156 2
            ; Get the average correlation coefficient.
            x91=x91+x33
d158 4
a161 4
            x31=-x31
            x32=-x32
         ENDIF
         IF(x94.EQ.1) x31=-x31
d163 2
a164 21
         ; Combine rotation, mirror, and shift with the previous transformation
         ; Format of the align parameters doc file is:
         ; angle, angle, angle, cc, inplane angle, Sx, Sy, mirror, ang. diff.

         UD IC,x21,x11,x11,x11,x11,x23,x24,x25,x29
         [group_align]         ; Input  - align(from previous iter)

         ; Combine transformations including mirror
         IF(x29.EQ.0) THEN
            SA P,x61,x62,x63
            x23,x24,x25
            x83,x31,x32
            x64=x94
         ELSE
            x35=-x83
            x36=-x31
            SA P,x61,x62,x63
            x23,x24,x25
            x35,x36,x32
            x64=0
            IF(x94.EQ.0) x64=1 ; Mirrored
d167 2
a168 2
         ; Apply combined transformation to the original experimental image
         IF(x64.EQ.0) THEN
d171 1
a171 1
           _8@@{****x21}                  ; Current aligned images (output)
d174 2
a175 1
         ELSE
d178 1
a178 1
            _1
d183 2
a184 2
            _1                           ; Rotated, naligned original image
           _8@@{****x21}                  ; Current aligned images (output)
a186 8

         ; Save alignment parameters
         ; angle, angle, angle, cc, inplane angle, Sx, Sy, mirror, ang. diff
         ; x64=flag for Y-mirror (0-no mirror; 1-mirror)
         ; x12=angular difference in this iteration
         SD x21,x66,x67,x68,x82,x61,x62,x63,x64,x12         
         [next_group_align]   ; Next align. doc file

d189 2
a190 2
      x91=x91/x79
      SD -1,x91
d193 1
a193 1
      ; Close doc file usages        
a194 3
      [iter_ang_voea]                ; Finished with  angvoea

      UD ICE
a207 6
      ; Check size of angular distance
      IF(x76.GT.x74)  THEN           ; Not first iteration
         ; If fewer than 5% moved by more than 1.5* step used can stop
         x46 = x46 / x48
         IF(x46.LE.0.05) x47=1       ; OK to stop for this group (returned)
      ENDIF
d219 1
d253 2
a254 2
      VM                           ; Remove - refproj (no longer needed)
      \rm -f [temp_ref_projs]*.$DATEXT 
d264 5
d270 1
a270 1
   echo "Iteration: {***x76} Group: {***x77} Returns x47: {***x47}"
@


1.15
log
@makealign bug
@
text
@d29 1
a29 1
;    final/trans{**iter}_{***grp}         [group_trans] (from inital alignment)
a30 1
;    final/defgrp{***grp}/angles{**iter}  [group_angles]        (for iter 2...)
d36 1
a36 2
;    final/trans{**iter+1}_{***grp}          [next_group_trans]
;    final/defgrp{***grp}/angles{**iter+1}   [next_group_angles]
d87 1
a87 1
      ; Create stack holding angular projections from input volume.
d93 1
a93 1
      [temp_ref_projs]@@******   ; Template for ref. projections   (output) - refproj
d123 1
a123 1
         SCR.{******x77}    ; No scratch file wanted
d138 1
a138 1
         SCR.{******x77}    ; No scratch file if fits in-core
d141 1
a141 1
         [group_angles]    ; Input  - angles 
d155 1
a155 1
         SCR.{******x77}    ; No scratch file if fits in-core
d158 1
a158 1
         [group_angles]    ; Input  - angles 
d167 2
a168 10
      DE                   ; Remove existing  group ang doc file 
      [next_group_angles]
      DE                   ; Remove existing next group trans doc file
      [next_group_trans]   

      x91=0.0   ; Average correlation coefficient

      DO LB5 x21=x78,x79
         UD S,x21,x81,x11,x83,x11,x11,x11,x12
         [next_group_apmd]   ; apmd output doc file was created above
d170 9
d187 5
a191 5
            RT SQ               ; Rotate the current aligned images
            _8@@{****x21}        ; Current aligned images     
            _1                  ; Rotated aligned original images
            x83                 ; Angle
            (0,0)               ; Shift
d200 1
a200 1
               Y
d202 1
a202 1
               PD              ; Pad to 2X size 
d204 1
a204 1
               _3
d208 1
a208 1
               (1,1)
d210 2
a211 2
               x94=0          ; No need to mirror
               PD             ; Pad to 2X size
d213 1
a213 1
               _3
d216 1
a216 1
               (1,1)
d219 1
a219 1
            UD IC,x81,x66,x67,x68        ; Get angles
a221 3
            SD x21,x66,x67,x68           ; Save angles
            [next_group_angles]          

d224 1
a224 1
               IF(x12.GT.x45)x46=x46+1   ; Increment large displacement counter
d234 1
a234 1
            (1,1)
d266 1
d268 6
a273 7
         ; Combine rotation, mirror, and shift
         IF(x94.EQ.1) x31=-x31
         ; Combine with the previous transformation
         ; Format of the transformation parameters doc file is:
         ;  angle, Sx, Sy, 0-1 flag for Y-mirror (0-no mirror; 1-mirror)
         UD IC,x21,x23,x24,x25,x29
         [group_trans]         ; Input  - trans(iter)
a274 1
         ;@@combat[x23,x24,x25,x29,x83,x31,x32,x94,x61,x62,x63,x64]
a290 3
         SD x21,x61,x62,x63,x64
         [next_group_trans]      ; Next trans. doc file

d293 5
a297 5
            RT SQ               ; Rotate & shift
            [unaligned_images]{****x21}  ; Unaligned original images stack
           _8@@{****x21}         ; Current aligned images (output)
            x61
            x62,x63
d299 2
a300 2
            RT SQ               ; Rotate & shift
            [unaligned_images]{****x21}  ; Unaligned original images stack
d302 7
a308 6
            x61
            x62,x63
            MR                  ; Mirror
            _1
           _8@@{****x21}         ; Current aligned images (output)
            Y
d310 8
d322 1
a322 1
      [next_group_trans]
a324 6
      SD E
      [next_group_trans]             ; Finished with next group trans. file
 
      SD E
      [next_group_angles]            ; Finished with next group angles file

d329 4
a332 1
      [group_trans]                  ; Finished with trans. doc file
d342 1
a342 1
      ; Angular distance
d349 2
a350 2
      ; Calculate new, refined volume using centered 
      ; projections  and the corrected angles from angular doc. file
d352 1
a352 1
      _8@@******                       ; Template for current aligned images
d354 1
a354 1
      [next_group_angles]            ; Angles doc file       - angles
d384 1
a384 1
      ; store aligned projections 
@


1.14
log
@changed 5 stars to 6 stars
@
text
@d6 1
a6 1
; MASTER COPY: /net/bali/usr1/spider/docs/techs/recon/programs/
d39 1
a39 1
;    final/defgrp{***grp}/apmd{**iter+1}     [group_apmd]
d107 1
a107 1
      [group_apmd]         ; apmd doc file
d128 1
a128 1
         [group_apmd]      ; Output - apmd doc file
d145 1
a145 1
         [group_apmd]      ; Output - apmd doc file
d162 1
a162 1
         [group_apmd]      ; Output - apmd doc file
d178 1
a178 1
         [group_apmd]   ; apmd doc file created above
@


1.13
log
@*** empty log message ***
@
text
@d95 1
a95 1
      [temp_ref_projs]@@*****   ; Template for ref. projections   (output) - refproj
d121 1
a121 1
         [temp_ref_projs]@@*****  ; Template of ref. projs 
d125 1
a125 1
         SCR.{*****x77}    ; No scratch file wanted
d135 1
a135 1
         [temp_ref_projs]@@*****  ; Template of ref. projections 
d140 1
a140 1
         SCR.{*****x77}    ; No scratch file if fits in-core
d152 1
a152 1
         [temp_ref_projs]@@*****  ; Template for ref. projections 
d157 1
a157 1
         SCR.{*****x77}    ; No scratch file if fits in-core
d233 1
a233 1
            [temp_ref_projs]@@{*****x81} 
d354 1
a354 1
      _8@@*****                       ; Template for current aligned images
@


1.12
log
@*** empty log message ***
@
text
@d95 1
a95 1
      [temp_ref_projs]*****   ; Template for ref. projections   (output) - refproj
d102 1
a102 1
      {**x76}_{***x77}@@    ; Input file needed 
d121 1
a121 1
         [temp_ref_projs]*****  ; Template of ref. projs 
d135 1
a135 1
         [temp_ref_projs]*****  ; Template of ref. projections 
d152 1
a152 1
         [temp_ref_projs]*****  ; Template for ref. projections 
d233 1
a233 1
            [temp_ref_projs]{*****x81} 
d389 1
a389 1
      [next_aligned_images]{**x86}_{***x77}@@ ; No longer overwrites input files!!
@


1.11
log
@if then's decreased
@
text
@d102 1
a102 1
      [aligned_images]     ; Input file needed 
d389 1
a389 1
      [next_aligned_images]          ; No longer overwrites input files!!
d394 2
a395 2
      DE                           ; Remove - refproj (no longer needed)
      [temp_ref_projs] 
a396 1

a403 2
         DE                        ; Remove dala02.....
         [aligned_images] 
d406 1
a406 1
   echo "Iteration: {***x76} group: {***x77} returns x47: {***x47}"
@


1.10
log
@*** empty log message ***
@
text
@d180 38
a217 9
         IF (x76.NE.2) THEN
            ; I do not know why alr3dapmd did not use this test, al
            IF(x81.EQ.0) THEN
               ; No ref. projection found, set everything to zero
               x31=0
               x32=0
               x83=0
               x94=0
               GOTO LB80
d219 6
a224 1
         ENDIF
d226 4
a229 14
         RT SQ               ; Rotate the current aligned images
         _8@@{****x21}        ; Current aligned images     
         _1                  ; Rotated aligned original images
         x83                 ; Angle
         (0,0)               ; Shift

         IF(x81.LT.0) THEN
            ; Experimental image has to be mirrored
            x94=1
            x81=-x81
            MR              ; Mirror experimental image
            _1
            _2
            Y
d231 3
a233 1
            PD              ; Pad to 2X size 
a234 1
            _3
d239 2
a240 4
         ELSE
            x94=0          ; No need to mirror
            PD             ; Pad to 2X size
            _1
d242 2
a243 4
            x56,x56
            B
            (1,1)
         ENDIF
d245 5
a249 2
         UD IC,x81,x66,x67,x68        ; Get angles
         [iter_ang_voea]              ; angvoea
d251 12
a262 2
         SD x21,x66,x67,x68           ; Save angles
         [next_group_angles]          
d264 2
a265 4
         IF(x76.GT.x74)  THEN    ; Not first iteration
            x48=x48+1
            IF(x12.GT.x45)x46=x46+1 ; Increment large displacement counter
         ENDIF
d267 2
a268 30
         ; (this could be done once?? al Mar 03)
         PD                     ; Pad ref. projection 
         [temp_ref_projs]{*****x81} 
         _2
         x56,x56
         N
         (0.000E+00)
         (1,1)
       
         CC N      ; Calculate cross-correlation
         _3
         _2        ; Padded reference image
         _3        ; CC image

         WI        ; Window from padded image
         _3        ; CC image
         _2
         x57,x57
         x95,x95
         PK x10,x11,x11,x11,x31,x32,x33
         _2
         (0)
         IF (x10 .LE. 0.0) THEN
            ; When there was no peak found, translation is (0,0).  In this 
            ; case get a value at the origin of the CCF
            ; and store in in shift document file.  This value is needed for
            ; sorting and calculation of the average correlation coeff.
             GP x33
            _2
            x60,x60
a270 7
         ; Get the average correlation coefficient.
         x91=x91+x33

         x31=-x31
         x32=-x32

        LB80
d272 1
a272 3
         IF(x94.EQ.1) THEN
            x31=-x31
         ENDIF
d281 1
a281 1
         IF(x29.EQ.0)  THEN
d292 2
a293 5
            IF(x94.EQ.0) THEN
               x64=1             ; Mirrored
            ELSE
               x64=0             ; Not mirrored
            ENDIF
a316 1
      
d325 1
a325 1
      [next_group_trans]             ; Next group trans file
d328 1
a328 1
      [next_group_angles]            ; Next group angles file
d331 1
a331 1
      [iter_ang_voea]                ; angvoea
d334 1
a334 1
      [group_trans]          ; Input  - trans(iter)
d345 1
a345 1
      IF(x76.GT.x74)  THEN    ; Not first iteration
d348 1
a348 1
         IF(x46.LE.0.05)  x47=1 ; OK to stop for this group (returned)
d409 1
a409 1
   echo "Grploop: {***x77} returning x47: {***x47}"
@


1.9
log
@notes
@
text
@a11 2
; I/O Registers and files are set in: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam); INPUT REGISTERS:
;
d22 2
a23 2
;
; INPUT FILES:
d29 1
a29 1
;    final/trans{**iter}_{***grp}         [current_group_trans] (from inital alignment)
d35 1
a35 1
; OUTPUT FILES:
d95 2
a96 1
      [temp_ref_projs]@@*****  ; Template for ref. projections   (output) - refproj
d102 1
a102 1
      [aligned_images]@@    ; Input file needed 
d106 1
a106 1
      DE                   ; Remove existing apmd doc. file  
a113 1

a116 1
      ; Output angles to registers to group_apmd  doc. file
d121 1
a121 1
         [temp_ref_projs]@@*****  ; Template of ref. projs 
d127 1
a127 1
         x78-x79           ; Current aligned image file numbers
d135 1
a135 1
         [temp_ref_projs]@@*****  ; Template of ref. projections 
d142 1
a142 1
         x78-x79           ; Current aligned image file numbers
d152 1
a152 1
         [temp_ref_projs]@@*****  ; Template for ref. projections 
d159 1
a159 1
         x78-x79           ; Current aligned image file numbers
d176 2
a177 4
      DO LB5 x21=x78,x79   ; Loop over all images

         ; Retrieve angles for this exp. image from AP doc. file
         UD S,x21,x81,x11,x83,x11,x11,x11,x12   
d194 1
a194 1
         _1                  ; Rotated aligned original image
d198 2
a199 1
         IF(x81.LT.0) THEN          ; Experimental image must be mirrored
d202 3
a204 3
            MR                      ; Mirror experimental image
            _1                      ; Rotated aligned original images
            _2                      ; Temp mirrored, aligned original images
d207 3
a209 3
            PD                      ; Pad to 2X size 
            _2                      ; Temp mirrored, aligned original images
            _3                      ; Padded, rotated aligned original images
d215 4
a218 4
            x94=0                   ; No need to mirror
            PD                      ; Pad to 2X size
            _1                      ; Rotated aligned original images
            _3                      ; Padded, rotated aligned original images
d237 1
a237 1
         [temp_ref_projs]@@{*****x81} 
d249 1
a249 1
         WI        ; Window from padded CC image
d251 1
a251 1
         _2        ; Windowed (orig. size) image
d254 1
a254 2

         PK x10,x11,x11,x11,x31,x32,x33    ; Peak search
d274 2
a275 2
         ; Combine rotation, mirror, and shift with the previous transformation
         IF(x94.EQ.1) THEN   ; mirror correction
d278 1
a278 1

d282 1
a282 1
         [current_group_trans]         ; Input  - trans(iter)
d284 1
a286 1
            ; Not mirrored
a291 1
            ; Mirrored
d308 2
a309 8
         IF(x64.EQ.0) THEN               ; Not mirrored
            RT SQ                        ; Rotate & shift
            [unaligned_images]{****x21}  ; Unaligned original image 
            _8@@{****x21}                 ; Current aligned images (output)
            x61                          ; Rotation
            x62,x63                      ; Shift
         ELSE                            ; Mirrored
            RT SQ                        ; Rotate & shift
d311 12
a322 7
            _1                           ; Temp. inline file
            x61                          ; Rotation
            x62,x63                      ; Shift

            MR                           ; Mirror
            _1                           ; Temp. inline file
           _8@@{****x21}                  ; Aligned exp. image (output)
d343 1
a343 1
      [current_group_trans]          ; Input  - trans(iter)
a352 2
;     ---------------------- End of alirn ----------------------------

d398 1
a398 1
      [next_aligned_images]@@         ; No longer overwrites input files!!
@


1.8
log
@comments improvd
@
text
@d12 2
d24 2
a25 2

; INPUT FILES (SET IN: refine settings  <a href="./refine settings.pam">refine settings.pam</a>.pam):
d37 1
a37 1
; OUTPUT FILES(SET IN: refine settings <a href="./refine settings.pam">refine settings.pam</a>.pam):
@


1.7
log
@*** empty log message ***
@
text
@a96 1

d105 1
a105 1
      DE                   ; Remove existing next ang doc output file  
d113 1
d117 1
d128 1
a128 1
         x78-x79           ; File numbers
d143 1
a143 1
         x78-x79           ; File numbers
d160 1
a160 1
         X78-X79           ; File numbers
d177 4
a180 2
      DO LB5 x21=x78,x79
         UD S,x21,x81,x11,x83,x11,x11,x11,x12
d197 1
a197 1
         _1                  ; Rotated aligned original images
d201 1
a201 2
         IF(x81.LT.0) THEN
            ; Experimental image has to be mirrored
d204 3
a206 3
            MR              ; Mirror experimental image
            _1
            _2
d209 3
a211 3
            PD              ; Pad to 2X size 
            _2
            _3
d217 4
a220 4
            x94=0          ; No need to mirror
            PD             ; Pad to 2X size
            _1
            _3
d251 1
a251 1
         WI        ; Window from padded image
d253 1
a253 1
         _2
d256 2
a257 1
         PK x10,x11,x11,x11,x31,x32,x33
d277 2
a278 2
         ; Combine rotation, mirror, and shift
         IF(x94.EQ.1) THEN
d281 1
a281 1
         ; Combine with the previous transformation
a286 1
         ;@@combat[x23,x24,x25,x29,x83,x31,x32,x94,x61,x62,x63,x64]
d289 1
d295 1
d312 8
a319 8
         IF(x64.EQ.0) THEN
            RT SQ               ; Rotate & shift
            [unaligned_images]{****x21}  ; Unaligned original images stack
           _8@@{****x21}         ; Current aligned images (output)
            x61
            x62,x63
         ELSE
            RT SQ               ; Rotate & shift
d321 7
a327 6
            _1
            x61
            x62,x63
            MR                  ; Mirror
            _1
           _8@@{****x21}         ; Current aligned images (output)
@


1.6
log
@*** empty log message ***
@
text
@d46 1
a46 1
; PROCEDURES CALLED: lang
d65 1
a65 1
      <iter_select_voea>
d70 1
a70 1
      <order_select>
d73 1
a73 1
      <order_select>
d77 2
a78 2
      <iter_vft>              ; Fourier of current volume (final/vft{iter}
      <temp_ctf_file>         ; CTF  file     (work/ctf{grp})
d93 3
a95 3
      <iter_select_voea>      ; Ref. angles selection doc. file  (input) - selvoea
      <iter_ang_voea>         ; Ref. angles doc. file            (input)
      <temp_ref_projs>@@*****  ; Template for ref. projections   (output) - refproj
d102 1
a102 1
      <aligned_images>@@    ; Input file needed 
d107 1
a107 1
      <group_apmd>         ; apmd doc file
d121 1
a121 1
         <temp_ref_projs>@@*****  ; Template of ref. projs 
d128 1
a128 1
         <group_apmd>      ; Output - apmd doc file
d135 1
a135 1
         <temp_ref_projs>@@*****  ; Template of ref. projections 
d139 1
a139 1
         <iter_ang_voea>   ; Input - angvoea file
d143 1
a143 1
         <group_angles>    ; Input  - angles 
d145 1
a145 1
         <group_apmd>      ; Output - apmd doc file
d152 1
a152 1
         <temp_ref_projs>@@*****  ; Template for ref. projections 
d156 1
a156 1
         <iter_ang_voea>   ; Input - angvoea file
d160 1
a160 1
         <group_angles>    ; Input  - angles 
d162 1
a162 1
         <group_apmd>      ; Output - apmd doc file
d170 1
a170 1
      <next_group_angles>
d172 1
a172 1
      <next_group_trans>   
d178 1
a178 1
         <group_apmd>   ; apmd doc file created above
d225 1
a225 1
         <iter_ang_voea>              ; angvoea
d228 1
a228 1
         <next_group_angles>          
d237 1
a237 1
         <temp_ref_projs>@@{*****x81} 
d282 1
a282 1
         <current_group_trans>         ; Input  - trans(iter)
d305 1
a305 1
         <next_group_trans>      ; Next trans. doc file
d310 1
a310 1
            <unaligned_images>{****x21}  ; Unaligned original images stack
d316 1
a316 1
            <unaligned_images>{****x21}  ; Unaligned original images stack
d330 1
a330 1
      <next_group_trans>
d334 1
a334 1
      <next_group_trans>             ; Next group trans file
d337 1
a337 1
      <next_group_angles>            ; Next group angles file
d340 1
a340 1
      <iter_ang_voea>                ; angvoea
d343 1
a343 1
      <current_group_trans>          ; Input  - trans(iter)
a359 9

@@lang(x45,x11)
<group_angles>
<next_group_angles>
final/defgrp{***x77}/apmd_doc_{**x76}   
x11 ; DEBUG reg 11
;x47=0
;IF(x11.LT.0.05) x47 = 1

d366 2
a367 2
      <group_select>                 ; Selection doc. file   - select
      <next_group_angles>            ; Angles doc file       - angles
d369 5
a373 4
      <next_group_vol>tmp            ; Reconstructed 3D file - voltmp
      <next_group_vol>_odd           ; Reconstructed 3D file - vol_odd
      <next_group_vol>_even          ; Reconstructed 3D file - vol_even
MY FL
d376 3
a378 2
      <next_group_vol>tmp
MY FL
d380 2
a381 2
      <next_group_vol>tmp            ; Input  file - voltmp
      <next_group_vol>               ; Output file - vol
a383 1
MY FL
d385 1
a385 1
      <next_group_vol>tmp
d388 2
a389 2
      <next_group_vol>_odd           ; First  volume input file  
      <next_group_vol>_even          ; Second volume input file
d395 1
a395 1
      <next_group_dres>              ; Output document file - dres
d400 1
a400 1
      <next_aligned_images>@@         ; No longer overwrites input files!!
d406 1
a406 1
      <temp_ref_projs> 
d411 1
a411 1
         <group_bpr>              
d413 1
a413 1
         <group_bpr>_odd
d415 1
a415 1
         <group_bpr>_even
d417 1
a417 1
         <aligned_images> 
@


1.5
log
@*** empty log message ***
@
text
@d95 1
a95 1
<temp_ref_projs>_tmp@@*****  ; Template for ref. projections   (output) - refproj
a96 10
CE AD                        ; "De-noise" the reference projections
<temp_ref_projs>_tmp@@
<temp_ref_projs>@@
CPF
(6)          ; Iterations
;HEG         ; Hegerl
;(10)        ; Iterations
;(.2)        ; Timestep
             ; Sigma & Lambda
MY FL
a357 1
x46 ; DEBUG reg 46
d381 1
a381 1

d385 1
a385 1

d391 1
a391 1

@


1.4
log
@*** empty log message ***
@
text
@d75 1
a75 1
      ; Get all aligned input projections
d77 2
a78 2
      <iter_vft>              ; Input file for this iter. (final/vft{iter}
      <temp_ctf_file>         ; Multiplier input file     (work/ctf{grp})
d83 2
a84 2
      _1
      _4                      ; _4 created here 
d87 1
a87 1
      _1
d91 1
a91 1
      _4                      ; 3D input file               (input)
d93 3
a95 3
      <iter_select_voea>      ; Ref. angles selection doc. file   (input) - selvoea
      <iter_ang_voea>         ; Ref. angles doc. file      (input)
<temp_ref_projs>_tmp@@*****  ; Template for projections   (output) - refproj
d97 1
a97 1
CE AD                        ; "De-noise" the reference images
d108 2
a109 2
      DE                    ; _4 can be deleted here
      _4
d111 4
a114 4
      CP
      <aligned_images>@@     ; Input file needed 
      _8@@                   ; _8 created here (large)
      x79                   ; Number of images in _8@@
d117 1
a117 2
      <group_apmd>         ; apmd

a118 2
;     --------  Merged: ali3dapmd + alr3dapmd + aln3dapmd ---
;     x76 - selector: ali = 1, alr=2, aln=3
d120 2
a121 2
      x56=2*x52         ; Double the size
      x57=2*x55+1       ; Shift allowed is +-x55, input images are padded
d123 2
a124 1
      x60=x55+1         ; Center of the windowed CCF
d126 1
a126 2
      ; Use AP  to match original projections to reference projections.
      MY FL                   ; Flush results file
d128 1
d136 1
a136 1
         _8@@****           ; Template for 2D experimental projs 
d151 1
a151 1
         _8@@****           ; Template for 2D experimental projs 
d162 1
a162 1
         <temp_ref_projs>@@*****   ; Template for ref. projections 
d168 1
a168 1
         _8@@****           ; Template for 2D experimental projs 
d202 3
a204 3
         RT SQ               ; Rotate & shift the images
         _8@@{****x21}        ; 2D aligned images     
         _1                  ; Rotated & shifted images
d245 2
a246 1
         PD                     ; Pad ref. image (2d ref. projs)
d256 2
a257 2
         _2
         _3
d259 2
a260 2
         WI         ; Window from padded image
         _3
d284 1
a284 1
         ; Combine rotation, mirror, and shift and use 'RT SQ'
d321 1
a321 1
           _8@@{****x21}         ;  2D experimental projs 
d332 1
a332 1
            _8@@{****x21}        ; 2D experimental projs 
d382 2
a383 3
      ; Calculate new, refined 3D structure using centered 
      ; projections  and the corrected angles from angular
      ; document file angles***. 
d385 1
a385 1
      _8@@*****                       ; Template for 2D aligned images
@


1.3
log
@after test
@
text
@d2 1
a2 1
; <html><head><title>Defocus group loop</title></head><body><pre>
d4 1
a4 1
; grploop.pam -- Defocus group loop   al Nov 2000
d6 1
a6 1
; MASTER COPY:
d12 3
a14 4
; INPUT:
;    REGISTERS: (x41,x42,x51,x52,x55,x76,x77,x47,x74,x75)
;    x41                     Angular steps (from RR)  (varies with iter)
;    x42                     Restrict angular search (from RR) (varies with step)
d18 16
a33 14
;    x74                     Starting alignment step iteration counter   
;    x75                     Ending alignment step iteration counter  
;    x76                     Alignment step iteration counter  (varies with iteration)
;    x77                     Defocus group                     (varies with call)

; INPUT FILES:
;    input/order_select                  [order_select]     
;    work/defgrp(***grp}/select          [group_select]    (from prepare)
;    final/vft{**iter}                   [vft_for_iter]    (from master_b)
;    work/ctf{***grp}                    [temp_ctf_file]   (from prepare)
;    input/dala{**iter}_{***group}@@      [aligned_images]  (save space)
;    final/trans{**iter}_{***grp}        [current_group_trans]  (from inital alignment)
;    input/data{***grp}@@                 [unaligned_images]    
;    final/defgrp{***grp}/angles{**iter} [group_angles]       (for iter 2...)
d35 1
a35 1
; OUTPUT FILES:
a43 2
;    final/defgrp{***grp}/angvoea            [group_ang_voea]    (created & deleted)  
;    final/defgrp{***grp}/selvoea            [group_select_voea] (created & deleted)
d46 1
a46 2
; PROCEDURES CALLED:
;    @@lang[x45,x46]
d50 4
a53 4
VM
echo "In grploop, Iteration: {**x76}  Group: {***x77}"
VM
date
d55 12
a66 1
x54=5.0       ; First radius for AP 
d68 3
a70 3
      x58=int(x52/2)+1     ; x58 - image center
      x86=x76+1            ; Next iteration
      x47=0
a71 4
      MY FL                ; Flush results file

      UD IC,x77,x79        ; sets x79 to number of images
      <order_select>
d77 1
a77 1
      <vft_for_iter>          ; Input file for this iter. (final/vft{iter}
d86 1
a86 1
      DE                      ; _1 deleted here 
d89 1
a89 19
      DE
      <group_ang_voea>

      ; Create angle & selection doc file and run 'PJ 3Q' for volume

      x78=1.0                 ; Beginning image number

      VO EA,x53               ; Sets x53 to number of reference projections
      x41                     ; Angular step (varies with iteration)
      (0,90.0)                ; Angles
      (0,359.9)               ; Angles
      <group_ang_voea>        ; Create PJ 3Q angles doc file    (output)

      DOC CREATE              ; Creates selection doc file
      <group_select_voea>     ; PJ 3Q selection doc file  (output)
      1                       ; First register
      x78-x53                 ; Select all angles

      ; Create stack holding angular projections from 3D input file.
d93 14
a106 14
      <group_select_voea>     ; PJ 3Q selection doc. file   (input) - selvoea
      <group_ang_voea>        ; PJ 3Q angles doc. file      (input)
      <temp_ref_projs>@@*****  ; Template for 2D projections (output) - refproj

;DO LB34 x19=1,x53
;CE AD
;<temp_ref_projs>@@{*****x19}
;<temp_ref_projs>@@{*****x19}
;CPF         ; Mean Curvature
;(7)         ; Iterations
;LB34

      DE
      <group_select_voea>   ; Destroy PJ 3Q selection file now - selvoea
d108 1
a108 1
      DE                    ; _4 deleted here
d113 2
a114 2
      _8@@                   ; _8 created here (240Mb)
      x79
d116 1
a116 9
;DO LB33 x19=1,x79
;CE AD
;_8@@{*****x19}
;_8@@{*****x19}
;CPF         ; Mean Curvature
;(7)         ; Iterations
;LB33

      DE                   ; Existing next ang doc output file deleted here
a118 5
      DE                   ; Existing  group ang doc file 
      <next_group_angles>

      DE                   ; Existing next group trans doc file
      <next_group_trans>   
d120 1
a120 1
;     -------- alirn.pam   Merged: ali3dapmd + alr3dapmd + aln3dapmd ---
d126 1
a126 1
      x60=x55+1         ; center of the windowed CCF
d128 2
d131 1
a131 3
      ; Use AP  to match original projections to reference projections.
      IF (x76.EQ.1) THEN
         ;  first iteration
d134 41
a174 39
         x78-x53        ; File numbers
         x54,x51        ; First & last ring
         (0)            ; Skip
         SCR.{*****x77} ; No scratch file wanted
         _8@@****        ; Template for 2D experimental projs 
         x78-x79        ; File numbers
         <group_apmd>   ; Output - apmd doc file

      ELSE
         IF (x76.EQ. 2) THEN  
            ; Check mirrored positions only during second iteration
            AP RD
            <temp_ref_projs>@@*****  ; Template of ref. projections 
            x78-x53           ; File numbers
            x54,x51           ; First & last ring
            (0)               ; Skip
            <group_ang_voea>  ; Input - angvoea file
            SCR.{*****x77}    ; No scratch file if fits in-core
            _8@@****           ; Template for 2D experimental projs 
            x78-x79           ; File numbers
            <group_angles>    ; Input  - angles 
            x42               ; Angular restriction
            <group_apmd>      ; Output - apmd doc file

         ELSE                 ; Third or later iteration
            ;  Restricted search, do not check mirrored positions.
            AP RN
            <temp_ref_projs>@@*****   ; Template for ref. projs 
            x78-x53           ; File numbers
            x54,x51           ; First & last ring
            (0)               ; Skip
            <group_ang_voea>  ; Input - angvoea file
            SCR.{*****x77}    ; No scratch file if fits in-core
            _8@@****           ; Template for 2D experimental projs 
            X78-X79           ; File numbers
            <group_angles>    ; Input  - angles 
            x42               ; Angular restriction
            <group_apmd>      ; Output - apmd doc file
        ENDIF
d181 5
d189 1
a189 1
         UD S,x21,x81,x82,x83
d204 1
a204 1
         RT SQ               ; Rotate the image
d206 3
a208 3
         _1
         x83
         (0,0)
d227 1
a227 1
            x94=0
d237 1
a237 1
         <group_ang_voea>             ; angvoea
d242 5
d265 1
a265 1
         PK x10,x11,x12,x13,x31,x32,x33
d298 3
a300 1
            SA P,x23,x24,x25,x83,x31,x32,x61,x62,x63
d305 3
a307 1
            SA P,x23,x24,x25,x35,x36,x32,x61,x62,x63
d309 1
a309 1
               x64=1
d311 1
a311 1
               x64=0
d318 1
a318 1
         ; apply combined transformation to the original experimental image
d351 1
a351 1
      <group_ang_voea>               ; angvoea
d364 1
a364 4
;---------------------- End of alirn ---------------------------------



d368 13
a380 10
         x45=1.5*x41
         @@lang[x45,x46]
         <group_angles>
         <next_group_angles>
         ; Fewer than 5% moved by more than 1.5* step used
         x46
         IF(x46.LE.0.05) THEN
            ; OK to stop for this group anyway (returned)
            x47=1
         ENDIF
a382 5
;CP
;<aligned_images>@@         ; input file needed 
;_8@@          ; _8 created here (240Mb)
;x79

d396 1
a396 1
      CG PH,x10,x11,x12,x21,x22,x23  ; Center of Gravity of new vol.
d426 1
a426 4
      DE                           ; Remove temp. files - angvoea
      <group_ang_voea> 

      DE                           ; Remove - refproj
@


1.2
log
@<>
@
text
@d4 1
a4 1
; grploop.pam -- defocus group loop   al Nov 2000
d6 1
a6 1
; MASTER COPY: /net/sicily/usr1/leith/clus/spahn/refine/pubsub
d8 1
a8 1
; PURPOSE:    runs  for each defocus group on each iteration
d10 1
a10 3
; CALLED FROM: @@pub_starter or @@refine
;<a href="./grploop.pam">grploop.pam</a>  
;<a href="./refine.pam">refine.pam</a>
d13 13
a25 2
;    Regs: x41,x42,x51,x52,x55,x76,x77,x47
;    input/order_select                  [order_select]    (needed)
d27 1
a27 1
;    final/vft{**iter}                   [vft_for_iter]    (from refine)
a28 1
;;;; work/dala{**iter}_{***grp}@@         [aligned_images]  (copied from: input/dala)
d30 3
a32 3
;    final/trans{**iter}_{***grp}        [current_trans_docs] (from inital alignment)
;    input/data{***grp}@@                 [unaligned_images]   (needed)
;    final/defgrp{***grp}/angles{**iter} [group_angles]       (needed for iter 2...)
d34 12
a45 12
; OUTPUT:
;    work/dala{**iter+1}_{***grp}@@        [aligned_images]
;    final/trans{**iter+1}_{***grp}       [next_trans_docs]
;    final/defgrp{***grp}/angles{**iter+1}[next_group_angles]
;    final/defgrp{***grp}/apmd{**iter+1}  [group_apmd]
;    work/defgrp{***grp}/vol{**iter}      [next_group_vol]
;    work/defgrp{***grp}/vol1_{**iter+1}  [next_group_vol1]   (deleted in mergegroups)
;    work/defgrp{***grp}/vol2_{**iter+1}  [next_group_vol2]   (deleted in mergegroups)
;    local/refproj{**iter}_{***grp}@@      [temp_ref_projs]    (created & deleted)
;    final/defgrp{***grp}/angvoea         [group_ang_voea]    (created & deleted)  
;    final/defgrp{***grp}/selvoea         [group_select_voea] (created & deleted)
;    final/defgrp{***grp}/dres{**iter+1}  [next_group_dres]   (created dres output doc. file
a47 1
;    @@alirn[x79,x52,x58,x55,x51,x41,x42,x53,x76,x77]
d50 4
a53 13
;    registers from  document file for each defloop run
;    x51 - Radius of the structure
;    x52 - Image size
;    x55 - Shift allowed is +-x55
;    x74 = Starting alignment step iteration counter   
;    x75 = Ending alignment step iteration counter  
;    x76 = Alignment step iteration counter  (varies with iteration)
;    x77 = Defocus group                     (varies with call)
;    x41 = Angular steps (from RR)           (varies with step)
;    x42 = Restrict angular search (from RR) (varies with step)
;
vm
echo "in grploop, iteration: {**x76}  group: {***x77}"
d57 1
a57 2
    
   
a58 1
; -------------------------------------------------------------
d60 1
a60 1
      x86=x76+1            ; next iteration
d63 1
a63 1
      MY FL
d66 1
a66 1
      [order_select]
d68 1
a68 1
      [order_select]
d71 4
a74 4
      MU
      [vft_for_iter]                ; input file for this iter.
      [temp_ctf_file]  ; multiplier input file!
      _1           ; _1 created here
d77 1
a77 1
     FT
d79 1
a79 1
      _4           ; _4 created here 
d81 1
a81 1
      DE           ; _1 deleted here 
d84 4
a87 1
      ; create angle & selection doc file and run 'PJ 3Q' for volume
d89 1
a89 1
      x78=1.0      ; beginning image number
d91 10
a100 10
      VO EA,x53    ; sets x53 to number of reference projections
      x41          ; angular step (varies with iteration)
      (0,90.0)     ; angles
      (0,359.9)    ; angles
      [group_ang_voea]          ; create PJ 3Q angles doc file    (output)

      DOC CREATE   ; creates selection doc file
      [group_select_voea]         ; PJ 3Q selection doc file  (output)
      1            ; first register
      x78-x53      ; select all angles
d103 14
a116 6
      PJ 3Q        ; reference projections
      _4           ; 3D input file               (input)
      x51          ; radius of object
      [group_select_voea]         ; PJ 3Q selection doc. file   (input) - selvoea
      [group_ang_voea]            ; PJ 3Q angles doc. file      (input)
      [temp_ref_projs]@@*****      ; template for 2D projections (output) - refproj
d119 1
a119 1
      [group_select_voea]         ; destroy PJ 3Q selection file now - selvoea
d121 1
a121 1
      DE           ; _4 deleted here
d125 2
a126 2
      [aligned_images]@@         ; input file needed 
      _8@@          ; _8 created here (240Mb)
d129 246
a374 2
      DE           ; existing next ang doc output file deleted here
      [next_group_angles]
d376 4
a379 22
      ; x79 - number of images
      ; x58 - image center
      ; x55 - allowed shift
      ; x51 - object radius
      ; x41 - theta step
      ; x42 - range of angular search
      ; x53 - number of reference images
      ; x76 - SP selector: ali = 1, alr=2, aln=3
      ; x77 - group

      @@alirn[x79,x52,x58,x55,x51,x41,x42,x53,x76,x77]
      [unaligned_images]@@*****     ; Unaligned images stack
      _8@@*****
      [group_apmd]                         ; output - apmd
      [group_angles]               ; input  - angles 
      [next_group_angles]          ; output - angles
      [current_trans_docs]         ; input  - trans(iter)
      [next_trans_docs]            ; output - trans{iter+1}
      [group_ang_voea]             ; output - angvoea
      [temp_ref_projs]@@            ; output - refproj
      ;
      ; angular distance
d383 3
a385 3
         [group_angles]
         [next_group_angles)
         ; fewer than 5% moved by more than 1.5* step used
d393 5
d402 3
a404 3
      _8@@*****                       ; template for 2D image file
      [group_select]                 ; Selection doc. file   - select
      [next_group_angles]            ; Angles doc file       - angles
d406 3
a408 3
      [next_group_vol]tmp            ; Reconstructed 3D file - voltmp
      [next_group_vol1]              ; Reconstructed 3D file - vol1
      [next_group_vol2]              ; Reconstructed 3D file - vol2
d411 2
a412 2
      CG PH,x10,x11,x12,x21,x22,x23  ; Center of Gravity
      [next_group_vol]tmp
d414 3
a416 3
      SH F                           ; Shift
      [next_group_vol]tmp            ; Input  file - voltmp
      [next_group_vol]               ; Output file - vol
d421 1
a421 1
      [next_group_vol]tmp
d424 2
a425 2
      [next_group_vol1]              ; first input file  - vol1
      [next_group_vol2]              ; second input file - vol2
d431 1
a431 1
      [next_group_dres]              ; output document file - dres
d434 1
a434 1
      CP                             ; create hard copy of aligned images
d436 1
a436 1
      [next_aligned_images]@@         ; no longer overwrites input files!!
d441 2
a442 2
      DE                           ; remove temp. files - angvoea
      [group_ang_voea] 
d444 2
a445 2
      VM                           ; remove - refproj
      \rm [temp_ref_projs].$DATEXT
d448 9
a456 9
      IF(x76.GT.x74) THEN         ; Not first iteration
         DE                       ; Remove bpr
         [group_bpr]{**x76}              
         DE                       ; Remove bpr1
         [group_bpr]1_{**x76}
         DE                       ; Remove bpr2
         [group_bpr]2_{**x76}
         DE                       ; Remove dala02.....
         [aligned_images]* 
d459 1
a459 1
   echo "grploop: {***x77} returning x47: {***x47}"
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
[x41,x42,x51,x52,x55,x76,x77,x47,x74,x75]
;; <html><head><title>Defocus group loop</title></head><body><pre>

d15 10
a24 10
;    Regs: [x41,x42,x51,x52,x55,x76,x77,x47]
;    input/order_select                  <order_select>    (needed)
;    work/defgrp(***grp}/select          <group_select>    (from prepare)
;    final/vft{**iter}                   <vft_for_iter>    (from refine)
;    work/ctf{***grp}                    <temp_ctf_file>   (from prepare)
;;;; work/dala{**iter}_{***grp}@@         <aligned_images>  (copied from: input/dala)
;    input/dala{**iter}_{***group}@@      <aligned_images>  (save space)
;    final/trans{**iter}_{***grp}        <current_trans_docs> (from inital alignment)
;    input/data{***grp}@@                 <unaligned_images>   (needed)
;    final/defgrp{***grp}/angles{**iter} <group_angles>       (needed for iter 2...)
d27 11
a37 11
;    work/dala{**iter+1}_{***grp}@@        <aligned_images>
;    final/trans{**iter+1}_{***grp}       <next_trans_docs>
;    final/defgrp{***grp}/angles{**iter+1}<next_group_angles>
;    final/defgrp{***grp}/apmd{**iter+1}  <group_apmd>
;    work/defgrp{***grp}/vol{**iter}      <next_group_vol>
;    work/defgrp{***grp}/vol1_{**iter+1}  <next_group_vol1>   (deleted in mergegroups)
;    work/defgrp{***grp}/vol2_{**iter+1}  <next_group_vol2>   (deleted in mergegroups)
;    local/refproj{**iter}_{***grp}@@      <temp_ref_projs>    (created & deleted)
;    final/defgrp{***grp}/angvoea         <group_ang_voea>    (created & deleted)  
;    final/defgrp{***grp}/selvoea         <group_select_voea> (created & deleted)
;    final/defgrp{***grp}/dres{**iter+1}  <next_group_dres>   (created dres output doc. file
d70 1
a70 1
      <order_select>
d72 1
a72 1
      <order_select>
d76 2
a77 2
      <vft_for_iter>                ; input file for this iter.
      <temp_ctf_file>  ; multiplier input file!
d96 1
a96 1
      <group_ang_voea>          ; create PJ 3Q angles doc file    (output)
d99 1
a99 1
      <group_select_voea>         ; PJ 3Q selection doc file  (output)
d107 3
a109 3
      <group_select_voea>         ; PJ 3Q selection doc. file   (input) - selvoea
      <group_ang_voea>            ; PJ 3Q angles doc. file      (input)
      <temp_ref_projs>@@*****      ; template for 2D projections (output) - refproj
d112 1
a112 1
      <group_select_voea>         ; destroy PJ 3Q selection file now - selvoea
d118 1
a118 1
      <aligned_images>@@         ; input file needed 
d123 1
a123 1
      <next_group_angles>
d136 1
a136 1
      <unaligned_images>@@*****     ; Unaligned images stack
d138 7
a144 7
      <group_apmd>                         ; output - apmd
      <group_angles>               ; input  - angles 
      <next_group_angles>          ; output - angles
      <current_trans_docs>         ; input  - trans(iter)
      <next_trans_docs>            ; output - trans{iter+1}
      <group_ang_voea>             ; output - angvoea
      <temp_ref_projs>@@            ; output - refproj
d150 2
a151 2
         <group_angles>
         <next_group_angles>
d165 2
a166 2
      <group_select>                 ; Selection doc. file   - select
      <next_group_angles>            ; Angles doc file       - angles
d168 3
a170 3
      <next_group_vol>tmp            ; Reconstructed 3D file - voltmp
      <next_group_vol1>              ; Reconstructed 3D file - vol1
      <next_group_vol2>              ; Reconstructed 3D file - vol2
d174 1
a174 1
      <next_group_vol>tmp
d177 2
a178 2
      <next_group_vol>tmp            ; Input  file - voltmp
      <next_group_vol>               ; Output file - vol
d183 1
a183 1
      <next_group_vol>tmp
d186 2
a187 2
      <next_group_vol1>              ; first input file  - vol1
      <next_group_vol2>              ; second input file - vol2
d193 1
a193 1
      <next_group_dres>              ; output document file - dres
d198 1
a198 1
      <next_aligned_images>@@         ; no longer overwrites input files!!
d204 1
a204 1
      <group_ang_voea> 
d207 1
a207 1
      \rm <temp_ref_projs>.$DATEXT
d212 1
a212 1
         <group_bpr>{**x76}              
d214 1
a214 1
         <group_bpr>1_{**x76}
d216 1
a216 1
         <group_bpr>2_{**x76}
d218 1
a218 1
         <aligned_images>* 
@
