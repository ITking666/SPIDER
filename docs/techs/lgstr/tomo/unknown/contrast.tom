;contrast.tom
;used to read contrast slider values from WEB
;and create volumes from that
;sets all affected pixels to cutoff value
;assumes not norm. by slice. 

x99=93   ;Max cutoff, 64-127. 0 for none. 
x98=0   ;Min cutoff, 64-127. 0 for none.

;--- input files -----
FR G
[infile]vol001cut

;--- output files -----
FR G
[outfile]vol001cutcontrast

;----  END BATCH HEADER -----

;---file max,min
FS x11,x12
[infile]

;--- error catch for max
IF(x99.LE.127)THEN
  IF(x99.GE.64)THEN
    GOTO LB1
  ELSE
    IF(x99.EQ.0)THEN
      GOTO LB1
    ENDIF
  ENDIF
ENDIF
;---should never get here
vm
echo "max value outside boundries"
EN

LB1

;--- error catch for min
IF(x98.LE.127)THEN
  IF(x98.GE.64)THEN
    GOTO LB2
  ELSE
    IF(x98.EQ.0)THEN
      GOTO LB2
    ENDIF
  ENDIF
ENDIF
;---should never get here
vm
echo "min value outside boundries"
EN

LB2

;--- error check that max>min
IF(x98.GE.x99)THEN
  vm
  echo "max is less/equal than min"
  EN
ENDIF

;---remove 64 bias, this way 64 = one contrast count
x21=x99-63  ;max
x22=x98-63  ;min, could be zero

;---equate all difference in image to 64 bins
x13=(x11-x12)/64  ;pixel value per contrast count

;---decide what threshold to run, and set values
IF(x99.EQ.0)THEN   ;only min value needed
  
  x24=x22*x13  ;min value
  
  ;---run threshold
  TH
  [infile]
  [outfile]
  B         ;min thresh
  x24
  
  EN
ELSE  ;max value is needed  
  IF(x98.EQ.0)THEN  ;min value not needed
    
    x23=x21*x13  ;max threshold
    ;---run threshold
    TH
    [infile]
    [outfile]
    A         ;max thresh
    x23
    
    EN
  ELSE ;max value needed and min value needed
  
    x24=x22*x13  ;min value
    x23=x21*x13  ;max threshold
    ;---run threshold
    TH
    [infile]
    [outfile]
    C        ;min/max thresh
    x24,x23
    
    EN
  ENDIF
ENDIF

;---should never get here
vm
echo "should not be here, problem in code" 

EN
    
  
  
