head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2008.12.19.15.58.33;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.01.16.29.30;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.21.18.14.40;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.05.20.48.23;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.05.20.38.14;	author leith;	state Exp;
branches;
next	;


desc
@@


1.5
log
@?changes
@
text
@; SOURCE: align.tom
;
; PURPOSE: Applies alignment parameters to images for a single or 
;          double tilt series.
;          Scales output images by specified size factor.


x21 = 2                ; For single tilt: 1, double tilt: 2

x20 = 1                ; Aligned image scale factor (1 = original size)
 
; ----------------------- Input files -------------------------------

FR G
[rot]rotated/rot_***           ; Tilted image file template              

FR G
[sel001]sel001         ; First series selection  doc file 
FR G
[cca1]cca002           ; First series alignment doc file 

FR G
[sel002]sel002         ; Second series selection  doc file 
FR G
[cca2]ccb002           ; Second series alignment doc file 

FR G
[sel003]sel003         ; Combined series selection  doc file 
FR G
[c3c202]c3c202         ; Second series alignment doc file (for double tilt)          

; ---------------------- Output files ----------------------------------

FR G
[output]aligned/rdb_***         ; Aligned image files template   
            
; ----------------- END BATCH HEADER ------------------------------------


; First series

UD  1, x55                 ; Get current image number
[sel001]                   ; Select file for single tilt   (input)

FI x50,x51                 ; Find current image size
[rot]x55                   ; Image file                    (input)
(2,12)                     ; x,y size of image

x52=x50*x20                ; Scaled x size
x53=x51*x20                ; Scaled y size     

UD N x30                   ; Number of images in first series
[sel001]

DO LB1 x11=1,x30           ; Loop over all images images in first series
   UD IC x11, x55          ; Get current image number
   [sel001]                ; Select file for single tilt  (input)

   UD IC,x55,x61,x62,x63,x64,x65 ; Get alignment parameters for this image
   [cca1]                  ; Alignment doc file (input)

   VM
   echo " Image: {***x55}  Rotated:{%f6.1%x63} Scale: {%f3.1%x61}  X&Y shift: {%f6.1%x64}, {%f6.1%x65}"

   IF (x20 .NE. 1.0) THEN  
      RT SQ                ; Rotate and shift
      [rot]x55             ; Image file                (input)
      _1                   ; Image file                (output)
      x63,x61              ; Angle & scale
      x64,x65              ; Shifts

      IP                   ; Interpolate
      _1                   ; Image file                (input)
      [output]x55          ; Rotated image file        (output)
      (x52,x53)
   ELSE
      RT SQ                ; Rotate and shift
      [rot]x55             ; Image file                (input)
      [output]x55          ; Rotated image file        (output)
      x63,x61              ; Angle & scale
      x64,x65              ; Shifts
   ENDIF

LB1

UD ICE                     ; Close doc file
[cca1]                     ; Alignment input doc file
UD ICE                     ; Close doc file
[sel001]                   ; Select file for single tilt, first series

DE                         ; Cleanup temp file
_1

IF (x21.LT.2) THEN
   EN                      ; Stop if single tilt
ENDIF

; Second series -----------------------------------------------------

UD N x30                   ; Number of images in second series
[sel002]

UD IC x11, x55             ; Get current image number
[sel002]                   ; Select file for single tilt, first series

FI x50,x51
[rot]x55                   ; Image file                (input)
(2,12)                     ; X,Y size of image

x52=x50*x20                ; Scaled x size
x53=x51*x20                ; Scaled y size     

DO LB2 x11=1,x30           ; Loop over images in second series
   UD IC x11, x55          ; Get current image number
   [sel002]                ; Select file for single tilt, second series

   UD IC,x55,x61,x62,x63,x64,x65 ; Get alignment parameters for this image
   [cca2]                  ; Alignment doc file (input)

   VM
   echo " Image: {***x55}  Rotated:{%f6.1%x63} Scale: {%f3.1%x61}  X&Y shift: {%f6.1%x64}, {%f6.1%x65}"

   IF (x20 .NE. 1.0) THEN  
      RT SQ                ; Rotate and shift
      [rot]x55             ; Image file                (input)
      _1                   ; Image file                (output)
      x63,x61              ; Angle & scale
      x64,x65              ; Shifts

      IP                   ; Interpolate
      _1                   ; Image file                (input)
      [output]x55          ; Rotated image file        (output)
      (x52,x53)
   ELSE
      RT SQ                ; Rotate and shift
      [rot]x55             ; Image file                (input)
      [output]x55          ; Rotated image file        (output)
      x63,x61              ; Angle & scale
      x64,x65              ; Shifts
   ENDIF
LB2

UD ICE                     ; Close doc file
[cca2]                     ; Alignment input doc file
UD ICE                     ; Close doc file
[sel002]                   ; Select file for single tilt, first series

DE                         ; Cleanup temp file
_1

EN




@


1.4
log
@should be and ENDIF outside of the LB2
@
text
@d1 84
a84 52
;align.tom
;used to align tomography images
;uses guide image which contains the worst translations
;and pads so that no wraparound from RT SQ

;the [guideimage] dim. used for padding, should not be changed
;[window] size is not changed by scale, but filtered
;[output] is changed by scale, but not filtered

x99=2    ;single-tilt =1, double-tilt =2
x98=600  ;total window size cut from center, 0=no window
x95=3    ;box size for BC filtering of window
x94=0  ;weight for filtering 0 -> 1 0=no filter

;--- input files -----
FR L
[guideimage]centertest ;image created by refimage
FR L
[images]rotated/rot_   ;template for images to be aligned
FR L
[sela]sel001    ;first series selection file
FR L
[aligna]cca002  ;first series alignment file
FR L
[selb]sel002    ;second series selection file
FR L
[alignb]ccb002  ;second series alignment file

;--- output files ----
FR L
[window]aligned/rdb_  ;windows of aligned images

;---- END BATCH HEADER ----	
x97=1.0    ;scale factor, does not affect window size 0->1 (Tested,ok)
x96=0    ;save unwindowed padded images 1=yes
FR L
[output]aligned/ardb_   ;aligned images unwindwowed

;---quiet
MD
VB Off

;---test if anything is being created, if not stop
IF(x98.EQ.0)THEN
  IF(x96.NE.1)THEN
    vm
    echo "Not saving windows or padded images, no reason to run."
    
    END
    
  ENDIF
ENDIF
d86 4
a89 11
;---get size of padded image
FI x11,x12
[guideimage]
12,2

;---test that padded image is sq
IF(x11.NE.x12)THEN
  vm
  echo "[guideimage] should be square"
  END
ENDIF
d91 2
a92 1
x12=0 ;release x12
d94 2
a95 14
;---open select doc
UD IC 1,x12
[sela]

;---get images size
FI x13,x14
[images]{***x12}
12,2

;---test image square
IF(x13.NE.x14)THEN
  VM
  echo "Images should be square, {***x12} is not "
  END
d98 1
a98 2
x12=0
x14=0
d100 2
a101 2
;---compute upper left placement for pad
x18=(x11-x13)/2 +1
d103 2
a104 19
;---test if window size is larger than padded image
IF(x97.EQ.1)THEN  ;with no scaling
  IF(x98.GT.x11)THEN
    VM
    echo "Trying to remove center larger than padded image"
    END
  ENDIF

ELSE  ;with scaling

  x80=x11*x97       ;scaled size of padded image
  x80=INT(x80+0.5)  ;force round up integer
  
  IF(x98.GT.x80)THEN
    VM
    echo "Center too large for scaled image"
    END
  ENDIF
ENDIF
d106 35
a140 204
;---get size of first tilt selection file
UD N x15
[sela]

;===start first tilt loop
DO LB1 x16=1,x15
  
  ;---get image # from sel file
  UD IC x16,x17
  [sela]
  
  ;---get alignment data for image scale,theta,psi,x,y
  UD IC x17,x20,x21,x22,x23,x24
  [aligna]
  
  ;---pad image
  PD
  [images]{***x17}  ;input
  _1               ;output
  (x11,x11,1)      ;size output
  M                ;min border
  (x18,x18,1)      ;placement
  
  ;---apply changes
  RT SQ
  _1      ;input
  _2      ;output
  x22,x20 ;angle,scale
  x23,x24 ;shift xy
  
  DE
  _1
  
  ;---if changing size do now and keep output _2
  IF(x97.NE.1)THEN
    IP
    _2 ;in
    _3 ;out
    (x80,x80)
    
    DE
    _2
    
    CP
    _3
    _2 
    
    DE
    _3
  ENDIF
  
  ;---if saving paddedimage
  IF(x96.EQ.1)THEN
    CP
    _2
    [output]{***x17}
  ENDIF
  
  ;---if windowing do it
  IF(x98.GT.0)THEN
  
    ;---compute where to cut from
    IF(x97.EQ.1)THEN
      ;---if same size
      x30=(x11-x98)/2
    ELSE
      ;---if changed
      x30=(x80-x98)/2
    ENDIF
    
    ;---cut
    WI
    _2
    _3 ;[window]{***x17}
    (x98,x98,1)
    (x30,x30,1)
    
    DE
    _2
    
    ;---either filter, or copy to output
    IF(x94.GT.0)THEN
      BC
      _3
      [window]{***x17}
      L
      x95  ;boxsize
      x94  ;weight
    ELSE
      CP
      _3
      [window]{***x17}
    ENDIF
  ENDIF
  
  DE 
  _3
LB1
  
;---close files
UD ICE
[sela]
UD ICE
[aligna]

;===start if and do of doubletilt
IF(x99.EQ.2)THEN
  
  ;---get select file size
  UD N x15
  [selb]
  
  DO LB2 x16=1,x15
    
    ;---get image # from sel file
    UD IC x16,x17
    [selb]
  
    ;---get alignment data for image scale,theta,psi,x,y
    UD IC x17,x20,x21,x22,x23,x24
    [alignb]
  
    ;---pad image
    PD
    [images]{***x17}  ;input
    _1               ;output
    (x11,x11,1)      ;size output
    M                ;min border
    (x18,x18,1)      ;placement
  
    ;---apply changes
    RT SQ
    _1      ;input
    _2      ;output
    x22,x20 ;angle,scale
    x23,x24 ;shift xy
  
    DE
    _1
  
    ;---if changing size do now and keep output _2
    IF(x97.NE.1)THEN
      IP
      _2 ;in
      _3 ;out
      (x80,x80)
    
      DE
      _2
    
      CP
      _3
      _2 
    
      DE
      _3
    ENDIF
  
    ;---if saving paddedimage
    IF(x96.EQ.1)THEN
      CP
      _2
      [output]{***x17}
    ENDIF
  
    ;---if windowing do it
    IF(x98.GT.0)THEN
  
      ;---compute where to cut from
      IF(x97.EQ.1)THEN
        ;---if same size
        x30=(x11-x98)/2
      ELSE
        ;---if changed
        x30=(x80-x98)/2
      ENDIF
    
      ;---cut
      WI
      _2
      _3 ;[window]{***x17}
      (x98,x98,1)
      (x30,x30,1)
    
      DE
      _2
    
      ;---either filter, or copy to output
      IF(x94.GT.0)THEN
        BC
        _3
        [window]{***x17}
        L
        x95  ;boxsize
        x94  ;weight
      ELSE
        CP
        _3
        [window]{***x17}
      ENDIF
    ENDIF
  
    DE 
    _3
d143 10
a152 1
ENDIF
a153 5
;---close files
UD ICE
[selb]
UD ICE
[alignb]
a155 2
EN
  
@


1.3
log
@*** empty log message ***
@
text
@d316 2
@


1.2
log
@*** empty log message ***
@
text
@d1 52
a52 82
; SOURCE: align.tom
;
; PURPOSE: Applies alignment parameters to images for a single or 
;          double tilt series.
;          Scales output images by specified size factor.


x21 = 2                ; For single tilt: 1, double tilt: 2

x20 = 1                ; Aligned image scale factor (1 = original size)
 
; ----------------------- Input files -------------------------------

FR G
[rot]rotated/rot_***           ; Tilted image file template              

FR G
[sel001]sel001         ; First series selection  doc file 
FR G
[cca1]cca002           ; First series alignment doc file 

FR G
[sel002]sel002         ; Second series selection  doc file 
FR G
[cca2]ccb002           ; Second series alignment doc file 

FR G
[sel003]sel003         ; Combined series selection  doc file 
FR G
[c3c202]c3c202         ; Second series alignment doc file (for double tilt)          

; ---------------------- Output files ----------------------------------

FR G
[output]aligned/rdb_***         ; Aligned image files template   
            
; ----------------- END BATCH HEADER ------------------------------------


; First series

UD  1, x55                 ; Get current image number
[sel001]                   ; Select file for single tilt   (input)

FI x50,x51                 ; Find current image size
[rot]x55                   ; Image file                    (input)
(2,12)                     ; x,y size of image

x52=x50*x20                ; Scaled x size
x53=x51*x20                ; Scaled y size     

UD N x30                   ; Number of images in first series
[sel001]

DO LB1 x11=1,x30           ; Loop over all images images in first series
   UD IC x11, x55          ; Get current image number
   [sel001]                ; Select file for single tilt  (input)

   UD IC,x55,x61,x62,x63,x64,x65 ; Get alignment parameters for this image
   [cca1]                  ; Alignment doc file (input)

   VM
   echo " Image: {***x55}  Rotated:{%f6.1%x63} Scale: {%f3.1%x61}  X&Y shift: {%f6.1%x64}, {%f6.1%x65}"

   IF (x20 .NE. 1.0) THEN  
      RT SQ                ; Rotate and shift
      [rot]x55             ; Image file                (input)
      _1                   ; Image file                (output)
      x63,x61              ; Angle & scale
      x64,x65              ; Shifts

      IP                   ; Interpolate
      _1                   ; Image file                (input)
      [output]x55          ; Rotated image file        (output)
      (x52,x53)
   ELSE
      RT SQ                ; Rotate and shift
      [rot]x55             ; Image file                (input)
      [output]x55          ; Rotated image file        (output)
      x63,x61              ; Angle & scale
      x64,x65              ; Shifts
   ENDIF
d54 11
a64 1
LB1
d66 1
a66 4
UD ICE                     ; Close doc file
[cca1]                     ; Alignment input doc file
UD ICE                     ; Close doc file
[sel001]                   ; Select file for single tilt, first series
d68 14
a81 5
DE                         ; Cleanup temp file
_1

IF (x21.LT.2) THEN
   EN                      ; Stop if single tilt
d84 2
a85 1
; Second series -----------------------------------------------------
d87 2
a88 2
UD N x30                   ; Number of images in second series
[sel002]
d90 19
a108 2
UD IC x11, x55             ; Get current image number
[sel002]                   ; Select file for single tilt, first series
d110 204
a313 35
FI x50,x51
[rot]x55                   ; Image file                (input)
(2,12)                     ; X,Y size of image

x52=x50*x20                ; Scaled x size
x53=x51*x20                ; Scaled y size     

DO LB2 x11=1,x30           ; Loop over images in second series
   UD IC x11, x55          ; Get current image number
   [sel002]                ; Select file for single tilt, second series

   UD IC,x55,x61,x62,x63,x64,x65 ; Get alignment parameters for this image
   [cca2]                  ; Alignment doc file (input)

   VM
   echo " Image: {***x55}  Rotated:{%f6.1%x63} Scale: {%f3.1%x61}  X&Y shift: {%f6.1%x64}, {%f6.1%x65}"

   IF (x20 .NE. 1.0) THEN  
      RT SQ                ; Rotate and shift
      [rot]x55             ; Image file                (input)
      _1                   ; Image file                (output)
      x63,x61              ; Angle & scale
      x64,x65              ; Shifts

      IP                   ; Interpolate
      _1                   ; Image file                (input)
      [output]x55          ; Rotated image file        (output)
      (x52,x53)
   ELSE
      RT SQ                ; Rotate and shift
      [rot]x55             ; Image file                (input)
      [output]x55          ; Rotated image file        (output)
      x63,x61              ; Angle & scale
      x64,x65              ; Shifts
   ENDIF
d316 5
a320 4
UD ICE                     ; Close doc file
[cca2]                     ; Alignment input doc file
UD ICE                     ; Close doc file
[sel002]                   ; Select file for single tilt, first series
a321 2
DE                         ; Cleanup temp file
_1
d324 1
a324 4




@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
; PURPOSE: Applies alignment parameters to tilt images for a single or 
a6 1
;<b>------------------- Edit next 2  Input parameters ---------------------------- 
d8 1
a8 1
x21 = 2                ; For single angle series: 1,  For double tilt: 2
d12 1
a12 1
; ----------------------- Input files --------------------------------------------
d15 1
a15 1
[rot]rot_***           ; Tilted image file template              
d32 1
a32 1
; ---------------------- Output files --------------------------------------------
d35 1
a35 1
[output]rdb_***         ; Aligned image files template   
d37 1
a37 1
; ----------------- END BATCH HEADER ----------------------------------------- </b>
d151 1
a151 1
RE
@
