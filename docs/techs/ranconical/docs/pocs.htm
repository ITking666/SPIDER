<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=utf-8">
	<TITLE>Random-conical tilt reconstruction</TITLE>
</HEAD>
<BODY LANG="en-US" DIR="LTR">

<I><P ALIGN="RIGHT">(Updated 2012 Nov 21)</P></I>

<CENTER><P>
<FONT SIZE="5"><B>Random conical tilt reconstruction</B></font>
<BR>Adapted from the 2007 SPIDER Workshop tutorial
</P></CENTER>

<HR>

<B><P>Outline</P></B>
<UL>
	<LI>General notes</LI>
	<LI>Quick-start guide</LI>
	<LI>Getting started</LI>
	<LI>Procedure </LI>
	<LI>Miscellaneous batch files </LI>
	<LI>References </LI>
</UL>

<HR>

<B><P>General notes</P></B>

<UL>
	<LI>Sequential operations are numbered. Options are lettered.</LI>
	<LI>Data extension assumed to be <B>.dat</B>. Adjust accordingly.</LI>
	<LI>List of inputs and outputs in description is not exhaustive.</LI>
</UL>

<HR>

<B><P>Quick-start guide</P></B>
<OL>
	<LI>tar -xvf $BATCH.tar</LI>
	<LI>spider rct/dat @makeparams (or copy <B>params.dat</B>)</LI>
	<LI>(optional) tar -xvf $DATA.tar</LI>
	<LI>mkfilenums.py filenums.dat $MICROGRAPHS*</LI>
	<LI>(for non-SPIDER format micrographs) spider rct/dat @convert</LI>
	<LI>spider rct/dat @shrinkmics</LI>
	<LI>cd Micrographs/ ; montagefromdoc.py ../filenums.dat</LI>
	<LI>spider rct/dat @micpair</LI>
	<LI>(required for JWEB) spider rct/dat @padmics</LI>
	<LI>pick tilt pairs in JWEB or WEB</LI>
	<LI>spider rct/dat @makesomenoise (or copy <B>noise.dat</B>) </LI>
	<LI>spider rct/dat @windowparticles</LI>
	<LI>(for negative stain) Do both of:</LI>
		<OL TYPE=A>
			<LI>spider rct/dat @highpass-untilted</LI>
			<LI>spider rct/dat @highpass-tilted</LI>
		</OL>
	<LI>montagefromdoc.py listparticles.dat Zerodegr/Winrot/unt*</LI>
	<LI>(if necessary) spider rct/dat @removebad</LI>
	<LI>montagefromdoc.py listparticles.dat Tilted/Winrot/tilt*</LI>
	<LI>(if necessary) spider rct/dat @removebad</LI>
	<LI>(slow) spider rct/dat @pairwise</LI>
	<LI>(optional) To reorient average, do both of:</LI>
		<OL TYPE=A>
			<LI>spider rct/dat @reorientavg</LI>
			<LI>spider rct/dat @sumalign</LI>
		</OL>
<!--</OL>
<OL START=13>-->
	<LI>spider rct/dat @filtershrink</LI>
	<LI>spider rct/dat @ca-pca</LI>
	<LI>Classify.  (Ward's method shown here.  For other options, see below.)</LI>
	<OL TYPE=A>
		<LI>spider rct/dat @hierarchical</LI>
		<LI>spider rct/dat @binarytree</LI>
		<LI>cd Zerodegr/Tree ; ../../tree.py labeled0001.dat 4 selclasses.dat</LI>
	</OL>
	<LI>Iterate:</LI> 
		<OL TYPE=A>
			<LI>spider rct/dat @multirefalign (subsequently @multirefalign-descend)</LI> 
			<LI>spider rct/dat @filtershrink</LI> 
			<LI>spider rct/dat @classifybyview</LI>
			<LI>verifybyview.py</LI> 
		</OL>
	<LI>spider rct/dat @combinegoodclasses</LI> 
	<LI>spider rct/dat @viewaverages</LI> 
	<LI>spider rct/dat @centertilt</LI>
	<LI>spider rct/dat @storeangles</LI>
	<LI>(optional) spider rct/dat @d6symmetry</LI>
	<LI>spider rct/dat @bpclass</LI>
	<LI>spider rct/dat @volfilt</LI>
	<LI>(if multiple orientations) Do both of: </LI>
		<OL TYPE=A>
			<LI>spider rct/dat @volalignprj</LI>
			<LI>spider rct/dat @mergevols</LI>
		</OL>
	<LI>spider rct/dat @prepare-prjmatch</LI>
</OL>

<HR>

<B><P>Getting started</P></B>

<UL>
	<LI>Create a new directory, and change to that directory before unpackaging the 
		batch-file tarball.</LI>

	<LI>Micrographs should be placed in the <B>Micrographs/</B> directory.  
		They needn't be in SPIDER format, but you'll then need to run
		<a href="convert.rct">convert.rct</a> for the conversion. </LI>

	<LI>The SPIRE libraries are required for various Python scripts, such as
		<a href="mkfilenums.py">mkfilenums.py</a> and <a href="tree.py">tree.py</a>. 
		These steps can be substituted with SPIRE-independent analogs. 
		Installation instructions for SPIRE can be found 
		<a href="http://www.wadsworth.org/spider_doc/spire/doc/download.html#FullInstall">here</a>.</LI>

<!-- 	<LI></LI> -->
</UL>

<HR>

<B><P>Procedure</P></B>

<UL>

<LI><P>Prepare directory</P></LI>
	<UL>
		<LI>Download the latest <a href="../tar_archive">batch-file archive</a> 
			and unpackage it by typing:
			<PRE>tar -xvf $ARCHIVE.tar</PRE>
			This command will unpackage the files in the currect directory, 
			so create a new directory if so desired.</LI>
	</UL>

<LI><P>Prepare parameter doc file</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="makeparams.rct">makeparams.rct</a> </LI>
		<LI>OUTPUTS: <B>params</B> </LI>
		<LI>Otherwise, you can copy a <B>params</B> file from elsewhere.<BR>
			An example file called <B>bak-params</B> is present in the tarball.</LI>
		<LI>The following parameters (described <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/recon/params.html">
			here</a>) are used from the <B>params</B> file:</LI>
			<UL>
				<LI><B>1</B> -- zip flag -- if set to 1, then will be uncompressed using gunzip</LI>
					<UL><LI>used by convert.rct</LI></UL>
				<LI><B>2</B> -- format flag -- 0 corresponds to SPIDER, 3 to Z/I TIFF, etc. -- see 
					<a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/recon/params.html">
					complete description</a> for additional formats</LI>
					<UL><LI>used by convert.rct</LI></UL>
				<LI><B>5</B> -- pixel size -- in Angstroms</LI>
					<UL><LI>used by shrinkmics.rct</LI></UL>
				<LI><B>17</B> -- window size -- in pixels </LI>
					<UL><LI>used by many batch files</LI></UL>
				<LI><B>18</B> -- particle diameter -- in pixels</LI>
					<UL><LI>used by pairwise.rct </LI></UL>
		<!--		<LI><B>NUMBER</B> -- FLAG -- DESCRIPTION</LI>
					<UL><LI>used by BATCH</LI></UL>-->
			</UL>
	</UL>

<LI><P><I>(optional)</I> Copy sample data.</P></LI>
	<UL>
		<LI>Download the <a href="../tar_archive/data20060817.tar">data archive</a>
			and unpackage it by typing:</LI>
			<PRE>tar -xvf data20060817.tar</PRE>
		<LI>This command will create a directory called <B>Micrographs/</B>, 
			containing phantom micrographs, and a directory called <B>TP1/</B>,
			containing the files used to generate the micrographs.</LI>
	</UL>

<LI><P>Generate a list of micrographs.</P></LI>
	<UL>
		<LI>PYTHON SCRIPT: <a href="mkfilenums.py">mkfilenums.py</a> </LI>
		<LI>To make a list of TIFF files, for example, the syntax would be: </LI>
			<PRE>mkfilenums.py filenums.dat Micrographs/zeiss*.tif</PRE>
		<LI>This Python script requires the Spiderutils library from SPIRE. 
			If SPIRE is not installed, you can generate <B>filenums</B> using other means, 
			such as by manually entering the filenumbers using 
			<a href="http://www.wadsworth.org/spider_doc/spider/docs/man/doccreate.html">
			'DOC CREATE'</a> in SPIDER. </LI>
	</UL>

<LI><P><I>(optional)</I> If the micrographs are not already in SPIDER format, convert them.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="convert.rct">convert.rct</a> </LI>
		<LI>SUBROUTINE: <a href="convert_p.rct">convert_p.rct</a> </LI>
		<LI>INPUTS: <B>filenums</B>, <B>Micrographs/mic****</B> </LI>
		<LI>Downstream batch files will expect files called <B>Micrographs/mic****</B>. 
			Keeping that convention will minimize the number of changes you'll need to make.</LI>
		<LI>If the micrographs are in Z/I TIFF format, 
			<a href="http://www.wadsworth.org/spider_doc/spider/download/zi2spi.c">zi2spi</a> 
			will be needed. If it is not installed on your system, the compilation instructions 
			are described at the top of the source code.</LI>
		<LI>TO DO: add conversion flag for MRC files</LI>
	</UL>

<LI><P>Shrink the micrographs for particle-picking.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="shrinkmics.rct">shrinkmics.rct</a> </LI>
		<LI>INPUTS: <B>filenums</B>, <B>Micrographs/mic****</B> </LI>
		<LI>INPUTS: <B>Micrographs/sm-mic****</B> </LI>
		<LI>Choose the reduction factor such that the micrgraph fits on the screen, 
			or that the particles are visible.  
			These downsampled micrographs will be used to pick tilt pairs.</LI>
		<LI>The filtration step is slow, so 
			by setting <I>[filter-radius]=0</I>, you can skip this step. </LI>
	</UL>

<LI><P>Screen micrographs.</P></LI>
	<UL>
		<LI>Micrographs can be screened using various display programs.
			To use montagefromdoc.py, from <B>Micrographs/</B>
			(there is a pre-existing <B>.montagefromdoc</B> file there), type:
			<PRE>montagefromdoc.py ../filenums.dat sm-mic*</PRE>
			The output should also be <B>filenums</B>.</LI>
		<LI>If you wish to remove micrographs by editing <B>filenums</B>
			(instead of with montagefromdoc.py),
			renumber it to have consecutive keys, using 
			<a href="http://www.wadsworth.org/spider_doc/spider/docs/man/docren.html">
			'DOC REN'</a>. (The input and output can have the same name.) </LI>
	</UL>

<LI><P>Establish pairings between micrographs</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="micpair.rct">micpair.rct</a> </LI>
		<LI>INPUTS: <B>filenums</B> </LI>
		<LI>OUTPUTS: <B>docmicpairs</B> </LI>
		<LI>This batch file presumes that the tilted-specimen micrograph precedes the untilted-specimen micrograph.
			Check the output to confirm that the pairings make sense.</LI>
	</UL>

<LI><P>Resize micrographs (Required for JWEB, not required for X-Window WEB)</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="padmics.rct">padmics.rct</a> </LI>
		<LI>INPUTS: <B>docmicpairs</B>, <B>Micrographs/sm-mic****</B> </LI>
		<LI>OUTPUTS: <B>Micrographs/jweb-mic{***[untilted]}</B>, <B>Micrographs/jweb-mic{***[untilted]}_tilted</B> </LI>
		<LI>JWEB has a "feature" that requires the tilt pair to have the same dimensions. 
			This batch file pads the micrographs to the same size. 
			Another feature is that JWEB expects the tilted micrograph to be second, 
			even though it is typically collected first at the microscope.</LI>
	</UL>

<LI><P>Pick tilt pairs (for JWEB, differences for X-Window WEB noted below)</P></LI>
	<UL>
	    <LI>INPUTS: <B>Micrographs/jweb-mic{***[untilted]}</B>, <B>Micrographs/jweb-mic{***[untilted]}_tilted</B>
	    <P></P></LI>
	</UL>
	<OL type='A'>
	    <LI>If using JWEB: </LI>
		<OL>
			<LI>From the <B>Micrographs/</B> directory, open JWEB. </LI>
			<LI>Go to <I>File -> Open -> Image Series</I> and select a pair of micrographs. 
			    Adjust the contrast as convenient. 
			    Do <U>NOT</U> resize the micrographs using <I>Edit</I> &gt; <I>Resize</I>, 
			    for ease of use with the batch files below.</LI>
			<LI>Click on the <I>Markers/Tilt Pair</I> tab.</LI>
			<LI>In the <I>Marker File Number</I> field, enter the number of the untilted micrograph.</LI>
			<LI>Click on the <I>Show/Edit Marker</I> button, which will display the images.</LI>
			<LI>Select a particle from the untilted micrograph, and 
				the corresponding particle from the tilted micrograph.
				Repeat this for at least four particles, 
				separated as far as possible in the micrograph, 
				ideally in the four corners, but the farther apart the better. 
				<BR><I>HINT:</I> The middle mouse button will erase a pair of points 
				if you make a mistake, or if JWEB becomes confused..
				<BR><I>HINT:</I> Since the numbering is to the right of the marker, 
				it may be easier to proceed from right to left.</LI>
			<LI>Click on buttons <I>Save Marker Files</I> and <I>Determine Theta</I>, 
				which will determine the magnitude of the tilt angle between the micrographs.</LI>
			<LI>Click on the <I>Fit Angles</I> button.
				This will determine the direction of the tilt axis.</LI>
			<LI>Click on the <I>Draw Fitted Locations</I> button.
				This will slightly adjust the locations of the fitted coordinates according to the fitting above, 
				but does not affect the coordinates selected with the mouse.</LI>
			<LI>Click on the <I>Save Angles</I> button.</LI>
			<LI>Now, when you select a particle in the untilted image, 
				JWEB will send the cursor to the corresponding location in the tilted image.</LI>
			<LI>Select more particles from the tilt pair. 
				(For the sample micrograph, there are 76 pairs.  Select all of them.)</LI>
			<LI>To save the new values, re-click the five buttons: <I>Save Marker Files</I>, <I>Determine Theta</I>, 
				<I>Fit Angles</I>, <I>Draw Fitted Locations</I>, and <I>Save Angles</I>.</LI>
		</OL>
	    <LI>If using X-Window WEB: </LI>
		<OL>
		    <LI>From the menu, select <I>COMMANDS</I> &gt; <I>Tilted Particles</I>, 
		        and select first the untilted-specimen image (which is normally collected second) 
		        and then the tilted-specimen image.  </LI>
		    <LI>In the <I>Particle doc</I> popup window, under <I>Doc file number</I>, 
		        enter the number of the untilted micrograph and click <I>ACCEPT</I>.</LI>
		    <LI>Select a particle from the untilted micrograph, and 
			the corresponding particle from the tilted micrograph.
			Repeat this for at least four particles, 
			separated as far as possible in the micrograph, 
			ideally in the four corners, but the farther apart the better.</LI>
		    <LI>Click the middle button to open the <I>Particle picking menu_popup</I>.</LI>
		    <LI>Click on <I>Determine tilt axis angles</I>, <I>Draw fitted locations</I>, 
		        and <I>Save angles in doc file</I>.</LI>
		    <LI>Now, when you select a particle in the untilted image, 
			WEB will send the cursor to the corresponding location in the tilted image.</LI>
		    <LI>Select more particles from the tilt pair. 
			(For the sample micrograph, there are 76 pairs.  Select all of them.)</LI>
		    <LI>To save the new values, re-click the three buttons: <I>Determine tilt axis angles</I>, 
		        <I>Draw fitted locations</I>, and <I>Save angles in doc file</I>.</LI>
		    <LI>Differences between JWEB and X-Window WEB:</LI>
			<UL>
			    <LI>X-Window WEB does not require the pair of micrographs to be the same size, 
				so the step <a href="padmics.rct">padmics.rct</a> is unnecessary. </LI>
			    <LI><U>WARNING</U>: If you entered a number under <I>Image reduction factor</I>
				(after setting the reduction factor in <I>OPTIONS</I> &gt; <I>Image</I>)
				do <U>NOT</U> set the parameter <I>[decimation-factor]</I> below in 
				<a href="windowparticles.rct">windowparticles.rct</a>. 
				Using both parameters will be redundant.</LI>
			    <LI>There is no <I>Save Marker Files</I> button.
				Coordinates are saved continuously.</LI>
			    <LI><I>Determine Theta</I> and <I>Fit Angles</I> are merged into one button: 
				<I>Determine tilt axis angles</I>.</LI>
			</UL>
		</OL>
	</OL>
	<UL>
	    <LI><I>HINT:</I> Save the coordinates frequently. 
		JWEB gets confused from time to time, 
		and the main console window will show which particles have it confused. 
		Delete those particles (using the middle mouse button), and re-pick them, as necessary.</LI>
	    <LI><I>HINT:</I> If, while picking pairs, the fitted locations stray from the correct location 
		(which could be the case if earlier fittings were done using a limited area, or 
		if the support film deviates from flatness), 
		it may help to re-do the fitting (summarized under the previous bullet).</LI>
	    <LI><I>HINT:</I> If you close a pair or micrographs and re-open them
		(with the appropriate <I>Marker File Number</I>), 
	    you can resume from where you left off.</LI>
	</UL>

<LI><P>Obtain a noise image for normalization.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="makesomenoise.rct">makesomenoise.rct</a> </LI>
		<LI>INPUTS: a micrograph </LI>
		<LI>OUTPUTS: <B>noise</B>, <B>tmpnoise/noi***</B> </LI>
		<LI>Subsequent windowed images will be normalized against the output noise file.
			If you have a pre-existing noise file, copy it to <B>noise.dat</B></LI>
		<LI>One noise file will be chosen at random by the batch file.
			You can also look at the noise images in the <B>tmpnoise/</B> directory
			and copy one that looks even "noisier" to <B>noise.dat</B>
			(in the top-level directory).</LI>
	</UL>

<LI><P>Window particles from tilted and untilted micrographs.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="windowparticles.rct">windowparticles.rct</a> </LI>
		<LI>PARAMETER: <I>[decimation-factor]</I> -- If you used the output of 
		    <a href="shrinkmics.rct">shrinkmics.rct</a> and/or 
		    <a href="padmics.rct">padmics.rct</a>, use that value here. 
		    If you used the full-sized micrographs, use the value used under 
		    <I>Edit</I> &gt; <I>Resize</I> (for JWEB) or 
		    <I>Image reduction factor</I> (for X-Window WEB). 
		    Ultimately, this parameter needs to be the factor between 
		    the full-sized micrograph and the version used for particle-selection.</LI>
		<LI>INPUTS: <B>params</B>, <B>docmicpairs</B>, <B>noise</B>,
			<B>Micrographs/mic****</B>, <B>Micrographs/dcu****</B>, <B>Micrographs/dct****</B></LI>
		<LI>OUTPUTS: <B>listparticles</B>,
			<B>Zerodegr/Winrot/unt*****</B>, <B>Tilted/Winrot/tilt*****</B> </LI>
	</UL>

<LI><P>(Recommended for stained images) High-pass filter windowed images</P>
    
    <P>For negatively-stained images, it is often the case that the puddle of stain surrounding the particles 
    dominates the classification (although maybe not the case for deep-stained specimens).  
    In this case, it may be helpful to high-pass filter the images using a filter radius 
    larger than the size of your particle.  If the filter radius is too fine however, 
    the aligning power of the images will be lost.  You may need to tweak the radii.</P> 
    
    <P>If you are unsure whether to do this step, feel free to skip it, 
    but look at the reconstituted images when you run <a href="ca-pca.rct">ca-pca.rct</a> 
    in order to see if the stain is the predominant source of variation. </P> </LI>
	<OL>
	    <LI>BATCH FILE: <a href="highpass-untilted.rct">highpass-untilted.rct</a></LI>
	    <UL>
		<LI>INPUTS: <B>Zerodegr/Winrot/unt*****</B> (directory renamed to <B>Unhighpass</B></LI>
		<LI>OUTPUTS: <B>Zerodegr/Winrot/unt*****</B> </LI>
	    </UL>
	    <LI>BATCH FILE: <a href="highpass-tilted.rct">highpass-tilted.rct</a></LI>
	    <UL>
		<LI>INPUTS: <B>Tilted/Winrot/tilt*****</B> (directory renamed to <B>Unhighpass</B></LI>
		<LI>OUTPUTS: <B>Tilted/Winrot/tilt*****</B> </LI>
	    </UL>
	</OL>

<LI><P>Screen the windowed images for defects (micrograph edges, dust, etc.).</P></LI>
	<UL>
		<LI>Screen the untilted--specimen windowed images by running
		<a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/verify/VerifyDocs/montagefromdoc.htm">
		montagefromdoc.py</a>, using the following command:
			<PRE>montagefromdoc.py listparticles.dat Zerodegr/Winrot/unt*</PRE>
		Use <B>notgood</B> as the output doc filename.<BR></LI>
		<LI>Only click on the bad images.
			For the untilted-specimen images, the particle-selection need not be stringent. 
			There will be additional rounds of selection downstream.</LI>
		<LI>If particles are rejected, run: <a href="removebad.rct">removebad.rct</a> </LI>
		<UL>
		    <LI>INPUTS: <B>listparticles</B> (will be backed up by <a href="backup.rct">backup.rct</a>), <B>notgood</B> </LI>
		</UL>
		<LI>Now screen the tilted images for defects:</LI>
			<PRE>montagefromdoc.py listparticles.dat Tilted/Winrot/tilt*</PRE>
		<LI>Only click on the bad images.
			For the tilted images, this will be the only opportunity to weed out bad particles --
			such as dust, edges, double-particles, etc. -- so be more stringent here.</LI>
		<LI>If tilted particles are rejected, re-run <a href="removebad.rct">removebad.rct</a></LI>
	</UL>

<LI><P>Align the untilted-specimen particles using reference-free alignment.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="pairwise.rct">pairwise.rct</a> </LI>
		<LI>INPUTS: <B>listparticles</B>, <B>Zerodegr/Winrot/unt*****</B> </LI>
		<LI>OUTPUTS: <B>Zerodegr/Pairwise/rfreeavg001</B>, <B>Zerodegr/Aligned/cenu*****</B>, 
			<B>Zerodegr/Pairwise/docpairalign</B>, many others </LI>
		<LI>This batch file first aligns pairs of images, averages them, 
			then aligns the average of pairs, etc.
			The first level ("depth") will be slow, 
			and each subsequent level will be faster.</LI>
	</UL>

<LI><P><I>(optional)</I> Attempt to align average along coordinate axes</P></LI>
	<OL>
	    <LI>Align average along coordinate axes
		<UL>
		    <LI>BATCH FILE: <a href="reorientavg.rct">reorientavg.rct</a> </LI>
		    <LI>INPUTS: <B>Zerodegr/Pairwise/rfreeavg001</B> </LI>
		    <LI>OUTPUTS: <B>Zerodegr/Pairwise/dsolalign</B>, <B>Zerodegr/Pairwise/malign</B> </LI>
		    <LI>This batch file aligns the average to a mirrored version of itself, 
			    in an attempt to orient the major axis of the particle along the coordinate axes.
			    There will be two solutions, along <I>x</I> or along <I>y</I>. 
			    It is arbitrary which one to choose.  
			    If you wish to reorient the particles to either of these averages, 
			    note which solution to use (1 or 2), and run the next batch file, 
			    <a href="sumalign.rct">sumalign.rct</a>.</LI>
		</UL>

	    <LI>Combine alignments of individual particles with reoriented average</LI>
		<UL>
			<LI>BATCH FILE: <a href="sumalign.rct">sumalign.rct</a> </LI>
			<LI>PARAMETER: solution 1 or 2 (see description below) </LI>
			<LI>INPUTS: <B>Zerodegr/Winrot/unt*****</B>, <B>Zerodegr/Pairwise/dsolalign</B>, 
				<B>Zerodegr/Pairwise/docpairalign</B> </LI>
			<LI>OUTPUTS: <B>Zerodegr/Pairwise/dalu001</B>, <B>Zerodegr/Aligned/cenu*****</B>, 
				<B>Zerodegr/Pairwise/avgu001</B> </LI>
			<LI>If you wish to apply the alignments of the average from
				<a href="reorientavg.rct">reorientavg.rct</a>, then run this batch file.  
				Note which solution you would like to apply (1 or 2). 
				Typically, in one solution the major axis is along <I>x</I>.
				and in the other it is along <I>y</I>.
				It is arbitrary which solution to use.</LI>
		</UL>
	</OL>

<LI><P>Filter the aligned, untilted particles.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="filtershrink.rct">filtershrink.rct</a> </LI>
		<LI>PARAMETERS: reduction factor, low-pass filter parameters </LI>
		<LI>INPUT: <B>Zerodegr/Aligned/cenu*****</B></LI>
		<LI>OUTPUT: <B>Zerodegr/Filtered/flt*****</B> </LI>
		<LI>Remember to change the input filename if you ran <a href="sumalign.rct">sumalign.rct</a>. </LI>
		<LI>The filtered images produced will be used for multivariate data analysis and classification.
			To look at the filtered untilted particles, type: </LI>
			<PRE>montagefromdoc.py listparticles.dat Zerodegr/Filtered/flt*</PRE>
	</UL>

<LI><P>Run correspondence analysis (CA) or principal component analysis (PCA) on filtered images.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="ca-pca.rct">ca-pca.rct</a> </LI>
		<LI>PARAMETERS: </LI>
			<UL>
				<LI><I>flag for CA (1), PCA (2), or iterative PCA (3)</I> --
					One method or another sometimes crashes due to "numerical inaccuracy."
						I, subjectively, try CA first, then iterative PCA, then PCA last.</LI>
				<LI><I>number of factors to calculate</I> --
					If after you run this batch file, 
					all of the eigenimages look meaningful,
					increase this parameter and re-run.</LI>
			</UL>
		<LI>INPUT: <B>Zerodegr/Filtered/flt*****</B> </LI>
		<LI>OUTPUT: <B>Zerodegr/MSA/cas_***</B>, <B>Zerodegr/MSA/reconstituted***</B>, others </LI>
		<LI>The commands to generate the PostScript eigenvalue histogram requires the SPIRE Python libraries.
		    Installation instructions for SPIRE can be found 
		    <a href="http://www.wadsworth.org/spider_doc/spire/doc/download.html#FullInstall">here</a>.</LI>
		<LI>For negatively-stained samples, when looking at the reconstituted images, 
		    if it appears that the stain distribution is the greatest source of variation, 
		    go back to the high-pass filtration step above.</LI>
	</UL>

<LI><P>Classify images. Chose one of:</P></LI>
	<OL TYPE=A>
		<LI>K-means clasification. </LI>
		<UL>
			<LI>BATCH FILE: <a href="kmeans.rct">kmeans.rct</a> </LI>
			<LI>PARAMETERS:</LI>
				<UL>
					<LI><I>desired number of classes</I> --
						Too small a number, and dissimilar particles will be grouped together, 
						and too large a number, and the class averages will be noisy. 
						I typically use a number that doesn't produce classes 
						whose montage doesn't fit on the screen, i.e., 
						one class per 50 to 75 particles.</LI>
					<LI><I>number of factors to use</I> --
						choose this number based on the appearance of the eigenimages 
						and the strength of the factors (based on the histogram). 
						Use of the weaker factors will probably not make a big difference though.</LI>
				</UL>
			<LI>INPUTS: <B>Zerodegr/MSA/cas_***</B>, <B>Zerodegr/Filtered/flt*****</B> </LI>
			<LI>OUTPUTS: <B>classavg***</B>, <B>docclass****</B>, others </LI>
		</UL>

		<LI>Hierarchical classification, using Ward's method. </LI>
		<OL>
			<LI>Run classification. </LI>
			<UL>
				<LI>BATCH FILE: <a href="hierarchical.rct">hierarchical.rct</a> </LI>
				<LI>PARAMETER: <I>number of factors to use</I> --
					choose this number based on the appearance of the eigenimages 
					and the strength of the factors (based on the histogram). 
					Use of the weaker factors will probably not make a big difference though.</LI>
				<LI>INPUTS: <B>Zerodegr/MSA/cas_***</B> </LI>
				<LI>OUTPUTS: <B>docdendro</B> </LI>
			</UL>

			<LI>Generate class averages. Choose one of:</LI>
			<OL TYPE=a>
				<LI>Generate binary tree using tree.py</LI>
				<UL>
					<LI>BATCH FILE: <a href="binarytree.rct">binarytree.rct</a> </LI>
					<LI>SUBROUTINES: averagenode.rct, update_lut.rct </LI>
					<LI>PARAMETER: <I>ending depth</I> --
						For the depth that you specify here, there will be up to 2^<I>depth</I> averages generated. 
						For high values, the averages may be too noisy to be useful. 
						It is better to make too many and display fewer in the next step.</LI>
					<LI>INPUT: <B>docdendro</B> </LI>
					<LI>OUTPUTS: <B>avgnode***</B>, <B>labeled***</B> </LI>
					<LI>NOTE: The format of SPIDER's dendrogram doc file changed in version 17.13. 
						Previous the top two branches had height 1, whereas now, it's 100. 
						If this batch file crashes, check this parameter.</LI>
					<LI>To view the binary tree, run <A HREF="tree.py">tree.py</A>. It requires 
						<A HREF="http://www.wadsworth.org/spider_doc/spider/docs/python/spipylib/code/Spiderutils.html">
						Spiderutils.py</A> from the 
						<A HREF="http://www.wadsworth.org/spider_doc/spire/doc/packages.html">
						SPIRE</A> installation. Options for the program are described 
						<a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/MSA/index.htm">
						here</a>. Briefly, an example of the syntax is:
						<PRE>cd Zerodegr/Tree ; tree.py labeled0001.dat 4 selclasses.dat</PRE>
						Save the selection file with <I>CTRL-s</I>.<P></P></LI>
				</UL>

				<LI>Generate binary tree as (large) SPIDER image</LI>
				<UL>
					<LI>Alternatively, you can run <a href="tree.rct">tree.rct</a>,
						which creates a large image in SPIDER format. 
						Be aware that the image becomes unwieldy for large trees. 
						If you choose this option, you may wish to copy the file to another format
						and view it in a dedicated image-viewer.</LI>
				</UL>

				<LI>Simple class averages</LI>
				<UL>
					<LI>This option is equivalent to the bottom row in the binary tree above, 
						or the display in WEB, and similar to simple K-means.</LI>
					<LI>BATCH FILE: <a href="classavg.rct">classavg.rct</a> </LI>
					<LI>PARAMETER: <I>desired number of classes</I></LI>
					<UL>
					</UL>
						<LI>Too small a number, and dissimilar particles will be grouped together, 
							and too large a number, and the class averages will be noisy. 
							I typically use a number that produces no classes 
							whose montage doesn't fit on the screen, i.e., 
							one class per 50 to 75 particles.</LI>
						<LI>If you're going to run <a href="binarytree.rct">binarytree.rct</a>
							next, the necessary class averages will be generated there.  
							So, it doesn't matter how many classes you request here.</LI>
					<LI>INPUTS: <B>Zerodegr/Hierarchical/docdendro</B>
					    (other classification options write <B>docdendro</B> in different locations)</LI>
					<LI>OUTPUTS: <B>classavg***</B>, <B>docclass****</B>, <B>listclasses</B>, others </LI>
				</UL>
			</OL>
		</OL>

		<LI>Clustering using Diday's method. </LI>
		<OL>
			<LI>Run classification. </LI>
			<UL>
				<LI>BATCH FILE: <a href="cluster.rct">cluster.rct</a> </LI>
				<LI>PARAMETER: <I>number of factors to use</I> --
					choose this number based on the appearance of the eigenimages 
					and the strength of the factors (based on the histogram). 
					Use of the weaker factors will probably not make a big difference though.</LI>
				<LI>INPUTS: <B>Zerodegr/MSA/cas_***</B> </LI>
				<LI>OUTPUTS: <B>docdendro</B> </LI>
			</UL>

			<LI>Generate class averages. </LI>
			<UL>
				<LI>BATCH FILE: <a href="classavg.rct">classavg.rct</a> </LI>
				<LI>PARAMETER: <I>desired number of classes</I> --
						Too small a number, and dissimilar particles will be grouped together, 
						and too large a number, and the class averages will be noisy. 
						I typically use a number that produces no classes 
						whose montage doesn't fit on the screen, i.e., 
						one class per 50 to 75 particles.</LI>
				<LI>INPUTS: <B>docdendro</B> </LI>
				<LI>OUTPUTS: <B>classavg***</B>, <B>docclass****</B>, <B>listclasses</B>, others </LI>
				<LI>I haven't been able to make this compatible with 
					<a href="binarytree.rct">binarytree.rct</a>,
					so for now, it's functionally equivalent to K-means.</LI>
			</UL>
		</OL>

	</OL>

<LI><P>Select unique classes.</P></LI>
	<UL>
		<LI>The classes selected will be used for multireference alignment. 
			It isn't vital to verify indivudual particles yet.
			This step will depend on which classification method you used, 
			i.e., hierarchical, K-means, or Diday's.
			The <B>.verifybyview</B> file included in the tarball 
			<LI>Included in the tarball is a starting <B>.verifybyview</B> file to use. 
				If not using 
				<a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/verify/VerifyDocs/interface.htm">
				verifybyview.py</a>, call the output class-selection doc file <B>selclasses</B>.</LI>
		<OL TYPE=A>
			<LI>To view+select the averages from K-means, type:</LI>
				<PRE>verifybyview.py Zerodegr/Kmeans/listclasses.dat</PRE>
			<LI>To view+select the averages from hierarchical classification, use one of the following:
				<PRE>verifybyview.py Zerodegr/Hierarchical/listclasses.dat</PRE>
				
				<U>OR</U> (if you ran <a href="binarytree.rct">binarytree.rct</a>):</LI>
				<PRE>cd Zerodegr/Tree ; tree.py labeled0001.dat 5 selclasses.dat</PRE>
			<LI>To view+select the averages from Diday's method, type:</LI>
				<PRE>verifybyview.py Zerodegr/Cluster/listclasses.dat</PRE>
		</OL>
		<LI>For verifybyview.py, the filenames at the initial dialog are:</LI>
			<UL>
				<LI><B>listclasses</B> -- can be specified on the command line </LI>
				<LI><B>classavg***</B> -- class-average template </LI>
			</UL>
		Subsequent filenames are:
			<UL>
				<LI><B>Zerodegr/Filtered/flt*****</B> -- particle template </LI>
				<LI><B>selclasses</B> -- list of selected classes </LI>
				<LI><B>byhand***</B> -- selected particles in a given class</LI>
			</UL>
	</UL>

<LI><P>Run multireference alignment.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="multirefalign.rct">multirefalign.rct</a> </LI>
		<LI>PARAMETERS, notable ones include: </LI>
		  <UL>
		    <LI><I>[cg-option]</I> -- if this is set to 1 (the default), 
		        center of gravity for each reference is computed using 
		        <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/cgph.html">'CG PH'</a>. 
		        Using negative-stain data, this option may not work well.  
		        You can look at the <B>Zerodegr/Multiref/ref***</B> files while the 
		        (slow) multi-reference alignment is running to check.</LI>
		    <LI><I>[mirror-option]</I> -- if this is set to 0 (the default), 
		        experimental images are NOT compared to mirrored references.  
		        (I couldn't find an obvious real-life case where particles were flipped by exactly 180 degrees, 
		        but a pseudo-two-fold in the grid plane caused some confusion. 
		        Using phantom data, checking mirrored references seems to work, 
		        for what it's worth.)  In the worst-case scenario --
		        if this parameter is kept at 0, but you do have 180-degree-flipped particles -- 
		        the flipped particles will simply form a distinct class, and
		        separate reconstructions are computed downstream for each class.
		        </LI>
		  </UL>
		<LI>INPUTS: <B>selclasses</B>, <B>docclass****</B>, 
			<B>Zerodegr/Aligned/cenu*****</B>, <B>Zerodegr/Winrot/unt*****</B> </LI>
		<LI>OUTPUTS: <B>Zerodegr/Multiref/ref***</B>, <B>Zerodegr/Multiref/docalign</B>, 
			<B>Zerodegr/Multiref/selview***</B>, <B>Zerodegr/Aligned/cenu*****</B>, 
			<B>Zerodegr/Multiref/viewavg***</B></LI>
		<LI>This batch file takes the class averages selected in the previous step, 
			re-centers them, and uses these for multireference alignment.</LI>
		<LI>Be sure that the label <I>[old_class_dir]</I> the batch file 
			corresponds to the method use to select classes.
			For example, by default this label is set to <B>Zerodegr/Tree</B>,
			the location of the outputs of <a href="binarytree.rct">binarytree.rct</a>.</LI>
	</UL>

<LI><P>Re-filter aligned images.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="filtershrink.rct">filtershrink.rct</a> </LI>
		<LI>PARAMETERS: reduction factor, low-pass filter parameters </LI>
		<LI>INPUT: <B>Zerodegr/Aligned/cenu*****</B></LI>
		<LI>OUTPUT: <B>Zerodegr/Filtered/flt*****</B> </LI>
	</UL>

<LI><P>Classify the particles assigned to each reference.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="classifybyview.rct">classifybyview.rct</a> </LI>
		<LI>PARAMETERS:</LI>
			<UL>
				<LI>reduction factor</LI>
				<LI>flag for CA (1), PCA (2), or IPCA (3)</LI>
				<LI>number of factors to use</LI>
			</UL>
		<LI>INPUTS: <B>Zerodegr/Multiref/listrefs</B>, <B>Zerodegr/Multiref/ref***</B>, 
			<B>Zerodegr/Multiref/selview***</B>, <B>Zerodegr/Filtered/flt*****</B> </LI>
		<LI>OUTPUTS: <B>Zerodegr/Multiref/View***/listclasses</B>, 
			<B>Zerodegr/Multiref/View***/classavg***</B>, 
			<B>Zerodegr/Multiref/View***/docclass***</B> </LI>
		<LI>This batch file performs a separate classification 
			for the particles assigned to each reference.
	</UL>

<LI><P>Check the classification results.</P></LI>
	<UL>
		<LI>Check the classes with the following command:</LI>
			<PRE>verifybyview.py Zerodegr/Multiref/View001/listclasses.dat</PRE>
			The initial filenames are:
				<UL>
					<LI><B>listclasses</B> -- specified on the command line </LI>
					<LI><B>classavg***</B> -- class-average template </LI>
				</UL>
			Subsequent filenames are:
				<UL>
					<LI><B>Zerodegr/Filtered/flt*****</B> -- particle template </LI>
					<LI><B>selclasses</B> -- list of selected classes </LI>
					<LI><B>byhand***</B> -- selected particles in a given class </LI>
				</UL>
		<LI>If all of the class averages under a particular reference look the same, 
			proceed to the next solid bullet ("Verify individual particles from last iteration of multireference alignment.").</LI>
		<LI>If there are homogeneous subsets under a particular reference, 
			then select them in verifybyview.py, using right-click. 
			Don't forget to save the good-class list for each view, 
			under <i>File -&gt; Save selection</i>.
		<LI>There is no need to select similar-looking class averages, 
			which would then be used as separate references, but 
			if there are important variations, it might be useful to include both.
		<LI>Re-run the last three steps, <I>i.e.</I>:</LI>
			<OL>
				<LI><a href="multirefalign-descend.rct">multirefalign-descend.rct</a> 
					-- a copy of <a href="multirefalign.rct">multirefalign.rct</a>
					The following filenames/parameters are changed:</LI>
					<UL>
						<LI>Input <I>OLD_CLASS_DIR</I> is now the previous 
							multireference alignment directory, e.g., <B>Multiref</B></LI>
						<LI>Output <I>MULTIREF_DIR</I> is now the new directory, 
							for example <B>Multiref2</B></LI>
						<LI>The parameter <I>[subdir-flag]</I> set to <I>1</I> will serve as a flag 
							to look in the <B>View***</B> subdirectories for the class averages
							for subsequent runs.</LI>
					</UL>
				<LI><a href="filtershrink.rct">filtershrink.rct</a></LI>
				<LI><a href="classifybyview.rct">classifybyview.rct</a> -- 
				    Input <I>CLASS_DIR</I> is now the new 
				    multireference alignment directory, <I>e.g.</I>, <B>Multiref2</B></LI>
			</OL>
		<LI>Repeat these three steps as many times as necessary,
			changing directory names as necessary,
			to obtain relatively homogeneous populations per view. 
			A batch file <a href="multirefalign3.rct">multirefalign3.rct</a> is included, which is 
			literally identical to <a href="multirefalign-descend.rct">multirefalign-descend.rct</a> 
			except for the input and output directory names.  </LI>
	</UL>

<LI><P>Verify individual particles from last iteration of multireference alignment.</P></LI>
	<UL>
		<LI>Type the following (assuming you performed 2 rounds of multi-reference alignment):</LI>
			<PRE>verifybyview.py Zerodegr/Multiref2/View001/listclasses.dat</PRE> 
		<LI>INPUTS: <B>listclasses</B>, <B>classavg***</B>, <B>docclass***</B>, <B>Zerodegr/Filtered/flt*****</B> </LI>
		<LI>OUTPUTS: <B>selclasses</B>, <B>byhand***</B> </LI>
		<LI>At this point, we will keep only good particles.
			Exclude particles that do not resemble the class average.
			Indivudal particles are sorted from best correlation to worst.
			A more thorough description of 
			<a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/verify/VerifyDocs/interface.htm">
				verifybyview.py can be found here</a></LI>
		<LI>In the example above, 
			I assume two iterations of classification and multireference alignment.
			If more or fewer iterations were needed,
			change the corresponding multireference-alignment directory name above.</LI>
		<LI><i>HINT:</i> Don't forget to save the good-class list in verifybyview.py. 
			It is located in the class-average window under <I>File/SaveSelection</I>. 
			The keyboard shortcut, alternatively, is <I>ALT-s</I>. </LI>
	</UL>

<LI><P>Combine selected particles from classes.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="combinegoodclasses.rct">combinegoodclasses.rct</a> </LI>
		<LI>INPUTS (assuming again that you performed 2 rounds of multi-reference alignment): </LI>
			<UL>
				<LI><B>Zerodegr/Multiref2/listrefs</B> </LI>
				<LI><B>Zerodegr/Multiref2/View***/selclasses</B> </LI>
				<LI><B>Zerodegr/Multiref2/View***/byhand***</B> (or <B>Zerodegr/Multiref2/View***/docclass****)</B> </LI>
			</UL>
		<LI>OUTPUTS: <B>Zerodegr/Multiref2/View***/goodsel</B> </LI>
		<LI>This batch files creates one list of particles for each reference view.</LI>
		<LI>In the example above, 
			I assume two iterations of classification and multireference alignment.
			If more or fewer iterations were needed,
			change the corresponding multireference-alignment directory name above.</LI>
		<LI><I>HINT:</I> It may be useful to re-classify only the good particles, 
			if, for example, there's an asymmetry present that is washed out by the bad particles.  
			In that case, re-run classifyview using <B>goodsel***</B> instead of <B>selview***</B>.
			Change the output filenames, so that they don't overwrite previous classification output, 
			e.g., add <I>good</I> to the beginning of the filenames. 
			If you find a new class, using the names of the new doc files, re-run
			<a href="multirefalign-descend.rct">multirefalign-descend.rct</a>. 
			It may be useful to classify the bad particles too.</LI>
	</UL>

<LI><P>Average selected images</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="viewaverages.rct">viewaverages.rct</a></LI>
		<LI>SUBROUTINE: <a href="viewaverage1.rct">viewaverage1.rct</a></LI>
		<LI>INPUTS: <B>Zerodegr/Aligned/cenu*****</B>, <B>Zerodegr/Multiref2/goodsel***</B>    
		    (assuming again that you performed 2 rounds of multi-reference alignment)</LI>
		<LI>OUTPUTS: <B>goodavg***</B>, <B>goodvar***</B> </LI>
	</UL>

<LI><P>Center tilted-specimen particles.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="centertilt.rct">centertilt.rct</a> </LI>
		<LI>PARAMETERS: center-of-gravity option (see NOTE below), 
		    filter parameters (see NOTE below)</LI>
		<LI>INPUT: <B>Tilted/Winrot/tilt*****</B> </LI>
		<LI>OUTPUTS: <B>Tilted/Aligned/cent*****</B>, <B>Tilted/dalt001</B>, 
			<B>Tilted/avgt001</B> </LI>
		<LI>This step is straightforward relative to the alignment of the untilted particles. 
			All we are doing here is centering the tilted particles.
			For the three Euler angles needed for backprojection, 
			one is derived from the rotation angle of the untilted images, 
			and the other two are determined by the geometry of the tilt pair.</LI>
		<LI>To look at the centered tilted particles, type: </LI>
			<PRE>montagefromdoc.py listparticles.dat Tilted/Aligned/cent*</PRE>
		<LI>If this batch file runs slowly, you can save time by centering only the selected particles.  
			To do this, change the input <B>listparticles</B> to <B>Zerodegr/Multiref#/combinedgood</B> 
			from the appropriate directory, <I>i.e.</I>, <b>Multiref</b>, <b>Multiref2</b>, etc.</LI>
		<LI>NOTE: To center the average after reference-free alignment (translation only), 
		    <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/cgph.html">
		    'CG PH'</a> is used as the default.  However, as noted in the documention, 
		    'CG PH' sometimes fails.  As an alternative, a section option is available, 
		    which rotates the average by 180 degrees and aligns this to the unrotated average.  
		    This option is used by setting parameter <I>[cg-option]</I> to 2.  
		    If neither option 1 nor 2 work well, setting <I>[cg-option]</I> will not 
		    attempt to center the average.  
		    Be sure to inspect the average to ensure that is is centered.</LI>
		<LI>NOTE: Low-pass filtration of the images seems to help the 
		<a href="http://www.wadsworth.org/spider_doc/spider/docs/man/apsa.html">
		    'AP SA'</a> command.  A strong filter is not needed; feel free to experiment.  
		    The filter is applied to temporary, intermediate images; 
		    The final, centered images will be unfiltered.
		</LI>
	</UL>

<LI><P>Store Euler angles.</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="storeangles.rct">storeangles.rct</a> </LI>
		<LI>PARAMETER: <I>[mirror-yn]</I> (see NOTE below)</LI>
		<LI>INPUTS: <B>docalign</B>, <B>Micrographs/dcb****</B> </LI>
		<LI>OUTPUTS: <B>Tilted/dang-store</B> </LI>
		<LI>Use the most recent aligment doc file for the untilted images, 
			e.g., <B>Zerodegr/Multiref2/docalign</B>.</LI>
		<LI>NOTE: Changing parameter <I>[mirror-yn]</I> will reverse the handedness of the structure. 
		    Whether this flag should be set to 0 or 1 depends on numerous variables in the data collection and processing, 
		    such as the direction in which the goniometer is rotated, how the micrographs are digitized, etc. 
		    Unfortunately, it is difficult to determine from first principles whether the handedness needs to be flipped, 
		    so the safest way to know how to set this parameter is to generate a reconstruction of a sample with known handedness.  
		    Once the data-collection/image-processing conventions are set, change them as seldom as possible, or else 
		    you may need to re-test for flips in handedness.</LI>
		<LI><P>This batch file stores the three Euler angles in a doc file to use in the backprojection.
		    Assuming the direction of the tilt axes is similar in all of your tilt pairs, 
		    the displayed tilt parameters <U>SHOULD</U> be similar to each other.  
		    However, during the fitting of the angular parameters during tilt-pair picking, 
		    there is a possibility that equivalent (as far as the fitting is concerned) solutions are chosen inconsistently. </P>
		    
		    <P>For example, in the sample RCT data in the 
		    <a href="http://www.wadsworth.org/spider_doc/spider/docs/protocol_download.html">Nature Protocols download</a>, 
		    the tilt axes are approximately 0.  
		    It is possible for the fitted tilt-axis angle determined by WEB or JWEB to be 0 to -180 degrees.  
		    
		    </P>
		    </LI>
	</UL>

<LI><P>Compute 3D reconstructions</P>
    
    <P>This step will compute 3D reconstructions for each class, 
    as classified in the last iteration of multi-reference alignment. </P></LI>
	<UL>
		<LI>BATCH FILE: <a href="bpclass.rct">bpclass.rct</a> </LI>
		<LI>INPUTS: <B>Zerodegr/Multiref2/listrefs</B>, <B>Zerodegr/Multiref2/goodsel***</B>, 
		    <B>Tilted/dang-store</B>, <B>Tilted/Aligned/cent*****</B> </LI>
		<LI>OUTPUTS: <B>Volumes/vcla***</B> </LI>
<!-- 		<LI>details</LI> -->
	</UL>

<LI><P>Filter one or all 3D reconstructions</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="volfilt.rct">volfilt.rct</a> </LI>
		<LI>PARAMETERS:</LI>
		  <UL>
		    <LI><I>[single-class]</I> -- The default value of <I>0</I> will filter all class volumes. 
		        To filter a single volume, perhaps to fine-tune a specific class, 
		        enter the number of that class.</LI>
		    <LI><I>[header-type]</I>, <I>[header-param1]</I>, <I>[header-param2]</I> -- 
		        parameters for the Fourier filter</LI>
		    <LI><I>[override-yn]</I> -- if pre-existing doc file <B>docvolfilt</B> exists 
		        (more on this file below), setting this parameter to <I>1</I> 
		        will override the filter parameters above and 
		        will use the values in the docfile instead</LI>
		  </UL>
		<LI>INPUTS: <B>Zerodegr/Multiref2/listrefs</B>, <B>Volumes/vcla***</B> </LI>
		<LI>OUTPUTS: <B>Volumes/vflt***</B>, <B>Volumes/docvolfilt</B> </LI>
		<LI>The output doc file <B>docvolfilt</B> contains a record of 
		    the most recent filter parameters used.  
		    By setting the parameter <I>[override-yn]</I> to <I>1</I>, 
		    the filter parameters from this editable file will be used. </LI>
	</UL>

<LI><P>Align volumes to each other</P>
    
    <P>Skip this step if you have a single class.</P>
    
    <P>This batch file aligns two volumes to each other.
       Choose one volume as an alignment reference, to which the rest of class volumes will be aligned.  
       After an initial alignment using a coarse search grid using 
       <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/pj3q.html">'PJ 3Q'</a>,
       a finer search will be performed using
       <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/or3q.html">'OR 3Q'</a>
       (which needs an initial estimate for optimal function).
    </P>
    
    <UL>
	<LI>BATCH FILE: <a href="volalignprj.rct">volalignprj.rct</a> </LI>
	<LI>SUBROUTINE: <a href="montageprj.rct">montageprj.rct</a> </LI>
	<LI>PARAMETERS:</LI>
	  <UL>
	    <LI><I>[exp-num]</I> -- the number for the experimental volume to align</LI>
	    <LI><I>[ref-num]</I> -- the number for the reference volume</LI>
	    <LI><I>[num-solns]</I> -- number of initial alignment solutions to compare 
	        -- multiple initial solutions may converge to the same refined solution</LI>
	    <LI><I>[dtheta]</I> -- angular increment for initial search, as in
		<a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/recon/newprogs/refproj.spi">
		refproj.spi</a>.</LI>
	    <LI><I>[shift-range]</I>,<I>[shift-step]</I>,<I>[first-ring]</I> -- 2D search parameters for 
	        <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/apsh.html">'AP SH'</a>, as in
		<a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/recon/newprogs/apsh.spi">
		apsh.spi</a>.</LI>
	  </UL>
	<LI>INPUTS: <B>Volumes/vcla***</B> (reference and experimental volume to align) </LI>
	<LI>OUTPUTS:</LI>
	  <UL>
	    <LI><B>prj_***</B> -- re-projection stacks </LI>
	    <LI><B>dalv***</B> -- alignment parameters for each solution requested</LI>
	    <LI><B>vali***</B> -- aligned class volume</LI>
	    <LI><B>mproj***</B> -- comparison of reference projection versus 
	        initial and refined alignments, for each solution requested</LI>
	    <LI><B>list2merge</B> -- running list of aligned classes with preferred alignment solution
	        -- more below</LI>
	  </UL>
    </UL>

    <P>The first row of each slice in <B>mproj***</B> shows the reference projection. 
       Each additional row corresponds to one alignment solution, from "best" to "worst." 
       The left-hand image is the re-projection following the initial, coarse alignment, and 
       the right-hand image is the re-projection following the refined alignment using 
       <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/or3q.html">'OR 3Q'</a>.</P>
    
    <P>If the better alignment solution is not solution #1, then 
       edit in <B>list2merge</B> column #2, labelled <I>SOLUTIONNUM</I>.  
       If you do wish exclude the aligned class volume in the merging step altogether, 
       set this value to <I>0</I> in <B>list2merge</B>.</P>
       
    <P>The re-projections <B>prj_***</B> will illustrate the missing-cone artifact better than 
       isosurface presentations.</P>
    
<LI><P><I>(optional)</I> Merged particles from aligned class volumes into one reconstruction</P></LI>
    <UL>
	<LI>BATCH FILE: <a href="mergevols.rct">mergevols.rct</a> </LI>
	<LI>INPUTS: <B>dang-store</B>, <B>list2merge</B>, <B>dalv***</B>, 
	    <B>goodsel***</B>, <B>cent*****</B> </LI>
	<LI>OUTPUTS:</LI> <B>Volumes/vali***</B>, <B>Volumes/docvolangles</B> 
	  <UL>
	    <LI><B>dang-merged</B> -- combines particles' Euler angles with class-volume alignment angles </LI>
	    <LI><B>mergedsel</B> -- particle-selection file from merged classes </LI>
	    <LI><B>vtot999</B> -- merged volume </LI>
	  </UL>
	</UL>

    <P>If the parameter <I>[classvols-yn]</I> is set to 1, 
       volumes for each class will be reconstructed of the form <B>vtot***</B>,
       using the merged Euler angles. 
       They should look very similar to the <B>vali***</B> reconstructions from the previous step, 
       <a href="volalignprj.rct">volalignprj.rct</a>, although 
       in this case the volume will have undergone one fewer interpolation.</P>
    
    <P>You will probably want to filter the reconstruction(s) from this step. 
       Edit <a href="volfilt.rct">volfilt.rct</a> to operate on the <B>vtot***</B> volume(s).</P>
    

<LI><P>Prepare files for reference-based alignment</P></LI>
	<UL>
		<LI>Before running this step, download the reference-based alignment tarball and untar it by typing:
		    <PRE>tar -zxvf spiproject.tar.gz</PRE>
		This will create a new directory called <I>myproject</I><BR>
		If you rename that directory, remember to change the output in this ensuing batch file accordingly.</LI>
		<LI>BATCH FILE: <a href="prepare-prjmatch.rct">prepare-prjmatch.rct</a> </LI>
		<LI>INPUTS: <B>lots</B> </LI>
		<LI>OUTPUTS: <B>lots</B> </LI>
		<LI><P>This batch file will copy information in a form that can be understood by the 
		    <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/recon/mr.html">
		    reference-based alignment protocol.</a>
		    Begin with the section entitled 
		    <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/recon/mr.html#SH">
		    "Alignment"</a> with the step 
		    <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/recon/newprogs/sel_by_group.spi">
		    sel_by_group.spi</a>. </P>
		    
		    <P>We have not (yet) implemented CTF-correction for the tilted-specimen particle images 
		    (we will be using only the tilted images), so we will be ignoring the CTF.  
		    (Adjust your expectations for the resulting reconstruction accordingly.) 
		    For the steps that present the option of accounting for the CTF or not 
		    (such as 
		    <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/recon/newprogs/apshgrp.spi">
		    apshgrp.spi</a> vs.
		    <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/recon/newprogs/apsh.spi">
		    apsh.spi</a>), use the version that does not take into account the CTF (in this example, 
		    <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/recon/newprogs/apsh.spi">
		    apsh.spi</a>).</P></LI>
	</UL>

<HR>

<B><P>Miscellaneous batch files</P></B>

<LI><P>Projection onto convex sets</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="batchlink">batchname</a> </LI>
		<LI>INPUTS: <B>input</B> </LI>
		<LI>OUTPUTS: <B>output</B> </LI>
		<LI>details</LI>
	</UL>

<!--<LI><P>DESCRIPTION</P></LI>
	<UL>
		<LI>BATCH FILE: <a href="batchlink">batchname</a> </LI>
		<LI>INPUTS: <B>input</B> </LI>
		<LI>OUTPUTS: <B>output</B> </LI>
		<LI>details</LI>
	</UL>-->


</UL>

<HR>

<B><P>References</P></B>
<OL>
    <LI>
        Radermacher M, Wagenknecht T, Verschoor A, Frank J. 
        (1987) Three-dimensional reconstruction from a single-exposure, random conical tilt series applied to 
        the 50S ribosomal subunit of <I>Escherichia coli</I>.
        <I>J Microsc.</I>  <B>146</B>:113-36.</LI>
    <LI>Shaikh TR, Gao H, Baxter WT, Asturias F, Boisset N, Leith A, and Frank J. (2008) 
        SPIDER image-processing for single-particle reconstruction of biological macromolecules from electron micrographs.
        <I>Nature Protocols</I> <B>3</B>: 1941-74.</LI>
    <LI>Huang T, Shaikh TR, Gupta K, Contreras-Martin LM, Grassucci RA, Van Duyne GD, Frank J, Belfort M .
        (2011) The group II intron ribonucleoprotein precursor is a large, loosely packed structure. 
        <I>Nucleic Acids Res.</I> <B>39</B>: 2845-54.</LI>
</OL>

<HR>

</BODY>
</HTML>

