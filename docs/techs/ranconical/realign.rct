; REALIGNS IMAGES
; 
; Adapted from pairwise.rct

; ------------------ Parameter ------------------

[progressInterval] = 1000  ; progress message written every Nth particle

; ----------------- Input files -----------------
fr l
[selection_list]listparticles                     ; particle list
fr l
[final_align_doc]Zerodegr/Pairwise/docalign   ; final, reference-based alignment doc
fr l
[unaligned_image]Zerodegr/stk2-winrot@*****         ; particle template

; ----------------- Output files -----------------
fr l
[aligned_dir]Zerodegr             ; output directory
fr l
[aligned_stack][aligned_dir]/stk3-aligned     ; aligned-image stack (w/o "@")
fr l
[aligned_images][aligned_stack]@*****   ; aligned-image template

; --------------- END BATCH HEADER ---------------

vm
echo "if(! -d [aligned_dir]) mkdir [aligned_dir]"|csh

de
[aligned_stack]@

; get #particles
ud n [num-particles]
[selection_list]

; loop through particles
do lb3 x30=1,[num-particles]
    ud ic,x30,x36
    [selection_list]
    
    IF (int(x30/[progressInterval]) .EQ. x30/[progressInterval]) THEN
        VM
        echo "Working on {*****x30}th particle out of {*****[num-particles]}"
    ENDIF

    ; read alignment parameters
;    ud ic,x30,x31,x32,x33,x34,x35,x36  ; for AP MQ
    ud ic,x36,x81,x82,x83,x84,x85,x33,x34,x35,x89,x90,x91,x92,x93,x94,x31
    [final_align_doc]
    ; x36==particle#, x33==in-plane angle, x34==x-shift, x35==y-shift, x31==mirror-flag

    ; if necessary, mirror after shift+rotate
    if(x31.lt.0) then
        rt sq
        [unaligned_image]x36
        _31      ; OUTPUT
        x33      ; in-plane angle
        x34,x35  ; x-,y-shift

        mr
        _31  ; INPUT: rotated, shifted image
        [aligned_images]x36
        Y    ; mirror around y-axis
    else
        rt sq
        [unaligned_image]x36
        [aligned_images]x36
        x33      ; in-plane angle
        x34,x35  ; x-,y-shift
    endif
lb3
; end particle-loop

; close docs
ud ice
[final_align_doc]
ud ice
[selection_list]

;; Computation of the average and variance maps of the last cycle
;as dc
;[aligned_images]  ; INPUT: aligned-image template
;[selection_list]  ; INPUT: selection file
;A                 ; average _A_ll images
;[final_avg]       ; OUTPUT: average
;[final_var]       ; OUTPUT: variance

vm
echo "Done"; date

en d

; Modified 2014-04-03
;    2014-04-02 (trs & mp) -- uses stacks
