head	1.20;
access;
symbols;
locks; strict;
comment	@# @;


1.20
date	2019.02.08.17.03.51;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2019.02.05.18.09.34;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2019.02.01.16.29.59;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2019.01.09.18.55.48;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2018.11.16.17.50.57;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2018.11.15.15.48.40;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2018.11.15.15.25.18;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2014.02.05.10.17.56;	author tapu;	state Exp;
branches;
next	1.12;

1.12
date	2014.02.04.19.58.48;	author tapu;	state Exp;
branches;
next	1.11;

1.11
date	2014.01.24.08.19.45;	author tapu;	state Exp;
branches;
next	1.10;

1.10
date	2014.01.24.08.00.42;	author tapu;	state Exp;
branches;
next	1.9;

1.9
date	2014.01.20.22.37.08;	author tapu;	state Exp;
branches;
next	1.8;

1.8
date	2013.08.16.14.20.59;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2012.12.15.03.17.43;	author tapu;	state Exp;
branches;
next	1.6;

1.6
date	2012.04.13.21.56.18;	author tapu;	state Exp;
branches;
next	1.5;

1.5
date	2012.04.13.21.48.02;	author tapu;	state Exp;
branches;
next	1.4;

1.4
date	2012.01.31.18.22.21;	author tapu;	state Exp;
branches;
next	1.3;

1.3
date	2009.08.03.18.01.16;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.16.14.51.27;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.16.14.24.26;	author leith;	state Exp;
branches;
next	;


desc
@Tapu's text from 15 Dec 2008
@


1.20
log
@links
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
    <title>MSA</title>
    <link rel='stylesheet' href='tapu.css' type='text/css' />
</head>
<body>


<p align="center">
<font size="7">Multivariate Data Analysis</font> <br />
<font size="4">Previously known as multivariate statistical analysis</font>
</p>

<hr />

<p>There are only three essential steps here, and the second one is even optional:</p>
<ol>
    <li>Alignment in two dimensions                           </li>
    <li>Dimension-reduction -- expression of a <i>m</i>x<i>n</i> 
        image using only a few terms, i.e., eigenvectors      </li> 
    <li>Classification                                        </li> 
</ol>

<p>
   For the classification below to be sensible, the images will need to 
   have been aligned. The alignment step here is optional if the images 
   have been aligned already. 
</p>

<p>
   The dimension-reduction step is even optional, in theory. In principle, 
   one could classify the raw images (which is what SPIDER operation 
   <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/apc.html">'AP C'</a> 
   does). As an example here, I'm using correspondence analysis for 
   the dimension-reduction. A similar method is principal-component 
   analysis (PCA); to run PCA, one needs to change an option under SPIDER 
   operation 
   <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/cas.html">'CA S'</a> 
   (here, in the procedure file <a href="ca-pca.msa">ca-pca.msa</a>). 
</p>

<p>
 For classification, there are three methods illustrated here: Diday's 
 method, Ward's method, and K-means. The individual classification 
 operations are described in more depth in the 
 <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/classification/tutorial.html">
      classification tutorial</a>. 
</p>

<hr />

<p><b><font size="4">Getting started</font></b></p>

<ul>
   <li>Download and unpackage the 
   <a href="tar_archive/msa_procs.tar">tarball containing the procedure files</a>      <br />
   The files will be written into the current directory, so create a new one, 
    if so desired.                                                       </li>
</ul>

<hr />

<p><b><font size="4">Quick version</font></b></p>

<p>
This quick version is here partly for simplicity, and partly for legacy reasons.  
The more complete and more up-to-date workflow is presented below.
</p>

The overall inputs are simply:
<ul>
    <li>A particle stack</li>
    <li>A selection file, listing the image numbers in the stack file above</li>
</ul>

If your inputs are not in this form, refer to the full alignment below and then return here.

<ol>
    <li><b>[Optional] High-pass filtration</b> 
    <p>For negatively-stained images, it is often the case that the puddle of stain surrounding the particles 
    dominates the classification (although maybe not the case for deep-stained specimens).  
    In this case, it may be helpful to high-pass filter the images using a filter radius 
    larger than the size of your particle.  If you cut off <u>too</u> much of the low-frequency information 
    however, the aligning power of the images will be lost.  You may need to tweak the radii.<br />
    <ul>
        <li>PROCEDURE FILE: <a href="highpass.msa">highpass.msa</a></li> 
        <li>INPUT PARAMETERS: filter radii                         </li>
        <li>INPUTS:  Selection file, unfiltered particle stack     </li>
        <li>OUTPUTS: Filtered particles                            </li>
    </ul>
    </p> 
    
    <li><b>Reference-free alignment</b>. --  choose one of these two options:
    <ol type="a">
        <li>[Recommended] Pairwise alignment
        <ul>
            <li>PROCEDURE FILE: <a href="pairwise.msa">pairwise.msa</a>       </li> 
            <li>INPUT PARAMETER: Object diameter (in pixels, after decimation)</li>
            <li>INPUTS: Unaligned particles, selection file                   </li>
            <li>OUTPUTS: Aligned particles, averages 
 
            <p>Conceptually, this alignment first aligns pairs of images and averages them.
                 Then, it aligns pairs of averages of those pairs and averages them, and so forth.  
                 This type of alignment appears to be less random than does 
                 <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/apsr.html">'AP SR'</a>, 
                 which chooses seed images as alignment references.                </p>
            <p><b>Reference</b>: Marco S, Chagoyen M, de la Fraga LG, Carazo JM, Carrascosa JL (1996)
                Ultramicroscopy <b>66</b>: 5-10.</p></li>
        </ul>
        
        <li>Using <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/apsr.html">'AP SR'</a> 
        <ul>
            <li>PROCEDURE FILE: <a href="apsr4class.msa">apsr4class.msa</a></li>
            <li>INPUT PARAMETER: Object diameter (pixels, after decimation)</li>
            <li>INPUTS: Unaligned particle stack, selection file           </li>
            <li>OUTPUTS: Aligned particles, averages
 
            <p>There may to be a memory limit in 
            <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/apsr.html">'AP SR'</a>.
            If you get a core dump, truncate the selection file and try again.</p></li>
        </ul>

    </ol>

    <li><b>Low-pass filtration and downsampling</b> 
    <p>The low-pass filtration step will make the particles easier to visualize. 
       The downsampling will speed up the computation.
    </p>
    
    <ul>
        <li>PROCEDURE FILE: <a href="filtershrink.msa">filtershrink.msa</a></li> 
        <li>INPUT PARAMETERS: Filter radii, decimation factor              </li>
        <li>INPUTS: Selection file, unfiltered particle stack              </li>
        <li>OUTPUTS: Filtered particles                                    </li>
    </ul>
    <p />

    <li><b>Dimension-reduction</b> 
    <ul>
    <li>1. <i>(optional)</i> Create a custom mask for your particle.
        The alternative is that a circular mask will be used below.</li>
        <ul>
            <li>PROCEDURE FILE: <a href="custommask.msa">custommask.msa</a></li>
            <li>PARAMETERS:                                                </li>
                <ul>
                    <li>Fourier filter radius for input image              </li>
                    <li>first threshold, in units of standard deviations   <br />
                        That is, the threshold will be set to the average intensity 
                        plus some number times the standard deviation.     </li>
                    <li>Fourier filter radius for the thresholded image    <br />
                        The first thresholded image is often too jagged, 
                        so this filtration serves to smooth it.            </li>
                    <li>Second threshold, for the filtered mask, between 0 and 1 <br />
                        The lower the number, the more generous the mask will be.</li>
                </ul>
            <li>INPUT: average image, such as <b>pairwise/rfreeavg001</b>  </li>
            <li>OUTPUT: <b>stkmask</b>, whose slices are as follows:       </li>
                <ol>
                    <li>Filtered image                </li>
                    <li>Thresholded image             </li>
                    <li>Filtered mask                 </li>
                    <li>Final mask                    </li>
                    <li>Mask-multipled image          </li>
                    <li>Inverted mask                 </li>
                    <li>Inverted mask-multiplied image</li>
                </ol>
            <br />You may need to fiddle with the parameters to get a nice mask.
        </ul>

            <center><p><table border="1">
                <tr><td><center><p align="center">
                <img src="images/custom.gif">            <br />
                Slices of the custom-made mask stack file
                </p></center></td></tr>
            </table></p></center>

    <li>2. Run correspondence analysis or principal component analysis</li>
        <ul>
            <li>PROCEDURE FILE: <a href="ca-pca.msa">ca-pca.msa</a>   </li>
            <li>Uses Python script <a href="eigendoc.py">eigendoc.py</a> (J.S.L. &amp; T.R.S.) </li>
            <li>INPUT PARAMETER: Number of eigenfactors to calculate 
                                 (more than 99 will require 
                                 some user modification)              </li>
            <li>INPUT: aligned particles                              </li>
            <li>OUTPUTS:                                              </li>
              <ul type="circle">
                <li><a href="images/factormap.gif">factormaps</a> 
                  -- 2D plot of a pair of factors (e.g., 1 vs. 2) for each image </li>
                <li><a href="images/histogram.gif">eigenvalue histogram</a> 
                  -- shows how much variation is accounted for for each factor   </li>
                <li><a href="images/eigenimages.jpg">eigenimages</a> 
                   <br />&nbsp; Qualitatively, eigenimages are the systematic variations of the images.
                   <br />&nbsp; Think of expressing each image as the average plus some linear 
                                combination of the eigenimages.                  </li>
                <li><a href="images/reconstituted.jpg">reconstituted images</a> 
                  -- these are characteristic images with extreme values for each factor</li>
              </ul>
            
            <p>To switch to PCA (or iterative PCA), change the register <i>x28</i> in
            <a href="ca-pca.msa">ca-pca.msa</a> to 2 (PCA) or 3 (iterative PCA). </p>
            
            <p>After running, examine the eigenimages and decide which ones to use. 
            Typically all but the first few are noisy. If not, increase the number 
            of eigenfactors to calculate, and re-run this PROCEDURE FILE.        </p>
        </ul>

        <center><p><table border="1">
            <caption align="bottom">
                The worm hemoglobin images are artificial and can be described with only a few factors. <br />
                The ribosome images are real, and require more factors to describe the data. <br />
                Note the vertical axis on the two histograms, representing the percent variation accounted for.
                </caption>
            <tr>
                    <td><center><p align="center">
                        </p></center></td>
                    <td><center><p align="center">
                        factor 1 vs. 2<br />
                        <i>(click to enlarge)</i>
                        </p></center></td>
                    <td><center><p align="center">
                        eigenvalue histogram<br />
                        <i>(click to enlarge)</i>
                        </p></center></td>
                    <td><center><p align="center">
                        eigenimages<br />
                        <i>(click to enlarge)</i>
                        </p></center></td>
                    <td><center><p align="center">
                        reconstituted images<br />
                        <i>(click to enlarge)</i>
                        </p></center></td>
                </tr>
            <tr>
                    <td><center><p align="center">
                        worm <br />
                        hemoglobin <br />
                        (artificial)
                        </p></center></td>
                    <td><center><p align="center">
                        <a href="images/hb-factormap.gif">
                        <img src="images/hb-factormap-small.gif" border="2"></a>
                        </p></center></td>
                    <td><center><p align="center">
                        <a href="images/hb-histogram.gif">
                        <img src="images/hb-histogram-small.gif" border="2"></a>
                        </p></center></td>
                    <td><center><p align="center">
                        <a href="images/eigenimages.jpg"">
                        <img src="images/eigenimages.jpg" border="2" width="119" height="128"></a>
                        </p></center></td>
                    <td><center><p align="center">
                        <a href="images/reconstituted.jpg"">
                        <img src="images/reconstituted.jpg" border="2" width="167" height="128"></a>
                        </p></center></td>
                </tr>
            <tr>
                    <td><center><p align="center">
                        Ribosome            <br />
                        (real)
                        </p></center></td>
                    <td><center><p align="center">
                        <a href="images/factormap.gif">
                        <img src="images/factormap-small.gif" border="2"></a>
                        </p></center></td>
                    <td><center><p align="center">
                        <a href="images/histogram.gif">
                        <img src="images/histogram-sm32.gif" border="2"></a>
                        </p></center></td>
                </tr>
        </table></p></center>
    </ul>

    <li><b>Classification </b>-- choose one of three options: 

    <ol type="a">
        <li><p>K-means classification, using 
            <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/clkm.html">'CL KM'</a><br />
            
            The advantage of K-means is that it is simple, 
            requiring primarily the number of classes to divide the particles into. 
            The simplicity is also the disadvantage; 
            there is no relation between the classes generated, 
            in contrast to the hierarchical methods below.</p>
            
        <ul>
            <li>PROCEDURE FILE: <a href="kmeans.msa">kmeans.msa</a>    </li>
            <li>INPUT PARAMETERS: Number of factors, number of classes </li>
            <li>OUTPUT: class averages 

            <p>It can be informative to look at the individual particles from a class.  
                You can use 
                <a href="http://www.wadsworth.org/spider_doc/web/docs/web.html">WEB</a>/
                <a href="http://www.wadsworth.org/spider_doc/web/docs/jweb.html">JWEB</a>, or 
                <a href="http://www.wadsworth.org/spider_doc/spider/spire/tools-docs/tools.html">montagefromdoc</a>.  
                <br />
                Usage:                                                          <br />
                <code><b>montagefromdoc &nbsp; KMeans/docclass001.dat</b></code><br />
                If you have requested too many classes, there will be 
                 similar-looking class averages.  
                If you have requested too few, there will be dissimilar 
                particles within a class.  </p></li>
        </ul>
        
        <li>[Recommended] Ward's method, using 
        <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/clhc.html">'CL HC'</a>  -- 
        The advantage is that, unlike Diday's method below, the 
        dendrogram branches to any desired number of classes, down in size to 
        individual particles. The disadvantage is that the dendrogram is unreadable if 
        there are so many branches. You can truncate the dendrogram in WEB/JWEB 
        as described below. 
            <ul>
                <li>PROCEDURE FILE: <a href="hierarchical.msa">hierarchical.msa</a> 
                <ul>
                    <li>INPUT PARAMETER: number of eigenfactors to use</li>
                    <li>OUTPUT: dendrograms (<a href="images/hcps.gif">PostScript</a> and 
                        SPIDER formats)
 
                    <p>After running, decide how many classes to use. 
                       The PostScript file may be highly branched, and nodes may be 
                        <a href="images/hcps.gif">unreadable</a>. 

                    <center><p><table border="1">
                            <tr>
                                <td><center><p align="center">
                                    <a href="images/hcps.gif">
                                    <img src="images/hcps-small.gif"> <br />
                                    Untruncated dendrogram</a>        <br />
                                    <i>(click to enlarge bottom row)</i>
                                </p></center></td>
                            </tr>
                    </table></p></center>

                    The SPIDER-format dendrogram document can be viewed 
                        with WEB/JWEB and 
                        truncated. In 
                        <a href="http://www.wadsworth.org/spider_doc/web/docs/web.html">WEB</a>, 
                        go to <i>Commands -&gt; Dendrogram </i> 
                        (<a href="images/hcweb5.gif"><i>example</i></a>).
 
                        In 
                        <a href="http://www.wadsworth.org/spider_doc/web/docs/jweb.html">JWEB</a>,
                        go to <i>File -&gt; Open SPIDER Document File</i>. 


        <center><p><table border="1">
                <tr>
                    <td><center><p align="center">
                        <a href="images/hcweb5.gif">
                        <img src="images/hcweb-small.gif">  <br />
                        Dendrogram in X-Window 
                        <a href="http://www.wadsworth.org/spider_doc/web/docs/web.html">WEB</a></a><br />
                        <i>(click to enlarge)</i>
                    </p></center></td>
                </tr>
        </table></p></center></p>
                </ul>

    <li><a name="tree"><p>Visualize binary tree</a><br />
        It is often not clear where to truncate the dendrogram. 
        In X-Window <a href="http://www.wadsworth.org/spider_doc/web/docs/web.html">WEB</a>, 
          one only sees the terminal nodes in the dendrogram averaged.  
        (In <a href="http://www.wadsworth.org/spider_doc/web/docs/jweb.html">JWEB</a>, 
         averaged images in not implemented at the time of this writing, 
        although Bill Rice says that if the prefix is two characters long, it works.)  </p>
        
        <ul>
            <li>PROCEDURE FILE: <a href="binarytree.msa">binarytree.msa</a>
                <ul>
                    <li>SUBROUTINES: <a href="averagenode.msa">averagenode.msa</a>, 
                                     <a href="update_lut.msa">update_lut.msa</a>  </li>

                    <li>INPUT PARAMETER: Tree depth (number of averages will 
                           be (2**depth - 1))                                     </li>

                    <li>INPUTS: Dendrogram (from 
                        <a href="hierarchical.msa">hierarchical.msa</a>), images  </li>

                    <li>OUTPUTS: Averages (unlabeled and labeled)                 </li>
                </ul>

            <li>Visualize the output using 
                <a href="http://www.wadsworth.org/spider_doc/spider/spire/tools-docs/tools.html">binarytree.py</a> 
                Syntax:                                                                                       <br />
                <i>binarytree &nbsp;&nbsp; labeled001.dat &nbsp;&nbsp; 4 &nbsp;&nbsp; 2 &nbsp;&nbsp; 1024</i> <br />
                where:
                <ul>
                    <li><b>labeled001.dat</b> Example filename (without a wild card)            </li>
                    <li><i>4 (optional)</i>   Tree depth, i.e., the number of rows (default is 6)</li>
                    <li><i>2 (optional)</i>   Margin width (default is 2)                        </li>
                    <li><i>1024 (optional)</i>Canvas width                                    </li>
                </ul>
            <li>If <a href="http://www.wadsworth.org/spider_doc/spider/spire/tools-docs/tools.html">
                SPIDER's python tool -- binarytree.py</a> 
                is not installed, try <a href="spidertree.msa">spidertree.msa</a>. 
                The output is a SPIDER-format image. However, the file size
                may be very large. 
                <ul> 
                    <li>INPUT PARAMETERS: Tree depth (number of averages will be (2**depth - 1))</li>

                    <li>INPUTS: Averages from <a href="binarytree.msa">binarytree.msa</a>       </li>

                    <li>OUTPUTS: SPIDER-format tree image                                       </li>
                </ul> 

            <center><p><table border="1">
                <tr>
                   <td><center><p align="center">
                       <a href="images/tree3.jpg">
                       <img src="images/tree3-small.jpg">   <br />
                       binarytree.py, <i>depth=4</i></a>    <br />
                       <i>(click to enlarge)</i>

                   <td><center><p align="center">
                       <a href="images/tree4.jpg">
                       <img src="images/tree4-small.jpg">  <br />
                       tree.msa, <i>depth=4</i></a>        <br />
                       <i>(click to enlarge)</i>
                       </p></center></td>
                </tr>
            </table></p></center>
        </ul>
        
        </ul>
</ul>
        <p />

        <li>Diday's method, using 
            <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/clcla.html">'CL CLA'</a> -- 
            I hear that this method  works exceedingly well. In 
            practice though, I find that I have limited control over the number of 
            classes, which may or may not be a problem depending on the 
            application. Also, I sometimes get errors with large data sets with this method. 
        <ul>
            <li>PROCEDURE FILE: <a href="cluster.msa">cluster.msa</a> 
            <ul>
                <li>INPUT PARAMETER: number of eigenfactors to use </li>
                <li>OUTPUT: dendrograms 
                    (<a href="images/dendrogram.gif">PostScript</a>
                    and SPIDER formats)
                <p>After running, decide how many classes to include. using 
                   <a href="http://www.wadsworth.org/spider_doc/web/docs/web.html">WEB</a>/
                   <a href="http://www.wadsworth.org/spider_doc/web/docs/jweb.html">JWEB</a> 
                (<i>Commands -&gt; Dendrogram</i>) and clicking on 
                 <i>Show averaged images</i>.</p></li> 
            </ul>

            <center><p><table border="1">
                <tr>
                    <td><center><p align="center">
                        <a href="images/dendrogram.gif">
                        <img src="images/dendrogram-sm4.gif"> <br />
                        dendrogram                            <br />

                        PostScript format</a>                 <br />
                        <i>(click to enlarge)</i>
                    </p></center></td>
                </tr>
            </table></p></center>

            <li>PROCEDURE FILE: <a href="classavg.msa">classavg.msa</a> 
                <ul>
                   <li>INPUT PARAMETER: Desired number of classes </li> 
                   <li>OUTPUT: Class averages                     </li> 
                </ul>
        </ul>
        <p />

    </ol>
</ol>

<hr />

<p><b><font size="4">Full version</font></b></p>

<p>
This full version is the 2D alignment scheme which I use routinely. 
It is a subset of the steps for alignment and classification for 
untilted-specimen images for random conical tilt.
</p>

<ul>

<li><p><b>[Recommended] Generate parameter file</b></p>           </li>
    
    <p>
    If using <font class="guitool">SPIRE</font>, a parameter doc file will be generated 
    upon starting a project. While not strictly required, without this file, 
    you will need to remember to check for these frequently-used parameters each time.  </p>
    
    <p>If not using <font class="guitool">SPIRE</font>, 
    run <a href="makeparams.msa">makeparams.msa</a>, 
    which will generate <font class="output">params</font>, a doc file containing the 
    <a href="params.html">reconstruction parameters</a>.
    </p>

    Not all 20 parameters are used, so here are the key values:
    
    <table class="outs">
    <tr valign="top"><td>&curren;                  </td>
        <td><b><i>5</i></b>:                       </td>
        <td>Pixel size, in Angstroms.</td></tr>
    <tr valign="top"><td>&curren;                  </td>
        <td><b><i>17</i></b>:                      </td>
        <td>Window size, in pixels.</td></tr>
    <tr valign="top"><td>&curren;                  </td>
        <td><b><i>18</i></b>:                      </td>
        <td>Particle diameter, in pixels.          </td></tr>
    </table>
    
    <p>Alternatively, you can copy and modify this file from elsewhere. 
       An example file called <font class="input">bak-params</font> is present in the tarball.</p>
    

<li><p><b>Prepare particle stack.</b></p></li>
    
    <p>The following procedures will expect particle images in the form of a single stack, 
       plus a doc file with a list of particles.
       If your images are not in this form, we present two methods to generate them:
    </p>
    
    <ol type-a>
        <li><p><b>Combine unstacked images.</b></p> </li>
        
            <p> By default, the procedure <a href="win2stack.msa">win2stack.msa</a> 
                assumes that the input unstacked images are of the form 
                <font class="input">Particles/win*****</font>. 
                Edit as necessary. 
            </p>
            
            <p> Also, enter the highest particle number that you wish to import. 
                The procedure will look for the existence of particles up until this number.
            </p>
        
        <li><p><b>Concatenate a set of sets into one stack.</b></p> </li>
        
            <p> The procedure <a href="combinestacks.msa">combinestacks.msa</a> 
                will look for the presence of a series of stack files, 
                such as <font class="input">Particles/winser_*****</font>. 
                Programs such as <font class="guitool">e2boxer.py</font>, for example, 
                may generate a stack of images per micrograph.
            </p>
            
            <p> Also, enter the stack particle number that you wish to import. 
                The procedure will look for the existence of stacks up until this number.
            </p>
    </OL>
    
    <b>Outputs, for either of the two cases above:</b><br />

    <table class="outs">
        <tr valign="top"><td>&curren;                      </td>
            <td><font class="output">listparticles</font>: </td>
            <td>A list of windowed particles.              </td></tr>
        <tr valign="top"><td>&curren;                      </td>
            <td><font class="output">stk2-unaligned</font>:</td>
            <td>Single particle stack.                     </td></tr>
        <tr valign="top"><td>&curren;                      </td>
            <td><font class="output">stk1-unaligned_backup</font>:</td>
            <td>Generated in case high-pass filtration needs to be repeated.</td></tr>
    </table>
    
    </p>
    
<li><p><b>[Recommended for negatively-stained images] High-pass filter windowed images</b></p>
    
    <p>For negatively-stained images, it is often the case that the puddle of stain surrounding the particles 
    dominates the classification (although maybe not the case for deep-stained specimens).  
    In this case, it may be helpful to high-pass filter the images using a filter radius 
    larger than the size of your particle.  If you cut off <u>too</u> much of the low-frequency information 
    however, the aligning power of the images will be lost.  You may need to tweak the radii.</p> 
    
    <p>If you are unsure whether to do these steps, feel free to skip them, 
    but be sure to look at the reconstituted images when you run <a href="ca-pca.msa">ca-pca.msa</a> 
    in order to see if the stain is the predominant source of variation. </p> 
    
    <p>The PROCEDURE FILE <a href="highpass.msa">highpass.msa</a> reads the stack
    <font class="input">stk1-unaligned_backup</font> and generates:</p>
    
    <table class="outs">
        <tr valign="top"><td>&curren;</td>
            <td><font class="output">stk2-unaligned</font>:</td>
            <td>High-pass filtered untilted-specimen image stack (overwrites previous version).</td></tr>
    </table>

<li><p><b>Align the untilted-specimen particles using reference-free alignment.</b></p></li>

    <p> Before running classification, the particles will first be run through reference-free alignment.  
    Even if there are different views of particles (orientation or conformation), 
    the idea is that these different classes of particles will align consistently with 
    the type of particle to which it is aligned.
    </p>
    
    <p> There are a few different implementations of reference-free alignment, such as 
    <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/apsr.html">'AP SR'</a>. 
    The procedure file used here, <a href="pairwise.msa">pairwise.msa</a>, uses an algorithm called 
    the "pyramidal system for prealignment construction."  For more information, see the quick version above.  
    </p>
    
    <p> Briefly, <a href="pairwise.msa">pairwise.msa</a> takes the first two images from the stack
    <font class="input">stk2-winrot</font>, aligns them, and averages them.  
    In the next iteration, it will align pairs of averages, and then average them,  and so forth.  
    This type of alignment appears to be less random than does 
    <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/apsr.html">'AP SR'</a>, 
    which chooses seed images as alignment references.</p>

    <b>Outputs:</b><br />
    
    <table class="outs">
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Pairwise/stkcentavg</font>:</td>
                <td>Stack of centered intermediate averages, with circles overlain.
                    <br />See note about centering on the 
                    <a href="align.html">alignment parameters page</a>.</td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">stk3-aligned</font>:</td>
                <td>Aligned untilted-specimen image stack.
                    <br />This stack will be overwritten with subsequent alignments.</td></tr>
            <tr valign="top"><td>&curren;                            </td>
                <td><font class="output">Pairwise/stkaligned</font>: </td>
                <td>Copy of aligned untilted-specimen image stack,
                    <br />retained locally to the <font class="output">Pairwise/</font> directory.</td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Pairwise/rfreeavg001</font>:</td>
                <td>Final average of all images.                     </td></tr>
            <tr valign="top"><td>&curren;                            </td>
                <td><font class="output">Pairwise/docalign</font>:   </td>
                <td>Alignment doc file.                              </td></tr>
    </table>

<li><p><b>Low-pass filter and shrink the aligned particles.</b>      </p></li>

    The procedure file <a href="filtershrink.msa">filtershrink.msa</a> 
    low-pass filters and optionally shrinks the particle images. 
    The next step, multivariate data analysis, will be faster if 
    the image stack <font class="input">stk3-aligned</font> are made smaller. 
    Also, the individual images will be examined subsequently and 
    will be easier to recognize if they are low-pass filtered.</p>

    <b>Outputs:</b><br />
    
    <table class="outs">
            <tr valign="top"><td>&curren;                   </td>
                <td><font class="output">stkfiltered</font>:</td>
                <td>Low-pass, shrunken filtered image stack.</td></tr>
    </table>
    
    <p> The default parameters are hopefully reasonable. 
        To view the output filtered images, type:
        <br /><code class="snippet">montagefromdoc listparticles.spi stkfiltered.spi</code></p>
        
    <p> Adjust the filtration parameters as necessary, and re-run. </p>

<li><p><b>Run multivariate statistical analysis (MSA) on filtered images.</b></p></li>

    <p> The procedure file <a href="ca-pca.msa">ca-pca.msa</a> runs 
    correspondence analysis (CA) or principal component analysis (PCA) or iterative PCA (IPCA). 
    In principle, one can classify the image stack <font class="input">stkfiltered</font> 
    without running MSA, but here we will be using it. </p>
    
    <p> What this means, briefly, is that systematic variations are reduced into 
    an arbitrary number of factors (<i>e.g.,</i> 25 used here); 
    in this case, the factors can be expressed as images, or "eigenimages." 
    Each image can be reconstituted as the sum of these eigenimages, when using the proper weights.  
    How CA and PCA differ is in the way these weights are calculated. 
    The "importance" of each factor is the percent variation that is accounted for. 
    The eigenimages of lower importance typically correspond to noise. 
    Thus, an image reconstituted from the strongest eigenimages can be thought of as 
    a type of filtered image, where some contribution of noise has been excluded.
    </p>
    
    <p> For a more complete description of multivariate statistical analysis 
    (or more accurately, multivariate data analysis), see Chapter 4 in 
    <a href="#jf2006">Frank, 2006</a>.
    For details about the specific SPIDER commands pertaining to MSA, and example outputs, see the
    <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/classification/tutorial.html">
      classification and clustering tutorial</a>.</p>
    
       <b>Outputs:</b><br />
       
       <table class="outs">
        <tr valign="top"><td>&curren;</td>
            <td><font class="output">MSA/eigenimg</font>:  </td>
            <td>Stack of eigenimages, i.e., images showing systematic correlated variations between pixels.
                <br />For more information about eigenimages (and reconstituted images), see the
                <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/classification/tutorial.html#virtual">
                classification and clustering tutorial</a>.</td></tr>
        <tr valign="top"><td>&curren;</td>
            <td><font class="output">MSA/reconst</font>:   </td>
            <td>Stack of images reconstituted using a single factor
                <br />Factors can be positive or negative, hence the two versions for each.
                <br />For more information about reconstituted images (and eigenimages), see the
                <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/classification/tutorial.html#virtual">
                classification and clustering tutorial</a>.</td></tr>
    <tr valign="top"><td>&curren;</td>
        <td><font class="output">MSA/ps_eigenvalues.ps</font>:</td>
        <td>A PostScript file with a histogram of the percent variation for each factor.</td></tr>
    <tr valign="top"><td>&curren;</td>
        <td><font class="output">MSA/cas_IMC</font>:          </td>
        <td>A text file containing information about each factor and for each image
        <br />For more information about the output of
        <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/cas.html">'CA S'</a>, see the
        <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/classification/tutorial.html#CAPCA">
        classification and clustering tutorial</a>.           </td></tr>
    <tr valign="top"><td>&curren;</td>
        <td><font class="output">MSA/factormapAABB</font>:    </td>
        <td>PostScript format plots for factor #AA <i>vs.</i> factor #BB (where BB = AA+1)
        <br />Clusters are indicative of distinct classes.    </td></tr>
    </table>

    <br /><i>Important parameters:</i>
    
    <table class="outs">
        <tr valign="top"><td>&curren;                                   </td>
        <td><b><i>[cas-option]</i></b>:                                 </td>
        <td>Option of CA (option 1), PCA (2), or iterative PCA (3)
            <br />One method or another sometimes crashes due to "numerical inaccuracy."
            I subjectively try CA first, then iterative PCA, then PCA last.</td></tr>
        <tr valign="top"><td>&curren;                                   </td>
        <td><b><i>[num-factors]</i></b>:                                </td>
        <td>Number of factors to calculate.
            <br />If after you run this procedure file, all of the eigenimages look meaningful,
            then increase this parameter and re-run.                    </td></tr>
    </table>
    
    <p> <u>NOTE</u>: For negatively-stained samples, when looking at the reconstituted images, 
        it may be that the stain distribution is the greatest source of variation. 
        If this is the case, go back to the high-pass filtration step above.
    </p>

<li><p><b>Classify images.</b></p></li>

    <p> At this step, we willl attempt to separate the images into homogeneous subclasses.  
    There is a tradeoff between homogeneity of the subclasses, and 
    size of the subclasses (which is related to the improvement of signal-to-noise in the class averages). 
    In other words, if too few classes are used, dissimilar classes will be grouped together, and
    if too many classes are used, class averages will be likely redundant and noisy.
    Thus, there is some degree of subjectivity involved in the classification.
    </p>
    
    <p> For any of the classification options presented here, 
    choose the number of factors to use (parameter <i><b>[numFactors]</b></i>) 
    based on the appearance of the eigenimages and the strength of the factors (based on the histogram), 
    including those factors that you believe to represent true structural differences. 
    Use of weaker factors will probably not make a appreciable difference, however.
    </p>
    
    <p> There are three classification options given here. 
    (For hints about the usage of the different methods, see the quick version above.)
    </p>
    
    <p> To view the particles belonging to each class, refer below to the 
    <a href="#vbv">instructions about <font class="guitool">verifybyview</font></a>.</p>
    
    <br />Choose one of the following 3 classification options:
      <ol type-a>
        <li><b>[Recommended] Hierarchical classification, using Ward's method.</b> </li>
          <ol>
        <li><p><b>Run hierarchical classification.</b></p> </li>
        
            <p> This classification method uses SPIDER command 
                 <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/clhc.html">'CL HC'</a>. 
            For a description of the outputs, see the 
            <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/classification/tutorial.html#clhc">
            classification and clustering tutorial</a>.
            </p>
            
            <p>The procedure file <a href="hierarchical.msa">hierarchical.msa</a> 
            reads the MSA factor text file <font class="input">MSA/cas_IMC</font>.</p>
        
            <b>Output:</b><br />
            
            <table class="outs">
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Hierarchical/docdendro</font>:       </td>
                <td>Dendrogram doc file, showing the relatedness between images.  <br />
                See the 
                <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/classification/tutorial.html#clhc">
                classification and clustering tutorial</a> for more details.
                </td></tr>
            </table>
            
        <li><b>Generate class averages.</b></li>
        
        <p> In the previous step, we didn't explicitly assign classes. 
            We simply made the dendrogram, which describes the relatedness of the images. 
            In this step, we will explicitly pare down the dendrogram into classes.</p>
            
        Choose one of:      
          <ol type-a>
            <li><b>[Recommended] Generate binary tree</b></li>
            
            <p> It is somewhat arbitrary where to cut off the dendrogram 
                <font class="input">Hierarchical/docdendro</font> generated above. 
                This procedure file will generate class averages for <u>all</u> 
                depths until a specified cutoff, 
                averaging the image stack <font class="input">stkfiltered</font>.
                The output class averages are arranged into the format of a binary tree, such that 
                the average is the top-level node, the first two subclasses are at the next depth, 
                the first two classes of each of those two classes are at the next depth, etc.
                While it becomes straightforward how to draw the tree, the drawback is that 
                information is lost about the height of the branches.  
                That is, the height of the branches in the binary tree does not direct correspond to 
                the actual height of the branch in the dendrogram.
            </p>
                
            <p> In the procedure file <a href="binarytree.msa">binarytree.msa</a> 
                (which calls <a href="averagenode.msa">averagenode.msa</a> 
                and <a href="update_lut.msa">update_lut.msa</a>), 
                the parameter <i><b>[end-depth]</b></i> 
                will call for 2**<i><b>[end-depth]</b></i> class averages. 
                It is better to err on the side of too high a depth and display fewer in the next step.
            </p>
                
                <b>Outputs:</b><br />
            
                <table class="outs">
                                <tr valign="top"><td>&curren;                          </td>
                                    <td><font class="output">Tree/classavg***</font>:  </td>
                                    <td>Class average for each node on the binary tree.</td></tr>
                                <tr valign="top"><td>&curren;</td>
                                    <td><font class="output">Tree/labeled***</font>:   </td>
                                    <td>Class average, labeled with the class number and the 
                                        number of particles.                           </td></tr>
                </table>
                
            <p><u>NOTE</u>: The format of SPIDER's dendrogram doc file changed in version 17.13. 
                Previously the top two branches had height 1, whereas now, it's 100. 
                If this procedure file crashes, check the parameter <b><i>[top-branch]</i></b>.
            </p>
                
            <p> Instructions for viewing the binary tree are given below, 
                in the section below, on the <a href="#treepy">selection of class averages</a>.
            </p>
            
            <li><b>Generate a pre-specified number of class averages</b></li>
            
            <p> To use this option, run procedure file <a href="classavg.msa">classavg.msa</a>. 
            This option cuts off the dendrogram <font class="input">dendrodoc</font> at a specific height.  
            The height determines the number of classes into which the dendrogram is pared. 
            The number of classes desired is specified by the parameter <i><b>[numClasses]</b></i> in 
            <a href="classavg.msa">classavg.msa</a>. 
            However, because of the imprecision in how the appropriate height in the dendrogram is searched, 
            the actual number of classes found may not exactly match the desired number of classes. 
            </p>
            
            <b>Outputs:</b><br />
            <table class="outs">
                            <tr valign="top"><td>&curren;</td>
                                <td><font class="output">Hierarchical/classavg***</font>:</td>
                                <td>Class averages.</td></tr>
                            <tr valign="top"><td>&curren;</td>
                                <td><font class="output">Hierarchical/docclass***</font>:</td>
                                <td>List of particles belonging to each class.</td></tr>
                            <tr valign="top"><td>&curren;</td>
                                <td><font class="output">Hierarchical/listclasses</font>:</td>
                                <td>Doc file with each information about each class <br />
                                   Needed as an input for <font class="guitool">verifybyview.py</font> 
                                  (<a href="#vbv">more information below</a>).   </td></tr>
                            <tr valign="top"><td>&curren;</td>
                                <td><font class="output">Hierarchical/classvar***</font>:</td>
                                <td>Class variances.</td></tr>
            </table>
          </ol>
          </ol>

        <li><p><b>Run K-means classification</b></p> </li>
        
        <p> K-means classification uses the SPIDER command
        <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/clkm.html"> 'CL KM'</a>.  
        In contrast to the other classification options presented here, 
        K-means will generate exactly the number of classes requested.  
        The procedure file <a href="kmeans.msa">kmeans.msa</a> reads 
        <font class="input">MSA/cas_IMC</font> and, in a single step, 
        generates <i>K</i> (parameter <i><b>[numClasses]</i></b> in the procedure file) classes 
        from the image stack <font class="input">stkfiltered</font>.
        </p>
        
        <b>Outputs:</b><br />
            <table class="outs">
                        <tr valign="top"><td>&curren;</td>
                            <td><font class="output">Kmeans/docassign</font>:</td>
                            <td>Doc file of analogous format to 
                                dendrograms from the other 2 classification methods.</td></tr>
                        <tr valign="top"><td>&curren;</td>
                            <td><font class="output">Kmeans/classavg***</font>:</td>
                            <td>Class averages.</td></tr>
                        <tr valign="top"><td>&curren;</td>
                            <td><font class="output">Kmeans/docclass***</font>:</td>
                            <td>List of particles belonging to each class.</td></tr>
                        <tr valign="top"><td>&curren;</td>
                            <td><font class="output">Kmeans/listclasses</font>:</td>
                            <td>Doc file with each information about each class
                                <br />Needed as an input for <font class="guitool">verifybyview.py</font> 
                                (<a href="#vbv">more information below</a>).</td></tr>
                        <tr valign="top"><td>&curren;</td>
                            <td><font class="output">Kmeans/classvar***</font>:</td>
                            <td>Class variances.</td></tr>
            </table>
        
        <li><p><b>Clustering using Diday's method</b></p> </li>
          <ol>
        <li><p><b>Run hierarchical classification.</b></p> </li>
        
            <p> The procedure file <a href="cluster.msa">cluster.msa</a> uses SPIDER command
            <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/clcla.html"> 'CL CLA'</a>, 
            which uses Diday's method of moving centers. 
            Like with Ward's method above, this method is hierarchical, 
            reading <font class="input">MSA/cas_IMC</font>.</p>
            
                <b>Outputs:</b><br />
                
                <table class="outs">
                <tr valign="top"
                    <td>&curren;                                                    </td>
                    <td><font class="output">Cluster/docdendro</font>:              </td>
                    <td>Dendrogram doc file, showing the relatedness between images. <br />
                       See the 
                       <a href="http://www.wadsworth.org/spider_doc/spider/docs/techs/classification/tutorial.html#clhc">
                       classification and clustering tutorial</a> for more details.</td>
                </tr>
                </table>
            
        <li><b>Generate class averages.</b></li>
        
            <p> With the previous step, analogously to Ward's method above, 
            we didn't explicitly assign classes. 
            We simply made the dendrogram 
            <font class="input">Cluster/docdendro</font>, 
            which describes the relatedness of the images. </p>
            
            <p> In the procedure file <a href="classavg.msa">classavg.msa</a>, 
            we will explicitly pare down the dendrogram into classes. 
            (I haven't been able to make Diday's method compatible with 
            <a href="binarytree.msa">binarytree.msa</a>,
            so for now, it's functionally equivalent to K-means.) </p>
            
            <p> <u>NOTE:</u> The default parameter <i><b>[class-type]</b></i> 
                        in the procedure file is for Ward's hierarchical method, 
            so change that parameter to <i><b>2</b></i>.
            </p>
            
            <b>Outputs:</b><br />
                <table class="outs">
                                <tr valign="top"><td>&curren;</td>
                                    <td><font class="output">Cluster/classavg***</font>:</td>
                                    <td>Class averages.</td></tr>
                                <tr valign="top"><td>&curren;</td>
                                    <td><font class="output">Cluster/docclass***</font>:</td>
                                    <td>List of particles belonging to each class.</td></tr>
                                <tr valign="top"><td>&curren;</td>
                                    <td><font class="output">Cluster/listclasses</font>:</td>
                                    <td>Doc file with each information about each class
                                        <br />Needed as an input for 
                                         <font class="guitool">verifybyview.py</font> 
                                        (<a href="#vbv">more information below</a>).</td></tr>
                                <tr valign="top"><td>&curren;</td>
                                    <td><font class="output">Cluster/classvar***</font>:</td>
                                    <td>Class variances.</td></tr>
                </table>
          </ol>
      </ol>
      
    <p> It may be informative to see the individual particles that belong to each class. 
    This can be accomplished by using 
    <a href="http://www.wadsworth.org/spider_doc/spider/spire/tools-docs/verifybyview.html"> 
    <font class="guitool">verifybyview.py</font></a>. 

    There should be a settings file, <a href=".verifybyview">.verifybyview</a>, 
    present in the tarball. For more details, refer below to the 
    <a href="#vbv">section on viewing the class averages and constituent particles</a>.
    </p>    

<li><p><b>Select unique classes</b></p></li>

    <p> In the next step, we will select class averages to use as references 
    for multireference alignment. 
    The first option applies to the output of <a href="binarytree.msa">binarytree.msa</a> above. 
    The second option applies to all classification options from above, 
    including the output of <a href="binarytree.msa">binarytree.msa</a>.
    </p>
    
      <ol type-a>
    <li><a name="treepy"><b>View and select classes from binary tree</b></a></li>
    
        <p> To view the binary tree, <code class="snippet">cd Tree</code> and run:
        <br /><code class="snippet">binarytree labeled001.spi 4 goodclasses.spi</code>
        </p>
        
        <p> The parameter <b><i>4</i></b> on the command line above specifies 
        the maximum depth displayed of the tree.  
        A depth of <b><i>2</i></b>, in comparison, 
        would display only the combined average plus 
        the two classes corresponding to the first branch in the dendrogram. 
        Unlike the <i>Dendrogram</i> option in 
        <a href="http://www.wadsworth.org/spider_doc/web/docs/web.html">
              <font class="guitool">WEB</font></a>, 
        one advantage of <font class="guitool">binarytree.py</font> is that 
        averages are also shown for the non-terminal branches. 
        A disadvantage is that the height of the branches in the tree are purely relative, 
        and have no bearing to the numerical height of the branch point in the dendrogram
        (and thus the relatedness of the classes).
        </p>

        <p> As one proceeds down the tree, the number of classes increases, and 
        the number of particles per class decreases. 
        As is the case with classification in general, 
        there is a tradeoff between too big a class, 
        such that dissimilar particles are combined, and 
        too small a class, where the signal-to-noise ratio is low. 
        One strategy for displaying an appropriate depth is 
        the point at which a parent class's subclasses do not look different than the parent class. 
        </p>

        <p> Save the selection file with <i>CTRL-s</i>. 
        Further options for the program are described on the <a href="index.html"> MSA page</a>.
        </p>
        
        <p>The script <a href="http://www.wadsworth.org/spider_doc/spider/spire/tools-docs/tools.html">
                      <font class="guitool">binarytree.py</font></a>                 
        requires that you have 
        <a href="http://www.wadsworth.org/spider_doc/spider/spire/install.html"> 
        installed SPIDER's python tools</a>.
        
        If you don't have <font class="guitool">SPIRE</font></a> installed, 
        you can alternatively run <a href="binarytree.msa">tree.msa</a>, 
        which generates a (large) SPIDER image, <font class="output">Tree/tree*</font>. 
        To generate a selection file of class averages, <code class="snippet">cd Tree</code>, 
        and either categorize the montage of class averages in 
        <font class="guitool">WEB</font> or <font class="guitool">JWEB</font>, 
        or manually create the selection file interactively in SPIDER using 
        <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/doccreate.html"> 'DOC CREATE'</a>.  
        The selection file should be called 
        <font class="output">Tree/goodclasses</font>.
        </p>
        
    <li><b><a name="vbv">View the class averages and, optionally, the constituent particles using 
        <font class="guitool">verifybyview.py</font></a></b>                  </li>
        
        <p> This option can be used for any of the classification schemes described above. 
        It can also be used in conjunction with <font class="guitool">binarytree.py</font> to 
        view the individual particles that belong to a class.
        </p>
        
        <p> Open <font class="guitool">verifybyview.py</font> by typing: <br />
        <code class="snippet">verifybyview Tree</code>    &nbsp; 
            if you used the binary-tree option, or <br />
        <code class="snippet">verifybyview Kmeans</code>  &nbsp; 
            if you ran K-means classification, or  <br />
        <code class="snippet">verifybyview Cluster</code> &nbsp; 
            if you used Diday's clustering method, <i>etc.</i>
        </p>

        <br />
        Included in the tarball is a starting <a href=".verifybyview">.verifybyview</a> file 
        with mostly reasonable settings. 
        The primary purpose of that <a href=".verifybyview">.verifybyview</a> file, however, 
        was to view classes for multireference alignment, so 
        you may wish to change the following 2 settings:
        
        <table class="outs">
            <tr valign="top"><td>&curren;                                        </td>
            <td><i>Display &gt; <b>reverse order</b></i>:                        </td>
            <td>Toggling this option will display the averages starting from #1. </td></tr>
            <tr valign="top"><td>&curren;                                        </td>
            <td><i><i>Display &gt; labels &gt; <b>text label</b></i></i>:        </td>
            <td>Change <i><b>CCC</b></i> to <i><b>N</b></i>
                for the number of particles in a class.</td></tr>
        </table>

<!--            <p> The <a href=".verifybyview">.verifybyview</a> file is updated with each change. 
        If you make a mistake, or wish to revert to the original, 
        there are copies the of the file included in the tarball, called
        <a href=".verifybyview.tree">.verifybyview.tree</a> and 
        <a href=".verifybyview.multiref">.verifybyview.multiref</a>.
        </p>-->
        
        If <a href=".verifybyview">.verifybyview</a> is not present 
        (it is a hidden file, starting with a period, so to list it, type 
        <code class="snippet">ls -a</code> in your toplevel directory), 
        you will need to adjust the filenames. 
        In the initial popup window, the values should be:
        
        <table class="outs">
                    <tr valign="top"><td>&curren;              </td>
                        <td><font class="input">.spi</font>:   </td>
                        <td>Data extension. Adjust as necessary</td></tr>
                    <tr valign="top"><td>&curren;              </td>
                        <td><font class="input">Tree</font>:   </td>
                        <td>Initial directory.                 </td></tr>
                    <tr valign="top"><td>&curren;              </td>
                        <td><font class="input">listclasses</font>:</td>
                        <td>List of classes.                   </td></tr>
                    <tr valign="top"><td>&curren;              </td>
                        <td><font class="input">classavg***</font>:</td>
                        <td>Class-average template.            </td></tr>
        </table>

        <br />The first time you click on a class average, 
        a popup menu will appear to confirm filenames, 
        some of which are repeated from the initial popup menu. 
        The key filenames are:
        
        <table class="outs">
                    <tr valign="top"><td>&curren;</td>
                        <td><font class="input">docclass***.spi</font>:</td>
                        <td>List of particles belonging to each class.</td></tr>
                    <tr valign="top"><td>&curren;</td>
                        <td><font class="input">Filtered/flt*****.spi</font>:</td>
                        <td>Filtered-image template.</td></tr>
                    <tr valign="top"><td>&curren;</td>
                        <td><font class="output">goodclasses.spi</font>:</td>
                        <td>List of selected classes.</td></tr>
        </table>
        
        <p> When you click on a class average 
        (except for the first instance, when a popup menu appears), 
        a montage of individual particles will appear. 
        <br /><u>NOTE</u>: There is a limit of how many images that can be displayed in one montage. 
        Clicking on a class with ~1000 particles will show an error message to the console window.
        </p>

        <p> It is unnecessary to verify individual particles at this time. 
        Instead, simply select the class averages that you wish to use for multireference alignment. 
        Select the classes averages by right-clicking on them. 
        When you are finished, save the selection by going to the 
        <i>File</i> menu and selecting <i>Save selection</i> (or <i>ALT-s</i>).
        </p>
      </ol>


<li><p><b>Run multireference alignment</b></p></li>

    <p>The procedure file <a href="multirefalign.msa">multirefalign.msa</a> 
    takes the class averages <font class="input">classavg***</font> 
    selected in the previous step in <font class="input">goodclasses</font>, 
    re-centers them, and uses them for multireference alignment. 
    The previously aligned image stack <font class="input">stk3-aligned</font> 
    is used to generate the reference images 
    (the class averages are derived from filtered images which may have been downsampled), 
    and the unaligned image stack <font class="input">stk2-winrot</font> 
    will be aligned to those references. 
    </p>
    
    <p><u>NOTE</u>: Ensure that the classification method that you used 
    is reflected in the procedure file label <b><i>[old_class_dir]</i></b>. 
    If you used K-means, for example, use the directory <font class="input">Kmeans</font>.
    The default in the procedure file is <font class="input">Tree</font>. 
    </p>
    
    <b>Outputs:</b><br />
    <table class="outs">
            <tr valign="top"><td>&curren;                                           </td>
                <td><font class="output">Multiref1/stkref</font>:                   </td>
                <td>Stack of reference images used for alignment.     <br />
                    They should resemble full-sized, unfiltered versions of the 
                    selected class averages                                         </td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Multiref1/docalign</font>:                 </td>
                <td>Alignment parameters                               <br />
                    See the documentation for 
                    <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/apsh.html">
                    'AP SH'</a>   for an explanation of the doc file.               </td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Multiref1/selview***</font>:               </td>
                <td>A list of particles belonging to each class.                    </td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Multiref1/stkcenu</font>:                  </td>
                <td>Aligned untilted-specimen image stack. <br />
                    This copy is retained locally to the 
                    <font class="output">Pairwise/</font> directory.                </td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">stk3-aligned</font>:                       </td>
                <td>Aligned untilted-specimen image stack.
                    <br />This stack will be overwritten with subsequent alignments.</td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Multiref1/viewavg***</font>:               </td>
                <td>Average of particles belonging to each reference.               </td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">docmultiref</font>:</td>
                <td>Keeps track of successfully executed iterations of multireference alignment.</td></tr>
    </table>


<li><p><b>Re-filter aligned images</b></p></li>

    <p> With newly aligned images, we will re-filter and optionally shrink the 
    images before re-classifying them. 
    The newly aligned image stack, <font class="input">stk3-aligned</font>, 
    overwrote the old version, thus the inputs and outputs of 
    <a href="filtershrink.msa">filtershrink.msa</a> 
    will remain the same.
    </p>

    <b>Outputs:</b><br />
    
    <table class="outs">
    <tr valign="top"><td>&curren;                   </td>
        <td><font class="output">stkfiltered</font>:</td>
        <td>Low-pass, shrunken filtered image stack.</td></tr>
    </table>
    
    <p> Adjust the parameters as necessary, 
    although the parameters used previously should be applicable.
    </p>

<li><p><b>Classify the particles assigned to each reference</b></p></li>

    <p> In the next step, we will perform separate classifications for the 
    particles belonging to each reference. 
    In principle, the particles assigned to each reference should be identical. 
    However, if too few references were chosen, there may be homogeneous subsets assigned to a reference. 
    Also, if there are subtle but systematic structural differences, 
    those difference may be noticeable upon MSA and classification. 
    Also, junk particles (damaged particles or contaminants) may not match any references well. 
    </p>
    
    <p> The procedure file <a href="classifybyview.msa">classifybyview.msa</a> 
    performs separate classifications on the image stack <font class="input">stkfiltered</font>
    for each of the selection doc files <font class="input">Multiref1/selview***</font>. 
    As a rough measure of the quality of each particle and each class average, 
    the cross-correlation coefficient (CCC) is computed against the reference 
    <font class="input">Multiref1/ref***</font>.
    </p>
    
    <b>Outputs</b>:<br />
    
    <table class="outs">
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Multiref1/listclasses</font>:</td>
                <td>List of classes for all references
                    <br />Also contains various statistics for each class.</td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Multiref1/classavg***</font>:</td>
                <td>Class averages.</td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Multiref1/docclass***</font>:</td>
                <td>List of particles belonging to each class.        </td></tr>
    </table>

    <br /><i>Notable parameters include:</i>
    
    <table class="outs">
        <tr valign="top"><td>&curren;                                   </td>
        <td><b><i>[reduce-factor]</i></b>:                              </td>
        <td>Reduction factor applied in 
            <a href="filtershrink.msa">filtershrink.msa</a>.            </td></tr>
        <tr valign="top"><td>&curren;                                   </td>
        <td><b><i>[ca-pca]</i></b>:                                     </td>
        <td>Option of CA (option 1), PCA (2), or iterative PCA (3)
            <br />One method or another sometimes hangs due to "numerical inaccuracy."
            I subjectively try CA first, then iterative PCA, then PCA last.</td></tr>
        <tr valign="top"><td>&curren;                                      </td>
        <td><b><i>[first-view]</i></b>:                                    </td>
        <td>If this procedure file hangs or crashes after <i>N</i> reference-views, 
            <br />change the <b><i>[ca-pca]</i></b> option and 
            re-start the procedure file at <i>N+1</i>.                     </td></tr>
        <tr valign="top"><td>&curren;                                      </td>
        <td><b><i>[num-factors]</i></b>:                                   </td>
        <td>Number of factors to calculate in MSA and use in classification.<br /> 
            The classification does not appear to depend greatly on this value, 
            but you can check the eigenimages to see if variation is not well-represented.</td></tr>
    </table>
    

<li><p><b>Check the classification results using <font class="guitool">verifybyview</font></b></p></li>

    <p> We will check the results of the classification using 
        <font class="guitool">verifybyview.py</font>, 
        which requires that you have <a href="http://www.wadsworth.org/spider_doc/spider/spire/install.html"> 
        installed SPIDER's python tools</a>.
      </p>
    
    <p>Specifically, what we are looking for is that there is no subpopulation within 
       each reference-view that warrants its own class. 
       So for each reference-view, we will select the distinct class averages, and 
       use those for the next round of multi-reference alignment and classification. 
       If there is only one distinct class for each reference-view, you are finished with this step and 
       can proceed to the step of <a href="#verify">verifying individual particle images</a>.
    </p>

    <p> Open <font class="guitool">verifybyview.py</font> by typing: <br />
        <code class="snippet">verifybyview Multiref1</code>
    </p>

    <p> Included in the tarball is a starting <a href=".verifybyview">.verifybyview</a> file 
    with mostly reasonable settings. 
    However, if you viewed the outputs of <a href="binarytree.msa">binarytree.msa</a>, 
    <a href="classavg.msa">classavg.msa</a>, or <a href="kmeans.msa">kmeans.msa</a>, 
    this file will have been modified.  
<!--        Either edit the settings, or copy the archived version in the tarball, 
    called <a href=".verifybyview.multiref">.verifybyview.multiref</a>, 
    to <b>.verifybyview</b>-->
    </p>
    
    If the file <a href=".verifybyview">.verifybyview</a> is not present in your working
    directory you will need to adjust the filenames. 
    In the initial popup window, the values should be:

    <table class="outs">
        <tr valign="top"><td>&curren;                  </td>
            <td><font class="input">.spi</font>:       </td>
            <td>Data extension.                        </td></tr>
        <tr valign="top"><td>&curren;                  </td>
            <td><font class="input">Multiref1</font>:  </td>
            <td>Initial directory.                     </td></tr>
        <tr valign="top"><td>&curren;                  </td>
            <td><font class="input">listclasses</font>:</td>
            <td>List of classes.                       </td></tr>
        <tr valign="top"><td>&curren;                  </td>
            <td><font class="input">classavg***</font>:</td>
            <td>Class-average template.                </td></tr>
    </table>

    <br />The first time you click on a class average, 
    a popup menu will appear to confirm filenames, 
    some of which are repeated from the initial popup menu. 
    (For this popup window, the file extensions are required, 
    but will be omitted from the list below.)
    The key files are:

    <table class="outs">
            <tr valign="top"><td>&curren;                     </td>
                <td><font class="input">docclass***</font>:   </td>
                <td>List of particles belonging to each class.</td></tr>
            <tr valign="top"><td>&curren;                     </td>
                <td><font class="input">stkfiltered</font>:   </td>
                <td>Filtered-image stack.                     </td></tr>
            <tr valign="top"><td>&curren;                     </td>
                <td><font class="output">goodclasses</font>:  </td>
                <td>Output list of selected classes.          </td></tr>
    </table>

    <p> When you click on a class average 
    (except for the first instance, when a popup menu appears), 
    a montage of individual particles will appear. 
    </p>

    <p> It is unnecessary to verify individual particles at this time. 
    Instead, simply select the class averages that you wish to use for 
    the next round of multireference alignment. 
    Select the unique classes averages by right-clicking on them. 
    Conversely, do not select similar-looking class averages, 
    which would then be used as separate references in the next round.
    When you are finished with a reference-view, save the selection by going to the 
    <i>File</i> menu and selecting <i>Save selection</i>.
    If there is only one distinct class for each reference-view, 
    proceed to the step of <a href="#verify">verifying individual particle images</a>.
    </p>

    <p> If there is an unwieldy number of classes on the main window of 
    <font class="guitool">verifybyview.py</font>, we can break the into subsets.
    Instead of the command above, type: </p>
                <code class="snippet">verifybyview Multiref1/View001</code>
                
    <p>...which will show only the classes corresponding to reference 1.  
    You can proceed to the next reference by changing the directory number (e.g., <b>View002</b>)
    and pressing <i>Update</i> (after saving the class selection, if necessary).
    </p>

<li><p><b>Iterate multireference alignment and classification</b></p></li>

    <p> We will iterate multireference alignment, filtration, and classification until 
    we obtain stable classes, <i>i.e.,</i> no new classes appear. 
    For a sample that doesn't have many orientations/conformations, 
    only 2 or 3 iterations should be needed.
    </p>
    
    The specifics in the following example are for the second round of multireference alignment. 
    The 3 steps to be iterated are:
    
      <ol>
    <li><b>Run multireference alignment</b> </li>
    
    <p> The classes selected in the previous round of multireference alignment 
        will be used as references for the next round. 
        For example, if you selected a 2 class averages from reference-view #1, 
        and one class average from reference-view #2, then 
        this next iteration will have 3 references.
    </p>
    
        <p> The input file <font class="input">docmultiref</font> 
            keeps track of successfully executed iterations of multireference alignment, and is updated. 
            The default parameter <b><i>[multirefIterNum]</i></b> of <i>-1</i> will use 
            the most recent multireference alignment as input.  
            If you do not wish to use the last multireference alignment, 
            override this parameter with the iteration number that you wish to use.
            </p>

    <li><b>Filter the aligned particles</b> </li>
    
        <p>Run <a href="filtershrink.msa">filtershrink.msa</a> as previously.</p>
    
    <li><b>Classify the particles assigned to each reference</b> </li>
    
        <p>Run <a href="classifybyview.msa">classifybyview.msa</a>, 
                set the parameter <b><i>[multirefIterNum]</i></b> if 
                you do not wish to operate on the last iteration of multireference alignment. 
                This parameter will be present in many steps from this point.</p>
                
        <li><p><b>Check the classification results using 
               <font class="guitool">verifybyview</font></b></p></li>

            <p> Select unique classes using <font class="guitool">verifybyview.py</font> 
                To open it, type: <br />
                        <code class="snippet">verifybyview Multiref2/View001</code><br />
            </p>

            Remember to update number of the directory, i.e., 
            which iteration of multireference alignment you ran.

      </ol>
      
<!--        For a possible third iteration, the following changes would be needed:
      <ol>
    <li>In <a href="multirefalign-descend.msa">multirefalign-descend.msa</a>, 
        change input file label <b><i>[old_class_dir]</i></b> from 
        <font class="input">Multiref</font> to <font class="input">Multiref2</font>
        <br />An example, <a href="multirefalign3plus.msa">multirefalign3plus.msa</a>, 
        is present in the tarball.
    </li>
    <li>In <a href="classifybyview.msa">classifybyview.msa</a>, 
        change the label <b><i>[class_dir]</i></b> from 
        <b>Multiref2</b> to <b>Multiref3</b>
    </li>
      </ol>-->
    
    <p> Iterate these 4 steps -- 
        <a href="multirefalign.msa">multirefalign.msa</a>, 
        <a href="filtershrink.msa">filtershrink.msa</a>,  
        <a href="classifybyview.msa">classifybyview.msa</a>, and
        <font class="guitool">verifybyview</font> --
        until no new classes appear. </p>
    
<!--        <p> <u>NOTE</u>: In several steps below, I will assume that you run 2 iterations of multireference alignment. 
    If you ran a different number of iterations, pay attention to when this value is required. 
    There should be reminders in the steps below when to change filenames.
    </p>-->


<li><p><a name="verify"><b>Verify individual particles from last iteration of multireference alignment</a></b></p></li>

    <p> When we compute the 3D reconstruction, we will use only the highest-quality particles. 
    To select these particles, we will use <font class="guitool">verifybyview.py</font>. 
    To start it, assuming you performed 2 rounds of multireference alignment, type: <br />
    <code class="snippet">verifybyview Multiref2/View001</code> </p>
    
    <p> You should have screened the class averages in the previous step, so 
    the filenames should be appropriate.  
    In fact, if the last directory where you viewed class averages was one of the 
    <font class="input">Multiref2/View###</font> directories, 
    you do not need to include the directory name on the command line either.
    </p>
    
    <p> Now, when you open a montage of individual particle images, 
    select the images that you want to keep using the left mouse button. 
    Conversely, exclude the particles that don't resemble the reference image. 
    To crudely assist selection of the images, the particles are 
    sorted from highest CCC to worst.  Refer to the  
    <a href="http://www.wadsworth.org/spider_doc/spider/spire/tools-docs/verifybyview.html">
    instructions for verifybyview.</a>. 
    </p>
    
    <b>Outputs:</b><br />
    
    <table class="outs">
    
    <tr valign="top"><td>&curren;</td>
        <td><font class="output">Multiref2/View###/goodclasses</font>:      </td>
        <td>List of classes with selected particles for each reference-view.</td></tr>
    <tr valign="top"><td>&curren;</td>
        <td><font class="output">Multiref2/View###/byhand***</font>:        </td>
        <td>List of selected particles for each class.                      </td></tr>
    </table>
    
    <p><u>NOTE:</u> When you finish going through the class averages for a particular reference-view, 
    be sure to save the list of good <u>classes</u> in addition to the list of good particles. 
    The good-class list can be saved by going to the <i>File</i> 
    menu and selecting <i>Save selection</i>, 
    or by clicking on the <i>Save+Update</i> button, or with the shortcut <i>Alt-S</i>
    </p>


<li><p><b>Combine selected particles from selected classes</b></p>   </li>

    <p> Following the previous step, the selected particles are distributed over 
    multiple docfiles <font class="input">byhand***</font>, 
    listed in <font class="input">goodclasses</font>
    from multiple reference-views <font class="input">Multiref2/View###</font>
    (once again assuming two iterations of multireference alignment + classification). 
    In this procedure file, <a href="combinegoodclasses.msa">combinegoodclasses.msa</a>, 
    we will combine the <font class="input">byhand***</font> files into 
    one doc file for each reference-view.
    </p>
    
    <b>Output:</b><br />
    
    <table class="outs">
    
    <tr valign="top"><td>&curren;                             </td>
        <td><font class="output">Multiref2/goodsel***</font>: </td>
        <td>List of selected particles in each reference-view.</td></tr>
    </table>
    
<!--    <p> <i>HINT</i>: It may be useful to re-classify only the good particles, 
    if, for example, there's an asymmetry present that is washed out by the bad particles.  
    In that case, re-run classifyview, setting <b><i>[verified-yn]</i></b> to 1, 
    which will read <b>goodsel***</b> instead of <b>selview***</b>.
    You will overwrite the previous classes (but not verified particles), 
    so you may want to change the output filenames, 
    <i>e.g.</i>, add <b>good-</b> to the beginning of the filenames. 
    If you find a new class, using the names of the new doc files, re-run
    <a href="multirefalign.msa">multirefalign.msa</a>. 
    It might be useful to classify the bad particles too.
    </p>-->
    

<li><p><b>Average selected images</b></p></li>

    <p> In this step, we will generate averages of the good particle images. 
    These new averages should look cleaner than those from the multireference alignment, 
    which also included bad particles. 
    (Because of model bias, however, the bad particles may not have degraded 
     the old average too much.)
    </p>
    
    <p> The procedure file <a href="viewaverages.msa">viewaverages.msa</a> 
    and its subroutine <a href="viewaverage1.msa">viewaverage1.msa</a> 
    read the aligned-image stack <font class="input">stk3-aligned</font> 
    and averages the images according to the good-particle selection files
    <font class="input">Multiref2/goodsel***</font> 
    (assuming again that you performed 2 rounds of multi-reference alignment).
    </p>
    
    <b>Outputs:</b><br />
    
    <table class="outs">
    
    <tr valign="top"><td>&curren;                            </td>
        <td><font class="output">Multiref2/stkgoodavg</font>:</td>
        <td>Stack of average images for each view.           </td></tr>
    <tr valign="top"><td>&curren;                            </td>
        <td><font class="output">Multiref2/stkgoodvar</font>:</td>
        <td>Stack of variance images for each view.          </td></tr>
    </table>


</ul>
<br />

<hr />

<p>
<b><FONT SIZE="4"><a name="mods">Recent modifications:</a></font></b></p>
<ul>
<!--    <li>2015-date -- </li> -->
   <li>2018-11-15 -- corrected many links, lowercase html markup al                </li> 
   <li>2015-08-21 -- added "full," iterative alignment                             </li> 
   <li>2014-02-04 -- changed project extention to '.msa'                           </li>
   <li>2014-02-04 -- added SPIRE configuration file (adapted from Munich Workshop) </li>
   <li>2014-01-20 -- added more illustrations for phantom worm hemoglobin data     </li>
   <li>2014-01-20 -- ca-pca.msa -- made the number of standard 
                     deviations in the factor maps user defined.    <br />
                     &nbsp; SPIDER sometimes crashes when too small a value is used 
                    (where too many points pile up on the edge of the plot)        </li>
   <li>2009-06-12 -- added illustration for custom mask                            </li>
</ul>

<hr />

<b><p><a name="refs">References</a></p></b>
<ol>
    <a name="jf2006"></a>
    <li>Frank J. (2006) 
        <i>Three-Dimensional Electron Microscopy of Macromolecular Assemblies</i>.
        (Oxford University Press, New York, NY).       </li>
    <li>Marco S, Chagoyen M, de la Fraga LG, Carazo JM, Carrascosa JL. (1996) 
        A variant to the random approximation of the reference-free algorithm.
        <i>Ultramicroscopy</i> <b>66</b>: 5-10.        </li>
    <li>Shaikh TR, LeBarron JS, Trujillo R, Baxter WT, and Frank J. (2008a) 
        Particle-verification for single-particle reconstruction using multivariate data 
        analysis and classification.
        <i>J Struct Biol </i> <b>161</b>: 41-48.       </li>
    <li>Shaikh TR, Gao H, Baxter WT, Asturias F, Boisset N, Leith A, and Frank J. (2008b) 
        SPIDER image-processing for single-particle reconstruction of biological macromolecules 
        from electron micrographs.                     </li>
        <i>Nature Protocols</i> <b>3</b>: 1941-74.     </li>
    <li>Huang T, Shaikh TR, Gupta K, Contreras-Martin LM, Grassucci RA, Van Duyne GD, Frank J, Belfort M .
        (2011) The group II intron ribonucleoprotein precursor is a large, loosely packed structure. 
        <i>Nucleic Acids Res.</i> <b>39</b>: 2845-54.  </li>
<!--    <li>AUTHOR 1, AUTHOR 2. (YEAR) 
        TITLE.
        <i>JOURNAL</i> <b>VOLUME</b>: PG0-PG.</li>-->
</ol>

<hr />

<p>
<small>
  Source:       spider/docs/techs/MSA/index.html &nbsp;&nbsp;&nbsp; 
  Page updated: 2018/11/15                       &nbsp;&nbsp;&nbsp; 
  Tanvir Shaikh
</small>
</p>

</body>
</html>
@


1.19
log
@links, formatting
@
text
@d57 1
a57 1
   <a href="tar_archive/latest_msa_proc.tar">tarball containing the procedure files</a>      <br />
d59 1
a59 1
    if so desired. </li>
d73 2
a74 2
    <li>a particle stack</li>
    <li>a selection file, listing the image numbers in the stack file above</li>
d89 2
a90 2
        <li>INPUTS:  selection file, unfiltered particle stack     </li>
        <li>OUTPUTS: filtered particles                            </li>
d99 3
a101 3
            <li>INPUT PARAMETER: object diameter (in pixels, after decimation)</li>
            <li>INPUTS: unaligned particles, selection file                   </li>
            <li>OUTPUTS: aligned particles, averages 
d115 3
a117 3
            <li>INPUT PARAMETER: object diameter (pixels, after decimation)</li>
            <li>INPUTS: unaligned particle stack, selection file           </li>
            <li>OUTPUTS: aligned particles, averages
d133 3
a135 3
        <li>INPUT PARAMETERS: filter radii, decimation factor              </li>
        <li>INPUTS: selection file, unfiltered particle stack              </li>
        <li>OUTPUTS: filtered particles                                    </li>
d154 1
a154 1
                    <li>second threshold, for the filtered mask, between 0 and 1 <br />
d160 7
a166 7
                    <li>filtered image                </li>
                    <li>thresholded image             </li>
                    <li>filtered mask                 </li>
                    <li>final mask                    </li>
                    <li>mask-multipled image          </li>
                    <li>inverted mask                 </li>
                    <li>inverted mask-multiplied image</li>
d173 2
a174 2
                <img src="images/custom.gif">         <br />
                slices of the custom-made mask stack file
d181 2
a182 2
            <li>uses Python script <a href="eigendoc.py">eigendoc.py</a> (J.S.L. &amp; T.R.S.) </li>
            <li>INPUT PARAMETER: number of eigenfactors to calculate 
d187 1
a187 1
              <UL type="circle">
d208 1
a208 1
        <center><p><TABLE BORDER="1">
d214 1
a214 1
            <TR>
d233 2
a234 2
                </TR>
            <TR>
d242 1
a242 1
                        <IMG SRC="images/hb-factormap-small.gif" border="2"></a>
d246 1
a246 1
                        <IMG SRC="images/hb-histogram-small.gif" border="2"></a>
d250 1
a250 1
                        <IMG SRC="images/eigenimages.jpg" border="2" width="119" height="128"></a>
d254 1
a254 1
                        <IMG SRC="images/reconstituted.jpg" border="2" width="167" height="128"></a>
d256 2
a257 2
                </TR>
            <TR>
d259 1
a259 1
                        ribosome <br />
d264 1
a264 1
                        <IMG SRC="images/factormap-small.gif" border="2"></a>
d268 1
a268 1
                        <IMG SRC="images/histogram-sm32.gif" border="2"></a>
d270 2
a271 2
                </TR>
        </TABLE></p></center>
d288 1
a288 1
            <li>INPUT PARAMETERS: number of factors, number of classes </li>
d350 1
a350 1
                        <img src="images/hcweb-small.gif"><br />
d368 1
a368 1
            <li>PROCEDURE FILE:  <a href="binarytree.msa">binarytree.msa</a>
d373 1
a373 1
                    <li>INPUT PARAMETER: tree depth (number of averages will 
d376 1
a376 1
                    <li>INPUTS: dendrogram (from 
d379 1
a379 1
                    <li>OUTPUTS: averages (unlabeled and labeled)                 </li>
d388 4
a391 4
                    <li><b>labeled001.dat</b> is an example filename (without a wild card)            </li>
                    <li><i>4 (optional)</i> is the tree depth, i.e., the number of rows (default is 6)</li>
                    <li><i>2 (optional)</i> is the margin width (default is 2)                        </li>
                    <li><i>1024 (optional)</i> is the canvas width                                    </li>
d399 1
a399 1
                    <li>INPUT PARAMETERS: tree depth (number of averages will be (2**depth - 1))</li>
d401 1
a401 1
                    <li>INPUTS: averages from <a href="binarytree.msa">binarytree.msa</a>       </li>
d463 2
a464 2
                   <li>INPUT PARAMETER: desired number of classes </li> 
                   <li>OUTPUT: class averages                     </li> 
d494 1
a494 1
    <a href="http://www.wadsworth.org/spider_doc/spider/docs/params.html">reconstruction parameters</a>.
d502 1
a502 1
        <td>pixel size, in Angstroms.</td></tr>
d505 1
a505 1
        <td>window size, in pixels.</td></tr>
d508 1
a508 1
        <td>particle diameter, in pixels.          </td></tr>
d1046 6
a1051 3
        <code class="snippet">verifybyview Tree</code>    &nbsp; if you used the binary-tree option, or <br />
        <code class="snippet">verifybyview Kmeans</code>  &nbsp; if you ran K-means classification, or  <br />
        <code class="snippet">verifybyview Cluster</code> &nbsp; if you used Diday's clustering method, <i>etc.</i>
d1054 2
a1055 2
               
        <br />Included in the tarball is a starting <a href=".verifybyview">.verifybyview</a> file 
d1162 2
a1163 2
                    <a href="http://www.wadsworth.org/spider_doc/spider/docs/man/apsh.html">'AP SH'</a> 
                    for an explanation of the doc file.                             </td></tr>
d1478 2
a1479 1
    The good-class list can be saved by going to the <i>File</i> menu and selecting <i>Save selection</i>, 
d1484 1
a1484 1
<li><p><b>Combine selected particles from selected classes</b></p></li>
@


1.18
log
@used www
@
text
@d58 2
a59 1
   The files will be written into the current directory, so create a new one, if so desired. </li>
d109 1
a109 1
                Ultramicroscopy <b>66</B>: 5-10.</p></li>
d158 1
a158 1
            <li>OUTPUT: <b>stkmask</B>, whose slices are as follows:       </li>
d182 2
a183 1
            <li>INPUT PARAMETER: number of eigenfactors to calculate (more than 99 will require 
d215 3
a217 3
                    <TD><center><p align="center">
                        </p></center></TD>
                    <TD><center><p align="center">
d220 2
a221 2
                        </p></center></TD>
                    <TD><center><p align="center">
d224 2
a225 2
                        </p></center></TD>
                    <TD><center><p align="center">
d228 2
a229 2
                        </p></center></TD>
                    <TD><center><p align="center">
d232 1
a232 1
                        </p></center></TD>
d235 1
a235 1
                    <TD><center><p align="center">
d239 2
a240 2
                        </p></center></TD>
                    <TD><center><p align="center">
d243 2
a244 2
                        </p></center></TD>
                    <TD><center><p align="center">
d247 2
a248 2
                        </p></center></TD>
                    <TD><center><p align="center">
d251 2
a252 2
                        </p></center></TD>
                    <TD><center><p align="center">
d255 1
a255 1
                        </p></center></TD>
d258 1
a258 1
                    <TD><center><p align="center">
d261 2
a262 2
                        </p></center></TD>
                    <TD><center><p align="center">
d265 2
a266 2
                        </p></center></TD>
                    <TD><center><p align="center">
d269 1
a269 1
                        </p></center></TD>
d775 1
a775 1
                <td><font class="output">Hierarchical/docdendro</font>:</td>
d795 2
a796 1
                This procedure file will generate class averages for <u>all</u> depths until a specified cutoff, 
d859 1
a859 1
                                  (<a href="#vbv">more information below</a>).</td></tr>
d954 2
a955 1
                                        <br />Needed as an input for <font class="guitool">verifybyview.py</font> 
d976 2
a977 1
    <p> In the next step, we will select class averages to use as references for multireference alignment. 
d996 2
a997 1
        <a href="http://www.wadsworth.org/spider_doc/web/docs/web.html"><font class="guitool">WEB</font></a>, 
d1021 2
a1022 1
        requires that you have <a href="http://www.wadsworth.org/spider_doc/spider/spire/install.html"> 
d1025 1
a1025 1
        If you don't have <font class="guitool">SPIDER's python tools</font></a> installed, 
d1038 1
a1038 1
        <font class="guitool">verifybyview.py</font></a></b></li>
d1150 5
d1156 2
a1157 6
                <td><font class="output">Multiref1/stkref</font>:</td>
                <td>Stack of reference images used for alignment.
                    <br />They should resemble full-sized, unfiltered versions of the selected class averages</td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Multiref1/docalign</font>:</td>
                <td>Alignment parameters                          <br />
d1160 1
a1160 1
                    for an explanation of the doc file.</td></tr>
d1162 2
a1163 2
                <td><font class="output">Multiref1/selview***</font>:</td>
                <td>A list of particles belonging to each class.</td></tr>
d1165 1
a1165 1
                <td><font class="output">Multiref1/stkcenu</font>:</td>
d1168 1
a1168 1
                    <font class="output">Pairwise/</font> directory.</td></tr>
d1170 1
a1170 1
                <td><font class="output">stk3-aligned</font>:</td>
d1174 2
a1175 2
                <td><font class="output">Multiref1/viewavg***</font>:</td>
                <td>Average of particles belonging to each reference.</td></tr>
d1206 2
a1207 1
    <p> In the next step, we will perform separate classifications for the particles belonging to each reference. 
d1254 5
a1258 5
            re-start the procedure file at <i>N+1</i>.                  </td></tr>
        <tr valign="top"><td>&curren;                                   </td>
        <td><b><i>[num-factors]</i></b>:                                </td>
        <td>Number of factors to calculate in MSA and use in classification. 
            <br />The classification does not appear to depend greatly on this value, 
d1298 7
a1304 7
        <tr valign="top"><td>&curren;</td>
            <td><font class="input">.spi</font>:</td>
            <td>Data extension.</td></tr>
        <tr valign="top"><td>&curren;</td>
            <td><font class="input">Multiref1</font>:</td>
            <td>Initial directory.</td></tr>
        <tr valign="top"><td>&curren;</td>
d1306 2
a1307 2
            <td>List of classes.</td></tr>
        <tr valign="top"><td>&curren;</td>
d1309 1
a1309 1
            <td>Class-average template.</td></tr>
d1320 2
a1321 2
            <tr valign="top"><td>&curren;</td>
                <td><font class="input">docclass***</font>:</td>
d1323 6
a1328 6
            <tr valign="top"><td>&curren;</td>
                <td><font class="input">stkfiltered</font>:</td>
                <td>Filtered-image stack.</td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">goodclasses</font>:</td>
                <td>Output list of selected classes.</td></tr>
d1354 1
a1354 1
    You can proceed to the next reference by changing the directory number (e.g., <b>View002</B>)
d1503 1
a1503 1
    In that case, re-run classifyview, setting <b><i>[verified-yn]</i></B> to 1, 
d1519 2
a1520 1
    (Because of model bias, however, the bad particles may not have degraded the old average too much.)
d1550 1
a1550 1
<b><FONT SIZE="4"><a name="mods">Recent modifications:</a></FONT></B></p>
d1553 3
a1555 3
   <li>2018-11-15 -- corrected many links, lowercase html markup al</li> 
   <li>2015-08-21 -- added "full," iterative alignment</li> 
   <li>2014-02-04 -- changed project extention to '.msa' </li>
d1557 6
a1562 5
   <li>2014-01-20 -- added more illustrations for phantom worm hemoglobin data </li>
   <li>2014-01-20 -- ca-pca.msa -- made the number of standard deviations in the factor maps user defined
      <br />&nbsp; SPIDER sometimes crashes when too small a value is used 
      (where too many points pile up on the edge of the plot)</li>
   <li>2009-06-12 -- added illustration for custom mask</li>
d1569 1
a1569 1
    <a name="jf2006">
d1572 1
a1572 2
        (Oxford University Press, New York, NY).</li>
    </a>
d1575 1
a1575 4
        <i>Ultramicroscopy</i> <b>66</b>: 5-10.</li>
<!--    <li>AUTHOR 1, AUTHOR 2. (YEAR) 
        TITLE.
        <i>JOURNAL</i> <b>VOLUME</b>: PG0-PG.</li>-->
d1577 3
a1579 2
        Particle-verification for single-particle reconstruction using multivariate data analysis and classification.
        <i>J Struct Biol </i> <b>161</b>: 41-48.</li>
d1582 2
a1583 2
        from electron micrographs.
        <i>Nature Protocols</i> <b>3</b>: 1941-74.</li>
d1586 4
a1589 1
        <i>Nucleic Acids Res.</i> <b>39</b>: 2845-54.</li>
d1597 1
a1597 1
  Page updated: 2018/11/15           &nbsp;&nbsp;&nbsp; 
@


1.17
log
@params link
@
text
@d19 4
a22 4
    <li>Alignment in two dimensions </li>
    <li>Dimension-reduction -- expression of a <i>m</i>x<i>n</i> image 
        using only a few terms, i.e., eigenvectors </li> 
    <li>Classification </li> 
d34 1
a34 1
   <a href="../../man/apc.html">'AP C'</a> 
d38 2
a39 1
   operation <a href="../../man/cas.html">'CA S'</a> 
d47 2
a48 1
 <a href="../classification/tutorial.html">classification tutorial</a>. 
d105 3
a107 3
                 <a href="../../man/apsr.html">'AP SR'</a>, 
                 which chooses seed images as alignment references.</p>
            <p><b>Reference</B>: Marco S, Chagoyen M, de la Fraga LG, Carazo JM, Carrascosa JL (1996)
d111 1
a111 1
        <li>Using <a href="../../man/apsr.html">'AP SR'</a> 
d119 1
a119 1
            <a href="../../man/apsr.html">'AP SR'</a>.
d140 1
a140 1
    <li>1. <i>(optional)</I> Create a custom mask for your particle.
d198 1
a198 1
            <p>To switch to PCA (or iterative PCA), change the register <i>x28</I> in
d217 1
a217 1
                        <i>(click to enlarge)</I>
d221 1
a221 1
                        <i>(click to enlarge)</I>
d225 1
a225 1
                        <i>(click to enlarge)</I>
d229 1
a229 1
                        <i>(click to enlarge)</I>
d276 1
a276 1
            <a href="../../man/clkm.html">'CL KM'</a><br />
d291 3
a293 3
                <a href="../../../../web/docs/web.html">WEB</a>/
                <a href="../../../../web/docs/jweb.html">JWEB</a>, or 
                <a href="../../../spire/tools-docs/tools.html">montagefromdoc</a>.  
d295 2
a296 2
                Usage: <br />
                <code><b>montagefromdoc &nbsp; KMeans/docclass001.dat</B></code><br />
d304 1
a304 1
        <a href="../../man/clhc.html">'CL HC'</a>  -- 
d334 2
a335 1
                        truncated. In <a href="../../../../web/docs/web.html">WEB</a>, 
d339 2
a340 1
                        In <a href="../../../../web/docs/jweb.html">JWEB</a>,
d350 1
a350 1
                        <a href="../../../../web/docs/web.html">WEB</a></a><br />
d359 1
a359 1
        In X-Window <a href="../../../../web/docs/web.html">WEB</a>, 
d361 1
a361 1
        (In <a href="../../../../web/docs/jweb.html">JWEB</a>, 
d380 3
a382 2
            <li>Visualize the output using <a href="../../../spire/tools-docs/tools.html">binarytree.py</a> 
                Syntax:                                                                               <br />
d391 2
a392 1
            <li>If <a href="../../../spire/tools-docs/tools.html">SPIDER's python tool -- binarytree.py</a> 
d426 2
a427 1
        <li>Diday's method, using <a href="../../man/clcla.html">'CL CLA'</a> -- 
d440 2
a441 2
                   <a href="../../../../web/docs/web.html">WEB</a>/
                   <a href="../../../../web/docs/jweb.html">JWEB</a> 
d492 1
a492 1
    <a href="../../Docs/params.html">reconstruction parameters</a>.
d593 1
a593 1
    <a href="../../man/apsr.html">'AP SR'</a>. 
d602 1
a602 1
    <a href="../../man/apsr.html">'AP SR'</a>, 
d660 1
a660 1
    an arbitrary number of factors (<i>e.g.,</I> 25 used here); 
d674 2
a675 1
    <a href="../classification/tutorial.html">classification and clustering tutorial</a>.</p>
d684 1
a684 1
                <a href="../classification/tutorial.html#virtual">
d691 1
a691 1
                <a href="../classification/tutorial.html#virtual">
d700 2
a701 2
        <a href="../../man/cas.html">'CA S'</a>, see the
        <a href="../classification/tutorial.html#CAPCA">
d709 1
a709 1
    <br /><i>Important parameters:</I>
d713 1
a713 1
        <td><b><i>[cas-option]</I></b>:                                 </td>
d718 1
a718 1
        <td><b><i>[num-factors]</I></b>:                                </td>
d740 1
a740 1
    choose the number of factors to use (parameter <i><b>[numFactors]</b></I>) 
d760 1
a760 1
                 <a href="../../man/clhc.html">'CL HC'</a>. 
d762 1
a762 1
            <a href="../classification/tutorial.html#clhc">
d774 3
a776 2
                <td>Dendrogram doc file, showing the relatedness between images.
                <br />See the <a href="../../../techs/classification/tutorial.html#clhc">
d808 1
a808 1
                will call for 2**<i><b>[end-depth]</b></I> class averages. 
d815 2
a816 2
                                <tr valign="top"><td>&curren;</td>
                                    <td><font class="output">Tree/classavg***</font>:</td>
d819 3
a821 2
                                    <td><font class="output">Tree/labeled***</font>:</td>
                                    <td>Class average, labeled with the class number and the number of particles.</td></tr>
d826 1
a826 1
                If this procedure file crashes, check the parameter <b><i>[top-branch]</I></b>.
d836 1
a836 1
                        This option cuts off the dendrogram <font class="input">dendrodoc</font> at a specific height.  
d867 2
a868 2
        <a href="../../man/clkm.html">
        'CL KM'</a>.  In contrast to the other classification options presented here, 
d872 1
a872 1
        generates <i>K</I> (parameter <i><b>[numClasses]</I></b> in the procedure file) classes 
d903 2
a904 2
            <a href="../../man/clcla.html">
            'CL CLA'</a>, which uses Diday's method of moving centers. 
d912 2
a913 2
                    <td>&curren;</td>
                    <td><font class="output">Cluster/docdendro</font>:</td>
d915 3
a917 2
                         See the <a href="../classification/tutorial.html#clhc">
                         classification and clustering tutorial</a> for more details.</td>
d935 1
a935 1
            <p> <u>NOTE:</u> The default parameter <i><b>[class-type]</b></I> 
d937 1
a937 1
            so change that parameter to <i><b>2</b></I>.
d962 2
a963 1
    <a href="../../../spire/tools-docs/verifybyview.html"> <font class="guitool">verifybyview.py</font></a>. 
d985 1
a985 1
        <p> The parameter <b><i>4</I></b> on the command line above specifies 
d987 1
a987 1
        A depth of <b><i>2</I></b>, in comparison, 
d990 2
a991 2
        Unlike the <i>Dendrogram</I> option in 
        <a href="http:../../../../web/docs/web.html"><font class="guitool">WEB</font></a>, 
d1013 1
a1013 1
        <p>The script <a href="../../../spire/tools-docs/tools.html">
d1015 1
a1015 1
        requires that you have <a href="../../../spire/install.html"> 
d1025 2
a1026 2
        <a href="../../man/doccreate.html">
        'DOC CREATE'</a>.  The selection file should be called 
d1041 1
a1041 1
        <code class="snippet">verifybyview Cluster</code> &nbsp; if you used Diday's clustering method, <i>etc.</I>
d1057 1
a1057 1
            <td>Change <i><b>CCC</b></I> to <i><b>N</b></i>
d1075 2
a1076 2
                    <tr valign="top"><td>&curren;</td>
                        <td><font class="input">.spi</font>:</td>
d1078 4
a1081 4
                    <tr valign="top"><td>&curren;</td>
                        <td><font class="input">Tree</font>:</td>
                        <td>Initial directory.</td></tr>
                    <tr valign="top"><td>&curren;</td>
d1083 2
a1084 2
                        <td>List of classes.</td></tr>
                    <tr valign="top"><td>&curren;</td>
d1086 1
a1086 1
                        <td>Class-average template.</td></tr>
d1117 1
a1117 1
        <i>File</I> menu and selecting <i>Save selection</I> (or <i>ALT-s</I>).
d1149 4
a1152 4
                <td>Alignment parameters
                    <br />See the documentation for 
                    <a href="../../man/apsh.html">
                    'AP SH'</a> for an explanation of the doc file.</td></tr>
d1158 3
a1160 2
                <td>Aligned untilted-specimen image stack.
                    <br />This copy is retained locally to the <font class="output">Pairwise/</font> directory.</td></tr>
d1176 2
a1177 1
    <p> With newly aligned images, we will re-filter and optionally shrink the images before re-classifying them. 
d1179 2
a1180 1
    overwrote the old version, thus the inputs and outputs of <a href="filtershrink.msa">filtershrink.msa</a> 
d1229 1
a1229 1
    <br /><i>Notable parameters include:</I>
d1233 3
a1235 2
        <td><b><i>[reduce-factor]</I></b>:                              </td>
        <td>Reduction factor applied in <a href="filtershrink.msa">filtershrink.msa</a>.</td></tr>
d1237 1
a1237 1
        <td><b><i>[ca-pca]</I></b>:                      </td>
d1242 1
a1242 1
        <td><b><i>[first-view]</I></b>:                                    </td>
d1244 1
a1244 1
            <br />change the <b><i>[ca-pca]</I></b> option and 
d1247 1
a1247 1
        <td><b><i>[num-factors]</I></b>:                                </td>
d1258 1
a1258 1
        which requires that you have <a href="../../../spire/install.html"> 
d1334 1
a1334 1
    <i>File</I> menu and selecting <i>Save selection</I>.
d1346 1
a1346 1
    and pressing <i>Update</I> (after saving the class selection, if necessary).
d1352 1
a1352 1
    we obtain stable classes, <i>i.e.,</I> no new classes appear. 
d1372 1
a1372 1
            The default parameter <b><i>[multirefIterNum]</I></b> of <i>-1</I> will use 
d1385 1
a1385 1
                set the parameter <b><i>[multirefIterNum]</I></b> if 
d1405 1
a1405 1
        change input file label <b><i>[old_class_dir]</I></b> from 
d1411 1
a1411 1
        change the label <b><i>[class_dir]</I></b> from 
d1448 2
a1449 1
    <a href="../../../spire/tools-docs/verifybyview.html">instructions for verifybyview.</a>. 
d1466 2
a1467 2
    The good-class list can be saved by going to the <i>File</I> menu and selecting <i>Save selection</I>, 
    or by clicking on the <i>Save+Update</I> button, or with the shortcut <i>Alt-S</I>
d1487 2
a1488 2
    <tr valign="top"><td>&curren;</td>
        <td><font class="output">Multiref2/goodsel***</font>:</td>
d1494 1
a1494 1
    In that case, re-run classifyview, setting <b><i>[verified-yn]</I></B> to 1, 
d1498 1
a1498 1
    <i>e.g.</I>, add <b>good-</b> to the beginning of the filenames. 
d1525 1
a1525 1
    <tr valign="top"><td>&curren;</td>
d1527 2
a1528 2
        <td>Stack of average images for each view.</td></tr>
    <tr valign="top"><td>&curren;</td>
d1530 1
a1530 1
        <td>Stack of variance images for each view.</td></tr>
d1560 1
a1560 1
        <i>Three-Dimensional Electron Microscopy of Macromolecular Assemblies</I>.
d1565 1
a1565 1
        <i>Ultramicroscopy</I> <b>66</b>: 5-10.</li>
d1568 1
a1568 1
        <i>JOURNAL</I> <b>VOLUME</b>: PG0-PG.</li>-->
d1571 1
a1571 1
        <i>J Struct Biol </I> <b>161</b>: 41-48.</li>
d1575 1
a1575 1
        <i>Nature Protocols</I> <b>3</b>: 1941-74.</li>
d1578 1
a1578 1
        <i>Nucleic Acids Res.</I> <b>39</b>: 2845-54.</li>
@


1.16
log
@link corrections, cosmetic
@
text
@d482 2
a483 1
    <p>If not using <font class="guitool">SPIRE</font>, run <a href="makeparams.msa">makeparams.msa</a>, 
d485 1
a485 1
    <a href="params.html">reconstruction parameters</a>.
@


1.15
log
@*** empty log message ***
@
text
@d39 1
a39 1
   (here, in the batch file <a href="ca-pca.msa">ca-pca.msa</a>). 
d54 3
a56 3
    <li>Download and unpackage the 
    <a href="tar_archive/latest_msa_proc.tar">tarball containing the batch files</a> 
    <br />The files will be written to the current directory, so create a new one, if so desired. </li>
d59 1
a59 1
<hr>
d63 1
a63 1
<P>
d66 1
a66 1
</P>
d81 1
a81 1
    larger than the size of your particle.  If you cut off <U>too</U> much of the low-frequency information 
d84 4
a87 4
        <li>BATCH FILE: <a href="highpass.msa">highpass.msa</a></li> 
        <li>INPUT PARAMETERS: filter radii </li>
        <li>INPUTS: selection file, unfiltered particle stack </li>
        <li>OUTPUTS: filtered particles</li>
d95 1
a95 1
            <li>BATCH FILE: <a href="pairwise.msa">pairwise.msa</a></li> 
d97 1
a97 1
            <li>INPUTS: unaligned particles, selection file </li>
d105 1
a105 1
            <P><b>Reference</B>: Marco S, Chagoyen M, de la Fraga LG, Carazo JM, Carrascosa JL (1996)
d111 1
a111 1
            <li>BATCH FILE: <a href="apsr4class.msa">apsr4class.msa</a></li>
d113 1
a113 1
            <li>INPUTS: unaligned particle stack, selection file </li>
d124 1
a124 1
    <P>The low-pass filtration step will make the particles easier to visualize. 
d126 1
a126 1
    </P>
d129 4
a132 4
        <li>BATCH FILE: <a href="filtershrink.msa">filtershrink.msa</a></li> 
        <li>INPUT PARAMETERS: filter radii, decimation factor </li>
        <li>INPUTS: selection file, unfiltered particle stack </li>
        <li>OUTPUTS: filtered particles</li>
d138 1
a138 1
    <li>1. <I>(optional)</I> Create a custom mask for your particle.
d141 2
a142 2
            <li>BATCH FILE: <A HREF="custommask.msa">custommask.msa</A></li>
            <li>PARAMETERS:</li>
d144 2
a145 2
                    <li>Fourier filter radius for input image</li>
                    <li>first threshold, in units of standard deviations <br />
d147 2
a148 2
                        plus some number times the standard deviation.</li>
                    <li>Fourier filter radius for the thresholded image <br />
d150 1
a150 1
                        so this filtration serves to smooth it.</li>
d154 2
a155 2
            <li>INPUT: average image, such as <b>pairwise/rfreeavg001</B></li>
            <li>OUTPUT: <b>stkmask</B>, whose slices are as follows:</li>
d157 6
a162 6
                    <li>filtered image</li>
                    <li>thresholded image</li>
                    <li>filtered mask</li>
                    <li>final mask</li>
                    <li>mask-multipled image</li>
                    <li>inverted mask</li>
d168 3
a170 3
            <CENTER><P><TABLE BORDER="1">
                <TR><TD><CENTER><P ALIGN="CENTER">
                <IMG SRC="images/custom.gif"><br />
d172 2
a173 2
                </P></CENTER></TD></TR>
            </TABLE></P></CENTER>
d177 6
a182 5
            <li>BATCH FILE: <A HREF="ca-pca.msa">ca-pca.msa</a></li>
            <li>uses Python script <A HREF="eigendoc.py">eigendoc.py</A> (J.S.L. &amp; T.R.S.) </li>
            <li>INPUT PARAMETER: number of eigenfactors to calculate (more than 99 will require some user modification)</li>
            <li>INPUT: aligned particles </li>
            <li>OUTPUTS: </li>
d184 1
a184 1
                <li><A HREF="images/factormap.gif">factormaps</A> 
d186 3
a188 3
                <li><A HREF="images/histogram.gif">eigenvalue histogram</A> 
                  -- shows how much variation is accounted for for each factor </li>
                <li><A HREF="images/eigenimages.jpg">eigenimages</A> 
d190 3
a192 2
                   <br />&nbsp; Think of expressing each image as the average plus some linear combination of the eigenimages. </li>
                <li><A HREF="images/reconstituted.jpg">reconstituted images</A> 
d196 2
a197 2
            <p>To switch to PCA (or iterative PCA), change the register <I>x28</I> in
            <A HREF="ca-pca.msa">ca-pca.msa</a> to 2 (PCA) or 3 (iterative PCA). </p>
d201 1
a201 1
            of eigenfactors to calculate, and re-run this batch file. </p>
d204 1
a204 1
        <CENTER><P><TABLE BORDER="1">
d211 3
a213 3
                    <TD><CENTER><P ALIGN="CENTER">
                        </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
d215 3
a217 3
                        <I>(click to enlarge)</I>
                        </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
d219 3
a221 3
                        <I>(click to enlarge)</I>
                        </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
d223 3
a225 3
                        <I>(click to enlarge)</I>
                        </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
d227 2
a228 2
                        <I>(click to enlarge)</I>
                        </P></CENTER></TD>
d231 1
a231 1
                    <TD><CENTER><P ALIGN="CENTER">
d235 17
a251 17
                        </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="images/hb-factormap.gif">
                        <IMG SRC="images/hb-factormap-small.gif" border="2"></A>
                        </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="images/hb-histogram.gif">
                        <IMG SRC="images/hb-histogram-small.gif" border="2"></A>
                        </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="images/eigenimages.jpg"">
                        <IMG SRC="images/eigenimages.jpg" border="2" width="119" height="128"></A>
                        </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="images/reconstituted.jpg"">
                        <IMG SRC="images/reconstituted.jpg" border="2" width="167" height="128"></A>
                        </P></CENTER></TD>
d254 1
a254 1
                    <TD><CENTER><P ALIGN="CENTER">
d257 9
a265 9
                        </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="images/factormap.gif">
                        <IMG SRC="images/factormap-small.gif" border="2"></A>
                        </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="images/histogram.gif">
                        <IMG SRC="images/histogram-sm32.gif" border="2"></A>
                        </P></CENTER></TD>
d267 1
a267 1
        </TABLE></P></CENTER>
d273 1
a273 1
        <li><P>K-means classification, using 
d283 1
a283 1
            <li>BATCH FILE: <a href="kmeans.msa">kmeans.msa</a> </li>
d291 1
a291 1
                <a href="montagefromdoc.py">montagefromdoc.py</a>.  
d294 1
a294 1
                <code><b>./montagefromdoc &nbsp; KMeans/docclass001.dat</B></code><br />
d309 1
a309 1
                <li>BATCH FILE: <a href="hierarchical.msa">hierarchical.msa</a> 
d353 1
a353 1
    <li><a name="tree"><P>Visualize binary tree</a><br />
d359 1
a359 1
        although Bill Rice says that if the prefix is two characters long, it works.)  </P>
d362 1
a362 1
            <li>BATCH FILE:  <a href="binarytree.msa">binarytree.msa</a>
d365 1
a365 1
                        <a href="update_lut.msa">update_lut.msa</a> </li>
d368 1
a368 1
                           be (2**depth - 1)) </li>
d371 1
a371 2
                        <a href="hierarchical.msa">hierarchical.msa</a>), 
                        images </li>
d373 1
a373 1
                    <li>OUTPUTS: averages (unlabeled and labeled) </li>
d376 2
a377 5
            <li>Visualize the output using <a href="binarytree.py">tree.py</a> 
                (previously called <I>tree.py</I>, requires 
                <a href="../../python/spipylib/code/Spiderutils.html">Spiderutils.py</a>, 
                part of the <a href="../../../../spire/doc/index.html">SPIRE</a> 
                installation). Syntax: <br />
d381 4
a384 5
                    <li><b>labeled001.dat</b> is an example filename 
                       (without a wild card)</li>
                    <li><i>4 (optional)</i> is the tree depth, i.e., the number of rows (default is 6) </li>
                    <li><i>2 (optional)</i> is the margin width (default is 2) </li>
                    <li><i>1024 (optional)</i> is the canvas width</li>
d386 1
a386 1
            <li>If <a href="../../../../spire/doc/index.html">SPIRE</a> 
d391 1
a391 2
                    <li>INPUT PARAMETERS: tree depth (number of averages 
                        will be (2**depth - 1))</li>
d393 1
a393 2
                    <li>INPUTS: averages from 
                        <a href="binarytree.msa">binarytree.msa</a></li>
d395 1
a395 1
                    <li>OUTPUTS: SPIDER-format tree image</li>
d400 12
a411 12
                        <td><center><p align="center">
                            <a href="images/tree3.jpg">
                            <img src="images/tree3-small.jpg"> <br />
                            binarytree.py, <i>depth=4</i></a> <br />
                            <i>(click to enlarge)</i>

                        <td><center><p align="center">
                            <a href="images/tree4.jpg">
                            <img src="images/tree4-small.jpg">  <br />
                            tree.msa, <i>depth=4</i></a> <br />
                            <i>(click to enlarge)</i>
                            </p></center></td>
d420 5
a424 7
        <li>Diday's method, using 
           <a href="../../man/clcla.html">'CL CLA'</a> -- I hear that this method 
           works exceedingly well. In 
           practice though, I find that I have limited control over the number of 
           classes, which may or may not be a problem depending on the 
           application. Also, I sometimes get errors with large data sets with 
           this method. 
d426 1
a426 1
            <li>BATCH FILE: <a href="cluster.msa">cluster.msa</a> 
d444 1
a444 1
                        dendrogram<br />
d446 1
a446 1
                        PostScript format</a><br />
d452 1
a452 1
            <li>BATCH FILE: <a href="classavg.msa">classavg.msa</a> 
d454 2
a455 2
                    <li>INPUT PARAMETER: desired number of classes 
                    <li>OUTPUT: class averages 
d463 1
a463 1
<hr>
d467 1
a467 1
<P>
d469 3
a471 2
It is a subset of the steps for alignment and classification for untilted-specimen images for random conical tilt.
</P>
d475 1
a475 1
<li><p><b>[Recommended] Generate parameter file</b></p></li>
d477 4
a480 4
    <P>
    If using <font class="guitool">SPIRE</font>, a parameter doc file will be generated upon starting a project.  
    While not strictly required, without this file, 
    you will need to remember to check for these frequently-used parameters each time.</P>
d482 1
a482 1
    <P>If not using <font class="guitool">SPIRE</font>, run <a href="makeparams.msa">makeparams.msa</a>, 
d484 2
a485 2
            <a href="params.html">reconstruction parameters</a>.
    </P>
d490 2
a491 2
    <tr valign="top"><td>&curren;                                   </td>
        <td><b><I>5</I></b>:                      </td>
d493 2
a494 2
    <tr valign="top"><td>&curren;                                   </td>
        <td><b><I>17</I></b>:                      </td>
d496 3
a498 3
    <tr valign="top"><td>&curren;                                   </td>
        <td><b><I>18</I></b>:                      </td>
        <td>particle diameter, in pixels.</td></tr>
d507 1
a507 1
    <P>The following procedures will expect particle images in the form of a single stack, 
d510 1
a510 1
    </P>
d512 1
a512 1
    <OL TYPE=A>
d515 1
a515 1
            <P> By default, the procedure <a href="win2stack.msa">win2stack.msa</a> 
d519 1
a519 1
            </P>
d521 1
a521 1
            <P> Also, enter the highest particle number that you wish to import. 
d523 1
a523 1
            </P>
d527 1
a527 1
            <P> The procedure <a href="combinestacks.msa">combinestacks.msa</a> 
d532 1
a532 1
            </P>
d534 1
a534 1
            <P> Also, enter the stack particle number that you wish to import. 
d536 1
a536 1
            </P>
d542 4
a545 4
        <tr valign="top"><td>&curren;</td>
            <td><font class="output">listparticles</font>:</td>
            <td>A list of windowed particles.</td></tr>
        <tr valign="top"><td>&curren;</td>
d547 2
a548 2
            <td>Single particle stack.</td></tr>
        <tr valign="top"><td>&curren;</td>
d560 1
a560 1
    larger than the size of your particle.  If you cut off <U>too</U> much of the low-frequency information 
d567 2
a568 2
    <p>The procedure file <a href="highpass.msa">highpass.msa</a> reads the stack
    <font class="input">stk1-unaligned_backup</font> and generates:</P>
d585 1
a585 1
    <a href="../../..//man/apsr.html">'AP SR'</a>. 
d590 1
a590 1
    <P> Briefly, <a href="pairwise.msa">pairwise.msa</a> takes the first two images from the stack
d594 2
a595 2
    <a href="../../../man/apsr.html">'AP SR'</a>, 
    which chooses seed images as alignment references.</P>
d609 2
a610 2
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Pairwise/stkaligned</font>:</td>
d615 4
a618 4
                <td>Final average of all images.</td></tr>
            <tr valign="top"><td>&curren;</td>
                <td><font class="output">Pairwise/docalign</font>:</td>
                <td>Alignment doc file.</td></tr>
d621 1
a621 1
<li><p><b>Low-pass filter and shrink the aligned particles.</b></p></li>
d633 1
a633 1
            <tr valign="top"><td>&curren;</td>
d652 1
a652 1
    an arbitrary number of factors (<I>e.g.,</I> 25 used here); 
d666 1
a666 2
    <a href="../../..//techs/classification/tutorial.html">
    classification and clustering tutorial</a>.</p>
d672 1
a672 1
            <td><font class="output">MSA/eigenimg</font>:</td>
d675 1
a675 1
                <a href="../../..//techs/classification/tutorial.html#virtual">
d678 1
a678 1
            <td><font class="output">MSA/reconst</font>:</td>
d682 1
a682 1
                <a href="../../..//techs/classification/tutorial.html#virtual">
d688 1
a688 1
        <td><font class="output">MSA/cas_IMC</font>:</td>
d691 3
a693 3
        <a href="../../..//man/cas.html">'CA S'</a>, see the
        <a href="../../..//techs/classification/tutorial.html#CAPCA">
        classification and clustering tutorial</a>.</td></tr>
d695 3
a697 3
        <td><font class="output">MSA/factormapAABB</font>:</td>
        <td>PostScript format plots for factor #AA <I>vs.</I> factor #BB (where BB = AA+1)
        <br />Clusters are indicative of distinct classes.</td></tr>
d700 1
a700 1
    <br /><I>Important parameters:</I>
d704 1
a704 1
        <td><b><I>[cas-option]</I></b>:                      </td>
d709 1
a709 1
        <td><b><I>[num-factors]</I></b>:                      </td>
d712 1
a712 1
            then increase this parameter and re-run.</td></tr>
d715 1
a715 1
    <p> <U>NOTE</U>: For negatively-stained samples, when looking at the reconstituted images, 
d731 1
a731 1
    choose the number of factors to use (parameter <I><b>[numFactors]</b></I>) 
d745 1
a745 1
      <OL TYPE=A>
d750 2
a751 2
            <p> This classification method uses SPIDER command
            <a href="../../..//man/clhc.html">'CL HC'</a>. 
d753 1
a753 1
            <a href="../../..//techs/classification/tutorial.html#clhc">
d757 2
a758 2
            <P>The procedure file <a href="hierarchical.msa">hierarchical.msa</a> 
            reads the MSA factor text file <font class="input">MSA/cas_IMC</font>.</P>
d766 1
a766 1
                <br />See the <a href="../../..//techs/classification/tutorial.html#clhc">
d778 1
a778 1
          <OL TYPE=a>
d783 1
a783 1
                This procedure file will generate class averages for <U>all</U> depths until a specified cutoff, 
d797 2
a798 2
                the parameter <I><b>[end-depth]</b></I> 
                will call for 2**<I><b>[end-depth]</b></I> class averages. 
d813 1
a813 1
            <p><U>NOTE</U>: The format of SPIDER's dendrogram doc file changed in version 17.13. 
d815 1
a815 1
                If this procedure file crashes, check the parameter <b><I>[top-branch]</I></b>.
d827 1
a827 1
            The number of classes desired is specified by the parameter <I><b>[numClasses]</b></I> in 
d843 3
a845 3
                                <td>Doc file with each information about each class
                                    <br />Needed as an input for <font class="guitool">verifybyview.py</font> 
                                    (<a href="#vbv">more information below</a>).</td></tr>
d856 1
a856 1
        <a href="../../..//man/clkm.html">
d861 1
a861 1
        generates <I>K</I> (parameter <I><b>[numClasses]</I></b> in the procedure file) classes 
d891 2
a892 2
            <P> The procedure file <a href="cluster.msa">cluster.msa</a> uses SPIDER command
            <a href="../../..//man/clcla.html">
d895 1
a895 1
            reading <font class="input">MSA/cas_IMC</font>.</P>
d900 7
a906 6
                                <tr valign="top"><td>&curren;</td>
                                    <td><font class="output">Cluster/docdendro</font>:</td>
                                    <td>Dendrogram doc file, showing the relatedness between images.
                                        <br />See the <a href="../../..//techs/classification/tutorial.html#clhc">
                                        classification and clustering tutorial</a> for more details.
                                        </td></tr>
d923 1
a923 1
            <p> <U>NOTE:</U> The default parameter <I><b>[class-type]</b></I> 
d925 1
a925 1
            so change that parameter to <I><b>2</b></I>.
d950 2
a951 2
    <a href="../../..//techs/verify/VerifyDocs/interface.htm">
    <font class="guitool">verifybyview.py</font></a>. 
d953 1
a953 2
    present in the tarball. 
    For more details, refer below to the 
d965 1
a965 1
      <OL TYPE=A>
d972 1
a972 1
        <p> The parameter <b><I>4</I></b> on the command line above specifies 
d974 1
a974 1
        A depth of <b><I>2</I></b>, in comparison, 
d977 2
a978 2
        Unlike the <I>Dendrogram</I> option in 
        <a href="http://www.wadsworth.org/spider_doc/web/docs/web.html"><font class="guitool">WEB</font></a>, 
d996 2
a997 4
        <p> Save the selection file with <I>CTRL-s</I>. 
        Further options for the program are described on the 
        <a href="../../..//techs/MSA/index.htm">
        MSA page</a>.
d1000 6
a1005 6
        <p> The script <A HREF="binarytree.py"><font class="guitool">binarytree.py</font></A> requires the library 
        <A HREF="../../..//python/spipylib/code/Spiderutils.html">
        Spiderutils.py</A> from the 
        <A HREF="../../../../spire/doc/packages.html">
        <font class="guitool">SPIRE</font></A> installation. 
        If you don't have <font class="guitool">SPIRE</font></A> installed, 
d1012 1
a1012 1
        <a href="../../..//man/doccreate.html">
d1021 1
a1021 1
        It can also be used in conjuction with <font class="guitool">binarytree.py</font> to 
d1026 3
a1028 3
        <code class="snippet">verifybyview Tree</code> &nbsp; if you used the binary-tree option, or <br />
        <code class="snippet">verifybyview Kmeans</code> &nbsp; if you ran K-means classification, or <br />
        <code class="snippet">verifybyview Cluster</code> &nbsp; if you used Diday's clustering method, <I>etc.</I>
d1031 1
a1031 6
        <p> The script <A HREF="verifybyview.py"><font class="guitool">verifybyview.py</font></A> 
        requires libraries belonging to <font class="guitool">SPIRE</font>. 
        See the <A HREF="../../../../spire/doc/packages.html">
        installation instructions here</a>.
        </p>
        
d1039 6
a1044 6
            <tr valign="top"><td>&curren;                                   </td>
            <td><i>Display &gt; <b>reverse order</b></i>:                      </td>
            <td>Toggling this option will display the averages starting from #1.</td></tr>
            <tr valign="top"><td>&curren;                                   </td>
            <td><I><i>Display &gt; labels &gt; <b>text label</b></i></I>:                      </td>
            <td>Change <I><b>CCC</b></I> to <I><b>N</b></I>
d1096 1
a1096 1
        <br /><U>NOTE</U>: There is a limit of how many images that can be displayed in one montage. 
d1104 1
a1104 1
        <I>File</I> menu and selecting <I>Save selection</I> (or <I>ALT-s</I>).
d1122 2
a1123 2
    <p><U>NOTE</U>: Ensure that the classification method that you used 
    is reflected in the procedure file label <b><I>[old_class_dir]</I></b>. 
d1138 1
a1138 1
                    <a href="../../..//man/apsh.html">
d1171 1
a1171 1
    <tr valign="top"><td>&curren;</td>
d1210 1
a1210 1
                <td>List of particles belonging to each class.</td></tr>
d1213 1
a1213 1
    <br /><I>Notable parameters include:</I>
d1217 1
a1217 1
        <td><b><I>[reduce-factor]</I></b>:                      </td>
d1220 1
a1220 1
        <td><b><I>[ca-pca]</I></b>:                      </td>
d1224 5
d1230 1
a1230 6
        <td><b><I>[first-view]</I></b>:                      </td>
        <td>If this procedure file hangs or crashes after <I>N</I> reference-views, 
            <br />change the <b><I>[ca-pca]</I></b> option and 
            re-start the procedure file at <I>N+1</I>.</td></tr>
        <tr valign="top"><td>&curren;                                   </td>
        <td><b><I>[num-factors]</I></b>:                      </td>
d1239 12
a1250 12
    <p> We will check the results of the classifiaction using <font class="guitool">verifybyview</font>, 
    which requires libraries belonging to <font class="guitool">SPIRE</font>. 
    See the <A HREF="../../../../spire/doc/packages.html">
    installation instructions here</a>.
    </p>
    
    <p> Specifically, what we are looking for is that there is no subpopulation within each reference-view 
    that warrants its own class. 
    So for each reference-view, we will select the distinct class averages, and 
    use those for the next round of multi-reference alignment and classification. 
    If there is only one distinct class for each reference-view, you are finished with this step and 
    can proceed to the step of <a href="#verify">verifying individual particle images</a>.
d1267 2
a1268 3
    The file <a href=".verifybyview">.verifybyview</a> is present in the 
    <a href="tar_archive/archive.html">tarball archive</a>, 
    but if absent, you will need to adjust the filenames. 
d1317 1
a1317 1
    <I>File</I> menu and selecting <I>Save selection</I>.
d1324 1
a1324 1
    Instead of the command above, type: </P>
d1327 1
a1327 1
    <P>...which will show only the classes corresponding to reference 1.  
d1329 1
a1329 1
    and pressing <I>Update</I> (after saving the class selection, if necessary).
d1335 1
a1335 1
    we obtain stable classes, <I>i.e.,</I> no new classes appear. 
d1355 1
a1355 1
            The default parameter <b><I>[multirefIterNum]</I></b> of <I>-1</I> will use 
d1368 1
a1368 1
                set the parameter <b><I>[multirefIterNum]</I></b> if 
d1372 2
a1373 1
        <li><p><b>Check the classification results using <font class="guitool">verifybyview</font></b></p></li>
d1388 1
a1388 1
        change input file label <b><I>[old_class_dir]</I></b> from 
d1394 1
a1394 1
        change the label <b><I>[class_dir]</I></b> from 
d1406 1
a1406 1
<!--        <p> <U>NOTE</U>: In several steps below, I will assume that you run 2 iterations of multireference alignment. 
d1429 3
a1431 5
    To crudely assist selection of the images, 
    the particles are sorted from highest CCC to worst. 
    A more thorough description of 
    <a href="../../..//techs/verify/VerifyDocs/interface.htm">
    verifybyview.py can be found here</a>. 
d1439 1
a1439 1
        <td><font class="output">Multiref2/View###/goodclasses</font>:</td>
d1442 2
a1443 2
        <td><font class="output">Multiref2/View###/byhand***</font>:</td>
        <td>List of selected particles for each class.</td></tr>
d1446 4
a1449 4
    <p><U>NOTE:</U> When you finish going through the class averages for a particular reference-view, 
    be sure to save the list of good <U>classes</U> in addition to the list of good particles. 
    The good-class list can be saved by going to the <I>File</I> menu and selecting <I>Save selection</I>, 
    or by clicking on the <I>Save+Update</I> button, or with the shortcut <I>Alt-S</I>
d1476 1
a1476 1
    In that case, re-run classifyview, setting <b><I>[verified-yn]</I></B> to 1, 
d1480 1
a1480 1
    <I>e.g.</I>, add <b>good-</b> to the beginning of the filenames. 
d1521 2
a1522 2
<P>
<b><FONT SIZE="4"><a name="mods">Recent modifications:</a></FONT></B></P>
d1525 1
d1542 1
a1542 1
        <I>Three-Dimensional Electron Microscopy of Macromolecular Assemblies</I>.
d1547 1
a1547 1
        <I>Ultramicroscopy</I> <b>66</b>: 5-10.</li>
d1550 1
a1550 1
        <I>JOURNAL</I> <b>VOLUME</b>: PG0-PG.</li>-->
d1553 1
a1553 1
        <I>J Struct Biol </I> <b>161</b>: 41-48.</li>
d1555 3
a1557 2
        SPIDER image-processing for single-particle reconstruction of biological macromolecules from electron micrographs.
        <I>Nature Protocols</I> <b>3</b>: 1941-74.</li>
d1560 1
a1560 1
        <I>Nucleic Acids Res.</I> <b>39</b>: 2845-54.</li>
d1563 1
a1563 1
<HR>
d1567 2
a1568 2
  Source:       techs/MSA/index.html &nbsp;&nbsp;&nbsp; 
  Page updated: 2018/11/15    &nbsp;&nbsp;&nbsp; 
@


1.14
log
@tapus update
@
text
@d56 1
a56 1
    <BR>The files will be written to the current directory, so create a new one, if so desired. </li>
d69 4
a72 4
<UL>
    <LI>a particle stack</LI>
    <LI>a selection file, listing the image numbers in the stack file above</LI>
</UL>
d82 1
a82 1
    however, the aligning power of the images will be lost.  You may need to tweak the radii.<BR>
d105 2
a106 2
            <P><B>Reference</B>: Marco S, Chagoyen M, de la Fraga LG, Carazo JM, Carrascosa JL (1996)
                Ultramicroscopy <B>66</B>: 5-10.</p></li>
d145 1
a145 1
                    <li>first threshold, in units of standard deviations <BR>
d148 1
a148 1
                    <li>Fourier filter radius for the thresholded image <BR>
d151 1
a151 1
                    <li>second threshold, for the filtered mask, between 0 and 1 <BR>
d154 2
a155 2
            <li>INPUT: average image, such as <B>pairwise/rfreeavg001</B></li>
            <li>OUTPUT: <B>stkmask</B>, whose slices are as follows:</li>
d165 1
a165 1
            <BR>You may need to fiddle with the parameters to get a nice mask.
d170 1
a170 1
                <IMG SRC="images/custom.gif"><BR>
d188 2
a189 2
                   <BR>&nbsp; Qualitatively, eigenimages are the systematic variations of the images.
                   <BR>&nbsp; Think of expressing each image as the average plus some linear combination of the eigenimages. </li>
d192 1
a192 1
              </UL>
d204 2
a205 2
                The worm hemoglobin images are artificial and can be described with only a few factors. <BR>
                The ribosome images are real, and require more factors to describe the data. <BR>
d212 1
a212 1
                        factor 1 vs. 2<BR>
d216 1
a216 1
                        eigenvalue histogram<BR>
d220 1
a220 1
                        eigenimages<BR>
d224 1
a224 1
                        reconstituted images<BR>
d230 2
a231 2
                        worm <BR>
                        hemoglobin <BR>
d253 1
a253 1
                        ribosome <BR>
d272 1
a272 1
            <a href="../../man/clkm.html">'CL KM'</a><BR>
d292 1
a292 1
                <code><B>./montagefromdoc &nbsp; KMeans/docclass001.dat</B></code><br />
d351 1
a351 1
    <li><a name="tree"><P>Visualize binary tree</a><BR>
d479 1
a479 1
<UL>
d481 1
a481 1
<li><p><b>[Recommended] Generate parameter file</b></p></LI>
d511 1
a511 1
<li><p><b>Prepare particle stack.</b></p></LI>
d545 1
a545 1
    <b>Outputs, for either of the two cases above:</b><br>
d603 1
a603 1
    <b>Outputs:</b><br>
d609 2
a610 2
                    <BR>See note about centering on the 
                    <a href="align.htm">alignment parameters page</a>.</td></tr>
d614 1
a614 1
                    <BR>This stack will be overwritten with subsequent alignments.</td></tr>
d618 1
a618 1
                    <BR>retained locally to the <font class="output">Pairwise/</font> directory.</td></tr>
d636 1
a636 1
    <b>Outputs:</b><br>
d646 1
a646 1
        <BR><code class="snippet">montagefromdoc listparticles.spi stkfiltered.spi</code></p>
d675 1
a675 1
       <b>Outputs:</b><br>
d681 1
a681 1
                <BR>For more information about eigenimages (and reconstituted images), see the
d687 2
a688 2
                <BR>Factors can be positive or negative, hence the two versions for each.
                <BR>For more information about reconstituted images (and eigenimages), see the
d697 1
a697 1
        <BR>For more information about the output of
d704 1
a704 1
        <BR>Clusters are indicative of distinct classes.</td></tr>
d707 1
a707 1
    <BR><I>Important parameters:</I>
d713 1
a713 1
            <BR>One method or another sometimes crashes due to "numerical inaccuracy."
d718 1
a718 1
            <BR>If after you run this procedure file, all of the eigenimages look meaningful,
d751 1
a751 1
    <BR>Choose one of the following 3 classification options:
d767 1
a767 1
            <b>Output:</b><br>
d773 1
a773 1
                <BR>See the <a href="../../..//techs/classification/tutorial.html#clhc">
d809 1
a809 1
                <b>Outputs:</b><br>
d840 1
a840 1
            <b>Outputs:</b><br>
d851 1
a851 1
                                    <BR>Needed as an input for <font class="guitool">verifybyview.py</font> 
d872 1
a872 1
        <b>Outputs:</b><br>
d887 1
a887 1
                                <BR>Needed as an input for <font class="guitool">verifybyview.py</font> 
d904 1
a904 1
                <b>Outputs:</b><br>
d910 1
a910 1
                                        <BR>See the <a href="../../..//techs/classification/tutorial.html#clhc">
d934 1
a934 1
            <b>Outputs:</b><br>
d945 1
a945 1
                                        <BR>Needed as an input for <font class="guitool">verifybyview.py</font> 
d976 1
a976 1
        <BR><code class="snippet">binarytree labeled001.spi 4 goodclasses.spi</code>
d1034 3
a1036 3
        <p> Open <font class="guitool">verifybyview.py</font> by typing: <BR>
        <code class="snippet">verifybyview Tree</code> &nbsp; if you used the binary-tree option, or <BR>
        <code class="snippet">verifybyview Kmeans</code> &nbsp; if you ran K-means classification, or <BR>
d1046 1
a1046 1
        <br>Included in the tarball is a starting <a href=".verifybyview">.verifybyview</a> file 
d1090 1
a1090 1
        <BR>The first time you click on a class average, 
d1110 1
a1110 1
        <br><U>NOTE</U>: There is a limit of how many images that can be displayed in one montage. 
d1142 1
a1142 1
    <b>Outputs:</b><br>
d1147 1
a1147 1
                    <BR>They should resemble full-sized, unfiltered versions of the selected class averages</td></tr>
d1151 1
a1151 1
                    <BR>See the documentation for 
d1160 1
a1160 1
                    <BR>This copy is retained locally to the <font class="output">Pairwise/</font> directory.</td></tr>
d1164 1
a1164 1
                    <BR>This stack will be overwritten with subsequent alignments.</td></tr>
d1182 1
a1182 1
    <b>Outputs:</b><br>
d1212 1
a1212 1
    <b>Outputs</b>:<br>
d1218 1
a1218 1
                    <BR>Also contains various statistics for each class.</td></tr>
d1227 1
a1227 1
    <BR><I>Notable parameters include:</I>
d1236 1
a1236 1
            <BR>One method or another sometimes hangs due to "numerical inaccuracy."
d1241 1
a1241 1
            <BR>change the <b><I>[ca-pca]</I></b> option and 
d1246 1
a1246 1
            <BR>The classification does not appear to depend greatly on this value, 
d1267 1
a1267 1
    <p> Open <font class="guitool">verifybyview.py</font> by typing: <BR>
d1301 1
a1301 1
    <BR>The first time you click on a class average, 
d1343 1
a1343 1
    You can proceed to the next reference by changing the directory number (e.g., <B>View002</B>)
d1390 2
a1391 2
                To open it, type: <BR>
                        <code class="snippet">verifybyview Multiref2/View001</code><BR>
d1404 1
a1404 1
        <BR>An example, <a href="multirefalign3plus.msa">multirefalign3plus.msa</a>, 
d1430 1
a1430 1
    To start it, assuming you performed 2 rounds of multireference alignment, type: <BR>
d1450 1
a1450 1
    <b>Outputs:</b><br>
d1481 1
a1481 1
    <b>Output:</b><br>
d1492 1
a1492 1
    In that case, re-run classifyview, setting <B><I>[verified-yn]</I></B> to 1, 
d1519 1
a1519 1
    <b>Outputs:</b><br>
d1532 2
a1533 2
</UL>
<BR>
d1538 12
a1549 12
<B><FONT SIZE="4"><a name="mods">Recent modifications:</a></FONT></B></P>
<UL>
<!--    <LI>2015-date -- </LI> -->
   <LI>2015-08-21 -- added "full," iterative alignment</LI> 
   <LI>2014-02-04 -- changed project extention to '.msa' </LI>
   <LI>2014-02-04 -- added SPIRE configuration file (adapted from Munich Workshop) </LI>
   <LI>2014-01-20 -- added more illustrations for phantom worm hemoglobin data </LI>
   <LI>2014-01-20 -- ca-pca.msa -- made the number of standard deviations in the factor maps user defined
      <BR>&nbsp; SPIDER sometimes crashes when too small a value is used 
      (where too many points pile up on the edge of the plot)</LI>
   <LI>2009-06-12 -- added illustration for custom mask</LI>
</UL>
d1582 1
a1582 1
  Page updated: 2015/08/21    &nbsp;&nbsp;&nbsp; 
@


1.13
log
@Fixed typo (SPIDER configuration -> SPIRE configuration)
@
text
@d5 1
d17 1
a17 1
<p>There are essentially only four steps here:</p>
a18 1
    <li>Low-pass filtration </li>
a25 5
   The low-pass filtration is optional, but if you plan to look at individual 
   particles, this step will help.
</p>

<p>
d39 1
a39 1
   (here, in the batch file <a href="batch/ca-pca.msa">ca-pca.msa</a>). 
d61 14
a74 1
<p><b><font size="4">Procedure</font></b></p>
d77 6
a82 1
    <li><b>Low-pass filtration</b> 
d84 3
a86 9
        <li>BATCH FILE: <a href="batch/filtershrink.msa">filtershrink.msa</a></li> 
        <li>INPUT PARAMETERS: filter radii, decimation factor </li>
        <li>INPUTS: selection file, unfiltered particles </li>
        If you don't have a selection file, run 
        <a href="batch/mkfilenums.py">mkfilenums.py</a> (W.T.B. &amp; T.R.S.), 
        substituting the appropriate filenames: <br />

        <code><b>mkfilenums.py &nbsp; listparticles.dat &nbsp; win/ser*.dat</code></b></li>

d89 2
a90 2
    <p />

d93 1
a93 13
        <li>Using <a href="../../man/apsr.html">'AP SR'</a> 
        <ul>
            <li>BATCH FILE: <a href="batch/apsr4class.msa">apsr4class.msa</a></li>
            <li>INPUT PARAMETER: object diameter (pixels, after decimation)</li>
            <li>INPUTS: unaligned particles, selection file </li>
            <li>OUTPUTS: aligned particles, averages
 
            <p>There may to be a memory limit in 
            <a href="../../man/apsr.html">'AP SR'</a>.
            If you get a core dump, truncate the selection file and try again.</p></li>
        </ul>

        <li>Using pairwise alignment
d95 1
a95 1
            <li>BATCH FILE: <a href="batch/pairwise.msa">pairwise.msa</a></li> 
d108 13
d123 13
d141 1
a141 1
            <li>BATCH FILE: <A HREF="batch/custommask.msa">custommask.msa</A></li>
d177 2
a178 2
            <li>BATCH FILE: <A HREF="batch/ca-pca.msa">ca-pca.msa</a></li>
            <li>uses Python script <A HREF="batch/eigendoc.py">eigendoc.py</A> (J.S.L. &amp; T.R.S.) </li>
d195 1
a195 1
            <A HREF="batch/ca-pca.msa">ca-pca.msa</a> to 2 (PCA) or 3 (iterative PCA). </p>
d271 9
a279 7
        <li>Diday's method, using 
           <a href="../../man/clcla.html">'CL CLA'</a> -- I hear that this method 
           works exceedingly well. In 
           practice though, I find that I have limited control over the number of 
           classes, which may or may not be a problem depending on the 
           application. Also, I sometimes get errors with large data sets with 
           this method. 
d281 3
a283 12
            <li>BATCH FILE: <a href="batch/cluster.msa">cluster.msa</a> 
            <ul>
                <li>INPUT PARAMETER: number of eigenfactors to use </li>
                <li>OUTPUT: dendrograms 
                    (<a href="images/dendrogram.gif">PostScript</a>
                    and SPIDER formats)
                <p>After running, decide how many classes to include. using 
                   <a href="../../../../web/docs/web.html">WEB</a>/
                   <a href="../../../../web/docs/jweb.html">JWEB</a> 
                (<i>Commands -&gt; Dendrogram</i>) and clicking on 
                 <i>Show averaged images</i>.</p></li> 
            </ul>
d285 12
a296 18
            <center><p><table border="1">
                <tr>
                    <td><center><p align="center">
                        <a href="images/dendrogram.gif">
                        <img src="images/dendrogram-sm4.gif"> <br />
                        dendrogram<br />

                        PostScript format</a><br />
                        <i>(click to enlarge)</i>
                    </p></center></td>
                </tr>
            </table></p></center>

            <li>BATCH FILE: <a href="batch/classavg.msa">classavg.msa</a> 
                <ul>
                    <li>INPUT PARAMETER: desired number of classes 
                    <li>OUTPUT: class averages 
                </ul>
d298 2
a299 3
        <p />

        <li>Ward's method, using 
d301 1
a301 1
        The advantage is that, unlike Diday's method above, the 
d307 1
a307 1
                <li>BATCH FILE: <a href="batch/hierarchical.msa">hierarchical.msa</a> 
d351 2
a352 45
                <li>BATCH FILE: <a href="batch/classavg.msa">classavg.msa</a> 
                    <ul>
                        <li>INPUT PARAMETER: desired number of classes 
                        <li>OUTPUT: class averages 
                    </ul>
                 </ul>
            </ul>
        <p />

        <li>K-means classification, using 
            <a href="../../man/clkm.html">'CL KM'</a>   -- The primary input is the number of classes 
        to divide the particles into. 
        <ul>
            <li>BATCH FILE: <a href="batch/kmeans.msa">kmeans.msa</a> </li>
            <li>INPUT PARAMETERS: number of eigenfactors, number of classes </li>
            <li>OUTPUT: class averages 

            <p>It can be informative to look at the individual particles from a class.  
                You can use 
                <a href="../../../../web/docs/web.html">WEB</a>/
                <a href="../../../../web/docs/jweb.html">JWEB</a>, or 
                <a href="batch/montagefromdoc.py">montagefromdoc.py</a>.  
                <br />
                Usage: <br />
                <code><B>./montagefromdoc.py &nbsp; KM/docclass001.dat</B></code><br />
                If you have requested too many classes, there will be 
                 similar-looking class averages.  
                If you have requested too few, there will be dissimilar 
                particles within a class.  </p></li>
        </ul>
    </ol>
</ol>

<HR>

<p><b><font size="4">Miscellaneous tools:</font></b></p>

<ul>
    <li>There is a Python utility, 
        <a href="../../../../spire/doc/guitools/classavg.html">classavg.py</a>, 
        that upon clicking on a class average displays the constituent 
        individual particles.</li>
    <p />

    <li><a name="tree">Binary tree</a> -- It is often not clear where to truncate the dendrogram. 
d357 2
a358 1
        although Bill Rice says that if the prefix is two characters long, it works.)  
d360 1
a360 1
            <li>BATCH FILE:  <a href="batch/binarytree.msa">binarytree.msa</a>
d362 2
a363 2
                    <li>SUBROUTINES: <a href="batch/averagenode.msa">averagenode.msa</a>, 
                        <a href="batch/update_lut.msa">update_lut.msa</a> </li>
d369 1
a369 1
                        <a href="batch/hierarchical.msa">hierarchical.msa</a>), 
d375 1
a375 1
            <li>Visualize the output using <a href="batch/binarytree.py">tree.py</a> 
d380 1
a380 1
                <i>binarytree.py &nbsp;&nbsp; labeled001.dat &nbsp;&nbsp; 4 &nbsp;&nbsp; 2 &nbsp;&nbsp; 1024</i> <br />
d390 1
a390 1
                is not installed, try <a href="batch/spidertree.msa">spidertree.msa</a>. 
d398 1
a398 1
                        <a href="batch/binarytree.msa">binarytree.msa</a></li>
d420 2
d423 1111
d1540 2
a1541 1
<!--    <LI>2014-date -- </LI> -->
d1553 26
d1582 1
a1582 1
  Page updated: 2014/02/05    &nbsp;&nbsp;&nbsp; 
@


1.12
log
@changed '.spi' extension to '.msa'
added SPIRE configuration file
added additonal error-checking (downsampling, alignment radius)
@
text
@d60 1
a60 1
    <a href="tar_archive/msa20140204.tar">tarball containing the batch files</a> 
d464 1
a464 1
   <LI>2014-02-04 -- added SPIDER configuration file (adapted from Munich Workshop) </LI>
d477 1
a477 1
  Page updated: 2014/02/04    &nbsp;&nbsp;&nbsp; 
@


1.11
log
@updated modification date
@
text
@d4 1
a4 1
    <title>MDA</title>
d44 1
a44 1
   (here, in the batch file <a href="batch/ca-pca.spi">ca-pca.spi</a>). 
d60 1
a60 1
    <a href="tar_archive/msa20140124.tar">tarball containing the batch files</a> 
d71 1
a71 1
        <li>BATCH FILE: <a href="batch/filtershrink.spi">filtershrink.spi</a></li> 
d88 1
a88 1
            <li>BATCH FILE: <a href="batch/apsr4class.spi">apsr4class.spi</a></li>
d100 1
a100 1
            <li>BATCH FILE: <a href="batch/pairwise.spi">pairwise.spi</a></li> 
d120 1
a120 1
            <li>BATCH FILE: <A HREF="batch/custommask.spi">custommask.spi</A></li>
d156 2
a157 5
            <li>BATCH FILE: <A HREF="batch/ca-pca.spi">ca-pca.spi</a></li>
            <li>uses Python script 
            <A HREF="batch/eigendoc.py">eigendoc.py</A>
                (J.S.L.) and Gnuplot script <A HREF="batch/ploteigen.gnu">ploteigen.gnu</A>
                (J.S.L. &amp; T.R.S.) </li>
d174 1
a174 1
            <A HREF="batch/ca-pca.spi">ca-pca.spi</a> to 2 (PCA) or 3 (iterative PCA). </p>
d258 1
a258 1
            <li>BATCH FILE: <a href="batch/cluster.spi">cluster.spi</a> 
d284 1
a284 1
            <li>BATCH FILE: <a href="batch/classavg.spi">classavg.spi</a> 
d300 1
a300 1
                <li>BATCH FILE: <a href="batch/hierarchical.spi">hierarchical.spi</a> 
d344 1
a344 1
                <li>BATCH FILE: <a href="batch/classavg.spi">classavg.spi</a> 
d357 1
a357 1
            <li>BATCH FILE: <a href="batch/kmeans.spi">kmeans.spi</a> </li>
d395 1
a395 1
            <li>BATCH FILE:  <a href="batch/binarytree.spi">binarytree.spi</a>
d397 2
a398 2
                    <li>SUBROUTINES: <a href="batch/averagenode.spi">averagenode.spi</a>, 
                        <a href="batch/update_lut.spi">update_lut.spi</a> </li>
d404 1
a404 1
                        <a href="batch/hierarchical.spi">hierarchical.spi</a>), 
d424 2
a425 2
            <li>If <a href="../../python/spipylib/code/Spiderutils.html">Spiderutils.py</a> 
                is not installed, try <a href="batch/tree.spi">tree.spi</a>. 
d433 1
a433 1
                        <a href="batch/binarytree.spi">binarytree.spi</a></li>
d449 1
a449 1
                            tree.spi, <i>depth=4</i></a> <br />
d463 2
d466 1
a466 1
   <LI>2014-01-20 -- ca-pca.spi -- made the number of standard deviations in the factor maps user defined
d477 1
a477 1
  Page updated: 2014/01/24    &nbsp;&nbsp;&nbsp; 
@


1.10
log
@updated tarball
@
text
@d478 1
a478 1
  Page updated: 2013/01/20    &nbsp;&nbsp;&nbsp; 
@


1.9
log
@Added images of eigenimages and reconstituted images, description of ca-pca output
@
text
@d60 1
a60 1
    <a href="tar_archive/msa20130120.tar">tarball containing the batch files</a> 
@


1.8
log
@bad a tags fixed
@
text
@d6 1
a7 1
<body>
d18 1
a18 1
    <li>Low-pass filtration         </li>
d60 2
a61 2
    <a href="tar_archive/msa20121214.tar">tarball containing the batch files</a> 
    <br />The files will be written to the current directory, so create a new one, if so desired. </li>
d110 2
a111 2
            <p><b>Reference</b>: Marco S, Chagoyen M, de la Fraga LG, Carazo JM, Carrascosa JL (1996)
                Ultramicroscopy <b>66</b>: 5-10.</p></li>
d120 1
a120 1
            <li>BATCH FILE: <a href="batch/custommask.spi">custommask.spi</a></li>
d124 1
a124 1
                    <li>first threshold, in units of standard deviations <br />
d127 1
a127 1
                    <li>Fourier filter radius for the thresholded image <br />
d130 1
a130 1
                    <li>second threshold, for the filtered mask, between 0 and 1 <br />
d133 2
a134 2
            <li>INPUT: average image, such as <b>pairwise/rfreeavg001</b></li>
            <li>OUTPUT: <b>stkmask</b>, whose slices are as follows:</li>
d136 6
a141 6
                    <li>filtered image                </li>
                    <li>thresholded image             </li>
                    <li>filtered mask                 </li>
                    <li>final mask                    </li>
                    <li>mask-multipled image          </li>
                    <li>inverted mask                 </li>
d144 1
a144 1
            <br />You may need to fiddle with the parameters to get a nice mask.
d147 3
a149 3
            <center><p><table border="1">
                <tr><td><center><p align="center">
                <img src="images/custom.gif"> <br />
d151 2
a152 2
                </p></center></td></tr>
            </table></p></center>
d156 1
a156 1
            <li>BATCH FILE: <a href="batch/ca-pca.spi">ca-pca.spi</a></li>
d158 2
a159 2
            <a href="batch/eigendoc.py">eigendoc.py</a>
                (J.S.L.) and Gnuplot script <a href="batch/ploteigen.gnu">ploteigen.gnu</a>
d163 12
a174 3
            <li>OUTPUTS: <a href="images/histogram.gif">eigenvalue histogram</a>, 
            eigenimages, <a href="images/factormap.gif">factormaps</a>, 
            reconstituted images <br />
d177 1
a177 1
            <a href="batch/ca-pca.spi">ca-pca.spi</a> to 2 (PCA) or 3 (iterative PCA). </p>
d181 1
a181 1
            of eigenfactors to calculate, and re-run this batch file. </p></li>
d184 64
a247 16
        <center><p><table border="1">
            <tr>
                    <td><center><p align="center">
                        <a href="images/histogram.gif">
                        <IMG SRC="images/histogram-sm32.gif"><br />
                        eigenvalue histogram</a><br />
                        <i>(click to enlarge)</i>
                    </p></center></td>
                    <td><center><p align="center">
                        <a href="images/factormap.gif">
                        <IMG SRC="images/factormap-small.gif"><br />
                        factormap</a><br />
                        <i>(click to enlarge)</i>
                    </p></center></td>
                </tr>
        </table></p></center>
d413 2
a414 1
            <li>Visualize the output using <a href="batch/tree.py">tree.py</a>. (Requires 
d417 2
a418 2
                installation.)  Syntax: <br />
                <i>tree.py &nbsp;&nbsp; labeled001.dat &nbsp;&nbsp; 4 &nbsp;&nbsp; 2 &nbsp;&nbsp; 1024</i> <br />
d423 1
a423 3

                    <li><i>4 (optional)</i> is the tree depth (default is 6) </li>

a424 1

a426 1

d446 1
a446 1
                            tree.py, <i>depth=4</i></a> <br />
d462 13
d478 1
a478 1
  Page updated: 2012/12/14    &nbsp;&nbsp;&nbsp; 
@


1.7
log
@updated tarball link
@
text
@d6 1
a8 1

d18 1
a18 1
    <li>Low-pass filtration </li>
d61 1
a61 1
    <BR>The files will be written to the current directory, so create a new one, if so desired. </li>
d110 2
a111 2
            <P><B>Reference</B>: Marco S, Chagoyen M, de la Fraga LG, Carazo JM, Carrascosa JL (1996)
                Ultramicroscopy <B>66</B>: 5-10.</p></li>
d120 1
a120 1
            <li>BATCH FILE: <A HREF="batch/custommask.spi">custommask.spi</A></li>
d124 1
a124 1
                    <li>first threshold, in units of standard deviations <BR>
d127 1
a127 1
                    <li>Fourier filter radius for the thresholded image <BR>
d130 1
a130 1
                    <li>second threshold, for the filtered mask, between 0 and 1 <BR>
d133 2
a134 2
            <li>INPUT: average image, such as <B>pairwise/rfreeavg001</B></li>
            <li>OUTPUT: <B>stkmask</B>, whose slices are as follows:</li>
d136 6
a141 6
                    <li>filtered image</li>
                    <li>thresholded image</li>
                    <li>filtered mask</li>
                    <li>final mask</li>
                    <li>mask-multipled image</li>
                    <li>inverted mask</li>
d144 1
a144 1
            <BR>You may need to fiddle with the parameters to get a nice mask.
d147 3
a149 3
            <CENTER><P><TABLE BORDER="1">
                <TR><TD><CENTER><P ALIGN="CENTER">
                <IMG SRC="images/custom.gif"><BR>
d151 2
a152 2
                </P></CENTER></TD></TR>
            </TABLE></P></CENTER>
d156 1
a156 1
            <li>BATCH FILE: <A HREF="batch/ca-pca.spi">ca-pca.spi</a></li>
d158 2
a159 2
            <A HREF="batch/eigendoc.py">eigendoc.py</A>
                (J.S.L.) and Gnuplot script <A HREF="batch/ploteigen.gnu">ploteigen.gnu</A>
d163 3
a165 3
            <li>OUTPUTS: <A HREF="images/histogram.gif">eigenvalue histogram</A>, 
            eigenimages, <A HREF="images/factormap.gif">factormaps</A>, 
            reconstituted images <br>
d168 1
a168 1
            <A HREF="batch/ca-pca.spi">ca-pca.spi</a> to 2 (PCA) or 3 (iterative PCA). </p>
d175 16
a190 16
        <CENTER><P><TABLE BORDER="1">
            <TR>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="images/histogram.gif">
                        <IMG SRC="images/histogram-sm32.gif"><BR>
                        eigenvalue histogram</A><BR>
                        <I>(click to enlarge)</I>
                    </P></CENTER></TD>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="images/factormap.gif">
                        <IMG SRC="images/factormap-small.gif"><BR>
                        factormap</A><BR>
                        <I>(click to enlarge)</I>
                    </P></CENTER></TD>
                </TR>
        </TABLE></P></CENTER>
d372 1
@


1.6
log
@updated link to tarball
@
text
@d60 1
a60 1
    <a href="tar_archive/msa20120413.tar">tarball containing the batch files</a> 
d334 1
a334 1
    <li>Binary tree -- It is often not clear where to truncate the dendrogram. 
d410 1
a410 1
  Page updated: 4/13/12      &nbsp;&nbsp;&nbsp; 
@


1.5
log
@formatting changes, added Carrascosa citation
@
text
@d60 1
a60 1
    <a href="tar_archive/msa20120126.tar">tarball containing the batch files</a> 
@


1.4
log
@added optional step for custom mask, added link to tarball
@
text
@a71 1

a72 1

d78 1
a78 1
        <i>mkfilenums.py &nbsp;&nbsp;&nbsp; listparticles.dat &nbsp;&nbsp;&nbsp; win/ser*.dat</i></li>
d85 1
a85 1
    <ol type="A">
a88 1
 
a89 1

d91 1
a91 2

            <li>OUTPUTS: aligned particles, averages</li>
d93 3
a95 4
            <li>There may to be a memory limit in 
            <a href="../../man/apsr.html">'AP SR'</a>.</li>
  
            If you get a core dump, truncate the selection file and try again.
d101 1
a101 3

            <li>INPUT PARAMETER: object diameter (pixels, after decimation)</li>

d103 1
a103 2

            <li>OUTPUTS: aligned particles, averages </li>
d105 2
a106 2
            <li>Conceptually, this alignment first aligns pairs of images and averages them.
                 Then, it aligns pairs of those pairs and averages them, and so forth.  
d109 3
a111 1
                 which chooses seed images as alignment references.</li>
d115 1
a115 2
    <li>
    <b>Dimension-reduction</b> 
d144 1
a144 1
            <li>You may need to fiddle with the parameters to get a nice mask.</li>
d150 1
a150 1
                custom-made mask
d156 1
a156 1
            <li>BATCH FILE: <A HREF="batch/ca-pca.spi">ca-pca.spi</li>
d165 6
a170 5
            reconstituted images </li>
            <li>To switch to PCA (or iterative PCA), change the option in ca-pca.spi 
            under the command CA S from C to P (or I, respectively), and remove the 
            line referring to the additive constant. </li>
            <li>After running, examine the eigenimages and decide which ones to use. 
d172 1
a172 1
            of eigenfactors to calculate, and re-run this batch file. </li>
d195 1
a195 1
    <ol type="A">
a202 1
        
a206 1

d209 2
a210 3
                    and SPIDER formats)</li> 

                <li>After running, decide how many classes to include. using 
d214 1
a214 1
                 <i>Show averaged images</i>.</li> 
d218 1
a218 1
            	<tr>
d240 5
a244 5
        The pro is that, unlike Diday's method above, the 
        dendrogram branches to any arbitrary number of classes, down in size to 
        individual particles. The con is that the dendrogram is unreadable if 
        there are so many branches. You can truncate the dendrogram in 
        WEB/JWEB as described below. 
a248 1
 
d252 1
a252 1
                    <li>After running, decide how many classes to use. 
d257 1
a257 1
                    	<tr>
d267 1
a267 1
                    <li>The SPIDER-format dendrogram document can be viewed 
d278 1
a278 1
        	<tr>
d287 2
a288 1
        </table></p></center>
a303 1

d305 1
d307 1
a307 3
            <li>OUTPUT: class averages </li>

            <li>It can be informative to look at the individual particles from a class.  
d314 1
a314 1
                <i>./montagefromdoc.py &nbsp;&nbsp; KM/docclass001.dat</i><br />
d318 1
a318 1
                particles within a class.  
d387 1
a387 1
            	<tr>
d410 1
a410 1
  Page updated: 1/31/12      &nbsp;&nbsp;&nbsp; 
@


1.3
log
@AP CM  --> AP C
@
text
@d59 3
a61 2
    <li>All files are located under: <i> <a href="../MSA">techs/MSA</a></i> 
        (Modified June 2009).</li> 
d87 1
a87 1
    <ol>
d112 1
a112 1
            <li>OUTPUTS: aligned particles, averages/li>
a120 1
    <p />
d125 29
a153 9
        <li>BATCH FILE: <a href="batch/ca-pca.spi">ca-pca.spi</a> <br />

        Uses Python script 
        <a href="../classification/tut_txt/eigendoc.py">eigendoc.py</a>
         (J.S.L.) and Gnuplot script <a href="batch/ploteigen.gnu">ploteigen.gnu</a>
         (J.S.L. &amp; T.R.S.)</li>
 
        <li>INPUT PARAMETER: number of eigenfactors to calculate 
             (more than 99 will require some user modification)</li>
d155 6
a160 1
        <li>INPUT: aligned particles </li>
d162 14
a175 8
        <li>OUTPUTS: <a href="images/histogram.gif">eigenvalue histogram</a>, 
                     eigenimages, 
                     <a href="images/factormap.gif">factormaps</a>, &amp; 
                     reconstituted images </li>

        <li>To switch to PCA (or iterative PCA), change the option in 
            <a href="batch/ca-pca.spi">ca-pca.spi</a> 
            under the operation 'CA S' from 'C' to 'P' (or 'I', respectively), and remove the 
d177 1
a177 2

        <li>After running, examine the eigenimages and decide which ones to use. 
d180 1
d182 16
a197 17
        <center><p><table border="1">
        	<tr>
                    <td><center><p align="center">
                        <a href="images/histogram.gif">
                        <img src="images/histogram-sm32.gif"><br />
                        eigenvalue histogram</a>             <br />
                        <i>(click to enlarge)</i>
                    </p></center></td>

        	    <td><center><p align="center">
                        <a href="images/factormap.gif">
                        <img src="images/factormap-small.gif"><br />
                        factormap</a><br />
                        <i>(click to enlarge)</i>
                    </p></center></td>
                </tr>
        </table></p></center>
a198 1
    <p />
d202 2
a203 2
    <ul>
        <li>1. Diday's method, using 
d248 1
a248 1
        <li>2. Ward's method, using 
d309 1
a309 1
        <li>3. K-means classification, using 
d332 2
a333 2
    </ul>
</OL>
d421 2
a422 2
  Source:       techs/MSA/index.htm &nbsp;&nbsp;&nbsp; 
  Page updated: 8/03/09      &nbsp;&nbsp;&nbsp; 
@


1.2
log
@cosmetic, doctype compliance, untarred stuff, links local, etc.
@
text
@d18 2
a19 4
    <li>Low-pass filtration</li>

    <li>Alignment in two dimensions</li>

d21 2
a22 3
        using only a few terms, i.e., eigenvectors</li> 

    <li>Classification</li> 
d26 2
a27 2
The low-pass filtration is optional, but if you plan to look at individual 
particles, this step will help.
d31 3
a33 3
For the classification below to be sensible, the images will need to 
have been aligned. The alignment step here is optional if the images 
have been aligned already. 
d37 8
a44 8
The dimension-reduction step is even optional, in theory. In principle, 
one could classify the raw images (which is what SPIDER command 
<a href="../../man/apcm.html">AP CM</a> 
does). As an example here, I'm using correspondence analysis for 
the dimension-reduction. A similar method is principal-component 
analysis (PCA); to run PCA, one needs to change an option under SPIDER 
command <a href="../../man/cas.html">CA S</a> 
(here, in the batch file <a href="batch/ca-pca.spi">ca-pca.spi</a>). 
d48 4
a51 4
For classification, there are three methods illustrated here: Diday's 
method, Ward's method, and K-means. The individual classification 
commands are described in more depth 
<a href="../classification/tutorial.html"> tutorial here</a>. 
d56 1
a56 1
<p><b><FONT size="4">Getting started</font></b></p>
d59 2
a60 1
    <li>All files are located under: <i> docs/techs/MSA</i> (Modified 2008 Nov 17).</li> 
d63 1
a63 1
<HR>
d67 2
a68 2
<OL>
    <li><b>low-pass filtration</b> 
d77 3
a79 2
        substituting the appropriate filenames:
        <pre>mkfilenums.py listparticles.dat win/ser*.dat</pre></li>
a81 1

d83 1
d85 1
a85 1
    <li><b>reference-free alignment</b> choose one of these two options:
d87 1
a87 1
        <li>Using <a href="../../man/apsr.html">AP SR</a> 
d97 2
a98 2
            <li>There appears to be a memory limit for 
            <a href="../../man/apsr.html">AP SR</a>.</li>
d102 1
d111 1
a111 1
            <li>OUTPUTS: aligned particles, averages</li>
d116 1
a116 1
                 <a href="../../man/apsr.html">AP SR</a>, 
d120 1
d123 1
a123 1
    <b>dimension-reduction</b> 
d125 1
a125 1
        <li>BATCH FILE: <a href="batch/ca-pca.spi">ca-pca.spi</a> </li>
d127 1
a127 1
        <li>uses Python script 
d139 1
a139 1
                     <a href="images/factormap.gif">factormaps</a>, 
d142 3
a144 2
        <li>To switch to PCA (or iterative PCA), change the option in ca-pca.spi 
            under the command CA S from C to P (or I, respectively), and remove the 
d169 1
d171 2
a172 1
    <li><b>classification </b>-- choose one of three options: 
d175 1
a175 1
           <a href="../../man/clcla.html"> CL CLA</a> -- I hear that this method 
d179 2
a180 2
           application. Also, I've been getting errors with large data sets with 
           this method. <br />
d217 1
d220 1
a220 1
        <a href="../../man/clhc.html"> CL HC</a>  -- 
d278 2
d281 1
a281 1
            <a href="../../man/clkm.html"> CL KM</a>   -- The primary input is the number of classes 
d296 2
a297 2
                Usage:
      <pre><font face="Courier New, monospace">./montagefromdoc.py KM/docclass001.dat</font></pre>
d315 1
d342 2
a343 3
                installation.)
                <br />Syntax:
                <pre>tree.py labeled001.dat 4 2 1024</pre>
d392 3
a394 3
Source:       techs/MSA/index.htm &nbsp;&nbsp;&nbsp; 
Page updated: 11/17/08      &nbsp;&nbsp;&nbsp; 
Tanvir Shaikh
@


1.1
log
@Initial revision
@
text
@d2 5
a6 10
<HTML>
<HEAD>
    <TITLE>MDA</TITLE>
</HEAD>
<BODY>

<CENTER><P ALIGN="CENTER">
<FONT SIZE="7">Multivariate data analysis</FONT><BR>
<FONT SIZE="4">Previously known as multivariate statistical analysis</FONT>
</P></CENTER>
d8 16
a23 1
<HR>
d25 2
a26 8
<P>There are essentially only four steps here:</P>
<OL>
    <LI>low-pass filtration
    <LI>alignment in two dimensions
    <LI>dimension-reduction -- expression of a <I>m</I>x<I>n</I> image 
    using only a few terms, i.e., eigenvectors 
    <LI>classification 
</OL>
d28 1
a28 1
<P>
d31 1
a31 1
</P>
d33 1
a33 1
<P>
d37 1
a37 1
</P>
d39 1
a39 1
<P>
d41 3
a43 3
one could classify the raw images (which is what SPIDER command <A
 HREF="http://www.wadsworth.org/spider_doc/spider/docs/man/apcm.html">AP 
CM</A> does). As an example here, I'm using correspondence analysis for 
d46 3
a48 3
command <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/man/cas.html">CA S</A> 
(here, in the batch file <A HREF="batch/ca-pca.spi">ca-pca.spi</A>). 
</P>
d50 1
a50 1
<P>
d54 2
a55 3
<A HREF="http://www.wadsworth.org/spider_doc/spider/docs/techs/classification/tutorial.html">
tutorial here</A>. 
</P>
d57 1
a57 1
<HR>
d59 1
a59 1
<P><B><FONT SIZE="4">Getting started</FONT></B></P>
d61 3
a63 4
<UL>
    <LI>Download and unpackage the 
    <a href="tar_archive/msa20081117.tar">tarball containing the batch files</a> (Modified 2008 Nov 17). 
</UL>
d67 1
a67 1
<P><B><FONT SIZE="4">Procedure</FONT></B></P>
d70 7
a76 5
    <LI><B>low-pass filtration</B> 
    <UL>
        <LI>BATCH FILE: <A HREF="batch/filtershrink.spi">filtershrink.spi</A> 
        <LI>INPUT PARAMETERS: filter radii, decimation factor <BR>
        <LI>INPUTS: selection file, unfiltered particles  <BR>
d78 1
a78 1
        <A HREF="batch/mkfilenums.py">mkfilenums.py</A> (W.T.B. &amp; T.R.S.), 
d80 21
a100 14
        <PRE>mkfilenums.py listparticles.dat win/ser*.dat</PRE><BR>
        <LI>OUTPUTS: filtered particles
    </UL>

    <LI><B>reference-free alignment</B> choose one of these two options:
    <OL>
        <LI>Using <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/man/apsr.html">AP SR</A> 
        <UL>
            <LI>BATCH FILE: <A HREF="batch/apsr4class.spi">apsr4class.spi</A> 
            <LI>INPUT PARAMETER: object diameter (pixels, after decimation)
            <LI>INPUTS: unaligned particles, selection file <BR>
            <LI>OUTPUTS: aligned particles, averages 
            <LI>There appears to be a memory limit for 
            <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/man/apsr.html">AP SR</A>.  
d102 12
a113 8
        </UL>
        <LI>Using pairwise alignment
        <UL>
            <LI>BATCH FILE: <A HREF="batch/pairwise.spi">pairwise.spi</A> 
            <LI>INPUT PARAMETER: object diameter (pixels, after decimation)
            <LI>INPUTS: unaligned particles, selection file <BR>
            <LI>OUTPUTS: aligned particles, averages 
            <LI>Conceptually, this alignment first aligns pairs of images and averages them.
d116 101
a216 87
                 <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/man/apsr.html">AP SR</A>, 
                 which chooses seed images as alignment references.
        </UL>
    </OL>

    <LI>
    <B>dimension-reduction</B> 
    <UL>
        <LI>BATCH FILE: <A HREF="batch/ca-pca.spi">ca-pca.spi</A> 
        <LI>uses Python script 
        <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/techs/classification/WebText/eigendoc.py">eigendoc.py</A>
         (J.S.L.) and Gnuplot script <A HREF="batch/ploteigen.gnu">ploteigen.gnu</A>
         (J.S.L. &amp; T.R.S.) 
        <LI>INPUT PARAMETER: number of eigenfactors to calculate (more than 99 will require some user modification)
        <LI>INPUT: aligned particles 
        <LI>OUTPUTS: <A HREF="histogram.gif">eigenvalue histogram</A>, 
        eigenimages, <A HREF="factormap.gif">factormaps</A>, 
        reconstituted images 
        <LI>To switch to PCA (or iterative PCA), change the option in ca-pca.spi 
        under the command CA S from C to P (or I, respectively), and remove the 
        line referring to the additive constant. 
        <LI>After running, examine the eigenimages and decide which ones to use. 
        Typically all but the first few are noisy. If not, increase the number 
        of eigenfactors to calculate, and re-run this batch file. 

        <CENTER><P><TABLE BORDER="1">
        	<TR>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="histogram.gif">
                        <IMG SRC="histogram-sm32.gif"><BR>
                        eigenvalue histogram</A><BR>
                        <I>(click to enlarge)</I>
                    </P></CENTER></TD>
        	    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="factormap.gif">
                        <IMG SRC="factormap-small.gif"><BR>
                        factormap</A><BR>
                        <I>(click to enlarge)</I>
                    </P></CENTER></TD>
                </TR>
        </TABLE></P></CENTER>
    </UL>

    <LI><B>classification </B>-- choose one of three options: 
    <UL>
        <LI>1. Diday's method, using 
        <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/man/clcla.html">
        CL CLA</A> -- I hear that this method works exceedingly well. In 
        practice though, I find that I have limited control over the number of 
        classes, which may or may not be a problem depending on the 
        application. Also, I've been getting errors with large data sets with 
        this method. <BR>
        <B>(NOTE: At this time, CL CLA does not appear to work correctly.  
        Use <A HREF="batch/hierarchical.spi">hierarchical.spi</A> or 
        <A HREF="batch/kmeans.spi">kmeans.spi</A> for now.)</B>
        <UL>
            <LI>BATCH FILE: <A HREF="batch/cluster.spi">cluster.spi</A> 
            <UL>
                <LI>INPUT PARAMETER: number of eigenfactors to use 
                <LI>OUTPUT: dendrograms (<A HREF="dendrogram.gif">PostScript</A>
                 and SPIDER formats) 
                <LI>After running, decide how many classes to include. using WEB/JWEB 
                (<I>Commands -&gt; Dendrogram</I>) and clicking on <I>Show averaged images</I>. 
            </UL>

            <CENTER><P><TABLE BORDER="1">
            	<TR>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="dendrogram.gif">
                        <IMG SRC="dendrogram-sm4.gif"><BR>
                        dendrogram<BR>
                        PostScript format</A><BR>
                        <I>(click to enlarge)</I>
                    </P></CENTER></TD>
                </TR>
            </TABLE></P></CENTER>

            <LI>BATCH FILE: <A HREF="batch/classavg.spi">classavg.spi</A> 
                <UL>
                    <LI>INPUT PARAMETER: desired number of classes 
                    <LI>OUTPUT: class averages 
                </UL>
        </UL>

        <LI>2. Ward's method, using 
        <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/man/clhc.html">
        CL HC</A>  -- The pro is that, unlike Diday's method above, the 
d219 56
a274 50
        there are so many branches. You can truncate the dendrogram in WEB/JWEB 
        as described below. 
            <UL>
                <LI>BATCH FILE: <A HREF="batch/hierarchical.spi">hierarchical.spi</A> 
                <UL>
                    <LI>INPUT PARAMETER: number of eigenfactors to use 
                    <LI>OUTPUT: dendrograms (<A HREF="hcps.gif">PostScript</A> and 
                    SPIDER formats) 
                    <LI>After running, decide how many classes to use. The PostScript file may 
                    be highly branched, and nodes may be 
                    <A HREF="hcps.gif">unreadable</A>. 

                    <CENTER><P><TABLE BORDER="1">
                    	<TR>
                                <TD><CENTER><P ALIGN="CENTER">
                                    <A HREF="hcps.gif">
                                    <IMG SRC="hcps-small.gif"><BR>
                                    Untruncated dendrogram</A><BR>
                                    <I>(click to enlarge bottom row)</I>
                                </P></CENTER></TD>
                            </TR>
                    </TABLE></P></CENTER>

                    <LI>The SPIDER-format dendrogram document can be viewed with WEB/JWEB and 
                    truncated. In WEB, go to <I>Commands -&gt; Dendrogram</I> (<A
                    HREF="hcweb5.gif"><I>example</I></A>). In JWEB, go to <I>File 
                    -&gt; Open SPIDER Document File</I>. 


        <CENTER><P><TABLE BORDER="1">
        	<TR>
                    <TD><CENTER><P ALIGN="CENTER">
                        <A HREF="hcweb5.gif">
                        <IMG SRC="hcweb-small.gif"><BR>
                        Dendrogram in X-Window WEB</A><BR>
                        <I>(click to enlarge)</I>
                    </P></CENTER></TD>
                </TR>
        </TABLE></P></CENTER>

                <LI>BATCH FILE: <A HREF="batch/classavg.spi">classavg.spi</A> 
                    <UL>
                        <LI>INPUT PARAMETER: desired number of classes 
                        <LI>OUTPUT: class averages 
                    </UL>
                 </UL>
            </UL>
        <LI>3. K-means classification, using 
        <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/man/clkm.html">
        CL KM</A>   -- The primary input is the number of classes 
d276 21
a296 12
        <UL>
            <LI>BATCH FILE: <A HREF="batch/kmeans.spi">kmeans.spi</A> 
            <LI>INPUT PARAMETERS: number of eigenfactors, number of classes 
            <LI>OUTPUT: class averages 
            <LI>It can be informative to look at the individual particles from a class.  
                You can use WEB/JWEB, or <A HREF="batch/montagefromdoc.py">montagefromdoc.py</a>.  
                <BR>Usage:
      <PRE><FONT FACE="Courier New, monospace">./montagefromdoc.py KM/docclass001.dat</FONT></PRE>
                If you have requested too many classes, there will be similar-looking class averages.  
                If you have requested too few, there will be dissimilar particles within a class.  
        </UL>
    </UL>
d301 1
a301 1
<P><B><FONT SIZE="4">Miscellaneous tools:</FONT></B></P>
d303 3
a305 3
<UL>
    <LI>There is a Python utility, 
        <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/spire/guitools/classavg.html">classavg.py</A>, 
d307 1
a307 1
        individual particles.
d309 5
a313 3
    <LI>Binary tree -- It is often not clear where to truncate the dendrogram. 
        In X-Window WEB, one only sees the terminal nodes in the dendrogram averaged.  
        (In JWEB, averaged images in not implemented at the time of this writing, 
d315 22
a336 15
        <UL>
            <LI>BATCH FILE:  <A HREF="batch/binarytree.spi">binarytree.spi</A>
                <UL>
                    <LI>SUBROUTINES: <A HREF="batch/averagenode.spi">averagenode.spi</A>, 
                        <A HREF="batch/update_lut.spi">update_lut.spi</A>
                    <LI>INPUT PARAMETER: tree depth (number of averages will be (2**depth - 1))
                    <LI>INPUTS: dendrogram (from <A HREF="batch/hierarchical.spi">hierarchical.spi</A>),
                        images
                    <LI>OUTPUTS: averages (unlabeled and labeled)
                </UL>
            <LI>Visualize the output using <A HREF="batch/tree.py">tree.py</A>. (Requires 
                <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/python/spipylib/code/Spiderutils.html">Spiderutils.py</A>, 
                part of the <A HREF="http://www.wadsworth.org/spider_doc/spider/docs/spire/install.html">SPIRE</A> installation.)
                <BR>Syntax:
                <PRE>tree.py labeled001.dat 4 2 1024</PRE>
d338 48
a385 36
                <UL>
                    <LI><B>labeled001.dat</B> is an example filename (without a wild card)
                    <LI><I>4 (optional)</I> is the tree depth (default is 6)
                    <LI><I>2 (optional)</I> is the margin width (default is 2)
                    <LI><I>1024 (optional)</I> is the canvas width
                </UL>
            <LI>If SPIRE/Spiderutils.py is not installed, try <A HREF="batch/tree.spi">tree.spi</A>. 
                The output is a SPIDER-format image. However, the file size may be very large. 
                <UL> 
                    <LI>INPUT PARAMETERS: tree depth (number of averages will be (2**depth - 1))
                    <LI>INPUTS: averages from <A HREF="batch/binarytree.spi">binarytree.spi</A>
                    <LI>OUTPUTS: SPIDER-format tree image
                </UL> 

            <CENTER><P><TABLE BORDER="1">
            	<TR>
                        <TD><CENTER><P ALIGN="CENTER">
                            <A HREF="tree3.jpg">
                            <IMG SRC="tree3-small.jpg"><BR>
                            tree.py, <I>depth=4</I></A><BR>
                            <I>(click to enlarge)</I>
                        <TD><CENTER><P ALIGN="CENTER">
                            <A HREF="tree4.jpg">
                            <IMG SRC="tree4-small.jpg"><BR>
                            tree.spi, <I>depth=4</I></A><BR>
                            <I>(click to enlarge)</I>
                            </P></CENTER></TD>
                </TR>
            </TABLE></P></CENTER>
        </UL>
</UL>

<HR>

<p><small>
Source: techs/MSA/index.htm &nbsp;&nbsp;&nbsp; 
d388 2
a389 1
</small></p>
d391 2
a392 2
</BODY>
</HTML>
@
