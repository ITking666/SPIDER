head	1.11;
access;
symbols
	GPL2010:1.11
	pre_GPL2010:1.10
	pre_var_equation:1.10
	pre_fftwrings:1.10
	pre_opfiles:1.10
	src:1.10
	best-code:1.10
	x-named-regs:1.10
	x:1.10
	v13-00:1.10
	pre_GPL:1.9
	prec_CA:1.9
	noindx:1.9
	Bproc:1.9
	oct21:1.8
	last77:1.8;
locks; strict;
comment	@c @;


1.11
date	2010.06.24.13.26.19;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.20.58.07;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.11.10.23.09.41;	author yuchen;	state Exp;
branches;
next	1.8;

1.8
date	97.10.10.17.48.19;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	95.10.03.20.32.39;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	95.02.10.16.21.06;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	94.12.05.21.33.14;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	94.11.30.16.00.18;	author ramani;	state Exp;
branches;
next	1.3;

1.3
date	94.11.29.21.44.05;	author ramani;	state Exp;
branches;
next	1.2;

1.2
date	94.11.28.16.45.52;	author ramani;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.40;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.11
log
@GPL_2010
@
text
@
C++*********************************************************************
C
C MULF3.FOR
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C
C
C--*********************************************************************

         SUBROUTINE MULF3(LUN2,LUN1,A1,A2,B1,B2,NSAM,NROW,NSLICE,SIGT)

        DIMENSION  A1(NSAM),A2(NSAM),B1(NSAM),B2(NSAM)
        COMPLEX  QT
	LOGICAL*1 IFND,IFNS,IFNR,CJG

#ifdef SP_SUN4
        INTEGER INCG
#else
	INTEGER*1  INCG
#endif


        IFNR=MOD(NROW,2).EQ.0
        IFND=MOD(NSAM,2).EQ.0
        IFNS=MOD(NSLICE,2).EQ.0
	IF(IFND)  THEN
	LBD=2
	ELSE
	LBD=1
	ENDIF
	IF(IFNR)  THEN
	LBR=2
	ELSE
	LBR=1
	ENDIF
	IF(IFNS)  THEN
	LBS=2
	ELSE
	LBS=1
	ENDIF
	CJG=SIGT.EQ.-2.0
	IF(CJG)  THEN
	INCG=-1
	ELSE
	INCG=+1
	ENDIF
	LNS=(NSAM-2)/2
C
         DO    K=1,LBS
         DO    J=1,LBR
 	NR1=J+(K-1)*NROW
         CALL  REDLIN(LUN2,A1,NSAM,NR1)
         CALL  REDLIN(LUN1,B1,NSAM,NR1)
	DO    I=1,LBD
          A1(I)=A1(I)*B1(I)
	ENDDO
	IF(CJG)  THEN
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
	ELSE
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
	ENDIF
	IF(.NOT.IFND)  THEN
	QT=CMPLX(A1(NSAM),A1(2))*CMPLX(B1(NSAM),INCG*B1(2))
 	A1(NSAM)=REAL(QT)
        A1(2)=AIMAG(QT)
	ENDIF
        CALL  WRTLIN(LUN2,A1,NSAM,NR1)
	ENDDO
	ENDDO
C
C	DO  3  J=1,LBR
	J=1
C	DO  4  K=3,NSLICE-1,2
3	K=3
4	NR1=J+(K-1)*NROW
	NR2=J+K*NROW
	ASSIGN  501  TO LABA
	GOTO  1955
501	CONTINUE
	K=K+2
	IF(K.LE.NSLICE-1)  GOTO  4
C4       CONTINUE
	IF(.NOT.IFNS)  THEN
	NR1=J+(NSLICE-1)*NROW
	NR2=J+NROW
	ASSIGN  502  TO LABA
	GOTO  1955
502	CONTINUE
	ENDIF
	J=J+1
	IF(J.LE.LBR) GOTO 3
C3	CONTINUE
C In what follows can't use do-loops because indexes are lost
c  after jump to 1955, so explicit do-loops used instead.
C	DO  7  K=1,NSLICE
	K=1
C	DO  8  J=3,NROW-1,2
7	J=3
8	NR1=J+(K-1)*NROW
	NR2=J+1+(K-1)*NROW
	ASSIGN  503  TO LABA
	GOTO  1955
503     CONTINUE
C8       CONTINUE
	J=J+2
	IF(J.LE.NROW-1)  GOTO  8
	IF(.NOT.IFNR)  THEN
	NR1=NROW+(K-1)*NROW
	NR2=2+(K-1)*NROW
	ASSIGN  504  TO LABA
	GOTO  1955
504	CONTINUE
	ENDIF
	K=K+1
	IF(K.LE.NSLICE)  GOTO  7
C7       CONTINUE
	RETURN
C
1955	CONTINUE
         CALL  REDLIN(LUN1,B1,NSAM,NR1)
         CALL  REDLIN(LUN1,B2,NSAM,NR2)
         CALL  REDLIN(LUN2,A1,NSAM,NR1)
         CALL  REDLIN(LUN2,A2,NSAM,NR2)
	DO    I=1,LBD
	QT=CMPLX(A1(I),A2(I))*CMPLX(B1(I),INCG*B2(I))
 	A1(I)=REAL(QT)
        A2(I)=AIMAG(QT)
	ENDDO
	IF(CJG)  THEN
	CALL  MLC(A1(3),B1(3),A1(3),LNS)
        CALL  MLC(A2(3),B2(3),A2(3),LNS)
	ELSE
	CALL  MLS(A1(3),B1(3),A1(3),LNS)
        CALL  MLS(A2(3),B2(3),A2(3),LNS)
	ENDIF
	IF(.NOT.IFND)  THEN
	QT=CMPLX(A1(NSAM),A1(2))*CMPLX(B1(NSAM),INCG*B1(2))
 	A1(NSAM)=REAL(QT)
        A1(2)=AIMAG(QT)
	QT=CMPLX(A2(NSAM),A2(2))*CMPLX(B2(NSAM),INCG*B2(2))
 	A2(NSAM)=REAL(QT)
        A2(2)=AIMAG(QT)
	ENDIF
	CALL  WRTLIN(LUN2,A2,NSAM,NR2)
	CALL  WRTLIN(LUN2,A1,NSAM,NR1)
	GOTO  LABA
C
	END
@


1.10
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.9
log
@a
@
text
@d2 1
a2 1
C++************************************************************************
d6 25
a30 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
C **************************************************************************
d34 1
a34 1
C--************************************************************************
@


1.8
log
@*** empty log message ***
@
text
@d31 1
a31 1
CNO_SAVE
@


1.7
log
@altered incg for sun
@
text
@d59 2
a60 2
         DO  1  K=1,LBS
         DO  1  J=1,LBR
d64 3
a66 2
	DO  2  I=1,LBD
2         A1(I)=A1(I)*B1(I)
d77 3
a79 1
1       CALL  WRTLIN(LUN2,A1,NSAM,NR1)
d134 1
a134 1
	DO  5  I=1,LBD
d137 2
a138 1
5       A2(I)=AIMAG(QT)
@


1.6
log
@nosave
@
text
@d1 1
d4 1
a4 1
C $$ MULF3.FOR
d19 1
a19 3
C
C $$ MULF3.FOR
C
d21 3
a23 2
         DIMENSION  A1(NSAM),A2(NSAM),B1(NSAM),B2(NSAM)
         COMPLEX  QT
d25 4
d30 1
d32 1
a32 1
C
@


1.5
log
@mixed radix version.
@
text
@d26 1
d96 1
a96 1
c  after jump to 1955, so explicit do-llops used instead.
@


1.4
log
@*** empty log message ***
@
text
@a20 1

d24 2
a25 1
	LOGICAL IFND,IFNS,IFNR
a26 1
C
d28 1
a28 1
        IFND=MOD(NsaM,2).EQ.0
d30 39
a68 168
C
C***********************************************************************
C************nsam and nrow are even**************************************
C***********************************************************************
c
c
	IF(IFND)THEN
         LNS=(NSAM-2)/2
	IF(IFNR)THEN
C
         IF(SIGT.EQ.-2.0)  THEN
C
C
         DO  2  I=1,NSLICE
         DO  2  J=3,NROW,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+1+(I-1)*NROW)
         DO  21  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
21       A2(K)=AIMAG(QT)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
         CALL  MLC(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
2        CALL  WRTLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
C
c**********************nslice is even************************************
c
	if(ifns)then
c
         DO  1  I=1,2
         DO  1  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         A1(2)=A1(2)*B1(2)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
1        CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
         DO  3  I=3,NSLICE,2
         DO  3  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         DO  31  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
31       A2(K)=AIMAG(QT)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
         CALL  MLC(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
3        CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
C
c
c*******************nslice is odd****************************************
c
	else
c
        I=1
         DO  11  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         A1(2)=A1(2)*B1(2)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
11        CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
C
c
c
         DO  32  I=2,NSLICE,2
         DO  32  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         DO  33  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
33       A2(K)=AIMAG(QT)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
         CALL  MLC(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
32        CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
C
	endif
c
c
         ELSE
C
         DO  102  I=1,NSLICE
         DO  102  J=3,NROW,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+1+(I-1)*NROW)
         DO  121  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
121      A2(K)=AIMAG(QT)
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
         CALL  MLS(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
102      CALL  WRTLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
C
c
c**********************nslice is even************************************
c
	if(ifns)then
c
         DO  101  I=1,2
         DO  101  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         A1(2)=A1(2)*B1(2)
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
101      CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
         DO  103  I=3,NSLICE,2
         DO  103  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         DO  131  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
131      A2(K)=AIMAG(QT)
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
         CALL  MLS(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
103      CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)

c
c
	else
c
c****************nslice is odd*******************************************
c
         I=1
         DO  1011  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         A1(2)=A1(2)*B1(2)
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
1011      CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
         DO  1031  I=2,NSLICE,2
         DO  1031  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         DO  1311  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
1311      A2(K)=AIMAG(QT)
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
         CALL  MLS(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
1031      CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
c
	endif
c
d70 1
a70 111
c
c
c
	else
c
c
c*************************************************************************
c****************nsam is even and nrow is odd*****************************
c*************************************************************************
C
C
         IF(SIGT.EQ.-2.0)  THEN
c
c
C
         DO  23  I=1,NSLICE
         DO  23  J=2,NROW,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+1+(I-1)*NROW)
         DO  22  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
22       A2(K)=AIMAG(QT)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
         CALL  MLC(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
23        CALL  WRTLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
C
c
c*******************nslice is even******************************
c
	if (ifns)then
	 J=1
         DO  14  I=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         A1(2)=A1(2)*B1(2)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
14        CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
C
	 J=1
         DO  34  I=3,NSLICE,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         DO  1312  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
1312       A2(K)=AIMAG(QT)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
         CALL  MLC(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
34        CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
C
c
	else
c
c********************nslice is odd**************************************
c
c
	 J=1
         I=1
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         A1(2)=A1(2)*B1(2)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
C
	 J=1
         DO  334  I=2,NSLICE,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         DO  331  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
331       A2(K)=AIMAG(QT)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
         CALL  MLC(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
334        CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
C
c
	endif
c
c
c
         ELSE
C
c
C
         DO  25  I=1,NSLICE
         DO  25  J=2,NROW,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+1+(I-1)*NROW)
         DO  26  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
26      A2(K)=AIMAG(QT)
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
         CALL  MLS(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
25      CALL  WRTLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
d72 1
a72 43
c*********************nslice is even**********************************
c
	if (ifns)then
c
	J=1
         DO  28  I=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         A1(2)=A1(2)*B1(2)
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
28      CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
	J=1
         DO  29  I=3,NSLICE,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         DO  36  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
36      A2(K)=AIMAG(QT)
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
         CALL  MLS(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
29      CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
c
	else
c
c*************************nslice is odd*******************************
c
c
c
	J=1
        I=1
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         A1(2)=A1(2)*B1(2)
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
d74 73
a146 75
         DO  38  I=2,NSLICE,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         DO  39  K=1,2
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
39      A2(K)=AIMAG(QT)
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
         CALL  MLS(A2(3),B2(3),A2(3),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
38      CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
c
	endif
c
	ENDIF
	ENDIF
c
c
	else
c
c
         LNS=(NSAM-1)/2
c
c
	if(ifnr)then
c***********************************************************************
c******************nsam is odd and nrow is even*************************
c************************************************************************
c
c
         IF(SIGT.EQ.-2.0)  THEN
C
         DO  42  I=1,NSLICE
         DO  42  J=3,NROW,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+1+(I-1)*NROW)
         QT=CMPLX(A1(1),A2(1))*CMPLX(B1(1),-B2(1))
         A1(1)=REAL(QT)
         A2(1)=AIMAG(QT)
         CALL  MLC(A1(2),B1(2),A1(2),LNS)
         CALL  MLC(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
42        CALL  WRTLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
C
c**********************nslice is even**********************************
c
c
	if (ifns)then
c
c
         DO  41  I=1,2
         DO  41  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         CALL  MLC(A1(2),B1(2),A1(2),LNS)
41        CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
         DO  43  I=3,NSLICE,2
         DO  43  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         QT=CMPLX(A1(1),A2(1))*CMPLX(B1(1),-B2(1))
         A1(1)=REAL(QT)
         A2(1)=AIMAG(QT)
         CALL  MLC(A1(2),B1(2),A1(2),LNS)
         CALL  MLC(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
43        CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
a147 287
c
	else
c
c**************************nslice is odd*******************************
c
c
c
         I=1
         DO  51  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         CALL  MLC(A1(2),B1(2),A1(2),LNS)
51        CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
         DO  53  I=2,NSLICE,2
         DO  53  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
         CALL  MLC(A1(2),B1(2),A1(2),LNS)
         CALL  MLC(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
53        CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
C
	endif
c
c
c
         ELSE
C
C
         DO  55  I=1,NSLICE
         DO  55  J=3,NROW,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+1+(I-1)*NROW)
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
         CALL  MLS(A1(2),B1(2),A1(2),LNS)
         CALL  MLS(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
55      CALL  WRTLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
C
c
c
c************************nslice is even***************************
c
	if(ifns)then
c
         DO  57  I=1,2
         DO  57  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         CALL  MLS(A1(2),B1(2),A1(2),LNS)
57      CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
         DO  58  I=3,NSLICE,2
         DO  58  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
         CALL  MLS(A1(2),B1(2),A1(2),LNS)
         CALL  MLS(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
58      CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
c
c
	else
c
c
c*************************nslice is odd**********************************
c
c
         I=1
         DO  59  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         CALL  MLS(A1(2),B1(2),A1(2),LNS)
59      CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
         DO  60  I=2,NSLICE,2
         DO  60  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
         CALL  MLS(A1(2),B1(2),A1(2),LNS)
         CALL  MLS(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
60      CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
c
c
	endif
	ENDIF
c
c
	else
c
c*************************************************************************
c*********************nsam and nrow are both odd*************************
c************************************************************************
c
c
c
         IF(SIGT.EQ.-2.0)  THEN
C
         DO  62  I=1,NSLICE
         DO  62  J=2,NROW,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+1+(I-1)*NROW)
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
         CALL  MLC(A1(2),B1(2),A1(2),LNS)
         CALL  MLC(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
62        CALL  WRTLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
C
c**********************nslice is even**********************************
c
c
	if (ifns)then
c
c
         J=1
         DO  61  I=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         CALL  MLC(A1(2),B1(2),A1(2),LNS)
61        CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
         J=1
         DO  63  I=3,NSLICE,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
         CALL  MLC(A1(2),B1(2),A1(2),LNS)
         CALL  MLC(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
63        CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
C
c
	else
c
c**************************nslice is odd*******************************
c
c
c
         I=1
         J=1
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         CALL  MLC(A1(2),B1(2),A1(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
         J=1
         DO  64  I=2,NSLICE,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
         CALL  MLC(A1(2),B1(2),A1(2),LNS)
         CALL  MLC(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
64        CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
C
	endif
c
c
c
         ELSE
C
C
         DO  65  I=1,NSLICE
         DO  65  J=2,NROW,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+1+(I-1)*NROW)
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
         CALL  MLS(A1(2),B1(2),A1(2),LNS)
         CALL  MLS(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
65      CALL  WRTLIN(LUN2,A2,NSAM,J+1+(I-1)*NROW)
C
c
c
c************************nslice is even***************************
c
	if(ifns)then
c
	j=1
         DO 66  I=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         CALL  MLS(A1(2),B1(2),A1(2),LNS)
66      CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
	 j=1
         DO  67  I=3,NSLICE,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
         CALL  MLS(A1(2),B1(2),A1(2),LNS)
         CALL  MLS(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
67      CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
c
c
	else
c
c
c*************************nslice is odd**********************************
c
c
         I=1
         J=1
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         CALL  MLS(A1(2),B1(2),A1(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
c
         J=1
         DO  78  I=2,NSLICE,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN2,A2,NSAM,J+I*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
         CALL  MLS(A1(2),B1(2),A1(2),LNS)
         CALL  MLS(A2(2),B2(2),A2(2),LNS)
         CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
78      CALL  WRTLIN(LUN2,A2,NSAM,J+I*NROW)
c
c
	endif
	ENDIF
c
	ENDIF
	ENDIF
@


1.3
log
@*** empty log message ***
@
text
@a117 1
	print*,'nslice odd done'
a386 1
	print*,lns
@


1.2
log
@mixed radices accomodated
@
text
@d92 1
a92 2
c
         I=1
d118 1
d388 1
d398 3
a400 4
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
d426 3
a428 4
         K=1
         QT=CMPLX(A1(K),A2(K))*CMPLX(B1(K),-B2(K))
         A1(K)=REAL(QT)
         A2(K)=AIMAG(QT)
@


1.1
log
@Initial revision
@
text
@d21 1
d25 1
d27 11
d39 1
a41 11
         DO  1  I=1,2
         DO  1  J=1,2
         CALL  REDLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1)=A1(1)*B1(1)
         A1(2)=A1(2)*B1(2)
         CALL  MLC(A1(3),B1(3),A1(3),LNS)
c         DO  11  K=1,NSAM
c         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
c11       A1(K)=A1(K)*(-1)**(IX+IY+IZ)
1        CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
d43 1
a55 5
c         DO  22  K=1,NSAM
c         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
c         A1(K)=A1(K)*(-1)**(IX+IY+IZ)
c         CALL  FINDFRQ(K,J+1,I,NSAM,NROW,NSLICE,IX,IY,IZ)
c22       A2(K)=A2(K)*(-1)**(IX+IY+IZ)
d59 13
a83 5
c         DO  32  K=1,NSAM
c         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
c         A1(K)=A1(K)*(-1)**(IX+IY+IZ)
c         CALL  FINDFRQ(K,J,I+1,NSAM,NROW,NSLICE,IX,IY,IZ)
c32       A2(K)=A2(K)*(-1)**(IX+IY+IZ)
d87 8
a94 4
         ELSE
C
         DO  101  I=1,2
         DO  101  J=1,2
d99 2
a100 5
         CALL  MLS(A1(3),B1(3),A1(3),LNS)
c         DO  111  K=1,NSAM
c         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
c111      A1(K)=A1(K)*(-1)**(IX+IY+IZ)
101      CALL  WRTLIN(LUN2,A1,NSAM,J+(I-1)*NROW)
d102 22
a135 5
c         DO  122  K=1,NSAM
c         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
c         A1(K)=A1(K)*(-1)**(IX+IY+IZ)
c         CALL  FINDFRQ(K,J+1,I,NSAM,NROW,NSLICE,IX,IY,IZ)
c122      A2(K)=A2(K)*(-1)**(IX+IY+IZ)
d139 14
a164 5
c         DO  132  K=1,NSAM
c         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
c         A1(K)=A1(K)*(-1)**(IX+IY+IZ)
c         CALL  FINDFRQ(K,J,I+1,NSAM,NROW,NSLICE,IX,IY,IZ)
c132      A2(K)=A2(K)*(-1)**(IX+IY+IZ)
d167 556
a722 2
         ENDIF
         END
@
