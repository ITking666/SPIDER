head	1.12;
access;
symbols
	pre_mrcs:1.12
	healthdept_2018:1.12
	pre_getangas:1.11
	GPL2010:1.11
	pre_GPL2010:1.10
	pre_var_equation:1.10
	pre_fftwrings:1.10
	pre_opfiles:1.10
	src:1.10
	best-code:1.10
	x-named-regs:1.10
	x:1.10
	v13-00:1.10
	pre_GPL:1.8
	prec_CA:1.8
	noindx:1.8
	Bproc:1.8
	oct21:1.7
	last77:1.7;
locks; strict;
comment	@c @;


1.12
date	2018.10.03.14.34.09;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.24.13.26.06;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.20.40.30;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.18.30.53;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.11.10.23.09.36;	author yuchen;	state Exp;
branches;
next	1.7;

1.7
date	97.10.10.17.47.20;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	96.01.16.15.56.53;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	94.12.15.20.48.25;	author ramani;	state Exp;
branches;
next	1.4;

1.4
date	94.12.15.20.17.56;	author ramani;	state Exp;
branches;
next	1.3;

1.3
date	94.12.12.21.13.04;	author ramani;	state Exp;
branches;
next	1.2;

1.2
date	94.12.08.19.28.56;	author ramani;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.49.59;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.12
log
@email_health_dept
@
text
@C++*********************************************************************
C
C $$ MALFI3.FOR
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************
C
C $$ MALFI3.FOR
C
         SUBROUTINE MALFI3(A1,NSAM,NROW,NSLICE)
C A1*CONJG(A1) = |A1|^2
         DIMENSION  A1(NSAM,NROW,NSLICE)
        LOGICAL IFNS,IFNR,IFND
         COMPLEX  QT,FQ

C
	PI=4.0*ATAN(1.0)
        IFNR=MOD(NROW,2).EQ.0
        IFND=MOD(NSAM,2).EQ.0
        IFNS=MOD(NSLICE,2).EQ.0
        IF(IFND)  THEN
        LBD=2
        ELSE
        LBD=1
        ENDIF
        IF(IFNR)  THEN
        LBR=2
        ELSE
        LBR=1
        ENDIF
        IF(IFNS)  THEN
        LBS=2
        ELSE
        LBS=1
        ENDIF
        ND2=NSAM/2
        NR2=NROW/2
        NS2=NSLICE/2
C
         DO    I=1,LBS
	IZ=(I-1)*NS2
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
         DO    J=1,LBR
	IY=(J-1)*NR2
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
         DO    K=1,LBD
	IX=(K-1)*ND2
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
C	FQ=CMPLX(1.0,0.0)
	QT=CMPLX(A1(K,J,I),0.0)*CMPLX(A1(K,J,I),0.0)*FQ
	A1(K,J,I)=REAL(QT)
	ENDDO
	ENDDO
	ENDDO
C
         DO    I=1,NSLICE
	IZ=(I-1)
	IF(IZ.GT.NS2)IZ=IZ-NSLICE
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
         DO    K=1,LBD
	IX=(K-1)*ND2
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
         DO  J=3,NROW-1,2
	IY=(J-1)/2
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
C	FQ=CMPLX(1.0,0.0)
	QT=CMPLX(A1(K,J,I),A1(K,J+1,I))*
     &  CMPLX(A1(K,J,I),-A1(K,J+1,I))*FQ
         A1(K,J,I)=REAL(QT)
         A1(K,J+1,I)=AIMAG(QT)
	 ENDDO
	IF(.NOT.IFNR)THEN
	IY=NR2
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
C	FQ=CMPLX(1.0,0.0)
	QT=CMPLX(A1(K,NROW,I),A1(K,2,I))*
     &  CMPLX(A1(K,NROW,I),-A1(K,2,I))*FQ
         A1(K,NROW,I)=REAL(QT)
         A1(K,2,I)=AIMAG(QT)
	ENDIF
	ENDDO
	ENDDO
C
         DO    J=1,LBR
	IY=(J-1)*NR2
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
         DO    K=1,LBD
	IX=(K-1)*ND2
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
         DO    I=3,NSLICE-1,2
	IZ=(I-1)/2
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
C	FQ=CMPLX(1.0,0.0)
        QT=CMPLX(A1(K,J,I),A1(K,J,I+1))*
     &  CMPLX(A1(K,J,I),-A1(K,J,I+1))*FQ
	A1(K,J,I)=REAL(QT)
        A1(K,J,I+1)=AIMAG(QT)
	ENDDO
	IF(.NOT.IFNS)THEN
	IZ=NS2
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
C	FQ=CMPLX(1.0,0.0)
        QT=CMPLX(A1(K,J,NSLICE),A1(K,J,2))*
     &  CMPLX(A1(K,J,NSLICE),-A1(K,J,2))*FQ
         A1(K,J,NSLICE)=REAL(QT)
         A1(K,J,2)=AIMAG(QT)
	ENDIF
	ENDDO	
	ENDDO
C
         DO    I=1,NSLICE
	IZ=(I-1)
	IF(IZ.GT.NS2)IZ=IZ-NSLICE
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
         DO    J=1,NROW
	IY=(J-1)
	IF(IY.GT.NR2)IY=IY-NROW
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
         DO    K=3,NSAM-1,2
	IX=(K-1)/2
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
C	FQ=CMPLX(1.0,0.0)
	QT=CMPLX(A1(K,J,I),A1(K+1,J,I))*
     &  CMPLX(A1(K,J,I),-A1(K+1,J,I))*FQ
         A1(K,J,I)=REAL(QT)
        A1(K+1,J,I)=AIMAG(QT)
	ENDDO
	IF(.NOT.IFND)THEN
	IX=ND2
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
C	FQ=CMPLX(1.0,0.0)
	QT=CMPLX(A1(NSAM,J,I),A1(2,J,I))*
     &  CMPLX(A1(NSAM,J,I),-A1(2,J,I))*FQ
        A1(NSAM,J,I)=REAL(QT)
         A1(2,J,I)=AIMAG(QT)
	ENDIF
	ENDDO
	ENDDO
         END
@


1.11
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.10
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.9
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
a29 1
C **************************************************************************
a34 1
C--************************************************************************
@


1.8
log
@a
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d46 1
@


1.7
log
@*** empty log message ***
@
text
@d27 1
a27 1
CNO_SAVE
@


1.6
log
@nosave.
@
text
@d52 1
a52 1
         DO  1  I=1,LBS
d55 1
a55 1
         DO  1  J=1,LBR
d58 1
a58 1
         DO  1  K=1,LBD
d64 4
a67 1
1	A1(K,J,I)=REAL(QT)
d69 1
a69 1
         DO  2  I=1,NSLICE
d73 1
a73 1
         DO  2  K=1,LBD
d76 1
a76 1
         DO  21  J=3,NROW-1,2
d84 2
a85 1
21         A1(K,J+1,I)=AIMAG(QT)
d96 2
a97 1
2	CONTINUE
d99 1
a99 1
         DO  3  J=1,LBR
d102 1
a102 1
         DO  3  K=1,LBD
d105 1
a105 1
         DO  31  I=3,NSLICE-1,2
d113 2
a114 1
31      A1(K,J,I+1)=AIMAG(QT)
d125 2
a126 1
3	CONTINUE
d128 1
a128 1
         DO  4  I=1,NSLICE
d132 1
a132 1
         DO  4  J=1,NROW
d136 1
a136 1
         DO  41  K=3,NSAM-1,2
d144 2
a145 1
41        A1(K+1,J,I)=AIMAG(QT)
d156 2
a157 1
4	CONTINUE
@


1.5
log
@*** empty log message ***
@
text
@d27 1
@


1.4
log
@autocorrelation works for mixed radix 3D.
@
text
@d26 1
a26 1
         COMPLEX  QT,ifq
d28 1
a28 1
	pi=4.0*atan(1.0)
d53 1
a53 1
	zz=2.0*pi*float(iz)*float(ns2)/float(nslice)
d56 1
a56 1
	yy=2.0*pi*float(iy)*float(nr2)/float(nrow)
d59 5
a63 6
c	IFQ=(-1)**(IX+IY+IZ)
	xx=2.0*pi*float(ix)*float(nd2)/float(nsam)
	ifq=cmplx(cos(xx+yy+zz),sin(xx+yy+zz))
c	ifq=cmplx(1.0,0.0)
	qt=cmplx(a1(k,j,i),0.0)*cmplx(a1(k,j,i),0.0)*ifq
1	a1(k,j,i)=real(qt)
d67 2
a68 2
	if(iz.gt.ns2)iz=iz-nslice
	zz=2.0*pi*float(iz)*float(ns2)/float(nslice)
d71 1
a71 1
	xx=2.0*pi*float(ix)*float(nd2)/float(nsam)
d74 7
a80 8
c	IFQ=(-1)**(IX+IY+IZ)
	yy=2.0*pi*float(iy)*float(nr2)/float(nrow)
	ifq=cmplx(cos(xx+yy+zz),sin(xx+yy+zz))
c	ifq=cmplx(1.0,0.0)
	qt=cmplx(a1(k,j,i),A1(K,J+1,I))*
     &  cmplx(a1(k,j,i),-A1(K,J+1,I))*ifq
         A1(K,J,I)=real(qt)
21         A1(K,J+1,I)=aimag(qt)
d83 7
a89 8
c	IFQ=(-1)**(IX+IY+IZ)
	yy=2.0*pi*float(iy)*float(nr2)/float(nrow)
	ifq=cmplx(cos(xx+yy+zz),sin(xx+yy+zz))
c	ifq=cmplx(1.0,0.0)
	qt=cmplx(a1(k,nrow,i),A1(K,2,I))*
     &  cmplx(a1(k,nrow,i),-A1(K,2,I))*ifq
         A1(K,NROW,I)=real(qt)
         A1(K,2,I)=aimag(qt)
d95 1
a95 1
	yy=2.0*pi*float(iy)*float(nr2)/float(nrow)
d98 1
a98 1
	xx=2.0*pi*float(ix)*float(nd2)/float(nsam)
d100 8
a107 9
	IZ=(i-1)/2
c	IFQ=(-1)**(IX+IY+IZ)
	zz=2.0*pi*float(iz)*float(ns2)/float(nslice)
	ifq=cmplx(cos(xx+yy+zz),sin(xx+yy+zz))
c	ifq=cmplx(1.0,0.0)
        qt=cmplx(A1(K,J,I),A1(K,J,I+1))*
     &  cmplx(A1(K,J,I),-A1(K,J,I+1))*IFQ
	A1(K,J,I)=real(qt)
31      A1(K,J,I+1)=aimag(qt)
d110 7
a116 8
c	IFQ=(-1)**(IX+IY+IZ)
	zz=2.0*pi*float(iz)*float(ns2)/float(nslice)
	ifq=cmplx(cos(xx+yy+zz),sin(xx+yy+zz))
c	ifq=cmplx(1.0,0.0)
        qt=cmplx(A1(K,J,nslice),A1(K,J,2))*
     &  cmplx(A1(K,J,nslice),-A1(K,J,2))*IFQ
         A1(K,J,NSLICE)=real(qt)
         A1(K,J,2)=aimag(qt)
d122 2
a123 2
	if(iz.gt.ns2)iz=iz-nslice
	zz=2.0*pi*float(iz)*float(ns2)/float(nslice)
d126 2
a127 2
	if(iy.gt.nr2)iy=iy-nrow
	yy=2.0*pi*float(iy)*float(nr2)/float(nrow)
d130 7
a136 8
c	IFQ=(-1)**(IX+IY+IZ)
	xx=2.0*pi*float(ix)*float(nd2)/float(nsam)
	ifq=cmplx(cos(xx+yy+zz),sin(xx+yy+zz))
c	ifq=cmplx(1.0,0.0)
	qt=cmplx(a1(k,j,i),a1(k+1,j,i))*
     &  cmplx(a1(k,j,i),-a1(k+1,j,i))*ifq
         A1(K,J,I)=real(qt)
41        A1(K+1,J,I)=aimag(qt)
d139 7
a145 8
c	IFQ=(-1)**(IX+IY+IZ)
	xx=2.0*pi*float(ix)*float(nd2)/float(nsam)
	ifq=cmplx(cos(xx+yy+zz),sin(xx+yy+zz))
c	ifq=cmplx(1.0,0.0)
	qt=cmplx(a1(nsam,j,i),a1(2,j,i))*
     &  cmplx(a1(nsam,j,i),-a1(2,j,i))*ifq
        A1(NSAM,J,I)=real(qt)
         A1(2,J,I)=aimag(qt)
@


1.3
log
@*** empty log message ***
@
text
@d26 1
a26 1
         COMPLEX  QT
d28 1
d53 1
d56 1
d60 5
a64 2
	ifq=1
1         A1(K,J,I)=A1(K,J,I)*A1(K,J,I)*IFQ
d69 1
d72 1
d76 7
a82 3
	ifq=1
         A1(K,J,I)=(A1(K,J,I)**2+A1(K,J+1,I)**2)*IFQ
21         A1(K,J+1,I)=0.0
d86 7
a92 3
	ifq=1
         A1(K,NROW,I)=(A1(K,NROW,I)**2+A1(K,2,I)**2)*IFQ
         A1(K,2,I)=0.0
d98 1
d101 1
d105 7
a111 3
	ifq=1
        A1(K,J,I)=(A1(K,J,I)**2+A1(K,J,I+1)**2)*IFQ
31         A1(K,J,I+1)=0.0
d115 7
a121 3
	ifq=1
         A1(K,J,NSLICE)=(A1(K,J,NSLICE)**2+A1(K,J,2)**2)*IFQ
         A1(K,J,2)=0.0
d128 1
d132 1
d136 7
a142 3
	ifq=1
         A1(K,J,I)=(A1(K,J,I)**2+A1(K+1,J,I)**2)*IFQ
41        A1(K+1,J,I)=0.0
d146 7
a152 3
	ifq=1
        A1(NSAM,J,I)=(A1(NSAM,J,I)**2+A1(2,J,I)**2)*IFQ
         A1(2,J,I)=0.0
@


1.2
log
@*** empty log message ***
@
text
@d56 2
a57 1
	IFQ=(-1)**(IX+IY+IZ)
d62 1
a62 1
c	if(iz.gt.ns2)iz=iz-nslice
d66 3
a68 2
	IY=J/2
	IFQ=(-1)**(IX+IY+IZ)
d73 2
a74 1
	IFQ=(-1)**(IX+IY+IZ)
d85 4
a88 3
	IZ=I/2
	IFQ=(-1)**(IX+IY+IZ)
         A1(K,J,I)=(A1(K,J,I)**2+A1(K,J,I+1)**2)*IFQ
d92 2
a93 1
	IFQ=(-1)**(IX+IY+IZ)
d101 1
a101 1
c	if(iz.gt.ns2)iz=iz-nslice
d104 1
a104 1
c	if(iy.gt.nr2)iy=iy-nrow
d106 3
a108 2
	IX=K/2
	IFQ=(-1)**(IX+IY+IZ)
d113 3
a115 2
	IFQ=(-1)**(IX+IY+IZ)
         A1(NSAM,J,I)=(A1(NSAM,J,I)**2+A1(2,J,I)**2)*IFQ
@


1.1
log
@Initial revision
@
text
@d25 1
d28 21
a48 6
         DO  1  I=1,2
         DO  1  J=1,2
         DO  1  K=1,2
         A1(K,J,I)=A1(K,J,I)*A1(K,J,I)
         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
1        A1(K,J,I)=A1(K,J,I)*(-1)**(IX+IY+IZ)
d50 9
d60 16
a75 6
         DO  2  J=3,NROW,2
         DO  2  K=1,2
         A1(K,J,I)=A1(K,J,I)**2+A1(K,J+1,I)**2
         A1(K,J+1,I)=0.0
         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
2        A1(K,J,I)=A1(K,J,I)*(-1)**(IX+IY+IZ)
d77 16
a92 7
         DO  3  I=3,NSLICE,2
         DO  3  J=1,2
         DO  3  K=1,2
         A1(K,J,I)=A1(K,J,I)**2+A1(K,J,I+1)**2
         A1(K,J,I+1)=0.0
         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
3        A1(K,J,I)=A1(K,J,I)*(-1)**(IX+IY+IZ)
d95 2
d98 14
a111 5
         DO  4  K=3,NSAM,2
         A1(K,J,I)=A1(K,J,I)**2+A1(K+1,J,I)**2
         A1(K+1,J,I)=0.0
         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
4        A1(K,J,I)=A1(K,J,I)*(-1)**(IX+IY+IZ)
@
