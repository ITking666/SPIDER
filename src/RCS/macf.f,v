head	1.18;
access;
symbols
	pre_mrcs:1.18
	healthdept_2018:1.18
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.13
	prec_CA:1.13
	noindx:1.12
	Bproc:1.9
	oct21:1.7
	last77:1.7;
locks; strict;
comment	@c @;


1.18
date	2018.10.03.14.34.09;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2014.07.30.13.54.25;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.26.06;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.19.59.38;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.17.55.41;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.20.20.13.28;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.11.14.07.46;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.10.08.21.13.21;	author pawel;	state Exp;
branches;
next	1.10;

1.10
date	2000.09.18.22.24.46;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.11.05.16.46.56;	author bimal;	state Exp;
branches;
next	1.8;

1.8
date	99.11.05.14.51.06;	author bimal;	state Exp;
branches;
next	1.7;

1.7
date	98.02.18.21.59.34;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.11.06.15.15.40;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	96.08.29.14.19.43;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.08.29.14.12.36;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.01.16.15.52.07;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.06.54;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.49.57;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.18
log
@email_health_dept
@
text
@C++*********************************************************************
C
C MACF.F
C                   MAXNAM                         JUL 14 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  MACF(MODE)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE MACF(MODE)
        
        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        REAL, ALLOCATABLE     :: X(:,:)
        CHARACTER(LEN=MAXNAM) :: FILNAM
        CHARACTER(LEN=1)      :: NULL,ASK,MODE

        DATA  LUN1,LUN2/8,9/

        NULL = CHAR(0)

C       MASKED AUTOCORELATION FUNCTION
        MAXIM = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     &             MAXIM,'INPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .EQ. -1) RETURN

        IF (ITYPE .NE. 1) GOTO 145

        CALL FILERD(FILNAM,NLETO,NULL,'OUTPUT',IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 5
        
        CALL RDPRMI(IRA,IDUM,NOT_USED,'MASK RADIUS')
        IF (IRA.LT.2.OR.IRA.GT.NSAM/2.OR.IRA.GT.NROW/2)  THEN
           CALL  ERRT(31,'MACF  ',NE)
           GOTO  5
        ENDIF

	LSD=2*NSAM+2-MOD(2*NSAM,2)

        KB=1+2*LSD*NROW
C
        CALL  RDPRMC(ASK,NCHAR,.TRUE.,
     &            '(F)ULL OR (H)ALF OUTPUT (F/H)',NULL,IRTFLG)
       
        IF (ASK .EQ. 'H')  THEN
 	   MAXIM = 0
	   CALL OPFILEC(LUN1,.FALSE.,FILNAM,LUN2,'U',ITYPE,
     &                NSAM,NROW,1,MAXIM, ' ',.FALSE.,NF)
           GOTO (130,951),NF
     
        ELSEIF(ASK.EQ.'F')  THEN

	   MAXIM = 0
	   CALL OPFILEC(LUN1,.FALSE.,FILNAM,LUN2,'U',ITYPE,
     &          2*NSAM,2*NROW,1, MAXIM,' ',.FALSE.,NF)

           GOTO (130,951),NF
       ELSE
          CALL  ERRT(31,'MACF  ',NE)
          GOTO  5
       ENDIF

951 	ALLOCATE (X(LSD,2*NROW), STAT=IRTFLG)
        IF (IRTFLG.NE.0) THEN 
           CALL ERRT(46,'AC MS, X',IER)
           GOTO 5
        ENDIF

        NSAM1 = LSD
	NROW1 = 2*NROW
       
        CALL READV(LUN1,X,NSAM1,NROW1,NSAM,NROW,NSLICE)


        CALL  MACF_P(NSAM,NROW,X,LSD,IRA,ASK,MODE)
     
        NS2=NSAM/2+1
        NR2=NROW/2+1    
 
        NSAM1 = LSD
	NROW1 = 2*NROW

   	IF (ASK .EQ. 'F')  THEN
           CALL WRITEV(LUN2,X,NSAM1,NROW1,2*NSAM,2*NROW,NSLICE)
        ELSE
           DO J=NR2,NROW+NR2-1
              CALL  WRTLIN(LUN2,X(NS2,J),NSAM,J-NR2+1)
	   ENDDO 
        ENDIF

        DEALLOCATE (X)
5       CLOSE(LUN1)
        CLOSE(LUN2)
        RETURN


130     CALL ERRT(4,'MACF  ',NE)
        GOTO 5

145     CALL ERRT(2,'MACF  ',NE)
        GOTO 5
        END
@


1.17
log
@LEN=MAXNAM) :: FILNAM
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.16
log
@GPL_2010
@
text
@d4 1
d10 1
a10 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d28 1
a28 1
C IMAGE_PROCESSING_ROUTINE
d36 1
a36 1
        REAL, ALLOCATABLE, DIMENSION(:,:) :: X
d38 3
a40 2
        CHARACTER *81 FILNAM
        CHARACTER *1  NULL,ASK,MODE
@


1.15
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
a29 1
C **************************************************************************
a34 1
C--************************************************************************
@


1.13
log
@opfilec
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d46 1
@


1.12
log
@nloop,iloop_removed
@
text
@d3 1
a3 1
C $$ MACF.FOR
a17 1
C
d19 1
a19 3
C
C $$ MACF.FOR
C
d30 1
a30 1
        NULL=CHAR(0)
d32 8
a39 7
C     MASKED AUTOCORELATION FUNCTION
        IDUM = 0
	
        CALL OPFILE(.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     &             IDUM,'INPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 130
        IF(ITYPE.NE.1) GOTO 145
d44 1
a44 1
        IF(IRA.LT.2.OR.IRA.GT.NSAM/2.OR.IRA.GT.NROW/2)  THEN
d46 1
a46 1
            GOTO  5
d48 1
d54 1
a54 1
     &   '(F)ULL OR (H)ALF OUTPUT (F/H)',NULL,IRTFLG)
d56 5
a60 7
        IF(ASK.EQ.'H')  THEN


 	  IDUM = 0
	  CALL OPFILE(.FALSE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,1,IDUM,
     &    'OUTPUT',.FALSE.,NF)
          GOTO (130,951),NF
a62 2
C      
          
d64 3
a66 3
	   IDUM = 0
	   CALL OPFILE(.FALSE.,FILNAM,LUN2,'U',ITYPE,2*NSAM,2*NROW,1,
     &     IDUM,'OUTPUT',.FALSE.,NF)
a94 1
           
a95 1
       
d97 1
a97 2
  
          DO    J=NR2,NROW+NR2-1
d99 1
a99 2
	  ENDDO 

d106 1
@


1.11
log
@corrected jump to 951
@
text
@d45 1
a45 1
        CALL RDPRMI(IRA,IDUM,NLOOP,ILOOP,'MASK RADIUS')
@


1.10
log
@*** empty log message ***
@
text
@d79 1
a79 1
 	ALLOCATE (X(LSD,2*NROW), STAT=IRTFLG)
d91 1
a91 1
951     CALL  MACF_P(NSAM,NROW,X,LSD,IRA,ASK,MODE)
@


1.9
log
@*** empty log message ***
@
text
@d23 1
a23 1
        SUBROUTINE MACF
d29 1
a29 1
        CHARACTER *1  NULL,ASK
d91 1
a91 1
951     CALL  MACF_P(NSAM,NROW,X,LSD,IRA,ASK)
@


1.8
log
@adapted for dynamical memory allocation
@
text
@d25 1
a25 1
        INCLUDE '/net/ithaca/usr1/spider/src/CMBLOCK.INC'
@


1.7
log
@new fft
@
text
@d15 1
d17 1
d23 9
a31 6
         SUBROUTINE MACF(MAXMEM)
         INCLUDE 'CMBLOCK.INC'
         COMMON Q(1)
C
         CHARACTER *81 FILNAM
         CHARACTER *1  NULL,ASK
d33 1
a33 3
         DATA  LUN1,LUN2/8,9/
CNO_SAVE
         NULL=CHAR(0)
d36 3
a38 1
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
d40 10
a49 9
	IF (IRTFLG .EQ. -1) GOTO 130
	IF(IFORM.NE.1) GOTO 145
         CALL FILERD(FILNAM,NLETO,NULL,'OUTPUT',IRTFLG)
         IF (IRTFLG .EQ. -1) GOTO 5
         CALL RDPRMI(IRA,IDUM,NLOOP,ILOOP,'MASK RADIUS')
         IF(IRA.LT.2.OR.IRA.GT.NSAM/2.OR.IRA.GT.NROW/2)  THEN
         CALL  ERRT(31,'MACF  ',NE)
         GOTO  5
         ENDIF
d51 2
a52 5
         IF(2*LSD*NROW.GT.MAXMEM)  THEN
         CALL  ERRT(6,'MACF  ',NE)
         GOTO  5
         ENDIF
         KB=1+2*LSD*NROW
d54 1
a54 1
         CALL  RDPRMC(ASK,NCHAR,.TRUE.,
d56 66
a121 23
         IF(ASK.EQ.'H')  THEN
         CALL OPENF(FILNAM,LUN2,NSAM,NROW,'UNKNOWN',NF,1)
         GOTO (130,951),NF
         ELSEIF(ASK.EQ.'F')  THEN
         CALL OPENF(FILNAM,LUN2,2*NSAM,2*NROW,'UNKNOWN',NF,1)
         GOTO (130,951),NF
         ELSE
         CALL  ERRT(31,'MACF  ',NE)
         GOTO  5
         ENDIF

951      CALL  MACF_P(LUN1,LUN2,NSAM,NROW,Q,LSD,IRA,ASK)

5        CLOSE(LUN1)
         CLOSE(LUN2)
         RETURN

130      CALL ERRT(4,'MACF  ',NE)
         GOTO 5

145      CALL ERRT(2,'MACF  ',NE)
         GOTO 5
         END
@


1.6
log
@R removed
@
text
@d44 2
a45 1
         IF(4*NSAM*NROW.GT.MAXMEM)  THEN
d49 1
a49 1
         KB=1+4*NSAM*NROW
d64 1
a64 1
951      CALL  MACF_P(LUN1,LUN2,NSAM,NROW,Q,Q(KB),IRA,ASK)
@


1.5
log
@*** empty log message ***
@
text
@d33 1
a33 1
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'R',NSAM,NROW,NSLICE,
@


1.4
log
@*** empty log message ***
@
text
@a21 1
C
d33 4
a36 6
         CALL FILERD(FILNAM,NLETI,NULL,'INPUT',IRTFLG)
         IF (IRTFLG .EQ. -1) GOTO 5
         CALL OPENF(FILNAM,LUN1,NSAM,NROW,'OLD',NF,NSLICE)
         GOTO (130,110),NF

110      IF(IFORM.NE.1) GOTO 145
d51 1
a51 1
     &   '(F)ULL OR (H)ALF OUTPUT (F/H)$',NULL,IRTFLG)
d71 1
@


1.3
log
@nosave
@
text
@a22 1
#ifdef SP_UNIX
a23 3
#else
         INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d42 1
a42 1
         CALL RDPRMI(IRA,IDUM,NLOOP,ILOOP,'MASK RADIUS$')
@


1.2
log
@cpp_lines_added
@
text
@d34 1
@


1.1
log
@Initial revision
@
text
@d23 3
d27 1
@
