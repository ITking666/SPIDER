head	1.19;
access;
symbols
	pre_mrcs:1.19
	healthdept_2018:1.19
	pre_getangas:1.15
	GPL2010:1.15
	pre_GPL2010:1.14
	pre_var_equation:1.14
	pre_fftwrings:1.14
	pre_opfiles:1.14
	src:1.14
	best-code:1.14
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.9
	Bproc:1.8
	oct21:1.7
	last77:1.6;
locks; strict;
comment	@c @;


1.19
date	2018.10.03.14.34.13;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2014.07.30.15.35.58;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2014.07.30.15.33.07;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2014.01.12.19.20.17;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.24.13.26.34;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.12.16.01.53.23;	author cyang;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.18.14.03.24;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.19.56.11;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.17.52.50;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.30.15.54.05;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.11.14.07.42;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.11.15.21.24.29;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.08.05.14.37.39;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	98.03.04.14.21.03;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	96.07.08.19.27.09;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	96.06.19.15.44.51;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	96.02.27.20.23.01;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.09.26;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.46;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.19
log
@email_health_dept
@
text
@

C++*********************************************************************
C
C PUTPT2.F                         
C                  USED RDPRM3S                    AUG 99 ARDEAN LEITH
C                  MAXNAM                          JUL 14 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C PUTPT2(LUN2,NDOC,NSAM,NROW)
C
C PURPOSE:  SUPERPOSE ONTO AN IMAGE, 
C	    PIXELS IN LOCATIONS READ FROM  DOCUMENT FILE    
C            
C PARAMETERS: LUN2	        LOGICAL UNIT NUMBER OF I/O FILE
C	      NDOC	        LOGICAL UNIT NUMBER OF DOCUMENT FILE
C	      NSAM,NROW,NSLICE  DIMENSIONS OF INPUT FILE
C
C--*********************************************************************
 
	SUBROUTINE PUTPT2(LUN2,NDOC,NSAM,NROW,NSLICE)

C       DOC FIL CAN ONLY CONTAIN 99999 KEYS NOW
	PARAMETER (MAXPEAK=99999)
	COMMON NPEAK(MAXPEAK),BUF(4096)

	INCLUDE 'CMBLOCK.INC' 
        INCLUDE 'CMLIMIT.INC'

        CHARACTER(LEN=MAXNAM):: DOCNAM

	DIMENSION     PLIST(10)
        CHARACTER     NULL

#ifdef USE_MPI
        include 'mpif.h'
        INTEGER MYPID, ICOMM, MPIERR
        ICOMM   = MPI_COMM_WORLD
        MPIERR = 0
        CALL MPI_COMM_RANK(ICOMM, MYPID, MPIERR)
#else
        MYPID = -1
#endif

        NULL  = CHAR(0)

	CALL FILERD(DOCNAM,NLETD,NULL,'DOCUMENT',IRTFLG)
	IF (IRTFLG .NE. 0) RETURN

        IF (IFORM .EQ. 3) THEN
           CALL RDPRI3S(NCOLX,NCOLY,NCOLZ,NOT_USED,
     &               'X-COL, Y-COL, Z-COL',IRTFLG)
	   IF (IRTFLG .NE. 0) RETURN
        ELSE
	   CALL RDPRMI(NCOLX,NCOLY,NOT_USED,'X-COL, Y-COL')
           NCOLZ = 0
        ENDIF

C       NCOLP IS COLUMN OF DOC FILE CONTAINING PEAK HEIGHT (INTENSITY)
        CALL RDPRM2(COLP,HEIGHT,NOT_USED,
     &     'INTENSITY COLUMN (& INTENSITY IF NOT IN COL. OF DOC FILE)')
        NCOLP = 0
        IF (COLP .GT. 0) THEN
           NCOLP = COLP
        ELSEIF (COLP .LT. 0) THEN
           HEIGHT = -COLP
        ENDIF

        IF (IFORM .EQ. 3) THEN
           CALL RDPRM3S(XFACT,YFACT,ZFACT,NOT_USED,
     &          'X-FACTOR, Y-FACTOR, Z-FACTOR',IRTFLG)
 	   IF (IRTFLG .NE. 0) RETURN

           CALL RDPRM3S(XOFF,YOFF,ZOFF,NOT_USED,
     &                 'X-OFFSET, Y-OFFSET, Z-OFFSET',IRTFLG)
 	   IF (IRTFLG .NE. 0) RETURN

        ELSE
	   CALL RDPRM2(XFACT,YFACT,NOT_USED,'X-FACTOR, Y-FACTOR')
	   CALL RDPRM2(XOFF,YOFF,NOT_USED,'X-OFFSET, Y-OFFSET')
           ZOFF = 0.0
        ENDIF

	IF (XFACT .EQ. 0.0) XFACT = 1.0
	IF (YFACT .EQ. 0.0) YFACT = 1.0
	IF (ZFACT .EQ. 0.0) ZFACT = 1.0

	NVALU = MAX0(NCOLX,NCOLY,NCOLZ)
        NVALU = MAX0(NVALU,NCOLP)
        NUM   = MAXPEAK

        CALL RDPRAI(NPEAK,MAXPEAK,NUM,0,99999,'KEY NUMBERS',
     &              NULL,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        NOPEN  = 0
        NUMSET = 0
	DO  I=1,NUM
C          GET COORDS FROM DOCUMENT FILE

           CALL UNSAV(DOCNAM,NOPEN,NDOC,NPEAK(I),PLIST,NVALU,LERR,1)
           IF (LERR .NE. 0) GOTO 9300
           NOPEN = 1

           IF (NCOLX.EQ.0) THEN
              IXCOR = NPEAK(I) * XFACT - XOFF
           ELSE
              IXCOR = PLIST(NCOLX) * XFACT + 0.5 - XOFF
           ENDIF

           IYCOR = PLIST(NCOLY) * YFACT + 0.5 - SIGN(1.,YFACT) * YOFF
           IF (YFACT .LT. 0.0) IYCOR = NROW + IYCOR

           IF (IFORM .EQ. 3) THEN
              IZCOR = PLIST(NCOLZ) * ZFACT + 0.5 - SIGN(1.,ZFACT) * ZOFF
           ELSE
              IZCOR = 1
           ENDIF

           IF ((IXCOR .GT. NSAM   .OR. IXCOR .LE. 0) .OR.
     &         (IYCOR .GT. NROW   .OR. IYCOR .LE. 0) .OR.
     &         (IZCOR .GT. NSLICE .OR. IZCOR .LE. 0)) THEN
               IF (MYPID .LE. 0) 
     &         WRITE(NOUT,721) NPEAK(I),IXCOR,IYCOR,IZCOR
721            FORMAT(' *** LOCATION: ',I4,' : (',I5,',',I5,',',I5,
     &                ') OUTSIDE IMAGE, CONTINUING')
           ELSE
              IREC = (IZCOR -1) * NROW + IYCOR
              CALL REDLIN(LUN2,BUF,NSAM,IREC)
              IF (NCOLP .GE. 1)  HEIGHT = PLIST(NCOLP)

              BUF(IXCOR) = HEIGHT
              CALL WRTLIN(LUN2,BUF,NSAM,IREC)
              NUMSET = NUMSET + 1
           ENDIF
        ENDDO

9300    IF (MYPID .LE. 0) WRITE(NOUT,90) NUMSET
 90     FORMAT(' NUMBER OF LOCATIONS SET: ',I5)

        IF (NUMSET .GT. 0) THEN
C          SET FMIN, FMAX AS UNDETERMINED
           CALL SETPRM(LUN2,NSAM,NROW,0.0,0.0,0.0,'U')
        ENDIF
        
        CLOSE(LUN2)
	RETURN
	END
@


1.18
log
@LEN=MAXNAM):: DOCNAM
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.17
log
@LEN=MAXNAM):: SEQNAM,DOCNAM,FILNAM
@
text
@d51 1
a51 1
        CHARACTER(LEN=MAXNAM):: SEQNAM,DOCNAM,FILNAM
@


1.16
log
@enter
@
text
@d6 2
a7 1
C                        USED RDPRM3S AUG 99 ARDEAN LEITH
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d49 1
d51 1
a51 2
        CHARACTER *81 SEQNAM,DOCNAM,FILNAM
	COMMON /COMMUN/SEQNAM,DOCNAM,FILNAM
d55 1
@


1.15
log
@GPL_2010
@
text
@d111 1
a111 1
        CALL RDPRAI(NPEAK,MAXPEAK,NUM,0,99999,'ENTER KEY NUMBERS',
@


1.14
log
@sync write to stdout for MPI
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.13
log
@GPL License fixed
@
text
@d58 9
d146 2
a147 1
               WRITE(NOUT,721) NPEAK(I),IXCOR,IYCOR,IZCOR
d161 1
a161 1
9300    WRITE(NOUT,90) NUMSET
@


1.12
log
@GPL License fixed
@
text
@a31 1
C *    APPROVAL OF HEALTH RESEARCH INC.                                *
@


1.11
log
@HRI GPL License used
@
text
@a8 2
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        **
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 5

C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY,NY   *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH         *
C *    RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS             *
C *    OR USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN        *
@


1.10
log
@irec wrong
@
text
@d9 1
d11 24
@


1.9
log
@nloop,iloop_removed
@
text
@d2 1
d124 1
a124 1
              IREC = (IZCOR -1) * NSAM * NROW + IYCOR
d135 1
a135 1
 90     FORMAT(' NUMBER OF LOCATIONS SET: ',I4)
@


1.8
log
@bad rdpri3s call
@
text
@d47 1
a47 1
           CALL RDPRI3S(NCOLX,NCOLY,NCOLZ,NLOOP,ILOOP,
d51 1
a51 1
	   CALL RDPRMI(NCOLX,NCOLY,NLOOP,ILOOP,'X-COL, Y-COL')
d56 1
a56 1
        CALL RDPRM2(COLP,HEIGHT,NLOOP,ILOOP,
d66 1
a66 1
           CALL RDPRM3S(XFACT,YFACT,ZFACT,NLOOP,ILOOP,
d70 1
a70 1
           CALL RDPRM3S(XOFF,YOFF,ZOFF,NLOOP,ILOOP,
d75 2
a76 2
	   CALL RDPRM2(XFACT,YFACT,NLOOP,ILOOP,'X-FACTOR, Y-FACTOR')
	   CALL RDPRM2(XOFF,YOFF,NLOOP,ILOOP,'X-OFFSET, Y-OFFSET')
@


1.7
log
@removed rdpraf or rdprai
@
text
@d48 1
a48 1
     &               'X-COL, Y-COL, Z-COL',NULL,IRTFLG)
@


1.6
log
@nosave
@
text
@d4 2
a5 1
C PUTPT2.FOR                         
d29 2
a30 2
C       DOC FIL CAN ONLY CONTAIN 9999 KEYS NOW
	PARAMETER (MAXPEAK=9999)
d40 1
a40 2
        INTEGER       ILIST(3)
CNO_SAVE
a42 2
        DATA AMIN/-10E30/,AMAX/10E30/

d47 2
a48 3
           NVAL = 3
           CALL RDPRAI(ILIST,3,NVAL,0,7,'X-COL, Y-COL, Z-COL',
     &           NULL,IRTFLG)
a49 3
           NCOLX = ILIST(1)
           NCOLY = ILIST(2)
           NCOLZ = ILIST(3)
d66 2
a67 3
           NVAL = 3
           CALL RDPRAF(BUF,3,NVAL,AMIN,AMAX,
     &                 'X-FACTOR, Y-FACTOR, Z-FACTOR', NULL,IRTFLG)
d69 3
a71 7
           XFACT = BUF(1)
           YFACT = BUF(2)
           ZFACT = BUF(3)

           NVAL = 3
           CALL RDPRAF(BUF,3,NVAL,AMIN,AMAX,
     &                 'X-OFFSET, Y-OFFSET, Z-OFFSET', NULL,IRTFLG)
a72 3
           XOFF = BUF(1)
           YOFF = BUF(2)
           ZOFF = BUF(3)
@


1.5
log
@correct yfact, zfact
@
text
@d40 1
a40 1

@


1.4
log
@added 3d capability, improved prompts, etc
@
text
@d77 2
a78 2
           XFACT = BUF(2)
           XFACT = BUF(3)
@


1.3
log
@fixed prompts
@
text
@d2 1
a2 1
C++************************************************************** 3/8/89
d4 1
a4 5
C PUTPT2.FOR                         LONG FILNAMES JAN 89 al
C				     SUPERCEDES SECTION OF PICKPT jf
C                                    VERSION OF PUTPT, USABLE FOR
C                                    CONTINUOUS LINE PLOTS.       MR
C++**********************************************************************
d6 9
d17 2
a18 2
C PURPOSE: CREATE CCF/PEAK MAP BY SUPERPOSING, ONTO AN IMAGE OR CCF, 
C	    PIXELS IN PEAK POSITIONS ACCORDING TO DOCUMENT FILE    
d20 3
a22 3
C PARAMETERS: LUN2		LOGICAL UNIT NUMBER OF INPUT FILE
C	      NDOC		LOGICAL UNIT NUMBER OF DOCUMENT FILE
C	      NSAM,NROW	DIMENSIONS OF INPUT FILE
d24 1
a24 1
C--************************************************************************
d26 1
a26 1
	SUBROUTINE PUTPT2(LUN2,NDOC,NSAM,NROW)
d28 3
a30 2
	PARAMETER (MAXPEAK=4000)
	COMMON NPEAK(MAXPEAK),BUF(2048)
d34 1
a37 1
        CHARACTER *81 SEQNAM,DOCNAM,FILNAM
d39 1
a41 3
	FMAXO = FMAX
        FMINO = FMIN
        IF(IMAMI.NE.1) CALL NORM(LUN2,NSAM,NROW,FMAXO,FMINO,AVDO)
d43 2
d48 12
a59 1
	CALL RDPRMI(NCOLX,NCOLY,NLOOP,ILOOP,'X-COL, Y-COL')
d62 35
a96 5
        CALL RDPRMI(NCOLP,NDUM,NLOOP,ILOOP,'HEIGHT COLUMN OR NEG VALUE')

	CALL RDPRM2(XFACT,YFACT,NLOOP,ILOOP,'X-FACTOR, Y-FACTOR')

	CALL RDPRM2(Xoff,Yoff,NLOOP,ILOOP,'X-OFFSET, Y-OFFSET')
d98 1
a98 4
	IF(XFACT.EQ.0.0)XFACT=1.0
	IF(YFACT.EQ.0.0)YFACT=1.0

	NVALU = MAX0(NCOLX,NCOLY)
d102 1
a102 1
        CALL RDPRAI(NPEAK,MAXPEAK,NUM,0,999999,'.ENTER KEY NUMBERS',
d106 4
a109 5
        NOPEN = 0
	WRITE(NOUT,*) ' NUMBER OF LOCATIONS SET: ' ,NUM

	DO 750 I=1,NUM
C          COORDS FROM DOCUMENT FILE
d112 2
a113 2
           IF (LERR.NE.0) GOTO 9300
           NOPEN=1
d116 1
a116 1
             IXCOR = NPEAK(I) * XFACT - XOFF
d118 1
a118 1
             IXCOR = PLIST(NCOLX)*XFACT+0.5 -XOFF
d121 2
a122 1
           IYCOR = PLIST(NCOLY)*YFACT+0.5 - SIGN(1.,YFACT)*YOFF
d124 5
a128 6
           IF (YFACT.LT.0.0) IYCOR=NROW+IYCOR

           IF((IXCOR.GT.NSAM .OR. IXCOR.LE.0) .OR.
     &        (IYCOR.GT.NROW .OR. IYCOR.LE.0)) THEN
              WRITE(NOUT,721) NPEAK(I)
721           FORMAT(' *** LOCATION: ',I4,' OUT OF LIMITS, CONTINUING')
d130 6
d137 7
a143 11
             CALL REDLIN(LUN2,BUF,NSAM,IYCOR)
             IF (NCOLP.GE.1) THEN 
               HEIGHT = PLIST(NCOLP)
             ELSE
              HEIGHT=-NCOLP
             ENDIF

             IF (HEIGHT .GT. FMAX) FMAX = HEIGHT
             IF (HEIGHT .LT. FMIN) FMIN = HEIGHT
             BUF(IXCOR)  = HEIGHT
             CALL WRTLIN(LUN2,BUF,NSAM,IYCOR)
d145 4
a148 1
750	CONTINUE
d150 4
a153 4
C       AVD AND SIG ARBITRARILY (AND INCORRECTLY) SET TO 0.0!
        AVD = 0.0
        SIG = 0.0
        CALL SETPRM(LUN2,NSAM,NROW,FMAX,FMIN,AVD,'U')
d155 1
a155 1
9300	CLOSE(LUN2)
@


1.2
log
@cpp_lines_added
@
text
@d4 4
a7 5
C PUTPT2.FOR
C                                         LONG FILNAMES JAN 89 al
C					  SUPERCEDES SECTION OF PICKPT jf
C                                         VERSION OF PUTPT, USABLE FOR
C                                         CONTINUOUS LINE PLOTS.       MR
d10 4
a13 2
C $$ PUTPT: Create CCF/PEAK map by superposing, onto an image or CCF, 
C	    pixels in peak positions according to Document file    
d15 3
a17 4
C	CALL PUTPT2(LUN2,NDOC,NSAM,NROW)
C	  LUN2		LOGICAL UNIT NUMBER OF INPUT FILE
C	  NDOC		LOGICAL UNIT NUMBER OF DOCUMENT FILE
C	  NSAM,NROW	DIMENSIONS OF INPUT FILE
d25 1
a25 1
#ifdef SP_UNIX
d27 1
a27 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif
d30 1
a30 1
	DIMENSION PLIST(10)
d34 1
a34 2
        NULL=CHAR(0)
        write(nout,*) 'putpt2'
d42 1
a42 1
	CALL RDPRMI(NCOLX,NCOLY,NLOOP,ILOOP,'X-COL, Y-COL$')
d45 1
a45 1
        CALL RDPRMI(NCOLP,NDUM,NLOOP,ILOOP,'PEAK COLUMN OR NEG VALUE$')
d47 1
a47 1
	CALL RDPRM2(XFACT,YFACT,NLOOP,ILOOP,'X-FACT, Y-FACT$')
d49 1
a49 1
	CALL RDPRM2(Xoff,Yoff,NLOOP,ILOOP,'X-offset, Y-offset$')
d58 2
a59 2
        CALL RDPRAI(NPEAK,MAXPEAK,NUM,0,999999,'.ENTER PEAK NUMBERS',
     &  NULL,IRTFLG)
d62 2
a63 2
        NOPEN=0
	WRITE(NOUT,*) ' NUMBER OF PEAKS: ' ,NUM
d73 1
a73 1
             IXCOR = NPEAK(I) * XFACT - xoff
d75 1
a75 1
             IXCOR = PLIST(NCOLX)*XFACT+0.5 -xoff
d78 1
a78 1
           IYCOR = PLIST(NCOLY)*YFACT+0.5 - sign(1.,yfact)*yoff
d85 1
a85 1
721           FORMAT(' *** PEAK NO.',I4,' OUT OF LIMITS')
d89 1
a89 1
             IF(NCOLP.GE.1) THEN 
@


1.1
log
@Initial revision
@
text
@d25 3
d29 1
@
