head	1.11;
access;
symbols
	healthdept_2018:1.11
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.7
	prec_CA:1.7
	noindx:1.7
	Bproc:1.4
	oct21:1.3
	last77:1.3;
locks; strict;
comment	@c @;


1.11
date	2018.10.03.14.34.13;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.24.13.26.35;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.20.17.28;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.18.10.39;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.06.15.23.47;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.06.15.10.09;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.05.13.19.25;	author bimal;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.11.16;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	97.10.10.18.59.57;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.08.30.18.08.07;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.08.27.14.09.45;	author pawel;	state Exp;
branches;
next	;


desc
@simple 3D PW, on disk
@


1.11
log
@email_health_dept
@
text
@C
C++*********************************************************************
C
C $$ PW3SDR.FOR
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C
C
C IMAGE_PROCESSING_ROUTINE
C
C        1         2         3         4         5         6         7
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************
C
C $$ PW3SDR.FOR
C
        SUBROUTINE  PW3SDR(LUN1,LUN2,NSAM,NROW,NSLICE,MODE)
        DIMENSION   Q(NSAM+2-MOD(NSAM,2)),T(NSAM)
        CHARACTER*1  MODE
        LOGICAL*1 IFND,IFNL
        
        
        NNNN=NSAM+2-MOD(NSAM,2)
        IFND=MOD(NROW,2).EQ.0
        IFNL=MOD(NSLICE,2).EQ.0
        NSC=NSAM/2+1

        SCL=2.0/FLOAT(NSAM)/FLOAT(NROW)/FLOAT(NSLICE)
        DO    K=1,NSLICE
           DO    J=1,NROW
              NR=J+(K-1)*NROW
              CALL  REDLIN(LUN1,Q,NNNN,NR)
C  Reaplce F(0,0,0) for visualization
	IF(K.EQ.1 .AND. J.EQ.1)  Q(1:2)=Q(3:4)
        IF(MODE.EQ.'2')  THEN
              DO    I=NNNN-1,1,-2
                 Q(NNNN-1-(NNNN-1-I)/2)=
     &          SCL*SCL*(Q(I+1)*Q(I+1)+Q(I)*Q(I))
              ENDDO
        ELSE
              DO    I=NNNN-1,1,-2
                 Q(NNNN-1-(NNNN-1-I)/2)=
     &          SCL*SQRT(Q(I+1)*Q(I+1)+Q(I)*Q(I))
              ENDDO
        ENDIF
              IF(MODE.EQ.'L')  CALL  AL10(Q(NSAM/2),NSAM/2)
              Q(1)=Q(NNNN-1)
              CALL  WRTLIN(LUN2,Q,NSAM,NR)
           ENDDO
        ENDDO

        DO    K=1,NSLICE
           DO    J=1,NROW/2
              JJ=J+NROW/2+MOD(NROW,2)
              NR=J+(K-1)*NROW
              NRJ=JJ+(K-1)*NROW
              CALL  REDLIN(LUN2,Q,NSAM,NR)
              CALL  REDLIN(LUN2,T,NSAM,NRJ)
              CALL  WRTLIN(LUN2,Q,NSAM,NRJ)
              CALL  WRTLIN(LUN2,T,NSAM,NR)
           ENDDO
        ENDDO

        IF(.NOT.IFND)  THEN
           DO    K=1,NSLICE
              NR=NROW/2+1+(K-1)*NROW
              CALL  REDLIN(LUN2,T,NSAM,NR)
              DO    J=NROW/2+1,NROW-1
                 NR=J+(K-1)*NROW
                 NRJ=J+1+(K-1)*NROW
                 CALL  REDLIN(LUN2,Q,NSAM,NRJ)
                 CALL  WRTLIN(LUN2,Q,NSAM,NR)
              ENDDO
              NR=NROW+(K-1)*NROW
              CALL  WRTLIN(LUN2,T,NSAM,NR)
           ENDDO
        ENDIF   

        DO    K=1,NSLICE/2
           KK=K+NSLICE/2+MOD(NSLICE,2)
           DO   J=1,NROW
              NR=J+(K-1)*NROW
              NRK=J+(KK-1)*NROW
              CALL  REDLIN(LUN2,Q,NSAM,NR)
              CALL  REDLIN(LUN2,T,NSAM,NRK)
              CALL  WRTLIN(LUN2,Q,NSAM,NRK)
              CALL  WRTLIN(LUN2,T,NSAM,NR)
           ENDDO
        ENDDO

        IF(.NOT.IFNL)  THEN
           DO    J=1,NROW
              NR=J+(NSLICE/2)*NROW
              CALL  REDLIN(LUN2,T,NSAM,NR)
              DO    K=NSLICE/2+1,NSLICE-1
                 NR=K+(K-1)*NROW
                 NRK=K+K*NROW
                 CALL  REDLIN(LUN2,Q,NSAM,NRK)
                 CALL  WRTLIN(LUN2,Q,NSAM,NR)
              ENDDO
              NR=J+(NSLICE-1)*NROW
              CALL  WRTLIN(LUN2,T,NSAM,NR)
           ENDDO
        ENDIF   

        NSC=NNNN/2-1
        NSL=NSLICE/2
        IF(IFND)  THEN
           IF(IFNL)  THEN
              KB=2
              CALL  REDLIN(LUN2,Q,NSAM,1)
              DO    I=2,NSC
                 II=NNNN-I
                 Q(I)=Q(II)
              ENDDO
              CALL  WRTLIN(LUN2,Q,NSAM,1)
           ELSE
              KB=1
           ENDIF
           JB=2
           DO    K=KB,NSLICE
              KK=NSLICE-K+KB
              NR=1+(K-1)*NROW
              NRK=1+(KK-1)*NROW
              CALL  REDLIN(LUN2,Q,NSAM,NR)
              CALL  REDLIN(LUN2,T,NSAM,NRK)
              Q(1)=T(1)
              DO    I=2,NSC
                 II=NNNN-I
                 Q(I)=T(II)
              ENDDO
              CALL  WRTLIN(LUN2,Q,NSAM,NR)
           ENDDO
        ELSE
           JB=1
        ENDIF
        IF(IFNL)  THEN
           KB=2
           DO    J=JB,NROW
              JJ=NROW-J+JB
              CALL  REDLIN(LUN2,Q,NSAM,J)
              CALL  REDLIN(LUN2,T,NSAM,JJ)
              Q(1)=T(1)
              DO    I=2,NSC
                 II=NNNN-I
                 Q(I)=Q(II)
              ENDDO
              CALL  WRTLIN(LUN2,Q,NSAM,J)     
           ENDDO
        ELSE
           KB=1
        ENDIF
        DO    K=KB,NSLICE
           KK=NSLICE-K+KB
           DO    J=JB,NROW
              JJ=NROW-J+JB
              NR=J+(K-1)*NROW
              NRJ=JJ+(KK-1)*NROW
              CALL  REDLIN(LUN2,Q,NSAM,NR)
              CALL  REDLIN(LUN2,T,NSAM,NRJ)
              Q(1)=T(1)
              DO    I=2,NSC
                 II=NNNN-I
                 Q(I)=Q(II)
              ENDDO
              CALL  WRTLIN(LUN2,Q,NSAM,NR)    
           ENDDO
        ENDDO
C
        END
@


1.10
log
@GPL_2010
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.9
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a6 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a30 1
C **************************************************************************
a38 1
C--************************************************************************
@


1.7
log
@*** empty log message ***
@
text
@d2 1
d7 1
d9 1
d11 24
d41 1
d50 1
@


1.6
log
@option 2 added
@
text
@d42 3
a44 2

	IF(MODE.EQ.'2')  THEN
d49 1
a49 1
	ELSE
d54 1
a54 1
	ENDIF
a177 3
C
C
	Q(NSAM/2+1,NROW/2+1,NSLICE/2+1)=Q(NSAM/2,NROW/2,NSLICE/2)
@


1.5
log
@adapted to dynamical memory allocation
@
text
@d43 1
d46 5
d53 1
d179 1
a179 1
C         IF(MODE.NE.'L')  Q(NSAM/2+1,NROW/1+1,NSLICE/2+1)=0.0
@


1.4
log
@a
@
text
@d18 4
d26 143
a168 18
	SUBROUTINE  PW3SDR(LUN1,LUN2,Q,T,NNNN,NSAM,NROW,NSLICE,MODE)
	DIMENSION   Q(NNNN),T(NSAM)
	CHARACTER*1  MODE
	LOGICAL*1 IFND,IFNL

	IFND=MOD(NROW,2).EQ.0
	IFNL=MOD(NSLICE,2).EQ.0
	NSC=NSAM/2+1
C
	SCL=2.0/FLOAT(NSAM)/FLOAT(NROW)/FLOAT(NSLICE)
	DO    K=1,NSLICE
	DO    J=1,NROW
	NR=J+(K-1)*NROW
	CALL  REDLIN(LUN1,Q,NNNN,NR)
C
	DO    I=NNNN-1,1,-2
	Q(NNNN-1-(NNNN-1-I)/2)=
     &		SCL*SQRT(Q(I+1)*Q(I+1)+Q(I)*Q(I))
a169 123
	IF(MODE.EQ.'L')  CALL  AL10(Q(NSAM/2),NSAM/2)
	Q(1)=Q(NNNN-1)
	CALL  WRTLIN(LUN2,Q,NSAM,NR)
	ENDDO
	ENDDO
C
	DO    K=1,NSLICE
	DO    J=1,NROW/2
	JJ=J+NROW/2+MOD(NROW,2)
	NR=J+(K-1)*NROW
	NRJ=JJ+(K-1)*NROW
	CALL  REDLIN(LUN2,Q,NSAM,NR)
	CALL  REDLIN(LUN2,T,NSAM,NRJ)
	CALL  WRTLIN(LUN2,Q,NSAM,NRJ)
	CALL  WRTLIN(LUN2,T,NSAM,NR)
	ENDDO
	ENDDO
C
	IF(.NOT.IFND)  THEN
	DO    K=1,NSLICE
	NR=NROW/2+1+(K-1)*NROW
	CALL  REDLIN(LUN2,T,NSAM,NR)
	DO    J=NROW/2+1,NROW-1
	NR=J+(K-1)*NROW
	NRJ=J+1+(K-1)*NROW
	CALL  REDLIN(LUN2,Q,NSAM,NRJ)
	CALL  WRTLIN(LUN2,Q,NSAM,NR)
	ENDDO
	NR=NROW+(K-1)*NROW
	CALL  WRTLIN(LUN2,T,NSAM,NR)
	ENDDO
	ENDIF	
C
	DO    K=1,NSLICE/2
	KK=K+NSLICE/2+MOD(NSLICE,2)
	DO   J=1,NROW
	NR=J+(K-1)*NROW
	NRK=J+(KK-1)*NROW
	CALL  REDLIN(LUN2,Q,NSAM,NR)
	CALL  REDLIN(LUN2,T,NSAM,NRK)
	CALL  WRTLIN(LUN2,Q,NSAM,NRK)
	CALL  WRTLIN(LUN2,T,NSAM,NR)
	ENDDO
	ENDDO
C
	IF(.NOT.IFNL)  THEN
	DO    J=1,NROW
	NR=J+(NSLICE/2)*NROW
	CALL  REDLIN(LUN2,T,NSAM,NR)
	DO    K=NSLICE/2+1,NSLICE-1
	NR=K+(K-1)*NROW
	NRK=K+K*NROW
	CALL  REDLIN(LUN2,Q,NSAM,NRK)
	CALL  WRTLIN(LUN2,Q,NSAM,NR)
	ENDDO
	NR=J+(NSLICE-1)*NROW
	CALL  WRTLIN(LUN2,T,NSAM,NR)
	ENDDO
	ENDIF	
C
	NSC=NNNN/2-1
	NSL=NSLICE/2
	IF(IFND)  THEN
	IF(IFNL)  THEN
	KB=2
	CALL  REDLIN(LUN2,Q,NSAM,1)
	DO    I=2,NSC
	II=NNNN-I
	Q(I)=Q(II)
	ENDDO
	CALL  WRTLIN(LUN2,Q,NSAM,1)
	ELSE
	KB=1
	ENDIF
	JB=2
	DO    K=KB,NSLICE
	KK=NSLICE-K+KB
	NR=1+(K-1)*NROW
	NRK=1+(KK-1)*NROW
	CALL  REDLIN(LUN2,Q,NSAM,NR)
	CALL  REDLIN(LUN2,T,NSAM,NRK)
	Q(1)=T(1)
	DO    I=2,NSC
	II=NNNN-I
	Q(I)=T(II)
	ENDDO
	CALL  WRTLIN(LUN2,Q,NSAM,NR)
	ENDDO
	ELSE
	JB=1
	ENDIF
	IF(IFNL)  THEN
	KB=2
	DO    J=JB,NROW
	JJ=NROW-J+JB
	CALL  REDLIN(LUN2,Q,NSAM,J)
	CALL  REDLIN(LUN2,T,NSAM,JJ)
	Q(1)=T(1)
	DO    I=2,NSC
	II=NNNN-I
	Q(I)=Q(II)
	ENDDO
	CALL  WRTLIN(LUN2,Q,NSAM,J)	
	ENDDO
	ELSE
	KB=1
	ENDIF
	DO    K=KB,NSLICE
	KK=NSLICE-K+KB
	DO    J=JB,NROW
	JJ=NROW-J+JB
	NR=J+(K-1)*NROW
	NRJ=JJ+(KK-1)*NROW
	CALL  REDLIN(LUN2,Q,NSAM,NR)
	CALL  REDLIN(LUN2,T,NSAM,NRJ)
	Q(1)=T(1)
	DO    I=2,NSC
	II=NNNN-I
	Q(I)=Q(II)
	ENDDO
	CALL  WRTLIN(LUN2,Q,NSAM,NR)	
	ENDDO
	ENDDO
d174 1
a174 1
	END
@


1.3
log
@*** empty log message ***
@
text
@d26 1
a26 1
CNO_SAVE
@


1.2
log
@bug fixed
@
text
@d32 2
a33 2
	DO  1  K=1,NSLICE
	DO  1  J=1,NROW
d37 2
a38 2
	DO  102  I=NNNN-1,1,-2
102	Q(NNNN-1-(NNNN-1-I)/2)=
d40 1
d43 3
a45 1
1	CALL  WRTLIN(LUN2,Q,NSAM,NR)
d47 2
a48 2
	DO  100  K=1,NSLICE
	DO  100  J=1,NROW/2
d55 3
a57 1
100	CALL  WRTLIN(LUN2,T,NSAM,NR)
d60 1
a60 1
	DO  103  K=1,NSLICE
d63 1
a63 1
	DO  104  J=NROW/2+1,NROW-1
d67 2
a68 1
104	CALL  WRTLIN(LUN2,Q,NSAM,NR)
d70 2
a71 1
103	CALL  WRTLIN(LUN2,T,NSAM,NR)
d74 1
a74 1
	DO  200  K=1,NSLICE/2
d76 1
a76 1
	DO  200  J=1,NROW
d82 3
a84 1
200	CALL  WRTLIN(LUN2,T,NSAM,NR)
d87 1
a87 1
	DO  203  J=1,NROW
d90 1
a90 1
	DO  204  K=NSLICE/2+1,NSLICE-1
d94 2
a95 1
204	CALL  WRTLIN(LUN2,Q,NSAM,NR)
d97 2
a98 1
203	CALL  WRTLIN(LUN2,T,NSAM,NR)
d107 1
a107 1
	DO  206  I=2,NSC
d109 2
a110 1
206	Q(I)=Q(II)
d116 1
a116 1
	DO  306  K=KB,NSLICE
d123 1
a123 1
	DO  106  I=2,NSC
d125 4
a128 2
106	Q(I)=T(II)
306	CALL  WRTLIN(LUN2,Q,NSAM,NR)
d134 1
a134 1
	DO  207  J=JB,NROW
d139 1
a139 1
	DO  208  I=2,NSC
d141 4
a144 2
208	Q(I)=Q(II)
207	CALL  WRTLIN(LUN2,Q,NSAM,J)	
d148 1
a148 1
	DO  107  K=KB,NSLICE
d150 1
a150 1
	DO  107  J=JB,NROW
d157 1
a157 1
	DO  109  I=2,NSC
d159 5
a163 2
109	Q(I)=Q(II)
107	CALL  WRTLIN(LUN2,Q,NSAM,NR)	
@


1.1
log
@Initial revision
@
text
@d79 1
a79 1
	NR=J+(NLICE/2)*NROW
d81 1
a81 1
	DO  204  K=NLICE/2+1,NSLICE-1
d86 1
a86 1
	NR=J+(NLICE-1)*NROW
@
