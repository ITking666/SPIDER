head	1.13;
access;
symbols
	pre_getangas:1.11
	GPL2010:1.11
	pre_GPL2010:1.10
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.8
	x-named-regs:1.8
	x:1.8
	v13-00:1.8
	pre_GPL:1.6
	prec_CA:1.6
	noindx:1.6
	Bproc:1.6
	oct21:1.5
	last77:1.5;
locks; strict;
comment	@c @;


1.13
date	2013.05.28.18.39.04;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2013.05.28.18.35.46;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.24.13.26.06;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2009.09.25.13.40.10;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2006.12.21.15.16.00;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.20.27.25;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.17.18.19.02;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.11.10.23.09.36;	author yuchen;	state Exp;
branches;
next	1.5;

1.5
date	99.02.04.16.42.12;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	97.10.10.17.47.19;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	95.10.02.15.04.45;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	95.09.18.17.29.46;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	95.09.12.20.37.09;	author mladjadj;	state Exp;
branches;
next	;


desc
@file for EC group of comands
@


1.13
log
@*** empty log message ***
@
text
@
C **********************************************************************
C
C   MAKTAB.FOR  -- CREATED OCT 90
C **********************************************************************
C *  AUTHOR: ArDean Leith 
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C      MAKTAB(IEQUIV,NEQUIV,TABLE,LASTCLUS,NTAB,IRTFLG)
C
C      PURPOSE:      MAKES A CONNECTIVITY LOOK-UP-TABLE FROM IEQUIV  
C
C      PARAMETERS:   IEQUIV    EQUIVALENCE TABLE            INPUT
C                    NEQUIV    NUMBER OF EQUIV. IN IEQUIV   INPUT
C                    TABLE     NEW CLUSTER MAPPINGS         OUTPUT
C                    LASTCLUS  NUMBER OF CLUSTERS           INPUT
C                    NTAB      FINAL NUMBER OF CLUSTERS     OUPUT
C                    IRTFLG    ERROR FLAG                   OUTPUT
C
C      CALLED BY:    CONINT    MAPDIST
C
C      CALLS:           
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--********************************************************************

       SUBROUTINE MAKTAB(IEQUIV,NEQUIV,TABLE,LASTCLUS,NTAB,IRTFLG)

       INCLUDE 'CMBLOCK.INC'

       REAL      :: TABLE(LASTCLUS)
       INTEGER   :: IEQUIV(2,*)

       LOGICAL   :: DEBUGING,DEBUGING2
       LOGICAL   :: NOTDONE(LASTCLUS),NOTUSED(NEQUIV)
       INTEGER   :: ISTACK(LASTCLUS)      !???DIM???

C      INITIALIZE THE NOTDONE ARRAY FOR EACH POSSIBLE CLUSTER
       DO IT = 1,LASTCLUS
         NOTDONE(IT) = .TRUE.
       ENDDO

C      INITIALIZE ALREADY ARRAY FOR EACH CONNECTION
       DO IT = 1,NEQUIV
         NOTUSED(IT) = .TRUE.
       END DO

C      NTAB IS NEW CONSECUTIVE NUMBER FOR THIS CLUSTER
       NTAB = 0

C*************DEBUGING
C        IT1 = 1048
C        IT2 = 1085
C        IT3 = 1224
C        IT4 = 1469
C        IT5 = 1358
C*************

C      CHECK EQUIVALENCES FOR EACH OF THE CLUSTERS
       DO  ICLUS = 1,LASTCLUS

c*******************
C         DEBUGING = .FALSE.
C            
C         IF (ICLUS .EQ. IT1 .OR. ICLUS .EQ. IT2 .OR.
C     &       ICLUS .EQ. IT3 .OR. ICLUS .EQ. IT4 .OR.
C     &       ICLUS .EQ. IT5) DEBUGING = .TRUE.
C         IF (DEBUGING) THEN
C             WRITE(10,*)'ICLUS,NOTDONE(ICLUS): ',ICLUS,NOTDONE(ICLUS)
C         ENDIF
C*******************

         IF (NOTDONE(ICLUS)) THEN
C          THIS CLUSTER HAS NOT BEEN CONNECTED ANYWHERE YET

C          INCREMENT NTAB FOR NEW CLUSTER NUMBER
           NTAB = NTAB + 1

         call limchk('TABLE',ICLUS,LASTCLUS)
           TABLE(ICLUS) = NTAB
           ISTACK(1)     = ICLUS
           NUMSTK        = 1
           NOWSTK        = 1

 20        IF (NOWSTK .LE. NUMSTK) THEN
C            CHECK FOR CONNECTIONS INVOLVING THIS STACK MEMBER (JCLUS)
         call limchk('ISTACK',NOWSTK,LASTCLUS)
             ISTKNOW = ISTACK(NOWSTK)

             DO 25 JCLUS = 1,NEQUIV
               IF (NOTUSED(JCLUS)) THEN
                 MAXT = IEQUIV(1,JCLUS)
                 MINT = IEQUIV(2,JCLUS)

                 IF (MINT .EQ. ISTKNOW .OR. MAXT .EQ. ISTKNOW) THEN
C                  ISTKNOW HAS A CONNECTION INVOLVING ICLUS CLUSTER  
                   IT = MINT
                   IF (MAXT .NE. ISTKNOW) IT = MAXT

C********************* DEBUGING
C         DEBUGING2 = .FALSE.
C         IF (MINT .EQ. IT1 .OR. MAXT .EQ. IT1 .OR.
C     &       MINT .EQ. IT2 .OR. MAXT .EQ. IT2 .OR.
C     &       MINT .EQ. IT3 .OR. MAXT .EQ. IT3 .OR.
C     &       MINT .EQ. IT4 .OR. MAXT .EQ. IT4 .OR.
C     &       MINT .EQ. IT5 .OR. MAXT .EQ. IT5) DEBUGING2 = .TRUE.
C          IF (DEBUGING2) THEN
C            WRITE(10,*) ' ICLUS,JCLUS,ISTKNOW,IEQUIV:',ICLUS,JCLUS,
C     &                    ISTKNOW,
C     &                    IEQUIV(1,JCLUS),IEQUIV(2,JCLUS)
C         ENDIF
C************************

C                  MAKE SURE THIS CONNECTION IS NOT ALREADY IN STACK
                   DO ISTK = 1,NUMSTK
                      IF (ISTACK(ISTK) .EQ. IT) GOTO 25
                   END DO
 
C                  PUT THE NEW CONNECTED CLUSTER IN THE STACK                 
                   NUMSTK = NUMSTK + 1
         call limchk('ISTACK',NUMSTK,LASTCLUS)
                   ISTACK(NUMSTK) = IT

C                  ISTKNOW IS CONNECTED TO ICLUS
         call limchk('TABLE',IT,LASTCLUS)
                   TABLE(IT) = NTAB

C                  NO NEED TO CHECK IT IN OUTSIDE LOOP
         call limchk('NOTDONE',IT,LASTCLUS)
                   NOTDONE(IT) = .FALSE.

C                  NO NEED TO CHECK THIS CONNECTION IN INSIDE LOOP
         call limchk('NOTUSED',JCLUS,NEQUIV)
                   NOTUSED(JCLUS) = .FALSE.
C****************************
C           IF (DEBUGING2) THEN
C              WRITE(10,*) 'NUMSTK,IT,JCLUS,TABLE(IT):',NUMSTK,IT,JCLUS,
C     &                    TABLE(IT),ISTACK(NUMSTK)
C           ENDIF
C************************
                 ENDIF
               ENDIF
  25 	     CONTINUE

             NOWSTK = NOWSTK + 1
             GOTO 20
           ENDIF 
C          PUT IN FLAG THAT THIS CLUSTER HAS BEEN CONNECTED             
         call limchk('NOTDONE',ICLUS,LASTCLUS)
           NOTDONE(ICLUS) = .FALSE.                  
         ENDIF
       ENDDO

       WRITE(NOUT,90) LASTCLUS,NTAB
90     FORMAT('  Original:',I6, ' clusters mapped to:',I6/)

       RETURN
       END


C      **************************** LIMCHK *************

       SUBROUTINE LIMCHK(CARRAY,I,LIMIT)

       CHARACTER(LEN=*) :: CARRAY
         
       IF (I > LIMIT) THEN
          WRITE(6,90) CARRAY,LIMIT,I
90        FORMAT(' ARRAY: ',A,'  OVERFLOWS WITH: ',I6,'  >',I6)
          STOP
       ENDIF
       END

@


1.12
log
@formatting
@
text
@d1 1
a1 1
myr
@


1.11
log
@GPL_2010
@
text
@d1 1
a1 1

d34 1
a34 1
C                    TABLE    NEW CLUSTER MAPPINGS         OUTPUT
d174 1
a174 1
90     FORMAT(' Original:',I6, ' clusters mapped to:',I6/)
d180 1
a180 1

d186 1
a186 1
       IF (I .GT. LIMIT) THEN
@


1.10
log
@ EC operations memory rewrite
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.9
log
@common debug -> debug1 compiler balks
@
text
@d32 1
a32 2
C      MAKTAB(IEQUIV,NEQUIV,TABLE,LASTCLUS,NTAB,NOTDONE,NOTUSED,
C             ISTACK,IRTFLG)
d38 1
a38 1
C                    TABLE     NEW CLUSTER MAPPINGS         OUTPUT
a40 3
C                    NOTDONE   SPACE FOR MAKTAB             USED HERE
C                    NOTUTES   SPACE FOR MAKTAB             USED HERE
C                    ISTACK    SPACE FOR MAKTAB             USED HERE
d50 1
a50 4
       SUBROUTINE MAKTAB(IEQUIV,NEQUIV,TABLE,LASTCLUS,NTAB,
     &                   NOTDONE,NOTUSED,ISTACK,IRTFLG)

 
d54 2
a55 11
C--------------------------
C      CONINT NAD MAPDIST USE UNLABELED COMMON ALSO, SO BE CAREFUL
C      PARAMETER  (NEQMAX = 16000)
C      PARAMETER  (NSAMAX = 10000)
C      PARAMETER  (NSLMAX = 800)
C      PARAMETER  (NOTMAX = 10000)
C      WARNING MAKTAB AND MAPDIST ALSO USE UNLABELED COMMON!!!
C      INTEGER * 2  SLICES
C      COMMON       SLICES(NSLMAX),MSLICES(NSLMAX),IEQUIV(2,NEQMAX),
C   &               BUF(NSAMAX), WORK1(NOTMAX),WORK2(NOTMAX),WORK3(1)
C------------------------
d57 3
a59 2
       LOGICAL   NOTDONE,NOTUSED,DEBUGING,DEBUGING2
       DIMENSION IEQUIV(2,*),TABLE(*),NOTDONE(*),NOTUSED(*),ISTACK(*)
d64 2
a65 1
       END DO
d102 1
d104 3
a106 3
           ISTACK(1)    = ICLUS
           NUMSTK       = 1
           NOWSTK       = 1
d110 1
d144 1
d148 1
d152 1
d156 1
d172 1
d182 15
@


1.8
log
@GPL License fixed
@
text
@d73 1
a73 1
       LOGICAL   NOTDONE,NOTUSED,DEBUG,DEBUG2
d88 1
a88 1
C*************DEBUG
d100 1
a100 1
C         DEBUG = .FALSE.
d104 2
a105 2
C     &       ICLUS .EQ. IT5) DEBUG = .TRUE.
C         IF (DEBUG) THEN
d135 2
a136 2
C********************* DEBUG
C         DEBUG2 = .FALSE.
d141 2
a142 2
C     &       MINT .EQ. IT5 .OR. MAXT .EQ. IT5) DEBUG2 = .TRUE.
C          IF (DEBUG2) THEN
d167 1
a167 1
C           IF (DEBUG2) THEN
@


1.7
log
@HRI GPL License used
@
text
@a2 1
C**************************************************************************
a5 1
C **************************************************************************
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1990 , WADSWORTH CENTER FOR LABORATORIES AND RESEARCH    *
C *    NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.              *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH  			   *
a30 1
C **************************************************************************
@


1.6
log
@a
@
text
@d2 1
d6 1
d9 24
d39 1
@


1.5
log
@CNO_SAVE
@
text
@d40 1
a40 1
CNO_SAVE 
@


1.4
log
@*** empty log message ***
@
text
@d40 2
@


1.3
log
@used unlabeled common
@
text
@d78 1
a78 1
       DO 40 ICLUS = 1,LASTCLUS
d155 1
a155 1
25           CONTINUE
d163 1
a163 1
40     CONTINUE
@


1.2
log
@put cpp around CMBLOCK.INC
@
text
@d15 2
a16 1
C      MAKTAB(IEQUIV,NEQUIV,TABLE,LASTCLUS,IRTFLG)
d25 3
d32 1
a32 1
C      CALLS:       
d37 2
a38 1
       SUBROUTINE MAKTAB(IEQUIV,NEQUIV,TABLE,LASTCLUS,NTAB,IRTFLG)
d40 1
d42 11
a52 6
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
       PARAMETER (NEQMAX = 10000)
d54 2
a55 4
       DIMENSION IEQUIV(2,*),TABLE(*)
       COMMON    NOTDONE(NEQMAX),NOTUSED(NEQMAX),ISTACK(1)

       LOGICAL NOTDONE,NOTUSED,DEBUG,DEBUG2
@


1.1
log
@file for EC group of comands
@
text
@d35 6
@
