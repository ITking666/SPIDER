head	1.22;
access;
symbols
	pre_mrcs:1.22
	healthdept_2018:1.22
	pre_getangas:1.17
	GPL2010:1.17
	pre_GPL2010:1.16
	pre_var_equation:1.16
	pre_fftwrings:1.16
	pre_opfiles:1.16
	src:1.16
	best-code:1.16
	x-named-regs:1.16
	x:1.16
	v13-00:1.16
	pre_GPL:1.14
	prec_CA:1.14
	noindx:1.12
	Bproc:1.7
	oct21:1.5
	last77:1.5;
locks; strict;
comment	@c @;


1.22
date	2018.10.03.14.51.08;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2015.11.23.18.22.14;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2015.11.17.19.13.31;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2015.10.29.17.03.58;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2013.01.07.15.21.32;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.06.24.13.27.08;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.20.00.33;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.17.56.26;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.04.04.18.43.08;	author bbaxter;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.20.14.58.22;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2002.11.22.18.52.49;	author bbaxter;	state Exp;
branches;
next	1.11;

1.11
date	2002.11.22.17.12.08;	author bbaxter;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.11.14.07.48;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.10.21.18.01;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.06.13.57.25;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.11.10.23.11.23;	author yuchen;	state Exp;
branches;
next	1.6;

1.6
date	99.11.10.20.28.34;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.10.15.15.14.48;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.04.12.13.41.07;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.04.12.13.19.13;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.12.02;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.28;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.22
log
@email_health_dept
@
text
@C++*********************************************************************
C
C TRAFD.F   USED OPFILE                           NOV 00 ArDean Leith
C           OPFILEC                               FEB 03 ArDean Leith
C           REWORKED 'TF L FLIP'                  NOV 15 ArDean Leith                           
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2015  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C TRAFD(LUN)
C
C  PURPOSE: GENERATE THE PHASE CONTRAST TRANSFER FUNCTION  FOR
C           BRIGHT-FIELD ELECTRON MICROSCOPY. THIS OPERATION SHOWS
C            CTF IN REAL, DISPLAYABLE FORM TO AN IMAGE FILE.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

         SUBROUTINE TRAFD(LUN)

         IMPLICIT NONE
         INCLUDE 'CMBLOCK.INC'
         INCLUDE 'CMLIMIT.INC' 
 
         INTEGER               :: LUN

         REAL                  :: B(NBUFSIZ)  ! From: cmlimit.inc

         CHARACTER(LEN=MAXNAM) :: FILNAM
         CHARACTER             :: NULL = CHAR(0)
         CHARACTER             :: ANS

         INTEGER               :: NDIM,NX,NY,NZ,IRTFLG   
         LOGICAL               :: WANT_AST,WANT_GEH,WANT_SIGN
         LOGICAL               :: WANT_SPFREQ,WANT_PIXSIZ

         INTEGER               :: NLET,MAXIM,NCHAR,IE,NS1,I,K
   
         REAL                  :: LAMBDA,FMAXSPFREQ,CS,DZ,Q,DS,DZA,AZZ
         REAL                  :: ACR,GEH,SIGN,SC,AK,AZ,PI,AZR,DZZ
         REAL                  :: FDUM

         CALL FILERD(FILNAM,NLET,NULL,'CTF OUTPUT',IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

C        GET COMMON TF INPUTS
         NDIM        =  1
         WANT_AST    = .TRUE.
         WANT_GEH    = .TRUE.   
         WANT_SIGN   = .FALSE.
         WANT_SPFREQ = .TRUE.     ! ASK FOR SPFREQ
         WANT_PIXSIZ = .FALSE.    ! DO NOT ASK FOR PIXEL SIZE

         CALL GET_TF_INPUT(CS,DZ,LAMBDA,
     &                NDIM, NX, NY,
     &                WANT_SPFREQ,FMAXSPFREQ,
     &                WANT_PIXSIZ,FDUM,
     &                Q, DS,
     &                WANT_AST, DZA, AZZ,
     &                WANT_GEH, ACR, GEH,
     &                WANT_SIGN, SIGN,
     &                IRTFLG) 
         IF (IRTFLG .NE. 0) RETURN

         IFORM = 1
         NY    = NX
         NZ    = 1
         MAXIM = 0
         CALL OPFILEC(0,.FALSE.,FILNAM,LUN,'U',IFORM,NX,NY,NZ,
     &                   MAXIM,' ',.TRUE.,IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

         CALL RDPRMC(ANS,NCHAR,.TRUE.,
     &       'DIFFRACTOGRAM / ENVELOPE / STRAIGHT (D/E/S)',NULL,IRTFLG)

         IE = 0
         IF (ANS == 'E') IE = 1

         IF (GEH .NE. 0.0) GEH = 1. / GEH**2

         SC  = FMAXSPFREQ / FLOAT(NX / 2)
         ACR = ATAN(ACR / (1.0 - ACR))
         CS  = CS * 1.E7

         NS1 = NX / 2 + 1

         DO  I=1,NY

            DO  K=1,NX

               AK = SQRT(FLOAT(K-NS1)**2 + FLOAT(I-NS1)**2) * SC
               AZ = PI / 2.0

               AZ  = ATAN2(FLOAT(I-NS1), FLOAT(K-NS1)) + PI / 2.0
               AZR = AZZ * (PI / 180.)
               DZZ = DZ + DZA / 2 * SIN(2 * (AZ-AZR))

               CALL TFD(B(K),CS,DZZ,LAMBDA,Q,DS,IE,AK,ACR,GEH)

               IF (ANS .NE. 'S') B(K) = B(K) * B(K)

            ENDDO

            CALL WRTLIN(LUN,B,NX,I)

         ENDDO

         END
@


1.21
log
@GET_TF_INPUT WANT_PIXSIZ params
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.20
log
@used GET_TF_INPUT
renamed variables
@
text
@d54 1
d60 1
d66 6
a71 4
         NDIM      =  1
         WANT_AST  = .TRUE.
         WANT_GEH  = .TRUE.   
         WANT_SIGN = .FALSE.
d75 2
a76 1
     &                FMAXSPFREQ,
@


1.19
log
@all tf ops have same prompt syntax
@
text
@d3 3
a5 3
C TRAFD.F
C                                   USED OPFILE NOV 00 ARDEAN LEITH
C                                   OPFILEC     FEB  03 ARDEAN LEITH
d11 1
a11 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d31 4
d40 1
d44 3
a46 1
         CHARACTER(LEN=MAXNAM)   ::  FILNAM
d48 3
a50 4
         COMMON          B
         COMMON /COMMUN/ FILNAM
         CHARACTER       NULL,ANS,Y,D,E,S
         REAL            B(512),LAMBDA,KM
d52 2
a53 1
         DATA Y/'Y'/,D/'D'/,E/'E'/,S/'S'/,PI/3.14159/
d55 4
a58 1
         NULL = CHAR(0)
d60 1
a60 1
         CALL FILERD(FILNAM,NLET,NULL,'OUTPUT',IRTFLG)
d63 26
a88 2
         CALL RDPRM(CS,NOT_USED,'SPHERICAL ABERRATION CS [MM]')
         IF (CS < 0.0001)    CS = 0.0001
d90 2
a91 2
         CALL RDPRM2(DZ,LAMBDA,NOT_USED,
     &                   'DEFOCUS [A], LAMBDA [A]')
d93 1
a93 2
         CALL RDPRMI(NSAM,NDUM,NOT_USED,
     &               'NUMBER OF SPATIAL FREQ. POINTS')
d95 3
a97 1
         CALL RDPRM(KM,NOT_USED,'MAXIMUM SPATIAL FREQUENCY [1/A]')
d99 1
a99 2
         CALL RDPRM2(Q,DS,NOT_USED,
     &      'SOURCE SIZE[A-1], DEFOCUS SPREAD [A]')
d101 1
a101 1
         CALL RDPRM2(DZA,AZZ,NOT_USED,'ASTIGMATISM [A], AZIMUTH [DEG]')
d103 1
a103 3
         CALL RDPRM2(WGH,ENV,NOT_USED,
     &    'AMPL CONTRAST RATIO [0-1], GAUSSIAN ENV. HALFW. [1/A]')
         ENV    = 1. / ENV**2
d105 2
a106 7
         IFORM  = 1
         NROW   = NSAM
         NSLICE = 1
         MAXIM  = 0
         CALL OPFILEC(0,.FALSE.,FILNAM,LUN,'U',IFORM,NSAM,NROW,NSLICE,
     &                   MAXIM,' ',.TRUE.,IRTFLG)
         IF (IRTFLG .NE. 0) RETURN
d108 3
a110 5
         SC=KM/FLOAT(NSAM/2)
         CALL RDPRMC(ANS,NCHAR,.TRUE.,
     &       'DIFFRACTOGRAM / ENVELOPE / STRAIGHT (D/E/S)',NULL,IRTFLG)
         IE = 0
         IF (ANS.EQ.E) IE=1
d112 1
a112 2
         WGH = ATAN(WGH/(1.0-WGH))
         CS = CS*1.E7
d114 1
a114 10
         NS1 = (NSAM/2+1)
         DO  I=1,NROW
            DO  K=1,NSAM

               AK = SQRT(FLOAT(K-NS1)**2 + FLOAT(I-NS1)**2)*SC
               AZ = PI/2.
C               IF (K.EQ.NS1) GOTO 5
               AZ  = ATAN2(FLOAT(I-NS1),FLOAT(K-NS1)) + PI/2.
5              AZR = AZZ*(PI/180.)
               DZZ = DZ+DZA/2*SIN(2*(AZ-AZR))
a115 2
               CALL TFD(B(K),CS,DZZ,LAMBDA,Q,DS,IE,AK,WGH,ENV)
               IF (ANS .NE. S) B(K)=B(K)*B(K)
d117 3
a119 1
            CALL WRTLIN(LUN,B,NSAM,I)
d121 1
@


1.18
log
@CS_zero
@
text
@d29 1
a29 1
C   TRAFD(LUN)
d53 3
a55 2
	CALL RDPRM(CS,NOT_USED,'SPHERICAL ABERRATION CS[MM]')
           IF (CS < 0.0001)    CS = 0.0001
d57 7
a63 3
     &      'DEFOCUS(ANGSTROEMS), LAMBDA(ANGSTROEMS)')
         CALL RDPRMI(NSAM,NDUM,NOT_USED,'NUMBER OF SP.FREQ.PTS')
         CALL RDPRM(KM,NOT_USED,'MAXIMUM SPATIAL FREQUENCY[A-1]')
d65 4
a68 2
     &      'SOURCE SIZE[A-1], DEFOCUS SPREAD[A]')
         CALL RDPRM2(DZA,AZZ,NOT_USED,'ASTIGMATISM[A], AZIMUTH[DEG]')
d70 2
a71 2
     &      'AMPL CONTRAST RATIO [0-1], GAUSSIAN ENV HALFW [FOU UNITS]')
         ENV    = 1./ENV**2
d75 1
a75 1
	 NSLICE = 1
d83 1
a83 1
     &       '(D)IFFRACTOGRAM / (E)NVELOPE / (S)TRAIGHT',NULL,IRTFLG)
d87 2
a88 2
	 WGH = ATAN(WGH/(1.0-WGH))
	 CS = CS*1.E7
d105 1
a105 1
	 ENDDO
@


1.17
log
@GPL_2010
@
text
@d53 2
a54 1
         CALL RDPRM(CS,NOT_USED,'CS(MM)')
@


1.16
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.15
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a7 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
a31 1
C **************************************************************************
a36 1
C--************************************************************************
@


1.14
log
@changes to parameters passed to tfd: WGH and CS
@
text
@d1 1
d8 1
d10 1
d12 24
d42 1
d48 1
@


1.13
log
@opfilec
@
text
@d66 4
@


1.12
log
@commented out "IF (K.EQ.NS1) GOTO 5" - caused a glitch in image center
@
text
@d5 1
d25 3
d31 2
a32 3
         CHARACTER *81 FILNAM
         CHARACTER     NULL,ANS,Y,D,E,S
         REAL          B(512),LAMBDA,KM
d52 1
d57 1
a57 1
         CALL OPFILE(.FALSE.,FILNAM,LUN,'U',IFORM,NSAM,NROW,NSLICE,
@


1.11
log
@added "+ PI/2" to the line "AZ = ATAN2..." to be compatible with TF C
@
text
@d68 1
a68 1
               IF (K.EQ.NS1) GOTO 5
@


1.10
log
@nloop,iloop_removed
@
text
@d69 1
a69 1
               AZ  = ATAN2(FLOAT(I-NS1),FLOAT(K-NS1))
@


1.9
log
@bad opfile lsm --> nsam
@
text
@d38 2
a39 2
         CALL RDPRM(CS,NLOOP,ILOOP,'CS(MM)')
         CALL RDPRM2(DZ,LAMBDA,NLOOP,ILOOP,
d41 3
a43 3
         CALL RDPRMI(NSAM,NDUM,NLOOP,ILOOP,'NUMBER OF SP.FREQ.PTS')
         CALL RDPRM(KM,NLOOP,ILOOP,'MAXIMUM SPATIAL FREQUENCY[A-1]')
         CALL RDPRM2(Q,DS,NLOOP,ILOOP,
d45 2
a46 2
         CALL RDPRM2(DZA,AZZ,NLOOP,ILOOP,'ASTIGMATISM[A], AZIMUTH[DEG]')
         CALL RDPRM2(WGH,ENV,NLOOP,ILOOP,
@


1.8
log
@used opfile
\.
@
text
@d16 1
a17 1
C
d53 1
a53 1
         CALL OPFILE(.FALSE.,FILNAM,LUN,'U',IFORM,LSM,NROW,NSLICE,
d60 3
a62 3
         IE=0
         IF (ANS.EQ.E)IE=1
         NS1=(NSAM/2+1)
@


1.7
log
@a
@
text
@d3 2
a4 1
C $$ TRAFD.FOR
d20 1
a20 3
C
C $$ TRAFD.FOR
C
d22 1
d24 2
a25 1
         COMMON B
d30 1
d32 2
a33 1
C
a34 2
         NULL=CHAR(0)
C
d37 1
d40 1
a40 1
     &   'DEFOCUS(ANGSTROEMS), LAMBDA(ANGSTROEMS)')
d44 2
a45 2
     &   'SOURCE SIZE[A-1], DEFOCUS SPREAD[A]')
      CALL RDPRM2(DZA,AZZ,NLOOP,ILOOP,'ASTIGMATISM[A], AZIMUTH[DEG]')
d47 10
a56 6
     &   'Ampl contrast ratio [0-1], Gaussian env halfw [Fou units]')
         ENV=1./ENV**2
         IFORM = 1
         NROW=NSAM
	NSLICE=1
         CALL OPENF(FILNAM,LUN,NSAM,NROW,'UNKNOWN',NF,NSLICE)
d59 1
a59 2
     &   '(D)IFFRACTOGRAM / (E)NVELOPE / (S)TRAIGHT$',
     &   NULL,IRTFLG)
d64 13
a76 13
         DO  K=1,NSAM
C
         AK = SQRT(FLOAT(K-NS1)**2 + FLOAT(I-NS1)**2)*SC
         AZ = PI/2.
         IF(K.EQ.NS1) GOTO 5
         AZ=ATAN2(FLOAT(I-NS1),FLOAT(K-NS1))
5        AZR=AZZ*(PI/180.)
         DZZ=DZ+DZA/2*SIN(2*(AZ-AZR))
C
         CALL TFD(B(K),CS,DZZ,LAMBDA,Q,DS,IE,AK,WGH,ENV)
         IF(ANS .NE. S) B(K)=B(K)*B(K)
	 ENDDO
12       CALL WRTLIN(LUN,B,NSAM,I)
@


1.6
log
@*** empty log message ***
@
text
@d31 1
a31 1
CNO_SAVE
@


1.5
log
@*** empty log message ***
@
text
@d68 1
a68 1
         CALL TFD(B(K),CS,DZZ,LAMBDA,KM,NSAM,Q,DS,IE,AK,WGH,ENV)
@


1.4
log
@*** empty log message ***
@
text
@d58 2
a59 2
         DO 20 I=1,NROW
         DO 10 K=1,NSAM
d70 1
a70 1
10	CONTINUE
d72 1
a72 1
20       CONTINUE
@


1.3
log
@envelope changed
@
text
@d45 1
a45 1
     &   'Amplitude contrast ratio [0-1], Gaussian env halfw [Fou units]')
d69 2
a70 1
         IF (ANS .NE. S)    B(K)=B(K)*B(K)
@


1.2
log
@cpp_lines_added
@
text
@a22 1
#ifdef SP_UNIX
a23 3
#else
         INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d31 1
d45 2
a46 1
     &   'Amplitude contrast ratio [0-1], Gaussian envelope parameter')
d49 2
a50 1
         CALL OPENF(FILNAM,LUN,NSAM,NROW,'UNKNOWN',NF,1)
d69 1
a69 3
         IF (ANS .EQ. S) GOTO 10
         B(K)=B(K)*B(K)
10       CONTINUE
@


1.1
log
@Initial revision
@
text
@d23 3
d27 1
@
