head	1.21;
access;
symbols
	pre_getangas:1.18
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.14
	pre_opfiles:1.14
	src:1.14
	best-code:1.14
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.12
	prec_CA:1.10
	noindx:1.9
	Bproc:1.4
	oct21:1.3;
locks; strict;
comment	@c @;


1.21
date	2014.01.27.16.25.09;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2012.04.24.13.22.21;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2012.04.24.13.18.59;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2010.11.03.17.06.10;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.11.02.17.52.33;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.26.38;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2009.05.15.15.12.54;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.20.41.21;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.18.31.44;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.19.18.36.05;	author cyang;	state Exp;
branches;
next	1.11;

1.11
date	2003.11.10.15.26.21;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.20.17.55.18;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.04.18.06.00;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.11.14.08.32;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.11.18.47.40;	author hxgao;	state Exp;
branches;
next	1.6;

1.6
date	2000.11.30.20.58.34;	author hxgao;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.03.14.40.44;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.12.06.20.46.20;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.08.25.16.02.14;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	99.08.24.18.32.12;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	99.05.24.19.18.59;	author pawel;	state Exp;
branches;
next	;


desc
@new
@


1.21
log
@==,  error msgs,
@
text
@C++*********************************************************************
C
C RCTFSS.F                 ADDED 2D OPERATION       NOV 00    HAI  XIAO
C                          INPIC BUG                APR 02 ARDEAN LEITH
C                          OPFILEC                  FEB 03 ARDEAN LEITH
C                          ILIST FIXED              MAY 09 ARDEAN LEITH
C                          PUT MULFC3 HERE          NOV 10 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2012  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  RCTFSS(LUN1,LUN2)
C
C  PARAMETERS   
C
C  PURPOSE: 2D and 3D CTF CORRECTION USING WIENER FILTERING APPROACH
C
C           F(K)=SUM(H I(K)FI(K))/(SUM(HI(K)^2)+1/SNR), 
C           WHERE: HI(K) IS CTF FUNCTION FOR THE ITH IMAGE;
C           FI(K) IS THE ITH IMAGE; SNR IS SIGNAL-TO-NOISE RATIO.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE RCTFSS(LUN1,LUN2)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        CHARACTER(LEN=MAXNAM) :: FINPAT,FILNAM,FINPIC
        INTEGER, ALLOCATABLE  :: ILIST(:)
        COMPLEX, ALLOCATABLE  :: VOLIN(:,:,:) 
        COMPLEX, ALLOCATABLE  :: VOLSUM(:,:,:)
        COMPLEX, ALLOCATABLE  :: CTF2(:,:,:)
        CHARACTER(LEN=1)      :: NULL
        LOGICAL               :: FIRST

        CALL SET_MPI(ICOMM,MYPID,MPIERR)  ! SET MYPID

        NULL = CHAR(0)

        NILMAX = NIMAX
        ALLOCATE(ILIST(NILMAX),STAT=IRTFLG)
        IF (IRTFLG .NE. 0) THEN
           CALL  ERRT(46,'TF CTS, ILIST',NILMAX)
           RETURN
        ENDIF

C       ASK FOR DATA FILE
        CALL FILELIST(.TRUE.,LUN2,FINPAT,NLET,ILIST,NILMAX,NIMA,
     &      'TEMPLATE FOR IMAGE/VOLUME FILES',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999

        CALL FILERD(FILNAM,NLEP,NULL,
     &       'TEMPLATE FOR IMAGE/VOLUME CTF',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999

        SNR = 100
        CALL RDPRM1S(SNR,NOT_USED,'SNR',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999
        IF (SNR <= 0.0)  THEN
           CALL ERRT(101,'SNR MUST BE > 0',IER)
           GOTO 9999
        ENDIF

        S = 1.0 / SNR

        DO  K=1,NIMA

C          READ CURRENT IMAGE/VOLUME FILE
           CALL FILGET(FINPAT,FINPIC,NLET,ILIST(K),IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9999
           MAXIM = 0
           CALL OPFILEC(0,.FALSE.,FINPIC,LUN1,'O',IFORM,
     &               NSAM1,NROW1,NSLICE1,
     &               MAXIM,'DUMMY',.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0)  GOTO 9999

C          PROCESS THE VOLUME

           INUMDEM = 0  ! INUMDEM RECORDS 3D OR 2D INUMDEM: 3=3D 1=2D

           IF (IFORM==-11)  THEN
              LRCL    = NSAM1
              LS      = NSAM1
              NSAM1   = NSAM1-1
              INUMDEM = 1
           ELSEIF (IFORM==-12)  THEN
              LRCL    = NSAM1
              LS      = NSAM1
              NSAM1   = NSAM1-2
              INUMDEM = 1
           ELSEIF (IFORM == 1) THEN
              LS      =NSAM1+2-MOD(NSAM1,2)
              LRCL    =NSAM1
              INUMDEM = 1
           ELSEIF (IFORM == -21)  THEN
              LRCL    = NSAM1
              LS      = NSAM1
              NSAM1   = NSAM1-1
              INUMDEM = 3
           ELSEIF (IFORM == -22)  THEN
              LRCL    = NSAM1
              LS      = NSAM1
              NSAM1   = NSAM1-2
              INUMDEM = 3
           ELSEIF (IFORM == 3) THEN
              LS      = NSAM1+2-MOD(NSAM1,2)
              LRCL    = NSAM1
              INUMDEM = 3
           ELSE
              CALL ERRT(2,'TF CTS',NE)
              GOTO 9999
           ENDIF

C          GET THE DIMENSION INFORMATION FOR THE FIRST TIME
           IF (K == 1) THEN
              NSAM   = NSAM1
              NROW   = NROW1
              NSLICE = NSLICE1

C             VOLUMES NEEDED

              MWANT = (LS/2) * NROW * NSLICE
              ALLOCATE(VOLIN( LS/2,NROW,NSLICE),
     &                 VOLSUM(LS/2,NROW,NSLICE),
     &                 CTF2(  LS/2,NROW,NSLICE),  STAT=IRTFLG)
              IF (IRTFLG .NE. 0) THEN
                  CALL ERRT(46,'RCTFSS, VOLIN...',MWANT*3)
                  RETURN
              ENDIF
   
C             SET OUTPUT VOLUME AND CTF^2 TO ZERO
              VOLSUM = 0.0
              CTF2   = 0.0
           ELSE
C
C             VERIFY THE DIMENSIONS
              IF (NSAM.NE.NSAM1.OR.NROW.NE.NROW1.OR.NSLICE.NE.NSLICE1)
     &           THEN
                 CALL ERRT(101,'INCONSISTENT DIMENSIONS',NE)
                 GOTO 9999
              ENDIF
           ENDIF

C          READ INPUT FILE
           DO L=1,NSLICE
              DO J=1,NROW
                 CALL REDLIN(LUN1,VOLIN(1,J,L),LRCL,J+(L-1)*NROW)
              ENDDO
           ENDDO
           IF (MYPID <= 0) CLOSE(LUN1)

           IF ((IFORM == 1) .OR. (IFORM == 3)) THEN
C             FOURIER TRANSFORM
              INV = +1
              CALL FMRS_3(VOLIN,NSAM,NROW,NSLICE,INV)

              IF (INV == 0)  THEN
                 CALL ERRT(101,'FFT ERROR',NE)
                 GOTO 9999
              ENDIF
           ENDIF

C          GET CTF VOLUME
           CALL FILGET(FILNAM,FINPIC,NLEP,ILIST(K),IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9999

           MAXIM = 0
           CALL OPFILEC(0,.FALSE.,FINPIC,LUN1,'O',IFORM,
     &             NSAM1,NROW1,NSLICE1,
     &             MAXIM,'DUMMY',.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9999

           LRCL1 = NSAM1
C          ONLY 2D FOURIER

           INUMCTF = 0  !INUMCTF RECORDS 3D OR 2D: 3=3D 1=2D

           IF    (IFORM == -11) THEN
              NSAM1   = NSAM1-1
              INUMCTF = 1
           ELSEIF (IFORM == -12) THEN
              NSAM1   = NSAM1-2
              INUMCTF = 1
           ELSEIF (IFORM == -21) THEN
              NSAM1   = NSAM1-1
              INUMCTF = 3
           ELSEIF (IFORM == -22) THEN
              NSAM1   = NSAM1-2
              INUMCTF = 3
           ELSE
              CALL  ERRT(101,'CTF FILE MUST BE IN FOURIER FORMAT',NE)
              GOTO 9999
           ENDIF

           IF (INUMCTF .NE. INUMDEM) THEN
              CALL  ERRT(101,'CTF FILE MUST BE IN FOURIER FORMAT',NE)
              GOTO 9999
           ENDIF

c          VERIFY DIMENSIONS OF THE CTF
           IF (NSAM.NE.NSAM1.OR.NROW.NE.NROW1.OR.NSLICE.NE.NSLICE1)THEN
              CALL ERRT(101,'INCONSISTENT DIMENSIONS',NE)
              GOTO 9999
           ENDIF

C          MUTLIPLY INPUT VOLUME STORED IN THE MEMORY VOLIN, PLACE OUTPUT
C          IN VOLSUM AND SQUARED CTF IN CTF2.
           CALL MULFC3(LUN1,VOLIN,VOLSUM,CTF2,LRCL1/2,NROW,NSLICE)

        ENDDO              ! END OF DO-LOOP OVER ALL VOLUMES

C       DIVIDE BY THE SUM OF H^2+1/SNR
        VOLIN = VOLSUM / (REAL(CTF2) + S)   ! ARRAY OPERATION

        INV = -1
        CALL FMRS_3(VOLIN,NSAM,NROW,NSLICE,INV)

        IFORM = INUMCTF
        MAXIM = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'N',IFORM,NSAM,NROW,NSLICE,
     &              MAXIM,'OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG.NE.0) GOTO 9999

C       WRITE THE OUTPUT
        DO L=1,NSLICE
           DO J=1,NROW
              CALL WRTLIN(LUN1,VOLIN(1,J,L),NSAM,J+(L-1)*NROW)
           ENDDO
        ENDDO


9999    IF (MYPID <= 0) CLOSE(LUN1)

        IF (ALLOCATED(CTF2))   DEALLOCATE(CTF2)
        IF (ALLOCATED(VOLSUM)) DEALLOCATE(VOLSUM)
        IF (ALLOCATED(VOLIN))  DEALLOCATE(VOLIN)
        IF (ALLOCATED(ILIST))  DEALLOCATE(ILIST)
        END



C++*********************************************************************
C
C MULFC3.F                         
C
C **********************************************************************
C
C  MULFC3(LUN1,VOLIN,VOLSUM, H2, NN2,NROW,NSLICE)
C
C  PARAMETERS:  LUN1      INPUT UNIT FOR CTF FILE              (INPUT)
C               VOLIN     FFT OF INPUT IMAGE                   (INPUT)
C               VOLSUM    VOLSUM + VOLIN * CONJG(B1)          (OUTPUT)
C               H2        H2 + B1^2                           (OUTPUT)
C               NN2       ROW LENGTH                           (INPUT)
C               NROW      IMAGE ROWS                           (INPUT)        
C               NSLICE    VOLUME SLICES                        (INPUT) 
C 
C  PURPOSE: USED IN CTF CORRECTION USING WIENER FILTERING APPROACH
C           READS CTF FILE FOR THIS FOR CURRENTLY OPEN VOLUME.   
C           ACCUMULATES: VOLIN    * CONJ(CTF) IN: VOLSUM
C           ACCUMULATES: REAL CTF * CONJ(CTF) IN: H2
C            
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE MULFC3(LUN1,VOLIN,VOLSUM, H2, NN2,NROW,NSLICE)

        COMPLEX  :: VOLIN(NN2,NROW,NSLICE)
        COMPLEX  :: VOLSUM(NN2,NROW,NSLICE)

        COMPLEX  :: H2(NN2,NROW,NSLICE)

        COMPLEX  :: B1(NN2)

        DO K=1,NSLICE
          DO J=1,NROW
            NR1 = J+(K-1)*NROW

C           READS CTF FOR THIS VOLUME      
            CALL REDLIN(LUN1,B1,2*NN2,NR1)

            DO I=1,NN2
               VOLSUM(I,J,K) = VOLSUM(I,J,K) + 
     &                         VOLIN(I,J,K) * CONJG(B1(I))

               H2(I,J,K) = H2(I,J,K)  + 
     &                     CMPLX(REAL(B1(I) * CONJG(B1(I))), 0.0)
            ENDDO
          ENDDO
        ENDDO

        END

 

@


1.20
log
@prompt: TEMPLATE FOR IMAGE/VOLUME FILES ..
@
text
@d76 4
a79 2
        CALL RDPRM(SNR,NOT_USED,'SNR')
        IF (SNR .LE. 0.0)  THEN
d83 1
d95 1
a95 1
           IF (IRTFLG.NE.0)  GOTO 9999
d101 1
a101 1
           IF (IFORM.EQ.-11)  THEN
d106 1
a106 1
           ELSEIF (IFORM.EQ.-12)  THEN
d111 1
a111 1
           ELSEIF (IFORM .EQ. 1) THEN
d115 1
a115 1
           ELSEIF (IFORM .EQ. -21)  THEN
d120 1
a120 1
           ELSEIF (IFORM .EQ. -22)  THEN
d125 1
a125 1
           ELSEIF (IFORM .EQ. 3) THEN
d135 1
a135 1
           IF (K .EQ. 1) THEN
d159 1
a159 1
                 CALL ERRT(1,'TF CTS',NE)
d170 1
a170 1
           IF (MYPID .LE. 0) CLOSE(LUN1)
d172 1
a172 1
           IF ((IFORM.EQ.1) .OR. (IFORM.EQ.3)) THEN
d177 1
a177 1
              IF (INV .EQ. 0)  THEN
d187 1
a187 1
           MAXIM=0
d191 1
a191 1
           IF (IRTFLG.NE.0) GOTO 9999
d198 1
a198 1
           IF    (IFORM .EQ. -11) THEN
d201 1
a201 1
           ELSEIF (IFORM .EQ. -12) THEN
d204 1
a204 1
           ELSEIF (IFORM .EQ. -21) THEN
d207 1
a207 1
           ELSEIF (IFORM .EQ. -22) THEN
d211 1
a211 1
              CALL  ERRT(2,'TF CTS',NE)
d216 1
a216 1
              CALL ERRT(2,'TF CTS',NE)
d222 1
a222 1
              CALL ERRT(1,'TF CTS',NE)
d252 1
a252 1
9999    IF (MYPID .LE. 0) CLOSE(LUN1)
@


1.19
log
@purpose added
@
text
@d69 1
a69 1
     &      'TEMPLATE FOR IMAGE FILES',IRTFLG)
d72 2
a73 1
        CALL FILERD(FILNAM,NLEP,NULL,'TEMPLATE FOR CTF',IRTFLG)
d85 1
d180 1
a180 1
C          GET CTF
@


1.18
log
@mulfc3 here, parameters changed, cosmetic
@
text
@d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
a261 1
C **********************************************************************
d272 6
a277 1
C       
d293 2
@


1.17
log
@withsnr
@
text
@d7 1
a7 1
C                          WITHSNR                  NOV 10 ARDEAN LEITH
d30 1
a30 1
C  RCTFSS(WITHSNR)
d32 1
a32 3
C  PARAMETERS   WITHSNR   FLAG TO DIVIDE SUMMED INPUT IMAGE/VOLUMES BY 
C                         THE SUMMED SQUARED CTF IMAGES/VOLUMES 
C                         ADJUSTED BY THE SNR.
d43 1
a43 1
        SUBROUTINE RCTFSS(WITHSNR)
d54 1
a54 3
        LOGICAL               :: FIRST,WITHSNR

        DATA    LUN1,INPIC/10,55/
d68 1
a68 1
        CALL FILELIST(.TRUE.,INPIC,FINPAT,NLET,ILIST,NILMAX,NIMA,
d75 4
a78 7
        IF (WITHSNR) THEN
           CALL RDPRM(SNR,NOT_USED,'SNR')
           IF (SNR .LE. 0.0)  THEN
              CALL ERRT(101,'SNR MUST BE > 0',IER)
              GOTO 9999
           ENDIF
           S = 1.0/SNR
d80 1
d94 1
a94 4
           INUMDEM = 0
CC         USE INUMDEM TO RECORD 3D OR 2D
CC         INUMDEM = 3    3D
CC         1    2D
d125 1
a125 1
              CALL ERRT(2,'TF CTF',NE)
a128 1

d142 1
a142 1
                  CALL ERRT(46,'RCTFSS, VOLIN...',MWANT)
d154 1
a154 1
                 CALL ERRT(1,'TF CTF',NE)
d191 1
a191 4
           INUMCTF = 0
CC         USE INUMCTF TO RECORD 3D OR 2D
CC         INUMCTF = 3    3D
C          1    2D
d206 1
a206 1
              CALL  ERRT(2,'TF CTF',NE)
d211 1
a211 1
              CALL ERRT(2,'TF CTF',NE)
d217 1
a217 1
              CALL ERRT(1,'TF CTF',NE)
d221 1
a221 1
C          MUTLIPLY INPUT VOLUME STORED IN THE MEMORY volin, PLACE OUTPUT
a222 1

d225 1
a225 2
C          END OF DO-LOOP OVER ALL VOLUMES
        ENDDO
d227 2
a228 4
        IF (WITHSNR) THEN
C          DIVIDE BY THE SUM OF H^2+1/SNR
           VOLIN = VOLSUM / (REAL(CTF2)+S)   ! ARRAY OPERATION
        ENDIF
d257 8
a264 1
C  MULFC3(LUN1,A1,OUT, H2, NN2,NROW,NSLICE)
d267 3
a269 3
C               A1        FFT OF INPUT IMAGE                   (INPUT)
C               OUT       =A1 * CONJG(B1)                      (OUTPUT)
C               H2        =H2 + B1^2                           (OUTPUT)
d271 3
a273 7
C               NROW      IMAGE ROWS                           (INPUT)

C               NSLICE    VOLUME SLICES                        (INPUT)
C
C  OUT = A1 * CONJG(B1)
C  H2  = H2 + B1^2
C
d277 4
a280 1
        SUBROUTINE MULFC3(LUN1,A1,OUT, H2, NN2,NROW,NSLICE)
a281 1
        COMPLEX  :: A1(NN2,NROW,NSLICE), OUT(NN2,NROW,NSLICE)
d283 1
d292 2
a293 1
               OUT(I,J,K) = OUT(I,J,K) + A1(I,J,K) * CONJG(B1(I))
d295 2
a296 2
               H2(I,J,K)  = H2(I,J,K)  +
     &                      CMPLX(REAL(B1(I) * CONJG(B1(I))), 0.0)
d302 3
@


1.16
log
@GPL_2010
@
text
@d3 5
a7 4
C RCTFSS.F                 ADDED 2D OPERATION NOV 2000  HAIXIAO
C                          INPIC BUG          APR 02 ARDEAN LEITH
C                          OPFILEC            FEB 03 ARDEAN LEITH
C                          ILIST FIXED        MAY 09 ARDEAN LEITH
d30 5
a34 1
C  RCTFSS
d38 3
a40 3
C           F(K)=SUM(H I(K)FI(K))/(SUM(HI(K)^2)+1/SNR), WHERE HI(K) IS
C           CTF FUNCTION FOR THE ITH IMAGE;
C           FI(K) IS THE ITH IMAGE; SNR IS SIGNAL-TO-NOISE RATION.
d45 1
a45 1
        SUBROUTINE RCTFSS
d50 7
a56 5
        CHARACTER(LEN=MAXNAM)                  :: FINPAT,FILNAM,FINPIC
        INTEGER, ALLOCATABLE, DIMENSION(:)     :: ILIST
        COMPLEX, ALLOCATABLE, DIMENSION(:,:,:) :: VOLIN,VOLSUM,CTF2
        CHARACTER(LEN=1)                       :: NULL
        LOGICAL                                :: FIRST
d62 2
d73 1
a73 1
     &      'ENTER TEMPLATE FOR IMAGE FILE',IRTFLG)
d76 1
a76 2
        NULL = CHAR(0)
        CALL FILERD(FILNAM,NLEP,NULL,'ENTER TEMPLATE FOR CTF',IRTFLG)
d79 7
a85 4
        CALL RDPRM(SNR,NOT_USED,'SNR')
        IF (SNR .LE. 0.0)  THEN
           CALL ERRT(31,'TF CTF',IER)
           GOTO 9999
a86 1
        S = 1.0/SNR
d90 4
a93 4
        CALL FILGET(FINPAT,FINPIC,NLET,ILIST(K),IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999
        MAXIM = 0
        CALL OPFILEC(0,.FALSE.,FINPIC,LUN1,'O',IFORM,
d96 1
a96 1
        IF (IRTFLG.NE.0)  GOTO 9999
d98 1
a98 1
C       PROCESS THE VOLUME
d100 37
a136 38
        INUMDEM = 0
CC      USE INUMDEM TO RECORD 3D OR 2D
CC      INUMDEM = 3    3D
CC      1    2D

        IF (IFORM.EQ.-11)  THEN
           LRCL    = NSAM1
           LS      = NSAM1
           NSAM1   = NSAM1-1
           INUMDEM = 1
        ELSEIF (IFORM.EQ.-12)  THEN
           LRCL    = NSAM1
           LS      = NSAM1
           NSAM1   = NSAM1-2
           INUMDEM = 1
        ELSEIF (IFORM .EQ. 1) THEN
           LS      =NSAM1+2-MOD(NSAM1,2)
           LRCL    =NSAM1
           INUMDEM = 1
        ELSEIF (IFORM .EQ. -21)  THEN
           LRCL    = NSAM1
           LS      = NSAM1
           NSAM1   = NSAM1-1
           INUMDEM = 3
        ELSEIF (IFORM .EQ. -22)  THEN
           LRCL    = NSAM1
           LS      = NSAM1
           NSAM1   = NSAM1-2
           INUMDEM = 3
        ELSEIF (IFORM .EQ. 3) THEN
           LS      = NSAM1+2-MOD(NSAM1,2)
           LRCL    = NSAM1
           INUMDEM = 3
        ELSE
           IF (MYPID .LE. 0) CLOSE(LUN1)
           CALL ERRT(2,'TF CTF',NE)
           GOTO 9999
        ENDIF
d139 21
a159 20
C       GET THE DIMENSION INFORMATION FOR THE FIRST TIME
        IF (K .EQ. 1) THEN
           NSAM   = NSAM1
           NROW   = NROW1
           NSLICE = NSLICE1
C          VOLUMES NEEDED

           ALLOCATE(VOLIN(LS/2,NROW,NSLICE),STAT=IRTFLG)
           IF (IRTFLG.NE.0) CALL ERRT(46,'TF CTF, VOLIN',IER)

           ALLOCATE(VOLSUM(LS/2,NROW,NSLICE),STAT=IRTFLG)
           IF (IRTFLG.NE.0) CALL ERRT(46,'TF CTF, VOLSUM',IER)

           ALLOCATE(CTF2(LS/2,NROW,NSLICE),STAT=IRTFLG)
           IF (IRTFLG.NE.0) CALL ERRT(46,'TF CTF, CTF2',IER)

C          SET OUTPUT VOLUME AND CTF^2 TO ZERO
           VOLSUM = 0.0
           CTF2   = 0.0
        ELSE
d161 6
a166 5
C          VERIFY THE DIMENSIONS
           IF(NSAM.NE.NSAM1.OR.NROW.NE.NROW1.OR.NSLICE.NE.NSLICE1) THEN
              IF (MYPID .LE. 0) CLOSE(LUN1)
              CALL ERRT(1,'TF CTF',NE)
              GOTO 9999
a167 1
        ENDIF
d169 5
a173 4
C       READ INPUT FILE
        DO L=1,NSLICE
           DO J=1,NROW
              CALL REDLIN(LUN1,VOLIN(1,J,L),LRCL,J+(L-1)*NROW)
d175 1
a175 2
        ENDDO
        IF (MYPID .LE. 0) CLOSE(LUN1)
d177 9
a185 7
        IF ((IFORM.EQ.1) .OR. (IFORM.EQ.3)) THEN
C          FOURIER TRANSFORM
           INV = +1
           CALL FMRS_3(VOLIN,NSAM,NROW,NSLICE,INV)
           IF (INV .EQ. 0)  THEN
              CALL ERRT(38,'TF CTF',NE)
              GOTO 9999
a186 1
        ENDIF
d188 3
a190 3
C       GET CTF
        CALL FILGET(FILNAM,FINPIC,NLEP,ILIST(K),IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999
d192 2
a193 2
        MAXIM=0
        CALL OPFILEC(0,.FALSE.,FINPIC,LUN1,'O',IFORM,
d196 1
a196 1
        IF (IRTFLG.NE.0) GOTO 9999
d198 2
a199 2
        LRCL1 = NSAM1
C       ONLY 2D FOURIER
d201 21
a221 22
        INUMCTF = 0
CC      USE INUMCTF TO RECORD 3D OR 2D
CC      INUMCTF = 3    3D
C       1    2D

        IF    (IFORM .EQ. -11) THEN
           NSAM1 = NSAM1-1
             INUMCTF = 1
        ELSEIF (IFORM .EQ. -12) THEN
           NSAM1 = NSAM1-2
             INUMCTF = 1
        ELSEIF (IFORM .EQ. -21) THEN
           NSAM1 = NSAM1-1
             INUMCTF = 3
        ELSEIF (IFORM .EQ. -22) THEN
           NSAM1 = NSAM1-2
             INUMCTF = 3
        ELSE
           IF (MYPID .LE. 0) CLOSE(LUN1)
           CALL  ERRT(2,'TF CTF',NE)
           GOTO 9999
        ENDIF
d223 4
a226 5
          IF (INUMCTF .NE. INUMDEM) THEN
                IF (MYPID .LE. 0) CLOSE(LUN1)
                CALL ERRT(2,'TF CTF',NE)
                GOTO 9999
          ENDIF
d228 5
a232 6
c       VERIFY DIMENSIONS OF THE CTF
        IF (NSAM.NE.NSAM1.OR.NROW.NE.NROW1.OR.NSLICE.NE.NSLICE1) THEN
           IF (MYPID .LE. 0) CLOSE(LUN1)
           CALL ERRT(1,'TF CTF',NE)
           GOTO 9999
        ENDIF
d234 2
a235 2
C       MUTLIPLY INPUT VOLUME STORED IN THE MEMORY volin, PLACE OUTPUT
C       IN VOLSUM AND SQUARED CTF IN CTF2.
d237 1
a237 2
        CALL MULFC3(LUN1,VOLIN,VOLSUM,CTF2,LRCL1/2,NROW,NSLICE)
        IF (MYPID .LE. 0) CLOSE(LUN1)
d239 1
a239 1
C       END OF DO-LOOP OVER ALL VOLUMES
d242 4
a245 3
C       DIVIDE BY THE SUM OF H^2+1/SNR
        VOLIN = VOLSUM/(REAL(CTF2)+S)
c       CALL DIVCR3(B(KAD2),B(KAD2),B(KAD3),S,LRCL1/2,NROW,NSLICE)
d247 1
a247 1
        INV=-1
a261 1
        IF (MYPID .LE. 0) CLOSE(LUN1)
d263 48
a310 4
9999    IF(ALLOCATED(CTF2)) DEALLOCATE(CTF2)
        IF(ALLOCATED(VOLSUM)) DEALLOCATE(VOLSUM)
        IF(ALLOCATED(VOLIN)) DEALLOCATE(VOLIN)
        IF(ALLOCATED(ILIST)) DEALLOCATE(ILIST)
@


1.15
log
@*** empty log message ***
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@GPL License fixed
@
text
@d6 1
a6 1
C
d9 1
a9 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d44 1
a44 1
        SUBROUTINE  RCTFSS
a45 1
        PARAMETER  (NILMAX=998)
d47 7
d55 1
a55 2
        COMMON  /F_SPEC/  FINPAT,FILNAM,FINPIC,NLET,NLEP
        CHARACTER*80      FINPAT,FILNAM,FINPIC
d57 1
a57 4
        INTEGER, ALLOCATABLE, DIMENSION(:) ::  ILIST
        COMPLEX, ALLOCATABLE, DIMENSION(:,:,:) ::  VOLIN,VOLSUM,CTF2
        CHARACTER*1  NULL
        LOGICAL      FIRST
d59 1
a59 10
        DATA    LUN1,INPIC/10,55/
#ifdef USE_MPI    
        include 'mpif.h'
        INTEGER  MYPID, COMM, MPIERR 
        COMM = MPI_COMM_WORLD
        MPIERR = 0
        CALL MPI_COMM_RANK(COMM, MYPID, MPIERR) 
#else 
        MYPID = -1
#endif  
d62 2
a63 2
           CALL  ERRT(46,'TF CTF, ILIST',IER)
           GOTO 9999
d72 1
a72 1
        CALL  FILERD(FILNAM,NLEP,NULL,'ENTER TEMPLATE FOR CTF',IRTFLG)
d75 1
a75 1
        CALL  RDPRM(SNR,NOT_USED,'SNR')
d89 1
a89 1
     &             MAXIM,'DUMMY',.TRUE.,IRTFLG)
d100 27
a126 27
           LRCL=NSAM1
           LS=NSAM1
           NSAM1=NSAM1-1
             INUMDEM = 1
        ELSEIF(IFORM.EQ.-12)  THEN
           LRCL=NSAM1
           LS=NSAM1
           NSAM1=NSAM1-2
             INUMDEM = 1
        ELSEIF(IFORM.EQ.1) THEN
           LS=NSAM1+2-MOD(NSAM1,2)
           LRCL=NSAM1
             INUMDEM = 1
        ELSEIF(IFORM.EQ.-21)  THEN
           LRCL=NSAM1
           LS=NSAM1
           NSAM1=NSAM1-1
             INUMDEM = 3
        ELSEIF(IFORM.EQ.-22)  THEN
           LRCL=NSAM1
           LS=NSAM1
           NSAM1=NSAM1-2
             INUMDEM = 3
        ELSEIF(IFORM.EQ.3) THEN
           LS=NSAM1+2-MOD(NSAM1,2)
           LRCL=NSAM1
             INUMDEM = 3
d129 1
a129 1
           CALL  ERRT(2,'TF CTF',NE)
d135 4
a138 4
        IF (K.EQ.1) THEN
           NSAM=NSAM1
           NROW=NROW1
           NSLICE=NSLICE1
d140 1
d142 2
a143 1
           IF(IRTFLG.NE.0) CALL  ERRT(46,'TF CTF, VOLIN',IER)
d145 2
a146 1
           IF(IRTFLG.NE.0) CALL  ERRT(46,'TF CTF, VOLSUM',IER)
d148 2
a149 1
           IF(IRTFLG.NE.0) CALL  ERRT(46,'TF CTF, CTF2',IER)
d151 2
a152 2
           VOLSUM=0.0
           CTF2=0.0
d158 1
a158 1
              CALL  ERRT(1,'TF CTF',NE)
d166 1
a166 1
              CALL  REDLIN(LUN1,VOLIN(1,J,L),LRCL,J+(L-1)*NROW)
d171 1
a171 2

        IF ((IFORM.EQ.1).OR.(IFORM.EQ.3)) THEN
d173 1
a173 1
           INV=+1
d175 2
a176 2
           IF (INV.EQ.0)  THEN
              CALL  ERRT(38,'TF CTF',NE)
a180 1

d191 1
a191 1
        LRCL1=NSAM1
d199 2
a200 2
        IF (IFORM.EQ.-11) THEN
           NSAM1=NSAM1-1
d202 2
a203 2
        ELSEIF (IFORM.EQ.-12) THEN
           NSAM1=NSAM1-2
d205 2
a206 2
        ELSEIF (IFORM.EQ.-21) THEN
           NSAM1=NSAM1-1
d208 2
a209 2
        ELSEIF (IFORM.EQ.-22) THEN
           NSAM1=NSAM1-2
d217 1
a217 1
          IF (INUMCTF.NE.INUMDEM) THEN
d232 1
d235 1
d238 4
a241 3
C          DIVIDE BY THE SUM OF H^2+1/SNR
        VOLIN=VOLSUM/(REAL(CTF2)+S)
c       CALL  DIVCR3(B(KAD2),B(KAD2),B(KAD3),S,LRCL1/2,NROW,NSLICE)
d255 1
a255 1
              CALL  WRTLIN(LUN1,VOLIN(1,J,L),NSAM,J+(L-1)*NROW)
@


1.13
log
@HRI GPL License used
@
text
@a1 1
C++*************************************************************************
a7 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.12
log
@Removed MPI I/O sync because it's been taken care of in lower leve routines
@
text
@d1 1
d10 24
@


1.11
log
@mpi
@
text
@d43 1
a43 1
        INTEGER  MYPID, COMM, IERR 
d45 2
a46 1
        CALL MPI_COMM_RANK(COMM, MYPID, IERR) 
d118 1
a118 1
           CLOSE(LUN1)
d143 1
a143 1
              CLOSE(LUN1)
d155 1
a155 1
        CLOSE(LUN1)
d200 1
a200 1
           CLOSE(LUN1)
d206 1
a206 1
                CLOSE(LUN1)
d213 1
a213 1
           CLOSE(LUN1)
d221 1
a221 1
        CLOSE(LUN1)
a232 18
#ifdef USE_MPI
C       CHECK THE FILENAME TO SEE IF THE OUTPUT IS INLINE
        CALL FILERD(FILNAM,NLETI,NULL,'OUTPUT',IRTFLG)
        IF (MYPID .EQ. 0 .OR. FILNAM .EQ. '_') THEN
           CALL OPFILEC(0,.FALSE.,FILNAM,LUN1,'N',IFORM,NSAM,NROW,
     &                  NSLICE,MAXIM,'OUTPUT',.FALSE.,IRTFLG)
           IF (IRTFLG.NE.0) GOTO 9999
c
C          WRITE THE OUTPUT
           DO L=1,NSLICE
              DO J=1,NROW
                 CALL  WRTLIN(LUN1,VOLIN(1,J,L),NSAM,J+(L-1)*NROW)
              ENDDO
           ENDDO
           CLOSE(LUN1)
        ENDIF 
        CALL MPI_BCAST(IBCNT, 1, MPI_INTEGER, 0, COMM, IERR)
#else
d243 1
a243 2
        CLOSE(LUN1)
#endif
@


1.10
log
@opfilec
@
text
@d41 8
a48 1

d232 18
d261 1
@


1.9
log
@inpic was undefined
@
text
@d4 2
a5 1
C                          INPIC BUG APR 02 ARDEAN LEITH
a23 1
C        1         2         3         4         5         6         7
d31 1
d34 1
d69 2
a70 1
        CALL OPFILE(.FALSE.,FINPIC,LUN1,'O',IFORM,NSAM1,NROW1,NSLICE1,
d166 2
a167 1
        CALL OPFILE(.FALSE.,FINPIC,LUN1,'O',IFORM,NSAM1,NROW1,NSLICE1,
d225 1
a225 1
        CALL OPFILE(.TRUE.,FILNAM,LUN1,'N',IFORM,NSAM,NROW,NSLICE,
@


1.8
log
@nloop,iloop_removed
@
text
@d3 2
a4 1
C RCTFSS.FOR                           ADDED 2D OPERATION NOV 2000  HAIXIAO
d6 8
a13 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
C **************************************************************************
d36 1
a36 2
        LOGICAL FIRST
        DATA    LUN1/10/
d38 2
d41 1
a41 1
        IF(IRTFLG.NE.0) THEN
d52 1
a52 2
        CALL  FILERD(FILNAM,NLEP,NULL,
     &       'ENTER TEMPLATE FOR CTF',IRTFLG)
d56 3
a58 3
        IF (SNR.LE.0.0)  THEN
          CALL ERRT(31,'TF CTF',IER)
          GOTO 9999
d60 1
a60 1
        S=1.0/SNR
d65 5
a69 5
        IF(IRTFLG .NE. 0) GOTO 9999
        IDUM=0
        CALL OPFIL(.FALSE.,FINPIC,LUN1,'O',NSAM1,NROW1,NSLICE1,
     &             IDUM,'DUMMY',.TRUE.,IRTFLG)
        IF(IRTFLG.NE.0)  GOTO 9999
d71 1
a71 1
C        PROCESS THE VOLUME
d75 2
a76 2
CC            INUMDEM = 3    3D
CC                    1    2D
d78 1
a78 1
        IF(IFORM.EQ.-11)  THEN
d112 1
a112 1
C
d114 1
a114 1
        IF(K.EQ.1) THEN
a157 2


d161 4
a164 3
        IDUM=0
        CALL OPFIL(.FALSE.,FINPIC,LUN1,'O',NSAM1,NROW1,NSLICE1,
     &             IDUM,'DUMMY',.TRUE.,IRTFLG)
d170 1
a170 1
          INUMCTF = 0
d172 2
a173 2
CC            INUMCTF = 3    3D
CC                    1    2D
d219 5
a223 6
          IFORM = INUMCTF
          IDUM=0

        CALL OPFIL(.TRUE.,FILNAM,LUN1,'N',NSAM,NROW,NSLICE,
     &                 IDUM,'OUTPUT',.FALSE.,IRTFLG)
        IF(IRTFLG.NE.0) GOTO 9999
@


1.7
log
@Write(*,*) removed
@
text
@d55 1
a55 1
        CALL  RDPRM(SNR,NLOOP,ILOOP,'SNR')
@


1.6
log
@2D operation added
@
text
@a111 6
          IF (INUMDEM.EQ.1 ) THEN
                WRITE(*,*) "THE INPUT IMAGE FILES ARE 2-D"
          ELSEIF ( INUMDEM.EQ.3 ) THEN
                WRITE(*,*) "THE INPUT IMAGE FILES ARE 3-D"
          ENDIF

a192 6

          IF (INUMCTF.EQ.1 ) THEN
                WRITE(*,*) "THE CTF FILES ARE 2-D"
          ELSEIF ( INUMCTF.EQ.3 ) THEN
                WRITE(*,*) "THE CTF FILES ARE 3-D"
          ENDIF
@


1.5
log
@prompt & cosmetic
@
text
@d3 1
a3 1
C RCTFS.FOR                        
d15 1
a15 1
C  RCTFS
d17 1
a17 5
C  PURPOSE: CTF CORRECTION USING WIENER FILTERING APPROACH
C  
C           F(K)=SUM(H I(K)FI(K))/(SUM(HI(K)^2)+1/SNR), WHERE HI(K) IS 
C           CTF FUNCTION FOR THE ITH VOLUME; 
C           FI(K) IS THE ITH VOLUME; SNR IS SIGNAL-TO-NOISE RATION.
d19 4
d29 1
a29 1
	PARAMETER  (NILMAX=998)
d31 30
a60 7
	COMMON  /F_SPEC/  FINPAT,FILNAM,FINPIC,NLET,NLEP
	CHARACTER*80      FINPAT,FILNAM,FINPIC
	INTEGER, ALLOCATABLE, DIMENSION(:) ::  ILIST
	COMPLEX, ALLOCATABLE, DIMENSION(:,:,:) ::  VOLIN,VOLSUM,CTF2
	CHARACTER*1  NULL
	LOGICAL	FIRST
	DATA	LUN1/10/
d62 1
a62 2
	ALLOCATE(ILIST(NILMAX),STAT=IRTFLG)
	IF(IRTFLG.NE.0) CALL  ERRT(46,'TF CTF, ILIST',IER)
d64 6
a69 29
C       ASK FOR DATA FILE
	CALL FILELIST(.TRUE.,INPIC,FINPAT,NLET,ILIST,NILMAX,NIMA,
     &      'ENTER TEMPLATE FOR 3-D IMAGE FILE',IRTFLG)
	IF (IRTFLG .NE. 0) RETURN

	NULL = CHAR(0)
 	CALL  FILERD(FILNAM,NLEP,NULL,
     &	     'ENTER TEMPLATE FOR 3-D CTF',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

	CALL  RDPRM(SNR,NLOOP,ILOOP,'SNR')
	IF (SNR.LE.0.0)  THEN
	  CALL ERRT(31,'TF CTF',IER)
	  DEALLOCATE(ILIST)
	  RETURN
	ENDIF
	S=1.0/SNR

	DO  K=1,NIMA

 	CALL FILGET(FINPAT,FINPIC,NLET,ILIST(K),IRTFLG)
        IF(IRTFLG .NE. 0) RETURN
	IDUM=0
	CALL OPFIL(.FALSE.,FINPIC,LUN1,'O',NSAM1,NROW1,NSLICE1,
     &		   IDUM,'DUMMY',.TRUE.,IRTFLG)
	IF(IRTFLG.NE.0)  THEN
          CALL ERRT(4,'TF CTF ',NE)
          RETURN
	ENDIF
d72 46
a117 16
        IF(IFORM.EQ.-21)  THEN
	   LRCL=NSAM1
	   LS=NSAM1
	   NSAM1=NSAM1-1
	ELSEIF(IFORM.EQ.-22)  THEN
	   LRCL=NSAM1
	   LS=NSAM1
	   NSAM1=NSAM1-2
	ELSEIF(IFORM.EQ.3) THEN
	   LS=NSAM1+2-MOD(NSAM1,2)
	   LRCL=NSAM1
	ELSE
	   CLOSE(LUN1)
	   CALL  ERRT(2,'TF CTF',NE)	
	   RETURN
	ENDIF
d120 11
a130 11
	IF(K.EQ.1) THEN
	 NSAM=NSAM1
	 NROW=NROW1
	 NSLICE=NSLICE1
C        Volumes needed
	 ALLOCATE(VOLIN(LS/2,NROW,NSLICE),STAT=IRTFLG)
	 IF(IRTFLG.NE.0) CALL  ERRT(46,'TF CTF, VOLIN',IER)
	 ALLOCATE(VOLSUM(LS/2,NROW,NSLICE),STAT=IRTFLG)
	 IF(IRTFLG.NE.0) CALL  ERRT(46,'TF CTF, VOLSUM',IER)
	 ALLOCATE(CTF2(LS/2,NROW,NSLICE),STAT=IRTFLG)
	 IF(IRTFLG.NE.0) CALL  ERRT(46,'TF CTF, CTF2',IER)
d132 2
a133 2
	 VOLSUM=0.0
         CTF2=0.0
d136 6
a141 6
C          Verify the dimensions
	   IF(NSAM.NE.NSAM1.OR.NROW.NE.NROW1.OR.NSLICE.NE.NSLICE1) THEN
	      CLOSE(LUN1)
	      CALL  ERRT(1,'TF CTF',NE)
	      RETURN
	   ENDIF
d145 10
a154 8
	DO L=1,NSLICE
	 DO J=1,NROW
          CALL  REDLIN(LUN1,VOLIN(1,J,L),LRCL,J+(L-1)*NROW)
	 ENDDO
	ENDDO
	CLOSE(LUN1)
	IF (IFORM.EQ.3) THEN
C	   FOURIER TRANSFORM
d156 8
a163 6
	   CALL FMRS_3(VOLIN,NSAM,NROW,NSLICE,INV)
	   IF (INV.EQ.0)  THEN
	      CALL  ERRT(38,'TF CTF',NE)
	      RETURN
	   ENDIF   
	ENDIF
d165 1
d167 24
a190 14
 	CALL FILGET(FILNAM,FINPIC,NLEP,ILIST(K),IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
	IDUM=0
	CALL OPFIL(.FALSE.,FINPIC,LUN1,'O',NSAM1,NROW1,NSLICE1,
     &		   IDUM,'DUMMY',.TRUE.,IRTFLG)
	IF (IRTFLG.NE.0) THEN
          CALL ERRT(4,'TF CTF ',NE)
          RETURN
	ENDIF

	LRCL1=NSAM1
C       ONLY 3D FOURIER	
        IF (IFORM.EQ.-21) THEN
	   NSAM1=NSAM1-1
d192 7
a198 12
	   NSAM1=NSAM1-2
	ELSE	
	   CLOSE(LUN1)
	   CALL  ERRT(2,'TF CTF',NE)	
	   RETURN
	ENDIF
c       Verify dimensions of the CTF
	IF (NSAM.NE.NSAM1.OR.NROW.NE.NROW1.OR.NSLICE.NE.NSLICE1) THEN
	   CLOSE(LUN1)
	   CALL ERRT(1,'TF CTF',NE)
	   RETURN
	ENDIF
d200 19
d220 5
a224 5
C       IN volsum AND SQUARED CTF IN ctf2.
	CALL MULFC3(LUN1,VOLIN,VOLSUM,CTF2,LRCL1/2,NROW,NSLICE)
	CLOSE(LUN1)
C       end of do-loop over all volumes
	ENDDO
d226 13
a238 9
	VOLIN=VOLSUM/(REAL(CTF2)+S)
c	CALL  DIVCR3(B(KAD2),B(KAD2),B(KAD3),S,LRCL1/2,NROW,NSLICE)
	IFORM=3
	IDUM=0
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'N',NSAM,NROW,NSLICE,
     &		       IDUM,'OUTPUT',.FALSE.,IRTFLG)
	IF(IRTFLG.NE.0) RETURN
	INV=-1
	CALL FMRS_3(VOLIN,NSAM,NROW,NSLICE,INV)
d240 12
a251 12
	DO L=1,NSLICE
	   DO J=1,NROW
	      CALL  WRTLIN(LUN1,VOLIN(1,J,L),NSAM,J+(L-1)*NROW)
	   ENDDO
	ENDDO
	CLOSE(LUN1)

	DEALLOCATE(CTF2)
	DEALLOCATE(VOLSUM)
	DEALLOCATE(VOLIN)
	DEALLOCATE(ILIST)
	END
@


1.4
log
@header
@
text
@d42 1
a42 2
C  ASK FOR DATA FILE

d46 2
a47 1
	NULL=CHAR(0)
d49 1
a49 1
     &	  'ENTER TEMPLATE FOR 3-D CTF FILE',IRTFLG)
d51 1
d53 1
a53 1
	IF(SNR.LE.0.0)  THEN
d95 1
a95 1
C  Volumes needed
d107 1
a107 1
C  Verify the dimensions
d114 1
d142 1
d154 1
a154 1
c Verify dimensions of the CTF
d165 1
a165 1
C end of do-loop over all volumes
d177 1
a177 1
C          WRITE THE OUTPUT
d179 3
a181 3
	 DO J=1,NROW
	  CALL  WRTLIN(LUN1,VOLIN(1,J,L),NSAM,J+(L-1)*NROW)
	 ENDDO
d184 1
a184 1
C
@


1.3
log
@res util1
@
text
@d28 1
d38 1
a38 1
C
d41 1
a41 1
C
d43 1
a43 1
C
d45 1
a45 1
     &   'ENTER TEMPLATE FOR 3-D IMAGE FILE',IRTFLG)
d58 1
a58 1
C
d60 1
a60 1
C
d70 1
a70 1
C
@


1.2
log
@New TF CTF
@
text
@d27 1
a27 1
        SUBROUTINE  RCTFS(IDUMMY)
@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
C  RCTFS(MAXMEM)
d27 2
a28 2
        SUBROUTINE  RCTFSS(MAXMEM)
	PARAMETER (LENBUF=1024)
d30 6
a35 15
	COMMON  /F_SPEC/  FINPAT,NLET,FINPIC
	CHARACTER*80      FINPAT,FINPIC,FILNAM

	COMMON	OPENBUF(LENBUF),BUF(1024)
#ifdef SP_F90
        INCLUDE 'F90ALLOC.INC'
        REAL, DIMENSION(:), POINTER :: IPQ
        REAL, DIMENSION(:), POINTER :: B
#else
	DIMENSION	B(1)
	POINTER	(IPQ,B) 
#endif
	LOGICAL	RUNTIME
	CHARACTER*81	FILNAM
        CHARACTER	NULL
d37 11
a47 7
	LOGICAL	FIRST

        NULL=CHAR(0)
 	CALL  FILERD(FINPAT,NLET,NULL,
     &	  'ENTER TEMPLATE FOR 3-D IMAGE FILE',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
 	CALL  FILERD(FILNAM,NLET,NULL,
d50 5
a54 19

 	CALL FILERD(FINPIC,NLETI,NULL,'SELECTION DOC',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
	K      = 0
	K2     = 1

	FIRST=.TRUE.
C       WORKING ADDRESS
C       KAD1=1   ADDRESS FOR IMAGE ONE
C       KAD2=KAD1+NTOT FOR OUTPUT
C       KAD3=KAD2+NTOT FOR SUM OF CTF**2
1	KP1 = K + 1
	CALL  UNSAV(FINPIC,K,INPIC,KP1,BUF,1,LERR,K2)
	IF (LERR .EQ. 0)  THEN
	  IMAGE=BUF(1)
	  K=K+1
 	CALL FILGET(FINPAT,FINPIC,NLET,IMAGE,IRTFLG)
        IF (IRTFLG .NE. 0) THEN
	RETURN
d56 7
d65 3
a67 2
	IF (IRTFLG.NE.0) THEN
	RETURN
d69 1
a69 21
	ELSE
	   CALL  RDPRM(SNR,NLOOP,ILOOP,'SNR')
C          DIVIDE BY THE SUM OF H^2+1/SNR
	   S=1.0/SNR
           CALL  DIVCR3(B(KAD2),B(KAD2),B(KAD3),S,LRCL1/2,NROW,NSLICE)
           IFORM=3
	   CALL OPFIL(.TRUE.,FILNAM,LUN1,'N',NSAM,NROW,NSLICE,
     &		       IDUM,'OUTPUT',.FALSE.,IRTFLG)
	   IF (IRTFLG.NE.0) RETURN
	   INV=-1
	   CALL FMRS_3(B(KAD2),NSAM,NROW,NSLICE,INV)
C          WRITE THE OUTPUT
	   DO    J=1,NROW*NSLICE
 	       CALL  WRTLIN(LUN1,B(KAD2+(J-1)*LS),NSAM,J)
	   ENDDO
	   CLOSE(LUN1)
C          END OF PROCEDURE
           IF (RUNTIME) CALL ALLOCIT(0,RUNTIME,IPQ,'TF CTF',IRTFLG)
           RETURN
	ENDIF

d71 1
a71 1
        IF (IFORM.EQ.-21)  THEN
d87 1
a87 1

d89 11
a99 19
	IF (FIRST) THEN
	   NSAM=NSAM1
	   NROW=NROW1
	   NSLICE=NSLICE1
	   NTOT=LS*NROW*NSLICE
	   KAD1=1
	   KAD2=KAD1+NTOT
	   KAD3=KAD2+NTOT
	   KAD4=KAD3+NTOT
	   MEMWANT=KAD4+LS
	   CALL CHKMEM(MEMWANT,BUF,MAXMEM-LENBUF,RUNTIME,IPQ,IRTFLG)
	   IF (IRTFLG.NE.0.OR.LRCL.GT.LENBUF)  THEN
	      CALL ERRT(6,'TF CTF',NE)
	      CLOSE(LUN1)
	      RETURN
	   ENDIF
#ifdef SP_F90
         B = >IPQ
#endif
d101 2
a102 5
	   DO  I=0,NTOT-1
	      B(KAD2+I)=0.0
	      B(KAD3+I)=0.0
           ENDDO
           FIRST=.FALSE.
d104 2
d113 4
a116 2
	DO J=1,NROW*NSLICE
           CALL  REDLIN(LUN1,B(KAD1+(J-1)*LS),LRCL,J)
d119 1
a119 1
	IF (IFORM .EQ. 3) THEN
d122 1
a122 1
	   CALL FMRS_3(B(KAD1),NSAM,NROW,NSLICE,INV)
d125 1
a125 2
	      IF (RUNTIME) CALL ALLOCIT(0,RUNTIME,IPQ,'TF CTF',IRTFLG)
C	      RETURN
d130 3
a132 4
 	CALL FILGET(FILNSAM,FINPIC,NLET,IMAGE,IRTFLG)
        IF (IRTFLG .NE. 0) THEN
	RETURN
	ENDIF
d136 2
a137 1
	RETURN
a146 1
	   IF(RUNTIME) CALL ALLOCIT(0,RUNTIME,IPQ,'TF CTF',IRTFLG)
d150 1
a150 1

a152 1
	   IF(RUNTIME) CALL ALLOCIT(0,RUNTIME,IPQ,'TF CTF',IRTFLG)
d157 22
a178 4
C       MUTLIPLY INPUT VOLUME STORED IN THE MEMORY KAD1, PLACE OUTPUT
C       IN KAD2 AND SQUARED CTF IN KAD3.
	CALL MULFC3(LUN1,B(KAD1),B(KAD4),B(KAD2),B(KAD3),
     &		LRCL1/2,NROW,NSLICE)
d180 5
a184 1
	GOTO  1
@
