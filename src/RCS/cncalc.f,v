head	1.13;
access;
symbols
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.10
	Bproc:1.10
	oct21:1.9
	last77:1.8;
locks; strict;
comment	@c @;


1.13
date	2010.06.24.13.25.15;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.01.16;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.17.57.02;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.12.07.15.25.52;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.09.08.17.00.16;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.02.05.15.16.46;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	98.01.26.18.05.00;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	97.08.12.14.07.57;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.09.04.14.15.30;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	94.05.17.12.26.53;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.05.17.12.03.33;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.03.05;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.39;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.13
log
@GPL_2010
@
text
@
C ++********************************************************************
C                                                                      *
C                                                                      *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  CNCALC.F 
C
C **********************************************************************
C
C  LAST UPDATE    11/20/89 al         
C  PREVIOUS UPDATES    01/08/78 WRS     13/12/74
C
C **********************************************************************
C
C   CNCALC(AM,KAM,X,Y,NMAX)
C
C   PURPOSE:  CONTUR SUBROUTINE TO CALCULATE PLOT POINTS
C
C   PARAMETERS:   AM    2-D ARRAY FOR THIS SLICE OF IMAGE
C                 KAM   NUMBER OF PIXELS IN AM
C                 X,Y   ARRAYS FOR COORDINATES FOR THIS CONTOUR
C                 NMAX  DIMENSION OF X AND Y
C  
C   CALLED BY:    CNTRCE
C
C   CALLS:        NONE
C
C--********************************************************************

      SUBROUTINE CNCALC(AM,KAM,X,Y,NMAX,IRTFLG)

C-------- START OF EM-PLOTT-COMMON-------------------------------------
C     INTEGERS
      COMMON /CONT1/ ICALL, IDIDIT, IDONE, IDX, IDY, ILINE, INTT,
     &               IRCD, ISS, ISTART, ISUM1, ISUM2, ISUM3, IT, IV, 
     &               IXX1, IXX2, IXX3, IX, IY, JSUM1, JSUM2, JSUM3, JT,
     &               LEVEL, LW, M, MF, MI, MT, N, NDIV, NF, NI, NT, NW

C     FLOATING POINT
      COMMON /CONT2/ APDIV, APDIVX, CV, DL, PY, RA, RC, RS, SKALE, THE,
     &               SX, SY, DENSL

C     ARRAYS
      COMMON /CONT3/ INCX(3), IORGX(3), INX(8),
     &               INY(8),  IPT(3,3), IMAP(12), NG(3), NP(3)

      COMMON /CONT4/ CTRI(6),FCTR(6),CTRDEL(6),ICNDSH(6),ICNCEL

C--------END OF EM-PLOTT-COMMON----------------------------------------

      INCLUDE 'CMLIMIT.INC'
      COMMON  /UNITS/LUNC,NIN,NOUT

      DIMENSION        AM(KAM),X(NMAX),Y(NMAX)

      PARAMETER        (NSIZE = 2000)
      DIMENSION        WORK(3,NSIZE),WORK1(3,NSIZE)
      EQUIVALENCE      (BUF(1),WORK(1,1)), (BUF(6400),WORK1(1,1))
      COMMON /IOBUF/   BUF(NBUFSIZ)

      DATA      FMAX/1.E-10/

      K1  = (IY-1)*M+IX
      IT  = 0
      N   = N+1

      IF (IDX**2 + IDY**2 -1 .EQ. 0)  THEN
        IF (IDX .EQ. 0) THEN
            X(N) = IX
            Z   = IY
            DY  = IDY
            K2  = K1+IDY*M
            DVS = AM(K1) - AM(K2)
            IF (ABS(DVS) .LT. FMAX) DVS = FMAX
            Y(N) = ((AM(K1)-CV)/DVS)*DY+Z
         ELSE
            Y(N) = IY
            W    = IX
            DX   = IDX
            K2   = K1+IDX
            DVS  = AM(K1) - AM(K2)
            IF (ABS(DVS) .LT. FMAX) DVS = FMAX
            X(N) = ((AM(K1)-CV)/DVS)*DX+W
         ENDIF

      ELSE
         W   = IX
         Z   = IY
         DX  = IDX
         DY  = IDY
         K2  = K1+IDX
         K3  = K1+IDY*M
         K4  = K3+IDX
         DCP = (AM(K1)+AM(K2)+AM(K3)+AM(K4))/4.0

         IF (PY .EQ. 2.0 .OR. DCP .LE. CV) THEN
           AL   = AM(K1)-DCP
           IF (ABS(AL) .LT. FMAX) AL = FMAX
           V    = .5*(AL+DCP -CV)/AL
           X(N) = V*DX+W
           Y(N) = V*DY+Z
           PY   = 0.0
         ELSE

           IT   = 1
           AL   = AM(K4)-DCP
           IF (ABS(AL) .LT. FMAX) AL = FMAX
           V    = .5*(AL+DCP-CV)/AL
           X(N) = -V*DX+W + DX
           Y(N) = -V*DY+Z  + DY
         ENDIF
      ENDIF

      IRTFLG = 0

      IF (N .GE. (NMAX-1)) THEN 
C       ARRAY ALMOST FULL, TRY TO THIN THE CONTOUR
        DO  I = 1,N
          WORK(1,I) = X(I)
          WORK(2,I) = Y(I)
        ENDDO

        N0     = N
C       ANGLE FOR RETAINING
        RETANG = 178.0
C       NUMBER OF POINTS TO TRY TO REDUCE TO
        MAXPTS = 1400
C       NUMBER OF ITERATIONS
        MAXTRY = 1
        CALL RATHIN(WORK,N,0.0333,RETANG,MAXPTS,MAXTRY,WORK1,IRTFLG)

        WRITE(NOUT,*) 'CONTOUR LENGTH REDUCED FROM: ',N0,
     &                ' TO: ',N,' POINTS.'

        DO  I = 1,N
           X(I) = WORK(1,I) 
           Y(I) = WORK(2,I) 
        ENDDO

        IRTFLG = 1
      ENDIF

      RETURN
      END
@


1.12
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a34 1
C **************************************************************************
a39 1
C **************************************************************************
@


1.10
log
@header
@
text
@d8 24
d41 1
d47 1
@


1.9
log
@CMLIMIT.INC
@
text
@d2 12
a13 1
C++*************************************************************************
d15 1
a15 1
C  CNCALC.FOR 
@


1.8
log
@CNO_SAVE
@
text
@a28 1
CNO_SAVE 
d49 1
a54 1
      PARAMETER        (NBUFSIZ = 17008)
@


1.7
log
@used common iobuf
@
text
@d29 1
@


1.6
log
@removed EMPLOTT.INC
@
text
@a29 3
      PARAMETER  (NSIZE = 2000)


d51 7
a57 2
      DIMENSION AM(KAM),X(NMAX),Y(NMAX)
      DIMENSION WORK(3,NSIZE),WORK1(3,NSIZE)
d134 2
a135 2
          X(I) = WORK(1,I) 
          Y(I) = WORK(2,I) 
@


1.5
log
@*** empty log message ***
@
text
@d32 19
a50 1
      INCLUDE 'EMPLOTT.INC'
@


1.4
log
@fixed #endif
@
text
@a31 3
#ifdef SP_VMS
      INCLUDE 'COMMON1:EMPLOTT.INC'
#else
a32 1
#endif
a33 1
C**      COMMON  /COMMUN/ WORK(3,NSIZE),WORK1(3,NSIZE)
d96 1
a96 1
        DO  I=1,N
d101 8
a108 2
        N0 = N
        CALL RATHIN(WORK,N,0.0333,500,WORK1,IRTFLG)
d110 1
a110 1
        WRITE(NOUT,*) 'IN CNCALC, CONTOUR REDUCED FROM: ',N0,
@


1.3
log
@|| removed special vax version
@
text
@d1 1
a121 1
#endif
@


1.2
log
@cpp_lines_added
@
text
@a0 1
#ifdef VMS
d12 1
a12 1
C  $$ CNCALC(AM,KAM,X,Y,NMAX)
d27 1
a27 1
      SUBROUTINE CNCALC(AM,KAM,X,Y,NMAX)
d31 1
a31 3
#ifdef SP_UNIX
      INCLUDE 'EMPLOTT.INC'
#else
a32 81
#endif
      COMMON  /COMMUN/ WORK(3,NSIZE),WORK1(3,NSIZE)
      COMMON  /UNITS/LUNC,NIN,NOUT

      DIMENSION AM(KAM),X(NMAX),Y(NMAX)

      DATA      FMAX/1.E-10/

      K1  = (IY-1)*M+IX
      IT  = 0
      N   = N+1

      IF (IDX**2 + IDY**2 -1 .EQ. 0)  THEN
        IF (IDX .EQ. 0) THEN
            X(N) = IX
            Z   = IY
            DY  = IDY
            K2  = K1+IDY*M
            DVS = AM(K1) - AM(K2)
            IF (ABS(DVS) .LT. FMAX) DVS = FMAX
            Y(N) = ((AM(K1)-CV)/DVS)*DY+Z
         ELSE
            Y(N) = IY
            W    = IX
            DX   = IDX
            K2   = K1+IDX
            DVS  = AM(K1) - AM(K2)
            IF (ABS(DVS) .LT. FMAX) DVS = FMAX
            X(N) = ((AM(K1)-CV)/DVS)*DX+W
         ENDIF

      ELSE
         W   = IX
         Z   = IY
         DX  = IDX
         DY  = IDY
         K2  = K1+IDX
         K3  = K1+IDY*M
         K4  = K3+IDX
         DCP = (AM(K1)+AM(K2)+AM(K3)+AM(K4))/4.0

         IF (PY .EQ. 2.0 .OR. DCP .LE. CV) THEN
           AL   = AM(K1)-DCP
           IF (ABS(AL) .LT. FMAX) AL = FMAX
           V    = .5*(AL+DCP -CV)/AL
           X(N) = V*DX+W
           Y(N) = V*DY+Z
           PY   = 0.0
         ELSE

           IT   = 1
           AL   = AM(K4)-DCP
           IF (ABS(AL) .LT. FMAX) AL = FMAX
           V    = .5*(AL+DCP-CV)/AL
           X(N) = -V*DX+W + DX
           Y(N) = -V*DY+Z  + DY
         ENDIF
      ENDIF

      IF (N .GE. (NMAX-100)) THEN 

C       ARRAY ALMOST FULL, TRY TO THIN THE CONTOUR
        DO 200 I=1,N
          WORK(1,I) = X(I)
          WORK(2,I) = Y(I)
 200    CONTINUE
        N0 = N
        CALL RATHIN(WORK,N,0.05,500,WORK1,IRTFLG)

        WRITE(NOUT,*) 'IN CNCALC, CONTOUR REDUCED FROM: ',N0,
     &                ' TO: ',N,' POINTS.'

        DO 201 I = 1,N
          X(I) = WORK(1,I) 
          Y(I) = WORK(2,I) 
 201    CONTINUE
      ENDIF

      RETURN
      END

a33 7
C--********************************************************************

      SUBROUTINE CNCALC(AM,KAM,X,Y,NMAX,IRTFLG)

      PARAMETER  (NSIZE = 2000)

#ifdef SP_UNIX
a34 2
#else
      INCLUDE 'COMMON1:EMPLOTT.INC'
d36 2
a37 1
C**      COMMON  /SPI_BUF/ WORK(3,NSIZE),WORK1(3,NSIZE)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1

d32 3
d36 1
d117 97
@
