head	1.22;
access;
symbols
	pre_getangas:1.17
	GPL2010:1.17
	pre_GPL2010:1.16
	pre_var_equation:1.16
	pre_fftwrings:1.16
	pre_opfiles:1.16
	src:1.16
	best-code:1.16
	x-named-regs:1.16
	x:1.16
	v13-00:1.16
	pre_GPL:1.14
	prec_CA:1.13
	noindx:1.11
	Bproc:1.9
	oct21:1.8
	last77:1.8;
locks; strict;
comment	@c @;


1.22
date	2014.12.12.16.08.33;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2014.02.07.18.55.26;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2014.02.03.14.43.32;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2014.02.03.14.23.39;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2014.01.12.19.45.16;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.06.24.13.25.10;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.19.56.49;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.17.53.20;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.08.04.14.07.31;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.20.21.42.18;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.20.21.41.01;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.11.14.07.43;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.10.19.16.08.20;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.11.10.23.09.09;	author yuchen;	state Exp;
branches;
next	1.8;

1.8
date	97.12.01.21.58.21;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	97.12.01.21.57.46;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.12.01.21.56.25;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.10.17.15.18.33;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.10.31.20.57.31;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.01.12.22.03.02;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.02.44;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.29;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.22
log
@echo formatting
@
text
@
C++*********************************************************************
C
C BPWR.F 
C              R**2 weighting                              03/04/92
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C BPWR 
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

         SUBROUTINE BPWR(MAXMEM)

         INCLUDE 'CMBLOCK.INC'
         INCLUDE 'CMLIMIT.INC'
         INCLUDE 'F90ALLOC.INC'

         COMMON /IOBUF/ BUF(NBUFSIZ)

         CHARACTER (LEN=MAXNAM) :: FINPAT,FINPIC,FOUT
         CHARACTER (LEN=1)      :: NULL = CHAR(0)

         REAL, ALLOCATABLE      :: Q1(:), Q2(:)
         REAL                   :: PLIST(20)

         INTEGER, PARAMETER     :: NILMAX = 2000 
         INTEGER                :: ILIST(NILMAX)
 
         DATA                    INPIC/99/

         CALL FILERD(FINPAT,NLET,NULL,
     &      'TEMPLATE FOR 2-D IMAGES~',IRTFLG)

         CALL  FILERD(FOUT,NLOT,NULL,
     &      'TEMPLATE FOR 2-D OUTPUT IMAGES~',IRTFLG)

         CALL FILERD(FINPIC,NLETI,NULL,'SELECTION DOC',IRTFLG)

         CALL RDPRM(FM,NOT_USED,
     &      'CUT-OFF FREQUENCY FOR PARZEN FILTER')
         K    = 0
         K2   = 1
         NANG = 0
778      LERR = -1
         IF (NANG == NILMAX)  THEN
            WRITE(NOUT,*) '*** TOO MANY IMAGES, LIST TRUNCATED'
            GOTO  779
         ENDIF

         KP1 = K+1
         CALL  UNSAV(FINPIC,K,INPIC,KP1,PLIST,1,LERR,K2)
         IF (LERR == 0)  THEN
            NANG        = NANG+1
            ILIST(NANG) = PLIST(1)
            K           = K+1
            GOTO 778
         ENDIF

779      CLOSE(INPIC)
         WRITE(NOUT,2001) NANG
2001     FORMAT('  NUMBER OF IMAGES:',I0)

         CALL  FILGET(FINPAT,FINPIC,NLET,ILIST(1),INTFLG)
         MAXIM = 0
         CALL OPFILEC(0,.FALSE.,FINPIC,INPIC,'O',IFORM,NSAM,NROW,NSL,
     &               MAXIM,' ',.FALSE.,IRTFLG)
         IF (IRTFLG .NE. 0) RETURN
         CLOSE(INPIC)

         N2S = 2*NSAM
         N2R = 2*NROW

         ALLOCATE(Q1(N2R*(N2S+2)),Q2(N2R*(N2S+2)), STAT=IRTFLG)
         IF (IRTFLG .NE. 0) THEN
            MWANT = 2*N2R*(N2S+2)  
            CALL ERRT(46,'BPRW; Q1...',MWANT)
         ENDIF

	 IF (FM .GE. 0.0)  THEN
            WRITE(NOUT,1001)  N2S,N2R
1001        FORMAT(//'  R**2 Weighting of 2D images',/,
     &               '  Dimensions used:',2I8,/)
	 ELSE
            WRITE(NOUT,1003)  N2S,N2R
1003        FORMAT(//'  R*   Weighting of 2D images',/,
     &               '  Dimensions used:',2I8,/)
	 ENDIF

         IF (MEMTOT .GT. MAXMEM)  THEN
            CALL ERRT(102,'BUFFER LENGTH IS ONLY',MAXMEM)
            RETURN
         ENDIF

         CALL  BPWR_Q(BUF,Q1,Q2,FM,ILIST,NANG,N2S,N2R,
     &                NSAM,NROW,FINPAT,NLET,FOUT,NLOT)

         IF (ALLOCATED(Q1))  DEALLOCATE(Q1)
         IF (ALLOCATED(Q2))  DEALLOCATE(Q2)

         END
@


1.21
log
@pass finpat...
@
text
@d103 2
a104 2
1001        FORMAT(//'  R**2 WEIGHTING OF 2D IMAGES',/,
     &               '  DIMENSIONS USED:',2I8,/)
d107 2
a108 2
1003        FORMAT(//'  R*   WEIGHTING OF 2D IMAGES',/,
     &               '  DIMENSIONS USED:',2I8,/)
@


1.20
log
@mwant bug
@
text
@d5 1
d29 1
a29 2
C BPWR.FOR
C R**2 weighting,                             03/04/92
d40 2
d46 1
d48 4
a51 4
         PARAMETER  (NILMAX=2000)
         COMMON      DUMMY(80),BUF(1024),ILIST(NILMAX),Q(1)

         DATA  INPIC/99/
d67 1
a67 1
         IF (NANG .EQ. NILMAX)  THEN
d73 2
a74 2
         CALL  UNSAV(FINPIC,K,INPIC,KP1,Q,1,LERR,K2)
         IF (LERR .EQ. 0)  THEN
d76 1
a76 1
            ILIST(NANG) = Q(1)
d84 1
d116 2
a117 1
         CALL  BPWR_Q(BUF,Q1,Q2,FM,ILIST,NANG,N2S,N2R,NSAM,NROW)
@


1.19
log
@cosmetic, common removal, prompts
@
text
@d93 1
a93 1
            MWANT = N2R*(N2S+2)) + (N2R*(N2S+2) 
@


1.18
log
@enter
@
text
@d39 5
a43 2
         CHARACTER*80      FINPAT,FINPIC,FOUT
         COMMON  /F_SPEC/  FINPAT,FINPIC,FOUT,NLET,NLOT
d46 1
a46 4
         COMMON     DUMMY(80),BUF(1024),ILIST(NILMAX),Q(1)
         REAL, DIMENSION(:), ALLOCATABLE :: Q1,Q2

         CHARACTER * 1  NULL
d50 2
a51 4
         NULL = CHAR(0)

         CALL  FILERD(FINPAT,NLET,NULL,
     &      'TEMPLATE FOR 2-D IMAGE NAME',IRTFLG)
d54 1
a54 1
     &      'TEMPLATE FOR 2-D OUTPUT IMAGE',IRTFLG)
d56 1
a56 1
         CALL  FILERD(FINPIC,NLETI,NULL,'SELECTION DOC',IRTFLG)
d58 2
a59 2
         CALL  RDPRM(FM,NOT_USED,
     &      'CUT-OFF FREQUENCY OF PARZEN FILTER')
d64 2
a65 2
         IF(NANG.EQ.NILMAX)  THEN
            WRITE(NOUT,*) '*** Too many images, list truncated'
d71 5
a75 5
         IF (LERR.EQ.0)  THEN
            NANG = NANG+1
            ILIST(NANG)=Q(1)
            K=K+1
            GOTO  778
d80 1
a80 1
2001     FORMAT(' Number of images=',I5)
d91 7
a97 5
        ALLOCATE(Q1(N2R*(N2S+2)),Q2(N2R*(N2S+2)), STAT=IRTFLG)
        IF (IRTFLG.NE.0) THEN 
           CALL ERRT(46,'BP R2',IER)
        ENDIF
	 IF (FM.GE.0.0)  THEN
d99 2
a100 3
1001        FORMAT(//'  R**2 weighting of 2D images',/,
C     &               '  Memory needed - ',I8,/,
     &               '  Dimensions used:',2I8,/)
d103 2
a104 3
1003        FORMAT(//'  R*   weighting of 2D images',/,
C     &               '  Memory needed - ',I8,/,
     &               '  Dimensions used:',2I8,/)
d106 1
d108 1
a108 1
            CALL ERRT(102,'YOUR BUFFER LENGTH IS ONLY',MAXMEM)
d113 1
d116 1
@


1.17
log
@GPL_2010
@
text
@d53 1
a53 1
     &      'ENTER TEMPLATE FOR 2-D IMAGE NAME',IRTFLG)
d56 1
a56 1
     &      'ENTER TEMPLATE FOR 2-D OUTPUT IMAGE',IRTFLG)
@


1.16
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.15
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a6 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
a30 1
C **************************************************************************
a36 1
C--************************************************************************
@


1.14
log
@pp memory allocation with allocate now
@
text
@d2 1
d7 1
d9 1
d11 24
d41 1
d48 1
@


1.13
log
@*** empty log message ***
@
text
@d25 2
d32 1
d81 4
a84 3
         K1     = 1
         K2     = K1+N2R*(N2S+2)
         MEMTOT = K2+N2R*(N2S+2)
d86 1
a86 1
            WRITE(NOUT,1001)  MEMTOT,N2S,N2R
d88 1
a88 1
     &               '  Memory needed - ',I8,/,
d91 1
a91 1
            WRITE(NOUT,1003)  MEMTOT,N2S,N2R
d93 1
a93 1
     &               '  Memory needed - ',I8,/,
d101 3
a103 1
         CALL  BPWR_Q(BUF,Q(K1),Q(K2),FM,ILIST,NANG,N2S,N2R,NSAM,NROW)
@


1.12
log
@opfilec
@
text
@d5 1
a5 1
ORC
@


1.11
log
@nloop,iloop_removed
@
text
@d4 2
a5 2
C BPWR.FOR
C
d67 1
a67 1
2001     FORMAT('  Number of images =',I5)
d70 1
a70 1
         CALL OPFILE(.FALSE.,FINPIC,INPIC,'O',IFORM,NSAM,NROW,NSL,
@


1.10
log
@openfb--> opfile & cosmetic
@
text
@d45 1
a45 1
         CALL  RDPRM(FM,NLOOP,ILOOP,
@


1.9
log
@a
@
text
@d23 1
d38 2
a39 1
     &      'Enter template for 2-D image name',IRTFLG)
d41 4
a44 2
     &      'Enter template for 2-D output image',IRTFLG)
         CALL  FILERD(FINPIC,NLETI,NULL,'Selection doc',IRTFLG)
d46 1
a46 1
     &      'Cut-off frequency of Parzen filter')
d69 4
a72 5
         CALL  OPENFB(BUF,FINPIC,INPIC,NSAM,NROW,'O',NF,NSL)
         IF (NF .NE. 2)  THEN
            WRITE(NOUT,*) '*** File not found'
            RETURN
         ENDIF
d81 13
a93 15
	IF(FM.GE.0.0)  THEN
         WRITE(NOUT,1001)  MEMTOT,N2S,N2R
1001     FORMAT(//'  R**2 weighting of 2D images',/,
     1   '  Memory needed - ',I8,/,
     2   '  Dimensions used:',2I8,/)
	ELSE
         WRITE(NOUT,1003)  MEMTOT,N2S,N2R
1003     FORMAT(//'  R*   weighting of 2D images',/,
     1   '  Memory needed - ',I8,/,
     2   '  Dimensions used:',2I8,/)
	ENDIF
         IF (MEMTOT.GT.MAXMEM)  THEN
            WRITE(NOUT,1002)  MAXMEM
1002        FORMAT('  Sorry, your buffer length is only',I9,/,
     1             '  Program cannot be run')
@


1.8
log
@\.
@
text
@d33 1
a33 1
CNO_SAVE
@


1.7
log
@*** empty log message ***
@
text
@d84 2
a85 2
         WRITE(NOUT,1001)  MEMTOT,N2S,N2R
1002     FORMAT(//'  R*   weighting of 2D images',/,
@


1.6
log
@corrected
@
text
@d78 1
d83 6
@


1.5
log
@R.
R
@
text
@d72 2
a73 12
         M2 = LOG2_P(NSAM)
801      IF (2**M2.LE.NSAM)  THEN
            M2 = M2+1
            GOTO  801
         ENDIF
         N2S = 2**M2
         M2  = LOG2_P(NROW)
802      IF (2**M2.LE.NROW)  THEN
            M2=M2+1
            GOTO  802
         ENDIF
         N2R    = 2**M2
@


1.4
log
@buf passed
@
text
@d65 1
a65 1
         CALL  OPENFB(BUF,FINPIC,INPIC,NSAM,NROW,'R',NF,NSL)
@


1.3
log
@nosave
@
text
@a22 2

#ifdef SP_UNIX
a23 4
#else
         INCLUDE 'COMMON1:CMBLOCK.INC'
#endif

d99 1
a99 3
         CALL  BPWR_Q(Q(K1),Q(K2),FM,ILIST,NANG,N2S,N2R,NSAM,NROW)

         RETURN
@


1.2
log
@cpp_lines_added
@
text
@d39 1
a39 1

@


1.1
log
@Initial revision
@
text
@d24 3
d28 1
@
