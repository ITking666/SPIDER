head	1.14;
access;
symbols
	pre_getangas:1.14
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.13
	pre_fftwrings:1.13
	pre_opfiles:1.13
	src:1.13
	best-code:1.13
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.9
	Bproc:1.7
	oct21:1.7
	last77:1.6;
locks; strict;
comment	@c @;


1.14
date	2010.06.24.13.27.06;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.12.19.18.17.10;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.50.59;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.18.41.23;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.20.17.13.37;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2001.08.06.12.40.50;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.05.20.21.52;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.08.09.14.47.42;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.02.05.14.40.16;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.10.15.15.14.45;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.01.06.15.00.42;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	96.10.09.15.54.44;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.11.47;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.19;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.14
log
@GPL_2010
@
text
@
C++*********************************************************************
C
C   TILT.F
C                    USED OPFILE                  NOV 00 ARDEAN LEITH
C                    OPFILEC                      FEB  03 ARDEAN LEITH
C                    RDPRAF REMOVED               DEC  05 ARDEAN LEITH 
c
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   TILT(LUN)
C
C    PARAMETERS:     LUN     LOGICAL UNIT NUMBER OF FILE
C
C--*********************************************************************

	SUBROUTINE TILT(LUN)

        INCLUDE 'CMBLOCK.INC'  
        INCLUDE 'LABLOCK.INC'  
        INCLUDE 'CMLIMIT.INC' 

        INTEGER               :: NUMBER(200)
        CHARACTER(LEN=MAXNAM) :: FILNAM,FILPAT
        CHARACTER(LEN=1)      :: NULL
        REAL                  :: VALUES(3),FWA(4)
        REAL, PARAMETER       :: PI = 3.14159

        NULL = CHAR(0)

C       GET IMAGE FILE NAMES
4004    WRITE(NOUT,*) 'FOR IMAGE FILE NAMES:'
        NPROJ = 200
        CALL FILSEQP(FILPAT,NLET,NUMBER,200,NPROJ, 
     &     'FILE PREFIX OR TEMPLATE (EG. PIC****)',IRTFLG)
     
        CALL FILGET(FILPAT,FILNAM,NLETF,1,IRTFLG)
        MAXIM = 0
        CALL OPFILEC(0,.FALSE.,FILNAM,LUN,'O',IFORM,NSAM,NROW,NDUM,
     &                   MAXIM,' ',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) IERR=4
	IF (IFORM .NE .-1) IERR=2
	IF (IERR  .NE. 0)  GOTO 999

C       FIRST FILE ASSUMED TO BE THE AXIAL PROJ. IT IS ONLY OPENED
C       TO KEEP DIMENSIONS FOR CHECKING AGAINST DIMS. OF SUBSEQUENT FILES.

	NSAM1=NSAM
	NROW1=NROW
	CLOSE(LUN)

	DO IPROJ=2,NPROJ

          CALL FILGET(FILPAT,FILNAM,NLETF,IPROJ,IRTFLG)

          MAXIM = 0
          CALL OPFILEC(0,.FALSE.,FILNAM,LUN,'O',IFORM,NSAM,NROW,NDUM,
     &                   MAXIM,' ',.TRUE.,IRTFLG)
          IF (IRTFLG .NE. 0)    IERR=4
          IF (IFORM .NE. -1)    IERR=2
          IF (NSAM  .NE. NSAM1) IERR=1
          IF (NROW  .NE. NROW1) IERR=1
          IF (IERR  .NE. 0) GOTO 999

           CALL RDPRA('AXIAL VIEW: UNIT VECT. AX,AY, BX,BY',
     &         4,0,.FALSE.,FWA,NVAL,IRTFLG)

           ARX = FWA(1)
           ARY = FWA(2)
           BRX = FWA(3)
           BRY = FWA(4)

           WRITE(NOUT,33)ARX,ARY,BRX,BRY
33         FORMAT(2X,4F8.2)

           CALL RDPRA('TILTD VIEW: UNIT VECT. AX,AY, BX,BY',
     &         4,0,.FALSE.,FWA,NVAL,IRTFLG)

           ATX = FWA(1)
           ATY = FWA(2)
           BTX = FWA(3)
           BTY = FWA(4)

          CALL TILTFD(ARX,ARY,BRX,BRY,ATX,ATY,BTX,BTY,GAMR,GAMT,
     &               PHI,THA,GAMT2,IER)
          IF (IER .NE. 0) THEN
            IERR = 35
            GOTO 999
          ENDIF

45        PHID=PHI*180./PI
          THAD=THA*180./PI
          GAMR=GAMR*180./PI
          GAMT=GAMT*180./PI
          GAMT2=GAMT2*180./PI

          WRITE(NOUT,50)IPROJ,PHID,THAD,GAMR,GAMT,GAMT2
50        FORMAT(' PROJ. NO.',I3,'PHI=',F8.2,'  THETA=',F8.2,/
     &      ' ANGLE BETW. UNIT VECTORS IN AXIAL PROJ.',F8.2,/
     &      ' ANGLE BETW. UNIT VECTORS IN TILTED PROJ.',F8.2,/
     &      ' ANGLE CHECK',F8.2)

          IRTFLG = -1      
          VALUES(1) = 1.0  
          VALUES(2) = PHI
          VALUES(3) = THA
          CALL SETLAB(LUN,NSAM,FDUM,14,3,VALUES,'F',IRTFLG)
          VALUES(1) = 1.0
          CALL SETLAB(LUN,NSAM,FDUM,21,1,VALUES,'U',IRTFLG)

          CLOSE(LUN)
	ENDDO

	RETURN


999	CALL ERRT(IERR,'TILT  ',NE)
	RETURN
	END

@


1.13
log
@used rdpra instead of rdpraf
@
text
@a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.12
log
@GPL License fixed
@
text
@d5 3
a7 2
C                                   USED OPFILE    NOV 00 ARDEAN LEITH
C                                   OPFILEC        FEB  03 ARDEAN LEITH
d47 5
a51 12
	COMMON BUF(1)

        INTEGER         NUMBER(200)
        CHARACTER(LEN=MAXNAM)   :: FILNAM,FILPAT
        COMMON /COMMUN/ NUMBER,FILNAM,FILPAT

        DIMENSION       VALUES(3)
        REAL            FWA(4)
        CHARACTER       NULL

	DATA PI/3.14159/
        DATA AMIN/-10E30/,AMAX/10E30/
d76 1
a76 1
	DO  IPROJ=2,NPROJ
d89 2
a90 4
           NVAL   = 4
           IRTFLG = 0
           CALL RDPRAF(FWA,4,NVAL,AMIN,AMAX,
     &       'AXIAL VIEW: UNIT VECT. AX,AY, BX,BY:','T',IRTFLG)
d98 1
a98 1
33         FORMAT(1X,4F8.2)
d100 2
a101 4
           NVAL = 4
           IRTFLG = 0
           CALL RDPRAF(FWA,4,NVAL,AMIN,AMAX,
     &        'TILTD VIEW: UNIT VECT. AX,AY, BX,BY:','T',IRTFLG)
d109 1
a109 1
     &       PHI,THA,GAMT2,IER)
d131 1
a131 1
          CALL SETLAB(LUN,NSAM,BUF,14,3,VALUES,'F',IRTFLG)
d133 1
a133 1
          CALL SETLAB(LUN,NSAM,BUF,21,1,VALUES,'U',IRTFLG)
@


1.11
log
@HRI GPL License used
@
text
@a2 1
C++*************************************************************************
a8 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a32 1
C **************************************************************************
a38 1
C--*************************************************************************
@


1.10
log
@opfilec
@
text
@d2 1
d9 1
d11 1
d13 24
d43 1
d50 1
@


1.9
log
@NECHO --> NOUT
@
text
@d5 2
a6 1
C                                   USED OPFILE NOV 00 ARDEAN LEITH
d28 1
d33 1
a33 1
        CHARACTER *81   FILNAM,FILPAT
d53 1
a53 1
        CALL OPFILE(.FALSE.,FILNAM,LUN,'O',IFORM,NSAM,NROW,NDUM,
d71 1
a71 1
          CALL OPFILE(.FALSE.,FILNAM,LUN,'O',IFORM,NSAM,NROW,NDUM,
d89 2
a90 3
          WRITE(NOUT,33)ARX,ARY,BRX,BRY
33        FORMAT(1X,4F8.2)

@


1.8
log
@used opfile
@
text
@d80 1
a80 1
     &       '$.AXIAL VIEW: UNIT VECT. AX,AY, BX,BY:','T',IRTFLG)
d87 1
a87 1
          WRITE(NECHO,33)ARX,ARY,BRX,BRY
d94 1
a94 1
     &        '$.TILTD VIEW: UNIT VECT. AX,AY, BX,BY:','T',IRTFLG)
@


1.7
log
@'t' used in rdpraf call.
@
text
@d5 1
a28 1
        COMMON /COMMUN/ NUMBER,FILNAM,FILPAT
a29 1
        DIMENSION       VALUES(3)
d32 1
d34 2
a39 2
        INTEGER NVAL, IRTFLG
        REAL FWA(4)
d41 1
a41 1
        NULL=CHAR(0)
d50 6
a55 1
	CALL OPENF(FILNAM,LUN,NSAM,NROW,'OLD',NF,NDUM)
a59 3
	IF (NF .EQ. 1)   IERR=4
	IF (IFORM .NE .-1) IERR=2
	IF (IERR  .NE. 0)  GOTO 999
d68 4
a71 2
          CALL OPENF(FILNAM,LUN,NSAM,NROW,'OLD',NF,NDUM)
          IF (NF    .EQ. 1)     IERR=4
d75 1
a75 1
          IF (IERR  .NE. 0)GOTO 999
@


1.6
log
@CNO_SAVE
@
text
@a23 2
CNO_SAVE 
 
d73 1
a73 1
           NVAL = 4
d76 1
a76 1
     &       '$.AXIAL VIEW: UNIT VECT. AX,AY, BX,BY:',NULL,IRTFLG)
d90 1
a90 1
     &        '$.TILTD VIEW: UNIT VECT. AX,AY, BX,BY:',NULL,IRTFLG)
@


1.5
log
@*** empty log message ***
@
text
@d4 1
a4 1
C   TILT.FOR
d24 1
d49 1
a49 1
     $     'FILE PREFIX OR TEMPLATE (EG. PIC****)',IRTFLG)
d78 1
a78 1
     $       '$.AXIAL VIEW: UNIT VECT. AX,AY, BX,BY:',NULL,IRTFLG)
d92 1
a92 1
     $        '$.TILTD VIEW: UNIT VECT. AX,AY, BX,BY:',NULL,IRTFLG)
d100 1
a100 1
     1       PHI,THA,GAMT2,IER)
d114 3
a116 3
     1      ' ANGLE BETW. UNIT VECTORS IN AXIAL PROJ.',F8.2,/
     2      ' ANGLE BETW. UNIT VECTORS IN TILTED PROJ.',F8.2,/
     3      ' ANGLE CHECK',F8.2)
@


1.4
log
@removed errorones ibcnt increment, cosmetic
@
text
@d63 1
a63 1
	DO 100 IPROJ=2,NPROJ
d126 1
a126 1
100	CONTINUE
@


1.3
log
@change filseq to filseqp call
@
text
@d4 1
a4 1
C $$ TILT.FOR
d16 1
a16 1
C $$ TILT(LUN)
d48 1
a48 1
     $  'FILE PREFIX OR TEMPLATE (EG. PIC****)',IRTFLG)
d53 2
a54 2
C FIRST FILE ASSUMED TO BE THE AXIAL PROJ. IT IS ONLY OPENED
C TO KEEP DIMENSIONS FOR CHECKING AGAINST DIMS. OF SUBSEQUENT FILES.
a73 10
C+++++
C
C         ML 4/9/93
C
C          WRITE(NOUT,31)
C31        FORMAT('$.AXIAL VIEW: UNIT VECT. AX,AY, BX,BY:')
C
C          READ(NIN,32)ARX,ARY,BRX,BRY
C32        FORMAT(4F8.2)

d77 1
a77 1
     $      '$.AXIAL VIEW: UNIT VECT. AX,AY, BX,BY:$',NULL,IRTFLG)
a83 2
C-----

a86 9
C+++++
C
C         ML 4/9/93
C
C          WRITE(NOUT,41)
C41        FORMAT('$.TILTD VIEW: UNIT VECT. AX,AY, BX,BY:')
C
C          READ(NIN,32)ATX,ATY,BTX,BTY
C          WRITE(NECHO,33)ATX,ATY,BTX,BTY
d91 1
a91 1
     $      '$.TILTD VIEW: UNIT VECT. AX,AY, BX,BY:$',NULL,IRTFLG)
a97 3
C-----

          IBCNT = IBCNT+2
@


1.2
log
@cpp_lines_added
@
text
@d24 3
a26 12
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif

C       CONTAINS IANGLE,PHI,THETA
#ifdef SP_UNIX
        INCLUDE 'LABLOCK.INC'      
#else
        INCLUDE 'COMMON1:LABLOCK.INC'      
#endif
d47 2
a48 1
        CALL FILSEQ(FILPAT,NLET,NUMBER,200,NPROJ,IRTFLG)
@


1.1
log
@Initial revision
@
text
@d24 3
d28 1
d31 3
d35 1
@
