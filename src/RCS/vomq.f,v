head	1.18;
access;
symbols
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.14
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.13
	prec_CA:1.10
	noindx:1.7
	Bproc:1.5
	oct21:1.2;
locks; strict;
comment	@c @;


1.18
date	2013.02.15.19.28.46;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2013.01.16.18.51.57;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.27.15;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.04.15.38.07;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.21.08.26;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2004.12.30.20.22.56;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2004.06.29.14.29.57;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.24.20.16.36;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.29.13.48.13;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.25.14.25.12;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.16.16.30.19;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.11.14.09.07;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.21.18.04.08;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.12.23.16.56.05;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	99.12.23.02.28.17;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	99.12.23.01.44.03;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	99.08.24.14.07.13;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	99.08.24.14.01.14;	author pawel;	state Exp;
branches;
next	;


desc
@VO MQ
@


1.18
log
@labels in doc file for cols
@
text
@C++*********************************************************************
C
C VOMQ.F          REWRITTEN                         JUL 03 ArDean Leith
C                 'AP SH' SUPPORT                   MAY 04 ArDean Leith
C                 MIRROR FLAG ADDED TO OUTPUT       DEC 04 ArDean Leith
C                 MIRROR FLAG BUG                   APR 06 ArDean Leith
C                 LABELS IN DOC FILE                FEB 13 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2013  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C VOMQ
C
C PURPOSE: CREATES SELECTION DOC FILE FROM 'AP SH' OR 'AP REF' OUTPUT
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE VOMQ

	INCLUDE 'CMBLOCK.INC'
	INCLUDE 'CMLIMIT.INC'
        INCLUDE 'F90ALLOC.INC'

        REAL, POINTER          :: APMQBUF(:,:)
        CHARACTER(LEN=MAXNAM)  :: FILNAM,FILPAT,DOCNAM,GRPDOCFIL
        CHARACTER(LEN=80    )  :: COMMEN,COMMEN2
        CHARACTER(LEN=1)       :: NULL = CHAR(0)
        REAL                   :: DLIST(4)
        INTEGER                :: ITOTAL
        LOGICAL                :: NEWFILE

        INTEGER, PARAMETER     :: LUND1  = 80
        INTEGER, PARAMETER     :: LUND2T = 81
        INTEGER, PARAMETER     :: LUND3T = 82


        CALL RDPRM(CCTHRESH,NOT_USED,'CCC THRESHOLD')

C       'AP SH' DOC FILE COLUMNS
C       PSI,THE,PHI, MIR-REF#, EXP#, INPLANE<, SX,SY, NPROJ, DIFF, CCROT,
C             INPLANE<,SXNEW,SYNEW,MIR-NEW
C       'AP MQ' DOC FILE COLUMNS
C       MIR-REF#, CCROT, INPLANE<, SX, XY, EXP#

C       RETRIEVE  APMQ/APSH  DOC FILE CONTENTS (CLOSES LUND1)
        MAXYT = 0
        MAXXT = 0
        CALL GETDOCDAT('ALIGNMENT DOC FILE',.TRUE.,DOCNAM,LUND1,
     &                .TRUE.,MAXXT,MAXYT,APMQBUF,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        MAXREF = 0
        CALL RDPRI1S(MAXREF,NOT_USED,
     &               'NUMBER OF REFERENCES USED IN ALIGNMENT',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 999

C       FIND NAME FOR OUTPUT DOC FILE 
        NMAX = 0
        CALL FILELIST(.TRUE.,NDUM,FILPAT,NLET,IDUM,NMAX,IDUM,
     &       'TEMPLATE FOR REFERENCE SELECTION DOC FILES',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 999

C       OPEN GROUP OUTPUT DOC FILE 
        CALL OPENDOC(GRPDOCFIL,.TRUE.,NLETG,LUND2T,LUND2,.TRUE.,
     &              'REFERENCE SUMMARY OUTPUT',.FALSE.,.TRUE.,
     &              .TRUE.,NEWFILE,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 999


C                 123456789 123456789 123456789 123456789 
        COMMEN = 'Ref.  # OF IMAGES'               
        CALL LUNDOCPUTCOM(LUND2,COMMEN(1:20),IRTFLG)

C                 123456789 123456789 123456789 123456789 123456789
        COMMEN = 'Key   EXP IMAGE         CC     <0 IS MIRRORED'               

C                 123456789 123456789 123456789 123456789 123456789
        COMMEN2= '  MATCHES FOR REFERENCE:xxxxxx'               

C	# OF IMAGES FOR THIS GROUP
        ITOTAL = 0.0

C       LOOP OVER REF  IMAGES SETS FROM APMQ/APSH DOC FILE
	DO IREF = 1,MAXREF

           CALL FILGET(FILPAT,FILNAM,NLET,IREF,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 999

C          OPEN CURRENT GROUP REF. SELECTOR OUTPUT FILE, NO OPEN ECHO
           IRTFLG = -9
           CALL OPENDOC(FILNAM,.TRUE.,NLETD,LUND3T,LUND3,.FALSE.,
     &              ' ',.FALSE.,.TRUE.,.TRUE.,NEWFILE,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 999
        
           WRITE(COMMEN2(25:),'(I6)',ERR=999) IREF
           CALL LUNDOCPUTCOM(LUND3,COMMEN2(1:30),IRTFLG)
           CALL LUNDOCPUTCOM(LUND3,COMMEN(1:45),IRTFLG)
       
C          LOOP OVER ALL IMAGES IN APMQ/APSH  DOC FILE
           IKEY = 0
	   DO IMG = 1,MAXYT

             IREFNOW = 0
             ICOUNT  = APMQBUF(1,IMG)
             IF (ICOUNT > 0 .AND. ICOUNT < 11) THEN
C               KEY USED IN APMQBUF, APMQ STYLE INPUT

                IREFNOW = ABS(APMQBUF(2,IMG))
                CCCNOW  = APMQBUF(3,IMG) 
                IMGNOW  = APMQBUF(7,IMG)
                FMIRNOW = APMQBUF(2,IMG)
            
             ELSEIF (ICOUNT > 0) THEN
C               KEY USED IN APMQBUF, APSH STYLE INPUT
                IREFNOW = ABS(APMQBUF(5,IMG))
                CCCNOW  = APMQBUF(12,IMG) 
                IMGNOW  = APMQBUF(6,IMG)
                IF (ICOUNT >= 15) THEN
                    FMIRNOW = APMQBUF(16,IMG)
                ELSE
                    FMIRNOW = 0.0
                ENDIF
             ENDIF

             IF (IREFNOW == IREF .AND. CCCNOW > CCTHRESH) THEN
C               THIS KEY IS PRESENT IN APMQBUF
                IKEY     = IKEY + 1

C               ADD LINE TO CURRENT GROUP REF. SELECTOR OUTPUT FILE
                DLIST(1) = IMGNOW
                DLIST(2) = CCCNOW
                DLIST(3) = 1.0
                IF (FMIRNOW < 0.0) DLIST(3) = -1.0

                CALL LUNDOCWRTDAT(LUND3,IKEY,DLIST,3,IRTFLG)
             ENDIF
          ENDDO

          IF (IREF <= 1 .AND. VERBOSE) WRITE(NOUT,90)
90        FORMAT('  Reference number    No. of images')

          IF (VERBOSE) WRITE(NOUT,91) IREF,IKEY
91        FORMAT(1X,I6,8X,I8)

C         CLOSE CURRENT GROUP REF. SELECTOR OUTPUT FILE
          CLOSE(LUND3T)

          ITOTAL = ITOTAL + IKEY

C         ADD LINE TO CURRENT GROUP TOP-LEVEL OUTPUT FILE
          DLIST(1) = IKEY
          CALL LUNDOCWRTDAT(LUND2,IREF,DLIST,1,IRTFLG)

        ENDDO
         
        WRITE(NOUT,93) ITOTAL
93      FORMAT('  Total number of images above CCC threshold: ',I9)

999     IF (ASSOCIATED(APMQBUF)) DEALLOCATE(APMQBUF)
        NULLIFY(APMQBUF)

	CLOSE(LUND2T)
        CLOSE(LUND3T)

        END
@


1.17
log
@prompt
@
text
@d7 1
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d33 1
a33 2
C PURPOSE:  CREATES SELECTION DOC FILE FROM OUTPUT OF 'AP SH' OR
C           'AP REF'
a41 1

a42 7
        REAL, DIMENSION(:,:), POINTER   :: APMQBUF
        CHARACTER(LEN=MAXNAM)           :: FILNAM,FILPAT,DOCNAM
        CHARACTER(LEN=MAXNAM)           :: GRPDOCFIL
        CHARACTER(LEN=1)                :: NULL
        REAL,DIMENSION(4)               :: DLIST
        INTEGER                         :: TOTEL
        LOGICAL                         :: NEWFILE
d44 11
a54 1
        DATA  LUND1,LUND2T,LUND3T /70,71,72/
a55 1
        NULL = CHAR(0)
d59 1
a59 1
C       AP SH
d62 1
a62 1
C       AP MQ
d68 1
a68 1
        CALL GETDOCDAT('APMQ DOCUMENT FILE',.TRUE.,DOCNAM,LUND1,
d73 2
a74 1
        CALL RDPRI1S(MAXREF,NOT_USED,'NUMBER OF REFERENCES USED',IRTFLG)
d80 1
a80 1
     &       'TEMPLATE FOR REFERENCE SELECTION DOCUMENT FILES',IRTFLG)
d89 11
d101 1
a101 1
        TOTEL = 0.0
d114 4
d125 1
a125 1
             IF (ICOUNT .GT. 0 .AND. ICOUNT .LT. 11) THEN
d133 1
a133 1
             ELSEIF (ICOUNT .GT. 0) THEN
d138 1
a138 1
                IF (ICOUNT .GE. 15) THEN
d145 1
a145 1
             IF (IREFNOW .EQ. IREF .AND. CCCNOW .GT. CCTHRESH) THEN
d153 1
a153 1
                IF (FMIRNOW .LT. 0.0) DLIST(3) = -1.0
d159 1
a159 1
          IF (IREF .LE. 1 .AND. VERBOSE) WRITE(NOUT,90)
d161 1
d168 1
a168 1
          TOTEL = TOTEL + IKEY
d176 1
a176 1
        WRITE(NOUT,93) TOTEL
@


1.16
log
@GPL_2010
@
text
@d33 1
a33 1
C           'AP MQ'
d78 1
a78 1
     &                'REFERENCE SELECTION DOCUMENT FILES',IRTFLG)
@


1.15
log
@fmirnow bug (too few cols)
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@GPL License fixed
@
text
@d6 1
d70 1
a70 1
        MAXXT = 12
@


1.13
log
@MIRROR FLAG ADDED TO OUTPUT
@
text
@d1 1
a1 1
C++************************************************************************
d8 23
a30 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
d39 1
a39 1
C--************************************************************************
@


1.12
log
@label PSI,THE,PHI wrong
@
text
@d5 1
d18 1
a18 1
C PURPOSE:  CREATES SELECTION DOC FILE FROM THE OUTPUT OF 'AP SH' OR
d34 1
a34 1
        REAL,DIMENSION(3)               :: DLIST
d45 1
a45 1
C       PSI,THE,PHI,, MIR-REF#, EXP#, INPLANE<, SX,SY, NPROJ, DIFF, CCROT,
d100 2
a101 1

d107 5
d115 1
a115 1
C               KEY USED IN APMQBUF
d121 4
a124 1
                CALL LUNDOCWRTDAT(LUND3,IKEY,DLIST,2,IRTFLG)
d136 1
a136 1
          TOTEL    = TOTEL + IKEY
@


1.11
log
@handles 'ap sh' files now
@
text
@d44 1
a44 1
C       PHI,THE,PSI, MIR-REF#, EXP#, INPLANE<, SX,SY, NPROJ, DIFF, CCROT,
@


1.10
log
@rewritten
@
text
@d4 1
d17 2
a18 1
C PURPOSE:  CREATES SELECTION DOC FILE FROM THE OUTPUT OF 'AP MQ'
d43 7
a49 1
C       RETRIEVE  APMQ DOC FILE CONTENTS (CLOSES LUND1)
d51 1
a51 1
        MAXXT = 7
d60 1
d75 1
a75 1
C       LOOP OVER REF  IMAGES SETS FROM 'APMQ' DOC FILE
d87 1
a87 1
C          LOOP OVER ALL IMAGES FROM 'APMQ' DOC FILE
d91 4
a94 3
             ICOUNT = APMQBUF(1,IMG)
             IF (ICOUNT .GT. 0) THEN
C               KEY USED IN APMQBUF
d98 12
d111 4
a114 9
                IF (IREFNOW .EQ. IREF .AND. CCCNOW .GT. CCTHRESH) THEN
                   IMGNOW   = APMQBUF(7,IMG)
                   IKEY     = IKEY + 1

C                  ADD LINE TO CURRENT GROUP REF. SELECTOR OUTPUT FILE
                   DLIST(1) = IMGNOW
                   DLIST(2) = CCCNOW
                   CALL LUNDOCWRTDAT(LUND3,IKEY,DLIST,2,IRTFLG)
                ENDIF
@


1.9
log
@no msg interspersed, modernized
@
text
@d3 1
a3 1
C VOMQ.F
d14 1
a14 1
C CREATES SELECTION DOC FILE FROM THE OUTPUT OF 'AP MQ'
d16 2
d26 8
a33 6
        CHARACTER(LEN=MAXNAM) :: FINP,FINPAT,DOCFIL
        CHARACTER(LEN=1)      :: NULL
	LOGICAL               :: FIRST
        REAL,DIMENSION(3)     :: DLIST
        REAL,DIMENSION(7)     :: Q
        INTEGER               :: TOTEL
d35 1
a35 1
        DATA  NDOC,NDOUT,LUNO/55,56,57/
d41 10
a50 2
        CALL FILERD(DOCFIL,NLETI,NULL,'APMQ DOCUMENT',IRTFLG)
        IF (IRTFLG .EQ. -1)  RETURN
d53 9
a61 2
        CALL  FILSEQP(FINPAT,NLET,ILIST,NMAX,NIMA,
     &                'ENTER TEMPLATE FOR SELECTION DOC',IRTFLG)
d63 1
a63 1
C	# OF OBJECTS IN A GROUP
d66 59
a124 66
C	# OF GROUPS
	NRF    = 0
	LGR    = 1
	NOPEN  = 0
	FIRST  = .TRUE.
	IGROUP = 0

C       LOOP OVER GROUPS
	DO
           IGROUP = IGROUP+1
           K      = 0
           K2     = 1
           NELM   = 0

778     CONTINUE

           LERR = -1
           KP1  = K+1
C          -NOPEN DOES NOT REPORT 'KEY NOT FOUND' AT END
           CALL UNSAV(DOCFIL,-NOPEN,NDOC,KP1,Q,6,LERR,K2)
           NOPEN = 1
C          K2    = 1
           IF (LERR .EQ. 0)  THEN
              K = K+1
              IF (FIRST)  NRF = MAX0(LGR,NRF)
              IF (Q(2) .GE. CCTHRESH)  THEN
                 LGR = ABS(Q(1))
                 IF (LGR .EQ. IGROUP) THEN
                     IF (NELM .EQ. 0) 
     &                  CALL FILGET(FINPAT,FINP,NLET,IGROUP,INTFLAG)
                     NELM      = NELM+1
                     DLIST(1) = NELM
                     DLIST(2) = Q(6)
                     DLIST(3) = Q(2)
                     CALL SAVDN1(NDOUT,FINP,DLIST,3,NELM-1,0)
                 ENDIF
              ENDIF
              GOTO  778
           ENDIF

           IF (FIRST)  THEN
              FIRST = .FALSE.
              WRITE(NOUT,122)
122           FORMAT(' Group number      Number of elements')
           ENDIF

           IF (NELM .GT. 0) CLOSE(NDOUT)
           WRITE(NOUT,123) IGROUP,NELM
123        FORMAT(1X,I5,14X,I10)

           TOTEL    = TOTEL + NELM
           DLIST(1) = IGROUP
           DLIST(2) = NELM
           CALL SAVD(LUNO,DLIST,2,IRTFLG)

           IF (IGROUP .EQ. NRF) GOTO 5
           REWIND NDOC
	ENDDO

5       WRITE(NOUT,33) TOTEL
33      FORMAT('  Total number of objects: ',I9)

	CLOSE(NDOC)
        CLOSE(NDOUT)
	CALL SAVDC
        CLOSE(LUNO)
@


1.8
log
@1024 for q for altix
@
text
@d22 1
d24 6
a29 1
        COMMON        Q(1024)
d31 1
a31 7
        PARAMETER     (NDLI = 3)
        DIMENSION     DLIST(NDLI)
        INTEGER       X41,X42,X61
        INTEGER       TOTEL
        CHARACTER*80  FINP,FINPAT,DOCFIL
        CHARACTER*1   NULL
	LOGICAL       FIRST
a32 2
        DATA  NDOC,NDOUT,NO/55,56,57/

d35 1
a35 1
        CALL RDPRM(X51,NOT_USED,'CCC THRESHOLD')
d38 1
a38 1
        IF (IRTFLG.EQ.-1)  RETURN
d48 5
a52 6
	NRF   = 0
	LGR   = 1
	NOPEN = 0
	FIRST = .TRUE.
	X61   = 0
        NLIST = 2
d56 4
a59 4
           X61 = X61+1
           K   = 0
           K2  = 1
           X41 = 0
d65 4
a68 3
           CALL UNSAV(DOCFIL,NOPEN,NDOC,KP1,Q,6,LERR,K2)
           NOPEN=1
C          K2=1
d71 2
a72 2
              IF (FIRST)  NRF=MAX0(LGR,NRF)
              IF (Q(2) .GE. X51)  THEN
d74 5
a78 5
                 IF (LGR.EQ.X61) THEN
                     IF (X41.EQ.0) 
     &                  CALL FILGET(FINPAT,FINP,NLET,X61,INTFLAG)
                     X41      = X41+1
                     DLIST(1) = X41
d81 1
a81 2
                     IAP      = 0
                     CALL SAVDN1(NDOUT,FINP,DLIST,NDLI,X41-1,IAP)
d86 1
d92 3
a94 2
           IF (X41.GT.0) CLOSE(NDOUT)
           WRITE(NOUT,123)  X61,X41
d96 7
a102 7
           TOTEL    = TOTEL+x41
           IAP      = 0
           DLIST(1) = X61
           DLIST(2) = X41
           LDL      = 2
           CALL SAVD(NO,DLIST,LDL,IAP)
           IF (X61 .EQ. NRF) GOTO 5
d107 1
a107 1
33      FORMAT(' Total number of objects: ',I10)
d112 1
a112 1
        CLOSE(NO)
@


1.7
log
@nloop,iloop_removed
@
text
@d23 1
a23 1
        COMMON        Q(1)
@


1.6
log
@cosmetic & prompts
@
text
@d37 1
a37 1
        CALL RDPRM(X51,NLOOP,ILOOP,'CCC THRESHOLD')
@


1.5
log
@fixed to produce zeros in the first column
@
text
@d3 1
a3 1
C $$ VOMQ.FOR
d5 8
a12 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
C **************************************************************************
d14 1
a14 1
C creates selection doc file from the output of AP MQ
d18 1
a18 1
C
d20 1
a20 3
C
        PARAMETER (NDLI = 3)
c
d22 11
a32 7
        DIMENSION DLIST(NDLI)
        COMMON  DUMMY(1024),Q(1)
        INTEGER  x41,x42,X61
        INTEGER  TOTEL
        CHARACTER*80  FINP,FINPAT,DOCFIL,DOU
        CHARACTER*1  NULL
	LOGICAL  FIRST
d34 1
a34 1
C
d36 6
a41 4
        CALL  RDPRM(X51,NLOOP,ILOOP,'CCC threshold')
        CALL  FILERD(DOCFIL,NLETI,NULL,'APMQ document',IRTFLG)
        IF(IRTFLG.EQ.-1)  RETURN
C
d44 1
a44 1
     &                'Enter template for selection doc',IRTFLG)
a46 1

d50 5
a54 5
	NRF=0
	LGR=1
	NOPEN=0
	FIRST=.TRUE.
	X61=0
d56 2
a57 1
C LOOP OVER GROUPS
d59 4
a62 4
	X61=X61+1
        K = 0
        K2 = 1
        X41 = 0
d66 22
a87 18
        LERR = -1
        KP1 = K+1
        CALL  UNSAV(DOCFIL,NOPEN,NDOC,KP1,Q,6,LERR,K2)
	NOPEN=1
C	K2=1
        IF(LERR.EQ.0)  THEN
	K = K+1
	IF(FIRST)  NRF=MAX0(LGR,NRF)
	 IF(Q(2).GE.X51)  THEN
	  LGR=ABS(Q(1))
	   IF(LGR.EQ.X61) THEN
           IF(X41.EQ.0) CALL  FILGET(FINPAT,FINP,NLET,X61,INTFLAG)
            X41 = X41+1
            DLIST(1) = X41
            DLIST(2) = Q(6)
            DLIST(3) = Q(2)
            IAP = 0
            CALL  SAVDN1(NDOUT,FINP,DLIST,NDLI,X41-1,IAP)
d89 16
a104 19
         ENDIF
         GOTO  778
	ENDIF
	IF(FIRST)  THEN
	 FIRST=.FALSE.
         WRITE(NOUT,122)
122      FORMAT(1X,'Group number      Number of elements')
	ENDIF
	IF(X41.GT.0)  CLOSE(NDOUT)
            WRITE(NOUT,123)  X61,X41
123         FORMAT(1X,I5,14X,I10)
            TOTEL = TOTEL+x41
            IAP = 0
		DLIST(1)=X61
		DLIST(2)=X41
		LDL=2
            CALL  SAVD(NO,DLIST,LDL,IAP)
	IF(X61.EQ.NRF) GOTO 5
	REWIND  NDOC
d106 4
a109 2
5       WRITE(NOUT,33)  TOTEL
33      FORMAT('   Total number of objects  = ',I10)
d114 1
@


1.4
log
@fixed again!
@
text
@d90 1
a90 2
	IF(X41.GT.0)  THEN
	    CLOSE(NDOUT)
a98 1
	ENDIF
d102 1
a102 1
5        WRITE(NOUT,33)  TOTEL
@


1.3
log
@new version for negative image numbers
@
text
@d49 1
@


1.2
log
@*** empty log message ***
@
text
@d31 1
a35 1
	CALL  RDPRMI(NRF,K, NLOOP,ILOOP,'Number of reference images')      
d38 1
a38 1
        
d48 1
d50 2
d53 3
a55 1
	DO  X61=1,NRF
d68 2
a69 1
        K = K+1
d71 1
a71 2
	  LGR=Q(1)
	  IF(LGR.GT.NRF) LGR=LGR-NRF
d84 7
a90 3
            CLOSE(NDOUT)
            IF(X61.EQ.1)  WRITE(NOUT,122)
122         FORMAT(1X,'Group number      Number of elements')
d99 2
d103 3
a105 3
        WRITE(NOUT,33)  TOTEL
33      FORMAT('   Total number of objects  = ',i10)
5       CLOSE(NDOC)
@


1.1
log
@Initial revision
@
text
@d1 14
d16 6
a21 2
        SUBROUTINE group(MAXMEM)

d23 2
a24 2

         INCLUDE '/net/ithaca/usr1/spider/src/CMBLOCK.INC'
d27 2
a28 2
        integer  x41,x42,X61
        integer  totel
d32 1
d45 1
a45 1
        totel = 0.0
d55 1
a55 1
778     continue
d84 1
a84 1
            totel = totel+x41
d92 1
a92 1
        write(nout,33)  totel
@
