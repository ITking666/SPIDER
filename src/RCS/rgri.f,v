head	1.21;
access;
symbols
	pre_mrcs:1.21
	healthdept_2018:1.21
	pre_getangas:1.17
	GPL2010:1.17
	pre_GPL2010:1.16
	pre_var_equation:1.16
	pre_fftwrings:1.13
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.9
	noindx:1.9
	Bproc:1.8
	oct21:1.7
	last77:1.6;
locks; strict;
comment	@c @;


1.21
date	2018.10.03.14.34.15;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2011.12.22.17.13.27;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2011.12.22.17.07.30;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2011.11.30.13.51.24;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.06.24.13.26.46;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2009.06.22.14.47.54;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2009.02.24.13.44.23;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2008.12.05.13.29.01;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2007.12.20.18.34.52;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.18.18.55.19;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.18.14.43.22;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.10.16.18.16.11;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2000.10.24.19.15.30;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.12.07.19.38.53;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.09.08.16.59.42;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	98.08.04.18.28.14;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.01.30.17.56.58;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	97.10.14.14.52.16;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	97.10.14.14.46.39;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	95.10.05.15.09.28;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.19;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.21
log
@email_health_dept
@
text
@
C **********************************************************************
C                                                                      
C  RGRI     NEW                                  2/6/86 J.F.  
C           COSMETIC OUTPUT CHANGES              DEC 2008 ARDEAN LEITH                                                *
C           IMC FILE FDUM                        JUN 09 ARDEAN LEITH
C           COSMETIC                             NOV 11 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2011  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                       
C  RGRI(NUMIM,KFAC,NKLA,KLAS,IDI,PK,GT,IV,LUNK,LUNI,NFAC)
C
C  PURPOSE:                                                             
C     READ IMC_ CLUSTER FILE PRODUCED BY SCLASSI AND PRINT OUT
C     LISTS OF CLASS MEMBERS, CENTERS OF GRAVITIES FOR EACH CLASS, AND
C     RE-CLASSIFICATION LOOKUP TABLE
C                                                                       
C  PARAMETERS:                                                          
C
C  NOTE: IMPORTANT CHANGE: NKLA IS REDUCED BEFORE DEUCL IS CALLED. 
C        THE ORIGINAL NUMBER OF CLUSTERS IS STORED IN NKLAO 
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

      SUBROUTINE RGRI(NUMIM,KFAC,NKLA,KLAS,IDI,PK,GT,IV,
     &                LUNK,LUNI,NFAC,KV)

      INCLUDE 'CMBLOCK.INC' 

      INTEGER :: NUMIM,KFAC,NKLA
      INTEGER :: KLAS(NUMIM), IDI(NUMIM)
      REAL    :: PK(NKLA), GT(NKLA, KFAC)
      INTEGER :: IV(NKLA)
      INTEGER :: LUNK,LUNI,NFAC
      INTEGER :: KV(KFAC)

C     NUMBER OF MAJOR CLASSES TO BE ANALYSED IN TERMS OF DISPERSIONS
C     10/20/87 TEMPORARILY CHANGED TO 11 JF
      INTEGER, PARAMETER :: NMAJ=11

      INTEGER, PARAMETER :: MAXPRT=1000  ! MAXIMUM NO. PER CLASS TO BE PRINTED
	
      INTEGER            :: BELONG(MAXPRT)
      REAL               :: DIST(NMAJ,NMAJ)
      COMMON /COMMUN/ DIST,BELONG

      REAL               :: COO(NFAC)
      DIMENSION          :: DISP(NMAJ),DELTA(3),NEXT(3)
 
C     READ CLASSIFICATION DATA FROM CLUSTER FILE ON: LUNK                                                                              
      READ(LUNK) (KLAS(I), I=1,NUMIM), 
     &           (IDI(I), I=1,NUMIM),
     &           (PK(L),L=1,NKLA), 
     &           ((GT(L,J),L=1,NKLA),J=1,KFAC)

	NMAJOR = MIN(NMAJ,NKLA)

C       LIST IMAGES BY CLASSES
	WRITE(NDAT,13)
13	FORMAT(/,'  LIST OF CLASS MEMBERS',/,'  CLASS')

	DO  K=1,NKLA
	   IKLA = 0
           DO I=1, NUMIM
             IF (KLAS(I) .EQ. K) THEN
                IKLA         = IKLA+1
                BELONG(IKLA) = IDI(I)
             ENDIF
           ENDDO
	   IF (IKLA .EQ. 0) CYCLE

	   IF (IKLA > MAXPRT) THEN
              WRITE(6,12)K,MAXPRT
12            FORMAT(I4,' *** MORE THAN ',I4,' IMAGES')
              CYCLE
	   ENDIF

	   WRITE(NDAT,11)K,(BELONG(I),I=1,IKLA)
11	   FORMAT(I6,10I7,(6X,10I7))

        ENDDO

C       LIST CLASS CENTER COORDINATES

	WRITE(NDAT,1001)(KV(IFAC),IFAC=1,KFAC)
1001	FORMAT(/,'  LIST OF CLASS CENTER COORDINATES',/,
     &           '   CLASS  SIZE    ',8(5X,I2,3X)/)
        DO N=1, NKLA                               
           WRITE(NDAT, 1002) N,INT(PK(N)+0.5),(GT(N,IFAC),IFAC=1,KFAC)
 1002      FORMAT(2X,I4,3X,I4,3X,12(F9.4,1X))                 
        ENDDO

C       RE-CLASSIFICATION LOOKUP TABLE

	WRITE(NDAT,1004)((I),I=1,NKLA)
1004	FORMAT(/,'  RE-CLASSIFICATION LOOKUP TABLE'/,
     &           '  ORIGINAL CLASS',/,
     &         8X,(20I3))

C       READ RE-CLASSIFICATION DATA FROM CLUSTER FILE ON: LUNK                                                                              
        KPART = NKLA - 1                                            
        DO KPRO = 2,KPART                                   
           READ(LUNK) (IV(J), J=1,NKLA)
                
           WRITE(NDAT, 1003) KPRO, (IV(J), J=1,NKLA) 
 1003      FORMAT(I6,2X,(40I3)) 
        ENDDO

C       COMPUTE CLASS DISPERSIONS AND INTERCLASS DISTANCES FOR NMAJOR
C       MAIN CLASSES

C       CLEAR ARRAY DIST
	DO K=1,NMAJOR
           DISP(K) = 0.0
           DO K1=1,NMAJOR
              DIST(K,K1) = 0.0
  	   ENDDO
        ENDDO

	CALL REWF(LUNI,1)     ! REWIND _IMC FILE 
	DO I=1,NUMIM
C          READ _IMC FILE ON: LUNI                                                                              
           READ(LUNI,*) (COO(IFAC),IFAC=1,NFAC), FDUM,FDUM,FDUM,FDUM

           K = KLAS(I)
           IF (K .LE. NMAJOR) THEN
              DO IFAC=1,KFAC
                 DISP(K) = DISP(K) + (COO(IFAC) - GT(K,IFAC))**2
  	      ENDDO
           ENDIF
  	ENDDO

	DO K=1,NMAJOR
  	   DISP(K) = SQRT(DISP(K) / PK(K))
        ENDDO

C       COMPUTE INTERCLASS DISTANCES
	DO K=1,NMAJOR
           DO K1=1,NMAJOR
             IF (K1 .NE. K) THEN
                DO IFAC=1,KFAC
                  DIST(K,K1) = DIST(K,K1)+(GT(K,IFAC) - GT(K1,IFAC))**2
  	        ENDDO
             ENDIF
          ENDDO
        ENDDO

C       SCALE DISTANCES
	DO K=1,NMAJOR
           DO K1=1,NMAJOR
              DIST(K,K1 )= SQRT(DIST(K,K1))
           ENDDO
        ENDDO

C       WRITE HEADING
        WRITE(NDAT,*) ' '
	WRITE(NDAT,1202)(I,I=1,10)
1202	FORMAT('  DISPERSIONS AND INTER-CLASS DISTANCES OF 10 LARGEST',
     &         ' CLUSTERS',//,
     &         '   CLASS      DISP       NEIGHBORS   ',10I7/)

C       FOR EACH CLUSTER, DETERMINE THE 3 CLOSEST NEIGHBORS

	DO K=1,NMAJOR
C          CLEAR TABLES
           DO J=1,3
              DELTA(J) = 100000.
              NEXT(J)  = 0
           ENDDO

           DO K1=1,NMAJOR
             IF (K1 .EQ.K) CYCLE
             IF (DIST(K,K1) .LT. DELTA(1)) THEN
		DELTA(3) = DELTA(2)
		DELTA(2) = DELTA(1)
		DELTA(1) = DIST(K,K1)
		NEXT(3)  = NEXT(2)
		NEXT(2)  = NEXT(1)
		NEXT(1)  = K1
		CYCLE
             ENDIF

             IF (DIST(K,K1) .LT. DELTA(2)) THEN
		DELTA(3) = DELTA(2)
		DELTA(2) = DIST(K,K1)
		NEXT(3)  = NEXT(2)
		NEXT(2)  = K1
		CYCLE
             ENDIF

             IF (DIST(K,K1) .LT. DELTA(3)) THEN
		DELTA(3) = DIST(K,K1)
		NEXT(3)  = K1
             ENDIF
   	   ENDDO

	   WRITE(NDAT,1201)K,DISP(K),(NEXT(J),J=1,3),
     &                     (DIST(K,K1),K1=1,K-1)
1201	   FORMAT(5X,I4,3X,F7.4,5X,3I3,6X,10F7.4)

      ENDDO
      WRITE(NDAT,*)' '
      WRITE(NDAT,*)' '

      END                                                                       
                                              
@


1.20
log
@undefined kv bug
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.19
log
@WRITE(NDAT,1001)(KV(IFAC),IFAC=1,KFAC)
@
text
@d55 1
@


1.18
log
@cosmetic
@
text
@d46 1
a46 1
     &                LUNK,LUNI,NFAC)
d104 1
a104 1
	WRITE(NDAT,1001)((IFAC),IFAC=1,KFAC)
a223 1
      RETURN
@


1.17
log
@GPL_2010
@
text
@d7 1
d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d45 2
a46 1
      SUBROUTINE RGRI(NUMIM,KFAC,NKLA,KLAS,IDI,PK,GT,IV,LUNK,LUNI,NFAC)
d50 5
a54 2
      DIMENSION        KLAS(NUMIM), IDI(NUMIM)
      DIMENSION        PK(NKLA), GT(NKLA, KFAC), IV(NKLA)
d58 1
a58 1
      PARAMETER (NMAJ=11)
d60 1
a60 2
C     MAXIMUM NUMBER PER CLASS TO BE PRINTED
      PARAMETER (MAXPRT=1000)
d62 3
a64 3
      INTEGER          BELONG
      DIMENSION        COO(NFAC)
      COMMON /COMMUN/  DIST(NMAJ,NMAJ),BELONG(MAXPRT)
d66 2
a67 1
      DIMENSION         DISP(NMAJ),DELTA(3),NEXT(3)
d84 1
a84 1
             IF (KLAS(I).EQ.K) THEN
d89 3
a91 2
	   IF (IKLA .EQ. 0) GOTO 15
	   IF (IKLA .GT. MAXPRT) THEN
d94 1
a94 1
              GOTO 15
d99 1
a99 1
15	   CONTINUE
@


1.16
log
@_IMC or _PIX Line length bug
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.15
log
@*** empty log message ***
@
text
@d4 3
a6 2
C  RGRI         NEW                              2/6/86 J.F.  
C               COSMETIC OUTPUT CHANGES          DEC 2008 ARDEAN LEITH                                                *
d36 1
a36 1
C     2/6/86 J.F. READ CLUSTER FILE PRODUCED BY SCLASSY AND PRINT OUT
d140 1
a140 1
           READ(LUNI,*) (COO(IFAC),IFAC=1,NFAC), FDUM,FDUM,FDUM
a154 1

d157 6
a162 5
             IF (K1 .EQ. K) GOTO 80
             DO IFAC=1,KFAC
               DIST(K,K1) = DIST(K,K1)+(GT(K,IFAC) - GT(K1,IFAC))**2
  	     ENDDO
80	   ENDDO
d175 1
a175 1
1202	FORMAT(2X,'DISPERSIONS AND INTER-CLASS DISTANCES OF 10 LARGEST',
@


1.14
log
@cosmetic output
@
text
@d77 1
a77 2
13	FORMAT(/,'  LIST OF CLASS MEMBERS',/,
     &          ,'  CLASS')
@


1.13
log
@NFAC,KFAC,READ BUG & REFORMATTING
@
text
@d3 3
a5 3
C                                                                      *
C  RGRI                        NEW                       2/6/86 J.F.   *
C                                                                      *
d8 1
a8 1
C=* Copyright (C) 1985-2007  Health Research Inc.                      *
d31 1
a31 1
C                                                                      *
d34 1
a34 1
C  PURPOSE:                                                            *
d36 4
a39 4
C LISTS OF CLASS MEMBERS, CENTERS OF GRAVITIES FOR EACH CLASS, AND
C RE-CLASSIFICATION LOOKUP TABLE
C                                                                      *
C  PARAMETERS:                                                         *
d41 2
a42 2
C  IMPORTANT CHANGE: NKLA IS REDUCED BEFORE DEUCL IS CALLED. THE ORIGINAL
C  NUMBER OF CLUSTERS IS STORED IN NKLAO 
d44 2
a45 2
C
C----------------------------------------------------------------------
d77 2
a78 2
13	FORMAT(/2X,'LIST OF CLASS MEMBERS',/,
     &          2X,'CLASS')
d96 1
a96 1
11	   FORMAT(I6,10I7,/(6X,10I7))
d101 1
d103 1
a103 1
1001	FORMAT(/,2X,'LIST OF CLASS CENTER COORDINATES',//,
d113 3
a115 3
1004	FORMAT(/,2X,'RE-CLASSIFICATION LOOKUP TABLE'/,
     &           2X,'ORIGINAL CLASS',/,
     &         6X,(20I3))
a216 2
	   WRITE(NDAT,*)' '
	   WRITE(NDAT,*)' '
d219 2
@


1.12
log
@GPL
@
text
@d3 4
d8 1
a8 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
a30 6

C ++********************************************************************
C                                                                      *
C  RGRI                                                                    *
C                                                                      *
C **********************************************************************
d32 1
a32 1
C  RGRI(NUMIM,KFAC,NKLA,KLAS,IDI,PK,GT,IV,LUNK,LUNI)
d35 3
a43 3
C** 2/6/86 J.F. READ CLUSTER FILE PRODUCED BY SCLASSY AND PRINT OUT
C LISTS OF CLASS MEMBERS, CENTERS OF GRAVITIES FOR EACH CLASS, AND
C RE-CLASSIFICATION LOOKUP TABLE
d47 1
a47 1
      SUBROUTINE RGRI(NUMIM,KFAC,NKLA,KLAS,IDI,PK,GT,IV,LUNK,LUNI)
d62 1
a62 2
      DIMENSION        COO(NMAJ)
      EQUIVALENCE      (COO,BELONG)
d66 6
a71 3
                                                                               
        READ(LUNK) (KLAS(I), I=1,NUMIM), (IDI(I), I=1,NUMIM),
     &             (PK(L),L=1,NKLA), ((GT(L,J),L=1,NKLA),J=1,KFAC)
d73 1
a73 1
	NMAJOR = MIN0(NMAJ,NKLA)
d77 2
a78 1
13	FORMAT(/' LIST OF CLASS MEMBERS'//,' CLASS'/)
d81 1
a81 1
	   IKLA=0
d90 1
a90 1
              WRITE(NDAT,12)K,MAXPRT
d96 1
a96 1
11	   FORMAT(/I6,10I7,/(6X,10I7))
a100 1

d102 2
a103 2
1001	FORMAT(//' LIST OF CLASS CENTER COORDINATES'//,
     &           ' CLASS  SIZE',8(3X,I2,3X)/)
d112 3
a114 3
1004	FORMAT(//' RE-CLASSIFICATION LOOKUP TABLE'/,
     &           ' ORIGINAL CLASS',//,
     &         8X,(40I3))
d116 1
d119 2
a120 1
           READ(LUNK) (IV(J), J=1,NKLA)                
a126 1
	CALL REWF(LUNI,1)
d136 1
d138 3
a140 1
           READ(LUNI,*) (COO(IFAC),IFAC=1,KFAC)
d174 1
a174 1
1202	FORMAT(' DISPERSIONS AND INTER-CLASS DISTANCES OF 10 LARGEST',
d176 1
a176 1
     &         ' CLASS      DISP         NEIGHBORS       ',10I7/)
d216 2
d219 1
a219 1
150      ENDDO
@


1.11
log
@GPL License added
@
text
@d1 217
@


1.10
log
@CA rewrite
@
text
@a0 191

C ++********************************************************************
C                                                                      *
C  RGRI                                                                    *
C                                                                      *
C **********************************************************************
C                                                                      *
C  RGRI(NUMIM,KFAC,NKLA,KLAS,IDI,PK,GT,IV,LUNK,LUNI)
C
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:                                                         *
C
C  IMPORTANT CHANGE: NKLA IS REDUCED BEFORE DEUCL IS CALLED. THE ORIGINAL
C  NUMBER OF CLUSTERS IS STORED IN NKLAO 
C
C** 2/6/86 J.F. READ CLUSTER FILE PRODUCED BY SCLASSY AND PRINT OUT
C LISTS OF CLASS MEMBERS, CENTERS OF GRAVITIES FOR EACH CLASS, AND
C RE-CLASSIFICATION LOOKUP TABLE
C
C----------------------------------------------------------------------

      SUBROUTINE RGRI(NUMIM,KFAC,NKLA,KLAS,IDI,PK,GT,IV,LUNK,LUNI)

      INCLUDE 'CMBLOCK.INC' 

      DIMENSION        KLAS(NUMIM), IDI(NUMIM)
      DIMENSION        PK(NKLA), GT(NKLA, KFAC), IV(NKLA)

C     NUMBER OF MAJOR CLASSES TO BE ANALYSED IN TERMS OF DISPERSIONS
C     10/20/87 TEMPORARILY CHANGED TO 11 JF
      PARAMETER (NMAJ=11)

C     MAXIMUM NUMBER PER CLASS TO BE PRINTED
      PARAMETER (MAXPRT=1000)
	
      INTEGER          BELONG
      DIMENSION        COO(NMAJ)
      EQUIVALENCE      (COO,BELONG)
      COMMON /COMMUN/  DIST(NMAJ,NMAJ),BELONG(MAXPRT)

      DIMENSION         DISP(NMAJ),DELTA(3),NEXT(3)
                                                                               
        READ(LUNK) (KLAS(I), I=1,NUMIM), (IDI(I), I=1,NUMIM),
     &             (PK(L),L=1,NKLA), ((GT(L,J),L=1,NKLA),J=1,KFAC)

	NMAJOR = MIN0(NMAJ,NKLA)

C       LIST IMAGES BY CLASSES
	WRITE(NDAT,13)
13	FORMAT(/' LIST OF CLASS MEMBERS'//,' CLASS'/)

	DO  K=1,NKLA
	   IKLA=0
           DO I=1, NUMIM
             IF (KLAS(I).EQ.K) THEN
                IKLA         = IKLA+1
                BELONG(IKLA) = IDI(I)
             ENDIF
           ENDDO
	   IF (IKLA .EQ. 0) GOTO 15
	   IF (IKLA .GT. MAXPRT) THEN
              WRITE(NDAT,12)K,MAXPRT
12            FORMAT(I4,' *** MORE THAN ',I4,' IMAGES')
              GOTO 15
	   ENDIF

	   WRITE(NDAT,11)K,(BELONG(I),I=1,IKLA)
11	   FORMAT(/I6,10I7,/(6X,10I7))
15	   CONTINUE
        ENDDO

C       LIST CLASS CENTER COORDINATES

	WRITE(NDAT,1001)((IFAC),IFAC=1,KFAC)
1001	FORMAT(//' LIST OF CLASS CENTER COORDINATES'//,
     &           ' CLASS  SIZE',8(3X,I2,3X)/)
        DO N=1, NKLA                               
           WRITE(NDAT, 1002) N,INT(PK(N)+0.5),(GT(N,IFAC),IFAC=1,KFAC)
 1002      FORMAT(2X,I4,3X,I4,3X,12(F9.4,1X))                 
        ENDDO

C       RE-CLASSIFICATION LOOKUP TABLE

	WRITE(NDAT,1004)((I),I=1,NKLA)
1004	FORMAT(//' RE-CLASSIFICATION LOOKUP TABLE'/,
     &           ' ORIGINAL CLASS',//,
     &         8X,(40I3))

        KPART = NKLA - 1                                            
        DO KPRO = 2,KPART                                   
           READ(LUNK) (IV(J), J=1,NKLA)                
           WRITE(NDAT, 1003) KPRO, (IV(J), J=1,NKLA) 
 1003      FORMAT(I6,2X,(40I3)) 
        ENDDO

C       COMPUTE CLASS DISPERSIONS AND INTERCLASS DISTANCES FOR NMAJOR
C       MAIN CLASSES
	CALL REWF(LUNI,1)

C       CLEAR ARRAY DIST
	DO K=1,NMAJOR
           DISP(K) = 0.0
           DO K1=1,NMAJOR
              DIST(K,K1) = 0.0
  	   ENDDO
        ENDDO

	DO I=1,NUMIM
           READ(LUNI,*) (COO(IFAC),IFAC=1,KFAC)
           K = KLAS(I)
           IF (K .LE. NMAJOR) THEN
              DO IFAC=1,KFAC
                 DISP(K) = DISP(K) + (COO(IFAC) - GT(K,IFAC))**2
  	      ENDDO
           ENDIF
  	ENDDO

	DO K=1,NMAJOR
  	   DISP(K) = SQRT(DISP(K) / PK(K))
        ENDDO

C       COMPUTE INTERCLASS DISTANCES

	DO K=1,NMAJOR
           DO K1=1,NMAJOR
             IF (K1 .EQ. K) GOTO 80
             DO IFAC=1,KFAC
               DIST(K,K1) = DIST(K,K1)+(GT(K,IFAC) - GT(K1,IFAC))**2
  	     ENDDO
80	   ENDDO
        ENDDO

C       SCALE DISTANCES
	DO K=1,NMAJOR
           DO K1=1,NMAJOR
              DIST(K,K1 )= SQRT(DIST(K,K1))
           ENDDO
        ENDDO

C       WRITE HEADING
        WRITE(NDAT,*) ' '
	WRITE(NDAT,1202)(I,I=1,10)
1202	FORMAT(' DISPERSIONS AND INTER-CLASS DISTANCES OF 10 LARGEST',
     &         ' CLUSTERS',//,
     &         ' CLASS      DISP         NEIGHBORS       ',10I7/)

C       FOR EACH CLUSTER, DETERMINE THE 3 CLOSEST NEIGHBORS

	DO K=1,NMAJOR
C          CLEAR TABLES
           DO J=1,3
              DELTA(J) = 100000.
              NEXT(J)  = 0
           ENDDO

           DO K1=1,NMAJOR
             IF (K1 .EQ.K) CYCLE
             IF (DIST(K,K1) .LT. DELTA(1)) THEN
		DELTA(3) = DELTA(2)
		DELTA(2) = DELTA(1)
		DELTA(1) = DIST(K,K1)
		NEXT(3)  = NEXT(2)
		NEXT(2)  = NEXT(1)
		NEXT(1)  = K1
		CYCLE
             ENDIF

             IF (DIST(K,K1) .LT. DELTA(2)) THEN
		DELTA(3) = DELTA(2)
		DELTA(2) = DIST(K,K1)
		NEXT(3)  = NEXT(2)
		NEXT(2)  = K1
		CYCLE
             ENDIF

             IF (DIST(K,K1) .LT. DELTA(3)) THEN
		DELTA(3) = DIST(K,K1)
		NEXT(3)  = K1
             ENDIF
   	   ENDDO

	   WRITE(NDAT,1201)K,DISP(K),(NEXT(J),J=1,3),
     &                     (DIST(K,K1),K1=1,K-1)
1201	   FORMAT(5X,I4,3X,F7.4,5X,3I3,6X,10F7.4)

150      ENDDO

      RETURN
      END                                                                       
                                              
@


1.9
log
@cosmetic & IDK bug
@
text
@d8 1
a8 1
C  RGRI(ICARD,KFAC,NKLA,KLAS,IDI,PK,GT,IV,NGRI,NGUS)
d14 2
a15 2
C IMPORTANT CHANGE: NKLA IS REDUCED BEFORE DEUCL IS CALLED. THE ORIGINAL
C NUMBER OF CLUSTERS IS STORED IN NKLAO 
d23 1
a23 1
      SUBROUTINE RGRI(ICARD,KFAC,NKLA,KLAS,IDI,PK,GT,IV,NGRI,NGUS)
d25 1
a25 1
      COMMON /ENSOR/ LEC,IMP
d27 1
a27 1
      DIMENSION        KLAS(ICARD), IDI(ICARD)
d40 1
a40 1
      COMMON /COMMUN/   DIST(NMAJ,NMAJ),BELONG(MAXPRT)
d44 1
a44 1
        READ (NGRI) (KLAS(I), I=1,ICARD), (IDI(I), I=1,ICARD),
d50 2
a51 3
	WRITE(IMP,13)
13	FORMAT(/' LIST OF CLASS MEMBERS'//,
     &          ' CLASS'/)
d55 1
a55 1
           DO I=1, ICARD
d60 1
a60 1
           END DO
d63 1
a63 1
              WRITE(IMP,12)K,MAXPRT
d68 1
a68 1
	   WRITE(IMP,11)K,(BELONG(I),I=1,IKLA)
d71 1
a71 1
        END DO
d75 1
a75 1
	WRITE(IMP,1001)((IFAC),IFAC=1,KFAC)
d79 1
a79 1
           WRITE(IMP, 1002) N,INT(PK(N)+0.5), (GT(N,IFAC),IFAC=1,KFAC)
d81 1
a81 1
        END DO
d85 1
a85 1
	WRITE(IMP,1004)((I),I=1,NKLA)
d92 2
a93 2
           READ (NGRI)  (IV(J), J=1,NKLA)                
           WRITE(IMP, 1003) KPRO, (IV(J), J=1,NKLA) 
d95 1
a95 1
        END DO
d97 1
a97 1
C       COMPUTE CLASS DISPERSIONS AND INTERCLASS DISTANCES FOR THE NMAJOR
d99 1
a99 1
	CALL REW(NGUS,0)
d103 1
a103 1
           DISP(K)=0.0
d105 1
a105 1
              DIST(K,K1)=0.0
d109 3
a111 3
	DO I=1,ICARD
           READ(NGUS)(COO(IFAC),IFAC=1,KFAC)
           K=KLAS(I)
d114 1
a114 1
                 DISP(K)=DISP(K)+(COO(IFAC)-GT(K,IFAC))**2
d117 1
a117 1
  	END DO
d120 1
a120 1
  	   DISP(K)=SQRT(DISP(K)/PK(K))
d129 4
a132 4
               DIST(K,K1)=DIST(K,K1)+(GT(K,IFAC)-GT(K1,IFAC))**2
  	     END DO
80	   END DO
        END DO
d137 3
a139 3
              DIST(K,K1)=SQRT(DIST(K,K1))
           END DO
        END DO
d142 2
a143 2
        WRITE(IMP,*) ' '
	WRITE(IMP,1202)(I,I=1,10)
d155 1
a155 1
           END DO
d158 1
a158 1
             IF (K1 .EQ.K) GOTO 120
d160 7
a166 7
		DELTA(3)=DELTA(2)
		DELTA(2)=DELTA(1)
		DELTA(1)=DIST(K,K1)
		NEXT(3)=NEXT(2)
		NEXT(2)=NEXT(1)
		NEXT(1)=K1
		GOTO 120
d170 5
a174 5
		DELTA(3)=DELTA(2)
		DELTA(2)=DIST(K,K1)
		NEXT(3)=NEXT(2)
		NEXT(2)=K1
		GOTO 120
d181 1
a181 1
120	   END DO
d183 1
a183 1
	   WRITE(IMP,1201)K,DISP(K),(NEXT(J),J=1,3),
d187 1
a187 1
150      END DO
d191 1
a191 1

@


1.8
log
@header
@
text
@d4 2
d8 2
a12 1
C    RGRI(ICARD,KFAC,NKLA,KLAS,IDI,PK,GT,IV,NGRI,NGUS)
d25 1
a25 1
      COMMON /ENSOR/ LEC, IMP
d51 2
a52 1
13	FORMAT(/' LIST OF CLASS MEMBERS'//,' CLASS'/)
d56 4
a59 4
           DO  I=1, ICARD
             IF(KLAS(I).EQ.K) THEN
                IKLA=IKLA+1
                BELONG(IKLA)=IDI(I)
d62 2
a63 2
	   IF (IKLA.EQ.0)GOTO 15
	   IF (IKLA.GT.MAXPRT) THEN
d70 1
a70 1
11	   FORMAT(/I6,20I5,/(6X,20I5))
d78 1
a78 1
     1           ' CLASS  SIZE',8(3X,I2,3X)/)
d80 2
a81 2
           WRITE(IMP, 1002) N, INT(PK(N)+0.5), (GT(N,IFAC),IFAC=1,KFAC)
 1002      FORMAT(2X,I4,3X,I4,3X,12(F7.4,1X))                 
d87 3
a89 2
1004	FORMAT(//' RE-CLASSIFICATION LOOKUP TABLE'/,' ORIGINAL CLASS'//,
     1         8X,(40I3))
d107 2
a108 2
  	   END  DO
        END DO
d116 1
a116 1
  	      END DO
d122 1
a122 1
        END DO
d154 2
a155 2
              DELTA(J)=100000.
              NEXT(J)=0
d179 2
a180 2
		DELTA(3) =DIST(K,K1)
		NEXT(3)=K1
d186 1
a186 1
1201	   FORMAT(8X,I4,3X,F7.4,5X,3I3,6X,10F7.4)
@


1.7
log
@CMLIMIT.INC
@
text
@d2 7
a8 1
C*---------------------------------------------------------------------*        
@


1.6
log
@bad format
@
text
@a15 2
CNO_SAVE

a27 1
C     MAX IOBUF SIZE IS:   PARAMETER        (NBUFSIZ = 17008)
d31 1
a31 1
      COMMON /IOBUF/   DIST(NMAJ,NMAJ),BELONG(MAXPRT)
d36 1
a36 1
     #             (PK(L),L=1,NKLA), ((GT(L,J),L=1,NKLA),J=1,KFAC)
d135 2
a136 2
     1         ' CLUSTERS',//,
     2         ' CLASS      DISP         NEIGHBORS       ',10I7/)
@


1.5
log
@used common /iobuf/ for arrays, cosmetic
@
text
@d135 1
a135 1
        WRITE(IMP) ' '
@


1.4
log
@do loops for f90
@
text
@d16 7
a22 1
      PARAMETER (NMAJ=11)
d25 1
a26 1
      PARAMETER (MAXPRT=1000)	
d28 7
d36 1
a36 6
      DIMENSION KLAS(ICARD), IDI(ICARD), DIST(NMAJ,NMAJ)
      DIMENSION PK(NKLA), GT(NKLA, KFAC), IV(NKLA),BELONG(MAXPRT)
      DIMENSION COO(NMAJ),DISP(NMAJ),DELTA(3),NEXT(3)
      INTEGER   ICARD, KFAC, NKLA, NGRI,BELONG
      COMMON /ENSOR/ LEC, IMP
      EQUIVALENCE(COO,BELONG)
d51 2
a52 2
               IKLA=IKLA+1
               BELONG(IKLA)=IDI(I)
d55 2
a56 2
	   IF(IKLA.EQ.0)GOTO 15
	   IF(IKLA.GT.MAXPRT) THEN
@


1.3
log
@for f90
@
text
@d102 1
a102 1
  	CONTINUE
@


1.2
log
@non f77 continuations fixed
@
text
@d33 1
a33 1
	NMAJOR=MIN0(NMAJ,NKLA)
a35 1

d38 20
a57 18
	DO 15 K=1,NKLA
	IKLA=0
        DO 10 I=1, ICARD
          IF(KLAS(I).EQ.K) THEN
            IKLA=IKLA+1
            BELONG(IKLA)=IDI(I)
          ENDIF
10	CONTINUE
	IF(IKLA.EQ.0)GOTO 15
	IF(IKLA.GT.MAXPRT) THEN
           WRITE(IMP,12)K,MAXPRT
12         FORMAT(I4,' *** MORE THAN ',I4,' IMAGES')
           GOTO 15
	ENDIF

	WRITE(IMP,11)K,(BELONG(I),I=1,IKLA)
11	FORMAT(/I6,20I5,/(6X,20I5))
15	CONTINUE
d64 4
a67 4
        DO 20 N=1, NKLA                               
         WRITE(IMP, 1002) N, INT(PK(N)+0.5), (GT(N,IFAC),IFAC=1,KFAC)
 1002    FORMAT(2X,I4,3X,I4,3X,12(F7.4,1X))                 
 20     CONTINUE
d74 1
d76 5
a80 5
        DO 30  KPRO = 2,KPART                                   
          READ (NGRI)  (IV(J), J=1,NKLA)                
          WRITE(IMP, 1003) KPRO, (IV(J), J=1,NKLA) 
 1003     FORMAT(I6,2X,(40I3)) 
 30     CONTINUE
d87 20
a106 14
	DO 35 K=1,NMAJOR
          DISP(K)=0.0
          DO 35 K1=1,NMAJOR
            DIST(K,K1)=0.0
35	CONTINUE

	DO 50 I=1,ICARD
          READ(NGUS)(COO(IFAC),IFAC=1,KFAC)
          K=KLAS(I)
          IF(K.GT.NMAJOR) GOTO 50
          DO 40 IFAC=1,KFAC
            DISP(K)=DISP(K)+(COO(IFAC)-GT(K,IFAC))**2
40	  CONTINUE
50	CONTINUE
a107 3
	DO 60 K=1,NMAJOR
60	DISP(K)=SQRT(DISP(K)/PK(K))

d110 4
a113 4
	DO 100 K=1,NMAJOR
           DO 80 K1=1,NMAJOR
             IF(K1.EQ.K) GOTO 80
             DO 70 IFAC=1,KFAC
d115 3
a117 3
70	     CONTINUE
80	   CONTINUE
100	CONTINUE
d120 5
a124 3
	DO 105 K=1,NMAJOR
          DO 105 K1=1,NMAJOR
105	DIST(K,K1)=SQRT(DIST(K,K1))
d127 1
d129 3
a131 3
1202	FORMAT('0DISPERSIONS AND INTER-CLASS DISTANCES OF 10 LARGEST'
     1         ' CLUSTERS'
     2        //1X,'CLASS      DISP         NEIGHBORS       ',10I7/)
d135 1
a135 1
	DO 150 K=1,NMAJOR
d137 8
a144 8
           DO 110 J=1,3
             DELTA(J)=100000.
             NEXT(J)=0
110        CONTINUE

           DO 120 K1=1,NMAJOR
             IF(K1.EQ.K)GOTO 120
             IF(DIST(K,K1).LT.DELTA(1)) THEN
d153 2
a154 1
             IF(DIST(K,K1).LT.DELTA(2)) THEN
d161 3
a163 2
             IF(DIST(K,K1).LT.DELTA(3)) THEN
		DELTA(3)=DIST(K,K1)
d166 2
a167 1
120	   CONTINUE
d172 1
a172 1
150      CONTINUE
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
C $$  RGRI(ICARD,KFAC,NKLA,KLAS,IDI,PK,GT,IV,NGRI,NGUS)
d72 1
a72 1
	1 8X,(40I3))
@
