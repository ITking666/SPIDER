head	1.15;
access;
symbols
	pre_mrcs:1.15
	healthdept_2018:1.15
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.9
	Bproc:1.7
	oct21:1.6
	last77:1.6;
locks; strict;
comment	@c @;


1.15
date	2018.10.03.14.34.10;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2014.01.12.19.22.46;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.26.15;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.22.43;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.18.15.03;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.20.20.55.23;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.11.14.08.10;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.01.19.35.25;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.11.10.23.09.39;	author yuchen;	state Exp;
branches;
next	1.6;

1.6
date	99.02.05.15.38.31;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.01.05.20.38.03;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	97.10.10.17.48.02;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.04.22.13.39.01;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.07.42;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.26;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.15
log
@email_health_dept
@
text
@C ++********************************************************************
C  MRNCOLOR                                                                    *
C                  OPFILEC                         FEB 03 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C   MRNCOLOR                                                            *
C***********************************************************************

	SUBROUTINE MRNCOLOR

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC' 

        COMMON ADUM(80),OUT(2048),BUF(30000)

        CHARACTER(LEN=MAXNAM)   ::   FIL1,FIL2,FIL3,FIL4,FIL5
        COMMON /COMMUN/ FIL1,FIL2,FIL3,FIL4,FIL5

        DIMENSION     ILUNZ(10),ILUNS(10),IB(20)
        DIMENSION     FMAXZ(10),FMINZ(10),FMAXS(10),FMINS(10)

        CHARACTER *1  NULL,YN

        NULL=CHAR(0)

        LUN5=15

        CALL RDPRMC(YN,NLET,.TRUE.,
     &     'CREATE (I)MAGES, (C)OLORTABLE, (B)OTH (=DEFAULT)'
     &     ,NULL,IRTFLG)

        CALL RDPRMI(IMANY,IDUM,NOT_USED,
     &     'NUMBER OF COLORS OR IMAGES IN IMAGE (MAX 10)')

        IF (YN.EQ.'C') GOTO 1000

        CALL FILERD(FIL5,NLET,NULL,'OUTPUT',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        DO  ICOL=1,IMANY
           ILUNZ(ICOL)=ICOL+20
           ILUNS(ICOL)=ICOL+30

           MAXIM = 0
           CALL OPFILEC(0,.TRUE.,FIL1,ILUNZ(ICOL),'O',IFORM,
     &                  NSAM,NROW,NSL,MAXIM,'Z-BUF',.FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

	   IF (IMAMI.NE.1)
     &        CALL NORM3(ILUNZ(ICOL),NSAM,NROW,NSL,FMAX,FMIN,AV)
           FMAXZ(ICOL)=FMAX
           FMINZ(ICOL)=FMIN

           MAXIM = 0
           CALL OPFILEC(0,.TRUE.,FIL2,ILUNS(ICOL),'O',IFORM,NSAM1,NROW1,
     &                 NSL,MAXIM,'Z-BUF',.FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 1


           IF (NSAM1.NE.NSAM .OR. NROW1.NE.NROW) THEN
             CALL ERRT(1,'MRNCOLOR',NDUM)
             GOTO 1
           ENDIF

	   IF (IMAMI.NE.1)
     &        CALL NORM3(ILUNS(ICOL),NSAM1,NROW1,NSL,FMAX,FMIN,AV)
           FMAXS(ICOL)=FMAX
           FMINS(ICOL)=FMIN
	ENDDO
        RANGE = FMAXS(1)-FMINS(1)
        IB(1) = 0
        IB(2) = NSAM
        DO  ICOL=2,IMANY

C          SET BUFFER BOUNDARIES:
           IG      = (ICOL-1)*2+1
           IG2     = IG+1
           IB(IG)  = IB(IG-1)+NSAM
           IB(IG2) = IB(IG)+NSAM

C          FIND LARGEST DENSITY RANGE:
           R = FMAXS(ICOL)-FMINS(ICOL)
           IF (R.GT.RANGE) RANGE=R
	ENDDO

        MAXIM = 0
        CALL OPFILEC(0,.FALSE.,FIL5,LUN5,'U',IFORM,NSAM,NROW,NSL,
     &                   MAXIM,' ',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 1

C       SET RANGE OF IMAGES TO LARGEST OF THE 2.
        KSTEP=117./FLOAT(IMANY)-2.

c       PERC=3*RANGE/STEP 
c       D3=IMANY*RANGE+IMANY*PERC

C       PUT THE 2 RANGE PICTURE TOGETHER:

        DO  I=1,NROW

C          READ Z-BUFFERS FOR DECISION OF HIDDEN SURFACES:
           DO  II=1,IMANY

              IBZ=(II-1)*2+1
              IBS=IBZ+1
              CALL REDLIN(ILUNZ(II),BUF(IB(IBZ)+1),NSAM,I)

C             READ S-BUFFERS:
              CALL REDLIN(ILUNS(II),BUF(IB(IBS)+1),NSAM,I)

	   ENDDO

C          NOW MERGE LINE I:

           DO  K=1,NSAM
             IBS=1
             IPERC=1
             IWHICH=1
             SHORT=NSAM

             DO J=1,IMANY

             IBZ=(J-1)*2+1
             IBS=IBZ+1
             VAL=BUF(IB(IBZ)+K)
             IF(VAL.NE.0..AND.VAL.LT.SHORT) THEN
                SHORT=VAL
                IWHICH=IBS
                IPERC=J
             ENDIF

          ENDDO

          OUT(K)=BUF(IB(IWHICH)+K)/RANGE*KSTEP+(IPERC-1)*(KSTEP+2)

	ENDDO

        IF(I.EQ.1) OUT(1)=117

        CALL WRTLIN(LUN5,OUT,NSAM,I)

	ENDDO

1       CONTINUE

C       CLOSE ALL FILES:
        DO  I=1,IMANY
           CLOSE(ILUNZ(I))
           CLOSE(ILUNS(I))
	ENDDO
        CLOSE(LUN5)
        IF (YN .EQ. 'I') GOTO 200

1000    CONTINUE

C       OPEN(UNIT=LUN5,FILE=FIL5,STATUS='NEW',FORM='FORMATTED',ERR=300)
        CALL OPAUXFILE(.TRUE.,FIL5,NULL,LUN5,0,
     &                 'U','COLOR TABLE',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

c       3 BECAUSE OF PERC BEING 3 STEPS LARGE
        COLRANGE=117./FLOAT(IMANY)-2.
        ICOLRANGE=COLRANGE
        COLSTEP=256./(iCOLRANGE)
        ISTART=1

        WRITE(NOUT,*) 
     &    'COLOUR INTENSITIES IN ARBITRARY UNITS.'
        WRITE(NOUT,*) 
     &     'THE HIGHEST INTENSITY WILL BE SET TO 1 AND THE OTHERS'
        WRITE(NOUT,*) 
     &     'NORMALIZED ACCORDINGLY'

        KOUNT=0
        DO  I=1,IMANY
           WRITE(NOUT,110) I
110        FORMAT(1X,I3,'. COLOUR,:')
           CALL RDPRM2(RED,GREEN,NOT_USED,'RED,GREEN$')
           CALL RDPRM(BLUE,NOT_USED,'BLUE$') 
           CMAX=RED
           IF (GREEN.GT.CMAX) CMAX=GREEN
           IF(BLUE.GT.CMAX) CMAX=BLUE 
           RED=RED/CMAX
           GREEN=GREEN/CMAX
           BLUE=BLUE/CMAX
           REDS=COLSTEP*RED
           GREENS=COLSTEP*GREEN
           BLUES=COLSTEP*BLUE
           DO  IC=1,ICOLRANGE 
              IBLUE=(IC-1)*BLUES
              IRED=(IC-1)*REDS
              IGREEN=(IC-1)*GREENS
              KOUNT=KOUNT+1
              WRITE(LUN5,103) IRED,IGREEN,IBLUE,KOUNT+9
103           FORMAT(4I5)
	   ENDDO
C          WRITE 2 LINES MORE OF THIS:
           DO  IC=1,2
              KOUNT=KOUNT+1
              WRITE(LUN5,103) IRED,IGREEN,IBLUE,KOUNT+9
	   ENDDO
	ENDDO
        CLOSE(LUN5)
        GOTO 200

200     CONTINUE

        RETURN
        END
@


1.14
log
@enter
@
text
@d10 1
a10 1
C=* Email: spider@@wadsworth.org                                        *
@


1.13
log
@GPL_2010
@
text
@d187 1
a187 1
     &    'ENTER COLOUR INTENSITIES IN ARBITRARY UNITS.'
@


1.12
log
@GPL License fixed
@
text
@a4 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d6 5
a10 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d12 1
a12 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d17 1
a17 1
C=* This program is distributed in the hope that it will be useful,    *
d19 1
a19 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a20 1
C=*                                                                    *
d22 1
a22 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@HRI GPL License used
@
text
@a4 2
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      **
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
d8 1
a8 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a27 6

C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
@


1.10
log
@opfilec
@
text
@d5 1
d7 24
@


1.9
log
@nloop,iloop_removed
@
text
@d3 1
d18 1
d21 2
d27 1
a27 1
        CHARACTER *81 FIL1,FIL2,FIL3,FIL4,FIL5
d51 2
a52 2
           CALL OPFILE(.TRUE.,FIL1,ILUNZ(ICOL),'O',IFORM,NSAM,NROW,NSL,
     &                   MAXIM,'Z-BUF',.FALSE.,IRTFLG)
d61 1
a61 1
           CALL OPFILE(.TRUE.,FIL2,ILUNS(ICOL),'O',IFORM,NSAM1,NROW1,
d93 1
a93 1
        CALL OPFILE(.FALSE.,FIL5,LUN5,'U',IFORM,NSAM,NROW,NSL,
@


1.8
log
@used opfile, opauxfile & cosmetic
@
text
@d34 1
a34 1
        CALL RDPRMI(IMANY,IDUM,NLOOP,ILOOP,
d180 2
a181 2
           CALL RDPRM2(RED,GREEN,NLOOP,ILOOP,'RED,GREEN$')
           CALL RDPRM(BLUE,NLOOP,ILOOP,'BLUE$') 
@


1.7
log
@a
@
text
@d2 1
a2 1
C                                                                      *
d11 1
a11 1
C                                                               *
a15 2


d31 2
a32 2
     $     'CREATE (I)MAGES, (C)OLORTABLE, (B)OTH (=DEFAULT)'
     $     ,NULL,IRTFLG)
d35 1
a35 1
     $     'NUMBER OF COLORS OR IMAGES IN IMAGE (MAX 10)')
d45 4
a48 1
           CALL FILERD(FIL1,NLET,NULL,'Z-BUF',IRTFLG)
d50 1
a50 2
           CALL OPENF(FIL1,ILUNZ(ICOL),NSAM,NROW,'OLD',NF,NSL)
           IF (NF .NE. 2) RETURN
d56 8
a63 6
           CALL FILERD(FIL2,NLET,NULL,'SHADE-',IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
           CALL OPENF(FIL2,ILUNS(ICOL),NSAM1,NROW1,'OLD',NF,NSL)
           IF (NF .NE. 2) GOTO 1
           IF (NSAM1.NE.NSAM.OR.NROW1.NE.NROW) THEN
             WRITE(NOUT,*) '*** INCONSISTENT DIMENSIONS ****'
d66 1
d72 3
a74 3
        RANGE=FMAXS(1)-FMINS(1)
        IB(1)=0
        IB(2)=NSAM
d78 4
a81 4
           IG=(ICOL-1)*2+1
           IG2=IG+1
           IB(IG)=IB(IG-1)+NSAM
           IB(IG2)=IB(IG)+NSAM
d84 2
a85 2
           R=FMAXS(ICOL)-FMINS(ICOL)
           IF(R.GT.RANGE) RANGE=R
d88 4
a91 2
        CALL OPENF(FIL5,LUN5,NSAM,NROW,'UNKNOWN',NF,NSL)
        IF (NF .NE. 2) GOTO 1
d94 1
a94 1
        KSTEP=117./float(IMANY)-2.
d145 1
a148 1

d154 2
a155 1
        IF (YN.EQ.'I') GOTO 200
d158 3
a160 1
        CALL FILERD(FIL5,NLET,'RGB','COLOR TABLE',IRTFLG)
a162 2
        OPEN(UNIT=LUN5,FILE=FIL5,STATUS='NEW',FORM='FORMATTED',ERR=300)

d170 1
a170 1
     $     'ENTER COLOUR INTENSITIES IN ARBITRARY UNITS.'
d172 1
a172 1
     $     'THE HIGHEST INTENSITY WILL BE SET TO 1 AND THE OTHERS'
d174 1
a174 1
     $     'NORMALIZED ACCORDINGLY'
d207 1
a207 3
300     CONTINUE
        WRITE(NOUT,*) '**** UNABLE TO OPEN COLOR TABLE FILE ****'
        RETURN
@


1.6
log
@cnosave
@
text
@d16 1
a16 1
CNO_SAVE
@


1.5
log
@used norm3
@
text
@d16 2
@


1.4
log
@*** empty log message ***
@
text
@d1 13
d20 3
a22 2
        DIMENSION ILUNZ(10),ILUNS(10),IB(20)
        DIMENSION FMAXZ(10),FMINZ(10),FMAXS(10),FMINS(10)
d25 1
d43 23
a65 21
        ILUNZ(ICOL)=ICOL+20
        ILUNS(ICOL)=ICOL+30
        CALL FILERD(FIL1,NLET,NULL,'Z-BUF',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        CALL OPENF(FIL1,ILUNZ(ICOL),NSAM,NROW,'OLD',NF,NSL)
        IF (NF .NE. 2) RETURN
	IF(IMAMI.NE.1)CALL NORM(ILUNZ(ICOL),NSAM,NROW,FMAX,FMIN,AV)
        FMAXZ(ICOL)=FMAX
        FMINZ(ICOL)=FMIN

        CALL FILERD(FIL2,NLET,NULL,'SHADE-',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        CALL OPENF(FIL2,ILUNS(ICOL),NSAM1,NROW1,'OLD',NF,NSL)
        IF (NF .NE. 2) GOTO 1
        IF (NSAM1.NE.NSAM.OR.NROW1.NE.NROW) THEN
          WRITE(NOUT,*) '*** INCONSISTENT DIMENSIONS ****'
          GOTO 1
        ENDIF
	IF(IMAMI.NE.1)CALL NORM(ILUNS(ICOL),NSAM1,NROW1,FMAX,FMIN,AV)
        FMAXS(ICOL)=FMAX
        FMINS(ICOL)=FMIN
d72 9
a80 9
C SET BUFFER BOUNDARIES:
        IG=(ICOL-1)*2+1
        IG2=IG+1
        IB(IG)=IB(IG-1)+NSAM
        IB(IG2)=IB(IG)+NSAM

C FIND LARGEST DENSITY RANGE:
        R=FMAXS(ICOL)-FMINS(ICOL)
        IF(R.GT.RANGE) RANGE=R
d86 1
a86 1
C SET RANGE OF IMAGES TO LARGEST OF THE 2.
d89 2
a90 2
c        PERC=3*RANGE/STEP 
c        D3=IMANY*RANGE+IMANY*PERC
d92 1
a92 1
C PUT THE 2 RANGE PICTURE TOGETHER:
d96 2
a97 2
C READ Z-BUFFERS FOR DECISION OF HIDDEN SURFACES:
        DO  II=1,IMANY
d99 3
a101 3
        IBZ=(II-1)*2+1
        IBS=IBZ+1
        CALL REDLIN(ILUNZ(II),BUF(IB(IBZ)+1),NSAM,I)
d103 2
a104 2
C READ S-BUFFERS:
        CALL REDLIN(ILUNS(II),BUF(IB(IBS)+1),NSAM,I)
d106 1
a106 5
	ENDDO



C NOW MERGE LINE I:
d108 1
a108 1
        DO  K=1,NSAM
d110 5
a114 4
        IBS=1
        IPERC=1
        IWHICH=1
        SHORT=NSAM
d116 1
a116 1
        DO J=1,IMANY
d118 8
a125 8
        IBZ=(J-1)*2+1
        IBS=IBZ+1
        VAL=BUF(IB(IBZ)+K)
        IF(VAL.NE.0..AND.VAL.LT.SHORT) THEN
        SHORT=VAL
        IWHICH=IBS
        IPERC=J
        ENDIF
d127 1
a127 1
	ENDDO
d129 1
a129 1
        OUT(K)=BUF(IB(IWHICH)+K)/range*kstep+(IPERC-1)*(kstep+2)
d140 1
a140 1
C CLOSE ALL FILES:
d143 2
a144 2
        CLOSE(ILUNZ(I))
        CLOSE(ILUNS(I))
d147 2
a148 2
        IF(YN.EQ.'I') GOTO 200
1000     CONTINUE
d155 1
a155 1
c 3 because of perc being 3 steps large
d162 1
a162 1
     $  'ENTER COLOUR INTENSITIES IN ARBITRARY UNITS.'
d164 1
a164 1
     $  'THE HIGHEST INTENSITY WILL BE SET TO 1 AND THE OTHERS'
d166 1
a166 1
     $  'NORMALIZED ACCORDINGLY'
d170 26
a195 26
        WRITE(NOUT,110) I
110     FORMAT(1X,I3,'. COLOUR,:')
        CALL RDPRM2(RED,GREEN,NLOOP,ILOOP,'RED,GREEN$')
        CALL RDPRM(BLUE,NLOOP,ILOOP,'BLUE$') 
        CMAX=RED
        IF(GREEN.GT.CMAX) CMAX=GREEN
        IF(BLUE.GT.CMAX) CMAX=BLUE 
        RED=RED/CMAX
        GREEN=GREEN/CMAX
        BLUE=BLUE/CMAX
        REDS=COLSTEP*RED
        GREENS=COLSTEP*GREEN
        BLUES=COLSTEP*BLUE
        DO  IC=1,ICOLRANGE 
        IBLUE=(IC-1)*BLUES
        IRED=(IC-1)*REDS
        IGREEN=(IC-1)*GREENS
        KOUNT=KOUNT+1
        WRITE(LUN5,103) IRED,IGREEN,IBLUE,KOUNT+9
103     FORMAT(4I5)
	ENDDO
C WRITE 2 LINES MORE OF THIS:
        DO  IC=1,2
        KOUNT=KOUNT+1
        WRITE(LUN5,103) IRED,IGREEN,IBLUE,KOUNT+9
	ENDDO
d203 1
@


1.3
log
@removed ifdef UNIX
@
text
@d27 1
a27 1
        DO 100 ICOL=1,IMANY
d49 1
a49 1
100     CONTINUE
d53 1
a53 1
        DO 101 ICOL=2,IMANY
d64 1
a64 1
101     CONTINUE
d77 1
a77 1
        DO 3 I=1,NROW
d80 1
a80 1
        DO 31 II=1,IMANY
d89 1
a89 1
31      CONTINUE
d95 1
a95 1
        DO 2 K=1,NSAM
d102 1
a102 1
        DO 21 J=1,IMANY
d113 1
a113 1
21      CONTINUE
d117 1
a117 1
2       CONTINUE
d123 1
a123 1
3       CONTINUE
d128 1
a128 1
        DO 40 I=1,IMANY
d131 1
a131 1
40      CONTINUE
d155 1
a155 1
        DO 201 I=1,IMANY
d169 1
a169 1
        DO 102 IC=1,ICOLRANGE 
d176 1
a176 1
102     CONTINUE
d178 1
a178 1
        DO 301 IC=1,2
d181 2
a182 2
301     CONTINUE
201     CONTINUE
@


1.2
log
@cpp_lines_added
@
text
@a2 1
#ifdef SP_UNIX
d4 1
a4 3
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d7 1
a7 1
        dimension ilunZ(10),ILUNS(10),IB(20)
d16 2
a17 2
     $  'CREATE (I)MAGES,(C)OLORTABLE,(B)OTH (=DEFAULT)$'
     $  ,NULL,IRTFLG)
d20 1
a20 1
     $  'NUMBER OF COLORS OR IMAGES IN IMAGE (MAX 10)$')
d22 1
a22 1
        IF(YN.EQ.'C') GOTO 1000
@


1.1
log
@Initial revision
@
text
@d3 3
d7 1
@
