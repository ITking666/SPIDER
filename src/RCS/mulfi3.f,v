head	1.10;
access;
symbols
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.7
	prec_CA:1.7
	noindx:1.7
	Bproc:1.7
	oct21:1.5
	last77:1.5;
locks; strict;
comment	@c @;


1.10
date	2010.06.24.13.26.19;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.20.40.25;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.18.30.48;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.12.07.18.04.21;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.11.10.23.09.41;	author yuchen;	state Exp;
branches;
next	1.5;

1.5
date	97.10.10.17.48.21;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	95.10.10.15.03.33;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	94.12.19.13.55.55;	author ramani;	state Exp;
branches;
next	1.2;

1.2
date	94.12.08.19.28.51;	author ramani;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.41;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.10
log
@GPL_2010
@
text
@
C ++********************************************************************
C                                                                      *
C                                                                      *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C                                                                      *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C        0         2         3         4         5         6         7 *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

         SUBROUTINE MULFI3(LUN1,A1,B1,B2,NSAM,NROW,NSLICE)

C LUN2*CONJG(LUN1)
         DIMENSION  A1(NSAM,NROW,NSLICE),B1(NSAM),B2(NSAM)
         COMPLEX  QT,FQ
        LOGICAL IFNS,IFNR,IFND

C
        PI=4.0*ATAN(1.0)
        IFNR=MOD(NROW,2).EQ.0
        IFND=MOD(NSAM,2).EQ.0
        IFNS=MOD(NSLICE,2).EQ.0
        IF(IFND)  THEN
        LBD=2
        ELSE
        LBD=1
        ENDIF
        IF(IFNR)  THEN
        LBR=2
        ELSE
        LBR=1
        ENDIF
        IF(IFNS)  THEN
        LBS=2
        ELSE
        LBS=1
        ENDIF
        ND2=NSAM/2
        NR2=NROW/2
        NS2=NSLICE/2
         LNS=(NSAM-2)/2
C
         DO    K=1,LBS
	IZ=(K-1)*NS2
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
         DO    J=1,LBR
	IY=(J-1)*NR2
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	NR1=J+(K-1)*NROW
         CALL  REDLIN(LUN1,B1,NSAM,NR1)
	DO  I=1,LBD
	IX=(I-1)*ND2
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
        QT=CMPLX(A1(I,J,K),0.0)*CMPLX(B1(I),0.0)*FQ
	A1(I,J,K)=REAL(QT)
	ENDDO
         CALL  MLC(A1(3,J,K),B1(3),A1(3,J,K),LNS)
         DO    I=3,NSAM-1,2
	IX=I/2
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
        QT=CMPLX(A1(I,J,K),A1(I+1,J,K))*FQ
	A1(I,J,K)=REAL(QT)
	A1(I+1,J,K)=AIMAG(QT)
	ENDDO
	IF(.NOT.IFND)THEN
	IX=ND2
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
        QT=CMPLX(A1(NSAM,J,K),A1(2,J,K))*
     &  CMPLX(B1(NSAM),-B1(2))*FQ
	A1(NSAM,J,K)=REAL(QT)
	A1(2,J,K)=AIMAG(QT)
	ENDIF
	ENDDO
	ENDDO
C
         DO    J=1,LBR
	IY=(J-1)*NR2
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
         DO    K=3,NSLICE-1,2
	IZ=K/2
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	NR1=J+(K-1)*NROW
	NR3=J+K*NROW
         CALL  REDLIN(LUN1,B1,NSAM,NR1)
         CALL  REDLIN(LUN1,B2,NSAM,NR3)
         DO    I=1,LBD
	IX=(I-1)*ND2
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,J,K),A1(I,J,K+1))*
     &  CMPLX(B1(I),-B2(I))*FQ
         A1(I,J,K)=REAL(QT)
         A1(I,J,K+1)=AIMAG(QT)
	 ENDDO
         CALL  MLC(A1(3,J,K),B1(3),A1(3,J,K),LNS)
         CALL  MLC(A1(3,J,K+1),B2(3),A1(3,J,K+1),LNS)
         DO    I=3,NSAM-1,2
	IX=I/2
	iz=(k-1)
	if(iz.gt.ns2)iz=iz-nslice
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,J,K),A1(I+1,J,K))*FQ
         A1(I,J,K)=REAL(QT)
         A1(I+1,J,K)=AIMAG(QT)
	iz=iz+1
	if(iz.gt.ns2)iz=iz-nslice
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
	QT=CMPLX(A1(I,J,K+1),A1(I+1,J,K+1))*FQ
         A1(I,J,K+1)=REAL(QT)
         A1(I+1,J,K+1)=AIMAG(QT)
	 ENDDO
	IF(.NOT.IFND)THEN
	IX=ND2
	iz=(k-1)
	if(iz.gt.ns2)iz=iz-nslice
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
        QT=CMPLX(A1(NSAM,J,K),A1(2,J,K))*
     &  CMPLX(B1(NSAM),-B1(2))*FQ
	A1(NSAM,J,K)=REAL(QT)
	A1(2,J,K)=AIMAG(QT)
	iz=iz+1
	if(iz.gt.ns2)iz=iz-nslice
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
        QT=CMPLX(A1(NSAM,J,K+1),A1(2,J,K+1))*
     &  CMPLX(B2(NSAM),-B2(2))*FQ
	A1(NSAM,J,K+1)=REAL(QT)
	A1(2,J,K+1)=AIMAG(QT)
	ENDIF
	ENDDO
	IF(.NOT.IFNS)THEN
	IZ=NS2
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	NR1=J+(NSLICE-1)*NROW
	NR3=J+NROW
         CALL  REDLIN(LUN1,B1,NSAM,NR1)
         CALL  REDLIN(LUN1,B2,NSAM,NR3)
         DO    I=1,LBD
	IX=(I-1)*ND2
	 XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,J,NSLICE),A1(I,J,2))*
     &  CMPLX(B1(I),-B2(I))*FQ
         A1(I,J,NSLICE)=REAL(QT)
          A1(I,J,2)=AIMAG(QT)
	 ENDDO
         CALL  MLC(A1(3,J,NSLICE),B1(3),A1(3,J,NSLICE),LNS)
         CALL  MLC(A1(3,J,2),B2(3),A1(3,J,2),LNS)
         DO    I=3,NSAM-1,2
	IX=I/2
	iz=-1
	 XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,J,NSLICE),A1(I+1,J,NSLICE))*FQ
         A1(I,J,NSLICE)=REAL(QT)
         A1(I+1,J,NSLICE)=AIMAG(QT)
	iz=1
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,J,2),A1(I+1,J,2))*FQ
         A1(I,J,2)=REAL(QT)
          A1(I+1,J,2)=AIMAG(QT)
	 ENDDO
	IF(.NOT.IFND)THEN
	IX=ND2
	iz=-1
	 XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
        QT=CMPLX(A1(NSAM,J,NSLICE),A1(2,J,NSLICE))*
     &  CMPLX(B1(NSAM),-B1(2))*FQ
	A1(NSAM,J,NSLICE)=REAL(QT)
	A1(2,J,NSLICE)=AIMAG(QT)
	iz=1
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
        QT=CMPLX(A1(NSAM,J,2),A1(2,J,2))*
     &  CMPLX(B2(NSAM),-B2(2))*FQ
	A1(NSAM,J,2)=REAL(QT)
	A1(2,J,2)=AIMAG(QT)
	ENDIF
	ENDIF
	ENDDO
C
         DO    K=1,NSLICE
	IZ=(K-1)
	IF(IZ.GT.NS2)IZ=IZ-NSLICE
	ZZ=2.0*PI*FLOAT(IZ)*FLOAT(NS2)/FLOAT(NSLICE)
         DO    J=3,NROW-1,2
	IY=J/2
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	NR1=J+(K-1)*NROW
	NR3=J+1+(K-1)*NROW
         CALL  REDLIN(LUN1,B1,NSAM,NR1)
         CALL  REDLIN(LUN1,B2,NSAM,NR3)
         DO    I=1,LBD
	IX=(I-1)*ND2
	 XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,J,K),A1(I,J+1,K))*
     &  CMPLX(B1(I),-B2(I))*FQ
         A1(I,J,K)=REAL(QT)
         A1(I,J+1,K)=AIMAG(QT)
	 ENDDO
         CALL  MLC(A1(3,J,K),B1(3),A1(3,J,K),LNS)
         CALL  MLC(A1(3,J+1,K),B2(3),A1(3,J+1,K),LNS)
         DO    I=3,NSAM-1,2
	IX=I/2
	iy=(j-1)
	if(iy.gt.nr2)iy=iy-nrow
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,J,K),A1(I+1,J,K))*FQ
         A1(I,J,K)=REAL(QT)
         A1(I+1,J,K)=AIMAG(QT)
	iy=iy+1
	if(iy.gt.nr2)iy=iy-nrow
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,J+1,K),A1(I+1,J+1,K))*FQ
         A1(I,J+1,K)=REAL(QT)
         A1(I+1,J+1,K)=AIMAG(QT)
	 ENDDO
	IF(.NOT.IFND)THEN
	IX=ND2
	iy=(j-1)
	if(iy.gt.nr2)iy=iy-nrow
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
        QT=CMPLX(A1(NSAM,J,K),A1(2,J,K))*
     &  CMPLX(B1(NSAM),-B1(2))*FQ
	A1(NSAM,J,K)=REAL(QT)
	A1(2,J,K)=AIMAG(QT)
	iy=iy+1
	if(iy.gt.nr2)iy=iy-nrow
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
        QT=CMPLX(A1(NSAM,J+1,K),A1(2,J+1,K))*
     &  CMPLX(B2(NSAM),-B2(2))*FQ
	A1(NSAM,J+1,K)=REAL(QT)
	A1(2,J+1,K)=AIMAG(QT)
	ENDIF
	ENDDO
	IF(.NOT.IFNR)THEN
	IY=NR2
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	NR1=NROW+(K-1)*NROW
	NR3=2+(K-1)*NROW
         CALL  REDLIN(LUN1,B1,NSAM,NR1)
         CALL  REDLIN(LUN1,B2,NSAM,NR3)
         DO    I=1,LBD
	IX=(I-1)*ND2
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,NROW,K),A1(I,2,K))*
     &  CMPLX(B1(I),-B2(I))*FQ
         A1(I,NROW,K)=REAL(QT)
          A1(I,2,K)=AIMAG(QT)
	  ENDDO
         CALL  MLC(A1(3,NROW,K),B1(3),A1(3,NROW,K),LNS)
         CALL  MLC(A1(3,2,K),B2(3),A1(3,2,K),LNS)
         DO    I=3,NSAM-1,2
	IX=I/2
	iy=-1
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,NROW,K),A1(I+1,nrow,K))*FQ
         A1(I,NROW,K)=REAL(QT)
         A1(I+1,nrow,K)=AIMAG(QT)
	iy=1
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c 	fq=cmplx(1.0,0.0)
         QT=CMPLX(A1(I,2,K),A1(I+1,2,K))*FQ
         A1(I,2,K)=REAL(QT)
         A1(I+1,2,K)=AIMAG(QT)
	ENDDO
	IF(.NOT.IFND)THEN
	IX=ND2
	iy=-1
	XX=2.0*PI*FLOAT(IX)*FLOAT(ND2)/FLOAT(NSAM)
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c 	fq=cmplx(1.0,0.0)
       QT=CMPLX(A1(NSAM,NROW,K),A1(2,NROW,K))*
     &  CMPLX(B1(NSAM),-B1(2))*FQ
	A1(NSAM,NROW,K)=REAL(QT)
	A1(2,NROW,K)=AIMAG(QT)
	iy=1
	YY=2.0*PI*FLOAT(IY)*FLOAT(NR2)/FLOAT(NROW)
	FQ=CMPLX(COS(XX+YY+ZZ),SIN(XX+YY+ZZ))
c	fq=cmplx(1.0,0.0)
        QT=CMPLX(A1(NSAM,2,K),A1(2,2,K))*
     &  CMPLX(B2(NSAM),-B2(2))*FQ
	A1(NSAM,2,K)=REAL(QT)
	A1(2,2,K)=AIMAG(QT)
	ENDIF
	ENDIF
	ENDDO
         END
@


1.9
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.7
log
@header
@
text
@d8 24
@


1.6
log
@a
@
text
@d2 23
a24 2
C $$ MULFI3.FOR
C
d26 1
@


1.5
log
@*** empty log message ***
@
text
@d9 1
a9 1
CNO_SAVE
@


1.4
log
@nosave
@
text
@d35 1
a35 1
         DO  1  K=1,LBS
d38 1
a38 1
         DO  1  J=1,LBR
d43 1
a43 1
	DO 25 I=1,LBD
d49 2
a50 1
25	A1(I,J,K)=REAL(QT)
d52 1
a52 1
         DO  11  I=3,NSAM-1,2
d59 2
a60 1
11	A1(I+1,J,K)=AIMAG(QT)
d71 2
a72 1
1        CONTINUE
d74 1
a74 1
         DO  3  J=1,LBR
d77 1
a77 1
         DO  4  K=3,NSLICE-1,2
d84 1
a84 1
         DO  31  I=1,LBD
d92 2
a93 1
31       A1(I,J,K+1)=AIMAG(QT)
d96 1
a96 1
         DO  32  I=3,NSAM-1,2
d114 2
a115 1
32       A1(I+1,J,K+1)=AIMAG(QT)
d138 1
a138 1
4	CONTINUE
d146 1
a146 1
         DO  311  I=1,LBD
d154 2
a155 1
311       A1(I,J,2)=AIMAG(QT)
d158 1
a158 1
         DO  321  I=3,NSAM-1,2
d174 2
a175 1
321       A1(I+1,J,2)=AIMAG(QT)
d197 1
a197 1
3        CONTINUE
d199 1
a199 1
         DO  2  K=1,NSLICE
d203 1
a203 1
         DO  8  J=3,NROW-1,2
d210 1
a210 1
         DO  310  I=1,LBD
d218 2
a219 1
310       A1(I,J+1,K)=AIMAG(QT)
d222 1
a222 1
         DO  323  I=3,NSAM-1,2
d240 2
a241 1
323      A1(I+1,J+1,K)=AIMAG(QT)
d264 1
a264 1
8	CONTINUE
d272 1
a272 1
         DO  231  I=1,LBD
d280 2
a281 1
231       A1(I,2,K)=AIMAG(QT)
d284 1
a284 1
         DO  56  I=3,NSAM-1,2
d300 2
a301 1
56       A1(I+1,2,K)=AIMAG(QT)
d323 1
a323 1
2        CONTINUE
@


1.3
log
@mixed radices for cross-correlation accomodated
@
text
@d9 1
a312 1
	RETURN
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 2
C++************************************************************************
C
a3 17
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
C **************************************************************************
C
C
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--************************************************************************
C
C $$ MULFI3.FOR
C
d7 1
a7 1
         COMPLEX  QT
d10 1
d36 1
d39 1
d44 5
a48 2
	IFQ=(-1)**(IX+IY+IZ)
25	A1(I,J,K)=A1(I,J,K)*B1(I)*IFQ
d52 6
a57 3
	IFQ=(-1)**(IX+IY+IZ)
	A1(I,J,K)=A1(I,J,K)*IFQ
11	A1(I+1,J,K)=A1(I+1,J,K)*IFQ
d59 6
a64 2
	IFQ=(-1)**(ND2+IY+IZ)
        QT=CMPLX(A1(NSAM,J,K),A1(2,J,K))*CMPLX(B1(NSAM),-B1(2))*IFQ
d71 2
a73 1
	IY=(J-1)*NR2
d75 1
d77 1
a77 1
	NR2=J+K*NROW
d79 1
a79 1
         CALL  REDLIN(LUN1,B2,NSAM,NR2)
d82 5
a86 2
	IFQ=(-1)**(IX+IY+IZ)
         QT=CMPLX(A1(I,J,K),A1(I,J,K+1))*CMPLX(B1(I),-B2(I))*IFQ
d93 17
a109 5
	IFQ=(-1)**(IX+IY+IZ)
         A1(I,J,K)=A1(I,J,K)*IFQ
         A1(I,J,K+1)=A1(I,J,K+1)*IFQ
         A1(I+1,J,K)=A1(I+1,J,K)*IFQ
32       A1(I+1,J,K+1)=A1(I+1,J,K+1)*IFQ
d111 9
a119 2
	IFQ=(-1)**(ND2+IY+IZ)
        QT=CMPLX(A1(NSAM,J,K),A1(2,J,K))*CMPLX(B1(NSAM),-B1(2))*IFQ
d122 7
a128 1
        QT=CMPLX(A1(NSAM,J,K+1),A1(2,J,K+1))*CMPLX(B2(NSAM),-B2(2))*IFQ
d135 1
d137 1
a137 1
	NR2=J+NROW
d139 1
a139 1
         CALL  REDLIN(LUN1,B2,NSAM,NR2)
d142 5
a146 2
	IFQ=(-1)**(IX+IY+IZ)
         QT=CMPLX(A1(I,J,NSLICE),A1(I,J,2))*CMPLX(B1(I),-B2(I))*IFQ
d153 15
a167 5
	IFQ=(-1)**(IX+IY+IZ)
         A1(I,J,NSLICE)=A1(I,J,NSLICE)*IFQ
         A1(I,J,2)=A1(I,J,2)*IFQ
         A1(I+1,J,NSLICE)=A1(I+1,J,NSLICE)*IFQ
321       A1(I+1,J,2)=A1(I+1,J,2)*IFQ
d169 6
a174 1
	IFQ=(-1)**(ND2+IY+IZ)
d176 1
a176 1
     &  CMPLX(B1(NSAM),-B1(2))*IFQ
d179 6
a184 1
        QT=CMPLX(A1(NSAM,J,2),A1(2,J,2))*CMPLX(B2(NSAM),-B2(2))*IFQ
d193 2
d197 1
d199 1
a199 1
	NR2=J+1+(K-1)*NROW
d201 1
a201 1
         CALL  REDLIN(LUN1,B2,NSAM,NR2)
d204 5
a208 2
	IFQ=(-1)**(IX+IY+IZ)
         QT=CMPLX(A1(I,J,K),A1(I,J+1,K))*CMPLX(B1(I),-B2(I))*IFQ
d215 17
a231 5
	IFQ=(-1)**(IX+IY+IZ)
         A1(I,J,K)=A1(I,J,K)*IFQ
         A1(I,J+1,K)=A1(I,J+1,K)*IFQ
         A1(I+1,J,K)=A1(I+1,J,K)*IFQ
323      A1(I+1,J+1,K)=A1(I+1,J+1,K)*IFQ
d233 9
a241 2
	IFQ=(-1)**(ND2+IY+IZ)
        QT=CMPLX(A1(NSAM,J,K),A1(2,J,K))*CMPLX(B1(NSAM),-B1(2))*IFQ
d244 7
a250 1
        QT=CMPLX(A1(NSAM,J+1,K),A1(2,J+1,K))*CMPLX(B2(NSAM),-B2(2))*IFQ
d257 1
d259 1
a259 1
	NR2=2+(K-1)*NROW
d261 1
a261 1
         CALL  REDLIN(LUN1,B2,NSAM,NR2)
d264 5
a268 2
	IFQ=(-1)**(IX+IY+IZ)
         QT=CMPLX(A1(I,NROW,K),A1(I,2,K))*CMPLX(B1(I),-B2(I))*IFQ
d275 15
a289 5
	IFQ=(-1)**(IX+IY+IZ)
         A1(I,NROW,K)=A1(I,NROW,K)*IFQ
         A1(I,2,K)=A1(I,2,K)*IFQ
         A1(I+1,NROW,K)=A1(I+1,NROW,K)*IFQ
56       A1(I+1,2,K)=A1(I+1,2,K)*IFQ
d291 8
a298 2
	IFQ=(-1)**(ND2+IY+IZ)
        QT=CMPLX(A1(NSAM,NROW,K),A1(2,NROW,K))*CMPLX(B1(NSAM),-B1(2))*IFQ
d301 6
a306 1
        QT=CMPLX(A1(NSAM,2,K),A1(2,2,K))*CMPLX(B2(NSAM),-B2(2))*IFQ
@


1.1
log
@Initial revision
@
text
@d26 1
d28 21
d51 22
a72 9
         DO  1  I=1,2
         DO  1  J=1,2
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         A1(1,J,I)=A1(1,J,I)*B1(1)
         A1(2,J,I)=A1(2,J,I)*B1(2)
         CALL  MLC(A1(3,J,I),B1(3),A1(3,J,I),LNS)
         DO  11  K=1,NSAM
         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
11       A1(K,J,I)=A1(K,J,I)*(-1)**(IX+IY+IZ)
d75 131
a205 15
         DO  2  I=1,NSLICE
         DO  2  J=3,NROW,2
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+1+(I-1)*NROW)
         DO  21  K=1,2
         QT=CMPLX(A1(K,J,I),A1(K,J+1,I))*CMPLX(B1(K),-B2(K))
         A1(K,J,I)=REAL(QT)
21       A1(K,J+1,I)=AIMAG(QT)
         CALL  MLC(A1(3,J,I),B1(3),A1(3,J,I),LNS)
         CALL  MLC(A1(3,J+1,I),B2(3),A1(3,J+1,I),LNS)
         DO  22  K=1,NSAM
         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
         A1(K,J,I)=A1(K,J,I)*(-1)**(IX+IY+IZ)
         CALL  FINDFRQ(K,J+1,I,NSAM,NROW,NSLICE,IX,IY,IZ)
22       A1(K,J+1,I)=A1(K,J+1,I)*(-1)**(IX+IY+IZ)
d207 1
a207 17
C
         DO  3  I=3,NSLICE,2
         DO  3  J=1,2
         CALL  REDLIN(LUN1,B1,NSAM,J+(I-1)*NROW)
         CALL  REDLIN(LUN1,B2,NSAM,J+I*NROW)
         DO  31  K=1,2
         QT=CMPLX(A1(K,J,I),A1(K,J,I+1))*CMPLX(B1(K),-B2(K))
         A1(K,J,I)=REAL(QT)
31       A1(K,J,I+1)=AIMAG(QT)
         CALL  MLC(A1(3,J,I),B1(3),A1(3,J,I),LNS)
         CALL  MLC(A1(3,J,I+1),B2(3),A1(3,J,I+1),LNS)
         DO  32  K=1,NSAM
         CALL  FINDFRQ(K,J,I,NSAM,NROW,NSLICE,IX,IY,IZ)
         A1(K,J,I)=A1(K,J,I)*(-1)**(IX+IY+IZ)
         CALL  FINDFRQ(K,J,I+1,NSAM,NROW,NSLICE,IX,IY,IZ)
32       A1(K,J,I+1)=A1(K,J,I+1)*(-1)**(IX+IY+IZ)
3        CONTINUE
@
