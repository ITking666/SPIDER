head	1.18;
access;
symbols
	pre_getangas:1.18
	GPL2010:1.18
	pre_GPL2010:1.17
	pre_var_equation:1.17
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.13
	prec_CA:1.13
	noindx:1.13
	Bproc:1.11
	oct21:1.11
	last77:1.9;
locks; strict;
comment	@c @;


1.18
date	2010.06.24.13.25.42;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2008.05.05.14.42.38;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2008.05.05.14.37.32;	author leith;	state dead;
branches;
next	1.15;

1.15
date	2005.10.17.20.47.23;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.18.37.47;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.10.15.12.36.05;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.29.18.27.02;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.06.07.17.57.10;	author pawel;	state Exp;
branches;
next	1.10;

1.10
date	99.06.04.21.02.17;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	98.08.13.13.01.36;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	97.10.06.20.43.46;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	97.04.24.21.13.08;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	96.09.11.18.16.47;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	96.09.11.17.54.23;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.09.09.20.39.08;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.09.09.20.18.35;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.09.03.18.28.34;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.08.27.13.50.35;	author pawel;	state Exp;
branches;
next	;


desc
@2d simple fft
@


1.18
log
@GPL_2010
@
text
@C
C++*********************************************************************
C
C FMRS_2R.F                     private(j)          OCT 01 ARDEAN LEITH
 
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C  Order of elements:
C
C--*********************************************************************

         SUBROUTINE  FMRS_2R(X,NNNN,NSAM,NROW,INV)

         DIMENSION  X(NNNN,NROW)

	INS=INV*NNNN

        IF (INV .GE. 0)  THEN
c$omp      parallel do private(i),shared(invt) 
	   DO I=1,NROW
	      INVT = INV
	      CALL FMRS_1(X(1,I),NSAM,INVT)
	   ENDDO
           IF (INVT .LE. 0)  THEN
	      INV = INVT
	      RETURN
	   ENDIF
	ENDIF

c$omp   parallel do private(i),shared(invt) 
        DO I=1,NNNN,2
	   INVT = INS
	   CALL FFTMCF(X(I,1),X(I+1,1),NROW,NROW,NROW,INVT)
	ENDDO

        IF (INVT.EQ.0)  THEN
	   INV = 0
	   RETURN
	ENDIF
	IF (INV.GT.0)  RETURN

C       NORMALIZE FOR INVERSE
        Q = 1.0/FLOAT(NROW)
c$omp   parallel do private(i,j)
        DO J=1,NROW
           DO I=1,NNNN
              X(I,J)=X(I,J)*Q
	   ENDDO
	ENDDO 

c$omp   parallel do private(i),shared(invt) 
	DO I=1,NROW
	   INVT=INV
	   CALL  FMRS_1(X(1,I),NSAM,INVT)
	ENDDO

        IF(INVT.LE.0)  INV=INVT

        END
@


1.17
log
@recoverd after delete
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.16
log
@put in oracfmskm.f
@
text
@@


1.15
log
@GPL License fixed
@
text
@@


1.14
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a7 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
a31 1
C **************************************************************************
a34 1
C--************************************************************************
@


1.13
log
@private j
@
text
@d2 1
d8 1
d10 1
d12 24
d42 1
d46 1
@


1.12
log
@cosmetic
@
text
@d4 2
a5 1
C $$ FMRS_2R.FOR
a17 1
C
d21 1
d52 1
a52 1
c$omp   parallel do private(i)
@


1.11
log
@fixed OpenMP
@
text
@d19 1
a19 3
C
C $$ FMRS_2R.FOR
C
d22 1
a22 1
C
d24 11
a34 11
C
        IF(INV.GE.0)  THEN
c$omp parallel do private(i),shared(invt) 
	 DO    I=1,NROW
	  INVT=INV
	  CALL  FMRS_1(X(1,I),NSAM,INVT)
	 ENDDO
         IF(INVT.LE.0)  THEN
	  INV=INVT
	  RETURN
	 ENDIF
d36 5
a40 4
c$omp parallel do private(i),shared(invt) 
       DO    I=1,NNNN,2
	INVT=INS
	CALL  FFTMCF(X(I,1),X(I+1,1),NROW,NROW,NROW,INVT)
d42 4
a45 4
C
        IF(INVT.EQ.0)  THEN
	INV=0
	RETURN
d47 9
a55 8
	IF(INV.GT.0)  RETURN
C NORMALIZE FOR INVERSE
        Q=1.0/FLOAT(NROW)
c$omp parallel do private(i)
        DO    J=1,NROW
        DO    I=1,NNNN
         X(I,J)=X(I,J)*Q
	ENDDO
d57 5
a61 4
c$omp parallel do private(i),shared(invt) 
	DO  I=1,NROW
	INVT=INV
	CALL  FMRS_1(X(1,I),NSAM,INVT)
d63 1
d65 1
@


1.10
log
@OpenMP
@
text
@d27 1
a27 1
        IF(INV.LT.0)  THEN
d29 5
a33 5
	DO    I=1,NROW
	INVT=INV
	CALL  FMRS_1(X(1,I),NSAM,INVT)
	ENDDO
        IF(INVT.LE.0)  THEN
d36 1
a36 1
	ENDIF
@


1.9
log
@missing parallel command reintroduced
@
text
@a23 1
CNO_SAVE	
d27 2
a28 2
        IF(INV.LT.0)  GOTO 2
c$doacross  local(i),share(invt) 
d34 3
a36 2
	INV=INVT
	RETURN
d38 2
a39 3
2	CONTINUE
c$doacross  local(i),share(invt) 
        DO    I=1,NNNN,2
d43 1
a43 1

d51 1
a51 1
c$doacross  local(i)
d57 1
a57 1
c$doacross  local(i),share(invt) 
@


1.8
log
@*** empty log message ***
@
text
@d58 1
@


1.7
log
@had to modify previous version - optimization O3 failed
@
text
@d30 1
a30 1
	DO  10  I=1,NROW
d32 2
a33 1
10	CALL  FMRS_1(X(1,I),NSAM,INVT)
d40 1
a40 1
        DO  14  I=1,NNNN,2
d42 3
a44 1
14	CALL  FFTMCF(X(I,1),X(I+1,1),NROW,NROW,NROW,INVT)
d53 6
a58 4
        DO  2002  J=1,NROW
        DO  2002  I=1,NNNN
2002    X(I,J)=X(I,J)*Q
	DO  20  I=1,NROW
d60 2
a61 1
20	CALL  FMRS_1(X(1,I),NSAM,INVT)
@


1.6
log
@corrected 2
@
text
@d28 1
a28 2
        IF(INV)  2,2,1
1       CONTINUE 
d49 1
a49 1
c$doacross  local(j,i) 
d53 4
a56 1
	GOTO 1
@


1.5
log
@parallel corrected
@
text
@d43 2
a44 2
        IF(INVT.GE.0)  THEN
	INV=INVT
d47 1
@


1.4
log
@*** empty log message ***
@
text
@d30 1
a30 1
c$doacross  local(i,invt) 
d38 2
a39 2
2	CONTINUE 
c$doacross  local(i,inv,inst)
d41 4
a44 4
	INST=INS
	CALL  FFTMCF(X(I,1),X(I+1,1),NROW,NROW,NROW,INST)
	IF(INST.EQ.0)  THEN
	INV=0
a46 2
14	CONTINUE
	IF(INV.EQ.1)  RETURN
@


1.3
log
@break due to image dimensions
@
text
@d39 1
a39 1
c$doacross  local(i,inv)
@


1.2
log
@local fixed
@
text
@d30 1
a30 1
c$doacross  local(i) 
d32 6
a37 2
10	CALL  FMRS_1(X(1,I),NSAM,INV)
        IF(INV.LE.0)  RETURN
d39 1
a39 1
c$doacross  local(i) 
d41 7
a47 1
14      CALL  FFTMCF(X(I,1),X(I+1,1),NROW,NROW,NROW,INS)
@


1.1
log
@Initial revision
@
text
@d30 1
a30 1
c$doacross  local(i,work) 
d32 2
a33 4
        CALL  FMRS_1(X(1,I),NSAM,INV)
        IF(INV.EQ.0)  RETURN
10      CONTINUE
	IF(INV.EQ.-1)  RETURN
@
