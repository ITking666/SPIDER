head	1.19;
access;
symbols
	healthdept_2018:1.19
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.12
	prec_CA:1.12
	noindx:1.11
	Bproc:1.9
	oct21:1.8
	last77:1.8;
locks; strict;
comment	@c @;


1.19
date	2018.10.03.14.34.16;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2014.01.12.19.09.59;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2013.08.29.15.31.55;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.26.54;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.12.19.18.17.02;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.20.39.45;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.18.30.08;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.19.18.01.55;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.11.14.08.31;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.24.20.42.46;	author bimal;	state Exp;
branches;
next	1.9;

1.9
date	99.11.10.23.11.19;	author yuchen;	state Exp;
branches;
next	1.8;

1.8
date	98.09.29.15.25.33;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	98.05.01.16.01.14;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	98.01.21.20.28.28;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.05.08.14.55.30;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	97.04.22.14.43.05;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	96.08.14.13.31.37;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.10.57;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.44;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.19
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C SETVAL.F           REMOVED FROM UTIL1           OCT  88 ARDEAN LEITH
C                    LONG FILE NAMES              FEB  89 ARDEAN LEITH
C                    CAN OPEN STACK WITHOUT @@ NOW SEPT 98 ARDEAN LEITH
C                    OPFILEC                      FEB  03 ARDEAN LEITH
C                    RDPRAF REMOVED               DEC  05 ARDEAN LEITH 
C                    RDPRM3S                      AUG  13 ARDEAN LEITH 
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2013  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  SETVAL(LUN1)
C
C  PURPOSE:   SET PARTICULAR LABEL LOCATIONS TO SPECIFIED VALUES
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

        SUBROUTINE SETVAL(LUN1,NX1,NY1,NZ1)

        INCLUDE 'CMBLOCK.INC' 
        INCLUDE 'CMLIMIT.INC' 

        CHARACTER(LEN=MAXNAM) :: FILNAM
        CHARACTER(LEN=1)      :: SET,ANS

        INTEGER, PARAMETER    :: NMAX = 200
        INTEGER               :: ILIST(NMAX) 
        REAL                  :: FLIST(NMAX) 
        REAL                  :: FARRAY(4)

        REAL, PARAMETER       :: PI   = 3.14159
        CHARACTER(LEN=1)      :: NULL = CHAR(0)
        INTEGER, PARAMETER    :: LUN2 = 21


10      CALL RDPRMC(SET,NCHAR,.TRUE.,
     &    '(A)NGLES, (BUF), (P)COPY, (C)LEAR, OR (F)IX',NULL,IRTFLG)

        IF (SET == 'A') THEN
C          CHANGE THE TILT ANGLES ---------------------------------- A

           CALL RDPRI1S(ILPOS,NOT_USED,
     &                  'ANGLE SET 1, 2, OR 3',IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

C          GET EULER ANGLES
           PHI   = 0.0
           THETA = 0.0
           PSI   = HUGE(PSI)

           CALL RDPRM3S(PHI,THETA,PSI,NOT_USED,
     &                 'PHI, THETA, & PSI',IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

           IF (PSI == HUGE(PSI)) THEN
              PSI = 0.0
              CALL  RDPRM1S(PSI,NOT_USED,'PSI',IRTFLG)
              IF (IRTFLG .NE. 0) RETURN
           ENDIF

           FARRAY(1) = 1.0
           FARRAY(2) = PHI
           FARRAY(3) = THETA
           FARRAY(4) = PSI

           IF (ILPOS == 1) THEN
             LOCATION = 14
             NANG     = 4
             CALL SETLAB(LUN1,NX1,DUM,LOCATION,NANG,FARRAY,'U',IRTFLG)

           ELSEIF (ILPOS == 2)THEN
             LOCATION = 30
             NANG     = 4
             CALL SETLAB(LUN1,NX1,DUM,LOCATION,NANG,FARRAY,'U',IRTFLG)

           ELSEIF (ILPOS == 3)THEN
             FARRAY(1) = 2
             LOCATION  = 30
             NANG      = 1
             CALL SETLAB(LUN1,NX1,DUM,LOCATION,NANG,FARRAY,'U',IRTFLG)
             LOCATION  = 34
             NANG      = 3
             CALL SETLAB(LUN1,NX1,DUM,LOCATION,NANG,
     &                   FARRAY(2),'U',IRTFLG)
           ELSE
              CALL ERRT(102,'INCORRECT NUMBER FOR ANGLE SET',ILPOS)
              GOTO 9000
           ENDIF

        ELSEIF (SET == 'B') THEN
C          CHANGE A PARTICULAR BUFFER LOCATION IN THE FILE LABEL ---- B

1601       NVAL1 = NMAX
           CALL RDPRAI(ILIST,NMAX,NVAL1,1,1024,
     &          'NUMBER(S) OF HEADER LOCATION TO BE CHANGED',
     &          NULL,IRTFLG)
           IF (IRTFLG == -1) GOTO 10

           NMAX2 = NVAL1
           CALL RDPRA(
     &              'NEW VALUE FOR EACH HEADER LOCATION CHANGED',
     &               NMAX2,0,.FALSE.,FLIST,NVAL2,IRTFLG)
           IF (IRTFLG == -1) GOTO 1601

           IF (NVAL2 .NE. NVAL1) THEN
               CALL ERRT(102,'INCORRECT NUMBER OF VALUES',NVAL2)
               GOTO 9000
           ENDIF
              
           IF (IFORM == 8 .OR. IFORM == 11) THEN
C             FOR 8 BIT FILES
              LENREC = NX1 / 4
              IF ((LENREC * 4) .LT. NX1) LENREC = LENREC + 1
           ELSE
C             FOR NORMAL 32 BIT SPIDER FILES
              LENREC = NX1
           ENDIF

           DO I = 1,NVAL1
             CALL SETLAB(LUN1,LENREC,DUM,ILIST(I),1,FLIST(I),'U',IRTFLG)
           ENDDO

       ELSEIF (SET == 'P') THEN
C         COPY ANGLES FROM HEADER OF INPUT FILE TO  OUTPUT FILE ----- P
C         OUTPUT FILE PREEXISTS, IT IS NOT CREATED HERE.

          MAXIM = 0
          CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'O',ITYPE,
     &            NX2,NY2,NZ2,MAXIM,'OUTPUT',.TRUE.,IRTFLG)
          IF (IRTFLG .NE. 0) RETURN

          CALL COPYANGLES(LUN1,LUN2,NX1,NX2) 
                 
        ELSEIF (SET == 'C') THEN
C          CLEAR ---------------------------------------------------- C

           SIG   = -1.0
           CALL SETPRM(LUN1,NX1,NY1,0.0,0.0,0.0,'U')

        ELSEIF (SET == 'F') THEN
C          SET FMIN, FMAX, AV, AND S.D.

C          INPUT PHI AND THETA  TO BE STORED IN FMAX AND FMIN
           CALL RDPRM(FMAX,NOT_USED,'IMAGE MAXIMUM')

           CALL RDPRM(FMIN,NOT_USED,'IMAGE MINIMUM')

           CALL RDPRMC(ANS,NCHAR,.TRUE.,
     &           'AVERAGE AND STANDARD DEVIATION AVAILABLE (Y/N)',
     &           NULL,IRTFLG)

           IF (ANS == 'N') THEN
               CALL ERRT(101,'MUST PROVIDE AVERAGE AND S.D. NOW',NE)
               GOTO 9000
           ENDIF

           CALL RDPRM2(AV,SIG,NOT_USED, 
     &               'AVERAGE & STANDARD DEVIATION')

           IF (IFORM < 0) THEN
C             FOURIER
              FMAX = FMAX * PI / 180.0
              FMIN = FMIN * PI / 180.0
           ENDIF
           CALL SETPRM(LUN1,NX1,NY1,FMAX,FMIN,AV,'U')

        ELSE
C          UNKNOWN OPTION ------------------------------------------- ?
           CALL ERRT(101,'UNKNOWN OPTION',NE)
           GOTO 9000
        ENDIF

9000    CONTINUE
        CLOSE(LUN1)
        CLOSE(LUN2)

        END
@


1.18
log
@enter
@
text
@d16 1
a16 1
C=* Email: spider@@wadsworth.org                                        *
@


1.17
log
@phi, .... 3vals
@
text
@d165 1
a165 1
           CALL RDPRM(FMAX,NOT_USED,'ENTER IMAGE MAXIMUM')
d167 1
a167 1
           CALL RDPRM(FMIN,NOT_USED,'ENTER IMAGE MINIMUM')
@


1.16
log
@GPL_2010
@
text
@d9 1
d14 1
a14 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d39 1
a39 1
        SUBROUTINE SETVAL(LUN1,NSAM1,NROW1,NSLICE1)
d45 1
a45 1
        CHARACTER(LEN=1)      :: SET,ANS,NULL
d52 3
a54 1
        REAL, PARAMETER       :: PI = 3.14159
a55 2
        NULL = CHAR(0)
        LUN2 = 21
d60 1
a60 1
        IF (SET .EQ. 'A') THEN
d63 20
a82 2
           CALL RDPRMI(ILPOS,IDUM,NOT_USED,'ANGLE SET 1, 2, OR 3')
           CALL RDPRM2(PHI,THETA,NOT_USED,'ENTER PHI AND THETA')
d85 1
a85 1
           CALL RDPRM(PSI,NOT_USED,'ENTER PSI')
d87 1
a87 3
           FARRAY(4) = PSI
           FARRAY(1) = 1.0
           IF (ILPOS.EQ.1) THEN
d90 1
a90 1
             CALL SETLAB(LUN1,NSAM1,DUM,LOCATION,NANG,FARRAY,'U',IRTFLG)
d92 1
a92 1
           ELSEIF (ILPOS .EQ. 2)THEN
d95 1
a95 1
             CALL SETLAB(LUN1,NSAM1,DUM,LOCATION,NANG,FARRAY,'U',IRTFLG)
d97 1
a97 1
           ELSEIF (ILPOS .EQ. 3)THEN
d101 1
a101 1
             CALL SETLAB(LUN1,NSAM1,DUM,LOCATION,NANG,FARRAY,'U',IRTFLG)
d104 1
a104 1
             CALL SETLAB(LUN1,NSAM1,DUM,LOCATION,NANG,
d107 1
a107 1
              CALL ERRT(102,'INCORRECT NUMBER FOR SET',ILPOS)
d111 1
a111 1
        ELSEIF (SET .EQ. 'B') THEN
d116 1
a116 1
     &          'ENTER NUMBER(S) OF HEADER LOCATION TO BE CHANGED',
d118 1
a118 1
           IF (IRTFLG .EQ. -1) GOTO 10
d122 1
a122 1
     &              'ENTER NEW VALUE FOR EACH HEADER LOCATION CHANGED',
d124 1
a124 1
           IF (IRTFLG .EQ. -1) GOTO 1601
d131 1
a131 1
           IF (IFORM .EQ. 8 .OR. IFORM .EQ. 11) THEN
d133 2
a134 2
              LENREC = NSAM1 / 4
              IF ((LENREC * 4) .LT. NSAM1) LENREC = LENREC + 1
d137 1
a137 1
              LENREC = NSAM1
d144 1
a144 1
       ELSEIF (SET .EQ. 'P') THEN
d150 1
a150 1
     &            NSAM2,NROW2,NSLICE2,MAXIM,'OUTPUT',.TRUE.,IRTFLG)
d153 1
a153 1
          CALL COPYANGLES(LUN1,LUN2,NSAM1,NSAM2) 
d155 1
a155 1
        ELSEIF (SET .EQ. 'C') THEN
d159 1
a159 1
           CALL SETPRM(LUN1,NSAM1,NROW1,0.0,0.0,0.0,'U')
d161 1
a161 1
        ELSEIF (SET .EQ. 'F') THEN
d166 1
d168 1
d173 1
a173 1
           IF (ANS .EQ. 'N') THEN
d179 1
a179 1
     &               'ENTER AVERAGE, STANDARD DEVIATION')
d181 1
a181 1
           IF (IFORM .LT. 0) THEN
d186 1
a186 1
           CALL SETPRM(LUN1,NSAM1,NROW1,FMAX,FMIN,AV,'U')
d190 1
a190 1
           CALL ERRT(23,'SETVAL',NE)
d197 1
a197 1
        RETURN
@


1.15
log
@used rdpra instead of rdpraf
@
text
@a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@GPL License fixed
@
text
@d4 2
a5 2
C SETVAL.F           REMOVED FROM UTIL1 OCT 88 ARDEAN LEITH
C                    LONG FILE NAMES FEB 89 ARDEAN LEITH
d8 1
d45 1
d47 2
a48 3
        CHARACTER *81  FILNAM
        CHARACTER      SET,ANS,NULL
        DIMENSION      FARRAY(4), VALUE(60), BUF(1000)
d50 4
a53 2
        PARAMETER      (NMAX = 200)
        COMMON         ILIST(NMAX),FLIST(NMAX),A0(12000)
d55 1
a55 1
        DATA PI /3.14159/
d71 1
d77 1
a77 1
             CALL SETLAB(LUN1,NSAM1,A0,LOCATION,NANG,FARRAY,'U',IRTFLG)
d80 3
a82 3
              LOCATION = 30
              NANG     = 4
              CALL SETLAB(LUN1,NSAM1,A0,LOCATION,NANG,FARRAY,'U',IRTFLG)
d85 7
a91 7
              FARRAY(1) = 2
              LOCATION  = 30
              NANG      = 1
              CALL SETLAB(LUN1,NSAM1,A0,LOCATION,NANG,FARRAY,'U',IRTFLG)
              LOCATION  = 34
              NANG      = 3
              CALL SETLAB(LUN1,NSAM1,A0,LOCATION,NANG,
d94 1
a94 1
              CALL ERRT(101,'INCORRECT NUMBER FOR SET',NE)
d103 2
a104 2
     &       'ENTER NUMBER(S) OF HEADER LOCATION TO BE CHANGED',
     &       NULL,IRTFLG)
d107 5
a111 4
           NVAL2 = NMAX
           CALL RDPRAF(FLIST,NMAX,NVAL2,-10E30,10E30,
     &       'ENTER NEW VALUE FOR EACH HEADER LOCATION CHANGED',
     &       NULL,IRTFLG)
a112 1
           IF (IRTFLG .EQ. -1) GOTO 1601
d114 1
a114 1
               CALL ERRT(101,'INCORRECT NUMBER OF VALUES',NE)
d128 1
a128 1
             CALL SETLAB(LUN1,LENREC,A0,ILIST(I),1,FLIST(I),'U',IRTFLG)
@


1.13
log
@HRI GPL License used
@
text
@a2 1
C++*************************************************************************
a8 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
a32 1
C **************************************************************************
@


1.12
log
@opfilec
@
text
@d2 1
d9 1
d11 1
d13 24
d43 1
@


1.11
log
@nloop,iloop_removed
@
text
@d7 1
d45 1
a45 1
C          CHANGE THE TILT ANGLES ----------------------------------- A
d79 1
a79 1
C          CHANGE A PARTICULAR BUFFER LOCATION IN THE FILE LABEL ----- B
d112 1
a112 1
C         COPY ANGLES FROM HEADER OF INPUT FILE TO  HEADER OF OUTPUT FILE----P
d116 4
a119 6
          CALL OPFIL(.TRUE.,FILNAM,LUN2,'O',NSAM2,NROW2,NSLICE2,
     &             MAXIM,'OUTPUT',.TRUE.,IRTFLG)
          IF (IRTFLG .NE. 0) THEN
             CALL ERRT(4,'SETVAL',IER)
             RETURN
          ENDIF
@


1.10
log
@added copy header option
@
text
@d46 2
a47 2
           CALL RDPRMI(ILPOS,IDUM,NLOOP,ILOOP,'ANGLE SET 1, 2, OR 3')
           CALL RDPRM2(PHI,THETA,NLOOP,ILOOP,'ENTER PHI AND THETA')
d50 1
a50 1
           CALL RDPRM(PSI,NLOOP,ILOOP,'ENTER PSI')
d133 2
a134 2
           CALL RDPRM(FMAX,NLOOP,ILOOP,'ENTER IMAGE MAXIMUM')
           CALL RDPRM(FMIN,NLOOP,ILOOP,'ENTER IMAGE MINIMUM')
d144 1
a144 1
           CALL RDPRM2(AV,SIG,NLOOP,ILOOP, 
@


1.9
log
@a
@
text
@d4 3
a6 3
C SETVAL.F           REMOVED FROM UTIL1 OCT 88 ArDean Leith
C                    LONG FILE NAMES FEB 89 ArDean Leith
C                    CAN OPEN STACK WITHOUT @@ NOW SEPT 98 ArDean Leith
d14 1
a14 1
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
d26 1
a26 1
	INCLUDE 'CMBLOCK.INC' 
d28 1
a28 1

d30 1
a30 1
        DIMENSION      FARRAY(4)
d38 1
d41 1
a41 1
     &    '(A)NGLES, (BUF), (C)LEAR, OR (F)IX',NULL,IRTFLG)
d110 13
a122 1

d162 1
a164 2


@


1.8
log
@changed parameters
@
text
@d27 1
a27 1
CNO_SAVE
@


1.7
log
@allowed it to work on fourier files
@
text
@d4 3
a6 2
C SETVAL.FOR            REMOVED FROM UTIL1 OCT 88 al
C                       LONG FILE NAMES FEB 89 al
d17 1
a17 1
C  SETVAL(FILNAM,LUN1)
d24 1
a24 1
        SUBROUTINE SETVAL(FILNAM,LUN1)
d28 1
a28 1
        CHARACTER *(*) FILNAM
d39 1
a39 7
C       DISP OF "Z" WILL ALLOW CORRECTING STACK ERROR
10      MAXIM = 0
        CALL OPFIL(.FALSE.,FILNAM,LUN1,'Z',NSAM1,NROW1,NSLICE1,
     &             MAXIM,'XXXX',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

    	CALL RDPRMC(SET,NCHAR,.TRUE.,
@


1.6
log
@used opfil
@
text
@d41 1
a41 1
     &             MAXIM,'XXXX',.FALSE.,IRTFLG)
@


1.5
log
@added disp = e
@
text
@d26 1
a26 1

d38 5
a42 3
C       DISP OF 'E" WILL ALLOW CORRECTING STACK ERROR
10      CALL OPENF(FILNAM,LUN1,NSAM1,NROW1,'E',NF,NSLICE1)
        IF (NF .EQ. 1)  RETURN
d97 2
a98 2
              CALL ERRT(101,'INCORRECT NUMBER OF VALUES',NE)
              GOTO 9000
d102 3
a104 3
C            FOR 8 BIT FILES
             LENREC = NSAM1 / 4
             IF ((LENREC * 4) .LT. NSAM1) LENREC = LENREC + 1
d106 2
a107 2
C            FOR NORMAL 32 BIT SPIDER FILES
             LENREC = NSAM1
@


1.4
log
@removed type, cosmetic
@
text
@d38 2
a39 1
10      CALL OPENF(FILNAM,LUN1,NSAM1,NROW1,'OLD',NF,NSLICE1)
@


1.3
log
@no more short label code
@
text
@a27 1
        CHARACTER *2   TYPE
a28 1
        
d41 2
a42 2
1600	CALL RDPRMC(SET,NCHAR,.TRUE.,
     &    '(A)NGLES, (C)LEAR, (F)IX, (B)UF OR (T)YPE',NULL,IRTFLG)
d44 2
a45 2
        IF (SET .EQ. 'B') THEN
C          CHANGE A PARTICULAR BUFFER LOCATION IN THE FILE LABEL
d47 34
d95 1
a95 1
              RETURN
d111 3
a113 2
        ELSEIF (SET .EQ. 'A') THEN
C          CHANGE THE TILT ANGLES
d115 16
a130 16
           CALL RDPRMI(ILPOS,IDUM,NLOOP,ILOOP,'ANGLE SET 1,2,OR 3')
           CALL RDPRM2(PHI,THETA,NLOOP,ILOOP,'ENTER PHI AND THETA')
           FARRAY(2) = PHI
           FARRAY(3) = THETA
           CALL RDPRM(PSI,NLOOP,ILOOP,'ENTER PSI')
           FARRAY(4) = PSI
           FARRAY(1) = 1.0
           IF (ILPOS.EQ.1)THEN
             LOCATION = 14
             NANG     = 4
             CALL SETLAB(LUN1,NSAM1,A0,LOCATION,NANG,FARRAY,'U',IRTFLG)
           ENDIF
           IF (ILPOS .EQ. 2)THEN
              LOCATION = 30
              NANG     = 4
              CALL SETLAB(LUN1,NSAM1,A0,LOCATION,NANG,FARRAY,'U',IRTFLG)
a131 10
           IF (ILPOS .EQ. 3)THEN
              FARRAY(1)=2
              LOCATION=30
              NANG=1
              CALL SETLAB(LUN1,NSAM1,A0,LOCATION,NANG,FARRAY,'U',IRTFLG)
              LOCATION=34
              NANG=3
              CALL SETLAB(LUN1,NSAM1,A0,LOCATION,NANG,
     &                   FARRAY(2),'U',IRTFLG)
           ENDIF
d133 2
a134 2
        ELSEIF (SET .EQ. 'C' .OR. SET .EQ. 'F') THEN
C          CLEAR
d136 4
a139 20
           IF (ABS(IFORM) .EQ. 3) TYPE(2:2) = '3'
           TYPE(1:1) = 'R'
           IF (IFORM .LE. -1) TYPE(1:1) = 'F'

           IF (SET .EQ. 'F') THEN
C             INPUT PHI AND THETA  TO BE STORED IN FMAX AND FMIN
              CALL RDPRM(FMAX,NLOOP,ILOOP,'ENTER MAXIMUM/PHI')
              CALL RDPRM(FMIN,NLOOP,ILOOP,'ENTER MINIMUM/THETA')
              CALL RDPRMC(ANS,NCHAR,.TRUE.,
     &           'AVERAGE/SCALE AVAILABLE (Y/N)',NULL,IRTFLG)

              IF (ANS .NE. 'N') CALL RDPRM(AV,NLOOP,ILOOP,
     &                         'ENTER AVERAGE/SCALE')

              IF (TYPE(1:1) .EQ. 'F') THEN
                 FMAX = FMAX * PI / 180.0
                 FMIN = FMIN * PI / 180.0
              ENDIF
              CALL SETPRM(LUN1,NSAM1,NROW1,FMAX,FMIN,AV,TYPE)
              RETURN
d141 1
a141 13

           SIG   = -1
           IHIST = 0
C          TYPE U PUT INTO SETPRM TO AVOID CHANGE OF TYPE  2/2/87 MR
           CALL SETPRM(LUN1,NSAM1,NROW1,0.,0.,0.,'U')

	ELSEIF (SET .EQ. 'T') THEN
C          CHANGE FILE TYPE
           IF (ABS(IFORM) .EQ. 3) TYPE(2:2) = '3'
           IFORM = -IFORM
           TYPE(1:1) = 'F'
           IF (IFORM .GT. 0) TYPE(1:1) = 'R'
           CALL SETPRM(LUN1,NSAM1,NROW1,0.,0.,0.,TYPE)
d144 1
d146 1
a146 1
           GOTO 1600
d149 2
@


1.2
log
@cpp_lines_added
@
text
@a24 1
#ifdef SP_UNIX
a25 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif
d34 1
a34 4
        COMMON ILIST(NMAX),FLIST(NMAX),A0(12000)
        COMMON /LUNARA/ LUNARA(100),LASLAB
        LOGICAL ONSUN,ONUNIX
        COMMON /OPSYS/  ONSUN,ONUNIX
d41 1
a41 4
        IF (NF .EQ. 1) THEN
           CALL ERRT(4,'SETVAL',NE)
           RETURN
        ENDIF
d51 1
a51 1
     &       'ENTER NUMBER(S) OF LABEL LOCATION TO BE CHANGED',
d57 1
a57 1
     &       'ENTER NEW VALUE FOR EACH LABEL LOCATION CHANGED',
a81 5
           IF (.NOT. ONUNIX .AND. LASLAB .EQ. 0) THEN
              WRITE(NOUT,9933) 
9933          FORMAT(' *** SHORT LABEL FILE, USE OPERATION TT INSTEAD'/)
              RETURN
           ENDIF
d94 1
a94 1
           IF (ILPOS.EQ.2)THEN
d99 1
a99 1
           IF (ILPOS.EQ.3)THEN
d125 1
a125 1
     &          'ENTER AVERAGE/SCALE')
@


1.1
log
@Initial revision
@
text
@d25 3
d29 1
@
