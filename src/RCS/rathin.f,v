head	1.10;
access;
symbols
	pre_mrcs:1.10
	healthdept_2018:1.10
	pre_getangas:1.9
	GPL2010:1.9
	pre_GPL2010:1.8
	pre_var_equation:1.8
	pre_fftwrings:1.8
	pre_opfiles:1.8
	src:1.8
	best-code:1.8
	x-named-regs:1.8
	x:1.8
	v13-00:1.8
	pre_GPL:1.6
	prec_CA:1.6
	noindx:1.6
	Bproc:1.6
	oct21:1.6
	last77:1.6;
locks; strict;
comment	@c @;


1.10
date	2018.10.03.14.34.13;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2010.06.24.13.26.37;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.20.46.59;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.17.18.37.22;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.02.11.17.03.25;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	99.02.05.13.38.40;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.08.27.18.02.14;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.05.17.12.51.04;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.09.37;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.53;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.10
log
@email_health_dept
@
text
@
C **********************************************************************
C
C RATHIN.FOR  -- CREATED OCT 87
C                   
C **********************************************************************
C *  AUTHOR: ArDean Leith                                                  *
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C        RATHIN(DATA,NDATA,SCALE,MAXPTS,DATAT,IRTFLG)
C
C        PURPOSE:   THINS OUT POINTS ON A CONTOUR UNTIL IT REACHES MAXPTS POINTS
C
C        CALLED BY:  SSUPER
C
C        CALLS:   
C
C        PARAMETERS:     DATA   = ARRAY FOR COORD. INPUT
C                        NDATA  = NUMBER OF POINTS ON CNT FILE LOOP
C                        SCALE  = SCALE FACTOR FOR COORD.
C                        RETANGT= ANGLE BETWEEN LINE SEGS.
C                        MAXPTS = MAX LENGTH DESIRED FOR THINNED CONTOUR
C                        MAXTRYS= MAX. THINNING ITERATIONS 
C                        DATAT  = TEMPORARY ARRAY FOR COORD. OUTPUT
C                                 (PASSED TO USE COMMON ARRAY SPACE ONLY)
C                        IRTFLG = ERROR FLAG
C                                 (1 IS NOT THINNED TO MAXPTS)
C
C--********************************************************************


        SUBROUTINE RATHIN(DATA,NDATA,SCALE,RETANGT,MAXPTS,MAXTRYS,
     &                    DATAT,IRTFLG)
        COMMON /UNITS/ LUNDOC,NIN,NOUT
        
        PARAMETER (NSIZE  = 2000)
C..     MAXIMUM OF 2000 POINTS / CONTOUR

        DIMENSION      DATA(3,NSIZE), DATAT(3,NSIZE)
	PARAMETER (QUADPI = 3.141592653589793238462643383279502884197)
	PARAMETER (DGR_TO_RAD = (QUADPI/180))

        DATA MININT/-32768/,MAXINT/32767/,FLTMIN/-10E15/,FLTZER/10E-30/,
     &     FLTMAX/10E30/
        
C       MIN LENGTH LINE TO BE RETAINED (UNLESS ITS DELETION GIVES A
C       NEW LINE LONGER THAN DELMAX)

        DELMAX = 0.1
        DELMAX = DELMAX*DELMAX/(SCALE*SCALE)


C       MAXIMUM ANGLE TO BE RETAINED
CCCC    RETANG = 178 USED TO USE THIS VALUE
        RETANG = RETANGT

        NTRY   = 0

1001    RETCOS = COS(RETANG*DGR_TO_RAD)
        RETCOSQ = RETCOS * RETCOS

           X1   = DATA(1,1)
           Y1   = DATA(2,1)
           X3   = DATA(1,2)
           Y3   = DATA(2,2)
           NK   = 1
           NTRY = NTRY + 1

           DATAT(1,1) = X1
           DATAT(2,1) = Y1

           DO 1244 N3 = 3,NDATA
            X2 = X3
            Y2 = Y3
            X3 = DATA(1,N3)
            Y3 = DATA(2,N3)

C           LENGTHS OF LINES
            DIS13 = ((X3-X1) * (X3-X1)) + ((Y3-Y1) * (Y3-Y1))
C           KEEP THE POINT IF ITS DELETION WOULD GIVE A LINE LONGER 
C           THAN THE REQUESTED MAX LENGTH
            IF (DIS13 .GT. DELMAX) GOTO 1230

            X21 = X1 - X2
            Y21 = Y1 - Y2
            X23 = X3 - X2
            Y23 = Y3 - Y2
            DIS23 = X23*X23 + Y23*Y23
C           REJECT ANY POINTS WHICH ARE CLOSER THAN RETMIN

C           FIND ANGLE BETWEEN LINES  
            DIS12   = X21*X21 + Y21*Y21
            DIS1223 = DIS12*DIS23

C           REJECT DUPLICATED POINTS OR GET DIVISION BY ZERO!
            IF (DIS1223 .LT. FLTZER) GOTO 1244  

C***            COST = (X21*X23+Y23*Y21)/SQRT(DIS1223)
C***            IF (COST .LT. RETCOS) GOTO 1244

            COSTSQ = (X21*X23+Y23*Y21)**2 / DIS1223
            IF (COSTSQ .LT. RETCOSQ) GOTO 1244

C           KEEP THE POINT
 1230       NK = NK + 1
            DATAT(1,NK) = X2
            DATAT(2,NK) = Y2
 
            X1 = X2
            Y1 = Y2           

 1244     CONTINUE                    


C         KEEP LAST POINT ON THE CONTOUR ALWAYS
          NK = NK + 1
          DATAT(1,NK) = X3
          DATAT(2,NK) = Y3
        
          IF (NK .GT. MAXPTS) THEN
C            CONTOUR IS LONGER THAN DESIRED MAXIMUM
             RETANG = RETANG - 1

C            CHECK NUMBER OF ITERATIONS
             IF (NTRY .LT. MAXTRYS) GOTO 1001
             IRTFLG = 1
             WRITE(NOUT,97) NTRY, NK 
97           FORMAT(
     &         ' THINNED:',I3,' TRIES BUT CONTOUR LENGTH STILL: ',I4)
          ELSE
             IRTFLG = 0
          ENDIF

          DO I = 1,NK
             DATA(1,I) = DATAT(1,I)
             DATA(2,I) = DATAT(2,I)
          ENDDO

          NDATA = NK

          RETURN
          END
@


1.9
log
@GPL_2010
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.8
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.7
log
@HRI GPL License used
@
text
@a2 1
C**************************************************************************
a6 1
C **************************************************************************
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 7

C *  COPYRIGHT (C)1987 , WADSWORTH CENTER FOR LABORATORIES AND RESEARCH    *
C *    NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.              *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a31 1
C **************************************************************************
@


1.6
log
@trig
@
text
@d2 1
d7 1
d10 24
d40 1
@


1.5
log
@CNO_SAVE
@
text
@a39 3
  
CNO_SAVE 

d46 2
d65 1
a65 1
1001    RETCOS = COSD(RETANG)
@


1.4
log
@improved
@
text
@d41 2
@


1.3
log
@removed special vax version
@
text
@d16 1
a16 1
C        RATHIN(DATA,NDATA,SCALE,IMAX,DATAT,IRTFLG)
d18 1
a18 1
C        PURPOSE:   THINS OUT POINTS ON A CONTOUR UNTIL IT REACHES IMAX POINTS
a24 3
C                        DATAT2 = TEMPORARY ARRAY FOR COORD. OUTPUT
C                                 (PASSED TO USE COMMON ARRAY SPACE ONLY)
C                        IMAX   = MAX LENGTH OF RETURNED CONTOUR
d27 5
d33 1
d37 3
a39 1
        SUBROUTINE RATHIN(DATA,NDATA,SCALE,IMAX,DATAT,IRTFLG)
d57 1
d59 3
a62 1
        RETANG = 178
d125 6
a130 3
          IF (NK .GT. IMAX) THEN
             RETANG = RETANG -1
             IF (NTRY .LT. 30) GOTO 1001
d132 3
a134 2
             WRITE(NOUT,97) IMAX, NK 
97           FORMAT(' IN RARHIN AFTER',I3,' TRIES CONTOUR STILL >',I4)
d139 1
a139 1
          DO 1002 I = 1,NK
d142 1
a142 1
1002      CONTINUE
@


1.2
log
@cpp_lines_added
@
text
@d1 1
a1 1
#ifdef VMS
d16 1
a16 1
C $$   RATHIN(DATA,NDATA,SCALE,IMAX,DATAT,IRTFLG)
a42 121
        DATA MININT/-32768/,MAXINT/32767/,FLTMIN/-10E30/,FLTZER/10E-30/,
     &     FLTMAX/10E30/
        
C       MIN LENGTH LINE TO BE RETAINED (UNLESS ITS DELETION GIVES A
C       NEW LINE LONGER THAN DELMAX)
        RETMIN = 0.00
        RETMIN = RETMIN*RETMIN/(SCALE*SCALE)

        DELMAX = 0.1
        DELMAX = DELMAX*DELMAX/(SCALE*SCALE)

C       MAXIMUM ANGLE TO BE RETAINED
        NTRY   = 1
        RETANG = 178

C*1001    RETCOS = (COSD(RETANG)) ** 2
1001    RETCOS = COSD(RETANG)

C%%%%%%%%%%%%%%%%%%%%%%%% DEBUG
C             WRITE(0,9001) RETCOS
C9001         FORMAT(' RETCOS:',G11.3)
C******************%%%%%%%%%%%%%%%%%%%%%%%%%%

           X1  = DATA(1,1)
           Y1  = DATA(2,1)
           X3  = DATA(1,2)
           Y3  = DATA(2,2)
           DATAT(1,1) = X1
           DATAT(2,1) = Y1
           NK = 1
   
           DO 1244 N3 = 3,NDATA
            X2 = X3
            Y2 = Y3
            X3 = DATA(1,N3)
            Y3 = DATA(2,N3)

C           LENGTHS OF LINES
            DIS13 = ((X3-X1) * (X3-X1)) + ((Y3-Y1) * (Y3-Y1))
C           KEEP THE POINT IF ITS DELETION WOULD GIVE A LINE LONGER 
C           THAN THE REQUESTED MAX LENGTH
            IF (DIS13 .GT. DELMAX) GOTO 1230

            X21 = X1 - X2
            Y21 = Y1 - Y2
            X23 = X3 - X2
            Y23 = Y3 - Y2
            DIS23 = X23*X23 + Y23*Y23
            IF (DIS23 .LT. RETMIN) GOTO 1244

C           FIND ANGLE BETWEEN LINES  
            DIS12   = X21*X21 + Y21*Y21
            DIS1223 = DIS12*DIS23

C           REJECT DUPLICATED POINTS OR GET DIVISION BY ZERO!
            IF (DIS1223 .EQ. 0.0)GOTO 1244  

            COST = (X21*X23+Y23*Y21)/SQRT(DIS1223)
C*            COST = ((X21*X23+Y23*Y21)) ** 2 / (DIS1223)

C****************DEBUG
C            IF (N3 .LT. 10) THEN
C               WRITE(0,9003) NK,N3,DIS12,DIS23,DIS1223,COST
C9003           FORMAT(' NK,N3,DIS12,2-3,1-2-3,COST:',2I4,4G11.3)
C            ENDIF
C****************************

            IF (COST .LT. RETCOS) GOTO 1244

C           KEEP THE POINT
 1230       NK = NK + 1
            DATAT(1,NK) = X2
            DATAT(2,NK) = Y2
            X1 = X2
            Y1 = Y2           

 1244     CONTINUE                    


C         KEEP LAST POINT ON THE CONTOUR ALWAYS
          NK = NK + 1
          DATAT(1,NK) = X3
          DATAT(2,NK) = Y3

C%%%%%%%%%%%%%%%%%%%%%%%% DEBUG
C             WRITE(0,9000) ntry, RETANG, NK
C9000         FORMAT(' NTRY,RETANG,NK:',I6,G11.3,I6)
C******************%%%%%%%%%%%%%%%%%%%%%%%%%%

          IF (NK .GT. IMAX) THEN
             IF (NTRY .LT. 30) THEN
                WRITE(NOUT,*) 'THINNED WITH <: ',RETANG
                RETANG = RETANG -1
                NTRY   = NTRY + 1
                GOTO 1001                
             ENDIF
             IRTFLG = 1
             WRITE(NOUT,*) ' 30 THINS LEAVE NK: ',NK,' > ',IMAX
             RETURN
          ELSE
             DO 1002 I = 1,NK
               DATA(1,I) = DATAT(1,I)
               DATA(2,I) = DATAT(2,I)
1002         CONTINUE
             NDATA = NK
             IRTFLG = 0
             RETURN            
          ENDIF

      END

#else
        SUBROUTINE RATHIN(DATA,NDATA,SCALE,IMAX,DATAT,IRTFLG)
  
        COMMON /UNITS/ LUNDOC,NIN,NOUT
        
        PARAMETER (NSIZE  = 2000)
C..     MAXIMUM OF 2000 POINTS / CONTOUR

        DIMENSION      DATA(3,NSIZE), DATAT(3,NSIZE)

a135 1
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1

d154 104
@
