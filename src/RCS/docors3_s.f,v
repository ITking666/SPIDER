head	1.8;
access;
symbols
	pre_getangas:1.8
	GPL2010:1.8
	pre_GPL2010:1.7
	pre_var_equation:1.7
	pre_fftwrings:1.7
	pre_opfiles:1.7
	src:1.7
	best-code:1.7
	x-named-regs:1.7
	x:1.7
	v13-00:1.7
	pre_GPL:1.6
	prec_CA:1.6
	noindx:1.6
	Bproc:1.6
	oct21:1.4
	last77:1.3;
locks; strict;
comment	@c @;


1.8
date	2010.06.24.13.25.27;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.17.21.00.22;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.01.06.18.20.05;	author bimal;	state Exp;
branches;
next	1.5;

1.5
date	99.12.07.15.37.15;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.06.03.20.50.48;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.10.06.17.04.45;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.01.30.20.42.02;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.20;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.8
log
@GPL_2010
@
text
@C ++********************************************************************
C                                                                      *
C                                                                      *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C                                                                      *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:                                                         *
C
C IMAGE_PROCESSING_ROUTINE                                             *
C
C        0         2         3         4         5         6         7 *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        subroutine  docors3_s(bcke,bcn,n,nmat,ipcube,nn,ala,ANGS)

        dimension    bcke(nmat),bcn(n,n,n),ipcube(5,nn),angs(3)
        COMMON /PAR/  LDP,NM,LDPNM
        DIMENSION  IM(3)
        DOUBLE PRECISION  RM(3,3),QR(3),THETA,PHI,PSI,DX,DY,DZ
C       EQUIVALENCE  (IM(1),IX),(IM(2),IY),(IM(3),IZ)
        psi=angs(1)/45.0*datan(1.0d0)
        theta=angs(2)/45.0*datan(1.0d0)
        phi=angs(3)/45.0*datan(1.0d0)
        RM(1,1)=DCOS(THETA)*DCOS(PHI)*DCOS(PSI)-DSIN(PHI)*DSIN(PSI)
        RM(2,1)=-DCOS(THETA)*DCOS(PHI)*DSIN(PSI)-DSIN(PHI)*DCOS(PSI)
        RM(3,1)=DSIN(THETA)*DCOS(PHI)
        RM(1,2)=DCOS(THETA)*DSIN(PHI)*DCOS(PSI)+DCOS(PHI)*DSIN(PSI)
        RM(2,2)=-DCOS(THETA)*DSIN(PHI)*DSIN(PSI)+DCOS(PHI)*DCOS(PSI)
        RM(3,2)=DSIN(THETA)*DSIN(PHI)
        RM(1,3)=-DSIN(THETA)*DCOS(PSI)
        RM(2,3)=DSIN(THETA)*DSIN(PSI)
        RM(3,3)=DCOS(THETA)
C
c$omp parallel do private(i,j,ix,iy,iz,qr,qt,a1,a2,a3,a4,a5,
c$omp& a6,a7,a8,iox,ioy,ioz,dx,dy,dz,ixx)
        do   i=1,nn
           ixx=ipcube(3,i)-1-LDP
           iy=ipcube(4,i)-LDP
           iz=ipcube(5,i)-LDP
           do   j=ipcube(1,i),ipcube(2,i)
              ix=ixx+(j+1-ipcube(1,i))
C
C       DO  3  I3=1,3
C       QR(I3)=0.0
C       DO  3  I2=1,3
C3      QR(I3)=QR(I3)+RM(I2,I3)*IM(I2)
              QR(1)=RM(1,1)*IX+RM(2,1)*IY+RM(3,1)*IZ
              QR(2)=RM(1,2)*IX+RM(2,2)*IY+RM(3,2)*IZ
              QR(3)=RM(1,3)*IX+RM(2,3)*IY+RM(3,3)*IZ
C
              IOX=QR(1)+FLOAT(LDPNM)
              DX=QR(1)+LDPNM-IOX
              DX=DMAX1(DX,1.0D-5)
              IOY=QR(2)+FLOAT(LDPNM)
              DY=QR(2)+LDPNM-IOY
              DY=DMAX1(DY,1.0D-5)
              IOZ=QR(3)+FLOAT(LDPNM)
              DZ=QR(3)+LDPNM-IOZ
              DZ=DMAX1(DZ,1.0D-5)
C
c             QT=
c     &         +(1-DX)*(1-DY)*(1-DZ)*bcn(IOX,IOY,IOZ)
c     &         +   DX *(1-DY)*(1-DZ)*bcn(IOX+1,IOY,IOZ)
c     &         +(1-DX)*   DY *(1-DZ)*bcn(IOX,IOY+1,IOZ)
c     &         +(1-DX)*(1-DY)*   DZ *bcn(IOX,IOY,IOZ+1)
c     &         +   DX *   DY *(1-DZ)*bcn(IOX+1,IOY+1,IOZ)
c     &         +   DX *(1-DY)*   DZ *bcn(IOX+1,IOY,IOZ+1)
c     &         +(1-DX)*   DY *   DZ *bcn(IOX,IOY+1,IOZ+1)
c     &         +   DX *   DY *   DZ *bcn(IOX+1,IOY+1,IOZ+1)
C faster version :
c
        a1 = bcn(IOX,IOY,IOZ) 
        a2 = bcn(IOX+1,IOY,IOZ) - bcn(IOX,IOY,IOZ) 
        a3 = bcn(IOX,IOY+1,IOZ) - bcn(IOX,IOY,IOZ) 
        a4 = bcn(IOX,IOY,IOZ+1) - bcn(IOX,IOY,IOZ)
        a5 = bcn(IOX,IOY,IOZ)-bcn(IOX+1,IOY,IOZ)-bcn(IOX,IOY+1,IOZ)
     &     + bcn(IOX+1,IOY+1,IOZ)
        a6 = bcn(IOX,IOY,IOZ)-bcn(IOX+1,IOY,IOZ)-bcn(IOX,IOY,IOZ+1)
     &     + bcn(IOX+1,IOY,IOZ+1)
        a7 = bcn(IOX,IOY,IOZ)-bcn(IOX,IOY+1,IOZ)-bcn(IOX,IOY,IOZ+1)
     &     + bcn(IOX,IOY+1,IOZ+1)
        a8 = bcn(IOX+1,IOY,IOZ)+bcn(IOX,IOY+1,IOZ)+bcn(IOX,IOY,IOZ+1)
     &   - bcn(IOX,IOY,IOZ)-bcn(IOX+1,IOY+1,IOZ)-bcn(IOX+1,IOY,IOZ+1)
     &     - bcn(IOX,IOY+1,IOZ+1) + bcn(IOX+1,IOY+1,IOZ+1)
        QT= a1 + dz*(a4 + a6*dx + (a7 + a8*dx)*dy) + a3*dy
     &         + dx*(a2 + a5*dy)
C**********************************************************
c
              bcke(j)=bcke(j)+ala*QT
           enddo
        enddo
        end

@


1.7
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.6
log
@cosmetic
@
text
@d6 23
a28 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.5
log
@header
@
text
@a0 1

d19 3
a21 1
C                                                                      *
d26 1
a26 1
	subroutine  docors3_s(bcke,bcn,n,nmat,ipcube,nn,ala,ANGS)
d28 17
a44 17
	dimension    bcke(nmat),bcn(n,n,n),ipcube(5,nn),angs(3)
	COMMON /PAR/  LDP,NM,LDPNM
	DIMENSION  IM(3)
	DOUBLE PRECISION  RM(3,3),QR(3),THETA,PHI,PSI,DX,DY,DZ
C	EQUIVALENCE  (IM(1),IX),(IM(2),IY),(IM(3),IZ)
	psi=angs(1)/45.0*datan(1.0d0)
	theta=angs(2)/45.0*datan(1.0d0)
	phi=angs(3)/45.0*datan(1.0d0)
	RM(1,1)=DCOS(THETA)*DCOS(PHI)*DCOS(PSI)-DSIN(PHI)*DSIN(PSI)
	RM(2,1)=-DCOS(THETA)*DCOS(PHI)*DSIN(PSI)-DSIN(PHI)*DCOS(PSI)
	RM(3,1)=DSIN(THETA)*DCOS(PHI)
	RM(1,2)=DCOS(THETA)*DSIN(PHI)*DCOS(PSI)+DCOS(PHI)*DSIN(PSI)
	RM(2,2)=-DCOS(THETA)*DSIN(PHI)*DSIN(PSI)+DCOS(PHI)*DCOS(PSI)
	RM(3,2)=DSIN(THETA)*DSIN(PHI)
	RM(1,3)=-DSIN(THETA)*DCOS(PSI)
	RM(2,3)=DSIN(THETA)*DSIN(PSI)
	RM(3,3)=DCOS(THETA)
d48 34
a81 34
		do   i=1,nn
		ixx=ipcube(3,i)-1-LDP
		iy=ipcube(4,i)-LDP
		iz=ipcube(5,i)-LDP
		do   j=ipcube(1,i),ipcube(2,i)
		ix=ixx+(j+1-ipcube(1,i))
C
C	DO  3  I3=1,3
C	QR(I3)=0.0
C	DO  3  I2=1,3
C3	QR(I3)=QR(I3)+RM(I2,I3)*IM(I2)
	QR(1)=RM(1,1)*IX+RM(2,1)*IY+RM(3,1)*IZ
	QR(2)=RM(1,2)*IX+RM(2,2)*IY+RM(3,2)*IZ
	QR(3)=RM(1,3)*IX+RM(2,3)*IY+RM(3,3)*IZ
C
	IOX=QR(1)+FLOAT(LDPNM)
	DX=QR(1)+LDPNM-IOX
	DX=DMAX1(DX,1.0D-5)
	IOY=QR(2)+FLOAT(LDPNM)
	DY=QR(2)+LDPNM-IOY
	DY=DMAX1(DY,1.0D-5)
	IOZ=QR(3)+FLOAT(LDPNM)
	DZ=QR(3)+LDPNM-IOZ
	DZ=DMAX1(DZ,1.0D-5)
C
c	QT=
c     &		+(1-DX)*(1-DY)*(1-DZ)*bcn(IOX,IOY,IOZ)
c     &		+   DX *(1-DY)*(1-DZ)*bcn(IOX+1,IOY,IOZ)
c     &		+(1-DX)*   DY *(1-DZ)*bcn(IOX,IOY+1,IOZ)
c     &		+(1-DX)*(1-DY)*   DZ *bcn(IOX,IOY,IOZ+1)
c     &		+   DX *   DY *(1-DZ)*bcn(IOX+1,IOY+1,IOZ)
c     &		+   DX *(1-DY)*   DZ *bcn(IOX+1,IOY,IOZ+1)
c     &		+(1-DX)*   DY *   DZ *bcn(IOX,IOY+1,IOZ+1)
c     &		+   DX *   DY *   DZ *bcn(IOX+1,IOY+1,IOZ+1)
d97 1
a97 1
	QT= a1 + dz*(a4 + a6*dx + (a7 + a8*dx)*dy) + a3*dy
d101 5
a105 4
		bcke(j)=bcke(j)+ala*QT
		enddo
	   enddo
	end
@


1.4
log
@OpenMP
@
text
@d1 24
d26 1
@


1.3
log
@*** empty log message ***
@
text
@a6 1
CNO_SAVE
d20 2
a21 2
c$doacross local(i,j,ix,iy,iz,qr,qt,a1,a2,a3,a4,a5,a6,a7,a8,
c$&   iox,ioy,ioz,dx,dy,dz,ixx)
@


1.2
log
@nosave mp
@
text
@d23 1
a23 1
		do  1  i=1,nn
d27 1
a27 1
		do  1  j=ipcube(1,i),ipcube(2,i)
d76 3
a78 1
1		bcke(j)=bcke(j)+ala*QT
@


1.1
log
@Initial revision
@
text
@d6 2
a7 1
	EQUIVALENCE  (IM(1),IX),(IM(2),IY),(IM(3),IZ)
d21 2
d24 1
a24 1
		ix=ipcube(3,i)-1-LDP
d28 1
a28 1
		ix=ix+1
d30 7
a36 4
	DO  3  I3=1,3
	QR(I3)=0.0
	DO  3  I2=1,3
3	QR(I3)=QR(I3)+RM(I2,I3)*IM(I2)
@
