head	1.13;
access;
symbols
	healthdept_2018:1.13
	pre_getangas:1.12
	GPL2010:1.12
	pre_GPL2010:1.11
	pre_var_equation:1.11
	pre_fftwrings:1.11
	pre_opfiles:1.11
	src:1.11
	best-code:1.11
	x-named-regs:1.11
	x:1.11
	v13-00:1.11
	pre_GPL:1.9
	prec_CA:1.9
	noindx:1.9
	Bproc:1.9
	oct21:1.4
	last77:1.4;
locks; strict;
comment	@c @;


1.13
date	2018.10.03.14.34.05;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.24.13.25.35;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.20.39.55;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.18.30.18;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2000.05.12.20.11.54;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.10.18.05.06;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.11.13.40.18;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.12.06.18.25.49;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.11.10.23.09.16;	author yuchen;	state Exp;
branches;
next	1.4;

1.4
date	98.04.02.19.16.02;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.10.06.20.43.34;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.05.07.17.22.45;	author ramani;	state Exp;
branches;
next	1.1;

1.1
date	96.04.23.15.07.34;	author mladjadj;	state Exp;
branches;
next	;


desc
@automatic particle picking
@


1.13
log
@email_health_dept
@
text
@C ++********************************************************************
C                                                                      *
C  FGR                                                                 *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  FGR                                                                 *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C        0         2         3         4         5         6         7 *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

       SUBROUTINE FGR(LUN51,IP,M,D,NG,NMAX,TMEAN,JG,N
     &               ,MD,XX,AR,JV,VV,MXM,E,IHISTI,XT,MDT,LEST)

       IMPLICIT REAL*8 (A-H,O-Z)
       IMPLICIT INTEGER*2 (I-N)
       INTEGER*4  LUN51,LERC
       DIMENSION  XX(M,M),AR(NMAX,MD),N(NMAX),LIN(90)
       DIMENSION  IHISTI(NMAX,NMAX),XT(M)
       DIMENSION  E(NMAX)
       DIMENSION  D(M,2),MAP(30,42),VV(MXM)
       DIMENSION  TMEAN(M),JG(NMAX),JV(M)
       COMMON  /HFGR/  MAP,LINE
       CHARACTER*4  NG(NMAX)
       CHARACTER*1  LINE(90),IG(12),NAM(12),IX,JX,KX,LX,IKR,MX,NX
     &              ,IGWZ
       CHARACTER*10 IBI
       LOGICAL*1    IFR

       DATA IG/'1','2','3','4','5','6','7','8','9','0','A','B'/
       DATA NAM/'A','B','C','D','E','F','G','H','I','J','K','L'/
       DATA IX,JX,KX,LX /'+','I','-',' '/
       DATA IGWZ /'*'/
       DATA IKR /'.'/

       M1   = M
       NSUM = 0

       WRITE(51)M1,MD,NMAX
       WRITE(51)(TMEAN(I),I=1,M1)
       DO  J=1,M1
          WRITE(51)(D(J,K),K=1,MD)
       ENDDO
       DO  I=1,NMAX
          WRITE(51)(AR(I,K),K=1,MD)
       ENDDO
       WRITE(51)(E(I),I=1,NMAX)
       WRITE(51)(JV(I),I=1,M1)

       DO  I=1,30
          DO  J=1,42
             MAP(I,J)=0
          ENDDO
       ENDDO
       IF (LEST .LT.100) LERC=0

C      CALL  WRTXT( 'CLASSIFICATION, RECORD NUMBER:',35,17,15,1)

       REWIND   4
       NMR = 0
  1    READ(4,5687,END=1000)  VV
5687   FORMAT(2X,F3.1,4(1X,1PE14.7),/,4(1X,1PE14.7),/,1(1X,1PE14.7))
       NMR = NMR+1
       IF (LEST.LT.100)  THEN
           LERC = LERC + 1
           READ(10,REC=LERC) IFR
           IF (IFR)  GOTO  1
       ENDIF
       KG = VV(IP)
       DO I=1,NMAX
           IF(KG .EQ. JG(I)) GOTO 6
       ENDDO
       GOTO 1

 6     KG=I

       WRITE(IBI,7023) NSUM+1
 7023  FORMAT(I8)
C      CALL  WRTXT( IBI,8,52,15,3)

       DO  I=1,M1
          J     = JV(I)
          XT(I) = VV(J)
       ENDDO
       NSUM = NSUM+1
       X=0.0
       Y=0.0
       DO I=1,M1
          Z=XT(I)-TMEAN(I)
          X=X+Z*D(I,1)
          Y=Y+Z*D(I,2)
       ENDDO
       CALL RYS1(X,Y,KG,MAP)
       CALL DIST4(M1,NMAX,MDT,KG,XX,XT,TMEAN,
     &           AR,N,E,IHISTI,VV)
       GOTO 1

1000  CONTINUE
       CALL DIST1(NMAX,MD,AR,N,LIN,E)
       DO  I=1,42
          DO  J=1,90
            LINE(J)=LX
          ENDDO
          CALL DIST2(I,NMAX,MD,AR,N,LIN,LINE,E)
          NX=JX
          IF(I.NE.2.AND.I.NE.41) GOTO 7
          MX=KX
          NX=IX
          DO  J=1,90
             LINE(J)=MX
          ENDDO

 7        CONTINUE
          LINE(3)=NX
          LINE(88)=NX
          CALL RYS3(I,LINE,MAP,NAM)
          DO J=1,NMAX
             IF(N(J).LT.1) GOTO 600
             IY=21.-7.*AR(J,2)
             IF(IY.LT.1) IY=1
             IF(IY.GT.42) IY=42
             IF(IY.NE.I) GOTO 600
             IZ=45.+15.*AR(J,1)
             IF(IZ.GT.90) IZ=90
             IF(IZ.LT.1) IZ=1
             IF(IZ.EQ.90) IZ=89
             IF(LINE(IZ+1).EQ.LX) LINE(IZ+1)=LINE(IZ)
             IF(LINE(IZ+1) .EQ. LINE(IZ)) GOTO 601
             IF(LINE(IZ+1) .NE. IKR) LINE(IZ+1)=IGWZ

 601         CONTINUE
             LINE(IZ)=IG(J)

 600         CONTINUE
          ENDDO
          WRITE(LUN51,101)   LINE
 101      FORMAT(1X,90A1)
       ENDDO

       WRITE(LUN51,102)
       DO  I=1,NMAX
          WRITE(LUN51,102) IG(I),NAM(I),JG(I),NG(I)
       ENDDO
 102   FORMAT(3X,A1,' , ',A1,' = ',I4,2X,A4)

       RETURN
       END
@


1.12
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.11
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.10
log
@HRI GPL License used
@
text
@a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER,LERC NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.9
log
@lerc doubly defined
@
text
@d7 24
@


1.8
log
@lerc must be integer*4 on linux
@
text
@d8 1
a8 1
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
a40 1
       INTEGER*4    LERC
@


1.7
log
@lerc --> integer * 4 for linux,  cosmetic
@
text
@d25 1
a25 1
     &    ,MD,XX,AR,JV,VV,MXM,E,IHISTI,XT,MDT,LEST)
d41 1
@


1.6
log
@header
@
text
@d3 1
a3 1
C  FGR                                                                *
d14 1
a14 1
C  FGR                                                                *
d27 4
a30 4
        IMPLICIT REAL*8 (A-H,O-Z)
        IMPLICIT INTEGER*2 (I-N)
	INTEGER*4 LUN51
       DIMENSION XX(M,M),AR(NMAX,MD),N(NMAX),LIN(90)
d33 2
a34 2
       DIMENSION D(M,2),MAP(30,42),VV(MXM)
       DIMENSION TMEAN(M),JG(NMAX),JV(M)
d38 3
a40 3
     &  ,IGWZ
      CHARACTER*10 IBI
      LOGICAL*1 IFR
d48 2
a49 2
       M1=M
       NSUM=0
d51 10
a60 10
	WRITE(51)M1,MD,NMAX
	WRITE(51)(TMEAN(I),I=1,M1)
	DO  J=1,M1
	WRITE(51)(D(J,K),K=1,MD)
	ENDDO
	DO  I=1,NMAX
	WRITE(51)(AR(I,K),K=1,MD)
	ENDDO
	WRITE(51)(E(I),I=1,NMAX)
	WRITE(51)(JV(I),I=1,M1)
d63 21
a83 3
       DO  J=1,42
       MAP(I,J)=0
       ENDDO
a84 17
         IF(LEST.LT.100) LERC=0
C                       CALL  WRTXT(
C     &'CLASSIFICATION     , RECORD NUMBER:',35,17,15,1)
         REWIND   4
	NMR=0
  1      READ(4,5687,END=1000)  VV
5687	FORMAT(2X,F3.1,4(1X,1PE14.7),/,4(1X,1PE14.7),/,1(1X,1PE14.7))
	NMR=NMR+1
         IF(LEST.LT.100)  THEN
         LERC=LERC+1
         READ(10,REC=LERC) IFR
         IF(IFR)  GOTO  1
         ENDIF
        KG=VV(IP)
       DO  I=1,NMAX
       IF(KG.EQ.JG(I)) GOTO 6
       ENDDO
d86 3
a88 1
 6      KG=I
d91 2
a92 2
C                       CALL  WRTXT(
C     & IBI,8,52,15,3)
d94 2
a95 2
       J=JV(I)
       XT(I)=VV(J)
d97 1
a97 1
       NSUM=NSUM+1
d100 4
a103 4
       DO  I=1,M1
       Z=XT(I)-TMEAN(I)
       X=X+Z*D(I,1)
       Y=Y+Z*D(I,2)
d107 1
a107 1
     & AR,N,E,IHISTI,VV)
d109 1
d113 42
a154 2
       DO  J=1,90
       LINE(J)=LX
d156 2
a157 36
       CALL DIST2(I,NMAX,MD,AR,N,LIN,LINE,E)
       NX=JX
       IF(I.NE.2.AND.I.NE.41) GOTO 7
       MX=KX
       NX=IX
       DO  J=1,90
       LINE(J)=MX
       ENDDO
 7     CONTINUE
       LINE(3)=NX
       LINE(88)=NX
       CALL RYS3(I,LINE,MAP,NAM)
       DO 600 J=1,NMAX
       IF(N(J).LT.1) GOTO 600
       IY=21.-7.*AR(J,2)
       IF(IY.LT.1) IY=1
       IF(IY.GT.42) IY=42
       IF(IY.NE.I) GOTO 600
       IZ=45.+15.*AR(J,1)
       IF(IZ.GT.90) IZ=90
       IF(IZ.LT.1) IZ=1
       IF(IZ.EQ.90) IZ=89
       IF(LINE(IZ+1).EQ.LX) LINE(IZ+1)=LINE(IZ)
       IF(LINE(IZ+1) .EQ. LINE(IZ)) GOTO 601
       IF(LINE(IZ+1) .NE. IKR) LINE(IZ+1)=IGWZ
 601   CONTINUE
       LINE(IZ)=IG(J)
 600   CONTINUE
       WRITE(LUN51,101)   LINE
 101   FORMAT(1X,90A1)
       ENDDO
         WRITE(LUN51,102)
         DO  I=1,NMAX
       WRITE(LUN51,102)  IG(I),NAM(I),JG(I),NG(I)
	 ENDDO
 102     FORMAT(3X,A1,' , ',A1,' = ',I4,2X,A4)
@


1.5
log
@a
@
text
@d1 23
d26 1
d38 1
a38 1
     *  ,IGWZ
d41 1
@


1.4
log
@nosave
@
text
@d22 1
a22 1
CNO_SAVE
@


1.3
log
@*** empty log message ***
@
text
@d22 1
a22 1

@


1.2
log
@fixed for vax errors
@
text
@d28 1
a28 1
	DO 46 J=1,M1
d30 2
a31 2
46	CONTINUE
	DO 48 I=1,NMAX
d33 1
a33 1
48	CONTINUE
d37 5
a41 3
       DO 990 I=1,30
       DO 990 J=1,42
 990   MAP(I,J)=0
d56 1
a56 1
       DO 5 I=1,NMAX
d58 1
a58 1
 5     CONTINUE
d65 1
a65 1
       DO 60 I=1,M1
d67 2
a68 1
  60   XT(I)=VV(J)
d72 1
a72 1
       DO 2 I=1,M1
d75 2
a76 1
 2     Y=Y+Z*D(I,2)
d83 4
a86 3
       DO 3 I=1,42
       DO 10 J=1,90
 10    LINE(J)=LX
d92 3
a94 2
       DO 4 J=1,90
 4     LINE(J)=MX
d117 1
a117 1
   3   CONTINUE
d119 3
a121 2
         DO  701  I=1,NMAX
 701   WRITE(LUN51,102)  IG(I),NAM(I),JG(I),NG(I)
@


1.1
log
@automatic particle picking
@
text
@d1 2
a2 2
       SUBROUTINE FGR(LUN51,IP,M,D,NG,NMAX,TMEAN,JG,N,MGR
     &    ,MD,XX,AR,IFOR,JV,VV,MXM,DF,E,T,IHISTI,XT,MDT,LEST)
d5 1
a5 1
	INTEGER*4 LUN50,LUN51
d8 1
a8 1
       DIMENSION  E(NMAX),T(MGR)
d13 1
a13 1
       CHARACTER*1  LINE(90),IG(12),NAM(12),IX,JX,KX,LX,IGNZ,IKR,MX,NX
d74 1
a74 1
       CALL DIST4(M1,NMR,NMAX,MDT,KG,XX,XT,TMEAN,
d78 1
a78 1
       CALL DIST1(M1,NMAX,NSUM,MD,AR,TMEAN,N,LIN,E)
d82 1
a82 1
       CALL DIST2(I,M1,NMAX,NSUM,MD,AR,N,LIN,LINE,E)
@
