head	1.8;
access;
symbols
	pre_mrcs:1.8
	healthdept_2018:1.8
	pre_getangas:1.7
	GPL2010:1.7
	pre_GPL2010:1.6
	pre_var_equation:1.6
	pre_fftwrings:1.6
	pre_opfiles:1.6
	src:1.6
	best-code:1.6
	x-named-regs:1.6
	x:1.6
	v13-00:1.6
	pre_GPL:1.4
	prec_CA:1.4
	noindx:1.4
	Bproc:1.3
	oct21:1.1
	last77:1.1;
locks; strict;
comment	@c @;


1.8
date	2018.10.03.14.34.06;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.24.13.25.41;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.20.47.33;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.17.18.37.57;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.28.20.24.34;	author bimal;	state Exp;
branches;
next	1.3;

1.3
date	2000.08.04.20.50.55;	author bimal;	state Exp;
branches;
next	1.2;

1.2
date	99.11.10.23.09.19;	author yuchen;	state Exp;
branches;
next	1.1;

1.1
date	97.09.30.14.37.16;	author pawel;	state Exp;
branches;
next	;


desc
@@


1.8
log
@email_health_dept
@
text
@C++*********************************************************************
C
C $$ FMRS_1D.FOR
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C  1D double precision mixed radix FFT.
C INPUT:  X(N) - real array
C OUTPUT: N even  X(N+2)
C   Order of elements:
C  R(0),0.0, R(1), I(1), R(2), I(2), ....., R(N/2-1), I(N/2-1), R(N/2),0.0
C
C         N odd  X(N+1)
C  R(0),0.0, R(1), I(1), R(2), I(2), ....., R(N/2-1), I(N/2-1), R(N/2),I(N/2-1)
C 
C INV: +1 forward FFT
C      -1 inverse FFT
C on output INV=0 indicates error
C
C
C IMAGE_PROCESSING_ROUTINE
C
C        1         2         3         4         5         6         7
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************
C
C $$ FMRS_1D.FOR
C

        SUBROUTINE  FMRS_1D(X,N,INV)
        PARAMETER (LBUF=5000)
        DOUBLE PRECISION  X(*),WORK(LBUF),QT

#ifdef SP_LIBFFT
        IF(N+15.GT.LBUF)  THEN
           INV=0
C INSUFFICIENT BUFFER, INCREASE LBUF AND COMPILE SPIDER
           CALL  ERRT(6,'FMRS_1D',NE)
           RETURN
        ENDIF

        CALL  DZFFT1DUI(N,WORK)
        LDA=1
        IF(INV.GT.0)  THEN
           CALL  DZFFT1DU(INV,N,X,LDA,WORK)
        ELSE
           CALL  ZDFFT1DU(INV,N,X,LDA,WORK)
           QT=1.0D0/FLOAT(N)
           CALL  DSCAL1D(N,QT,X,LDA)
        ENDIF
#else
        IF(INV.LT.0)  THEN
           IP=-LOG2(N)
C  GET OLD FORMAT
           X(2)=X(N+1)
        ELSE
           IP=LOG2(N)
        ENDIF
        CALL  FFTR_D(X,IP)
        IF(INV.GT.0)  THEN
           X(N+1)=X(2)
           X(2)=0.0
           X(N+2)=0.0
        ENDIF
#endif
        END
@


1.7
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.6
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.5
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a29 1
C **************************************************************************
a48 1
C--************************************************************************
@


1.4
log
@header and cosmetic
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d60 1
@


1.3
log
@replaced log2_p with log2
@
text
@d27 5
d36 4
a39 3
	SUBROUTINE  FMRS_1D(X,N,INV)
	PARAMETER (LBUF=5000)
	DOUBLE PRECISION  X(*),WORK(LBUF),QT
d42 16
a57 15
	IF(N+15.GT.LBUF)  THEN
	INV=0
C Insufficient buffer, increase LBUF and compile SPIDER
	CALL  ERRT(6,'FMRS_1',NE)
	RETURN
	ENDIF
	CALL  DZFFT1DUI(N,WORK)
	LDA=1
	IF(INV.GT.0)  THEN
	CALL  DZFFT1DU(INV,N,X,LDA,WORK)
	ELSE
	CALL  ZDFFT1DU(INV,N,X,LDA,WORK)
	QT=1.0D0/FLOAT(N)
	CALL  DSCAL1D(N,QT,X,LDA)
	ENDIF
d59 13
a71 13
	IF(INV.LT.0)  THEN
	IP=-LOG2(N)
C  Get old format
	X(2)=X(N+1)
	ELSE
	IP=LOG2(N)
	ENDIF
	CALL  FFTR_D(X,IP)
	IF(INV.GT.0)  THEN
	X(N+1)=X(2)
	X(2)=0.0
	X(N+2)=0.0
	ENDIF
d73 1
a73 2
	END
C
@


1.2
log
@a
@
text
@d53 1
a53 1
	IP=-LOG2_P(N)
d57 1
a57 1
	IP=LOG2_P(N)
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
CNO_SAVE
@
