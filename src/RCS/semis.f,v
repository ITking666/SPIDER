head	1.10;
access;
symbols
	pre_getangas:1.9
	GPL2010:1.9
	pre_GPL2010:1.8
	pre_var_equation:1.8
	pre_fftwrings:1.8
	pre_opfiles:1.8
	src:1.8
	best-code:1.8
	x-named-regs:1.8
	x:1.8
	v13-00:1.8
	pre_GPL:1.7
	prec_CA:1.6
	noindx:1.6
	Bproc:1.3
	oct21:1.3
	last77:1.2;
locks; strict;
comment	@c @;


1.10
date	2013.05.06.16.23.06;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2010.06.24.13.26.53;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.21.01.33;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2005.09.23.15.10.13;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.26.19.22.09;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.24.19.15.32;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.24.14.00.26;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.08.09.20.42.54;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	99.02.05.14.00.32;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.41;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.10
log
@detab
@
text
@C++*********************************************************************
C
C SEMIS.F
C                
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2013  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  PURPOSE: CLASSIFICATION OF OBJECTS ACCORDING TO THEIR               *
C           FACTORIAL COORDINATES                                      *         
C                                                                      *         
C   ROUTINES CALLED - NOYAU - PARST - RETIR - SEN3A                    *         
C                                   - CLAST                            *         
C                                   - STABK - SHELK                    *         
C                           - DEUCL                                    *         
C                           - CHAVA                                    *         
C                           - ARBRE                                    *         
C                           - COUPE                                    *         
C                                                                      *         
C **********************************************************************

      SUBROUTINE SEMIS(Q, MAXMEM, NGUS, NGRI, MODE,                           
     &               ICARD, NFAC, KFAC, KV, NBASE, NITER, NCLAS, NKLA)          

      DIMENSION  Q(MAXMEM), KV(16)
                                              
      COMMON  / ENSOR / LEC,IMP                                                 

      WRITE (IMP,2000)                                                          
 2000 FORMAT (23X,' ** STEP: CLASSY **',///,
     &         1X,72('-'))                     

      WRITE(IMP, 2100) (KV(K), K=1, KFAC)                                      
 2100 FORMAT (/,' SPECIFICATIONS FOR: CLASSY',/,                       
     &          '   FACTORS USED :',/' ',4X, 16I4)
                                         
      WRITE(IMP, 2150) NBASE, NITER, NCLAS, NKLA                               
 2150 FORMAT(/,' ',2X,'NBASE=',I6,5X,'NITER=',I6,5X,                          
     &                'NCLAS=',I6,5X,'NKLA =',I6)
                                              
      IF (KFAC <= 0) THEN
         CALL ERRT(102,'KFAC IS <= 0',KFAC)                              
         RETURN
      ENDIF

C     MEMORY SEGMENTATION                                                  

      N2DIM = MAX (NKLA, 2*NCLAS)                                              
      KDIM  = MAX (ICARD, NCLAS**NBASE)                                        
      KDIM  = MAX (KDIM,  2*NKLA - 1)                                          
      MDIM  = NKLA*(NKLA-1) / 2                                                 
      LDIM  = NKLA                                                              
      L2DIM = 2*NKLA - 1                                                        

      NKLAS = 1 + ICARD                                                         
C     NKLAS = 1                                                                 
      ND    = NKLAS + ICARD                                                     
      NU    = ND   + MDIM                                                         
      NJV   = NU   + KDIM                                                         
      NJW   = NJV  + KDIM                                                        
      NIDK  = NJW  + KDIM                                                        
      NCI   = NIDK + NKLA                                                       
      NGT   = NCI  + NFAC                                                        
      NNUM  = NGT  + N2DIM*KFAC                                                  
      NLA   = NNUM + LDIM                                                       
      NLB   = NLA  + LDIM                                                        
      NIV   = NLB  + LDIM                                                        
      NIW   = NIV  + LDIM                                                        
      NV    = NIW  + LDIM                                                        
      NW    = NV   + LDIM                                                         
      NNT   = NW   + LDIM                                                         
      NVAL  = NNT  + L2DIM                                                       
      NPK   = NVAL + L2DIM                                                      
      NNO   = NPK  + L2DIM                                                       
      NFIN  = NNO  + L2DIM
                                                       
      IF (NFIN > MAXMEM) THEN
         WRITE (IMP,2500)  MAXMEM, NFIN                                           
 2500    FORMAT (/,' UNLABELED COMMON BLOCK MEMORY AVAILABLE:',I10,5X,
     &              'YOU NEED: ',I11,/)
         CALL ERRT(6,'SEMIS',NDUM)                              
         RETURN
      ENDIF

C     CALL PRINCIPAL ROUTINE FOR CALCULATIONS                             
      CALL NOYAU (N2DIM,KDIM,MDIM,LDIM,L2DIM,                                   
     &             NFAC,KFAC,ICARD,KV,NBASE,NITER,NCLAS,NKLA, Q(1),             
     &  Q(NKLAS),Q(ND),Q(NU),Q(NJV),Q(NJW),Q(NIDK),Q(NCI),Q(NGT),               
     &  Q(NNUM),Q(NLA),Q(NLB),Q(NIV),Q(NIW),Q(NV),Q(NW),                        
     &  Q(NNT),Q(NVAL),Q(NPK),Q(NNO) ,NGUS,NGRI, MODE)
                          
      WRITE (IMP,2600)                                                          
 2600 FORMAT (//,' ',72('-'),//,
     &           ' ',5X,' ** END OF STEP:  CLASSY **',//,
     &           ' ',72('-'))
                     
       END                                                                    
@


1.9
log
@GPL_2010
@
text
@d9 1
a9 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d40 1
a40 1
      SUBROUTINE SEMIS (Q, MAXMEM, NGUS, NGRI, MODE,                           
d59 1
a59 1
      IF (KFAC .LE. 0) THEN
d66 3
a68 3
      N2DIM = MAX0 (NKLA, 2*NCLAS)                                              
      KDIM  = MAX0 (ICARD, NCLAS**NBASE)                                        
      KDIM  = MAX0 (KDIM,  2*NKLA - 1)                                          
d76 4
a79 4
      NU    = ND + MDIM                                                         
      NJV   = NU + KDIM                                                         
      NJW   = NJV + KDIM                                                        
      NIDK  = NJW + KDIM                                                        
d81 2
a82 2
      NGT   = NCI + NFAC                                                        
      NNUM  = NGT + N2DIM*KFAC                                                  
d84 7
a90 7
      NLB   = NLA + LDIM                                                        
      NIV   = NLB + LDIM                                                        
      NIW   = NIV + LDIM                                                        
      NV    = NIW + LDIM                                                        
      NW    = NV + LDIM                                                         
      NNT   = NW + LDIM                                                         
      NVAL  = NNT + L2DIM                                                       
d92 2
a93 2
      NNO   = NPK + L2DIM                                                       
      NFIN  = NNO + L2DIM
d95 1
a95 1
      IF (NFIN .GT. MAXMEM) THEN
a114 1
       RETURN                                                                 
@


1.8
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.7
log
@this is our caller copyright
@
text
@d1 1
a1 1
C++************************************************************************
d6 23
a28 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 2005. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.6
log
@cosmetic & output formatting changed
@
text
@d1 25
a25 28
C *NAME* = SEMIS.FOR                   31-JAN-86      13:23:12                  
C----------------------------------=*=----------------------------------        
C           COPYRIGHT 1986 - JEAN-PIERRE BRETAUDIERE                            
C THE UNIVERSITY OF TEXAS HEALTH SCIENCE CENTER AT HOUSTON                      
C MEDICAL SCHOOL - DEPARTMENT OF PATHOLOGY AND LABORATORY MEDICINE              
C P.O. BOX 20708, HOUSTON, TX 77225.                                            
C DISCLAIMER: NO GUARANTEES OF PERFORMANCE ACCOMPANY THIS SOFTWARE,             
C NOR IS ANY RESPONSIBILITY ASSUMED ON THE PART OF THE AUTHOR                   
C OR THE INSTITUTION.  ALL THE SOFTWARE HAS BEEN TESTED EXTENSIVELY             
C AND EVERY EFFORT HAS BEEN MADE TO INSURE ITS RELIABILITY.                     
C THE FOLLOWING SOFTWARE MAY NOT BE COMMUNICATED TO A THIRD PARTY               
C UNDER ANY FORM WITHOUT WRITTEN PERMISSION OF THE AUTHOR.                      
C PLEASE REPORT ANY BUG(S) TO JPB AT (713) 792 52 00.                           
C OR THRU ARPANET AT  ......!rice!ots!ut-path!suprim                            
C*--------------------------------------------------------------------*         
C* CLASSIFICATION OF OBJECTS ACCORDING TO THEIR FACTORIAL COORDINATES *         
C*                                                                    *         
C*  ROUTINES CALLED - NOYAU - PARST - RETIR - SEN3A                   *         
C*                                  - CLAST                           *         
C*                                  - STABK - SHELK                   *         
C*                          - DEUCL                                   *         
C*                          - CHAVA                                   *         
C*                          - ARBRE                                   *         
C*                          - COUPE                                   *         
C*                                                                    *         
C==02.09.81                                                           *         
C==01.11.86                                                           *         
C*--------------------------------------------------------------------*         
@


1.5
log
@cosmetic & IDK bug
@
text
@d38 2
a39 1
 2000 FORMAT (53X,'STEP    ** CLASSY **',///,1X,130('-'))                     
d41 3
a43 3
      WRITE(IMP, 2100)  (KV(K), K=1, KFAC)                                      
 2100 FORMAT (//,1X,'SPECIFICATIONS FOR   CLASSY'/' ',2X,                       
     &             'FACTORS USED :',/' ',4X, 16I4)
d45 3
a47 3
      WRITE(IMP, 2150)  NBASE, NITER, NCLAS, NKLA                               
 2150 FORMAT(/,' ',2X,'NBASE=',I6,5X,  'NITER=',I6,5X,                          
     &           'NCLAS=',I6,5X,'NKLA =',I6)
d50 1
a50 1
         CALL ERRT(101,'KFAC IS <= 0',NDUM)                              
d85 3
a87 2
      WRITE (IMP,2500)  MAXMEM, NFIN                                           
 2500 FORMAT (/,' COMMON BLOCK MEMORY AVAILABLE:',I10,5X ,
a88 2
                     
      IF (NFIN .GT. MAXMEM) THEN
d100 4
a103 4
   50 WRITE (IMP,2600)                                                          
 2600 FORMAT (//,' ',120('-'),//,
     &           ' ',5X,'END OF STEP   ** CLASSY **',//,
     &           ' ',120('-'))
d105 2
a106 2
         RETURN                                                                 
         END                                                                    
@


1.4
log
@cosmetic
@
text
@d41 2
a42 2
 2100 FORMAT (//,1X,'SPECIFICATIONS FOR   CLASSY'/' ',8X,                       
     &             'FACTORS USED :',/' ',10X, 16I4)
d45 1
a45 1
 2150 FORMAT(/,' ',6X,'NBASE=',I6,5X,  'NITER=',I6,5X,                          
d85 1
a85 1
 2500 FORMAT (/,' ','COMMON BLOCK MEMORY AVAILABLE:',I11,7X ,
d101 3
a103 2
 2600 FORMAT (//,' ',130('-'),//,' ',48X,                                          
     &      'END OF STEP      ** CLASSY **',//,' ',130('-'))
@


1.3
log
@*** empty log message ***
@
text
@d33 2
a34 4
C     I DO NOT KNOW IF SAVE IS NEEDED FEB 99 al
      SAVE

      DIMENSION  Q(MAXMEM), KV(16)                                              
d38 2
d41 3
d45 7
a51 1
        IF (KFAC .LE. 0)                 GO TO  50                              
d53 1
a53 1
C......... MEMORY SEGMENTATION                                                  
d82 10
a91 5
      NFIN  = NNO + L2DIM                                                       
      WRITE (IMP,2500)  MAXMEM , NFIN                                           
        IF (NFIN .GT. MAXMEM)            GO TO  50                              

C.......... CALL PRINCIPAL ROUTINE FOR CALCULATIONS                             
d93 1
d98 2
a99 1
     &  Q(NNT),Q(NVAL),Q(NPK),Q(NNO) ,NGUS,NGRI, MODE)                          
d101 3
a103 10
 1000 FORMAT (20I4)                                                             
 2000 FORMAT ('1',52X,'STEP    ** CLASSY **'///1X,130('-'))                     
 2100 FORMAT (//1X,'SPECIFICATIONS FOR   CLASSY'/' ',10X,                       
     & 'FACTORS USED :',/' ',10X, 16I4)                                         
 2150 FORMAT(/' ',10X,'NBASE=',I4,5X,  'NITER=',I4,5X,                          
     & 'NCLAS=',I4,5X,'NKLA =',I4)                                              
 2500 FORMAT (/ ' ','MEMORY RESERVATION'       ,10X ,  'YOU HAVE',              
     &    ' RESERVED',I6,10X ,'YOU NEED'            ,I6 / )                     
 2600 FORMAT (//' ',130('-')//' ',48X,                                          
     &      'END OF STEP      ** CLASSY **',//' ',130('-'))                     
@


1.2
log
@CNO_SAVE
@
text
@a32 2
CNO_SAVE 

@


1.1
log
@Initial revision
@
text
@d29 1
d31 7
a37 2
     #               ICARD, NFAC, KFAC, KV, NBASE, NITER, NCLAS, NKLA)          
C
d40 1
a40 1
C                                                                               
d45 1
a45 1
C                                                                               
d47 1
a47 1
C                                                                               
d54 1
a54 1
C                                                                               
d78 1
a78 1
C                                                                               
d80 1
a80 1
C                                                                               
d82 4
a85 4
     #             NFAC,KFAC,ICARD,KV,NBASE,NITER,NCLAS,NKLA, Q(1),             
     #  Q(NKLAS),Q(ND),Q(NU),Q(NJV),Q(NJW),Q(NIDK),Q(NCI),Q(NGT),               
     #  Q(NNUM),Q(NLA),Q(NLB),Q(NIV),Q(NIW),Q(NV),Q(NW),                        
     #  Q(NNT),Q(NVAL),Q(NPK),Q(NNO) ,NGUS,NGRI, MODE)                          
d90 1
a90 1
     # 'FACTORS USED :',/' ',10X, 16I4)                                         
d92 1
a92 1
     # 'NCLAS=',I4,5X,'NKLA =',I4)                                              
d94 1
a94 1
     #    ' RESERVED',I6,10X ,'YOU NEED'            ,I6 / )                     
d96 1
a96 1
     #      'END OF STEP      ** CLASSY **',//' ',130('-'))                     
@
