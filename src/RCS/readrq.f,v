head	1.26;
access;
symbols
	pre_mrcs:1.26
	healthdept_2018:1.26
	pre_getangas:1.24
	GPL2010:1.24
	pre_GPL2010:1.23
	pre_var_equation:1.23
	pre_fftwrings:1.23
	pre_opfiles:1.23
	src:1.23
	best-code:1.22
	named-reg:1.18
	x-named-regs:1.17
	x:1.17
	v13-00:1.16
	pre_GPL:1.14
	prec_CA:1.14
	noindx:1.14
	Bproc:1.9
	oct21:1.5
	last77:1.3;
locks; strict;
comment	@c @;


1.26
date	2018.10.03.14.34.14;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2011.12.05.14.01.01;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2010.06.24.13.26.42;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2006.04.04.19.24.23;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2006.01.26.15.49.48;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2006.01.26.15.15.06;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2005.12.29.18.07.46;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2005.12.14.16.48.04;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2005.12.12.15.28.53;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.11.15.21.51.07;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.20.31.36;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.18.22.35;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2001.04.09.14.25.13;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2000.10.12.18.29.07;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.09.19.19.48.48;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.09.19.19.47.15;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.09.18.18.39.31;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.16.18.50.42;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.08.14.14.23.47;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.08.09.13.50.38;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.07.20.37.44;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.08.09.14.15.17;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.07.30.16.25.59;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.02.05.13.42.43;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	97.09.17.15.54.12;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.07;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.26
log
@email_health_dept
@
text
@C++************************************************************ 10/11/79
C
C READRQ.F    FCHAR                              AUG 1989 ARDEAN LEITH
C             USED ERRT                          SEP 1997 ARDEAN LEITH
C             HANDLES 20 REGISTERS               JUL 1999 ARDEAN LEITH
C             USED REG_                          AUG 2000 ARDEAN LEITH
C             ADDED PROMPT                       SEP 2000 ARDEAN LEITH
C             SIMPLIFED WITH SETSYMPAR IN RDPR   APR 2001 ARDEAN LEITH
C             NATIVE [] VARIABLES                NOV 2005 ARDEAN LEITH
C             GLOBAL [] VARIABLES                DEC 2005 ARDEAN LEITH
C             MAXNSEL TO 24                      JAN 2006 ARDEAN LEITH
C             'RR S'                             APR 2006 ARDEAN LEITH
C             MAXNVAL TO 150                     DEC 2011 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C READRQ
C
C PURPOSE:   PLACE SOLICITED VALUES INTO REGISTERS
C
C PARAMETERS:   
C
C--*********************************************************************

      SUBROUTINE READRQ()

      IMPLICIT NONE

      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC' 

      INTEGER             :: NSEL_USED,IDUM,ILEVEL,IVAL,IRTFLG
      INTEGER             :: NGOT,I,IV,NOT_USED
      REAL                :: FDUM

C     DANGER!! MAXNVAL MUST BE GREATER THAN MAXNSEL, SET IN reg_set.f & spider.f(NPARG)!!
      INTEGER, PARAMETER  :: MAXNVAL = 150    
      REAL                :: VALUES(MAXNVAL) 

C     SETTING A  REGISTER VARIABLE(S) FROM OPERATION LINE

C     COPY VALUES TO LOCAL REGISTER(S)

C     COUNT NUMBER OF REGISTERS USED IN NSEL ARRAY
      CALL REG_GET_USED(NSEL_USED)
      IF (NSEL_USED .LE. 0) THEN
         CALL ERRT(101,'NO REGISTERS ON OPERATION LINE',IDUM)
         RETURN 
      ENDIF

C     CAN FILL OR READ GLOBAL ALSO
      ILEVEL = 0
      IF (FCHAR(1:4) .EQ. 'RR C') ILEVEL = 1

      IF (FCHAR(1:4) .NE. 'RR S') THEN
C        COPY A LIST OF VALUES TO OP. LINE REGISTER(S)

C        INPUT LIST OF VALUES FOR THE SELECTED REGISTERS
         CALL RDPRA('VALUE(S)',NSEL_USED,ILEVEL,.FALSE.,
     &               VALUES,NGOT,IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

C        SET DESIRED REGISTERS TO: VALUES(...)
         CALL REG_SET_NSELA(NGOT,VALUES,.FALSE.,IRTFLG)

      ELSE
C        COPY ONLY DESIRED VALUE(S) TO OP. LINE REGISTER(S)

         CALL RDPRA('VALUE(S)',MAXNVAL,ILEVEL,.FALSE.,
     &              VALUES,NGOT,IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

         IVAL = 1
         CALL RDPRI1S(IVAL,NOT_USED,'POSITION WITHIN LIST',IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

C        COPY VALUES TO OP. LINE REGISTER(S)
         DO I =IVAL,IVAL+NSEL_USED-1

           IF (I .LE. NGOT) THEN
              IV = I-IVAL+1
              CALL REG_SET_NSEL(IV,1,VALUES(I),
     &                          FDUM,FDUM,FDUM,FDUM,IRTFLG)
              WRITE(NOUT,*) ' REGISTER SET TO: ',VALUES(I)
           ELSE
             CALL ERRT(102,' POSITION NOT AVAILABLE IN LIST',I)
             RETURN
           ENDIF
         ENDDO
      ENDIF

      END

c     write(6,*) ' nsel_used:',nsel_used
c     write(6,*) ' igot:',igot
c     write(6,*) ' values(1):',values(1)


@


1.25
log
@MAXNVAL TO 150 rewrite
@
text
@d21 1
a21 1
C=* Email: spider@@wadsworth.org                                        *
@


1.24
log
@GPL_2010
@
text
@d3 11
a13 10
C READRQ.F        FCHAR                            AUG 1989 ARDEAN LEITH
C                 USED ERRT                        SEP 1997 ARDEAN LEITH
C                 HANDLES 20 REGISTERS             JUL 1999  ARDEAN LEITH
C                 USED REG_                        AUG 2000 ARDEAN LEITH
C                 ADDED PROMPT                     SEP 2000 ARDEAN LEITH
C                 SIMPLIFED WITH SETSYMPAR IN RDPR APR 2001 ARDEAN LEITH
C                 NATIVE [] VARIABLES              NOV 2005 ARDEAN LEITH
C                 GLOBAL [] VARIABLES              DEC 2005 ARDEAN LEITH
C                 MAXNSEL TO 24                    JAN 2006 ARDEAN LEITH
C                 'RR S'                           APR 2006 ARDEAN LEITH
d39 1
a39 1
C PURPOSE:  SUBROUTINE TO READ VALUES INTO REGISTERS
d47 2
d52 7
a58 10
      CHARACTER (LEN=160)    :: RESPONSE, GLOBALREG,GLOBALX,CVALUE
      CHARACTER (LEN=160)    :: LOCALREG,LOCALX
      CHARACTER (LEN=1)      :: NULL,CDUM

C     DANGER MAXNSEL IS ALSO SET IN reg_set.f and spider.f(NPARG)!! 
      INTEGER, PARAMETER         :: MAXNSEL = 24  ! REGISTER LIST 
      REAL,   DIMENSION(MAXNSEL) :: VALUES 

      NULL = CHAR(0)

d67 1
a67 10
         CALL ERRT(101,'NO REGISTERS GIVEN ON OPERATION LINE',IDUM)
         RETURN 
      ENDIF

C     INPUT REGISTER CONTENTS
      NEED = NSEL_USED
      IF (FCHAR(1:4) .EQ. 'RR S') NEED = MAXNSEL
      IT   = MAXNSEL
      IF (NEED .GT. IT) THEN
         CALL ERRT(102,'TOO MANY REGISTERS ON OPERATION LINE',NEED)
d75 2
a76 2
      CALL RDPRA('VALUE(S)',NEED,ILEVEL,.FALSE.,VALUES,NGOT,IRTFLG)
      IF (IRTFLG .NE. 0) RETURN
d78 4
a81 3
c     write(6,*) ' nsel_used:',nsel_used
c     write(6,*) ' igot:',igot
c     write(6,*) ' values(1):',values(1)
d83 1
a83 2
      IF (FCHAR(1:4) .NE. 'RR S') THEN
C        COPY VALUES TO OP. LINE REGISTER(S)
d87 6
a92 1
C        COPY DESIRED VALUE(S) TO OP. LINE REGISTER(S)
a96 1
            
d99 1
a111 1
      RETURN
d113 5
@


1.23
log
@added rr s
@
text
@a14 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d16 5
a20 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d22 1
a22 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d27 1
a27 1
C=* This program is distributed in the hope that it will be useful,    *
d29 1
a29 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a30 1
C=*                                                                    *
d32 1
a32 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.22
log
@maxnsel
@
text
@d12 1
d77 1
d95 24
a118 2
C     COPY VALUES TO OP. LINE REGISTER(S)
      CALL REG_SET_NSELA(NGOT,VALUES,.FALSE.,IRTFLG)
@


1.21
log
@error trap for maxnsel overflow
@
text
@d11 1
d56 2
a57 2
C     DANGER MAXNSEL IS ALSO SET IN reg_set.f!! 
      INTEGER, PARAMETER         :: MAXNSEL = 20  ! REGISTER LIST 
@


1.20
log
@global register support
@
text
@d55 1
d75 5
@


1.19
log
@RR G
@
text
@a8 1
C                 ADDED GLOBAL VARIABLES           NOV 2005 ARDEAN LEITH
d10 1
d75 1
a75 1
C     CAN READ GLOBAL ALSO
d77 1
a77 1
      IF (FCHAR(4:4) .EQ. 'G') ILEVEL = -9999
@


1.18
log
@native named registers
@
text
@d61 1
a61 1
C     SETTING A LOCAL REGISTER VARIABLE(S) FROM OPERATION LINE
d75 5
a79 1
      CALL RDPRA('VALUE(S)',NEED,.FALSE.,VALUES,NGOT,IRTFLG)
d86 1
a86 1
C     COPY VALUES TO LOCAL REGISTER(S)
@


1.17
log
@named register support
@
text
@d10 1
a50 3
      INTEGER, DIMENSION(MAXPRC) :: IGOQSTR,IENDQSTR,NREGSTR
      COMMON /QSTR_STUFF2/IGOQSTR,IENDQSTR,NREGSTR

d55 2
a56 1
      COMMON VALUES(1)
a59 2
      IF (FCHAR(4:5) .EQ. 'G') THEN
C        SETTING A GLOBAL REGISTER FROM A NEW PROMPT
d61 9
a69 106
         CALL RDPR('GLOBAL REGISTER VARIABLE & ASSOCIATED VALUE',
     &             NCHAR,RESPONSE,
     &            .TRUE.,.FALSE.,.FALSE.,.TRUE.,.TRUE.,.TRUE., IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

C        EXTRACT REGISTER VARIABLE NAME & CVALUE FROM RESPONSE
         CALL PARSESYMPAR(NULL,RESPONSE(1:NCHAR),CDUM,NDUM,
     &                   GLOBALREG,NCHARI,
     &                   CVALUE,NCHARV,.TRUE.,IRTFLG)
         IF (GLOBALREG .EQ. NULL .OR. IRTFLG .NE. 0) RETURN 

          WRITE(NDAT,*)' CREATING GLOBAL REGISTER VARIABLE: [',
     &                   GLOBALREG(2:NCHARI-1),']'

C         FIND NEXT EMPTY GLOBAL REGISTER NUMBER
          ILEVEL          = 1
          IREG            = NREGSTR(ILEVEL) + 1
          NREGSTR(ILEVEL) = IREG

C         CONVERT GLOBAL REG. NUMBER TO CHARACTERS
          GLOBALX(1:1) = 'x'
          CALL INTTOCHAR(IREG,GLOBALX(2:5),NC,1)

C         SET GLOBAL SYMBOL FOR THIS REGISTER VARIABLE
          CALL SETSYMPAR(GLOBALREG(1:NCHARI),GLOBALX(1:NC+1),
     &                   .FALSE.,IRTFLG)

          IF (IRTFLG .NE. 0) THEN
             CALL ERRT(100,'SPIDER',NE)
             RETURN
          ENDIF

          CVALUE = '~'// CVALUE(1:)
          CALL RDPRM1S(VALUE,NOT_USED,CVALUE,IRTFLG)

C         COPY VALUE TO GLOBAL REGISTER(S)
          CALL REG_SET_BANKED(1,IREG,VALUE,IRTFLG)

      ELSEIF (FCHAR(4:5) .EQ. 'C') THEN
C        COPIES A GLOBAL REGISTER VALUE INTO A LOCAL REGISTER

         CALL RDPR('GLOBAL REGISTER VARIABLE & LOCAL REGISTER VARIABLE',
     &             NCHAR,RESPONSE,
     &            .TRUE.,.FALSE.,.FALSE.,.TRUE.,.TRUE.,.TRUE., IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

C        EXTRACT REGISTER VARIABLE NAME & VALUE FROM RESPONSE
         CALL PARSESYMPAR(NULL,RESPONSE(1:NCHAR),CDUM,NDUM,
     &                   GLOBALREG,NCHARI,
     &                   LOCALREG,NCHARV,.TRUE.,IRTFLG)
         IF (GLOBALREG .EQ. NULL .OR. IRTFLG .NE. 0) RETURN 

C          WRITE(NDAT,*)' SETTING LOCAL REGISTER VARIABLE: ',LOCALREG
          GLOBALREG(1:1)           = '['
          GLOBALREG(NCHARI:NCHARI) = '['

C         CONVERT GLOBAL VARIABLE NAME TO X NOTATION
          GLOBALREG(1:1)           = '['
          GLOBALREG(NCHARI:NCHARI) = ']'
          CALL SUBSYMPAR(GLOBALREG,GLOBALX,NCHAR,1,IRTFLG)
          IF (IRTFLG .NE. 0) RETURN

C         GET REAL VALUE FROM GLOBAL REGISTER 
          CALL REG_STR_TO_VAL(GLOBALX(1:NCHAR),1,VALUE,IRTFLG)
          IF (IRTFLG .NE. 0) RETURN

C         CONVERT LOCAL VARIABLE NAME TO X NOTATION
          CALL SUBSYMPAR(LOCALREG,LOCALX,NCHAR,0,IRTFLG)
          IF (IRTFLG .NE. 0) RETURN

C         REGPARSE RETURNS IREG 
          CALL REGPARSE(LOCALX,IREG,IGOR,IENDR,.TRUE.,IRTFLG)

C         COPY VALUE TO LOCAL REGISTER
          CALL REG_SET(IREG,VALUE,.TRUE.,IRTFLG)

      ELSE
C        SETTING A LOCAL REGISTER VARIABLE(S) FROM OPERATION LINE

C        COPY VALUES TO LOCAL REGISTER(S)

C        COUNT NUMBER OF REGISTERS USED IN NSEL ARRAY
         CALL REG_GET_USED(NSEL_USED)
         IF (NSEL_USED .LE. 0) THEN
            CALL ERRT(101,'NO REGISTERS GIVEN',IDUM)
            RETURN 
         ENDIF

         FBIG    = HUGE(FBIG)
         FLITTLE = -FBIG
         IGOT    = NSEL_USED
         CALL RDPRAF(VALUES,NSEL_USED,IGOT,FLITTLE,FBIG,'VALUE(S)',
     &            'T',IRTFLG)

c         write(6,*) ' nsel_used:',nsel_used
c         write(6,*) ' igot:',igot
c         write(6,*) ' values(1):',values(1)

C         COPY VALUES TO LOCAL REGISTER(S)
          CALL REG_SET_NSELA(IGOT,VALUES,IRTFLG)

          IF (IGOT .NE. NSEL_USED) THEN
C            OVER/UNDER FLOW
             WRITE(NOUT,91) IGOT
91           FORMAT(' WARNING: ONLY SET: ',I6,'  REGISTER(S)')
         ENDIF
d72 13
d87 1
@


1.16
log
@GPL License fixed
@
text
@d3 5
a7 5
C READRQ.F        FCHAR AUG 89 ARDEAN LEITH
C                 USED ERRT SEPT 97 ARDEAN LEITH
C                 HANDLES 20 REGISTERS JULY 99  ARDEAN LEITH
C                 USED REG_ AUG 00 ARDEAN LEITH
C                 ADDED PROMPT SEPT 00 ARDEAN LEITH
d9 1
d48 8
d59 4
a62 6
C     COUNT NUMBER OF REGISTERS USED IN NSEL ARRAY
      CALL REG_GET_USED(NSEL_USED)
      IF (NSEL_USED .LE. 0) THEN
         CALL ERRT(101,'NO REGISTERS GIVEN',IDUM)
         RETURN 
      ENDIF
d64 92
a155 4
      FBIG    = HUGE(FBIG)
      FLITTLE = -FBIG
      IGOT    = NSEL_USED
      CALL RDPRAF(VALUES,NSEL_USED,IGOT,FLITTLE,FBIG,'VALUE(S)',
d162 2
a163 2
C     COPY VALUES TO REGISTER(S)
      CALL REG_SET_NSELA(IGOT,VALUES,IRTFLG)
d165 5
a169 4
      IF (IGOT .NE. NSEL_USED) THEN
C         OVER/UNDER FLOW
          WRITE(NOUT,91) IGOT
91        FORMAT(' WARNING: ONLY SET: ',I6,'  REGISTER(S)')
@


1.15
log
@HRI GPL License used
@
text
@a10 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d14 1
a14 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a33 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.14
log
@rdpr simplification for symbolic parameters & variable subs.
@
text
@d12 24
@


1.13
log
@no procX file changes
@
text
@d3 6
a8 5
C READRQ.F          FCHAR AUG 89 ARDEAN LEITH
C                   USED ERRT SEPT 97 ARDEAN LEITH
C                   HANDLES 20 REGISTERS JULY 99  ARDEAN LEITH
C                   USED REG_ AUG 00 ARDEAN LEITH
C                   ADDED PROMPT SEPT 00 ARDEAN LEITH
d11 7
d19 1
a19 1
C  READRQ(PROMPT)
d21 1
a21 2
C PURPOSE:  SUBROUTINE TO READ VALUES INTO REGISTERS IN PROCEDURES AT
C           EXECUTION TIME
d23 1
a23 1
C PARAMETERS:	  PROMPT         PROMPT STRING (USUALLY NULL)    SENT
d25 1
a25 1
C--*******************************************************************
d27 1
a27 1
      SUBROUTINE READRQ(PROMPT)
a32 2
      CHARACTER *(*) PROMPT

d43 1
a43 3
      IF (PROMPT(1:1) .NE. CHAR(0)) THEN
C        THIS USES PROMPT AS INPUT IF PROMPT STARTS WITH '~'
         CALL RDPRAF(VALUES,NSEL_USED,IGOT,FLITTLE,FBIG,PROMPT,
d45 1
a45 4
      ELSE
         CALL RDPRAF(VALUES,NSEL_USED,IGOT,FLITTLE,FBIG,'VALUE(S)',
     &            'T',IRTFLG)
      ENDIF
@


1.12
log
@reverted to pre procX version
@
text
@d7 1
d11 1
a11 1
C  READRQ(FCHAR)
d16 1
a16 1
C PARAMETERS:	  FCHAR         INPUT STRING
d20 1
a20 1
      SUBROUTINE READRQ(FCHART)
d26 1
a26 1
      CHARACTER *(*) FCHART
d38 3
a40 1
      CALL RDPRAF(VALUES,NSEL_USED,IGOT,FLITTLE,FBIG,'VALUE(S)',
d42 4
@


1.11
log
@reverted to pre procX version
..
@
text
@d23 1
a23 1
      COMMON VALUES(MAXPARAMSEL)
d29 4
a32 1
      IF (NSEL_USED .LE. 0) RETURN 
d39 3
@


1.10
log
@Bproc RR & FR changes
@
text
@a6 1
C                   ADDED PROMPT SEPT 00 ARDEAN LEITH
d10 1
a10 1
C  READRQ(PROMPT)
d15 1
a15 1
C PARAMETERS:	  PROMPT         PROMPT STRING (USUALLY NULL)    SENT
d19 1
a19 1
      SUBROUTINE READRQ(PROMPT)
d23 1
a23 1
      COMMON VALUES(1)
d25 1
a25 1
      CHARACTER *(*) PROMPT
d29 1
a29 4
      IF (NSEL_USED .LE. 0) THEN
         CALL ERRT(101,'NO REGISTERS GIVEN',IDUM)
         RETURN 
      ENDIF
d34 1
a34 3
      IF (PROMPT(1:1) .NE. CHAR(0)) THEN
C        THIS USES PROMPT AS INPUT IF PROMPT STARTS WITH '~'
         CALL RDPRAF(VALUES,NSEL_USED,IGOT,FLITTLE,FBIG,PROMPT,
a35 7
      ELSE
         CALL RDPRAF(VALUES,NSEL_USED,IGOT,FLITTLE,FBIG,'VALUE(S)',
     &            'T',IRTFLG)
      ENDIF
c         write(6,*) ' nsel_used:',nsel_used
c         write(6,*) ' igot:',igot
c         write(6,*) ' values(1):',values(1)
@


1.9
log
@added errt
@
text
@d7 1
d11 1
a11 1
C  READRQ(FCHAR)
d16 1
a16 1
C PARAMETERS:	  FCHAR         INPUT STRING
d20 1
a20 1
      SUBROUTINE READRQ(FCHART)
d26 1
a26 1
      CHARACTER *(*) FCHART
d38 3
a40 1
      CALL RDPRAF(VALUES,NSEL_USED,IGOT,FLITTLE,FBIG,'VALUE(S)',
d42 4
@


1.8
log
@removed marxparamsel
@
text
@d29 4
a32 1
      IF (NSEL_USED .LE. 0) RETURN 
d39 3
@


1.7
log
@used reg_set
@
text
@d23 1
a23 1
      COMMON VALUES(MAXPARAMSEL)
@


1.6
log
@removed un-needed readpq call
@
text
@a0 1

d3 1
a3 1
C    READRQ.F       FCHAR AUG 89 ARDEAN LEITH
d6 1
a8 7
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
C **********************************************************************
d10 1
a10 1
C READRQ(FCHAR)
d23 1
a23 2
      PARAMETER (MAXSEL = 20)
      COMMON VALUES(MAXSEL),IVALUES(MAXSEL)
d27 3
a29 23
C     FIND HOW MANY VALID REGISTERS
      IF (NSEL(1) .LE. 0) THEN
          WRITE(NOUT,90) NSEL(1)
90        FORMAT(' *** ILLEGAL REGISTER: ',I6,'   (RANGE IS: 10...99) ')
          CALL ERRT(100,'READRQ',NE)
          RETURN
      ENDIF

      NUM = 0
      DO I = 1,MAXSEL
         NS = NSEL(I)
         IF (NS .EQ. 0) THEN
C           END OF REGISTER LISTING
            EXIT

         ELSEIF (NS .LT. 10 .OR. NS .GT. 99) THEN 
            WRITE(NOUT,90) NS
            CALL ERRT(100,'READRQ',NE)
            RETURN
         ELSE
            NUM = NUM + 1
         ENDIF
      ENDDO
d33 2
a34 2
      IGOT    = NUM
      CALL RDPRAF(VALUES,NUM,IGOT,FLITTLE,FBIG,'VALUE(S)',
d37 2
a38 5
      IF (IGOT .GT. 0) THEN
         DO I = 1, IGOT
            PARAM(NSEL(I)) = VALUES(I)
         ENDDO
      ENDIF
d40 1
a40 1
      IF (IGOT .NE. NUM) THEN
d43 1
a43 1
91        FORMAT(' WARNING: ONLY SET: ',I3,'  REGISTER(S)')
a47 10



C      used for testing rdprai only
c      IBIG    = 999999999
c      ILITTLE = -IBIG
c      CALL RDPRAI(IVALUES,NUM,IGOT,ILITTLE,IBIG,'VALUE(S)',
c     &            'T',IRTFLG)
ccc         PARAM(NSEL(I)) = IVALUES(I)

@


1.5
log
@rewritten for multiple registers
@
text
@a34 2
      CALL READPQ(FCHART)

@


1.4
log
@can read multiple registers
@
text
@d17 1
a17 1
C READR(FCHAR,NLOOP,ILOOP)
a22 2
C                 NLOOP		NUMBER OF REPETITIONS
C                 ILOOP		CURRENT ITERATION
a23 2
C NOTE:   NLOOP IS NUMREP FROM DRIVER - THE # OF REPETITIONS
C
d26 3
a28 1
      SUBROUTINE READRQ(FCHAR,NLOOP,ILOOP)
d31 1
a31 4
      COMMON/PARAM/ PARAM(103),NSEL(MAXSEL)
      COMMON /UNITS/LUN,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT

      COMMON VALUES(MAXSEL)
d33 1
a33 1
      CHARACTER *(*) FCHAR
d35 1
a35 1
      CALL READPQ(FCHAR)
d38 3
a40 5
      I = 1
      IF (NSEL(I) .LE. 0) THEN
          WRITE(NOUT,90) I,NS
90        FORMAT(' *** INPUT: ',I2,
     &           '  HAS ILLEGAL REGISTER (RANGE IS: 10...99): ')
d53 1
a53 1
            WRITE(NOUT,90) I,NS
d62 10
a71 8
      FLITTLE = TINY(FLITTLE)
      IGOT    = MAXSEL
      CALL RDPRAF(VALUES,MAXSEL,IGOT,FLITTLE,FBIG,'VALUE(S)',
     &            NULL,IRTFLG)

      DO I = 1, NUM
         PARAM(NSEL(I)) = VALUES(I)
      ENDDO
d81 10
@


1.3
log
@CNO_SAVE
@
text
@d4 3
a6 2
C    READR.F                                         FCHAR AUG 89 al
C                                               USED ERRT SEPT 97 al
d9 6
a14 7
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND     *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.  *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS *
C *    OR USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN        *
C *    APPROVAL OF THE CENTER FOR LABORATORIES AND RESEARCH 	       *
d32 2
a33 2
CNO_SAVE 
      COMMON/PARAM/ PARAM(103),NSEL(10)
d36 2
d41 36
a76 1
      NS = NSEL(1)
d78 4
a81 4
      IF (NS .GE. 10 .AND. NS .LE. 99) THEN
         CALL RDPRM(PARAM(NS),NLOOP,ILOOP,'VALUE')
      ELSE
         CALL ERRT(101,'LEGAL REGISTER RANGE IS: 10...99',NE)
@


1.2
log
@changed error handling
@
text
@d32 1
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
C++**************************************************************** 10/11/79
d4 2
a5 11
C    READR.FOR
C                                 FCHAR AUG 89 al
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d7 9
a15 1
C READR(F,NLOOP,ILOOP)
d17 2
a25 1
C
a41 1

d43 1
a43 2
         PARAM(10) = 1.0
         WRITE(NOUT,*) ' *** ILLEGAL REGISTER USED'
@
