head	1.43;
access;
symbols
	pre_mrcs:1.43
	healthdept_2018:1.43
	pre_getangas:1.40
	GPL2010:1.39
	pre_GPL2010:1.38
	pre_var_equation:1.38
	pre_fftwrings:1.38
	pre_opfiles:1.38
	src:1.38
	best-code:1.38
	x-named-regs:1.38
	x:1.38
	v13-00:1.38
	pre_GPL:1.36
	prec_CA:1.36
	noindx:1.36
	Bproc:1.30
	oct21:1.25
	last77:1.24;
locks; strict;
comment	@c @;


1.43
date	2018.10.03.14.34.08;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	2013.05.24.18.19.32;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	2011.03.21.13.19.18;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	2011.01.19.19.42.53;	author leith;	state Exp;
branches;
next	1.39;

1.39
date	2010.06.24.13.25.55;	author leith;	state Exp;
branches;
next	1.38;

1.38
date	2005.10.17.20.52.16;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2005.10.17.18.42.39;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2002.10.29.14.30.16;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2002.10.29.13.55.08;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2002.07.08.14.39.07;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2002.03.11.14.08.46;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2002.01.15.14.31.49;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2001.01.29.17.26.20;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2000.06.19.13.01.07;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2000.01.18.19.49.06;	author bimal;	state Exp;
branches;
next	1.28;

1.28
date	2000.01.18.19.39.34;	author bimal;	state Exp;
branches;
next	1.27;

1.27
date	99.12.27.18.53.50;	author bimal;	state Exp;
branches;
next	1.26;

1.26
date	99.11.10.23.09.21;	author yuchen;	state Exp;
branches;
next	1.25;

1.25
date	99.09.08.16.59.14;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	98.10.07.19.02.55;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	98.08.17.15.31.55;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	98.08.13.19.01.32;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	98.08.10.19.40.03;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	98.08.10.19.10.54;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	98.08.04.18.17.37;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	98.03.09.14.34.37;	author pawel;	state Exp;
branches;
next	1.17;

1.17
date	98.03.06.19.32.53;	author pawel;	state Exp;
branches;
next	1.16;

1.16
date	98.03.06.18.16.42;	author pawel;	state Exp;
branches;
next	1.15;

1.15
date	98.03.06.16.52.40;	author pawel;	state Exp;
branches;
next	1.14;

1.14
date	98.03.04.15.24.02;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	97.10.09.14.29.36;	author pawel;	state Exp;
branches;
next	1.12;

1.12
date	97.06.25.12.52.44;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	97.06.16.22.08.20;	author liy;	state Exp;
branches;
next	1.10;

1.10
date	97.06.06.18.44.07;	author liy;	state Exp;
branches;
next	1.9;

1.9
date	97.03.17.14.53.24;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	96.08.13.18.54.41;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.05.02.13.38.25;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.04.22.16.35.48;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.04.22.16.26.27;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.02.08.17.00.56;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.04.17.15.23.34;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.06.19;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.49.32;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.43
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C HIST.F                   FMINT FOR HIST RANGE  JUN  2000  ArDean Leith
C                          NaN OK                JAN  2001  ArDean Leith
C                          OLD MODE BUG          JAN  2002  ArDean Leith
C                          FNUMEL OVERFLOW BUG   JUL  2002  ArDean Leith
C                          INTEGER OUTPUT        OCT  2002  ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    HIST(LUN,LUNMA,LUNDOC,NX,NY,NZ,IDUST,HMIN,HMAX)
C
C    PURPOSE:    COMPUTE 128 PLACE HISTOGRAM FROM IMAGE RECORDS, 
C                DISPLAY HISTOGRAM ON LINE PRINTER, TERMINAL, OR
C                IN DOC. FILE AND, OPTIONALLY, REMOVE DATA THAT ARE 
C                OUT OF A SPECIFIED STATISTICAL RANGE.
C
C    PARAMETERS:  LUN        IO UNIT NUMBER OF IMAGE FILE
C                 LUNDMA     IO UNIT NUMBER FOR MASK FILE
C                 LUNDOC     IO UNIT NUMBER FOR DOCUMENT FILE
C                 NX,NY  DIMENSIONS OF IMAGE              
C                 NZ     DIMENSIONS OF IMAGE
C                 HMIN,HMAX  HIST. MIN & MAX                    (RET.)
C                 HSIG,HMODE HIST. S.D. & MODE (USED BY DUST)
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

      SUBROUTINE HIST(LUN,LUNMA,LUNDOC,NX,NY,NZ,
     &                HMIN,HMAX,HSIG,HMODE)

      INCLUDE 'CMBLOCK.INC'

      DIMENSION        :: FREQ(128)
      DIMENSION        :: PLIST(4)
      DOUBLE PRECISION :: HAV, HAV2, DTOP, FNUMEL
      CHARACTER *1     :: ANS
      LOGICAL          :: MASK
      CHARACTER *1     :: NULL = CHAR(0)

      IF (IFORM .LE. 0) THEN
C        CAN NOT DO HISTOGRAM ON FOURIER FILES
         CALL ERRT(101,'CAN NOT HISTOGRAM FOURIER FILES',NE)
         RETURN
      ENDIF

C     MAKE SURE STATISTICS ARE CURRENT
      IF (IMAMI .NE. 1) CALL NORM3(LUN,NX,NY,NZ,FMAX,FMIN,AV)
      HMAX = FMAX
      HMIN = FMIN

C     NBINS MUST BE <= 1000!!!  why?? 
      NBINS  = 128
      NDEV   = NDAT
      IDEV   = 1
      IF (FCHAR(4:4) == 'R' .OR. FCHAR(5:5) == 'R') THEN
C        ONE OF THE LETTERS IS 'R' ASK USER FOR HISTOGRAM RANGE
         CALL RDPRM2(HMIN,HMAX,NOT_USED,'HISTOGRAM RANGE (MIN, MAX)')

      ELSEIF (FCHAR(4:4) == 'M') THEN
C        ASK USER FOR HISTOGRAM SINK
         CALL RDPRMC(ANS,NLET,.TRUE.,
     &      'OUTPUT TO RESULTS FILE, DOC. FILE, OR TERMINAL? (R/D/T)',
     &       NULL,IRTFLG)
      ENDIF

      IF  (FCHAR(4:4) == 'T' .OR. FCHAR(5:5) == 'T' .OR.
     &    (FCHAR(4:4) == 'M' .AND. ANS == 'T')) THEN
C         OUTPUT TO TERMINAL, NOT RESULTS FILE
          NBINS = 70
          NDEV  = NOUT
          IDEV  = 0
      ENDIF

C     ZERO THE HISTOGRAM FREQUENCIES
      DO  K = 1,NBINS
         FREQ(K) = 0.0 
      ENDDO

C     MPI 3-MAR-80 ADDED TO AVOID "BEAT" PHENOMENON (REMOVED AUG 98)   
C     APPEARED TO EXPAND RANGE OF HIST. MIN/MAX FOR < 0...2 

      MASK = .FALSE.
      NREC = NZ * NY
      IF (FCHAR(4:4) == 'M') THEN
C        HISTOGRAM UNDER MASK ONLY
         MASK = .TRUE.
C        DETERMINE RANGE UNDER MASK
         CALL HISTMINMAX(LUN,LUNMA,NX,NREC,HMIN,HMAX)
      ENDIF

      HDIFF  = HMAX - HMIN
      FF     = (NBINS - 1.0) / HDIFF
      BSIZ   = 1.0 / FF
      FNUMEL = 0.0
      HAV    = 0.0
      HAV2   = 0.0

      CALL HISTIMAGE(LUN,LUNMA,NX,NREC,FREQ,
     &               FNUMEL,HAV,HAV2,HMIN,FF,NBINS,MASK)

      IF (FCHAR(4:4) == 'D' .OR. 
     &    FCHAR(5:5) == 'D' .OR.
     &   (FCHAR(4:4) == 'M' .AND. ANS == 'D')) THEN
C        OUTPUT TO DOC FILE
         PLIST(2) = HMIN
         DO IBIN     =1,NBINS
            PLIST(1) = IBIN
            PLIST(2) = HMIN + (BSIZ *(IBIN - 1))
            PLIST(3) = FREQ(IBIN)
            CALL SAVD(LUNDOC,PLIST,3,IRTFLG)
         ENDDO
         CALL SAVDC
         CLOSE(LUNDOC)

      ELSEIF (FCHAR(1:2) .NE. 'DU') THEN
C        OUTPUT TO RESULTS FILE OR TERMINAL 

         WRITE(NDEV,*) ' '
C        GRAPHX IN GRAPHS USES FMIN & FMAX FOR HISTOGRAM LABELS
         FMINT = FMIN
         FMIN  = HMIN
         FMAXT = FMAX
         FMAX  = HMAX
         CALL GRAPHS(NDEV,FREQ,NBINS,1,IDEV,1.0,IRTFLG)
         FMIN = FMINT
         FMAX = FMAXT
         WRITE(NDEV,*) ' '
         IF (IRTFLG .NE. 0) THEN
            CALL ERRT(100,'HIST',NE)
            RETURN
         ENDIF
      ENDIF

C     FIND MAXIMUM FREQUENCY OCCURING IN HISTOGRAM (HISMAX) & LOCATION
      HISMAX = FREQ(1)
      MAXBIN = 1
      DO  IBIN = 2,NBINS
         IF (FREQ(IBIN) .GE. HISMAX) THEN
            HISMAX = FREQ(IBIN)
            MAXBIN = IBIN
         ENDIF
      ENDDO

C     CONVERT LOCATION MAXBIN TO CORRESPONDING IMAGE INTENSITY (MODE)
      IF (MAXBIN == 1) THEN
C        SUB-BIN ESTIMATE OF MODE
         BMODE  = 0.5

      ELSEIF (MAXBIN == NBINS) THEN
C        SUB-BIN ESTIMATE OF MODE 
C        (MAYBE THIS SHOULD AVERAGE ALL BINS AT END WITH SAME NUMBER?)
         BMODE  = FLOAT(NBINS) - 0.5
      ELSE
C        SUB-BIN ESTIMATE OF MODE
         YM1    = FREQ(MAXBIN-1)
         YP1    = FREQ(MAXBIN+1)
         BMODE  = FLOAT(MAXBIN-1) + (YM1-YP1)*0.5/ (YM1+YP1-2.*HISMAX)
      ENDIF
      HMODE = HMIN + BMODE * BSIZ

      DTOP  = HAV2 - HAV * HAV / FNUMEL
      IF (DTOP .LT. 0.0) THEN
C        SQRT OF NEGATIVE NUMBER
         WRITE(NOUT,*) '*** in HIST, SQRT(',DTOP,') IMPOSSIBLE' 
         CALL ERRT(100,'HIST',NE)
         RETURN

      ELSEIF (FNUMEL == 1) THEN
         WRITE(NOUT,*) '*** CAN NOT DETERMINE S.D. (ONLY ONE PIXEL) ' 
         CALL ERRT(100,'HIST',NE)
         RETURN
      ENDIF

      HAV    = HAV  / FNUMEL
      HSIG   = DSQRT(DTOP / (FNUMEL - 1))
      FNPIX  = NX * NY * NZ
      FNBINS = NBINS

      WRITE(NDEV,*) ' '

      IBIG = HUGE(IBIG)
      IF (FNPIX .LT. IBIG) THEN
         NPIX  = NX * NY * NZ
         NUMEL = FNUMEL
         WRITE(NDEV,90) FMIN,FMAX,HMIN,HMAX,NPIX,NUMEL,
     &               NBINS,BSIZ,HAV,HMODE,HSIG

90       FORMAT(
     &    '  FILE RANGE:        ',1PG11.4,'   .........     ',1PG11.4,/,
     &    '  HISTOGRAM RANGE:   ',1PG11.4,'   .........     ',1PG11.4,/,
     &    '  TOTAL PIXELS:      ',I11,    '   PIXELS IN HIST.: ',I11,/,
     &    '  NO. OF BINS:       ',I11,    '   BIN SIZE:     ',1PG11.4,/,
     &    '  HIST. MEAN:        ',1PG11.4,'   HIST. MODE:   ',1PG11.4,/,
     &    '  HIST. S.D.:        ',1PG11.4/)
      ELSE
        WRITE(NDEV,91) FMIN,FMAX,HMIN,HMAX,FNPIX,FNUMEL,
     &               FNBINS,BSIZ,HAV,HMODE,HSIG

91      FORMAT(
     &  '  FILE RANGE:        ',1PG11.4,'   .........     ',1PG11.4,/,
     &  '  HISTOGRAM RANGE:   ',1PG11.4,'   .........     ',1PG11.4,/,
     &  '  TOTAL PIXELS:      ',1PG11.4,'   PIXELS IN HIST.: ',1PG11.4,/,
     &  '  NO. OF BINS:       ',1PG11.4,'   BIN SIZE:     ',1PG11.4,/,
     &  '  HIST. MEAN:        ',1PG11.4,'   HIST. MODE:   ',1PG11.4,/,
     &  '  HIST. S.D.:        ',1PG11.4/)
      ENDIF

      WRITE(NDEV,*) ' '

      IF (NDEV .NE. NOUT) THEN
         WRITE(NOUT,*) ' '
         IF (FNPIX .LT. IBIG) THEN
            WRITE(NOUT,90) FMIN,FMAX,HMIN,HMAX,NPIX,
     &                     NUMEL,NBINS,BSIZ,HAV,HMODE,HSIG
         ELSE
            WRITE(NOUT,91) FMIN,FMAX,HMIN,HMAX,NPIX,
     &                     FNUMEL,FNBINS,BSIZ,HAV,HMODE,HSIG
         ENDIF
         WRITE(NOUT,*) ' '
      ENDIF

      RETURN
      END

C     -------------------- HISTIMAGE --------------------------------

      SUBROUTINE HISTIMAGE(LUN,LUNMA,NX,NREC,FREQ,
     &                     FNUMEL,HAV,HAV2,HMIN,FF,NBINS,MASK)

      INCLUDE 'CMBLOCK.INC'

      DIMENSION        FREQ(128), BUFMASK(NX), REDBUF(NX)
      DOUBLE PRECISION HAV, HAV2, FNUMEL
      LOGICAL          MASK

C     GET HISTOGRAM FROM IMAGE VALUES

      IF (MASK) THEN
C        MASKED, HANDLES NaN for NOT MASK OK
         DO  IREC=1,NREC
            CALL REDLIN(LUN,REDBUF,NX,IREC)
            CALL REDLIN(LUNMA,BUFMASK,NX,IREC)
            DO  ISAM = 1,NX
               IF (BUFMASK(ISAM) .GE. 0.5) THEN
C                 HISTOGRAM THIS PIXEL, MASK HAS POSITIVE VALUE)

C                 FIND BIN NUMBER
                  BVAL = REDBUF(ISAM)
                  JBIN = INT((BVAL - HMIN) * FF) + 1.5

                  IF (JBIN.GE.1 .AND. JBIN.LE.NBINS) THEN
C                    WITHIN HISTOGRAM RANGE
                     FREQ(JBIN) = FREQ(JBIN) + 1.0
                     FNUMEL     = FNUMEL + 1
                     HAV        = HAV  + BVAL 
                     HAV2       = HAV2 + DBLE(BVAL) * DBLE(BVAL)
                  ENDIF
              ENDIF
           ENDDO
         ENDDO
      ELSE
C        NO MASK
         DO  IREC=1,NREC
            CALL REDLIN(LUN,REDBUF,NX,IREC)

            DO  ISAM = 1,NX
C              HISTOGRAM THIS PIXEL 

C              FIND BIN NUMBER
               BVAL = REDBUF(ISAM)
               JBIN = INT((BVAL - HMIN) * FF) + 1.5

               IF (JBIN.GE.1 .AND. JBIN.LE.NBINS) THEN
C                 WITHIN HISTOGRAM RANGE
                  FREQ(JBIN) = FREQ(JBIN) + 1.0
                  FNUMEL     = FNUMEL + 1
                  HAV        = HAV  + BVAL 
                  HAV2       = HAV2 + DBLE(BVAL) * DBLE(BVAL)
               ENDIF
           ENDDO
         ENDDO
      ENDIF

      RETURN
      END

C     -------------------- HISTMINMAX --------------------------------

      SUBROUTINE HISTMINMAX(LUN,LUNMA,NX,NREC,
     &                      HMIN,HMAX)

      INCLUDE 'CMBLOCK.INC'


      DIMENSION        BUFMASK(NX), REDBUF(NX)

C     DETERMINE RANGE UNDER MASK
      DO IREC=1, NREC
         CALL REDLIN(LUN,  REDBUF,NX,IREC)
         CALL REDLIN(LUNMA,BUFMASK,NX,IREC)

         DO  ISAM = 1,NX
            IF (BUFMASK(ISAM) .GE. 0.5) THEN
C              PIXEL HAS POSITIVE MASK VALUE
               BVAL = REDBUF(ISAM)
               IF (BVAL .LT. HMIN) HMIN = BVAL
               IF (BVAL .GT. HMAX) HMAX = BVAL
            ENDIF
         ENDDO
      ENDDO

      RETURN
      END

@


1.42
log
@nx,  prompts
@
text
@d16 1
a16 1
C=* Email: spider@@wadsworth.org                                        *
@


1.41
log
@output formatting
@
text
@d32 1
a32 1
C    HIST(LUN,LUNMA,LUNDOC,NSAM,NROW,NSLICE,IDUST,HMIN,HMAX)
d42 2
a43 2
C                 NSAM,NROW  DIMENSIONS OF IMAGE              
C                 NSLICE     DIMENSIONS OF IMAGE
d50 1
a50 1
      SUBROUTINE HIST(LUN,LUNMA,LUNDOC,NSAM,NROW,NSLICE,
d58 1
a58 1
      CHARACTER *1     :: ANS,NULL
d60 1
a60 2

      NULL = CHAR(0)
d69 1
a69 1
      IF (IMAMI .NE. 1) CALL NORM3(LUN,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
d77 1
a77 1
      IF (FCHAR(4:4) .EQ. 'R' .OR. FCHAR(5:5) .EQ. 'R') THEN
d79 1
a79 1
         CALL RDPRM2(HMIN,HMAX,NOT_USED,'HISTOGRAM RANGE MIN, MAX')
d81 1
a81 1
      ELSEIF (FCHAR(4:4) .EQ. 'M') THEN
d88 2
a89 2
      IF  (FCHAR(4:4) .EQ. 'T' .OR. FCHAR(5:5) .EQ. 'T' .OR.
     &    (FCHAR(4:4) .EQ. 'M' .AND. ANS .EQ. 'T')) THEN
d105 2
a106 2
      NREC = NSLICE * NROW
      IF (FCHAR(4:4) .EQ. 'M') THEN
d110 1
a110 1
         CALL HISTMINMAX(LUN,LUNMA,NSAM,NREC,HMIN,HMAX)
d120 1
a120 1
      CALL HISTIMAGE(LUN,LUNMA,NSAM,NREC,FREQ,
d123 3
a125 3
      IF (FCHAR(4:4) .EQ. 'D' .OR. 
     &    FCHAR(5:5) .EQ. 'D' .OR.
     &   (FCHAR(4:4) .EQ. 'M' .AND. ANS .EQ. 'D')) THEN
d167 1
a167 1
      IF (MAXBIN .EQ. 1) THEN
d171 1
a171 1
      ELSEIF (MAXBIN .EQ. NBINS) THEN
d190 1
a190 1
      ELSEIF (FNUMEL .EQ. 1) THEN
d198 1
a198 1
      FNPIX  = NSAM * NROW * NSLICE
d205 1
a205 1
         NPIX  = NSAM * NROW * NSLICE
d249 1
a249 1
      SUBROUTINE HISTIMAGE(LUN,LUNMA,NSAM,NREC,FREQ,
d254 1
a254 1
      DIMENSION        FREQ(128), BUFMASK(NSAM), REDBUF(NSAM)
d263 3
a265 3
            CALL REDLIN(LUN,REDBUF,NSAM,IREC)
            CALL REDLIN(LUNMA,BUFMASK,NSAM,IREC)
            DO  ISAM = 1,NSAM
d286 1
a286 1
            CALL REDLIN(LUN,REDBUF,NSAM,IREC)
d288 1
a288 1
            DO  ISAM = 1,NSAM
d311 1
a311 1
      SUBROUTINE HISTMINMAX(LUN,LUNMA,NSAM,NREC,
d317 1
a317 1
      DIMENSION        BUFMASK(NSAM), REDBUF(NSAM)
d321 2
a322 2
         CALL REDLIN(LUN,  REDBUF,NSAM,IREC)
         CALL REDLIN(LUNMA,BUFMASK,NSAM,IREC)
d324 1
a324 1
         DO  ISAM = 1,NSAM
@


1.40
log
@no histogram if 'DU' printed
@
text
@d55 5
a59 5
      DIMENSION        FREQ(128)
      DIMENSION        PLIST(4)
      DOUBLE PRECISION HAV, HAV2, DTOP, FNUMEL
      CHARACTER *1     ANS,NULL
      LOGICAL          MASK
d65 1
a65 1
         CALL ERRT(2,'HISTM',NE)
d74 1
a74 1
C     NBINS MUST BE <= 1000!!!
d89 1
a89 1
      IF (FCHAR(4:4) .EQ. 'T' .OR. FCHAR(5:5) .EQ. 'T' .OR.
d129 1
a129 1
         DO  IBIN=1,NBINS
d212 6
a217 6
     &    ' FILE RANGE:        ',1PG11.4,'   .........     ',1PG11.4,/,
     &    ' HISTOGRAM RANGE:   ',1PG11.4,'   .........     ',1PG11.4,/,
     &    ' TOTAL PIXELS:      ',I11,    '   PIXELS IN HIST.: ',I11,/,
     &    ' NO. OF BINS:       ',I11,    '   BIN SIZE:     ',1PG11.4,/,
     &    ' HIST. MEAN:        ',1PG11.4,'   HIST. MODE:   ',1PG11.4,/,
     &    ' HIST. S.D.:        ',1PG11.4/)
d223 6
a228 6
     &  ' FILE RANGE:        ',1PG11.4,'   .........     ',1PG11.4,/,
     &  ' HISTOGRAM RANGE:   ',1PG11.4,'   .........     ',1PG11.4,/,
     &  ' TOTAL PIXELS:      ',1PG11.4,'   PIXELS IN HIST.: ',1PG11.4,/,
     &  ' NO. OF BINS:       ',1PG11.4,'   BIN SIZE:     ',1PG11.4,/,
     &  ' HIST. MEAN:        ',1PG11.4,'   HIST. MODE:   ',1PG11.4,/,
     &  ' HIST. S.D.:        ',1PG11.4/)
@


1.39
log
@GPL_2010
@
text
@d124 3
a126 2
      IF (FCHAR(4:4) .EQ. 'D' .OR. FCHAR(5:5) .EQ. 'D' .OR.
     &    (FCHAR(4:4) .EQ. 'M' .AND. ANS .EQ. 'D')) THEN
d138 1
a138 1
      ELSE
@


1.38
log
@GPL License fixed
@
text
@a10 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d12 5
a16 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d18 1
a18 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d23 1
a23 1
C=* This program is distributed in the hope that it will be useful,    *
d25 1
a25 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a26 1
C=*                                                                    *
d28 1
a28 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.37
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a10 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d14 1
a14 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a33 6

C * COPYRIGHT (C)1981, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.36
log
@*** empty log message ***
@
text
@d2 1
d13 24
@


1.35
log
@interger output added
@
text
@d200 1
a200 1
     &    ' FILE PIXELS:       ',I11,    '   HIST. PIXELS: ',I11,/,
d205 1
a205 1
         WRITE(NDEV,91) FMIN,FMAX,HMIN,HMAX,FNPIX,FNUMEL,
d208 7
a214 7
91       FORMAT(
     &    ' FILE RANGE:        ',1PG11.4,'   .........     ',1PG11.4,/,
     &    ' HISTOGRAM RANGE:   ',1PG11.4,'   .........     ',1PG11.4,/,
     &    ' FILE PIXELS:       ',1PG11.4,'   HIST. PIXELS: ',1PG11.4,/,
     &    ' NO. OF BINS:       ',1PG11.4,'   BIN SIZE:     ',1PG11.4,/,
     &    ' HIST. MEAN:        ',1PG11.4,'   HIST. MODE:   ',1PG11.4,/,
     &    ' HIST. S.D.:        ',1PG11.4/)
@


1.34
log
@fnumel overflow bug fixed
@
text
@d8 1
d189 17
a205 1
      WRITE(NDEV,90) FMIN,FMAX,HMIN,HMAX,FNPIX,FNUMEL,
d208 9
a216 6
90    FORMAT(' FILE RANGE:        ',G10.3,'   .........     ',G10.3,/,
     &       ' HISTOGRAM RANGE:   ',G10.3,'   .........     ',G10.3,/,
     &       ' FILE PIXELS:       ',G10.3,'   HIST. PIXELS: ',G10.3,/,
     &       ' NO. OF BINS:       ',G10.3,'   BIN SIZE:     ',G10.3,/,
     &       ' HIST. MEAN:        ',G10.3,'   HIST. MODE:   ',G10.3,/,
     &       ' HIST. S.D.:        ',G10.3/)
d219 11
a229 4
      IF (NDEV .NE. NOUT) WRITE(NOUT,*) ' '
      IF (NDEV .NE. NOUT) WRITE(NOUT,90) FMIN,FMAX,HMIN,HMAX,FNPIX,
     &                    FNUMEL,FNBINS,BSIZ,HAV,HMODE,HSIG
      IF (NDEV .NE. NOUT) WRITE(NOUT,*) ' '
@


1.33
log
@nloop,iloop_removed
@
text
@d7 1
d9 8
a16 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981, WADSWORTH CENTER FOR LABORATORIES AND              *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
C **************************************************************************
d43 1
a43 1
      DOUBLE PRECISION HAV, HAV2, DTOP
d103 1
a103 1
      FNUMEL = 0
d169 1
a169 1
      DTOP  = HAV2 - HAV * HAV / DBLE(FNUMEL)
d172 1
a172 1
         WRITE(NOUT,*) '***  in HIST, SQRT(',DTOP,') IMPOSSIBLE' 
d182 2
a183 2
      HAV    = HAV  / DBLE(FNUMEL)
      HSIG   = DSQRT(DTOP / DBLE(FNUMEL - 1))
a213 1

d215 1
a215 1
      DOUBLE PRECISION HAV, HAV2
d237 2
a238 3

                     HAV  = HAV  + BVAL 
                     HAV2 = HAV2 + DBLE(BVAL) * DBLE(BVAL)
d259 2
a260 3

                  HAV  = HAV  + BVAL 
                  HAV2 = HAV2 + DBLE(BVAL) * DBLE(BVAL)
@


1.32
log
@mode bug fixed
@
text
@d66 1
a66 1
         CALL RDPRM2(HMIN,HMAX,NLOOP,ILOOP,'HISTOGRAM RANGE MIN, MAX')
@


1.31
log
@NaN trap added
@
text
@d6 2
d26 1
a26 1
C                 LUNDOC     IO UNIT NUMBER FOR MASK FILE
d28 1
a28 1
C                 NSAM,NROW  DIMENSIONS OF IMAGE
d30 1
a30 1
C                 HMIN,HMAX  HIST. MIN & MAX
a41 1

d44 1
a44 1
      CHARACTER *1     ANS
a45 1
      CHARACTER *1     NULL
d153 8
a160 2
      IF (MAXBIN .EQ. 1 .OR. MAXBIN .EQ. NBINS) THEN
         BMODE  = FREQ(MAXBIN)
d162 1
d164 2
a165 2
         Y1     = FREQ(MAXBIN+1)
         BMODE  = FLOAT(MAXBIN-1) + (YM1-Y1)*0.5/ (YM1+Y1-2.*HISMAX)
d167 1
a167 1
      HMODE  = HMIN + BMODE * BSIZ
@


1.30
log
@fixed hist. range for "HI TR" listing
@
text
@d4 2
a5 2
C HIST.F                     FMINT FOR HIST RANGE  JUNKE 2000 ArDean Leith
C
d214 31
a244 6
      DO  IREC=1,NREC
         CALL REDLIN(LUN,REDBUF,NSAM,IREC)
         IF (MASK) CALL REDLIN(LUNMA,BUFMASK,NSAM,IREC)
         DO  ISAM = 1,NSAM
           IF (.NOT. MASK .OR. (MASK .AND. BUFMASK(ISAM) .GE. 0.5))THEN
C              HISTOGRAM THIS PIXEL (IF MASK, MASK HAS POSITIVE VALUE)
d258 3
a260 3
           ENDIF
        ENDDO
      ENDDO
@


1.29
log
@cosmetic
@
text
@d4 1
a4 1
C HIST.F
a38 2


a47 2
      

d127 5
d133 2
@


1.28
log
@cosmetic
@
text
@d202 1
a202 1
      INCLUDE CMBLOCK.INC
d242 1
a242 1
      INCLUDE CMBLOCK.INC
@


1.27
log
@adapted for dynamical memory allocation
@
text
@d202 1
a202 1
      INCLUDE '/net/ithaca/usr1/spider/src/CMBLOCK.INC'
d242 1
a242 1
      INCLUDE '/net/ithaca/usr1/spider/src/CMBLOCK.INC'
@


1.26
log
@a
@
text
@a37 1
      INCLUDE 'CMLIMIT.INC'
a38 1
      COMMON /IOBUF/   REDBUF(NBUFSIZ)
a39 1
      COMMON           FREQ(1000), BUFMASK(NBUFSIZ)
d41 2
d52 2
a53 5
      IF (NSAM .GT. NBUFSIZ) THEN
C        INSUFFICENT BUFFER SIZE FOR FREQ
         CALL ERRT(3,'HIST',NE)
         RETURN
      ELSEIF (IFORM .LE. 0) THEN
d70 1
a70 1
	 CALL RDPRM2(HMIN,HMAX,NLOOP,ILOOP,'HISTOGRAM RANGE MIN, MAX')
d101 1
a101 1
         CALL HISTMINMAX(LUN,LUNMA,REDBUF,BUFMASK,NSAM,NREC,HMIN,HMAX)
d111 1
a111 1
      CALL HISTIMAGE(LUN,LUNMA,REDBUF,BUFMASK,NSAM,NREC,FREQ,
d199 1
a199 1
      SUBROUTINE HISTIMAGE(LUN,LUNMA,REDBUF,BUFMASK,NSAM,NREC,FREQ,
d202 1
a202 2
      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'
d204 2
a205 1
      DIMENSION        FREQ(1000), BUFMASK(NBUFSIZ), REDBUF(NBUFSIZ)
d231 1
a231 1
	ENDDO
d239 1
a239 1
      SUBROUTINE HISTMINMAX(LUN,LUNMA,REDBUF,BUFMASK,NSAM,NREC,
d242 2
a243 2
      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'
d245 1
a245 1
      DIMENSION        BUFMASK(NBUFSIZ), REDBUF(NBUFSIZ)
d264 1
@


1.25
log
@CMLIMIT.INC
@
text
@d51 1
a51 1
CNO_SAVE      
@


1.24
log
@null undefined
@
text
@d38 1
a38 1
CNO_SAVE
a39 1
      PARAMETER        (NBUFSIZ = 17008)
d42 1
a42 1
      COMMON           FREQ(1000), BUFMASK(17008)
a205 1
CNO_SAVE      
d207 1
d209 1
a209 1
      DIMENSION        FREQ(1000), BUFMASK(17008), REDBUF(17008)
a245 1
CNO_SAVE      
d247 1
d249 1
a249 1
      DIMENSION        BUFMASK(17008), REDBUF(17008)
@


1.23
log
@undeclared ans fixed
@
text
@d49 1
d51 1
d80 1
a80 1
     &      'OUTPUT TO RESULTS FILE, DOC. FILE, OR TERMINAL? (R/D/T):',
@


1.22
log
@bad continuation .
@
text
@d47 1
d74 1
@


1.21
log
@added question of him
@
text
@d77 1
a77 1
            NULL,IRTFLG)
@


1.20
log
@rewritten & bugs fixed
@
text
@d66 4
d73 5
d80 2
a81 5
C     NBINS MUST BE <= 1000!!!
      NBINS  = 128
      NDEV   = NDAT
      IDEV   = 1
      IF (FCHAR(4:4) .EQ. 'T' .or. FCHAR(5:5) .EQ. 'T') THEN
d115 2
a116 1
      IF (FCHAR(4:4) .EQ. 'D' .OR. FCHAR(5:5) .EQ. 'D') THEN
d128 1
a128 1
      ELSEIF (FCHAR(4:4) .NE. 'B') THEN
@


1.19
log
@cosmetic
@
text
@d16 1
a16 1
C    HIST(LUN,NSAM,NROW,NSLICE,IDUST,LUN2,UNUSED)
d18 4
a21 4
C    PURPOSE:    COMPUTE 128 PLACE HISTOGRAM FROM IMAGE RECORDS, STORE 
C                HISTOGRAM IN THE HISTOGRAM RECORDS, DISPLAY HISTOGRAM ON 
C                LINE PRINTER AND, OPTIONALLY, REMOVE DATA THAT ARE OUT OF 
C                RANGE.
d24 2
a25 1
C                 LUN2       IO UNIT NUMBER FOR DOCUMENT FILE
d27 3
a29 2
C                 IDUST      'DUST' OPTION      0  ONLY HISTOGRAM
C                                               1  REMOVE OUT OF RANGE DATA
a30 2
C    VARIABLES:   IDEV     FLAG FOR LINE PRINTER FORMATTED OUTPUT
C
d34 2
a35 1
      SUBROUTINE HIST(LUN,NSAM,NROW,NSLICE,IDUST,LUN2)
d38 6
d45 3
a47 2
C     GRAPH & GRAPHS USE IPLOT BUFFER
      COMMON IPLOT(128),BUF(1)
a48 2
      CHARACTER*1     NULL,ANS
      DIMENSION     PLIST(4)
a49 1
      NULL = CHAR(0)
d51 5
a55 1
      IF (IFORM .LE. 0) THEN
d57 1
a57 1
         CALL ERRT(2,'HIST',NE)
d62 4
a65 1
C  If one of the letters is R ask user for the range
d67 13
a79 4
	 CALL  RDPRM2(FMIN,FMAX,NLOOP,ILOOP,'HISTOGRAM RANGE MIN,MAX')
	 AV = (FMAX-FMIN) / 2.0
      ELSE
	 IF (IMAMI .NE. 1)CALL NORM3(LUN,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
d82 3
a84 4
C     CALCULATE HISTOGRAM HERE
C     ZERO THE HISTOGRAM
      DO  K = 1,128
         BUF(NSAM+K) = 0.0 
d87 11
a97 53
C      MPI 3-MAR-80 ADDED TO AVOID "BEAT" PHENOMENON   al
C      APPEARS TO EXPAND RANGE OF HIST. MIN/MAX FOR < 0...2 
C      HAS NO EFFECT ON CORRECTNESS OF HISTOGRAM   al

C      FOR MIN = 0.0 MAX=2.0 HMIN=0.0    HDIFF1=2.0
C      FOR MIN = 0.0 MAX=1.0 HMIN=0.0    HDIFF1=1.0
C      FOR MIN = 0.0 MAX=1.5 HMIN=-0.25  HDIFF1=2.0   al

       HDIFF = FMAX - FMIN
       IF (HDIFF .LE. 2.0) THEN
           VAR = 2.0
           DO  L=1,16
             IF (HDIFF .GT. VAR) GOTO 23
             VAR = VAR / 2.0
          ENDDO
          CALL ERRT(5,'HIST  ',NE)
          RETURN

23        HDIFF1 = VAR * 2.0
          DIFF   = HDIFF1 -HDIFF
          HMIN   = FMIN - DIFF / 2.0
       ELSE
          HMIN   = FMIN
          HDIFF1 = HDIFF
       ENDIF

       FF = 127.0 / HDIFF1

C      BUF(NSAM+129) AND BUF(NSAM+130) COMMUNICATE NEW MINIMUM AND 
C      INCREMENT USED IN HISTOGRAM COMPUTATION.

       BUF(NSAM+129) = HMIN
       BUF(NSAM+130) = HDIFF1

C      MPI END

      NUMEL = 0
      I     = 0
      Y     = 0.0

      DO  IZ=1,NSLICE
         DO  IY=1,NROW
            I = I+1
            CALL REDLIN(LUN,BUF,NSAM,I)
            DO  K = 1,NSAM
               B = BUF(K)
               J = INT((B-FMIN)*FF) + 1.5
               IF (J.GE.1 .AND. J.LE.128)  THEN
                  S           = B - AV
                  Y           = Y + S*S
                  BUF(NSAM+J) = BUF(NSAM+J)+1.
                  NUMEL       = NUMEL+1
               ENDIF
d99 6
a104 9
C              IF (J .LT. 1) THEN
C                 OFF HISTOGRAM AT BOTTEM
C                 BUF(NSAM+1) = BUF(NSAM+1)+1.
C              ELSEIF (J .GT. 128) THEN
C                 OFF HISTOGRAM AT TOP
C                 BUF(NSAM+128) = BUF(NSAM+128) + 1.
C              ELSE
C                 BUF(NSAM+J)=BUF(NSAM+J)+1.
C              ENDIF
d106 2
a107 3
	    ENDDO
	ENDDO
      ENDDO
a108 1
605   CONTINUE
d111 6
a116 7
         DINC     = 1.0 / FF
         PLIST(2) = FMIN
         DO  I=1,128
            PLIST(1) = I
            PLIST(2) = PLIST(2) + DINC
            PLIST(3) = BUF(NSAM + I)
            CALL SAVD(LUN2,PLIST,3,IRTFLG)
d119 1
a119 1
         CLOSE(LUN2)
d121 2
a122 9
      ELSEIF (FCHAR(4:4) .EQ. 'T' .OR. FCHAR(5:5) .EQ. 'T') THEN
C        OUTPUT ON TERMINAL
         NSAV  = NDAT
         NDAT  = NOUT
         IDEV  = 10
         WRITE(NOUT,*) ' '
         CALL GRAPH(BUF(NSAM+1),128,1,IDEV)
         WRITE(NOUT,*) ' '
         NDAT  = NSAV
d124 7
a130 3
      ELSEIF (FCHAR(4:4) .NE. 'B') THEN
C        OUTPUT IN RESULTS FILE
         CALL GRAPHS(BUF(NSAM+1),128,1)
d134 6
a139 6
      HISMAX = BUF(NSAM+1)
      J = 1
      DO  I = 2,128
         IF (BUF(NSAM+I) .GE. HISMAX) THEN
            HISMAX = BUF(NSAM+I)
            J       = I
d143 3
a145 3
C     CONVERT LOCATION J TO CORRESPONDING IMAGE INTENSITY (MODE)
      IF (J .EQ. 1 .OR. J .EQ. 128) THEN
         TMODE  = BUF(NSAM+J)
d147 17
a163 3
         YM1    = BUF(NSAM+J-1)
         Y1     = BUF(NSAM+J+1)
         TMODE  = FLOAT(J-1)+(YM1-Y1)*.5/ (YM1+Y1-2.*BUF(NSAM+J))
d165 30
a194 1
      TMODE = FMIN + TMODE / FF
d196 2
a197 1
      WRITE(NOUT,*) ' '
d199 21
a219 7
      HMAX = HMIN + HDIFF1
      BSIZ = HDIFF1 / 127.0
      IF (FCHAR(4:4) .EQ. 'R' .OR. FCHAR(5:5) .EQ. 'R') THEN
        WRITE(NOUT,90) FMIN,FMAX,HMIN,HMAX,TMODE,BSIZ
90      FORMAT(' REQUESTED RANGE:     ',G10.3,'   .........   ',G10.3,/,
     &         ' HISTOGRAM RANGE:     ',G10.3,'   .........   ',G10.3,/,
     &         ' MODE:                ',G10.3,'   BIN SIZE:   ',G10.3)
d221 5
a225 52
        IF (NDAT .NE. NOUT) WRITE(NDAT,91) FMIN,FMAX,HMIN,HMAX,
     &                      TMODE,BSIZ 
      ELSE
        WRITE(NOUT,91) FMIN,FMAX,HMIN,HMAX,AV,TMODE,SIG,BSIZ
91      FORMAT(' FILE RANGE:          ',G10.3,'   .........   ',G10.3,/,
     &         ' HISTOGRAM RANGE:     ',G10.3,'   .........   ',G10.3,/,
     &         ' FILE MEAN:           ',G10.3,'   MODE:       ',G10.3,/,
     &         ' S.D.:                ',G10.3,'   BIN SIZE:   ',G10.3)

        IF (NDAT .NE. NOUT) WRITE(NDAT,91) FMIN,FMAX,HMIN,HMAX,AV,
     &                      TMODE,SIG,BSIZ 
      ENDIF

C     USUALLY RETURN HERE
      IF (IDUST .EQ. 0) RETURN


C     IDUST ONLY SECTION ---------------------------------------

      CALL RDPRM(FMULT,NLOOP,ILOOP,'STANDARD DEVIATION FACTOR')
      CALL RDPRMI(ISIDE,IDUM,NLOOP,ILOOP,
     &             '(1)BOTTOM (2)TOP (3)BOTH SIDES')
      IF (FCHAR(4:4) .EQ. 'V') 
     &     CALL RDPRM(VALUE,NLOOP,ILOOP,'VALUE TO BE SUBSTITUTED')

      BOT  = FMIN
      TOP  = FMAX
      R    = NUMEL
      SIGT = SQRT(Y/R)
      Y    = SIGT * FMULT
      IF (ISIDE .EQ .1 .OR. ISIDE .EQ. 3) BOT = TMODE - Y
      IF (ISIDE .EQ .2 .OR. ISIDE .EQ. 3) TOP = TMODE + Y

C     FOR 'DU' CASE
      TT  = TOP
      TB  = BOT

C      FOR 'DU V' CASE
      IF (FCHAR(4:4) .EQ. 'V') THEN
         TT = VALUE
         TB = VALUE
      ENDIF

      AV = 0.0
      DO  I=1,NROW*NSLICE
         CALL REDLIN(LUN,BUF,NSAM,I)
         DO  K=1,NSAM
            IF (BUF(K) .GT. TOP) BUF(K)=TT
            IF (BUF(K) .LT. BOT) BUF(K)=TB
            AV = AV+BUF(K)
         ENDDO
         CALL WRTLIN(LUN,BUF,NSAM,I)
d228 12
d241 14
a254 2
C     SET STATISTICS TO UNDETERMINED
      CALL SETPRMB(BUF,LUN,NSAM,NROW,0.0,0.0,AV,'U')
d256 1
@


1.18
log
@*** empty log message ***
@
text
@d54 6
a59 6
	IF (FCHAR(4:4) .EQ. 'R' .OR. FCHAR(5:5) .EQ. 'R') THEN
	CALL  RDPRM2(FMIN,FMAX,NLOOP,ILOOP,'HISTOGRAM RANGE MIN,MAX')
	AV=(FMAX-FMIN)/2.0
	ELSE
	IF (IMAMI .NE. 1) CALL NORM3(LUN,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
	ENDIF
d68 1
a68 1
C      APPEARS TO EPAND RANGE OF HIST. MIN/MAX FOR < 0...2 
d169 2
a170 2
           HISMAX = BUF(NSAM+I)
           J  = I
d182 1
a182 1
      TMODE     = FMIN + TMODE / FF
d188 18
a205 18
	IF (FCHAR(4:4) .EQ. 'R' .OR. FCHAR(5:5) .EQ. 'R') THEN
      WRITE(NOUT,90) FMIN,FMAX,HMIN,HMAX,TMODE,BSIZ
90    FORMAT(' REQUESTED RANGE:     ',G10.3,'   .........   ',G10.3,/,
     &       ' HISTOGRAM RANGE:     ',G10.3,'   .........   ',G10.3,/,
     &       ' MODE:                ',G10.3,'   BIN SIZE:   ',G10.3)

      IF (NDAT .NE. NOUT) WRITE(NDAT,91) FMIN,FMAX,HMIN,HMAX,
     &                    TMODE,BSIZ 
	ELSE
      WRITE(NOUT,91) FMIN,FMAX,HMIN,HMAX,AV,TMODE,SIG,BSIZ
91    FORMAT(' FILE RANGE:          ',G10.3,'   .........   ',G10.3,/,
     &       ' HISTOGRAM RANGE:     ',G10.3,'   .........   ',G10.3,/,
     &       ' FILE MEAN:           ',G10.3,'   MODE:       ',G10.3,/,
     &       ' S.D.:                ',G10.3,'   BIN SIZE:   ',G10.3)

      IF (NDAT .NE. NOUT) WRITE(NDAT,91) FMIN,FMAX,HMIN,HMAX,AV,
     &                    TMODE,SIG,BSIZ 
	ENDIF
@


1.17
log
@*** empty log message ***
@
text
@a27 2
C                 MODE      'F' - full histogram
C                           'T' - histogram truncated to the range of densities
@


1.16
log
@*** empty log message ***
@
text
@d58 1
d190 9
d207 1
a207 1

@


1.15
log
@*** empty log message ***
@
text
@d57 1
a57 1
	CALL  RDPRM2(FMIN,FMAX,NLOOP,ILOOP,'HISTOGRAM RANGE MIN,MAX',IRTFLG)
@


1.14
log
@added idev parameter to graph call (used to be in common iprtt)
@
text
@d28 2
d36 1
a36 1
      SUBROUTINE HIST(LUN,NSAM,NROW,NSLICE,IDUST,LUN2,UNUSED)
d43 1
a43 1
      CHARACTER     NULL,ANS
d45 1
a45 1
      
d55 6
a60 1
      IF (IMAMI .NE. 1) CALL NORM3(LUN,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
d76 1
a76 1
25     HDIFF = FMAX - FMIN
a243 1
      RETURN
@


1.13
log
@*** empty log message ***
@
text
@d29 1
a29 1
C    VARIABLES:   IPRTT     FLAG FOR LINE PRINTER FORMATTED OUTPUT
d147 1
a147 1
         IPRTT = 10
d149 1
a149 1
         CALL GRAPH(BUF(NSAM+1),128,1)
@


1.12
log
@removed unused code, & cosmetic
@
text
@d101 2
a102 2
      DO 50 IZ=1,NSLICE
         DO 50 IY=1,NROW
d105 1
a105 1
            DO 40 K = 1,NSAM
d125 3
a127 2
40          CONTINUE
50    CONTINUE
@


1.11
log
@removed unused SAVE() and fixed the bug in DU
@
text
@d34 1
a34 1
      SUBROUTINE HIST(LUN,NSAM,NROW,NSLICE,IDUSTT,LUN2,UNUSED)
a45 4
C     IN CASE IDUST IS A CONSTANT
      IDUST = IDUSTT

C     ONLY GRAPH AND DUST IF HISTOGRAM EXISTS
d52 2
a53 2
C     MUST CALCULATE HISTOGRAM HERE ------------------------------
5     IF (IMAMI .NE. 1) CALL NORM3(LUN,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
d55 1
a55 1
10    Y = 0.
d61 7
a67 1
C      MPI 3-MAR-80 ADDED TO AVOID "BEAT" PHENOMENON
d99 1
d196 1
a196 1
	 IMAMI = 0
d200 2
a201 2
      IF (FCHAR(4:4) .EQ. 'V') CALL RDPRM(VALUE,NLOOP,ILOOP,
     &     'VALUE TO BE SUBSTITUTED')
d211 1
a211 1
C     for 'DU' case
d215 1
a215 1
C      for 'DU V' case
a231 41
C The following paragraph has been common out because no command refers to it.
C							----------  liy
C      ELSE
C
C        DO 101 I = 1,NROW*NSLICE
C          CALL REDLIN(LUN,BUF,NSAM,I)
C          K = 1
C
C80        K = K+1
C          IF (K .GT .NSAM) GOTO 100
C          IF (BUF(K) .LE. TOP .AND .BUF(K) .GE. BOT) GOTO 80
C          RAV = 0.0
C          J   = K-2
C          NCOUNT=0
C
C90        J   = J-1
C          RAV = RAV+BUF(J)
C          NCOUNT=NCOUNT+1
C          IF (NCOUNT .LT. 5 .AND. J .GE. 2) GOTO 90
C          RAV = RAV/FLOAT(NCOUNT)
C          K   = K-1
C95        K   = K+1
C          BUF(K) = RAV
C          IF (BUF(K) .GT. TOP .OR. BUF(K) .LT. BOT) GOTO 95
C          GOTO 80
C
C100       CALL WRTLIN(LUN,BUF,NSAM,I)
C101     CONTINUE

C     Calculate the parameters -- FMIN, FMAX, AV ------   liy
      IF (FMIN .LT. BOT) FMIN = BOT
      IF (FMAX. GT. TOP) FMAX = TOP
      AV = AV/(NSAM*NROW*NSLICE)

C     if 'DU V', also compare VALUE
      IF (FCHAR(4:4) .EQ. 'V') THEN
        IF (FMIN .GT. VALUE) FMIN = VALUE
        IF (FMAX. LT. VALUE) FMAX = VALUE
      ENDIF

      CALL SETPRMB(BUF,LUN,NSAM,NROW,FMAX,FMIN,AV,'U')
d233 2
a234 5
      CALL RDPRMC(ANS,NC,.TRUE.,'NEW HISTOGRAM? (Y/N)',NULL,IRT)
      IF (ANS .EQ. 'Y') THEN
         IDUST = 0
         GOTO 10
      ENDIF
d236 1
a236 1
       RETURN
@


1.10
log
@fixed the bug in enhancing images
@
text
@d39 1
a39 1
      COMMON IPLOT(128),BUF(1),SAVE(130)
a124 8

C     SAVE HISTOGRAM:  (I DO NOT SEE WHY THIS IS NECESSARY, al)
      DO  I=1,130
         SAVE(I) = BUF(NSAM+I)
      ENDDO



d193 1
d203 1
a203 1
      SIGT = SQRT(R*Y)
d208 9
a216 16
      IF (FCHAR(4:4) .NE. ' ') THEN
        TT  = TOP
        TB  = BOT
        IF (FCHAR(4:4) .EQ. 'V') THEN
           TT = VALUE
           TB = VALUE
        ENDIF

        DO  I=1,NROW*NSLICE
           CALL REDLIN(LUN,BUF,NSAM,I)
           DO  K=1,NSAM
              IF (BUF(K) .GT. TOP) BUF(K)=TT
              IF (BUF(K) .LT. BOT) BUF(K)=TB
           ENDDO
           CALL WRTLIN(LUN,BUF,NSAM,I)
        ENDDO
d218 10
a227 23
      ELSE

        DO 101 I = 1,NROW*NSLICE
          CALL REDLIN(LUN,BUF,NSAM,I)
          K = 1

80        K = K+1
          IF (K .GT .NSAM) GOTO 100
          IF (BUF(K) .LE. TOP .AND .BUF(K) .GE. BOT) GOTO 80
          RAV = 0.0
          J   = K-2
          NCOUNT=0

90        J   = J-1
          RAV = RAV+BUF(J)
          NCOUNT=NCOUNT+1
          IF (NCOUNT .LT. 5 .AND. J .GE. 2) GOTO 90
          RAV = RAV/FLOAT(NCOUNT)
          K   = K-1
95        K   = K+1
          BUF(K) = RAV
          IF (BUF(K) .GT. TOP .OR. BUF(K) .LT. BOT) GOTO 95
          GOTO 80
d229 38
a266 2
100       CALL WRTLIN(LUN,BUF,NSAM,I)
101     CONTINUE
d269 1
a269 1
      CALL SETPRMB(BUF,LUN,NSAM,NROW,TOP,BOT,AV,'U')
a273 2
         FMAX  = TOP
         FMIN  = BOT
d277 1
a277 1
      RETURN
@


1.9
log
@removed SPOOL/IPRTT stuff (no longer useable)
@
text
@d39 1
a39 1
      COMMON IPLOT(128),SAVE(130),BUF(1)
@


1.8
log
@removed rhist & whist
@
text
@d4 1
a4 1
C HIST.FOR
@


1.7
log
@changed output formatting, fixed bug if mode occurs at histogram end
@
text
@a53 12

      ELSEIF (IHIST .NE. 0. .AND. FCHAR(4:4) .NE. 'D') THEN
C       CAN GET HISTOGRAM FROM HISTOGRAM RECORDS FOR THE IMAGE
        CALL RHIST(LUN,BUF(NSAM+1),NSAM,NROW,NSLICE,IER)
        IF (IER .EQ. 0) THEN
C          HISTOGRAM RECOVERED OK
           HMIN   = BUF(NSAM+129)
           HDIFF1 = BUF(NSAM+130)
           FF     = 127.0 / HDIFF1
C          GOTO PRINTOUT SECTION
           GOTO 605
         ENDIF
a55 1

d57 1
a57 2
5     CONTINUE
      IF (IMAMI .NE. 1) CALL NORM3(LUN,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
a124 3
C     WRITE HISTOGRAM RECORDS INTO IMAGE FILE
C     ALSO CALLS SETPRM
      CALL WHIST(LUN,BUF(NSAM+1),NSAM,NROW,NSLICE,IER)
@


1.6
log
@many changes in ordering of lines, used setprmb, ouput
@
text
@d16 1
a16 1
C    HIST(LUN,NSAM,NROW,NSLICE,IDUST,LUN2,WINDOW)
a27 2
C                 WINDOW     LOGICAL VARIABLE FOR WINDOWING
C                            HISTOGRAM
d32 1
a32 1
C--*******************************************************************
d34 1
a34 1
      SUBROUTINE HIST(LUN,NSAM,NROW,NSLICE,IDUSTT,LUN2,WINDOW)
a41 1
      LOGICAL       WINDOW
d43 1
a43 1

d55 1
a55 2
      ELSEIF (IHIST .NE. 0. .AND. FCHAR(4:4) .NE. 'D' .AND.
     &        FCHAR(4:4) .NE. 'W') THEN
a78 21
      IF (WINDOW .AND. 
     &   (FCHAR(4:4) .EQ. 'W' .OR. FCHAR(5:5) .EQ. 'W')) THEN
C        USED FOR PAWELS WINDOW OPTION ONLY
         WRITE(NOUT,78) FMIN,FMAX
78       FORMAT(' CURRENT MINIMUM/MAXIMUM USED FOR HISTOGRAM:',G10.4,
     &          ' ... ',G10.4)
         CALL RDPRM2(FMINN,FMAXN,NLOOP,ILOOP,
     $       'NEW MIN AND MAX (<RET>=KEEP OLD ONES)')

         IF (FMINN .NE. FMAXN) THEN
C           HANDLES <RET>
            FMIN = FMINN
            FMAX = FMAXN
         ENDIF
         IF (FMAX .LE. FMIN) THEN
             WRITE(NOUT,51) FMIN,FMAX
             CALL ERRT(36,'HIST',NE)
             RETURN
         ENDIF
       ENDIF

d104 1
a105 1
       BUF(NSAM+129) = HMIN
d111 1
a111 3
      IZC   = NSLICE/2+1
      IYC   = NROW/2+1
      IXC   = NSAM/2+1
d119 5
a123 5
               IF (J.GE.1.AND.J.LE.128)  THEN
                  S = B - AV
                  Y = Y + S*S
                  BUF(NSAM+J)=BUF(NSAM+J)+1.
                  NUMEL = NUMEL+1
d181 1
d190 8
a197 2
      Y1     = BUF(NSAM+J+1)
      YM1    = BUF(NSAM+J-1)
d199 9
a207 2
      TMODE  = FLOAT(J-1)+(YM1-Y1)*.5/(YM1+Y1-2.*BUF(NSAM+J))
      TMODE  = FMIN + TMODE / FF
d209 2
a210 3
      WRITE(NOUT,1111) HMIN,HDIFF1
1111  FORMAT(' HISTOGRAM MINIMUM: ',G10.4,' BIN:  ',G10.4)
      WRITE(NOUT,*) ' '
a211 8
      IF (NDAT .NE. NOUT) WRITE(NOUT,51) FMIN,FMAX,AV,TMODE,SIG
51    FORMAT(' DENSITY RANGE:     ',G10.3,' ..... ',G10.3,/,
     &       ' MEAN:              ',G10.3,' MODE  ',G10.3,
     &       '  S.D. ',G10.3)

      IF (NDAT .EQ. NOUT) WRITE(NDAT,52) FMIN,FMAX,AV,TMODE,SIG
52    FORMAT(' DENSITY RANGE ',G10.3,' TO ',G10.3,
     &       '  MEAN ',G10.3,'   MODE ',G10.3,'  S.D. ',G10.3)
@


1.5
log
@setprm location changed
@
text
@d299 1
a299 1
      CALL SETPRM(LUN,NSAM,NROW,TOP,BOT,AV,'U')
@


1.4
log
@hist parameters changed (to remove radius, etc)
@
text
@d36 1
a36 1
      SUBROUTINE HIST(LUN,NSAM,NROW,NSLICE,IDUST,LUN2,WINDOW)
d40 2
a41 1
      COMMON IPLOT(128),PLIST(7),SAVE(130),BUF(1)
d45 1
d49 3
d58 2
a59 1
      ELSEIF (IHIST .NE. 0. .AND. FCHAR(4:4) .NE. 'D') THEN
d62 8
a69 15
        IF (IER .NE. 0) GOTO 5

	IF (FCHAR(4:4) .EQ. 'T') THEN
C         PRINT OUT THE HISTOGRAM
          NSAV  = NDAT
          NDAT  = NOUT
          IPRTT = 10
          CALL GRAPH(BUF(NSAM+1),128,1)
          NDAT  = NSAV

        ELSEIF (FCHAR(4:4) .NE. 'B') THEN
          CALL GRAPHS(BUF(NSAM+1),128,1)
        ENDIF
        HDIFF1=BUF(NSAM+130)
        GOTO 605
d73 1
d83 2
a84 2
      RADI = MAX0(NSAM,NROW,NSLICE)
      IF (WINDOW) THEN
d91 1
a91 3
         RADI = 0.0
         CALL RDPRM(RADI,NLOOP,ILOOP,'RADIUS (<RET>=WHOLE)')
         IF (RADI .EQ. 0.0)  RADI=MAX0(NSAM,NROW,NSLICE)
d93 1
d104 1
a104 1
C       MPI 3-MAR-80 ADDED TO AVOID "BEAT" PHENOMENON
d106 4
a109 6
25	HDIFF = FMAX-FMIN
	IF (HDIFF .LE. 2.) THEN
           VAR = 2.
C           DO 22 L=1,10
C ???
           DO 22 L=1,16
d111 2
a112 2
             VAR = VAR/2.
22        CONTINUE
d119 1
a119 1
        ELSE
d122 3
a124 1
        ENDIF
d126 2
a127 1
	FF = 127. / HDIFF1
d129 2
a130 2
C       BUF(NSAM+129) AND BUF(NSAM+130) COMMUNICATE NEW MINIMUM AND 
C       INCREMENT USED IN HISTOGRAM COMPUTATION.
d132 30
a161 40
	BUF(NSAM+130) = HDIFF1
	BUF(NSAM+129) = HMIN
	WRITE(NOUT,1111) HMIN,HDIFF1
1111	FORMAT(' @@@@@@@@ HMIN=',F10.4,'  HDIFF1=',F10.4)

C       MPI END
      NUMEL=0
      I=0
      RAD=RADI*RADI
      IZC=NSLICE/2+1
      IYC=NROW/2+1
      IXC=NSAM/2+1
      DO  50  IZ=1,NSLICE
      RZ=(IZ-IZC)**2
      DO  50  IY=1,NROW
      RY=RZ+(IY-IYC)**2
      I=I+1
        IF(RY.GT.RAD)  GOTO  50
        CALL REDLIN(LUN,BUF,NSAM,I)
        DO 40 K = 1,NSAM
        RR=(K-IXC)**2+RY
        IF(RR.GT.RAD)  GOTO  40
          B = BUF(K)
          J = INT((B-FMIN)*FF) + 1.5
          IF(J.GE.1.AND.J.LE.128)  THEN
          S = B - AV
          Y = Y + S*S
          BUF(NSAM+J)=BUF(NSAM+J)+1.
          NUMEL=NUMEL+1
          ENDIF

C          IF (J .LT. 1) THEN
C            OFF HISTOGRAM AT BOTTEM
C             BUF(NSAM+1) = BUF(NSAM+1)+1.
C          ELSEIF (J .GT. 128) THEN
C            OFF HISTOGRAM AT TOP
C             BUF(NSAM+128) = BUF(NSAM+128) + 1.
C          ELSE
C           BUF(NSAM+J)=BUF(NSAM+J)+1.
C          ENDIF
d163 1
a163 1
40      CONTINUE
d165 11
a175 18
       R=NUMEL
C SAVE HISTOGRAM:
      DO 102 I=1,130
      SAVE(I)=BUF(NSAM+I)
102   CONTINUE

      IF (FCHAR(4:4) .EQ. 'D') THEN
       DINC=1./FF
       PLIST(2)=FMIN
       DO 77 I=1,128
       PLIST(1)=I
       PLIST(2)=PLIST(2)+DINC
       PLIST(3)=SAVE(I)
       CALL SAVD(LUN2,PLIST,3,IRTFLG)
77     CONTINUE
       CALL SAVDC
       CLOSE(LUN2)
      ENDIF
d177 23
a199 9
C     UPDATE IMAGE STATISTICS IN THE HEADER OF THE FILE
      SIG = SQRT(R*Y)
      CALL SETPRM(LUN,NSAM,NROW,FMAX,FMIN,AV,'U')
      IF (FCHAR(4:4) .EQ. 'T') THEN
        NSAV  = NDAT
        NDAT  = NOUT
        IPRTT = 10
        CALL GRAPH(BUF(NSAM+1),128,1)
        NDAT  = NSAV
d202 2
a203 1
        CALL GRAPHS(BUF(NSAM+1),128,1)
d206 1
a206 1
C     FIND MAXIMUM FREQUENCY OCCURING IN HISTOGRAM (HISMAX) AND WHERE IT IS (J)
d208 1
a208 1
      DO 60 I = 2,128
d213 1
a213 1
60    CONTINUE
d215 3
a217 3
C     CONVERT J TO CORRESPONDING IMAGE INTENSITY
      Y1  = BUF(NSAM+J+1)
      YM1 = BUF(NSAM+J-1)
d222 8
a229 2
C     WRITE HISTOGRAM RECORDS INTO IMAGE FILE
      CALL WHIST(LUN,BUF(NSAM+1),NSAM,NROW,NSLICE,IER)
d231 1
a231 4
605   IF(NDAT.NE.NOUT) WRITE(NOUT,51) FMIN,FMAX,AV,TMODE,SIG
51    FORMAT(' DENSITY RANGE ',G10.3,' TO ',G10.3/
     1       ' MEAN ',G10.3,'  MODE ',G10.3,'  S.D. ',G10.3)
      IF(NDAT.EQ.NOUT) WRITE(NDAT,52) FMIN,FMAX,AV,TMODE,SIG
d233 1
a233 2
     1       '  MEAN ',G10.3,'   MODE ',G10.3,'  S.D. ',G10.3)

d238 2
d246 5
a250 3
      BOT = FMIN
      TOP = FMAX
      Y   = SIG * FMULT
d262 1
a262 1
        DO 75 I=1,NROW*NSLICE
d264 4
a267 4
           DO 70 K=1,NSAM
             IF (BUF(K) .GT. TOP) BUF(K)=TT
             IF (BUF(K) .LT. BOT) BUF(K)=TB
70         CONTINUE
d269 1
a269 1
75      CONTINUE
d280 1
a280 1
          RAV = 0.
d300 2
a301 1
      CALL RDPRMC(ANS,NC,.TRUE.,'NEW STATISTICS? (Y/N)',NULL,IRT)
d308 2
@


1.3
log
@fixed,  radius added
@
text
@d4 1
a4 1
C $$ HIST.FOR
d16 1
a16 1
C $$ HIST(LUN,NSAM,NROW,NSLICE,IDUST,LUN2)
d23 2
a24 2
C    PARAMETERS:  LUN        LOGICAL UNIT NUMBER OF IMAGE FILE
C                 LUN2       LOGICAL UNIT NUMBER FOR DOCUMENT FILE
d28 2
d36 1
a36 1
      SUBROUTINE HIST(LUN,NSAM,NROW,NSLICE,IDUST,LUN2)
a37 1
#ifdef SP_UNIX
a38 3
#else
      INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d43 1
d79 25
a103 18
      DO 20 K = 1,128
20    BUF(NSAM+K) = 0.

      WRITE(NOUT,78) FMIN,FMAX
78    FORMAT(1X,
     $'CURRENT MINIMUM/MAXIMUM USED FOR HISTOGRAM',2(1X,G10.4))
      CALL RDPRM2(FMINN,FMAXN,NLOOP,ILOOP,
     $'NEW MIN AND MAX (<RET>=KEEP OLD ONES)')
      CALL RDPRM(RADI,NLOOP,ILOOP,'RADIUS (<RET>=WHOLE)')
      IF(RADI.EQ.0.0)  RADI=MAX0(NSAM,NROW,NSLICE)
      IF(FMINN.NE.FMAXN) THEN
       FMIN=FMINN
       FMAX=FMAXN
      ENDIF
      IF (FMAX .LE. FMIN) THEN
        WRITE(NOUT,51) FMIN,FMAX
        RETURN
      ENDIF
d113 1
a113 1
             IF (HDIFF .GT. VAR)GOTO 23
d119 3
a121 3
23        HDIFF1 = VAR*2.
          DIFF   = HDIFF1-HDIFF
          HMIN   = FMIN-DIFF/2.
d127 1
a127 1
	FF = 127./HDIFF1
d181 1
a181 1
      IF(FCHAR(4:4).EQ.'D') THEN
d235 1
a235 1

d284 3
a286 3
          RAV=RAV/FLOAT(NCOUNT)
          K = K-1
95        K = K+1
@


1.2
log
@cpp_lines_added
@
text
@d75 1
a75 1
5     R = 1./(FLOAT(NSAM)*FLOAT(NROW))
d87 3
a89 1
     $'NEW MIN AND MAX (<RET>=KEEP OLD ONES)$')
d104 3
a106 1
           DO 22 L=1,10
d132 12
a143 2

      DO 50 I = 1,NROW*NSLICE
d146 2
d149 2
d153 3
a155 1
          J = INT((B-FMIN)*FF) + 1.5
d157 1
a157 1
          IF (J .LT. 1) THEN
d159 2
a160 3
             BUF(NSAM+1) = BUF(NSAM+1)+1.

          ELSEIF (J .GT. 128) THEN
d162 4
a165 5
             BUF(NSAM+128) = BUF(NSAM+128) + 1.

          ELSE
             BUF(NSAM+J) = BUF(NSAM+J) + 1.
          ENDIF
d169 1
a169 1

d232 1
a232 1
      CALL RDPRM(FMULT,NLOOP,ILOOP,'STANDARD DEVIATION FACTOR$')
d234 1
a234 1
     &             '(1)BOTTOM (2)TOP (3)BOTH SIDES$')
d236 1
a236 1
     &     'VALUE TO BE SUBSTITUTED$')
@


1.1
log
@Initial revision
@
text
@d36 3
d40 1
@
