head	1.21;
access;
symbols
	pre_mrcs:1.20
	healthdept_2018:1.20
	pre_getangas:1.17
	GPL2010:1.17
	pre_GPL2010:1.16
	pre_var_equation:1.15
	pre_fftwrings:1.15
	pre_opfiles:1.14
	src:1.14
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.11
	prec_CA:1.11
	noindx:1.9
	Bproc:1.7
	oct21:1.6
	last77:1.6;
locks; strict;
comment	@c @;


1.21
date	2019.11.04.17.36.16;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2018.10.03.14.34.03;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2014.01.12.19.50.42;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2013.05.29.15.41.50;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.06.24.13.25.17;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2009.09.25.13.39.55;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2008.02.21.13.49.13;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2006.12.21.15.13.23;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.20.50.13;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.18.40.37;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.08.07.15.04.16;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.19.14.55.40;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.11.14.08.43;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.01.19.18.56;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.11.10.23.09.12;	author yuchen;	state Exp;
branches;
next	1.6;

1.6
date	99.02.03.20.34.41;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.05.21.18.10.08;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	98.01.21.16.33.52;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.10.03.14.06.30;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	95.10.02.15.04.39;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	95.09.12.20.36.54;	author mladjadj;	state Exp;
branches;
next	;


desc
@file for EC group of comands
@


1.21
log
@mrc_support
@
text
@
C **********************************************************************
C
C   CONINT.FOR  -- CREATED                       OCT 1990 ArDean Leith
C
C **********************************************************************
C=* AUTHOR: ArDean Leith                                               *
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2019  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  CONINT(IRTFLG)
C
C  PURPOSE:     READS SPIDER 3-D PICTURE FILE, CREATES 3-D IMAGE 
C               FILE CONTAINING NUMBERS FOR CONNECTED CLUSTERS
C
C  PARAMETERS:  
C
C  CALLS:       CCONECT     FILSLI
C               MAPIM
C               EMPSLI      EMPSLI
C               MAKTAB      SHOSLI
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE CONINT(IRTFLG)

        INCLUDE 'CMBLOCK.INC'
	INCLUDE 'CMLIMIT.INC' 

C       NEQMAX IS MAXIMUM NUMBER OF PLACES IN BRANCHING EQUIV. TABLE
        PARAMETER  (NEQMAX = 16000)
		                                                                                        
        INTEGER                              :: IEQUIV(2,NEQMAX)

        INTEGER*2, ALLOCATABLE               :: SLICES(:)
        REAL, ALLOCATABLE                    :: BUF(:)
        INTEGER, ALLOCATABLE                 :: MSLICES(:)
        REAL, ALLOCATABLE                    :: TABLE(:)

C       REAL                                 :: VALUES(3)
        CHARACTER (LEN=1)                    :: NULL = CHAR(0)
        LOGICAL                              :: LASTSLI,DEBUGING
        CHARACTER (LEN=MAXNAM)               :: FILNAM
        INTEGER, PARAMETER                   :: LUNIM  = 11
        INTEGER, PARAMETER                   :: LUNOUT = 12
        REAL, PARAMETER                      :: FLTZER = 10E-30

        DEBUGING = .FALSE.

        NEQUIV   = 0
        LASTCLUS = 0

C       OPEN SPIDER FILE AS INPUT
20      MAXIM    = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNIM,'O',IFORM,NX,NY,NZ,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999

        NZ1    = NZ
        NPIXP1 = NX * NY + 1

        NLEN    = NX * NY * 2        ! INTEGER*2
        ALLOCATE(SLICES(NLEN),MSLICES(NZ),BUF(NX), STAT=IRTFLG)
        IF (IRTFLG .NE. 0) THEN 
           MWANT = NLEN/2 + NZ + NX
           CALL ERRT(46,'CONINT; SLICES...',MWANT)
           GOTO 9999
        ENDIF

        IF (IMAMI .NE. 1) THEN
             IF (NZ > 1) 
     &          WRITE(NOUT,*) ' NORMALIZING 3D FILE, PLEASE WAIT.'
             CALL NORM3(LUNIM,NX,NY,NZ1,FMAX,FMIN,AV)
        ENDIF

        IF ((FMAX - FMIN) < FLTZER) THEN
            WRITE(NOUT,*) ' *** ERROR: BLANK FILE SKIPPED '
            CALL ERRT(100,'CONINT',NE)
            GOTO 9999
        ENDIF

21      NUMSLI = NZ
        CALL RDPRAI(MSLICES,NZ,NUMSLI,1,NZ1,
     &       'SLICE NUMBERS',NULL,IRTFLG)
        IF (IRTFLG .EQ. -1) THEN
           CLOSE(LUNIM)
           GOTO 20
        ENDIF
        NZ2 = NUMSLI
 
C       DISPLAY MAX AND MIN VALUE OF PICTURE , ASK FOR THE LEVEL
        WRITE(NOUT,91) FMIN,FMAX
91      FORMAT(' IMAGE RANGE: ',1PG11.3,'....',1PG11.3)

C       FIND THRESHOLD LEVEL FOR CLUSTERS            
22      CALL RDPRM1S(THLEV,NOT_USED,'THRESHOLD LEVEL',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 21

23      MAXIM = 0
        IFORM = 3          
        CALL OPFILEC(LUNIN,.TRUE.,FILNAM,LUNOUT,'N',IFORM,
     &         NX,NY,NZ,MAXIM,'CLUSTER OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 22
        IF (IRTFLG .NE. 0) GOTO 9999

        LASTSLI = .FALSE.
 
        DO IPTR = 1,NUMSLI

           IF (MOD(IPTR,2) .NE. 0) THEN
C            CURRENT SLICE IS IN SLICE1
             INOW  = 1
             INEXT = NPIXP1
           ELSE
C            NEXT SLICE GOES INTO SLICE1 
             INOW  = NPIXP1
             INEXT = 1
           ENDIF 

           ISLICE = MSLICES(IPTR)
           NREC1  = (ISLICE - 1) * NY + 1
           NREC2  = NREC1 + NY - 1

           IF (IPTR .EQ. 1) THEN
C             MUST LOAD CURRENT SLICE ALSO
              CALL FILSLI(LUNIM,BUF,NX,NREC1,NREC2,.TRUE.,
     &                    THLEV,SLICES(1))
           ENDIF

           IF (IPTR < NUMSLI) THEN
C             LOAD NEW NEXT SLICE
              ISLICEN = MSLICES(IPTR+1)
              IF (ISLICEN .GT. NZ1) THEN
C                NO SUCH INPUT SLICE
                 WRITE(NOUT,*) ' *** SLICE NOT AVAILABLE:',ISLICEN
                 GOTO 40
              ENDIF
              NREC1N  = (ISLICEN - 1) * NY + 1
              NREC2N  = NREC1N + NY - 1
              CALL FILSLI(LUNIM,BUF,NX,NREC1N,NREC2N,.TRUE.,
     &          THLEV,SLICES(INEXT))
           ELSE
              LASTSLI = .TRUE.
           ENDIF

C          PROCESS CURRENT SLICE FOR CONNECTIVITY 
           CALL CCONECT(NX,NY,LUNOUT,SLICES(INOW),
     &          SLICES(INEXT),LASTSLI,IEQUIV,NEQUIV,
     &          NEQMAX,LASTCLUS,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

C          STORE CURRENT SLICE IN OUTPUT FILE
           NREC1N = (IPTR - 1) * NY + 1
           NREC2N = NREC1N + NY - 1
           CALL EMPSLI(LUNOUT,BUF,NX,NREC1N,NREC2N,SLICES(INOW))
           IF (DEBUGING) CALL SHOSLI(NOUT,BUF,NX,1,NX,SLICES(INOW))

           WRITE(NOUT,96) ISLICE,NEQUIV,LASTCLUS
96         FORMAT(' After slice:',I4,',  Branches=',I6,'  Clusters=',I6)

40         CONTINUE           
        ENDDO

C       ALL SLICES PROCESSED, START SECOND PASS THRU DATA FOR BRANCHES

C****************** DEBUGING
        IF (DEBUGING) THEN
        WRITE(10,*) ' IEQUIV '
        WRITE(10,793) ((IEQUIV(I,J),I=1,2),J=1,NEQUIV)
793     FORMAT(6(2I5,2X)) 
        ISLICE = 10          
        WRITE(10,*) ' AFTER FIRST PASS STACK SLICE:',ISLICE

        NREC1  = (ISLICE - 1) * NY + 1
        NREC2  = NREC1 + NY - 1
        CALL FILSLI(LUNOUT,BUF,NX,NREC1,NREC2,.FALSE.,0.0,SLICES)

        WRITE(10,9099)
        WRITE(10,*) ' window one  (200,90)...(240,200)'
        NREC1 = 90
        NREC2 = 200

        NX1 = 200
        NX2 = 340

        NX1 = 210
        NX2 = 239
        CALL SHOSLI2(10,BUF,NX,NX1,NX2,NREC1,NREC2,SLICES)
        NX1 = 240
        NX2 = 269

        WRITE(10,9099)
        CALL SHOSLI2(10,BUF,NX,NX1,NX2,NREC1,NREC2,SLICES)

        WRITE(10,9099)
9099    FORMAT('1')

C        WRITE(10,*) ' window two (415,190)...(475,325)'
C        NREC1 = 190
C        NREC2 = 325
C        NX1 = 415
C        NX2 = 444
C        CALL SHOSLI2(10,BUF,NX,NX1,NX2,NREC1,NREC2,SLICES)
C        WRITE(10,9099)
C        NX1 = 445
C        NX2 = 475
C        CALL SHOSLI2(10,BUF,NX,NX1,NX2,NREC1,NREC2,SLICES)
        ENDIF
C*******************************************
        ALLOCATE(TABLE(LASTCLUS),STAT=IRTFLG)
        IF (IRTFLG .NE. 0) THEN 
           MWANT = LASTCLUS
           CALL ERRT(46,'EC CL: , TABLE,',MWANT)
           GOTO 9999
        ENDIF

        WRITE(NOUT,*) ' '
        WRITE(NOUT,*) ' Constructing mapping table, please wait.'
        CALL MAKTAB(IEQUIV,NEQUIV,TABLE,LASTCLUS,NTAB,IRTFLG)

c************DEBUGING
        IF (DEBUGING) THEN
           WRITE(10,*) ' TABLE '
           WRITE(10,6993) (IT,TABLE(IT),IT=1,LASTCLUS)
6993       FORMAT(7(I5,1X,F5.0))
        ENDIF
C***************************************

        NREC1 = 1
        NREC2 = NY * NZ2
        WRITE(NOUT,*) ' Remapping cluster numbers, please wait.'
        CALL MAPIM(LUNOUT,LUNOUT,NX,NREC1,NREC2,TABLE,LASTCLUS,
     &       BUF,IRTFLG)

ccc        values(1) = 1.0       
ccc        values(2) = nlab
ccc        values(3) = 0.0
ccc        negative irtflg supresses label change output
ccc        irtflg = -1         
ccc        call setlab(lunout,nx,buf,6,3,values,'u',irtflg)
C****************** DEBUGING

        IF (DEBUGING) THEN
          ISLICE = 10          
          WRITE(10,*) ' FINAL STACK SLICE:',ISLICE
          NREC1  = (ISLICE - 1) * NY + 1
          NREC2  = NREC1 + NY - 1
          CALL FILSLI(LUNOUT,BUF,NX,NREC1,NREC2,.FALSE.,0.0,SLICES)

          WRITE(10,9099)
          WRITE(10,*) ' window one  (200,90)...(240,200)'
          NREC1 = 90
          NREC2 = 200

          NX1 = 200
          NX2 = 340

          NX1 = 210
          NX2 = 239
          CALL SHOSLI2(10,BUF,NX,NX1,NX2,NREC1,NREC2,SLICES)
          NX1 = 240
          NX2 = 269

          WRITE(10,9099)
          CALL SHOSLI2(10,BUF,NX,NX1,NX2,NREC1,NREC2,SLICES)
C        WRITE(10,9099)
C        WRITE(10,*) ' window two (415,190)...(475,325)'
C        NREC1 = 190
C        NREC2 = 325
C        NX1 = 415
C        NX2 = 444
C        CALL SHOSLI2(10,BUF,NX,NX1,NX2,NREC1,NREC2,SLICES)
C        WRITE(10,9099)
C        NX1 = 445
C        NX2 = 475
C       CALL SHOSLI2(10,BUF,NX,NX1,NX2,NREC1,NREC2,SLICES)
         ENDIF
C***********************************************
       
9999    CONTINUE
C       CLOSE THE FILES
        CLOSE(LUNOUT)
        CLOSE(LUNIM)

        END
    


@


1.20
log
@email_health_dept
@
text
@d4 2
a5 1
C   CONINT.FOR  -- CREATED OCT 90
d7 1
a7 1
C *  AUTHOR: ArDean Leith 
d11 1
a11 1
C=* Copyright 1985-2013  Health Research Inc.,                         *
d29 1
a29 1
C      CONINT(IRTFLG)
d31 2
a32 2
C      PURPOSE:     READS SPIDER 3-D PICTURE FILE, CREATES 3-D IMAGE 
C                   FILE CONTAINING NUMBERS FOR CONNECTED CLUSTERS
d34 1
a34 1
C      PARAMETERS:  
d36 4
a39 4
C      CALLS:       CCONECT     FILSLI
C                   MAPIM
C                   EMPSLI      EMPSLI
C                   MAKTAB      SHOSLI
d254 6
a259 6
CCC        VALUES(1) = 1.0       
CCC        VALUES(2) = NLAB
CCC        VALUES(3) = 0.0
C          NEGATIVE IRTFLG SUPRESSES LABEL CHANGE OUTPUT
CCC        IRTFLG = -1         
CCC        CALL SETLAB(LUNOUT,NX,BUF,6,3,VALUES,'U',IRTFLG)
d261 1
@


1.19
log
@enter
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.18
log
@nx
@
text
@d102 1
a102 1
     &       'ENTER SLICE NUMBERS',NULL,IRTFLG)
@


1.17
log
@GPL_2010
@
text
@d10 1
a10 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d53 4
a56 4
        INTEGER*2, ALLOCATABLE, DIMENSION(:) :: SLICES
        REAL, ALLOCATABLE, DIMENSION(:)      :: BUF
        INTEGER, ALLOCATABLE, DIMENSION(:)   :: MSLICES
        REAL, ALLOCATABLE, DIMENSION(:)      :: TABLE
d59 1
a59 1
        CHARACTER (LEN=1)                    :: NULL
d62 3
a64 2
       
        DATA FLTZER/10E-30/
a65 1
        NULL     = CHAR(0)
a67 3
        LUNIM    = 11
        LUNOUT   = 12

d73 1
a73 1
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNIM,'O',IFORM,NSAM,NROW,NSLICE,
d77 2
a78 2
        NSLICE1 = NSLICE
        NPIXP1  = NSAM * NROW + 1
d80 2
a81 2
        NLEN    = NSAM * NROW * 2        ! INTEGER*2
        ALLOCATE(SLICES(NLEN),MSLICES(NSLICE),BUF(NSAM), STAT=IRTFLG)
d83 2
a84 2
           MWANT = NLEN/2 + NSLICE + NSAM
           CALL ERRT(46,'EC CL: , SLICES,',MWANT)
d89 1
a89 1
             IF (NSLICE .GT. 1) 
d91 1
a91 1
             CALL NORM3(LUNIM,NSAM,NROW,NSLICE1,FMAX,FMIN,AV)
d94 1
a94 1
        IF ((FMAX - FMIN) .LT. FLTZER) THEN
d100 2
a101 2
21      NUMSLI = NSLICE
        CALL RDPRAI(MSLICES,NSLICE,NUMSLI,1,NSLICE1,
d107 1
a107 1
        NSLICE2 = NUMSLI
d120 1
a120 1
     &         NSAM,NROW,NSLICE,MAXIM,'CLUSTER OUTPUT',.FALSE.,IRTFLG)
d139 2
a140 2
           NREC1  = (ISLICE - 1) * NROW + 1
           NREC2  = NREC1 + NROW - 1
d144 1
a144 1
              CALL FILSLI(LUNIM,BUF,NSAM,NREC1,NREC2,.TRUE.,
d148 1
a148 1
           IF (IPTR .LT. NUMSLI) THEN
d151 1
a151 1
              IF (ISLICEN .GT. NSLICE1) THEN
d156 3
a158 3
              NREC1N  = (ISLICEN - 1) * NROW + 1
              NREC2N  = NREC1N + NROW - 1
              CALL FILSLI(LUNIM,BUF,NSAM,NREC1N,NREC2N,.TRUE.,
d165 1
a165 1
           CALL CCONECT(NSAM,NROW,LUNOUT,SLICES(INOW),
d171 4
a174 4
           NREC1N = (IPTR - 1) * NROW + 1
           NREC2N = NREC1N + NROW - 1
           CALL EMPSLI(LUNOUT,BUF,NSAM,NREC1N,NREC2N,SLICES(INOW))
           IF (DEBUGING) CALL SHOSLI(NOUT,BUF,NSAM,1,NSAM,SLICES(INOW))
d192 3
a194 3
        NREC1  = (ISLICE - 1) * NROW + 1
        NREC2  = NREC1 + NROW - 1
        CALL FILSLI(LUNOUT,BUF,NSAM,NREC1,NREC2,.FALSE.,0.0,SLICES)
d201 2
a202 2
        NSAM1 = 200
        NSAM2 = 340
d204 5
a208 5
        NSAM1 = 210
        NSAM2 = 239
        CALL SHOSLI2(10,BUF,NSAM,NSAM1,NSAM2,NREC1,NREC2,SLICES)
        NSAM1 = 240
        NSAM2 = 269
d211 1
a211 1
        CALL SHOSLI2(10,BUF,NSAM,NSAM1,NSAM2,NREC1,NREC2,SLICES)
d219 3
a221 3
C        NSAM1 = 415
C        NSAM2 = 444
C        CALL SHOSLI2(10,BUF,NSAM,NSAM1,NSAM2,NREC1,NREC2,SLICES)
d223 3
a225 3
C        NSAM1 = 445
C        NSAM2 = 475
C        CALL SHOSLI2(10,BUF,NSAM,NSAM1,NSAM2,NREC1,NREC2,SLICES)
d248 1
a248 1
        NREC2 = NROW * NSLICE2
d250 1
a250 1
        CALL MAPIM(LUNOUT,LUNOUT,NSAM,NREC1,NREC2,TABLE,LASTCLUS,
d258 1
a258 1
CCC        CALL SETLAB(LUNOUT,NSAM,BUF,6,3,VALUES,'U',IRTFLG)
d263 3
a265 3
          NREC1  = (ISLICE - 1) * NROW + 1
          NREC2  = NREC1 + NROW - 1
          CALL FILSLI(LUNOUT,BUF,NSAM,NREC1,NREC2,.FALSE.,0.0,SLICES)
d272 2
a273 2
          NSAM1 = 200
          NSAM2 = 340
d275 5
a279 5
          NSAM1 = 210
          NSAM2 = 239
          CALL SHOSLI2(10,BUF,NSAM,NSAM1,NSAM2,NREC1,NREC2,SLICES)
          NSAM1 = 240
          NSAM2 = 269
d282 1
a282 1
          CALL SHOSLI2(10,BUF,NSAM,NSAM1,NSAM2,NREC1,NREC2,SLICES)
d287 3
a289 3
C        NSAM1 = 415
C        NSAM2 = 444
C        CALL SHOSLI2(10,BUF,NSAM,NSAM1,NSAM2,NREC1,NREC2,SLICES)
d291 3
a293 3
C        NSAM1 = 445
C        NSAM2 = 475
C       CALL SHOSLI2(10,BUF,NSAM,NSAM1,NSAM2,NREC1,NREC2,SLICES)
a301 1
        RETURN
@


1.16
log
@ EC operations memory rewrite
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.15
log
@filsli debug parameters wrong
@
text
@d32 1
a32 1
C      CONINT(MAXDIM)
d37 1
a37 3
C      PARAMETERS:  MAXDIM      PIXEL LIMIT PER SLICE
C                   SLICES      ARRAY ALLOCATION FOR SLICES
C                   MAXTAB      MAXIMUM NUMBER OF CLUSTERS
d39 1
a39 1
C      CALLS:       CCONECT            FILSLI
d41 2
a42 2
C                   EMPSLI             EMPSLI
C                   MAKTAB             SHOSLI
d47 1
a47 1
        SUBROUTINE CONINT(MAXDIM,MAXTAB)
a51 5
        CHARACTER (LEN=MAXNAM) ::  FILNAM

C       NSAMAX IS MAXIMUM NUMBER OF COL. IN IMAGE 
        PARAMETER  (NSAMAX = 10000)

d54 2
d57 9
a65 20
C       NSLMAX IS MAXIMUM NUMBER OF SLICES IN MSLICES TABLE
        PARAMETER  (NSLMAX = 800)

C       NPIXMAX IS MAXIMUM NUMBER OF PIXELS IN 2 SLICES
        PARAMETER  (NPIXMAX = 524288)

C       USED IN MAKTAB ONLY
        PARAMETER  (NOTMAX = 10000)
		                                                                                        
C       WARNING MAKTAB AND MAPDIST ALSO USE UNLABELED COMMON!!!
        INTEGER * 2  SLICES
        COMMON       SLICES(NPIXMAX),MSLICES(NSLMAX),IEQUIV(2,NEQMAX),
     &               BUF(NSAMAX),NOTDONE(NOTMAX),NOTUSED(NOTMAX),
     &               ISTACK(1)

        COMMON /DOC_BUF/ TABLE(1)

C       DIMENSION      VALUES(3)
        CHARACTER * 1  NULL
        LOGICAL        LASTSLI,DEBUGING
d70 1
a70 1
        DEBUGING    = .FALSE.
d87 7
a93 6
        MAXPIX   =  NPIXMAX 
        IF (NPIXP1 .GE. MAXPIX) THEN
            WRITE(NOUT,90) MAXPIX
 90         FORMAT(' *** PGM LIMIT:',I7,' PIXELS, FILE SKIPPED'/)
            CALL ERRT(100,'CONINT',NE)
            GOTO 9999
d95 1
a95 8
        ELSEIF (NSAM .GT. NSAMAX) THEN
            NTEMP = NSAMAX
            WRITE(NOUT,92) NTEMP
 92         FORMAT(' *** PGM LIMIT:',I6,' COLUMNS, FILE SKIPPED'/)
            CALL ERRT(100,'CONINT',NE)
            GOTO 9999

        ELSEIF (IMAMI .NE. 1) THEN
d107 2
a108 2
21      NUMSLI = NSLMAX
        CALL RDPRAI(MSLICES,NSLMAX,NUMSLI,1,NSLICE1,
a148 1

d174 1
a174 1
     &          NEQMAX,LASTCLUS,MAXTAB,IRTFLG)
d235 6
d242 1
a242 1
888     WRITE(NOUT,*) ' '
d244 1
a244 2
        CALL MAKTAB(IEQUIV,NEQUIV,TABLE,LASTCLUS,NTAB,
     &              NOTDONE,NOTUSED,ISTACK,IRTFLG)
@


1.14
log
@common debug -> debug1 compiler balks
@
text
@d224 1
a224 1
        CALL FILSLI(LUNOUT,BUF,NSAM,NREC1,NREC2,0.0,.FALSE.,SLICES)
d290 1
a290 1
          CALL FILSLI(LUNOUT,BUF,NSAM,NREC1,NREC2,0.0,.FALSE.,SLICES)
@


1.13
log
@GPL License fixed
@
text
@d81 1
a81 1
        LOGICAL        LASTSLI,DEBUG
d86 1
a86 1
        DEBUG    = .FALSE.
d204 1
a204 1
           IF (DEBUG) CALL SHOSLI(NOUT,BUF,NSAM,1,NSAM,SLICES(INOW))
d214 2
a215 2
C****************** DEBUG
        IF (DEBUG) THEN
d264 2
a265 2
c************debug
        IF (DEBUG) THEN
d284 2
a285 2
C****************** DEBUG
        IF (DEBUG) THEN
@


1.12
log
@HRI GPL License used
@
text
@a2 1
C**************************************************************************
a5 1
C **************************************************************************
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1990 , WADSWORTH CENTER FOR LABORATORIES AND RESEARCH    *
C *    NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.              *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH  			   *
a30 1
C **************************************************************************
@


1.11
log
@rdprm1s
@
text
@d2 1
d6 1
d9 24
d39 1
@


1.10
log
@opfilec
@
text
@d25 1
a25 1
C                   RDPRM2S            MAPIM
d126 1
a126 1
22      CALL RDPRM2S(THLEV,FDUM,NOT_USED,'THRESHOLD LEVEL',IRTFLG)
@


1.9
log
@nloop,iloop_removed
@
text
@d35 1
d37 2
a62 1
        CHARACTER * 81 FILNAM
d66 1
a66 1
        DATA FLTMIN/-10E30/,FLTZER/10E-30/,FLTMAX/10E30/
d79 1
a79 1
        CALL OPFIL(.TRUE.,FILNAM,LUNIM,'O',NSAM,NROW,NSLICE,
d131 2
a132 2
        CALL OPFIL(.TRUE.,FILNAM,LUNOUT,'N',NSAM,NROW,NSLICE,
     &             MAXIM,'CLUSTER OUTPUT',.FALSE.,IRTFLG)
@


1.8
log
@cosmetic
@
text
@d124 1
a124 1
22      CALL RDPRM2S(THLEV,FDUM,NLOOP,ILOOP,'THRESHOLD LEVEL',IRTFLG)
@


1.7
log
@a
@
text
@d24 4
a27 1
C      CALLED BY:   DRIVERT
a28 5
C      CALLS:       CCONECT            OPENF             FILSLI
C                   RDPRM2S            RDPRAI            MAPIM
C                   EMPSLI             NORM              EMPSLI
C                   NORM3              MAKTAB            SHOSLI
C
a32 2
 

a73 1

@


1.6
log
@cnosave
@
text
@d35 1
a35 1
CNO_SAVE 
@


1.5
log
@bad nrec2n counter fixed
@
text
@d35 2
@


1.4
log
@used opfil
@
text
@d186 1
a186 1
           NREC2N = NREC1N + NROW
@


1.3
log
@removed unused values
@
text
@a76 2
20      CALL FILERD(FILNAM,NLETI,NULL,'INPUT',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
d78 6
a83 3
C       OPEN SPIDER IMAGE TYPE FILE AS INPUT
        CALL OPENF(FILNAM,LUNIM,NSAM,NROW,'OLD',NF,NSLICE)
        IF (NF .NE. 2) GOTO 9999
d130 1
a130 3
23      CALL FILERD(FILNAM,NLETI,NULL,'CLUSTER OUTPUT',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 22
 
d132 4
a135 3
C       OPEN NEW SPIDER IMAGE FILE FOR OUTPUT
        CALL OPENF(FILNAM,LUNOUT,NSAM,NROW,'NEW',NF,NSLICE2)
        IF (NF .NE. 2) GOTO 9999
d139 1
a139 1
        DO 40 IPTR = 1,NUMSLI
d193 2
a194 2
40      CONTINUE           

@


1.2
log
@used unlabeled common
@
text
@d61 1
a61 1
        DIMENSION      VALUES(3)
@


1.1
log
@file for EC group of comands
@
text
@d34 1
a34 1
        SUBROUTINE CONINT(SLICES,MAXDIM,MAXTAB)
d36 2
d45 7
a51 1
        PARAMETER  (NSLMAX = 500)
d53 5
a57 8
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif

C***        COMMON /SPI_BUF/ MSLICES(NSLMAX),IEQUIV(2,NEQMAX),BUF(NSAMAX)
        DIMENSION MSLICES(NSLMAX),BUF(NSAMAX),IEQUIV(2,NEQMAX)
a61 1
        INTEGER   * 2  SLICES(*)
d68 2
a69 3
        NULL   = CHAR(0)

        DEBUG = .FALSE.
d71 2
a72 2
        LUNIM  = 11
        LUNOUT = 12
d74 2
a75 1
        MAXPIX =  MAXDIM 
d86 1
d89 2
a90 1
 90         FORMAT(' SORRY, PGM LIMIT:',I7,' PIXELS, FILE SKIPPED'/)
d96 2
a97 1
 92         FORMAT(' SORRY, PGM LIMIT:',I6,' COLUMNS, FILE SKIPPED'/)
d108 1
d245 2
a246 1
        CALL MAKTAB(IEQUIV,NEQUIV,TABLE,LASTCLUS,NTAB,IRTFLG)
@
