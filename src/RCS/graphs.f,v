head	1.13;
access;
symbols
	healthdept_2018:1.13
	pre_getangas:1.11
	GPL2010:1.11
	pre_GPL2010:1.10
	pre_var_equation:1.10
	pre_fftwrings:1.10
	pre_opfiles:1.10
	src:1.10
	best-code:1.10
	x-named-regs:1.10
	x:1.10
	v13-00:1.10
	pre_GPL:1.8
	prec_CA:1.8
	noindx:1.8
	Bproc:1.8
	oct21:1.6
	last77:1.6;
locks; strict;
comment	@c @;


1.13
date	2018.10.03.14.34.07;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2013.08.12.14.32.16;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.24.13.25.52;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.19.54.28;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.17.51.24;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.19.12.51.36;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.11.10.23.09.20;	author yuchen;	state Exp;
branches;
next	1.6;

1.6
date	98.08.10.19.11.17;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.10.09.14.27.34;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.09.30.20.47.28;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.03.17.14.53.22;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	97.03.17.14.17.55;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.49.26;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.13
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C GRAPHS.F
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C       GRAPHS(NDEV,YVAL,NPT,NSET,IDEV,FACT,IRTFLG)
C
C       DISPLAYS NSET ONE-DIMENSIONAL FUNCTIONS STORED
C       IN AN ARRAY YVAL(NPT) ON THE LINE PRINTER  (ANCIENT CODE!!)
C
C       NDEV    OUTPUT LUN
C       YVAL    FLOATING POINT ARRAY OF DIMENSION NSET*NPT CONTAINING
C               NSET FUNCTIONS
C       NPT     DIMENSION OF EACH FUNCTION ( MUST ALL HAVE SAME DIM.)
C       NSET    NUMBER OF FUNCTIONS TO BE DISPLAYED ON A SINGLE
C               GRAPH < OR = 10
C       IDEV    0 IS TERMINAL OUTPUT 1 IS LINE PRINTER OUTPUT
C       FACT    Y SCALE MAGNIFCATION FACTOR
C       IRTFLG  ERROR FLAG (0 IS NORMAL)
C
C  DESCRIPTION:  THE RANGE BETWEEN MAXIMUM AND MINIMUM OF THE WHOLE
C                ARRAY YVAL IS MAPPED ONTO ONE PRINTER PAGE, WHILE
C                THE NPT SAMPLING POINTS ARE SPREAD ACROSS THE FULL
C                WIDTH OF THE PAGE.  EACH OF THE NSET FUNCTIONS IS
C                POINTED WITH A DIFFERENT SYMBOL, STARTING
C                WITH '0', '1', ETC.
C
C--*******************************************************************

      SUBROUTINE GRAPHS(NDEV,YVAL,NPT,NSET,IDEV,FACT,IRTFLG)

      INCLUDE 'CMBLOCK.INC'

      CHARACTER*1 IPLOT(128),ICHAR(10),ICH
      DIMENSION   YVAL(1),ISTORE(5)

      DATA ICHAR/'0','1','2','3','4','5','6','7','8','9'/

C     (YSIZE + 1) IS Y DIMENSION OF GRAPH  
C     DEFAULT IS TERMINAL OUTPUT  70 X 18
      IXSIZE    = 70
      YSIZE     = 18.0

      IF (IDEV .NE. 0) THEN
C        OUTPUT TO LINE PRINTER  128 X 50
         IXSIZE  = 128
         YSIZE   = 50.0
      ENDIF

      IYSIZE = YSIZE + 0.5
      KK     = NSET * NPT

C     FIND MIN/MAX OF YVAL(1...NSET*NPT)
      TOP   = YVAL(1)
      BOT   = YVAL(1)
      DO   I = 1,KK
         IF (YVAL(I) .GT. TOP) TOP = YVAL(I)
         IF (YVAL(I) .LT. BOT) BOT = YVAL(I)
      ENDDO

      IF (TOP .LE. BOT) THEN
         WRITE(NDEV,*) '*** ZERO Y RANGE. GRAPH ABANDONED'
         IRTFLG = 1
         RETURN
      ENDIF

      T1 = BOT + (TOP - BOT) / FACT
      WRITE(NDEV,*) 
     &' --------------------------- GRAPH -------------------------'

      WRITE(NDEV,13) BOT,TOP, BOT,T1
13    FORMAT(/'  Y RANGE ',G12.3,' TO ',G12.3,
     &        ' (ACTUAL ',G12.4,' TO ',G12.3,')')
      WRITE(NDEV,*) ' '

C     SCALE Y VALUES 
      S = FACT * YSIZE / (TOP - BOT)
      DO  I = 1,KK
         YVAL(I) = S * (YVAL(I) - BOT)
      END DO

C     UNSURE WHY THIS WAS IN HERE al
      T1  = -S * BOT + 0.5
      IF (T1 .LT. 0.0) T1 = T1 - 1.0
      TIX = 32000.0
      IF (T1 .LT. TIX) TIX = T1
      IX  = TIX

      DX =  FLOAT(IXSIZE-1) / FLOAT(NPT-1)

      DO IY = IYSIZE, 0, -1
C        PUT BACKGROUND CHAR(S). IN THIS LINE OF GRAPH
         ICH = ' ' 
         IF (IY.EQ.IYSIZE .OR. IY.EQ.0 .OR. IY.EQ.IX) ICH = '-'
         DO  I = 1,IXSIZE
            IPLOT(I) = ICH
         ENDDO
         IPLOT(1)      = 'I'
         IPLOT(IXSIZE) = 'I'

C        CHECK IF YVAL IS AT THIS LINE OF GRAPH
         X = 1.0
         DO  I = 1,NPT
            K = I
            DO  J = 1,NSET
              IF (IFIX(YVAL(K)+.5).EQ.IY) IPLOT(IFIX(X+.5)) = ICHAR(J)
              K = K + NPT
            ENDDO
            X = X + DX
         ENDDO

C        OUTPUT THIS LINE OF THE GRAPH
         WRITE(NDEV,8) (IPLOT(I),I=1,IXSIZE)
8        FORMAT('   ',128A)
      ENDDO

C     PLOT X AXIS LABELS
      CALL GRAPHAX(NDEV,IPLOT,ICHAR,IXSIZE,IRTFLG)

      WRITE(NDEV,*) ' '

C     RESTORE ORIGINAL YVAL. VALUES
      S = 1.0 / S
      DO I=1,KK
         YVAL(I) = YVAL(I) * S + BOT
      END DO

      IRTFLG = 0

      END

C     ---------------- GRAPHAX -------------------------------------

      SUBROUTINE GRAPHAX(NDEV,IPLOT,ICHAR,IXSIZE,IRTFLG)



      INCLUDE 'CMBLOCK.INC'

      CHARACTER*1 IPLOT(128),ICHAR(10)
      DIMENSION   ISTORE(5)

C     LABEL  X AXIS, WITH SCALES 

	XO    = -2.0
	FMAXQ = FMAX / 100.0
	FMINQ = FMIN / 100.0
	DO  IXO=1,4
          IF (FMAXQ - FMINQ .GE. 2.) GO TO 200
          XO    = XO + 1.0
          FMAXQ = FMAXQ * 10.0
          FMINQ = FMINQ * 10.0
	ENDDO

200	FJ    = (IXSIZE - 1.0) / (FMAXQ - FMINQ)
   	IMINH = FMINQ
	IF (FLOAT(IMINH) .LT. FMINQ) IMINH = FMINQ + 1.0
	FMINV = FLOAT(IMINH)
	IMAXH = FMAXQ
	FMAXV = FLOAT(IMAXH)
   	STEP  = (FMAXV-FMINV)/4.
	DO  I=1,IXSIZE
  	   IPLOT(I) = ' '
	ENDDO

	DO  I=0,4
          BT = FMINV + FLOAT(I) * STEP
          J  = INT((BT - FMINQ) * FJ) + 1.5
          IF (J .GT. IXSIZE) J = IXSIZE
          IF (J .LT. 1) J = 1
          IPLOT(J)    = '.'
          ISTORE(I+1) = J
	ENDDO

	WRITE(NDEV,260)(IPLOT(I),I=1,IXSIZE)
260	FORMAT('   ',128A1)

	FMAXV = FMAXV / (10.0 ** XO)
	FMINV = FMINV / (10.0 ** XO) + 0.00001
	IF (FMINV .LT. 0.0) FMINV = FMINV  - 0.00002
	STEP = STEP / (10.0 ** XO)
	DO  IA=1,5
          FVALUE = FMINV + FLOAT(IA-1) * STEP
          FVALUE = FVALUE / 100.0
          DO  IB=1,9
            IC = IB-5
            IF (ISTORE(IA) .LE. 4)   IC = IB - ISTORE(IA)
            IF (ISTORE(IA) .GT. (IXSIZE -4)) THEN 
               IC = IC - ISTORE(IA) + (IXSIZE-4)
            ENDIF

            IF (IB .EQ .5) THEN
               IPLOT(ISTORE(IA)+IC) = '.'

            ELSEIF (IB .EQ. 1) THEN
               IPLOT(ISTORE(IA)+IC) = '+'
               IF (FVALUE .LT. 0) IPLOT(ISTORE(IA)+IC) = '-'
            ELSE
               IVALUE = FVALUE
               DO ID=1,10
                 IF (IABS(IVALUE) .EQ. ID-1) THEN
                    IPLOT(ISTORE(IA)+IC) = ICHAR(ID)
                 ENDIF
               ENDDO
               FVALUE = FVALUE - FLOAT(IVALUE)
               FVALUE = FVALUE * 10.0
            ENDIF
	 ENDDO
      ENDDO
      WRITE(NDEV,260) (IPLOT(I),I=1,IXSIZE)

      IRTFLG = 0

      END
@


1.12
log
@cosmetic
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.11
log
@GPL_2010
@
text
@d31 1
a31 1
C       IN AN ARRAY YVAL(NPT) ON THE LINE PRINTER
d43 6
a48 6
C       DESCRIPTION:  THE RANGE BETWEEN MAXIMUM AND MINIMUM OF THE WHOLE
C                     ARRAY YVAL IS MAPPED ONTO ONE PRINTER PAGE, WHILE
C                     THE NPT SAMPLING POINTS ARE SPREAD ACROSS THE FULL
C                     WIDTH OF THE PAGE.  EACH OF THE NSET FUNCTIONS IS
C                     POINTED WITH A DIFFERENT SYMBOL, STARTING
C                     WITH '0', '1', ETC.
d151 1
a151 1
      RETURN
d235 1
a235 1
      RETURN
@


1.10
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.9
log
@HRI GPL License used
@
text
@a2 1
C++*************************************************************************
a6 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a30 1
C **************************************************************************
@


1.8
log
@cosmetic
@
text
@d2 1
d7 1
d9 1
d11 24
d41 1
@


1.7
log
@a
@
text
@d4 1
a4 1
C GRAPHS.FOR
a40 2


@


1.6
log
@rewritten & bugs fixed
@
text
@a41 1
CNO_SAVE
d43 1
d148 1
a148 1
CNO_SAVE
@


1.5
log
@*** empty log message ***
@
text
@d16 1
a16 1
C       GRAPHS(F,NPT,NSET)
d18 2
a19 2
C       THIS SUBROUTINE DISPLAYS NSET ONE-DIMENSIONAL FUNCTIONS STORED
C       IN AN ARRAY F(NPT) ON THE LINE PRINTER
d21 10
a30 5
C         F       FLOATING POINT ARRAY OF DIMENSION NSET*NPT CONTAINING
C                 NSET FUNCTIONS
C         NPT     DIMENSION OF A FUNCTION
C         NSET    NUMBER OF FUNCTIONS TO BE DISPLAYED ON A SINGLE
C                 GRAPH < OR = 10
d32 1
a32 1
C                     ARRAY F IS MAPPED ONTO ONE PRINTER PAGE, WHILE
d40 1
a40 1
      SUBROUTINE GRAPHS(F,NPT,NSET)
d42 1
d44 1
a44 3
      COMMON /UNITS/LUN,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT
      COMMON /MASTER/NSAMX,NROWX,IREC,NLABEL,IFORM,IMAMI,
     1              FMAX,FMIN,AV,SIG,IHISTO
d46 2
a47 3
      CHARACTER*1 IPLOT(128),ICHAR(10),ICH,IC1,IC2,IC3,POINT,PERIOD,
     1          MINUS,PLUS
      DIMENSION F(1),ISTORE(5)
d50 14
a63 2
      DATA IC1,IC2,IC3/' ','-','I'/
      DATA PERIOD,POINT,PLUS,MINUS/'.','"','+','-'/
d65 6
a70 6
      T  = F(1)
      B  = T
      KK = NSET*NPT
      DO  I = 1,KK
         IF(F(I).GT.T) T=F(I)
         IF(F(I).LT.B) B=F(I)
d72 18
a89 1
      S = 50./(T-B)
d91 36
a126 13
       F(I) = S*(F(I)-B)
      ENDDO 
      T1 = -S*B + .5
      IF (T1.LT.0.) T1 = T1-1.
      TIX = 32000.
      IF (T1.LT.TIX) TIX = T1
      IX = TIX
      DX = 127./FLOAT(NPT-1)
      IY = 50
4     ICH = IC1
      IF (IY.EQ.50.OR.IY.EQ.0.OR.IY.EQ.IX) ICH = IC2
      DO  I = 1,128
       IPLOT(I)   = ICH
d128 26
a153 11
      IPLOT(1)   = IC3
      IPLOT(128) = IC3
      X = 1.
      DO  I = 1,NPT
         K = I
         DO  J = 1,NSET
           IF(IFIX(F(K)+.5).EQ.IY) IPLOT(IFIX(X+.5)) = ICHAR(J)
         K = K+NPT
   	 ENDDO
      X = X+DX
      ENDDO
d155 1
a155 6
      WRITE(NDAT,8) IPLOT
8     FORMAT('   ',128A1)
      IF (IY .NE. 0) THEN
        IY = IY -1
        GOTO 4
      ENDIF
d157 3
a159 8
9	S=1./S
C      IF MAX=MIN DO NOT SCALE  
	IF(FMAX.LE.FMIN)GO TO 11
C*********SCALES HISTOGRAM************

	XO=-2.
	FMAXQ=FMAX/100.
	FMINQ=FMIN/100.
d161 4
a164 4
          IF(FMAXQ-FMINQ.GE.2.)GO TO 200
          XO=XO+1.
          FMAXQ=FMAXQ*10.
          FMINQ=FMINQ*10.
d167 9
a175 9
200	FJ=127./(FMAXQ-FMINQ)
   	IMINH=FMINQ
	IF (FLOAT(IMINH).LT.FMINQ) IMINH=FMINQ+1.
	FMINV=FLOAT(IMINH)
	IMAXH=FMAXQ
	FMAXV=FLOAT(IMAXH)
230	STEP=(FMAXV-FMINV)/4.
	DO  I=1,128
  	IPLOT(I)=IC1
d177 1
d179 6
a184 6
          BT=FMINV+FLOAT(I)*STEP
          J=INT((BT-FMINQ)*FJ)+1.5
          IF(J.GT.128)J=128
          IF(J.LT.1)J=1
          IPLOT(J)=POINT
          ISTORE(I+1)=J
d187 1
a187 1
	WRITE(NDAT,260)IPLOT
d189 5
a193 4
	FMAXV=FMAXV/(10.**XO)
	FMINV=FMINV/(10.**XO)+0.00001
	IF(FMINV.LT.0.)FMINV=FMINV-0.00002
	STEP=STEP/(10.**XO)
d195 26
a220 28
          FVALUE=FMINV+FLOAT(IA-1)*STEP
          FVALUE=FVALUE/100.
          DO 280 IB=1,9
            IC=IB-5
            IF (ISTORE(IA).LE.4)IC=IB-ISTORE(IA)
            IF (ISTORE(IA).GT.124)IC=IC-ISTORE(IA)+124
            IF (IB.EQ.5)GO TO 290
            IF (IB.EQ.1)GO TO 295
            IVALUE=FVALUE
            DO ID=1,10
              IF (IABS(IVALUE).EQ.ID-1)IPLOT(ISTORE(IA)+IC)=ICHAR(ID)
            ENDDO
            FVALUE =FVALUE-FLOAT(IVALUE)
            FVALUE =FVALUE*10.
            GO TO 280

290         IPLOT(ISTORE(IA)+IC)=PERIOD
            GO TO 280

295         IPLOT(ISTORE(IA)+IC)=PLUS
            IF (FVALUE.LT.0)IPLOT(ISTORE(IA)+IC)=MINUS
280       CONTINUE
	ENDDO
	WRITE(NDAT,260)IPLOT

C***************************************
11    DO I=1,KK
         F(I) = F(I)*S + B
d222 1
d224 1
a224 3
      WRITE(NDAT,13) B,T
13    FORMAT(/'   RANGE ',G12.4,' TO ',G12.4)

a226 1

@


1.4
log
@*** empty log message ***
@
text
@d53 1
a53 1
      DO 5 I = 1,KK
d56 1
a56 1
5     CONTINUE
d58 3
a60 2
      DO 3 I = 1,KK
3     F(I) = S*(F(I)-B)
d70 3
a72 2
      DO 6 I = 1,128
6     IPLOT(I)   = ICH
d76 1
a76 1
      DO 7 I = 1,NPT
d78 1
a78 1
         DO 12 J = 1,NSET
d80 4
a83 2
12       K = K+NPT
7     X = X+DX
d100 1
a100 1
	DO 150 IXO=1,4
d105 1
a105 1
150	CONTINUE
d114 4
a117 3
	DO 240 I=1,128
240	IPLOT(I)=IC1
	DO 250 I=0,4
d124 1
a124 1
250	CONTINUE
d132 1
a132 1
	DO 300 IA=1,5
d155 1
a155 1
300	CONTINUE
@


1.3
log
@removed SPOOL/IPRTT stuff (no longer useable)
@
text
@a36 1
      COMMON IPLOT(128)
d42 1
a42 1
      LOGICAL*1 IPLOT,ICHAR,ICH,IC1,IC2,IC3,POINT,PERIOD,
d44 1
a44 1
      DIMENSION F(1),ICHAR(10),ISTORE(5)
@


1.2
log
@removed SPOOL/IPRTT stuff (no longer useable)
@
text
@d106 1
a106 1
	IF(FLOAT(IMINH).LT.FMINQ)IMINH=FMINQ+1.
d133 4
a136 4
            IF(ISTORE(IA).LE.4)IC=IB-ISTORE(IA)
            IF(ISTORE(IA).GT.124)IC=IC-ISTORE(IA)+124
            IF(IB.EQ.5)GO TO 290
            IF(IB.EQ.1)GO TO 295
d138 5
a142 5
            DO 270 ID=1,10
              IF(IABS(IVALUE).EQ.ID-1)IPLOT(ISTORE(IA)+IC)=ICHAR(ID)
270         CONTINUE
            FVALUE=FVALUE-FLOAT(IVALUE)
            FVALUE=FVALUE*10.
d149 1
a149 1
            IF(FVALUE.LT.0)IPLOT(ISTORE(IA)+IC)=MINUS
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
C $$ GRAPHS.FOR
d16 1
a16 1
C $$ GRAPHS:  DISPLAY FUNCTIONS ON LINE PRINTER
a20 1
C       CALL GRAPHS(F,NPT,NSET)
a38 2
      LOGICAL*1 IPLOT,ICHAR,ICH,IC1,IC2,IC3,POINT,PERIOD,
     1          MINUS,PLUS
a39 1
      COMMON /IPRTT/IPRTT,NTRACE,NALPH
d43 2
d51 2
a52 2
      T = F(1)
      B = T
d62 1
a62 1
      IF(T1.LT.0.) T1 = T1-1.
d64 1
a64 1
      IF(T1.LT.TIX) TIX = T1
d69 1
a69 1
      IF(IY.EQ.50.OR.IY.EQ.0.OR.IY.EQ.IX) ICH = IC2
d71 2
a72 2
6     IPLOT(I) = ICH
      IPLOT(1) = IC3
d90 1
a90 1
C$$$ IF MAX=MIN DO NOT SCALE $$$
d155 4
a158 2
11	DO 10 I=1,KK
10    F(I) = F(I)*S + B
a160 2

      IF (IPRTT .EQ. 1)  CALL SPOOL(NDAT,IFCS,IDSW)
@
