head	1.15;
access;
symbols
	healthdept_2018:1.15
	pre_getangas:1.14
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.13
	pre_fftwrings:1.13
	pre_opfiles:1.13
	src:1.13
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.11
	prec_CA:1.11
	noindx:1.10
	Bproc:1.9
	oct21:1.6
	last77:1.4;
locks; strict;
comment	@c @;


1.15
date	2018.10.03.14.34.11;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.24.13.26.20;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.18.18.54.55;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.18.14.54.47;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.02.20.20.55.25;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.11.14.09.05;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2000.05.01.12.45.38;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.27.19.28.13;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.24.19.56.03;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.06.28.18.11.02;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	99.05.13.14.39.42;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	98.04.08.14.17.03;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	98.04.06.19.26.14;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	97.10.02.18.50.32;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	97.05.29.19.50.30;	author leith;	state Exp;
branches;
next	;


desc
@@


1.15
log
@email_health_dept
@
text
@
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C++************************************************************************
C
C   MYMODS.F
C
C   A SHELL FOR USER SUPLIED SUBROUTINES, INCLUDES A COMMENTED SAMPLE
C 
C--************************************************************************

	SUBROUTINE MYMODS(MAXMEM)

C       INCLUDE COMMONS WITH SPIDER SYSTEM INFORMATION      
	INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC' 
 
        CHARACTER(LEN=MAXNAM)   ::  FILNAM

        REAL, ALLOCATABLE, DIMENSION(:) ::  VOL1,VOL2

C       DEFINE IO UNITS, FOR IMAGE FILES USE IOUNITS 8...99 ONLY
	DATA            LUN1,LUN2/8,9/

C       FILE OPENING PART --------------------------------------------

C       OPEN THE INPUT FILE
C       NSAM - X-DIMENSION, NROW - Y-DIMENSION, NSLICE - Z-DIMENSION
C       'O' - INDICATES EXISTING FILE, .FALSE. IS FOURIER INPUT NOT OK
C       MAXIM > 0 - INDICATES THAT OPERATION WAORKS ON WHOLE STACKS
         
        MAXIM = 0
 	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,
     &              NSAM,NROW,NSLICE,MAXIM,'INPUT',.FALSE.,IRTFLG)

C       CHECK WHETHER THE FILE OPENED OK, IRTFLG<>0 INDICATES IT WAS NOT
	IF (IRTFLG .NE. 0)  GOTO 999

C       OPEN THE OUTPUT FILE, SAME DIMENSIONS AS INPUT FILE
C       'UNKNOWN' TELLS THE PROGRAM TO OVERWRITE ANY EXISTING FILE

        MAXIM = 0
 	CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',IFORM,
     &              NSAM,NROW,NSLICE,MAXIM,'OUTPUT',.FALSE.,IRTFLG)

C       CHECK WHETHER FILE OPENED OK, IRTFLG<>0 INDICATES IT WAS NOT
	IF (IRTFLG .NE. 0)  GOTO 999

C       MEMORY ALLOCATION PART ---------------------------------------

C       THIS OPERATION NEEDS TWO VOLUMES, EACH NSAM*NROW*NSLICE LARGE.
	MEMWANT = NSAM * NROW * NSLICE

        ALLOCATE (VOL1(MEMWANT),VOL2(MEMWANT), STAT=IRTFLG)

C       CHECK WHETHER MEMORY OK, IRTFLG<>0 INDICATES IT WAS NOT
        IF (IRTFLG .NE. 0) THEN
C          ERRT WILL PRINT ERROR MESSAGE AND STOP IF IN BATCH MODE
           CALL ERRT(46,'MYMODS, VOL1 & VOL2',NDUM)
           GO TO 999
        ENDIF

C       SPECIFIC PROCESSING PART -------------------------------------

C       SOLICIT FLOATING POINT NUMERICAL PARAMETERS USED BY USONE 
        CALL  RDPRM2(CW,SW,NOT_USED,'CENTRAL WEIGHT, SIDE WEIGHT')

C       CALL THE SUBROUTINE THAT WILL DO THE ACTUAL PROCESSING
        CALL USONE(VOL1,LUN1,VOL2,LUN2,NSAM,NROW,NSLICE,CW,SW)

C       CLEANUP ------------------------------------------------------

C       DEALLOCATE RUN-TIME MEMORY
        IF(ALLOCATED(VOL1)) DEALLOCATE(VOL1)
        IF(ALLOCATED(VOL2)) DEALLOCATE(VOL2)

C       CLOSE LOGICAL IO UNITS.
999     CLOSE(LUN1)
        CLOSE(LUN2)
        RETURN
	END




C       ----------------------------------------------------------


	SUBROUTINE  USONE(BIN,LUN1,BOU,LUN2,NSAM,NROW,NSLICE,CW,SW)

	DIMENSION  BIN(NSAM,NROW,NSLICE),BOU(NSAM,NROW,NSLICE)
 
C       THIS PROGRAM APPLIES 1D MOVING AVERAGE IN X-DIRECTION (NSAM)
C       THE RESULT IS "DIRECTIONAL" FILTRATION IN ONE DIMENTION

C       BOU(I,*,*) = (CW*BIN(I,*,*) + SW * (BIN(I-1,*,*) +
C                     BIN(I+1,*,*))) / (CW+SW+SW)

C       THIS PROGRAM WORKS FOR BOTH 2D AND 3D FILES.  THIS IS DUE TO 
C       THE WAY 3D FILES ARE ORGANIZED IN SPIDER - THEY HAVE NSLICE 
C       2D SLICES. A 2D FILE IS A 3D FILE WITH NSLICE=1.

C       READ INPUT VOLUME
        DO K=1,NSLICE
           DO J=1,NROW
              IREC=J+(K-1)*NROW
              CALL  REDLIN(LUN1,BIN(1,J,K),NSAM,IREC)
           ENDDO
        ENDDO


C       DEFINE CENTER OF THE VOLUME ACCORDING TO SPIDER CONVENTION, NOT
C       USED IN THIS PROGRAM, JUST AN EXAMPLE.
C	NXC = NSAM   / 2 + 1
C	NYC = NROW   / 2 + 1
C	NZC = NSLICE / 2 + 1

	Q = 1.0 / (CW + SW + SW)
C       DO THE PROCESSING

C       FOLLOWING LINE IS A COMPILER PARALLEL DIRECTIVE FOR OPEN-MP.
c$omp parallel do private(I,J,K)
	DO K=1,NSLICE
	   DO J=1,NROW
C            NEXT TWO LINES TAKE CARE OF BORDER EFFECT.  IF THE IMAGE 
C            IS NOT TO BE TREATED AS CIRCULARLY CLOSED, THEY SHOULD 
C            BE COMMENTED OUT.
	     BOU(1,J,K) = (CW * BIN(1,J,K) + SW * (BIN(NSAM,J,K)+
     &                     BIN(2,J,K))) * Q
	     BOU(NSAM,J,K) = (CW*BIN(NSAM,J,K) + SW * (BIN(NSAM-1,J,K)+
     &                       BIN(1,J,K)))*Q

C            HERE IT IS REQUIRED THAT NSAM IS AT LEAST 3.  IT IS 
C            NOWHERE CHECKED, BUT IT CAN BE EASILY ADDED.
	     DO I=2,NSAM-1
                BOU(I,J,K) = (CW * BIN(I,J,K) + SW * (BIN(I-1,J,K) +
     &                     BIN(I+1,J,K))) * Q
             ENDDO
          ENDDO
        ENDDO

C       WRITE OUTPUT VOLUME
        DO K=1,NSLICE
           DO J=1,NROW
              IREC = J + (K - 1) * NROW
              CALL  WRTLIN(LUN2,BOU(1,J,K),NSAM,IREC)
           ENDDO
        ENDDO

C       IO FILES WILL BE CLOSED IN THE CALLING PROGRAM 
        RETURN
	END
@


1.14
log
@GPL_2010
@
text
@d8 1
a8 1
C=* Email: spider@@wadsworth.org                                        *
@


1.13
log
@GPL
@
text
@a2 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d4 5
a8 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d10 1
a10 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d15 1
a15 1
C=* This program is distributed in the hope that it will be useful,    *
d17 1
a17 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a18 1
C=*                                                                    *
d20 1
a20 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.12
log
@GPL License added
@
text
@d1 175
@


1.11
log
@opfilec
@
text
@a0 149
C++************************************************************************
C
C   MYMODS.F
C
C   A SHELL FOR USER SUPLIED SUBROUTINES, INCLUDES A COMMENTED SAMPLE
C 
C--************************************************************************

	SUBROUTINE MYMODS(MAXMEM)

C       INCLUDE COMMONS WITH SPIDER SYSTEM INFORMATION      
	INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC' 
 
        CHARACTER(LEN=MAXNAM)   ::  FILNAM

        REAL, ALLOCATABLE, DIMENSION(:) ::  VOL1,VOL2

C       DEFINE IO UNITS, FOR IMAGE FILES USE IOUNITS 8...99 ONLY
	DATA            LUN1,LUN2/8,9/

C       FILE OPENING PART --------------------------------------------

C       OPEN THE INPUT FILE
C       NSAM - X-DIMENSION, NROW - Y-DIMENSION, NSLICE - Z-DIMENSION
C       'O' - INDICATES EXISTING FILE, .FALSE. IS FOURIER INPUT NOT OK
C       MAXIM > 0 - INDICATES THAT OPERATION WAORKS ON WHOLE STACKS
         
        MAXIM = 0
 	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,
     &              NSAM,NROW,NSLICE,MAXIM,'INPUT',.FALSE.,IRTFLG)

C       CHECK WHETHER THE FILE OPENED OK, IRTFLG<>0 INDICATES IT WAS NOT
	IF (IRTFLG .NE. 0)  GOTO 999

C       OPEN THE OUTPUT FILE, SAME DIMENSIONS AS INPUT FILE
C       'UNKNOWN' TELLS THE PROGRAM TO OVERWRITE ANY EXISTING FILE

        MAXIM = 0
 	CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',IFORM,
     &              NSAM,NROW,NSLICE,MAXIM,'OUTPUT',.FALSE.,IRTFLG)

C       CHECK WHETHER FILE OPENED OK, IRTFLG<>0 INDICATES IT WAS NOT
	IF (IRTFLG .NE. 0)  GOTO 999

C       MEMORY ALLOCATION PART ---------------------------------------

C       THIS OPERATION NEEDS TWO VOLUMES, EACH NSAM*NROW*NSLICE LARGE.
	MEMWANT = NSAM * NROW * NSLICE

        ALLOCATE (VOL1(MEMWANT),VOL2(MEMWANT), STAT=IRTFLG)

C       CHECK WHETHER MEMORY OK, IRTFLG<>0 INDICATES IT WAS NOT
        IF (IRTFLG .NE. 0) THEN
C          ERRT WILL PRINT ERROR MESSAGE AND STOP IF IN BATCH MODE
           CALL ERRT(46,'MYMODS, VOL1 & VOL2',NDUM)
           GO TO 999
        ENDIF

C       SPECIFIC PROCESSING PART -------------------------------------

C       SOLICIT FLOATING POINT NUMERICAL PARAMETERS USED BY USONE 
        CALL  RDPRM2(CW,SW,NOT_USED,'CENTRAL WEIGHT, SIDE WEIGHT')

C       CALL THE SUBROUTINE THAT WILL DO THE ACTUAL PROCESSING
        CALL USONE(VOL1,LUN1,VOL2,LUN2,NSAM,NROW,NSLICE,CW,SW)

C       CLEANUP ------------------------------------------------------

C       DEALLOCATE RUN-TIME MEMORY
        IF(ALLOCATED(VOL1)) DEALLOCATE(VOL1)
        IF(ALLOCATED(VOL2)) DEALLOCATE(VOL2)

C       CLOSE LOGICAL IO UNITS.
999     CLOSE(LUN1)
        CLOSE(LUN2)
        RETURN
	END




C       ----------------------------------------------------------


	SUBROUTINE  USONE(BIN,LUN1,BOU,LUN2,NSAM,NROW,NSLICE,CW,SW)

	DIMENSION  BIN(NSAM,NROW,NSLICE),BOU(NSAM,NROW,NSLICE)
 
C       THIS PROGRAM APPLIES 1D MOVING AVERAGE IN X-DIRECTION (NSAM)
C       THE RESULT IS "DIRECTIONAL" FILTRATION IN ONE DIMENTION

C       BOU(I,*,*) = (CW*BIN(I,*,*) + SW * (BIN(I-1,*,*) +
C                     BIN(I+1,*,*))) / (CW+SW+SW)

C       THIS PROGRAM WORKS FOR BOTH 2D AND 3D FILES.  THIS IS DUE TO 
C       THE WAY 3D FILES ARE ORGANIZED IN SPIDER - THEY HAVE NSLICE 
C       2D SLICES. A 2D FILE IS A 3D FILE WITH NSLICE=1.

C       READ INPUT VOLUME
        DO K=1,NSLICE
           DO J=1,NROW
              IREC=J+(K-1)*NROW
              CALL  REDLIN(LUN1,BIN(1,J,K),NSAM,IREC)
           ENDDO
        ENDDO


C       DEFINE CENTER OF THE VOLUME ACCORDING TO SPIDER CONVENTION, NOT
C       USED IN THIS PROGRAM, JUST AN EXAMPLE.
C	NXC = NSAM   / 2 + 1
C	NYC = NROW   / 2 + 1
C	NZC = NSLICE / 2 + 1

	Q = 1.0 / (CW + SW + SW)
C       DO THE PROCESSING

C       FOLLOWING LINE IS A COMPILER PARALLEL DIRECTIVE FOR OPEN-MP.
c$omp parallel do private(I,J,K)
	DO K=1,NSLICE
	   DO J=1,NROW
C            NEXT TWO LINES TAKE CARE OF BORDER EFFECT.  IF THE IMAGE 
C            IS NOT TO BE TREATED AS CIRCULARLY CLOSED, THEY SHOULD 
C            BE COMMENTED OUT.
	     BOU(1,J,K) = (CW * BIN(1,J,K) + SW * (BIN(NSAM,J,K)+
     &                     BIN(2,J,K))) * Q
	     BOU(NSAM,J,K) = (CW*BIN(NSAM,J,K) + SW * (BIN(NSAM-1,J,K)+
     &                       BIN(1,J,K)))*Q

C            HERE IT IS REQUIRED THAT NSAM IS AT LEAST 3.  IT IS 
C            NOWHERE CHECKED, BUT IT CAN BE EASILY ADDED.
	     DO I=2,NSAM-1
                BOU(I,J,K) = (CW * BIN(I,J,K) + SW * (BIN(I-1,J,K) +
     &                     BIN(I+1,J,K))) * Q
             ENDDO
          ENDDO
        ENDDO

C       WRITE OUTPUT VOLUME
        DO K=1,NSLICE
           DO J=1,NROW
              IREC = J + (K - 1) * NROW
              CALL  WRTLIN(LUN2,BOU(1,J,K),NSAM,IREC)
           ENDDO
        ENDDO

C       IO FILES WILL BE CLOSED IN THE CALLING PROGRAM 
        RETURN
	END
@


1.10
log
@nloop,iloop_removed
@
text
@d13 1
d15 2
a17 1
        CHARACTER(LEN=81)               :: FILNAM
d30 2
a31 2
 	CALL OPFILE(.TRUE.,FILNAM,LUN1,'O',IFORM,NSAM,NROW,NSLICE,MAXIM,
     &               'INPUT',.FALSE.,IRTFLG)
d40 2
a41 2
 	CALL OPFILE(.TRUE.,FILNAM,LUN2,'U',IFORM,NSAM,NROW,NSLICE,MAXIM,
     &               'OUTPUT',.FALSE.,IRTFLG)
@


1.9
log
@used allocate now
@
text
@d61 1
a61 1
        CALL  RDPRM2(CW,SW,NLOOP,ILOOP,'CENTRAL WEIGHT, SIDE WEIGHT')
@


1.8
log
@comment on loc of common
@
text
@d11 1
a11 1
C       INCLUDE COMMONS WITH SYSTEM INFORMATION      
d14 2
a15 2
C       ACTUAL LENGTH OF UNLABELED COMMON (MAXMEM) IS SET IN SPIDER.F
	COMMON          BUF(1) 
d17 1
a17 7
        INCLUDE 'F90ALLOC.INC'
        REAL, DIMENSION(:), POINTER :: IPQ
        REAL, DIMENSION(:), POINTER :: Q

	LOGICAL         RUNTIME 
	CHARACTER *81   FILNAM

d41 1
a41 1
C       CHECK WHETHER THE FILE OPENED OK, IRTFLG<>0 INDICATES IT WAS NOT
d47 3
a49 10
	K1      = 1
	K2      = K1 + NSAM * NROW * NSLICE
	MEMWANT = K2 + NSAM * NROW * NSLICE

C       CHECK TO SEE IF SUFFICIENT MEMORY AVAILABLE IN UNLABELED COMMON
C       IF SO RETURN ADDRESS OF BUF IN IPQ FOR ARRAY Q
C       IF NOT, USE RUNTIME ALLOCATION FOR ARRAY Q
	CALL CHKMEM(MEMWANT,BUF,MAXMEM, RUNTIME,IPQ,IRTFLG)
C       CHECK FOR FAILURE IN CHKMEM
	IF (IRTFLG .NE. 0) GOTO  999
d51 6
a56 1
        Q = >IPQ
d64 1
a64 1
        CALL  USONE(Q(K1),LUN1,Q(K2),LUN2,NSAM,NROW,NSLICE,CW,SW)
d68 3
a70 2
C       DEALLOCATE MEMORY
        IF (RUNTIME) CALL ALLOCIT(0,RUNTIME,IPQ,'MYMODS',IRTFLG) 
d72 1
d116 1
a116 1
C       FOLLOWING LINE IS A COMPILER PARALLEL DIRECTIVE FOR SGI MP.
d145 1
a145 1
C       FILES WILL BE CLOSED IN THE CALLING PROGRAM 
@


1.7
log
@SP_F90 removed
@
text
@d14 1
a14 1
C       ACTUAL LENGTH OF UNLABELED COMMON (MAXMEM) IS SET IN INILUN.F
@


1.6
log
@corrected
@
text
@a16 1
#ifdef SP_F90
d20 1
a20 4
#else
	DIMENSION       Q(1)
	POINTER         (IPQ,Q) 
#endif
d64 2
a65 3
#ifdef SP_F90
         Q = >IPQ
#endif
@


1.5
log
@updated
@
text
@d128 1
a128 2
C$DOACROSS LOCAL(I,J,K)

d152 1
a152 1
              CALL  REDLIN(LUN2,BOU(1,J,K),NSAM,IREC)
@


1.4
log
@*** empty log message ***
@
text
@a29 3
C       NO_SAVE SIGNALS Makefile TO USE NON-STATIC COMPILATION OPTION
CNO_SAVE

d35 4
a38 2

 	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,IDUMMY,
d47 2
a48 1
 	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM,NROW,NSLICE,IDUMMY,
d65 2
a66 5
	IF (IRTFLG .NE. 0) THEN 
C          FAILED TO HAVE OR ALLOCATE SUFFICIENT MEMORY
	   CALL ERRT(6,'MYMODS',NE)
	   GOTO  999
	ENDIF
a97 1
CNO_SAVE
@


1.3
log
@f90 alloc
@
text
@a89 2

        RETURN
@


1.2
log
@used opfil instead of openfil (that was an error)
@
text
@d17 5
d24 1
d71 3
@


1.1
log
@Initial revision
@
text
@a20 1
	CHARACTER *1    NULL
a26 2
	NULL = CHAR(0)

a27 3
C       ASK FOR THE NAME OF INPUT FILE
5	CALL FILERD(FILNAM,NLET,NULL,'INPUT',IRTFLG)
	IF (IRTFLG .EQ. -1) RETURN
d31 4
a34 22
C       'O' - INDICATES EXISTING FILE
	CALL OPENFIL(BUF,FILNAM,LUN1,NSAM,NROW,NSLICE,NSTACK,
     &               'O',NF)

C       CHECK WHETHER THE FILE OPENED OK, NF=1 INDICATES IT WAS NOT
	IF (NF .EQ. 1)  GOTO 999

C       VARIABLE 'IFORM 'IS LOCATED IN COMMON /????/ AND ASSIGNED
C       IN OPENFB.  IT TELLS WHAT IS THE FORMAT OF OPENED FILE.
C       IFORM=3  - REAL 3D FILE
C       IFORM=1  - REAL 1D FILE (NSLICE=1)
C       IFORM<0  - FOURIER FILES
 
	IF (IFORM .LT. 0)  THEN
C          THIS COMMAND WORKS ONLY FOR REAL INPUT FILES.
           CALL ERRT(4,'MYMODS',NE)
	   GOTO 999
        ENDIF

C       ASK FOR NAME OF OUTPUT FILE
	CALL FILERD(FILNAM,NLET,NULL,'OUTPUT',IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 999
d36 4
a39 1
C       OPEN THE OUTPUT FILE, SAME DIMENSIONS AS INPUT
d41 3
a43 2
	CALL OPENFIL(BUF,FILNAM,LUN2,NSAM,NROW,NSLICE,NSTACK,
     &               'U',NF)
d45 2
a46 2
C       CHECK WHETHER THE FILE OPENED OK, NF=1 INDICATES IT WAS NOT
	IF (NF .EQ. 1)  GOTO 999
@
