head	1.38;
access;
symbols
	pre_mrcs:1.37
	healthdept_2018:1.37
	pre_getangas:1.23
	GPL2010:1.23
	pre_GPL2010:1.22
	pre_var_equation:1.22
	pre_fftwrings:1.22
	pre_opfiles:1.22
	src:1.22
	best-code:1.22
	x-named-regs:1.21
	x:1.21
	v13-00:1.21
	pre_GPL:1.19
	prec_CA:1.19
	noindx:1.18
	Bproc:1.16
	oct21:1.15
	last77:1.13;
locks; strict;
comment	@c @;


1.38
date	2019.11.04.17.35.09;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2018.10.03.14.34.10;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2014.01.27.16.24.37;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2014.01.12.19.53.49;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2013.09.28.12.22.22;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2012.10.26.15.37.59;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2012.10.05.14.14.54;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2012.10.03.11.59.05;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2012.03.30.12.44.47;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2012.01.31.17.08.33;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2012.01.25.14.18.12;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2012.01.17.18.58.48;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2012.01.17.16.17.32;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2012.01.12.20.14.41;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2012.01.12.19.15.52;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2010.06.24.13.26.11;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2005.12.19.18.16.33;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2005.10.17.20.26.55;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2005.10.17.18.18.36;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2003.05.08.20.33.39;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2002.03.11.14.08.13;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2001.08.06.12.40.30;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2000.03.20.18.29.25;	author pawel;	state Exp;
branches;
next	1.15;

1.15
date	99.08.09.14.47.21;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	99.07.07.20.59.02;	author pawel;	state Exp;
branches;
next	1.13;

1.13
date	98.01.30.19.35.06;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	98.01.26.22.17.16;	author pawel;	state Exp;
branches;
next	1.11;

1.11
date	97.04.17.15.54.29;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.04.16.14.11.38;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	97.02.12.14.25.07;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	97.01.06.17.00.48;	author mladjadj;	state Exp;
branches;
next	1.7;

1.7
date	97.01.06.16.11.09;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.09.17.17.35.53;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	95.10.05.20.22.29;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.02.13.19.18.29;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	94.09.26.13.44.18;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.07.12;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.10;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.38
log
@block_pattern
@
text
@
C++*********************************************************************
C
C MODEL.F   REWRITTEN                              APR 97 ArDean Leith
C           RDPRAF REMOVED                         DEC 05 ArDean Leith 
C           G2..                                   JAN 12 ArDean Leith 
C           C RADIUS BUG                           JAN 12 ArDean Leith 
C           ANS(1:1) TEST BUG                      AUG 19 ArDean Leith
C           BLOCK PATTERN                          SEP 19 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2019  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   MODEL(LUN1,NX,NY)
C
C   PURPOSE:  PREPARES TEST PICTURES
C
C   PARAMETERS:
C        LUN1        OUTPUT UNIT NUMBER OF FILE
C        NX,NY       DIMENSIONS OF FILE
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

	SUBROUTINE MODEL(LUN1,NX,NY)

        IMPLICIT NONE

	INCLUDE 'CMBLOCK.INC'

        INTEGER            :: LUN1,NX,NY,NZ

	INTEGER, PARAMETER :: MAXSIN = 50
	INTEGER            :: NCX(MAXSIN),NCY(MAXSIN)
	REAL               :: CX(MAXSIN)
	REAL               :: PH(MAXSIN),FWA(4)
	REAL               :: A0(NX)
	REAL               :: SCF, FI,RAD2,ANX,ANY,PHASE,RAD,VAL
        
        REAL               :: BACK,NOT_USED,FI2,DX,DY,SX,SY
        REAL               :: RANN,SD,EEE,SYSQ,SXSQ,GNM,TNM,XM

        INTEGER            :: NC,J,I,K,IXCEN,IYCEN,NS,NORDER,NE
	INTEGER            :: IRTFLG,NVAL,NXD2,NYD2
	CHARACTER(LEN=1)   :: GA
	CHARACTER(LEN=2)   :: ANS
	CHARACTER(LEN=1)   :: NULL = CHAR(0)

	REAL, PARAMETER    :: QUADPI = 3.1415926535897932
	REAL, PARAMETER    :: TWOPI  = 2 * QUADPI

	IF (COPT == 'I' .OR. VERBOSE) WRITE(NOUT,100)
 100    FORMAT(
     &      ' .MENU: B   -- BLANK, CONSTANT DENSITY IMAGE'/
     &      '        C   -- FILLED CIRCLE (FOR MASKING) '/
     &      '        G   -- GAUSSIAN CIRCLE/ELLIPSE (NOT FOR MASKING)'/
     &      '        G1  -- 1ST ORDER GAUSSIAN CIRCLE/ELLIPSE (0...1)'/
     &      '        G2  -- 2ND ORDER GAUSSIAN CIRCLE/ELLIPSE (0...1)'/
     &      '        G3  -- 3RD ORDER GAUSSIAN CIRCLE/ELLIPSE (0...1)'/
     &      '        P   -- BLOCK PATTERN'/
     &      '        R   -- RANDOM DENSITY PATTERN'/
     &      '        S   -- SINE WAVES'/
     &      '        T   -- TWO SINE WAVES'/
     &      '        W   -- DENSITY WEDGE'/)

1010  CALL RDPRMC(ANS,NC,.TRUE.,
     &          'OPTION (B/C/CM/G/G1/G2/G3/R/S/T/W)',NULL,IRTFLG)
      IF (IRTFLG .NE. 0) RETURN

      IF (ANS == 'B') THEN
C       BLANK IMAGE --------------------------------------------- BLANK

        BACK = 1.0
        CALL RDPRM1S(BACK,NOT_USED,'BACKGROUND CONSTANT',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        CALL BLANK(LUN1,NX,NY,1,BACK)

      ELSEIF (ANS == 'P') THEN
C       BLOCKS -----------------------------------------  BLOCK PATTERN

        NXD2 = NX / 2
        NYD2 = NY / 2

        DO J = 1,NY
           DO I = 1,NX
	     IF     (I <= NXD2 .AND. J <= NYD2) THEN
                A0(I) = 1.0
	     ELSEIF (I  > NXD2 .AND. J <= NYD2) THEN
                A0(I) = 2.0
	     ELSEIF (I <= NXD2 .AND. J  > NYD2) THEN
                A0(I) = 4.0
	     ELSEIF (I  > NXD2 .AND. J  > NYD2) THEN
                A0(I) = 3.0
	     ENDIF
           ENDDO
           CALL WRTLIN(LUN1,A0,NX,J)
        ENDDO
C

      ELSEIF (ANS(1:1)  ==  'C' ) THEN
C       CIRCLE ------------------------------------------------- CIRCLE 

        RAD = MIN(NX,NY) / 2.0  - 3
        CALL RDPRM1S(RAD,NOT_USED,
     &               'RADIUS (FLOATING POINT)',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        RAD2  = RAD**2
        SCF   = 2.0 / FLOAT(NY+NX)
        IXCEN = NX  / 2+1
        IYCEN = NY  / 2+1

        VAL   = 1.0

	DO I=1,NY
           FI2 = (FLOAT(I-IYCEN))**2

           DO J=1,NX
             A0(J) = 0.0
             IF (FI2 + FLOAT(J-IXCEN)**2 <= RAD2) A0(J) = VAL
           ENDDO 

           CALL WRTLIN(LUN1,A0,NX,I)
        ENDDO

      ELSEIF (ANS(1:1) == 'W') THEN
C       WEDGE --------------------------------------------------- WEDGE

        SCF = 2.0 / FLOAT(NY+NX)

	DO I=1,NY
            FI = FLOAT(I) * SCF
            DO J = 1,NX
               A0(J) = FI + SCF * FLOAT(J)
            ENDDO

           CALL WRTLIN(LUN1,A0,NX,I)
        ENDDO


      ELSEIF (ANS(1:1)  ==  'G') THEN
C       GAUSSIAN   ------------------------------------------- GAUSSIAN

        DX = (NX/2) + 1
        DY = (NY/2) + 1
	CALL RDPRM2S(DX,DY,NOT_USED,
     &    'CENTER COORDINATES X,Y (or <CR> FOR IMAGE CENTER)',
     &    IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        SX = 1
        SY = 1
	CALL RDPRM2S(SX,SY,NOT_USED,
     &               'CHARACTARISTIC RADII IN X & Y',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

	IF (SX <= 0.0 .OR. SY <= 0.0)  THEN
	   CALL ERRT(101,'RADII MUST BE > 0',NE)
	   RETURN
	ENDIF

        WRITE(NOUT,90) DX,DY, SX,SY
90      FORMAT('  CENTER: (',G9.2,',',G9.2,')    STD:',G9.2,',',G9.2) 

C       SET THE ORDER OF SUPERGAUSSIAN 
        NORDER = 1
        IF (ANS(2:2)  ==  '2') NORDER = 2
        IF (ANS(2:2)  ==  '3') NORDER = 3

	GNM = 1.0 / SX / SY / 2.0 / QUADPI
        IF (NC > 1) GNM = 1.0  ! G? not G

	TNM   = ALOG(1.0 / TINY(GNM))
	SXSQ  = SX * SX
	SYSQ  = SY * SY

        DO I = 1,NY
           DO K = 1,NX
	      EEE = 0.5 * ((K-DX)**2 / SXSQ +
     &                     (I-DY)**2 / SYSQ)
	      IF (EEE >= TNM)  THEN
	         A0(K) = 0.0
	      ELSE
	         EEE   = 0.5 * (2*EEE)**NORDER
                 A0(K) = GNM * EXP(-EEE)
	      ENDIF
           ENDDO
           CALL WRTLIN(LUN1,A0,NX,I)
        ENDDO
C
      ELSEIF (ANS(1:1)  == 'R') THEN
C       PUT RANDOM NUMBERS IN THE IMAGE ---------------------- RANDOM

        CALL RDPRMC(GA,NC,.TRUE.,'GAUSSIAN DISTRIBUTED? (Y/N)',
     &             NULL,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        IF (GA == 'Y') THEN
           XM = 1
           SD = 1
           CALL RDPRM2S(XM,SD,NOT_USED,
     &        'MEAN AND STANDARD DEVIATION OF GAUSSIAN DIST.',IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
        ENDIF

        DO I = 1,NY
           IF (GA == 'Y') THEN
              DO K = 1,NX
                A0(K) = RANN(XM,SD)
              ENDDO
           ELSE
	      CALL RANDOM_NUMBER(HARVEST=A0)
           ENDIF
           CALL WRTLIN(LUN1,A0,NX,I)
        ENDDO

      ELSEIF (ANS(1:1) == 'S' .OR. ANS(1:1)  ==  'T') THEN

C       PUT SINE WAVES OF INTENSITY IN THE IMAGE ----------------- SINE
        IF (ANS(1:1) == 'T') THEN
C          ONLY ONE WAVE IS WANTED
           NS     = 1
           CX(1)  = 1.
           NCX(1) = 2
           NCY(1) = 2
           PH(1)  = 0.0

        ELSEIF (ANS(1:1) == 'S') THEN

C         FIND NUMBER OF SINE WAVES WANTED IN THE IMAGE 
          NS = 3
2         CALL RDPRI1S(NS,NOT_USED,'NUMBER OF SINE WAVES',IRTFLG)

          IF (NS > MAXSIN) THEN
             WRITE(NOUT,251) MAXSIN
251          FORMAT(' *** RESTRICTED TO',I3,' SINE WAVES')
             NS = MAXSIN
          ENDIF

          DO I = 1,NS
9006        IRTFLG = 0
            CALL RDPRA('AMPLITUDE, PHASE, SPATIAL FREQ. IN (X,Y)',
     &                 4,0,.FALSE.,FWA,NVAL,IRTFLG)
            IF (IRTFLG  .NE.  0) RETURN

            CX(I) = FWA(1)
            PH(I) = FWA(2)
            ANX   = FWA(3)
            ANY   = FWA(4)
	    
                           NCX(I) = ANX+0.5
            IF (ANX < 0.0) NCX(I) = ANX-0.5
                           NCY(I) = ANY+0.5
            IF (ANY < 0.0) NCY(I) = ANY-0.5

            WRITE(NOUT,9008)I,CX(I),PH(I),NCX(I),NCY(I)
9008        FORMAT(1X,I5,2F8.2,2I6)

            PH(I) = PH(I) * TWOPI / 360.0
          ENDDO
        ENDIF

C       PLACE SINE WAVE(S) OF INTENSITY IN THE IMAGE
        DO I=1,NY

           PHASE = FLOAT(I-1) * TWOPI / FLOAT(NY)

           DO J=1,NX
              A0(J) = 0.0
              DO K  = 1,NS
                 A0(J)= CX(K) * SIN(FLOAT(J-1) * TWOPI * 
     &                  FLOAT(NCX(K)) / FLOAT(NX) +
     &                  PHASE * FLOAT(NCY(K)) + PH(K)) + A0(J)
              ENDDO
           ENDDO
           CALL WRTLIN(LUN1,A0,NX,I)
         ENDDO
      ENDIF

      END
@


1.37
log
@email_health_dept
@
text
@d4 6
a9 4
C MODEL.F   REWRITTEN                            APR 97 ARDEAN LEITH
C           RDPRAF REMOVED                       DEC 05 ARDEAN LEITH 
C           G2..                                 JAN 12 ARDEAN LEITH 
C           C RADIUS BUG                         JAN 12 ARDEAN LEITH 
d15 1
a15 1
C=* Copyright 1985-2014  Health Research Inc.,                         *
d46 2
d57 4
a60 1
	REAL               :: SCF, FI
d62 2
a63 1
	INTEGER            :: IRTFLG,NVAL
d79 1
d98 21
d141 1
a141 1
          ENDDO 
d143 1
a143 1
          CALL WRTLIN(LUN1,A0,NX,I)
a145 1

d183 1
a183 1
90      FORMAT('  CENTER: (',G8.2,',',G8.2,')    STD:',G8.2,',',G8.2) 
d237 1
a237 1
      ELSEIF (ANS == 'S' .OR. ANS  ==  'T') THEN
@


1.36
log
@*** empty log message ***
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.35
log
@enter
@
text
@d13 1
a13 1
C=* Copyright 1985-2012  Health Research Inc.,                         *
d77 1
a77 1
     &          'OPTION (B/C/CM/G/G2/G3/R/S/T/W)',NULL,IRTFLG)
d154 1
a154 1
90      FORMAT(' CENTER:',G8.2,',',G8.2 '   STD:',G8.2,',',G8.2) 
@


1.34
log
@xtra spaces in output removed
@
text
@d77 1
a77 1
     &          'ENTER OPTION (B/C/CM/G/G2/G3/R/S/T/W)',NULL,IRTFLG)
@


1.33
log
@removed unneccessary 'CM' as already 1.0 inside circle
@
text
@d138 1
a138 1
     &    ' CENTER COORDINATES X,Y (or <CR> FOR IMAGE CENTER)',
d154 1
a154 1
90      FORMAT('  CENTER:',G8.2,',',G8.2 '   STD:',G8.2,',',G8.2) 
@


1.32
log
@clarified gaussian radius...
@
text
@a7 1
C           CM                                   OCT 12 ARDEAN LEITH 
d66 1
a66 2
     &      '        C   -- FILLED CIRCLE'/
     &      '        CM  -- CIRCULAR MASK'/
d103 1
a103 2
        VAL   = 2.0
        IF (ANS(2:2) == 'M') VAL   = 1.0
@


1.31
log
@CM option
@
text
@d69 1
a69 1
     &      '        G   -- GAUSSIAN CIRCLE/ELLIPSE'/
d148 1
a148 1
     &               'RADII IN X,Y,Z ( = STD. DEV.)',IRTFLG)
d156 1
a156 1
        WRITE(NOUT,90) DX,DY,SX,SY
d165 1
a165 1
        IF (NC > 1) GNM = 1.0
d167 1
a167 1
	TNM = ALOG(1.0 / TINY(GNM))
@


1.30
log
@IF (COPT == 'I' for menu
@
text
@d8 1
d68 1
d79 1
a79 1
     &          'ENTER OPTION (B/C/G/G2/G3/R/S/T/W)',NULL,IRTFLG)
d105 3
d113 1
a113 1
             IF (FI2 + FLOAT(J-IXCEN)**2 <= RAD2) A0(J) = 1.0
d120 1
a120 1
      ELSEIF (ANS(1:1)  ==  'W') THEN
@


1.29
log
@FI = FLOAT(I) * SCF  wedge density bug fixec
@
text
@d63 2
a64 2
	WRITE(NOUT,100)
 100  FORMAT(
@


1.28
log
@FLOAT(J-IXCEN)**2 <= RAD2 bug (inconsistent)
@
text
@d53 1
d99 3
a101 3
        SCF   = 2.0/FLOAT(NY+NX)
        IXCEN = NX/2+1
        IYCEN = NY/2+1
d118 1
a118 1
        SCF = 2.0/FLOAT(NY+NX)
d121 1
a121 1
            FI = FLOAT(I)*SC
d123 1
a123 1
               A0(J) = FI+ SCF * FLOAT(J)
@


1.27
log
@typos
@
text
@d7 1
d107 1
a107 1
             IF (FI2 + FLOAT(J-IXCEN)**2 < RAD2) A0(J) = 1.0
@


1.26
log
@*** empty log message ***
@
text
@d75 1
a75 1
                'ENTER OPTION (B/C/G/G2/G3/R/S/T/W)',NULL,IRTFLG)
d183 1
a183 1
        IF (IRTFLG .NE. 0) TETURN
d190 1
a190 1
           IF (IRTFLG .NE. 0) TETURN
@


1.25
log
@*** empty log message ***
@
text
@d74 2
a75 1
1010  CALL RDPRMC(ANS,NC,.TRUE.,'ENTER B/C/G/G2/G3/R/S/T/W',NULL,IRTFLG)
d183 1
a183 1
        IF (IRTFLG .NE. 0) GOTO 1010
d190 1
@


1.24
log
@prompts improved, rewrite
@
text
@d140 1
a140 1
     &               'STANDARD DEVIATIONS IN X,Y',IRTFLG)
d144 1
a144 1
	   CALL ERRT(101,'STD. DEV. MUST BE > 0',NE)
@


1.23
log
@GPL_2010
@
text
@d4 1
a4 1
C MODEL.FOR                                      REWRITTEN APRIL 97 al
d6 1
d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d30 1
a30 1
C   MODEL(LUN1,NSAM,NROW)
d35 2
a36 2
C        LUN1        LOGICAL UNIT NUMBER OF FILE
C        NSAM,NROW   DIMENSIONS OF FILE
d41 2
a42 4
	SUBROUTINE MODEL(LUN1,NSAM,NROW)
#ifdef SP_NT
	use dfport
#endif
d45 1
a45 9
	COMMON NX(20),NY(20),CX(20)

	INTEGER    IRTFLG,NVAL
	DIMENSION  PH(20),FWA(4)
	DIMENSION  A0(NSAM)
	PARAMETER  (QUADPI = 3.1415926535897932)
	PARAMETER  (TWOPI=2*QUADPI)

	CHARACTER    ANS,NULL,GA
d47 10
a56 1
	DATA  MAXSIN/20/
d58 2
a59 1
	NULL = CHAR(0)
d63 10
a72 7
     &      ' .MENU: (B)LANK    -- CONSTANT DENSITY IMAGE'/
     &      '        (C)IRCLE   -- FILLED CIRCLE'/
     &      '        (G)AUSSIAN -- GAUSSIAN FUNCTION'/
     &      '        (R)ANDOM   -- RANDOM STATISTICS'/
     &      '        (S)INE     -- SET OF SINE WAVES'/
     &      '        (T)EST     -- 2D SINE WAVE'/
     &      '        (W)EDGE    -- DENSITY WEDGE'/)
d74 1
a74 1
1010  CALL RDPRMC(ANS,NC,.TRUE.,'B/C/G/R/S/T/W',NULL,IRTFLG)
d77 39
a115 12
      IF (ANS .EQ. 'B') THEN
C       BLANK -------------------------------------------------- BLANK
        CALL RDPRM(BACK,NOT_USED,'BACKGROUND CONSTANT')

        CALL BLANK(LUN1,NSAM,NROW,1,BACK)

      ELSEIF (ANS .EQ. 'C' .OR. ANS .EQ. 'W') THEN
C       CIRCLE OR WEDGE ------------------------------- CIRCLE OR WEDGE
        IF (ANS .EQ. 'C') THEN
           CALL RDPRM(RAD,NOT_USED,'RADIUS (FLOATING POINT)')
           RAD2 = RAD**2
        ENDIF
d117 3
a119 13
        SCF = 2.0/FLOAT(NROW+NSAM)
	DO I=1,NROW
          IF (ANS .EQ. 'C') THEN
C           CIRCLE WANTED
            FI2 = (FLOAT(I-NROW/2-1))**2
            DO  J=1,NSAM
               A0(J) = 0.0
               IF (FI2+FLOAT(J-NSAM/2-1)**2.LT.RAD2) A0(J) = 1.0
            ENDDO 
          ELSE
C           WEDGE WANTED
            FI = FLOAT(I)*SCF
            DO  J = 1,NSAM
d122 2
a123 3
          ENDIF
C         SEND RECORD TO FILE
          CALL WRTLIN(LUN1,A0,NSAM,I)
d126 20
a145 7
      ELSEIF (ANS .EQ. 'G') THEN
C       GAUSSIAN   ------------------------------------------ GAUSSIAN
	CALL RDPRM2(DX,DY,NOT_USED,'COORDINATES OF THE CENTER')
	CALL RDPRM2(SX,SY,NOT_USED,'STD. DEVIATIONS X,Y')
	IF(SX.LE.0.0.OR.SY.LE.0.0)  THEN
	  CALL ERRT(31,'MO',NE)
	  RETURN
d147 28
a174 14
	GNM=1.0/SX/SY/2/QUADPI
	TNM=ALOG(1.0/TINY(GNM))
	SX=SX*SX
	SY=SY*SY
        DO I = 1,NROW
          DO K = 1,NSAM
	       EEE=0.5*((K-DX)**2/SX+(I-DY)**2/SY)
	       IF (EEE.GE.TNM)  THEN
	          A0(K)=0.0
	       ELSE
                  A0(K)=GNM*EXP(-EEE)
	       ENDIF
          ENDDO
          CALL WRTLIN(LUN1,A0,NSAM,I)
d177 12
a188 9
      ELSEIF (ANS .EQ. 'R') THEN
C       PUT RANDOM NUMBERS IN THE IMAGE ------------------------- 
        CALL RDPRMC(GA,NC,.TRUE.,'GAUSSIAN DISTRIBUTION? (Y/N)',
     &             NULL,IRT)
        IF (IRT .NE. 0) GOTO 1010

        IF (GA .EQ. 'Y') THEN
          CALL  RDPRM2(XM,SD,NOT_USED,
     &        'MEAN AND STANDARD DEVIATION OF GAUSSIAN DIST.')
d190 10
a199 9
        DO I = 1,NROW
         IF (GA.EQ.'Y') THEN
          DO  K = 1,NSAM
               A0(K) = RANN(XM,SD)
          ENDDO
         ELSE
	   CALL  RANDOM_NUMBER(HARVEST=A0)
         ENDIF
          CALL WRTLIN(LUN1,A0,NSAM,I)
d202 1
a202 1
      ELSEIF (ANS .EQ. 'S' .OR. ANS .EQ. 'T') THEN
d205 1
a205 1
        IF (ANS .EQ. 'T') THEN
d207 11
a217 9
           NS    = 1
           CX(1) = 1.
           NX(1) = 2
           NY(1) = 2
           PH(1) = 0.0

        ELSEIF (ANS .EQ. 'S') THEN

C         FIND NUMBER OF SINE WAVES WANTED IN THE IMAGE ---------------
d219 1
a219 2
2         CALL RDPRMI(NS,IDUM,NOT_USED,'NUMBER OF SINE WAVES')
          IF (NS .GT. MAXSIN) THEN
d221 1
a221 1
251          FORMAT(' *** BUFFER RESTRICTED TO',I3,' SINE WAVES')
d227 3
a229 3
            CALL RDPRA('AMPLITUDE, PHASE, SP. FREQUENCY(KX,KY)',
     &         4,0,.FALSE.,FWA,NVAL,IRTFLG)
            IF (IRTFLG .NE. 0) GOTO 9006
d236 6
a241 5
            NX(I) = ANX+0.5
            IF (ANX .LT .0.0) NX(I) = ANX-0.5
            NY(I) = ANY+0.5
            IF (ANY .LT. 0.0) NY(I) = ANY-0.5
            WRITE(NOUT,9008)I,CX(I),PH(I),NX(I),NY(I)
d243 2
a244 1
            PH(I) = PH(I)*TWOPI/360.0
d249 5
a253 3
        DO I=1,NROW
           PHASE = FLOAT(I-1)*TWOPI/FLOAT(NROW)
           DO J=1,NSAM
d255 4
a258 3
              DO K = 1,NS
              A0(J)=CX(K)*SIN(FLOAT(J-1)*TWOPI*FLOAT(NX(K))/FLOAT(NSAM)
     1              +PHASE*FLOAT(NY(K))+PH(K))+A0(J)
d261 1
a261 1
           CALL WRTLIN(LUN1,A0,NSAM,I)
@


1.22
log
@used rdpra instead of rdpraf
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.21
log
@GPL License fixed
@
text
@d2 1
a2 1
C++********************************************************************
d5 1
d51 1
d55 2
a56 2
	PARAMETER (QUADPI = 3.141592653589793238462643383279502884197)
	PARAMETER (TWOPI=2*QUADPI)
d63 1
a63 2
	AMAX=HUGE(RAD)
	AMIN=-AMAX
d123 1
a123 1
          DO  K = 1,NSAM
d125 2
a126 2
	       IF(EEE.GE.TNM)  THEN
	        A0(K)=0.0
d128 1
a128 1
                A0(K)=GNM*EXP(-EEE)
d159 6
a164 7

C         ONLY ONE WAVE IS WANTED
          NS    = 1
          CX(1) = 1.
          NX(1) = 2
          NY(1) = 2
          PH(1) = 0.0
d172 2
a173 2
             WRITE(NOUT,251)MAXSIN
251          FORMAT(' ** BUFFER RESTRICTED TO',I3,' SINE WAVES')
d179 2
a180 3
            NVAL   = 4
            CALL RDPRAF(FWA,4,NVAL,AMIN,AMAX,
     &         ' AMPLITUDE, PHASE, SP. FREQUENCY(KX,KY)','T',IRTFLG)
d206 1
a206 1
              END DO
@


1.20
log
@HRI GPL License used
@
text
@a6 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a30 1
C **************************************************************************
@


1.19
log
@nslice into blank
@
text
@d6 1
d8 1
d10 24
d40 1
@


1.18
log
@nloop,iloop_removed
@
text
@d63 2
a64 1
        CALL BLANK(LUN1,NSAM,NROW,BACK)
@


1.17
log
@NECHO --> NOUT
@
text
@d62 1
a62 1
        CALL RDPRM(BACK,NLOOP,ILOOP,'BACKGROUND CONSTANT')
d68 1
a68 1
           CALL RDPRM(RAD,NLOOP,ILOOP,'RADIUS (FLOATING POINT)')
d94 2
a95 2
	CALL RDPRM2(DX,DY,NLOOP,ILOOP,'COORDINATES OF THE CENTER')
	CALL RDPRM2(SX,SY,NLOOP,ILOOP,'STD. DEVIATIONS X,Y')
d123 1
a123 1
          CALL  RDPRM2(XM,SD,NLOOP,ILOOP,
d153 1
a153 1
2         CALL RDPRMI(NS,IDUM,NLOOP,ILOOP,'NUMBER OF SINE WAVES')
@


1.16
log
@option G added
@
text
@d176 1
a176 1
            WRITE(NECHO,9008)I,CX(I),PH(I),NX(I),NY(I)
@


1.15
log
@'t' used in rdpraf call.
@
text
@d27 1
a27 1
      SUBROUTINE MODEL(LUN1,NSAM,NROW)
d31 1
a31 1
      INCLUDE 'CMBLOCK.INC'
d33 15
a47 13
      COMMON NX,NY,CX
      INTEGER    IRTFLG,NVAL
      DIMENSION  NX(20),NY(20),CX(20),PH(20), FWA(4)
      DIMENSION  A0(NSAM)
      DATA AMIN/-10.0E30/,AMAX/10.0E30/

      CHARACTER    ANS,NULL,GA

      DATA TWOPI/6.283184/, MAXSIN/20/

      NULL = CHAR(0)

      WRITE(NOUT,100)
d51 1
d57 1
a57 1
1010  CALL RDPRMC(ANS,NC,.TRUE.,'B/C/R/S/T/W',NULL,IRTFLG)
a63 1
        RETURN
a90 1
        RETURN
d92 24
a135 1
        RETURN
@


1.14
log
@ran
@
text
@d140 1
a140 1
     $         ' AMPLITUDE, PHASE, SP. FREQUENCY(KX,KY)',NULL,IRTFLG)
@


1.13
log
@ifdef SP_NT
@
text
@d33 1
a33 2
      COMMON NX,NY,CX,BUF(4096),A0(2048)
CNO_SAVE
d36 2
a38 7
      DATA AMIN/-10E30/,AMAX/10E30/

C     NEEDS TO BE INTEGER*2 TO EXTRACT CORRECT PORTION OF TIME STRING FOR
C     RANDOM GENERATOR:
      INTEGER*2     NXT(4)
      CHARACTER*8  CNXT
      EQUIVALENCE  (NXT,CNXT)
a39 1
      LOGICAL      GFLAG
d49 1
a49 2
     &      '        (Q)UICK    -- RANDOM UNIFORM STATISTICS'/
     &      '        (R)ANDOM   -- RANDOM UNIFORM STATISTICS'/
d54 1
a54 1
1010  CALL RDPRMC(ANS,NC,.TRUE.,'B/C/Q/R/S/T/W',NULL,IRTFLG)
d91 2
a92 11
      ELSEIF (ANS .EQ. 'Q') THEN
C       PUT RANDOM NUMBERS IN THE IMAGE ------------------------- QUICK
        CALL TIME(CNXT)
	IST   = NXT(3)
        KST   = NXT(4)


	CALL  SRAND(KST)


        GFLAG = .FALSE.
a97 1
          GFLAG = .TRUE.
d102 1
d104 1
a104 5
            IF (GFLAG) THEN
               A0(K) = RANN(XM,SD,KST)
            ELSE
               A0(K) = RAN(IST)
            ENDIF
d106 3
a112 28
      ELSEIF (ANS .EQ.'R') THEN

C        RANDOM OPTION ----------------------------------------- RANDOM
         CALL TIME(CNXT)
         IST   = NXT(3)
         KST   = NXT(4)
         CALL RDPRMC(GA,NC,.TRUE.,'GAUSSIAN DISTRIBUTION? (Y/N)',
     &               NULL,IRT)
         IF (IRT .EQ. -1) GOTO 1010

         GFLAG = .TRUE.
         IF (GA .EQ. 'N') GFLAG =.FALSE.
         CALL MRAND(OUT,KST,GFLAG,NOUT)
 
C        WARMUP:
         DO  I = 1,2000
            CALL GETRAND(OUT)
         ENDDO

         DO I = 1,NROW
            DO  K = 1,NSAM
              CALL GETRAND(OUT) 
              A0(K) = OUT
            ENDDO
            CALL WRTLIN(LUN1,A0,NSAM,I)
         ENDDO
         RETURN

a170 1
      RETURN
@


1.12
log
@filnam removed from the list of parameters.
@
text
@d28 3
a30 1

d104 2
a105 2
#ifdef SP_UNIX
#ifndef SP_SUN4
d107 2
a108 2
#endif
#endif
@


1.11
log
@improved
@
text
@d16 1
a16 1
C   MODEL(LUN1,FILNAM,NSAM,NROW)
a21 1
C        FILNAM      NAME OF FILE
d27 1
a27 1
      SUBROUTINE MODEL(LUN1,FILNAM,NSAM,NROW)
@


1.10
log
@changed prompts
@
text
@d4 1
a4 1
C MODEL.FOR
d51 18
a68 2
1010  CALL RDPRMC(ANS,NC,.TRUE.,
     $    '(C)IRC/ (S)INE/ (T)EST/ (Q)RAN/ (R)AN/ (W)ED/',NULL,IRT)
d70 6
a75 1
      IF (IRT .NE. 0) RETURN
d77 20
a96 1
      IF (ANS .EQ.'R') GOTO 950
d98 2
a99 2
      IF (ANS .EQ. 'Q') THEN
C       PUT RANDOM NUMBERS IN THE IMAGE ------------------------------
d108 1
a108 1
        GFLAG =.FALSE.
d114 1
a114 1
          GFLAG =.TRUE.
d118 2
a119 2
        DO 180 I = 1,NROW
          DO 160 K = 1,NSAM
d121 1
a121 1
               A0(K)=RANN(XM,SD,KST)
d125 1
a125 1
160       CONTINUE
d127 1
a127 1
 180    CONTINUE
d130 18
a147 6
      ELSEIF (ANS .EQ. 'C' .OR. ANS .EQ. 'W') THEN
C       CIRCLE OR WEDGE ----------------------------------------------
        IF (ANS .EQ. 'C') THEN
          CALL RDPRM(RAD,NLOOP,ILOOP,'RADIUS (FLOATING PT.)')
          RAD2 = RAD**2
        ENDIF
d149 4
a152 14
        SCF=2./FLOAT(NROW+NSAM)
	DO I=1,NROW
          IF (ANS .EQ. 'C') THEN
C           CIRCLE WANTED
            FI2 = (FLOAT(I-NROW/2-1))**2
            DO  J=1,NSAM
               A0(J) = 0.
               IF (FI2+FLOAT(J-NSAM/2-1)**2.LT.RAD2) A0(J) = 1.0
            ENDDO 
          ELSE
C           WEDGE WANTED
            FI = FLOAT(I)*SCF
            DO  J = 1,NSAM
               A0(J) = FI+ SCF*FLOAT(J)
d154 3
a156 5
          ENDIF
C         SEND RECORD TO FILE
          CALL WRTLIN(LUN1,A0,NSAM,I)
        ENDDO
        RETURN
a157 1

d160 1
a160 1
C       PUT SINE WAVES OF INTENSITY IN THE IMAGE ---------------------
d181 1
a181 2
          DO 3 I = 1,NS

d194 1
a194 1
            IF (ANX  .LT .0.0) NX(I)=ANX-0.5
d196 1
a196 1
            IF (ANY .LT. 0.0) NY(I)=ANY-0.5
d199 2
a200 3
C           PH(I) = PH(I)*TWOPI/180.
            PH(I) = PH(I)*TWOPI/360.
3          CONTINUE
a217 25

C     RANDOM OPTION
950   CALL TIME(CNXT)
      IST   = NXT(3)
      KST   = NXT(4)
      CALL RDPRMC(GA,NC,.TRUE.,'GAUSSIAN DISTRIBUTION? (Y/N)',NULL,IRT)
      if (IRT .EQ. -1) RETURN

      GFLAG = .TRUE.
      IF (GA .EQ. 'N') GFLAG =.FALSE.
      CALL MRAND(OUT,KST,GFLAG,NOUT) 
C     WARMUP:
      DO  I = 1,2000
         CALL GETRAND(OUT)
      ENDDO

      DO I = 1,NROW
         DO  K = 1,NSAM
           CALL GETRAND(OUT) 
           A0(K) = OUT
         ENDDO
         CALL WRTLIN(LUN1,A0,NSAM,I)
      ENDDO

      RETURN
@


1.9
log
@TIME parameter must be char
@
text
@d41 1
a41 1
      INTEGER*2  NXT(4)
d44 2
a45 2
      CHARACTER  ANS,NULL,GA
      LOGICAL    GFLAG
d48 1
d52 1
a52 1
     $    '(T)EST/(S)INE/(C)IRC/(W)ED/(Q)RAN/(R)AN/',NULL,IRT)
d55 1
d57 1
d59 1
a59 1
C       PUT RANDOM NUMBERS IN THE IMAGE
d69 2
a70 1
        CALL RDPRMC(GA,NC,.TRUE.,'GAUSSIAN DIST.? (Y/N)',NULL,IRT)
d76 1
a76 1
     &        'MEAN AND ST.DEV. OF GAUSSIAN DIST.')
d88 1
a88 1
        GOTO 999
d91 1
a91 1

d98 1
a98 1
	DO 110 I=1,NROW
d100 1
d103 2
a104 2
              A0(J) = 0.
              IF (FI2+FLOAT(J-NSAM/2-1)**2.LT.RAD2) A0(J) = 1.0
a105 1

d107 1
d113 4
a117 3
          CALL WRTLIN(LUN1,A0,NSAM,I)
110	CONTINUE
        GOTO 999
d121 1
a121 2
C       PUT SINE WAVES OF INTENSITY IN THE IMAGE

a124 1

d133 1
a133 1
C         FIND NUMBER OF SINE WAVES WANTED IN THE IMAGE
d141 1
d170 1
a170 1
              A0(J) = 0.
d173 2
a174 2
     1        +PHASE*FLOAT(NY(K))+PH(K))+A0(J)
              end do
d179 1
a179 1
      GOTO 999
a180 1
C     CALL SETPRM(LUN1,NSAM,NROW,FMAX,FMIN,AV,'R')
d182 1
d186 8
a193 14
      GFLAG = .FALSE.
      CALL RDPRMC(GA,NC,.TRUE.,
     $  'GAUSSIAN DIST.(0 MEAN,1 STD.DEV.? (Y/N)',NULL,IRT)

       IF (GA .EQ. 'Y') GFLAG =.TRUE.
C       IF(GFLAG) THEN 
C       CALL RDPRM2(AMU,SIG,NLOOP,ILOOP,'MEAN, SIGMA')
C       PROGRAM BEING DEVELOPED :
C       CALL INVGAUSS(A0(1),A0(2),AMU,SIG,BUF)
C       ENDIF

        CALL MRAND(OUT,KST,GFLAG,NOUT) 
C      WARMUP:
       DO  I=1,2000
d195 1
a195 1
       ENDDO
d197 1
a197 1
       DO I = 1,NROW
d203 1
a203 3
       ENDDO

999    CONTINUE
d205 2
a206 2
       RETURN
       END
@


1.8
log
@added a enddo
@
text
@d42 2
d57 1
a57 1
        CALL TIME(NXT)
d178 1
a178 1
950   CALL TIME(NXT)
@


1.7
log
@removed ibcnt increment (error) & cosmetic
@
text
@d167 1
@


1.6
log
@ran changed
@
text
@d29 1
d31 1
d46 1
a46 1
      NULL=CHAR(0)
d95 1
a95 1
            DO 105 J=1,NSAM
d97 2
a98 2
              IF (FI2+FLOAT(J-NSAM/2-1)**2.LT.RAD2) A0(J) = 1. 
105         CONTINUE
d102 3
a104 2
            DO 102 J = 1,NSAM
102         A0(J) = FI+ SCF*FLOAT(J)
d119 1
a119 1
          NS = 1
d123 1
a123 1
          PH(1)=0.0
a136 7
C            WRITE(NOUT,9006) I
C9006        FORMAT($' I=',I2,
C     &           ' AMPLITUDE, PHASE, SP. FREQUENCY(KX,KY) : ')
C	REPLACE READ() BY RDPRAF()
C            READ(NIN,*) CX(I),PH(I),ANX,ANY


d138 1
a138 1
            NVAL = 4
d140 2
a141 2
     $       ' AMPLITUDE, PHASE, SP. FREQUENCY(KX,KY)',NULL,IRTFLG)
            IF ( IRTFLG .NE. 0) GOTO 9006
a147 1
            IBCNT = IBCNT+1
d160 1
a160 1
        DO 10 I=1,NROW
d162 3
a164 3
           DO 5 J=1,NSAM
              A0(J)=0.
              DO 5 K = 1,NS
d167 1
a167 2
5	   CONTINUE

d169 1
a169 2
10       CONTINUE
      
d180 1
a180 1
     $ 'GAUSSIAN DIST.(0 mean,1 std.dev.? (Y/N)',NULL,IRT)
d185 1
a185 1
C program being developed (IMSL-ROUTINE ANORIN USED INSTEAD):
d191 1
a191 1
       DO 981 I=1,2000
d193 1
a193 1
981    CONTINUE
d195 2
a196 2
       DO 980 I = 1,NROW
         DO 960 K = 1,NSAM
d199 3
a201 2
960      CONTINUE
980    CALL WRTLIN(LUN1,A0,NSAM,I)
@


1.5
log
@no srand on sun unix
@
text
@a28 2

#ifdef SP_UNIX
a29 4
#else
      INCLUDE 'COMMON1:CMBLOCK.INC'
#endif

d75 1
a75 1
               A0(K) = RAN(IST,KST)
@


1.4
log
@nosave, circle=1
@
text
@d53 1
a53 1
     $ '(T)EST/(S)INE/(C)IRC/(W)ED/(Q)RAN/(R)AN/',NULL,IRT)
d63 1
d65 1
@


1.3
log
@rand
@
text
@d37 1
a37 1

d99 1
a99 1
              IF (FI2+FLOAT(J-NSAM/2-1)**2.LT.RAD2) A0(J) = 2. 
@


1.2
log
@cpp_lines_added
@
text
@d62 3
@


1.1
log
@Initial revision
@
text
@d30 3
d34 1
@
