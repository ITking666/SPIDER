head	1.9;
access;
symbols
	pre_getangas:1.8
	GPL2010:1.8
	pre_GPL2010:1.7
	pre_var_equation:1.7
	pre_fftwrings:1.7
	pre_opfiles:1.7
	src:1.7
	best-code:1.7
	x-named-regs:1.7
	x:1.7
	v13-00:1.7
	pre_GPL:1.5
	prec_CA:1.4
	noindx:1.4
	Bproc:1.4
	oct21:1.3
	last77:1.3;
locks; strict;
comment	@c @;


1.9
date	2012.05.16.14.01.46;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2010.06.24.13.26.09;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.17.20.09.34;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.18.04.01;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.25.17.15.00;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.09.37;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	97.10.10.17.47.31;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	97.01.16.13.59.48;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.07;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.9
log
@reformatted, comments, nx
@
text
@C++*********************************************************************
C
C MIRROR.F   REFORMATTED, NX                     MAY 2012 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2012  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  MIRROR(LUN1,LUN2, NX,NY,NZ)
C
C PURPOSE: MIRROR IMAGE/VOLUME AROUND CENTER ON ONE OF XYZ AXES
C
C--*********************************************************************

	SUBROUTINE MIRROR(LUN1,LUN2,NX,NY,NZ)

        INCLUDE 'CMLIMIT.INC'
        COMMON /IOBUF/ BUF(NBUFSIZ)

	INTEGER           :: LUN1,LUN2,NX,NY,NZ

	INTEGER           :: NCHAR,K,I,J
	CHARACTER (LEN=1) :: XY
	LOGICAL           :: EVEN
	CHARACTER (LEN=1) :: NULL = CHAR(0)

	IF (NZ .LE. 1)  THEN
           CALL RDPRMC(XY,NCHAR,.TRUE.,
     &        'MIRROR AT (Y) OR (X) AXIS (DEF=Y)',NULL,IRTFLG)
	ELSE
           CALL RDPRMC(XY,NCHAR,.TRUE.,
     &        'MIRROR AT (Z), (Y) OR (X) AXIS (DEF=Y)',NULL,IRTFLG)
	ENDIF
        IF (IRTFLG .NE. 0) RETURN

	IF (XY == 'X') THEN
	   EVEN = MOD(NY,2) == 0

	   DO K=1,NZ

	      IF (EVEN)  THEN
	         DO I=1,NY
	            CALL REDLIN(LUN1,BUF,NX,I+(K-1)*NY)
	            CALL WRTLIN(LUN2,BUF,NX,
     &                       MOD(NY+1-I,NY)+1+(K-1)*NY)
	         ENDDO
	      ELSE
	         DO I=1,NY
	            CALL REDLIN(LUN1,BUF,NX,I+(K-1)*NY)
	            CALL WRTLIN(LUN2,BUF,NX,NY-I+1+(K-1)*NY)
	         ENDDO
	      ENDIF
	   ENDDO

	ELSEIF (XY == 'Z')  THEN
	   EVEN = MOD(NZ,2) == 0

	   DO K=1,NZ
	      IF (EVEN)  THEN
	         DO I=1,NY
                    CALL REDLIN(LUN1,BUF,NX,I+(K-1)*NY)
                    CALL WRTLIN(LUN2,BUF,NX,
     &                         I+MOD(NZ+1-K,NZ)*NY)
	         ENDDO
	      ELSE
	         DO I=1,NY
	            CALL REDLIN(LUN1,BUF,NX,I+(K-1)*NY)
	            CALL WRTLIN(LUN2,BUF,NX,I+(NZ-K)*NY)
	         ENDDO
	      ENDIF
	   ENDDO

	ELSE
	   EVEN = MOD(NX,2) == 0

	   DO I=1,NY*NZ
	      CALL REDLIN(LUN1,BUF,NX,I)

	      IF (EVEN)  THEN
	         DO J=1,NX
	           BUF(NX+MOD(NX+1-J,NX)+1) = BUF(J) ! 61-->1,120-->2
	         ENDDO
	      ELSE
	         DO J=1,NX
	            BUF(NX+NX+1-J) = BUF(J)          ! 120-->1,119-->2
	         ENDDO
	      ENDIF

	      CALL WRTLIN(LUN2,BUF(NX+1),NX,I)
	   ENDDO
	ENDIF

	END
@


1.8
log
@GPL_2010
@
text
@d3 1
a3 1
C MIRROR.F
d9 1
a9 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d27 3
a29 1
C  MIRROR(LUN1,LUN2,NSAM,NROW,NSLICE)
d33 4
a36 1
	SUBROUTINE MIRROR(LUN1,LUN2,NSAM,NROW,NSLICE)
d38 1
a38 3
	COMMON     DUM(80),BUF(1)
	CHARACTER  XY,NULL
	LOGICAL    EVEN
d40 4
a43 1
	NULL = CHAR(0)
d45 1
a45 1
	IF (NSLICE .LE. 1)  THEN
d52 7
a58 4
C
	IF (XY.EQ.'X') THEN
	   EVEN=MOD(NROW,2).EQ.0
	   DO K=1,NSLICE
d60 17
a76 16
	      DO I=1,NROW
	         CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
	         CALL WRTLIN(LUN2,BUF,NSAM,
     &                       MOD(NROW+1-I,NROW)+1+(K-1)*NROW)
	      ENDDO
	   ELSE
	      DO I=1,NROW
	         CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
	         CALL WRTLIN(LUN2,BUF,NSAM,NROW-I+1+(K-1)*NROW)
	      ENDDO
	   ENDIF
	ENDDO

	ELSEIF (XY .EQ. 'Z')  THEN
	   EVEN = MOD(NSLICE,2) .EQ. 0
	   DO K=1,NSLICE
d78 4
a81 4
	         DO I=1,NROW
                    CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
                    CALL WRTLIN(LUN2,BUF,NSAM,
     &                         I+MOD(NSLICE+1-K,NSLICE)*NROW)
d84 3
a86 3
	         DO I=1,NROW
	            CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
	           CALL WRTLIN(LUN2,BUF,NSAM,I+(NSLICE-K)*NROW)
d90 1
d92 5
a96 3
	   EVEN = MOD(NSAM,2) .EQ. 0
	   DO I=1,NROW*NSLICE
	      CALL REDLIN(LUN1,BUF,NSAM,I)
d98 2
a99 2
	         DO  J=1,NSAM
	           BUF(NSAM+MOD(NSAM+1-J,NSAM)+1)=BUF(J)
d102 2
a103 2
	         DO J=1,NSAM
	            BUF(NSAM+NSAM+1-J)=BUF(J)
d107 1
a107 1
	      CALL WRTLIN(LUN2,BUF(NSAM+1),NSAM,I)
@


1.7
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.6
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 2003. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a33 1
C--************************************************************************
@


1.5
log
@cosmetic
@
text
@d1 1
d8 24
d41 1
@


1.4
log
@a
@
text
@d3 1
a3 1
C $$ MIRROR.FOR
d5 8
a12 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
C **************************************************************************
d14 1
a15 1
C
d17 1
a17 3
C
C $$ MIRROR.FOR
C
d19 2
a20 1
	COMMON DUM(80),BUF(1)
d22 3
a24 1
	LOGICAL  EVEN
d26 3
a28 5
	NULL=CHAR(0)
C
	IF(NSLICE.LE.1)  THEN
         CALL RDPRMC(XY,NCHAR,.TRUE.,
     &   'MIRROR AT (Y) OR (X) AXIS (DEF=Y)',NULL,IRTFLG)
d30 2
a31 2
         CALL RDPRMC(XY,NCHAR,.TRUE.,
     &   'MIRROR AT (Z), (Y) OR (X) AXIS (DEF=Y)',NULL,IRTFLG)
d35 14
a48 6
	EVEN=MOD(NROW,2).EQ.0
	DO  K=1,NSLICE
	IF(EVEN)  THEN
	DO  I=1,NROW
	  CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
	  CALL WRTLIN(LUN2,BUF,NSAM,MOD(NROW+1-I,NROW)+1+(K-1)*NROW)
d50 17
d68 15
a82 4
	DO  I=1,NROW
	  CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
	  CALL WRTLIN(LUN2,BUF,NSAM,NROW-I+1+(K-1)*NROW)
	ENDDO
d84 1
a84 33
	ENDDO
C
	ELSEIF(XY.EQ.'Z')  THEN
	EVEN=MOD(NSLICE,2).EQ.0
	DO   K=1,NSLICE
	IF(EVEN)  THEN
	DO    I=1,NROW
	  CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
	  CALL WRTLIN(LUN2,BUF,NSAM,I+MOD(NSLICE+1-K,NSLICE)*NROW)
	ENDDO
	ELSE
	DO    I=1,NROW
	  CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
	  CALL WRTLIN(LUN2,BUF,NSAM,I+(NSLICE-K)*NROW)
	ENDDO
	ENDIF
	ENDDO
	ELSE
	EVEN=MOD(NSAM,2).EQ.0
	DO  I=1,NROW*NSLICE
	 CALL REDLIN(LUN1,BUF,NSAM,I)
	 IF(EVEN)  THEN
	DO  J=1,NSAM
	  BUF(NSAM+MOD(NSAM+1-J,NSAM)+1)=BUF(J)
	ENDDO
	 ELSE
	DO  J=1,NSAM
	  BUF(NSAM+NSAM+1-J)=BUF(J)
	ENDDO
	 ENDIF
	 CALL WRTLIN(LUN2,BUF(NSAM+1),NSAM,I)
	ENDDO
	ENDIF
@


1.3
log
@*** empty log message ***
@
text
@d25 1
a25 1
CNO_SAVE
@


1.2
log
@corrected to agree with SPIDER convention
@
text
@d38 1
a38 1
	DO 100 K=1,NSLICE
d40 4
a43 3
	DO 110 I=1,NROW
	CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
110	CALL WRTLIN(LUN2,BUF,NSAM,MOD(NROW+1-I,NROW)+1+(K-1)*NROW)
d45 4
a48 3
	DO 111 I=1,NROW
	CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
111	CALL WRTLIN(LUN2,BUF,NSAM,NROW-I+1+(K-1)*NROW)
d50 1
a50 1
100	CONTINUE
d54 1
a54 1
	DO  201  K=1,NSLICE
d56 4
a59 3
	DO  210  I=1,NROW
	CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
210	CALL WRTLIN(LUN2,BUF,NSAM,I+MOD(NSLICE+1-K,NSLICE)*NROW)
d61 4
a64 3
	DO  211  I=1,NROW
	CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
211	CALL WRTLIN(LUN2,BUF,NSAM,I+(NSLICE-K)*NROW)
d66 1
a66 1
201	CONTINUE
d69 13
a81 10
	DO 101 I=1,NROW*NSLICE
	CALL REDLIN(LUN1,BUF,NSAM,I)
	IF(EVEN)  THEN
	DO 102 J=1,NSAM
102	BUF(NSAM+MOD(NSAM+1-J,NSAM)+1)=BUF(J)
	ELSE
	DO 103 J=1,NSAM
103	BUF(NSAM+NSAM+1-J)=BUF(J)
	ENDIF
101	CALL WRTLIN(LUN2,BUF(NSAM+1),NSAM,I)
@


1.1
log
@Initial revision
@
text
@d21 6
a26 6
         SUBROUTINE MIRROR(LUN1,LUN2,NSAM,NROW,NSLICE)

         COMMON DUM(80),BUF(1)
         CHARACTER  XY,NULL
         NULL=CHAR(0)

d28 1
a28 1
         IF(NSLICE.LE.1)  THEN
d30 2
a31 2
     &   'MIRROR AT (Y) OR (X) AXIS (DEF=Y)$',NULL,IRTFLG)
         ELSE
d33 2
a34 2
     &   'MIRROR AT (Z), (Y) OR (X) AXIS (DEF=Y)$',NULL,IRTFLG)
         ENDIF
d36 13
a48 6
         IF (XY.EQ.'X') THEN
         DO 100 K=1,NSLICE
         DO 100 I = 1,NROW
         CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
         CALL WRTLIN(LUN2,BUF,NSAM,NROW-I+1+(K-1)*NROW)
100      CONTINUE
d50 27
a76 20
         ELSEIF(XY.EQ.'Z')  THEN
         DO  201  K=1,NSLICE
         DO  201  I=1,NROW
         CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
201      CALL WRTLIN(LUN2,BUF,NSAM,I+(NSLICE-K)*NROW)


         ELSE
         DO 101 K=1,NSLICE
         DO 101 I=1,NROW
         CALL REDLIN(LUN1,BUF,NSAM,I+(K-1)*NROW)
         DO 102 J=1,NSAM
         BUF(2*NSAM+1-J)=BUF(J)
102      CONTINUE
         CALL WRTLIN(LUN2,BUF(NSAM+1),NSAM,I+(K-1)*NROW)
101      CONTINUE
         ENDIF

         RETURN
         END
@
