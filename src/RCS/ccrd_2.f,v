head	1.17;
access;
symbols
	healthdept_2018:1.17
	pre_getangas:1.15
	GPL2010:1.15
	pre_GPL2010:1.14
	pre_var_equation:1.14
	pre_fftwrings:1.13
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.11
	x:1.11
	v13-00:1.11
	pre_GPL:1.9
	prec_CA:1.9
	noindx:1.9
	Bproc:1.7
	oct21:1.3
	last77:1.3;
locks; strict;
comment	@c @;


1.17
date	2018.10.03.14.34.02;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2011.07.29.15.19.51;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.24.13.25.12;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2009.04.28.13.15.35;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2008.02.19.15.24.43;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2006.02.07.16.54.21;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.20.24.43;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.18.16.44;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.30.20.18.31;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.18.20.28.16;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.02.14.19.41.00;	author bimal;	state Exp;
branches;
next	1.6;

1.6
date	99.12.06.20.59.55;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.12.06.15.18.01;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.09.09;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	96.09.06.15.16.55;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.08.27.21.21.04;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.08.27.19.47.11;	author pawel;	state Exp;
branches;
next	;


desc
@simple CC 2D, calling program
@


1.17
log
@email_health_dept
@
text
@C++*********************************************************************
C
C  CCRD_2.F                      
C              PGI BUG                          FEB 10 2006 ArDean Leith
C              MOD PGI COMPILER BUG             FEB 19 2008 ArDean Leith
C              X RETURNS O                      APR 24 2009 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  CCRD_2(LUN2,X,BUF, LS,NSAM,NROW)
C
C  PURPOSE: CALCULATES CIRCULAR CROSCORRELATION,  X= F(X*CONJG(Y))
C
C  PARAMETERS:  X      FOURIER TRANSFORMS                 (SENT)
C                      F(X*CONJG(Y))                      (RET.)
C               BUF    I/O BUFFER                         (SENT)
C               LS     NSAM+2-MOD(NSAM,2)                 (SENT)
C               NSAM   READ DIMENSION                     (SENT)
C               NROW   NROW DIMENSION                     (SENT)   
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE CCRD_2(LUN2,X,BUF, LS,NSAM,NROW)

        COMPLEX          :: X(LS/2,NROW)
        COMPLEX          :: BUF(LS/2) 

        COMPLEX          :: CTEMP
        DOUBLE PRECISION :: PI2
 
        NNNN = LS / 2
        LRS  = 2 * NNNN

        PI2  = 8.0 * DATAN(1.0D0)
        ITMP = NSAM / 2
        SX   = PI2 * FLOAT(ITMP) / FLOAT(NSAM)
        ITMP = NROW / 2
        SY   = PI2 * FLOAT(ITMP) / FLOAT(NROW)

        DO J=1,NROW
           IY = J - 1
           IF (IY .GT. (NROW/2))  IY = IY - NROW
           ARGY = SY * IY
           CALL REDLIN(LUN2,BUF,LRS,J)

           DO I=1,NNNN
              ARG    = SX * (I-1) + ARGY
C PGI OP64 BUG?: O(I,J) = X(I,J)*CONJG(BUF(I))*CMPLX(COS(ARG),SIN(ARG))
              CTEMP  = CMPLX(COS(ARG),SIN(ARG))
              X(I,J) = X(I,J) * CONJG(BUF(I)) * CTEMP
           ENDDO
        ENDDO

        INS = -1
        CALL FMRS_2(X,NSAM,NROW,INS)

        END

C      --------------- CCRD_PH_2 -------------------------------------

        SUBROUTINE CCRD_PH_2(LUN2, X,Y, LS,NSAM,NROW)

C       REAL   X((NSAM+2-MOD(NSAM,2)),NROW,NSLICE)
C       ABOVE ON PGI COMPILER 7.1 FAILS TO COMPILE PROPERLY SOMETIMES

        IMPLICIT NONE

        REAL    :: X(LS,NROW)
        REAL    :: Y(LS)

        INTEGER :: LUN2,LS,NSAM,NROW
 
        REAL    :: SX,SY,ARGY,ARG,TMPR,TMPI,FNRM
        INTEGER :: ITMP,J,IY,I,INS
 
	REAL, PARAMETER  :: QUADPI = 3.1415926535897932384
	REAL, PARAMETER  :: PI2    = 2*QUADPI

        ITMP = NSAM / 2
        SX   = PI2 * FLOAT(ITMP) / FLOAT(NSAM)
        ITMP = NROW / 2
        SY   = PI2 * FLOAT(ITMP) / FLOAT(NROW)

C$omp   parallel do private(i,j,iy,argy,arg,tmpr,tmpi,fnrm)
        DO J=1,NROW
           IY = J - 1
           IF (IY .GT. (NROW/2)) IY = IY - NROW
           ARGY = SY * IY

           CALL REDLIN(LUN2,Y,LS,J)

           DO I=1,LS,2
              ARG      = SX * (I-1) / 2 + ARGY

    	      TMPR     = X(I,J)   * Y(I)  + X(I+1,J) * Y(I+1)
	      TMPI     = X(I+1,J) * Y(I)  - X(I,J)   * Y(I+1)

	      X(I,  J) = TMPR * COS(ARG) - TMPI * SIN(ARG)
	      X(I+1,J) = TMPI * COS(ARG) + TMPR * SIN(ARG)

	      FNRM     = 1 / SQRT(X(I,J)**2 + X(I+1,J)**2)

	      X(I,  J) = X(I,  J) * FNRM
	      X(I+1,J) = X(I+1,J) * FNRM
           ENDDO
        ENDDO

        INS = -1
        CALL FMRS_2(X,NSAM,NROW,INS)

        END
@


1.16
log
@cc h
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.15
log
@GPL_2010
@
text
@d34 1
a34 1
C  PARAMETERS:  X      FOURIER TRANSFORM                  (SENT)
d37 1
a37 1
C               LS     FOURIER NSAM DIMENSION             (SENT)
d72 54
@


1.14
log
@*** empty log message ***
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.13
log
@PGI MOD in declare bug on 7.1
@
text
@d6 1
d10 1
a10 1
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d34 1
a34 1
C  CCRD_2(LUN2,X,BUF,O,LS,NSAM,NROW)
d36 1
a36 2
C  PURPOSE: CALCULATES CIRCULAR CROSCORRELATION, NON-POWER-OF-TWO 
C           DIMENSIONS
d38 6
a43 2
C  PARAMETERS:  X  FOURIER TRANSFORM                     (SENT)
C               O  F(X*CONJG(Y))                         (RET.)
d48 1
a48 1
        SUBROUTINE CCRD_2(LUN2,X,BUF,O, LS,NSAM,NROW)
a51 1
        COMPLEX          :: O(LS/2,NROW)
d67 1
a67 1
           IF (IY .GT. (NROW/2))  IY=IY - NROW
d75 1
a75 1
              O(I,J) = X(I,J) * CONJG(BUF(I)) * CTEMP
d80 1
a80 1
        CALL FMRS_2(O,NSAM,NROW,INS)
@


1.12
log
@PGI BUG
@
text
@d4 2
a5 1
C                           PGI BUG            FEB 10 2006 ArDean Leith
d9 1
a9 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d33 1
a33 1
C  CCRD_2(LUN2,X,BUF,O,NSAM,NROW)
d39 1
a39 3
C               O = F(X*CONJG(Y))                        (RET.)
C
C IMAGE_PROCESSING_ROUTINE
d44 5
a48 1
        SUBROUTINE  CCRD_2(LUN2,X,BUF,O,NSAM,NROW)
d50 1
a50 4
        COMPLEX ::          X((NSAM+2-MOD(NSAM,2))/2,NROW)
        COMPLEX ::          BUF((NSAM+2-MOD(NSAM,2))/2) 
        COMPLEX ::          O((NSAM+2-MOD(NSAM,2))/2,NROW)
        COMPLEX ::          CTEMP
d53 1
a53 1
        NNNN = (NSAM+2-MOD(NSAM,2)) / 2
d55 1
@


1.11
log
@GPL License fixed
@
text
@d4 1
d53 8
a60 7
        NNNN = (NSAM+2-MOD(NSAM,2))/2
        LRS  = 2*NNNN
        PI2  = 8.0*DATAN(1.0D0)
        ITMP = NSAM/2
        SX   = PI2*FLOAT(ITMP)/FLOAT(NSAM)
        ITMP = NROW/2
        SY   = PI2*FLOAT(ITMP)/FLOAT(NROW)
d62 2
a63 2
           IY = J-1
           IF (IY .GT. NROW/2)  IY=IY-NROW
d65 2
a66 1
           CALL  REDLIN(LUN2,BUF,LRS,J)
d68 4
a71 3
              IX     = I-1
              ARG    = SX*IX+ARGY
              O(I,J) = X(I,J)*CONJG(BUF(I))*CMPLX(COS(ARG),SIN(ARG))
@


1.10
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a42 1
C--************************************************************************
@


1.9
log
@phase parameter removed
@
text
@d1 1
d8 24
d50 1
@


1.8
log
@phase correl
@
text
@d3 1
a3 1
C  CCRD_2.F                      ADDED PHASE CORRELATION MAR 02 AL & CR
d14 1
a14 1
C  CCRD_2(LUN2,X,BUF,O,NSAM,NROW,PHASE)
d27 1
a27 1
        SUBROUTINE  CCRD_2(LUN2,X,BUF,O,NSAM,NROW,PHASE)
d34 1
a34 2
        LOGICAL ::          PHASE

d47 5
a51 16
           IF (.NOT. PHASE) THEN
              DO    I=1,NNNN
                 IX  = I-1
                 ARG = SX*IX+ARGY
                 O(I,J) = X(I,J)*CONJG(BUF(I))*CMPLX(COS(ARG),SIN(ARG))
              ENDDO
           ELSE
C             PHASE CORRELATION
              DO I=1,NNNN
                 IX     = I - 1
                 ARG    = SX * IX + ARGY
                 CTEMP  = X(I,J)*CONJG(BUF(I))*CMPLX(COS(ARG),SIN(ARG))
                 O(I,J) = CTEMP / 
     &                    (SQRT(REAL(CTEMP)**2 + AIMAG(CTEMP)**2))        ENDDO
              ENDDO
           ENDIF
@


1.7
log
@adapted for dynamical memory allocation
@
text
@d3 1
a3 1
C  CCRD_2.F 
d5 8
a12 13
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
C **************************************************************************
C
C  CALCULATES CIRCULAR CROSCORRELATION, NON-POWER-OF-TWO DIMENSIONS
C  INPUT - X,Y FOURIER TRANSFORMS
C  OUTPUT -  O=F(X*CONJG(LUN2))
d14 8
a23 1
C        1         2         3         4         5         6         7
d27 1
a27 1
        SUBROUTINE  CCRD_2(LUN2,X,BUF,O,NSAM,NROW)
d29 6
a34 4
        COMPLEX  X((NSAM+2-MOD(NSAM,2))/2,NROW)
        COMPLEX  BUF((NSAM+2-MOD(NSAM,2))/2) 
        COMPLEX  O((NSAM+2-MOD(NSAM,2))/2,NROW)
        DOUBLE PRECISION  PI2
d37 10
a46 15
C       INS=1
C       CALL  FMRS_2(X,NSAM,NROW,INS)
C       IF(INS.EQ.0)  RETURN
C       CALL  FMRS_2(Y,NSAM,NROW,INS)

        LRS=2*NNNN
        PI2=8.0*DATAN(1.0D0)
        ITMP=NSAM/2
        SX=PI2*FLOAT(ITMP)/FLOAT(NSAM)
        ITMP=NROW/2
        SY=PI2*FLOAT(ITMP)/FLOAT(NROW)
        DO    J=1,NROW
           IY=J-1
           IF(IY.GT.NROW/2)  IY=IY-NROW
           ARGY=SY*IY
d48 16
a63 5
           DO    I=1,NNNN
              IX=I-1
              ARG=SX*IX+ARGY
        O(I,J)=X(I,J)*CONJG(BUF(I))*CMPLX(COS(ARG),SIN(ARG))
           ENDDO
d66 3
a68 2
        INS=-1
        CALL  FMRS_2(O,NSAM,NROW,INS)
@


1.6
log
@header
@
text
@a0 1

d12 1
a12 1
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
d15 8
d25 12
a36 1
	SUBROUTINE  CCRD_2(LUN2,X,BUF,O,NSAM,NROW)
d38 17
a54 1
	DIMENSION  X(*),BUF(*),O(*)
d56 3
a58 2
	CALL  CCRD_2R(LUN2,X,BUF,O,(NSAM+2-MOD(NSAM,2))/2,NSAM,NROW)
	END
@


1.5
log
@cosmetic.
@
text
@d1 1
a14 1
 C
@


1.4
log
@a
@
text
@d3 1
a3 1
C $$ CCRD_2.FOR
d14 1
a15 2
C
C
d17 1
a17 3
C
C $$ CCRD_2.FOR
C
d19 1
@


1.3
log
@nosave
@
text
@d23 1
a23 1
CNO_SAVE
@


1.2
log
@*** empty log message ***
@
text
@d23 1
@


1.1
log
@Initial revision
@
text
@d23 1
a23 1
	CALL  CCRS_2R(LUN2,X,BUF,O,(NSAM+2-MOD(NSAM,2))/2,NSAM,NROW)
@
