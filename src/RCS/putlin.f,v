head	1.20;
access;
symbols
	pre_getangas:1.20
	GPL2010:1.20
	pre_GPL2010:1.19
	pre_var_equation:1.19
	pre_fftwrings:1.19
	pre_opfiles:1.19
	src:1.19
	best-code:1.19
	x-named-regs:1.19
	x:1.19
	v13-00:1.19
	pre_GPL:1.18
	prec_CA:1.17
	noindx:1.13
	Bproc:1.12
	oct21:1.9
	last77:1.8;
locks; strict;
comment	@c @;


1.20
date	2010.06.24.13.26.34;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.17.20.58.42;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2004.04.05.14.47.41;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.03.10.18.01.51;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.03.10.16.46.03;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.10.16.38.04;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.19.20.51.43;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.11.14.08.54;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.05.15.15.14.00;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.10.22.14.34.24;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.10.21.20.43.25;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.10.07.18.19.08;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.02.04.18.34.01;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.12.10.17.10.26;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	95.01.03.12.24.52;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	94.11.21.12.17.54;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	94.11.08.09.33.24;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.10.24.10.27.22;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.10.18.13.50.52;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.10.18.12.23.27;	author leith;	state Exp;
branches;
next	;


desc
@new routine for "PP LL"
@


1.20
log
@GPL_2010
@
text
@
C++*********************************************************************
C
C PUTLIN.F                          NEW          OCT 94 ArDean Leith 
C                                   FILNAMANDEXT MAR 03 ArDean Leith
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  PUTLIN(LUN,LUNDOC,MAXDIM)
C
C  PURPOSE: PUTS LINES IN SPIDER IMAGE FROM DOC FILE. THIS SHOULD USE
C           BRESENHAMS ALGORITM FOR SPEED BUT I AM IN A HURRY SO I 
C           JUST BORROWED SOME EXISTING CODE!!!!! 
C            
C	  LUN 		LOGICAL UNIT NUMBER OF INPUT FILE
C	  LUNDOC	LOGICAL UNIT NUMBER OF DOCUMENT FILE
C	  MAXDIM        MAX. BUFFER SIZE
C
C--*********************************************************************
 
	SUBROUTINE PUTLIN(LUN,LUNDOC,MAXDIM)

	INCLUDE 'CMBLOCK.INC' 
        INCLUDE 'CMLIMIT.INC'

        CHARACTER(LEN=MAXNAM)   ::   DOCNAM,FILNAM,FILTST
	COMMON /COMMUN/DOCNAM,FILNAM,FILTST

C       ACTUAL BUF LENGTH IS MAXDIM
	COMMON BUF(1)

        PARAMETER (MAXKEY=9999) 
        PARAMETER (MAXREG=7)    
        COMMON /DOC_BUF/ DBUF(MAXREG,MAXKEY*2)

	DIMENSION     PLIST(MAXREG+1)
        CHARACTER     NULL,DISP
        LOGICAL       EX,NEWCNT
        INTEGER       CNTNUM

        NULL = CHAR(0)

C       OPEN DOC FILE THAT CONTAINS COORDINATES, ~9 ALLOWS EXTENSION
12      CALL FILERD(DOCNAM,NLET,DATEXC,'COORDINATE DOCUMENT~9',IRTFLG)

        ICALL = 0
        CALL UNSDAL(DOCNAM,ICALL,LUNDOC,1,PLIST,1,DBUF,
     &              MAXKEY,MAXREG,NKEY,LER)
        IF (LER .GT. 0) GOTO 999

C       GET NAME FOR EXISTING OR NEW IMAGE FILE
10      CALL FILERD(FILNAM,NLET,NULL,'OUTPUT IMAGE',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 999

C       APPEND EXTENSION
        CALL FILNAMANDEXT(FILNAM,DATEXC,FILTST,NLET,.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 999

C       SEE IF THE IMAGE ALREADY EXISTS
        INQUIRE(FILE=FILTST,ERR=999,EXIST=EX)
        DISP = 'U'
        IF (EX) DISP = 'O'

C       OPEN IMAGE FILE
        IFORM  = 1
        NSAM   = 0
        NROW   = 0
        NSLICE = 0
        MAXIM  = 0
        CALL OPFILEC(0,.FALSE.,FILNAM,LUN,DISP,IFORM,NSAM,NROW,NSLICE,
     &             MAXIM,'IMAGE',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 10
        IF (NSAM * NROW .GT. MAXDIM) THEN
           CALL ERRT(6,'PUTLIN',NE)
           GOTO 999
        ENDIF


14      ICOLX = 1
        ICOLY = 2 
        CALL RDPRIS(ICOLX,ICOLY,NOT_USED,'X-COL., Y-COL.',IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 12
        ICOLX = ICOLX + 1
        ICOLY = ICOLY + 1
        IF ((ICOLX .LT. 0      .OR. ICOLY .LT. 0) .OR.
     &      (ICOLX .GT. MAXREG .OR. ICOLY .GT. MAXREG)) THEN
           CALL ERRT(101,'COLUMN OUT OF REGISTER RANGE',NE)
           GOTO 10
        ENDIF


C       ICOLI IS COLUMN OF DOC FILE CONTAINING INTENSITY
16      ICOLI = -55
        IF (IRTFLG .EQ. -1) GOTO 12
        CALL RDPRI1S(ICOLI,NOT_USED,
     &     'LINE INTENSITY COL. (< 0 ASKS FOR INTENSITY INPUT)',IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 14

17      IF (ICOLI .LT. 0) THEN
          CALL RDPRM1S(FOREGR,NOT_USED,'LINE INTENSITY',IRTFLG)
           IF (IRTFLG .EQ. -1) GOTO 16

           FOREGR2 = FOREGR
           ICOLI   = -1
        ELSE
           ICOLI = ICOLI + 1
           IF (ICOLI .LT. 0 .OR. ICOLI .GT. MAXREG) THEN
              CALL ERRT(101,'COLUMN OUT OF MAX. REGISTER RANGE',NE)
              GOTO 16
           ENDIF
        ENDIF

18      IF (.NOT. EX) THEN
           BACKGR = 0.0
           CALL RDPRM2S(BACKGR,NDUM,NOT_USED,'BACKGROUND INTENSITY',
     &                  IRTFLG)
          IF (IRTFLG .EQ. -1 .AND. ICOLI .EQ. -1) GOTO 17
          IF (IRTFLG .EQ. -1 ) GOTO 16
        ENDIF

C       ICOLCNT IS COLUMN OF DOC FILE CONTAINING CONTOUR NUMBER
181     ICOLCNT = 0
        CALL RDPRIS(ICOLCNT,IDUM,NOT_USED,
     &       'CONTOUR NO. COL. (= 0 FOR NONE)',IRTFLG)
        IF (IRTFLG .EQ. -1 .AND. .NOT. EX)      GOTO 18
        IF (IRTFLG .EQ. -1 .AND. ICOLI .EQ. -1) GOTO 17
        IF (IRTFLG .EQ. -1) GOTO 16
        ICOLCNT = ICOLCNT + 1
      
19      XFACT = 1.0
        YFACT = 1.0
        CALL RDPRM2S(XFACT,YFACT,NOT_USED,'X-FACTOR, Y-FACTOR',IRT)
        IF (IRT .EQ. -1) GOTO 181

20      XOFF = 0.0
        YOFF = 0.0
	CALL RDPRM2S(XOFF,YOFF,NOT_USED,'X-OFFSET, Y-OFFSET',IRT)
        IF (IRT .EQ. -1) GOTO 19

        IF (EX) THEN
C          FILL BUFFER WITH EXISTING IMAGE
           DO IREC = 1, NROW
              J = (IREC -1) * NSAM
              CALL REDLIN(LUN,BUF(J),NSAM,IREC)
           ENDDO
        ELSE
C          FILL BUFFER WITH BACKGROUND VALUE
           DO IVOX = 1, NSAM*NROW
              BUF(IVOX) = BACKGR
           ENDDO
        ENDIF

        LASTCNT = -1
        NEWCNT  = .TRUE.
     
	DO I=1,NKEY
C          GET COORDS FROM DOCUMENT FILE

           IX2 = DBUF(ICOLX,I) * XFACT + XOFF
           IY2 = DBUF(ICOLY,I) * YFACT + YOFF
           IF (IY2   .LT. 0) IY2 = NROW + IY2 + 1
           IF (ICOLI .GT. 0) FOREGR2 = DBUF(ICOLI,I)

           IF (ICOLCNT .GT. 1) THEN
C             READ CONTOUR NUMBER FROM DOC FILE
              CNTNUM = DBUF(ICOLCNT,I)
c*************************
c          write(6,*) 'cntnum,lastcnt:',cntnum,lastcnt,icolcnt,dbuf(4,i),
c     &                DBUF(5,I)
c**********************
              IF (CNTNUM .NE. LASTCNT) THEN
                 LASTCNT = CNTNUM
                 NEWCNT  = .TRUE.
              ENDIF
           ENDIF

           IF (NEWCNT) THEN
C             START A NEW CONTOUR

              IX1 = IX2
              IY1 = IY2
              IF (IY1 .LT. 0) IY1 = NROW - IY1 + 1
              IF (ICOLI .GT. 0) FOREGR = DBUF(ICOLI,11)

              IF ((IX1 .GT. NSAM .OR. IX1 .LE. 0) .OR.
     &            (IY1 .GT. NROW .OR. IY1 .LE. 0)) THEN
                  IONE = 1
                  WRITE(NOUT,91) IONE,IX1,IY1
              ENDIF
              NEWCNT = .FALSE.

           ELSEIF ((IX2 .GT. NSAM .OR. IX2 .LE. 0) .OR.
     &         (IY2 .GT. NROW .OR. IY2 .LE. 0)) THEN
              WRITE(NOUT,91) I,IX2,IY2
91            FORMAT('*** POINT NO.',I4,':(',I4,',',I4,
     &               ') OUT OF IMAGE LIMITS')

           ELSE
C             POINT IS WITHIN IMAGE
              IF (IY1 .EQ. IY2) THEN
C                HORIZONTAL LINE WOULD CAUSE DIVISION BY ZERO
                 ICON = (IY1 -1) * NSAM
                 IGO  = MIN(IX1,IX2)
                 IEND = MAX(IX1,IX2)
                 DO IX = IGO,IEND
                    BUF(ICON + IX) = FOREGR
                 ENDDO

              ELSE
                 FACT =  FLOAT(IX2-IX1) /  FLOAT(IY2-IY1)
                 FCON =  - FACT * IY1 + 0.5
                 IF (IX1 .GT. IX2) FCON = - FACT * IY1 - 0.5
                 IGO  = MIN(IY1,IY2)
                 IEND = MAX(IY1,IY2)

                 IXL = IX1
                 IF (IY2 .LT. IY1) IXL = IX2

                 DO IY = IGO,IEND
C                  FIND X VALUE FOR THIS Y COORDINATE
                   IX = IX1 + IFIX(FACT * FLOAT(IY) + FCON)

C                  SET BUFFER AT THIS LOCATION TO FOREGROUND
                   BUF((IY -1) * NSAM + IX) = FOREGR

                   IF (IABS(IX - IXL) .GT. 1) THEN
C                    MUST ADD IN INTERPOLATED X VALUES 
                     IGOX  = MIN(IX,IXL)
                     IENDX = MAX(IX,IXL)
                     IHALF = IGOX + (IENDX - IGOX) / 2

                     IYT   = IYL
                     IYEND = IY
                     IF (IX .LT. IXL) THEN
                         IYT   = IY
                         IYEND = IYL
                     ENDIF

                     DO IXT = IGOX,IENDX
                         BUF((IYT -1) * NSAM + IXT) = FOREGR
                        IF (IXT .EQ. IHALF) IYT = IYEND                       
                     ENDDO
                   ENDIF
                   IXL = IX
                   IYL = IY
                 ENDDO 
              ENDIF
           ENDIF
C********************************
c         WRITE(6,977) IX1,IY1,ix2,iy2
c977      FORMAT(' (',I4,',',I4,')-->(',I4,',',I4,')')
C*********************************

C          SET NEW STARTING POINT
           IX1    = IX2
           IY1    = IY2
           FOREGR = FOREGR2
        ENDDO

C       PLACE BUFFER BACK IN IMAGE FILE
        DO IREC = 1, NROW
           J = (IREC - 1) * NSAM
           CALL WRTLIN(LUN,BUF(J),NSAM,IREC)
        ENDDO

        CALL SETPRM(LUN,NSAM,NROW,0.,0.,0.,'U') 
          
999	CLOSE(LUN)
	RETURN
	END
@


1.19
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.18
log
@~9 for allowing extension
@
text
@d7 23
a29 7
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        *
C *  COPYRIGHT (C)1994, WADSWORTH CENTER FOR LABORATORIES AND          *
C *    RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201 *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS *
C *    OR USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN        *
C *    APPROVAL OF THE CENTER FOR LABORATORIES AND RESEARCH.           *
@


1.17
log
@bug in filerd usage
@
text
@d50 2
a51 3
C       OPEN DOC FILE THAT CONTAINS COORDINATES
        IRTFLG = 9 
12      CALL FILERD(DOCNAM,NLET,DATEXC,'COORDINATE DOCUMENT',IRTFLG)
@


1.16
log
@removed filcan
@
text
@d4 2
a5 2
C PUTLIN.F                                           A. LEITH OCT 94
C     
d60 6
a65 2
10      CALL FILERD(FILNAM,NLET,DATEXC,'OUTPUT IMAGE',IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 12
@


1.15
log
@null was undefined
@
text
@d60 1
a60 1
10      CALL FILERD(FILNAM,NLET,NULL,'OUTPUT IMAGE',IRTFLG)
a63 2
        CALL FILCAN(FILTST,NLET,NULL,NULL,FILNAM,DATEXC,IER)
        IF (IER .NE. 0) RETURN
@


1.14
log
@opfilec
@
text
@d48 2
d51 3
a53 2
12      CALL FILERD(DOCNAM,NLET,NULL,'COORDINATE DOCUMENT',IRTFLG)
        CALL FILCAN(DOCNAM,NLET,NULL,NULL,DOCNAM,DATEXC,IER)
a57 1

@


1.13
log
@nloop,iloop_removed
@
text
@d31 1
d33 1
a33 1
        CHARACTER *81 DOCNAM,FILNAM,FILTST
d73 3
a75 2
        CALL OPFIL(.FALSE.,FILNAM,LUN,DISP,NSAM,NROW,NSLICE,
     &             IDUM,'IMAGE',.FALSE.,IRTFLG)
@


1.12
log
@bad irtflg
@
text
@d83 1
a83 1
        CALL RDPRIS(ICOLX,ICOLY,NLOOP,ILOOP,'X-COL., Y-COL.',IRTFLG)
d97 1
a97 1
        CALL RDPRI1S(ICOLI,NLOOP,ILOOP,
d102 1
a102 1
          CALL RDPRM1S(FOREGR,NLOOP,ILOOP,'LINE INTENSITY',IRTFLG)
d117 1
a117 1
           CALL RDPRM2S(BACKGR,NDUM,NLOOP,ILOOP,'BACKGROUND INTENSITY',
d125 1
a125 1
        CALL RDPRIS(ICOLCNT,IDUM,NLOOP,ILOOP,
d134 1
a134 1
        CALL RDPRM2S(XFACT,YFACT,NLOOP,ILOOP,'X-FACTOR, Y-FACTOR',IRT)
d139 1
a139 1
	CALL RDPRM2S(XOFF,YOFF,NLOOP,ILOOP,'X-OFFSET, Y-OFFSET',IRT)
@


1.11
log
@set NSLICE
@
text
@d127 2
a128 2
        IF (IRT .EQ. -1 .AND. .NOT. EX)      GOTO 18
        IF (IRT .EQ. -1 .AND. ICOLI .EQ. -1) GOTO 17
@


1.10
log
@label 17 fixed
@
text
@d68 4
a71 3
        IFORM = 1
        NSAM  = 0
        NROW  = 0
@


1.9
log
@used rdpri1s and rdprm1s
@
text
@d100 2
a101 2
        IF (ICOLI .LT. 0) THEN
17         CALL RDPRM1S(FOREGR,NLOOP,ILOOP,'LINE INTENSITY',IRTFLG)
@


1.8
log
@CNO_SAVE
@
text
@a29 1
CNO_SAVE 
d94 1
a94 1
16      COLI = -55.0
d96 1
a96 1
        CALL RDPRM2S(COLI,FDUM,NLOOP,ILOOP,
d100 2
a101 2
        IF (COLI .LT. 0) THEN
17         CALL RDPRM2S(FOREGR,FDUM,NLOOP,ILOOP,'LINE INTENSITY',IRTFLG)
d107 1
a107 1
           ICOLI = COLI + 1
@


1.7
log
@removed IFORM from OPFIL call
@
text
@d30 1
@


1.6
log
@changed disp
@
text
@d19 1
a19 1
C           BRESENHAMS ALGORITM FOR SPPED BUT I AM IN A HURRY SO I 
a29 1
#ifdef SP_UNIX
a30 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif
d72 1
a72 1
     &             IFORM,'IMAGE',.FALSE.,IRTFLG)
@


1.5
log
@buggy yval if factor < 0, question order changed
@
text
@d47 1
a47 1
        CHARACTER     NULL
d68 2
d75 1
a75 1
        CALL OPFIL(.FALSE.,FILNAM,LUN,'U',NSAM,NROW,NSLICE,
@


1.4
log
@IONE was undefined (not important)
@
text
@d26 1
a26 1
C--************************************************************************
d51 9
d61 2
a62 2
10      CALL FILERD(FILNAM,NLET,NULL,'IMAGE',IRTFLG)
        IF (IRTFLG .EQ. -1) RETURN
d71 2
a81 8
C       OPEN DOC FILE THAT CONTAINS COORDINATES
12      CALL FILERD(DOCNAM,NLET,NULL,'COORDINATE DOCUMENT',IRTFLG)
        CALL FILCAN(DOCNAM,NLET,NULL,NULL,DOCNAM,DATEXC,IER)
        ICALL = 0
        CALL UNSDAL(DOCNAM,ICALL,LUNDOC,1,PLIST,1,DBUF,
     &              MAXKEY,MAXREG,NKEY,LER)
        IF (LER .GT. 0) GOTO 999

d91 1
a91 1
           GOTO 14
d164 1
a164 1
           IF (IY2   .LT. 0) IY2 = NROW - IY2 + 1
@


1.3
log
@fixed multiple contours stuff
@
text
@d187 1
@


1.2
log
@fixed aliasing
@
text
@d48 2
a49 1
        LOGICAL       EX
d94 1
d120 9
d133 1
a133 3
        IF (IRT .EQ. -1 .AND. .NOT. EX)      GOTO 18
        IF (IRT .EQ. -1 .AND. ICOLI .EQ. -1) GOTO 17
        IF (IRT .EQ. -1) GOTO 16
d153 4
a156 18
        IONE = 1
30      IF (IONE .GT. NKEY-1) THEN
           CALL ERRT(101,'NO MORE POINTS',NE)
           GOTO 999
        ENDIF
        IX1 = DBUF(ICOLX,IONE) * XFACT + XOFF
        IY1 = DBUF(ICOLY,IONE) * YFACT + YOFF
        IF (IY1 .LT. 0) IY1 = NROW - IY1 + 1
        IF (ICOLI .GT. 0) FOREGR = DBUF(ICOLI,11)

        IF ((IX1 .GT. NSAM .OR. IX1 .LE. 0) .OR.
     &      (IY1 .GT. NROW .OR. IY1 .LE. 0)) THEN
           WRITE(NOUT,91) IONE,IX1,IY1
           IONE = IONE + 1
           GOTO 30
        ENDIF
       
	DO I=IONE+1,NKEY
d164 28
a191 1
           IF ((IX2 .GT. NSAM .OR. IX2 .LE. 0) .OR.
@


1.1
log
@Initial revision
@
text
@d208 8
a215 1
                     IYT   = IY
d217 2
a218 2
                        BUF((IYT -1) * NSAM + IXT) = FOREGR
                        IF (IXT .EQ. IHALF) IYT = IYT + 1                       
d222 1
@
