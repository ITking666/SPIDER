head	1.22;
access;
symbols
	pre_mrcs:1.22
	healthdept_2018:1.22
	pre_getangas:1.20
	GPL2010:1.20
	pre_GPL2010:1.19
	pre_var_equation:1.18
	pre_fftwrings:1.16
	pre_opfiles:1.16
	src:1.16
	best-code:1.16
	x-named-regs:1.16
	x:1.16
	v13-00:1.16
	pre_GPL:1.14
	prec_CA:1.12
	noindx:1.12
	Bproc:1.11
	oct21:1.11
	last77:1.9;
locks; strict;
comment	@c @;


1.22
date	2018.10.03.14.34.04;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2014.01.12.19.39.13;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2010.06.24.13.25.25;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2009.11.05.19.18.03;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2009.06.11.12.49.10;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2008.12.05.13.28.59;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.18.18.54.33;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.18.14.32.04;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2004.02.10.19.33.09;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.10.16.18.16.05;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.24.19.15.26;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.08.09.20.13.30;	author pawel;	state Exp;
branches;
next	1.10;

1.10
date	99.07.22.13.44.33;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.03.15.18.53.47;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.03.12.20.49.51;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.03.12.13.56.44;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	97.10.06.17.04.00;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.09.30.20.12.47;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.01.16.15.10.53;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	95.01.27.17.47.28;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.04.14;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.13;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.22
log
@email_health_dept
@
text
@
C***********************************************************************
C
C  DENDRO.F -- ADAPTED FOR METAFILE             3 NOV 1986 ARDEAN LEITH
C              USED POSTSCRIPT OUTPUT             MAR 1999 ARDEAN LEITH
C              COSMETIC OUTPUT CHANGES            DEC 2008 ARDEAN LEITH                                                *
C              MERGED WITH DENDRO2 & ARBRE        JUN 2009 ARDEAN LEITH                                                *
C              SCALE CHANGED                      JUN 2009 ARDEAN LEITH                                                *
C              INPUT ORDER CHANGED                JUN 2009 ARDEAN LEITH                                                *
C              FILPOS * BUG                       NOV 2009 ARDEAN LEITH                                                *
C**********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C PURPOSE: DRAWS DENDROGRAM AND FORMS A POSTSCRIPT PLOT FILE FOR IT
C
C ORIGIN:
C    BASED ON ARBRE.F,  A DENDROGRAM PGM BY - JEAN-PIERRE BRETAUDIERE 
C    THE UNIVERSITY OF TEXAS HEALTH SCIENCE CENTER AT HOUSTON                      
C    MEDICAL SCHOOL - DEPARTMENT OF PATHOLOGY AND LABORATORY MEDICINE              
C    P.O. BOX 20708, HOUSTON, TX 77225.                                            
C                                                                 
C    TREE DESCRIPTION 
C                                                                  
C       NKLA SUMMITS              JFIN = 2 * NKLA - 1                
C       ARRAYS PROVIDED BY CHAVA  VAL(JFIN), LA(NKLA), LB(NKLA)     
C                                 PK(JFIN)      
C                                                               
C       WORKING ARRAYS            NO(JFIN), HIT(NKLA), NT(NKLA),     
C                                 IW(NKLA), W(NKLA), IV(NKLA),    
C                                 NUM(NKLA)                          
C
C       CALLED BY:     NOYAU
C
C **********************************************************************

      SUBROUTINE DENDRO(NKLA, JFIN, VAL, LA, LB, PK, IDK, KLAS, NUMIM, 
     &                  IDI, ADDHIDDEN, NO,NUM,NT,IV,IW,V,W)

      INCLUDE 'CMLIMIT.INC' 
      INCLUDE 'CMBLOCK.INC' 

      INTEGER, PARAMETER    :: LUNPOS = 80
      INTEGER, PARAMETER    :: LUNDOC = 81
      INTEGER, PARAMETER    :: NSIZE  = 3
      REAL                  :: DATA(3,NSIZE)
      
      REAL                  :: VAL(JFIN),PK(JFIN),HIT(NKLA),W(NKLA)
      INTEGER               :: LA(NKLA),LB(NKLA),IDK(NKLA)
      INTEGER               :: NO(JFIN),NT(NKLA)
      INTEGER               :: IV(NKLA),NUM(NKLA),IW(NKLA)
      INTEGER               :: KLAS(NUMIM),IDI(NUMIM)

      REAL                  :: Y1(MAX(NKLA,NUMIM))
      CHARACTER(LEN=3)      :: CWGHT1(MAX(NKLA,NUMIM))
      INTEGER               :: IM1(MAX(NKLA,NUMIM))
      INTEGER               :: ICLAS1(MAX(NKLA,NUMIM))

      CHARACTER(LEN=1)      :: NULL
      CHARACTER(LEN=8)      :: LABEL
      CHARACTER(LEN=10)     :: CVMIN,CVMAX
      CHARACTER(LEN=MAXNAM) :: FILPOS,ANSW
      LOGICAL               :: ASKTRUNC,ADDHIDDEN,WANTPOS

      INTEGER, PARAMETER    :: LENDOT = 102
      CHARACTER(LEN=LENDOT) :: LDOT

       NULL = CHAR(0)

       CALL FILERD(FILPOS,NLET,NULL,'DENDROGRAM POSTSCRIPT OUTPUT~9',
     &             IRTFLG)

       WANTPOS  = (FILPOS(1:1) .NE. '*')
       IF (WANTPOS .AND. IRTFLG .NE. 0) RETURN

       ANSW = FILPOS(1:NLET)
       CALL SSUPCAS(ANSW)

       ASKTRUNC = .FALSE.
       PMIN     = 0.0

C      LONG KLUDGE FOR BACKWARDS INPUT COMPATIBILITY
       IF ((NLET .EQ. 1 .AND. ANSW(1:1) .EQ. 'Y') .OR.
     &     (NLET .EQ. 3 .AND. ANSW(1:3) .EQ. 'YES')) THEN
C         WANT UN-TRUNCATED OUTPUT FILE, ASK FOR FILE NAME AGAIN
          CALL FILERD(FILPOS,NLET,NULL,
     &                'DENDROGRAM POSTSCRIPT OUTPUT~9',IRTFLG)
          
       ELSEIF ((NLET .EQ. 1 .AND. ANSW(1:1) .EQ. 'N') .OR.
     &         (NLET .EQ. 2 .AND. ANSW(1:2) .EQ. 'NO')) THEN
C          DO NOT WANT POSTSCRIPT OUTPUT FILE, BUT NEED RESULTS PLOT
           WANTPOS  = .FALSE.

       ELSEIF ((NLET .EQ. 1 .AND. ANSW(1:1).EQ. 'T') ) THEN
C          OLD INPUT FORMAT, ASK FOR TRUNCATION  LEVEL HERE
           CALL RDPRM1S(PMIN,NOT_USED,'PLOT CUTOFF % (0 .. 100)',
     &                IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

C          ASK FOR FILE NAME AGAIN
           CALL FILERD(FILPOS,NLET,NULL,
     &                 'DENDROGRAM POSTSCRIPT OUTPUT~9',IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
       ELSEIF (WANTPOS) THEN
            ASKTRUNC = .TRUE.
       ENDIF

       IF (WANTPOS) THEN
C         OPEN POSTSCRIPT FILE AS SEQUENTIAL FORMATTED
          CALL OPAUXFILE(.FALSE.,FILPOS,NULL,LUNPOS,0,'N',
     &                ' ',.TRUE.,IRTFLG)
          IF (IRTFLG .NE. 0) RETURN
          NLETP = LNBLNKN(FILPOS)
       ENDIF

       JDEB   = NKLA + 1     
       VMIN   = HUGE(VAL)    
       VMAX   = -VMIN          

       DO J = JDEB,JFIN                                                   
          IR     = J - JDEB + 1           
          IA     = LA(IR)        
          IB     = LB(IR)         
          VMIN   = MIN(VAL(J),VMIN)
          VMAX   = MAX(VAL(J),VMAX)
          NO(IA) = J          
          NO(IB) = J         
       ENDDO
       NO(JFIN) = JFIN  

C      RESCALE THE INDEX (HEIGHT) LEVELS 0..SCLMAX
       SCLMAX = 100.0
       VSCAL  = SCLMAX / (VMAX - VMIN)

       DO I = JDEB,JFIN
          VAL(I) = (VAL(I) - VMIN) * VSCAL
       ENDDO

      IF (ASKTRUNC) THEN
C        NEW INPUT FORMAT, ASK FOR TRUNCATION  LEVEL HERE
         CALL RDPRM1S(PMIN,NOT_USED,'PLOT CUTOFF (0 .. 100)',
     &                IRTFLG)
         IF (IRTFLG .NE. 0) RETURN
      ENDIF
C     INTEGERIZE CUT-OFFS
      IPMIN = PMIN   + 0.5       
      IVMAX = SCLMAX + 0.5

C     CREATE DESCRIPTION OF THE HIERARCHY CLASSES 
      WRITE(NDAT,90)     
   90 FORMAT (/,' NODE  INDEX  SENIOR  JUNIOR  SIZE'    ,6X,  
     &         'DESCRIPTION OF HIERARCHY CLASSES',/,
     &         ' ',64('. '),/)

      DO J = JDEB,JFIN         
        NT(1) = J 
        KPT   = 0 
        JI    = 1 

        DO WHILE (JI .NE. 0)
           IF (NT(JI) .LE. NKLA) THEN    
              K               = NT(JI)   
              KPT             = KPT + 1  
              IV(KPT)         = IDK(K)
              NUM(NKLA-KPT+1) = IDK(K)
              IW(KPT)         = K       
              JI              = JI - 1 

              !iit = NKLA-KPT+1
              !write(6,9900) iit,num(iit), j,kpt,ji,k,iv(kpt),iw(kpt) 
9900          format(' NUM(',i4,'):',i4,'  ----',6i6)
        
           ELSE 
              IJ              = JI + 1         
              NI              = NT(JI) - JDEB + 1
              NT(IJ)          = LA(NI)           
              NT(JI)          = LB(NI)           
              JI              = JI + 1
           ENDIF
        ENDDO
     
C       PRINT DESCRIPTION OF THE HIERARCHY CLASSES 
        IR = J - JDEB + 1     
        WRITE(NDAT,610) J, VAL(J),LA(IR),LB(IR),KPT,
     &		        (MOD(IV(KK),10000),KK=1,KPT)
  610   FORMAT (1X,I4,F9.3,I5,I6,I7,5X,
     &               18(1X,I4,:),/,:,
     &       ' ',36X,18(1X,I4,:),/,:,
     &       ' ',36X,18(1X,I4,:),/,:,
     &       ' ',36X,18(1X,I4,:),/,:,
     &       ' ',36X,18(1X,I4,:))

        I1    = IW(1)            
        I2    = IW(KPT)          
        W(I1) = NO(J)  + 0.0001   
        W(I2) = NO(I2) + 0.0001  
      ENDDO

C     CALCULATE TRUNCATED DENDROGRAM  --------------------------------

C     COMPUTE INDEX FOR EACH ORIGINAL CLASS
      DO J = 1,NKLA
         K    = W(J)      
         W(J) = VAL(K)
      ENDDO

      DO J = 1,NKLA   
         IWI           = IW(J)     
         HIT(NKLA-J+1) = W(IWI)     ! HEIGHT OR INDEX
      ENDDO

      NBR   = 0        ! NUMBER OF LEAVES OR NODES
 
      DO J = 1,NKLA
         !write(6,*) ' j,hit(j),pmin:',j,hit(j),pmin

C        DO NOT LABEL TRUNCATED LINES
         IF (HIT(J) .LT. PMIN)  CYCLE


C        GET CURRENT NODE WEIGHT 
         JJ      = IW(NKLA-J+1)
         IWGHT   = PK(JJ)

         IF (ADDHIDDEN) THEN
C           ADD UNLABELD CLASS LEAVES 

            DO I=1, NUMIM
               IF (KLAS(I) .EQ. NUM(j)) THEN
C                 IMAGE (OR ID) IS IN THIS CLASS
                  NBR     = NBR + 1
                   
C                 SET  LEAF HEIGHT (Y)
                  Y1(NBR)  = PMIN               ! HEIGHT 

C                 SET LEAF ID
                  IM1(NBR) = IDI(I)            ! ID  

C                 SET LEAF CLASS
                  ICLAS1(NBR) = NUM(J)         ! CLASS NUMBER

C                 SET LEAF WEIGHT
                  CWGHT1(NBR) = '  1'
               ENDIF
            ENDDO

         ELSE
C           NO NEED TO ADD UNLABELED CLASSES  
            NBR     = NBR + 1

C           SET LEAF WEIGHT
            WRITE(CWGHT1(NBR),FMT='(I3)') IWGHT

C           SET LEAF CLASS 
            ICLAS1(NBR) = NUM(J)            !  CLASS NUMBER

C           SET LEAF ID
            IM1(NBR) = NUM(J)               ! ID  
         ENDIF

C        SET (OR RESET) LEAF HEIGHT (Y) 
         Y1(NBR) = HIT(J)  
       
      ENDDO	

C     DRAW DENDROGRAM  ------------------------------------------

C     SET WINDOW SIZE (SCALING WILL BE DONE IN PLOT ROUTINES)
c     TO ALTER X SPACING OF NODES

      IF (NBR .LT. 20) THEN
         XWIN    = 100     
         YWIN    = 120
         ITSIZEX = 9
      ELSEIF (NBR .LT. 100) THEN
         XWIN    = 200    
         YWIN    = 220
         ITSIZEX = 5
      ELSE
         XWIN    = 300     
         YWIN    = 270
         ITSIZEX = 5
      ENDIF

C     FIND Y PLOT SCALE FOR TREE (NOT INCLUDING LABELS)
      YSCALE = YWIN / (SCLMAX - PMIN)
  
C     SET HORIZ DISTANCE BETWEEN LEAVES
      XDIS = XWIN / (NBR - 1)

C     ADDED LENGTH FOR LEAVES
      YLEAF = -5.0

C     INITIALIZE & SET SCALING FOR POSTSCRIPT
      IF (WANTPOS) CALL POSTRT(-LUNPOS)

      XLL = -66.0  
      YLL = -26.0
      XUR = XWIN
      YUR = YWIN + 5
      IF (WANTPOS) CALL POSCALE(LUNPOS, 1.0,1.0,  XLL,YLL,  XUR,YUR)

C     SET TEXT CHARACTARISTICS FOR Y AXIS LABELS
      ITSIZE = 9
      ITANGL = 0
      JUST   = 0

C     PUT POSTSCRIPT FILENAME AT TOP
      YPOS = YWIN
      XPOS = 20.0
      IF (WANTPOS)
     &    CALL POTEX(LUNPOS,FILPOS,NLETP,XPOS,YPOS,ITSIZE,ITANGL,JUST)

C     RIGHT JUSTIFIED Y LABELS
      JUST = 2

C     LABEL Y AXIS
      XPOS  = -16.0
      YPOS  = -30.0
      LABEL = 'ID'
      IF (WANTPOS .AND. ADDHIDDEN) 
     &   CALL POTEX(LUNPOS,LABEL,2,XPOS,YPOS, ITSIZE,ITANGL,JUST)

C     LABEL FOR WEIGHT
      XPOS  = -16.0
      YPOS  = -24.0
      LABEL = 'WEIGHT'
      IF (WANTPOS) 
     &   CALL POTEX(LUNPOS,LABEL,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)

C     LABEL FOR INDEX
      YPOS = -18.0
      LABEL = 'INDEX '
      IF (WANTPOS) 
     &   CALL POTEX(LUNPOS,LABEL,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)

C     LABEL FOR CLASS
      YPOS = -12.0
      LABEL = 'CLASS '
      IF (WANTPOS) 
     &   CALL POTEX(LUNPOS,LABEL,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)

C     LABEL FOR SCALE RANGE
      YPOS = 0.0   
      IF (WANTPOS) THEN
         WRITE(CVMIN,FMT='(I4)') IPMIN
         WRITE(CVMAX,FMT='(I4)') IVMAX
         CALL POTEX(LUNPOS,CVMIN,4, XPOS,0.0,  ITSIZE,ITANGL,JUST)
         CALL POTEX(LUNPOS,CVMAX,4, XPOS,YWIN, ITSIZE,ITANGL,JUST)
      ENDIF

      XPOS   = -20.0
      YPOS   = 50.0
      ITANGL = 90
      LABEL   = 'SCALE '

      IF (WANTPOS) THEN
         CALL POTEX(LUNPOS,LABEL,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)
C        ADD TICK MARKS AT Y = 0 AND Y = YMAX
         CALL POSEG(LUNPOS, -9.0, 0.0,  -4.0, 0.0)
         CALL POSEG(LUNPOS, -9.0,YWIN,  -4.0,YWIN)
      ENDIF

C     PRINT LABEL FOR DENDROGRAM IN RESULTS FILE

      WRITE(NDAT,*)'  '
      WRITE(NDAT,*)' xxxxxxxxxxxxxxxxxxxxxxxx DENDROGRAM xxxxxxxxxxx'//
     &             'xxxxxxxxxxxxxxxxxxxxxxxxx'
      WRITE(NDAT,*)'  '

      IF (ADDHIDDEN) THEN
         WRITE(NDAT,620) IPMIN, IVMAX
  620    FORMAT (///,'    ID   INDEX   CLASS           DENDROGRAM    ',    
     &           '(SCALE:  ',I4,'.....',I4,' )',//)                 
      ELSE
         WRITE(NDAT,621) IPMIN, IVMAX
  621    FORMAT (///,'  WEIGHT INDEX  CLASS          DENDROGRAM    ',    
     &               '(SCALE:  ',I4,'.....',I4,' )',//)                 
      ENDIF

C     SET TEXT CHARACTARISTICS FOR X AXIS LABELS
      ITANGL         = 0
      JUST           = 1    ! CENTERED

      LDOT(1:LENDOT) = ' '   ! BLANK THE RESULTS FILE DOTTED LINE
      DOTSCL         = FLOAT(LENDOT-1) / ( SCLMAX - PMIN )

C     DRAW  NBR TREE BRANCHES INTO POSTSCRIPT FILE 
      DO I=1,NBR

         XLOC = I * XDIS
         YLOC = (Y1(I) - PMIN) * YSCALE

C        DRAW VERTICAL LINE
         DATA(1,1) = XLOC
         DATA(2,1) = YLEAF

         DATA(1,2) = XLOC
         DATA(2,2) = YLOC 
         NDATA  = 2

         !write(6,*) ' i,im1,y1:',i,im1(i),y1(i)

         IF (I .LT. NBR) THEN
C           FIND LENGTH OF HORIZONTAL LINE
            DO J = I+1,NBR
               IF (((Y1(J) - PMIN) * YSCALE) .GE. YLOC) THEN
C                 ADD HORIZONTAL LINE TO THIS BRANCH
                  DATA(1,3) = J * XDIS
                  DATA(2,3) = YLOC   
                  NDATA     = 3
                  EXIT
               ENDIF
  	    ENDDO
            ! IF NO HIGHER BRANCH FOUND, POSSIBLE ERROR 
         ENDIF

C        PUSH  LINES INTO POSTSCRIPT FILE
         IF (WANTPOS) 
     &      CALL POARAYF(LUNPOS,DATA,NDATA,.FALSE.,.FALSE.)

         IF (WANTPOS .AND. ADDHIDDEN) THEN
C          LABEL LEAF WITH ID
           YPOS  = -30.0
           WRITE(LABEL,FMT='(I4)') IM1(I)
           CALL POTEX(LUNPOS,LABEL,4,XLOC,YPOS, ITSIZEX,ITANGL,JUST)
         ENDIF

C        LABEL LEAF WITH WEIGHT
         YPOS  = -24.0
         IF (WANTPOS) 
     &     CALL POTEX(LUNPOS,CWGHT1(I),3,XLOC,YPOS, ITSIZEX,ITANGL,JUST)

C        LABEL LEAF WITH INDEX 
         YPOS  = -18.0
         INDX  = Y1(I) + 0.5
         WRITE(LABEL,FMT='(I3)') INDX
         IF (WANTPOS) 
     &       CALL POTEX(LUNPOS,LABEL,3,XLOC,YPOS, ITSIZEX,ITANGL,JUST)

C        LABEL LEAF WITH CLASS NUMBER
         YPOS = -12.0
         WRITE(LABEL(1:3),FMT='(I3)')ICLAS1(I)
         IF (WANTPOS) 
     &     CALL POTEX(LUNPOS,LABEL(:3),3,XLOC,YPOS, ITSIZEX,ITANGL,JUST)

         !write(6,*) ' i: ',i,im1(i),indx,xloc,iclas1(i)

C        CREATE DOTTED LINE FOR RESULTS FILE
         FLX        = (Y1(I) - PMIN)  * DOTSCL + 1.0
         LX         = FLX 
         DO IT = 1,LX
            LDOT(IT:IT) = '.'
         ENDDO
         LT = lnblnkn(LDOT)

C        WRITE LEAF IN RESULTS FILE
         IF (ADDHIDDEN) THEN
            WRITE(NDAT,96) IM1(I),    INDX,  ICLAS1(I),  LDOT(1:LT)
  96        FORMAT (' ',   I4,4X,     I4,5X, I4,'  ..',  A)
         ELSE 
            WRITE(NDAT,95) CWGHT1(I), INDX,  ICLAS1(I),  LDOT(1:LT)
  95        FORMAT (' ',   A,4X,      I4,5X, I4,'  ..',  A) 
         ENDIF 
C        BLANK THE LOWER PART TO MAKE HORIZONTAL LINE ON NEXT WRITE 
         IF (LX .NE. 1)  LDOT(1:LX-1) = ' '

      ENDDO
      WRITE(NOUT,*) ' '

C     CLOSE THE POSTSCRIPT-FILE 
      IF (WANTPOS) THEN
          CALL POEND(LUNPOS)
          WRITE(NOUT,*) ' PLOT PLACED IN: ',FILPOS(1:NLETP)
          CLOSE(LUNPOS)
      ENDIF

C     CALCULATE UNTRUNCATED DENDROGRAM  ------------------------------

      NBR   = 0        ! NUMBER OF LEAVES OR NODES

      DO J = 1,NKLA
         !write(6,*) ' j,hit(j),pmin:',j,hit(j),pmin

         IF (ADDHIDDEN) THEN
C           ADD UNLABELD CLASS LEAVES 

            DO I=1, NUMIM
               IF (KLAS(I) .EQ. NUM(J)) THEN
C                 IMAGE (OR ID) IS IN THIS CLASS
                  NBR         = NBR + 1
                   
                  ICLAS1(NBR) = NUM(J)       ! CLASS NUMBER
                  Y1(NBR)     = 0.0          ! HEIGHT 
                  IM1(NBR)    = IDI(I)       ! ID  
               ENDIF
            ENDDO
            Y1(NBR) = HIT(J)                 ! HEIGHT 
         ELSE
C           NO NEED TO ADD UNLABELED CLASSES  
            NBR         = NBR + 1

            ICLAS1(NBR) = NUM(J)             ! CLASS NUMBER
            Y1(NBR)     = HIT(J)             ! HEIGHT 
            IM1(NBR)    = NUM(J)             ! ID  
         ENDIF
      ENDDO	

C     PLACE UNTRUNCATED DENDROGRAM SPECIFICATIONS IN DOC FILE
      CALL DENLST(LUNDOC,NBR, Y1,ICLAS1,IM1, IRTFLG)

      END

@


1.21
log
@enteer
@
text
@d17 1
a17 1
C=* Email: spider@@wadsworth.org                                        *
@


1.20
log
@GPL_2010
@
text
@d159 1
a159 1
         CALL RDPRM1S(PMIN,NOT_USED,'ENTER PLOT CUTOFF (0 .. 100)',
@


1.19
log
@formatting, * reponse bug
@
text
@d12 4
a15 3
C=* This file is part of:                                              * 
C=* SPIDER - Modular Image Processing System.   Author: J. FRANK       *
C=* Copyright 1985-2009  Health Research Inc.,                         *
d26 1
a26 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a27 1
C=*                                                                    *
@


1.18
log
@rewrite
@
text
@d10 1
d12 5
a16 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d18 1
a18 6
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d23 1
a23 1
C=* This program is distributed in the hope that it will be useful,    *
d29 1
a29 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
d90 3
a92 1
       IF (FILPOS(1:1) .EQ. '*' .OR. IRTFLG .NE. 0) RETURN
d96 2
a97 2
       ASKTRUNC = .TRUE.
       WANTPOS  = .TRUE.
d106 3
a108 4
          ASKTRUNC = .FALSE.

       ELSEIF ((NLET .EQ. 1 .AND. FILPOS(1:1).EQ. 'N') .OR.
     &         (NLET .EQ. 2 .AND. FILPOS(1:2).EQ. 'NO')) THEN
d110 1
a110 1
           WANTPOS = .FALSE.
d112 1
a112 1
       ELSEIF ((NLET .EQ. 1 .AND. FILPOS(1:1).EQ. 'T') ) THEN
a116 1
           ASKTRUNC = .FALSE.
d122 2
a166 1

d383 6
d487 1
d490 5
a494 4
      IF (WANTPOS) CALL POEND(LUNPOS)

      WRITE(NOUT,*) ' PLOT PLACED IN: ',FILPOS(1:NLETP)
      CLOSE(LUNPOS)
@


1.17
log
@cosmetic output
@
text
@d2 1
a2 1
C**********************************************************************
d4 2
a5 2
C  DENDRO.F -- ADAPTED FOR METAFILE              3 NOV. 86 ARDEAN LEITH
C              USED POSTSCRIPT OUTPUT             MAR 99   ARDEAN LEITH
d7 3
d12 1
a12 1
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d44 1
a44 1
C       TREE DESCRIPTION 
d50 1
a50 1
C       WORKING ARRAYS            NO(JFIN), V(NKLA), NT(NKLA),     
d58 2
a59 2
      SUBROUTINE DENDRO(NKLA, JFIN, VAL, LA, LB, PK, IDK, 
     &                  NO,NUM,NT,IV,IW,V,W,VMIN,VMAX)
d64 4
a67 4
C     LIMITED TO 200 LEAVES ON TREE BY NKMAX
      PARAMETER       (NKMAX = 200)
      PARAMETER       (NSIZE=2000)
      COMMON /COMMUN/ DATA(3,NSIZE),YT(NKMAX),X(NKMAX)
d69 105
a173 41
      DIMENSION      VAL(JFIN),PK(JFIN),V(NKLA),W(NKLA)
      INTEGER        LA(NKLA),LB(NKLA),IDK(NKLA),NO(JFIN),NT(NKLA)
      INTEGER        IV(NKLA),NUM(NKLA),IW(NKLA)

      CHARACTER(LEN=80)     :: LINE
      CHARACTER(LEN=10)     :: CVJ,CVMIN,CVMAX
      CHARACTER(LEN=4)      :: CNUM,CPOID
      CHARACTER(LEN=1)      :: NULL,LIGN(102)
      CHARACTER(LEN=MAXNAM) :: FILPOS

      DATA   LIG/102/

      NULL = CHAR(0)

C     GET NAME OF POSTSCRIPT FILE AND OPEN AS SEQUENTIAL FORMATTED
      LUNPOS = 80
      CALL OPAUXFILE(.TRUE.,FILPOS,'ps',LUNPOS,0,'N',
     &               'DENDROGRAM POSTSCRIPT OUTPUT',.TRUE.,IRTFLGT)
      IF (IRTFLGT .NE. 0) RETURN
      NLETP = LNBLNKN(FILPOS)

      JDEB   = NKLA + 1     
      VMIN   = VAL(JDEB)    
      VMAX   = VAL(JFIN)          

      DO J = JDEB,JFIN                                                   
         IR     = J - JDEB + 1           
         IA     = LA(IR)        
         IB     = LB(IR)         
         IF (VAL(J) .LT. VMIN) VMIN = VAL(J) 
         IF (VAL(J) .GT. VMAX) VMAX = VAL(J)
         NO(IA) = J          
         NO(IB) = J         
      ENDDO
      NO(JFIN)= JFIN  

C     PRINT DESCRIPTION OF THE HIERARCHY CLASSES 
              
      WRITE(NDAT,600)     
  600 FORMAT (/,' NODE  INDEX  SENIOR  JUNIOR  SIZE'    ,5X,  
     &         'DESCRIPTION OF HIERARCHY CLASSES',/,' ',64('. ') / )
d180 32
a211 22
   20   IF (NT(JI) .LE. NKLA) THEN    
           K               = NT(JI)   
           KPT             = KPT + 1  
           IV(KPT)         = IDK(K)  
           IW(KPT)         = K       
           NUM(NKLA-KPT+1) = IDK(K)
           JI              = JI - 1         
        ELSE 
          IJ               = JI + 1         
           NI              = NT(JI) - JDEB + 1
           NT(IJ)          = LA(NI)           
           NT(JI)          = LB(NI)           
           JI              = JI + 1
        ENDIF
           
        IF (JI .NE. 0) GO TO  20 

        IR    = J - JDEB + 1     
        WRITE(NDAT,610)  J, VAL(J),LA(IR),LB(IR),KPT,
     &		         (MOD(IV(KK),10000),KK=1,KPT)
  610   FORMAT (//,1X,I4,F9.3,I5,I6,I7,5X,18(1X,I4),/,' ',36X,18(1X,I4),
     &  /,' ',36X,18(1X,I4)/' ',36X,18(1X,I4),/' ',36X,18(1X,I4))
d215 1
a215 1
        W(I1) = NO(J) + 0.0001   
d219 1
a219 4
C     PRINT GRAPH OF DENDROGRAM  
      WRITE(NDAT,620)  VMIN, VMAX
  620 FORMAT (/////,5X, 'WEIGHT',5X, 'INDEX' ,9X,'DENDROGRAM',    
     &              4X, '(SCALE  ',2F7.2,' )',//)                 
d221 1
d223 2
a224 2
         K     = W(J)      
         W(J)  = VAL(K)
d228 2
a229 2
         IWI         = IW(J)     
         V(NKLA-J+1) = W(IWI)
d232 53
a284 3
      DO L = 1,LIG                                                        
         LIGN(L) = ' '
      ENDDO
d286 1
a286 1
      PAS = FLOAT(LIG) /(VMAX - VMIN)
d289 15
a303 2
      XWIN = 120
      YWIN = 100
d305 2
a306 2
C     FIND SCALE FOR TREE (NOT INCLUDING LABELS)
      YSCALE = YWIN / (VMAX - VMIN) 
d308 2
a309 2
C     FIND HORIZ DISTANCE BETWEEN LEAVES
      XDIS = XWIN / (NKLA - 1)
d311 1
a311 1
C     LENGTH OF LEAVES
a313 1

d315 1
a315 1
      CALL POSTRT(-LUNPOS)
d319 3
a321 3
      XUR = 120
      YUR = 110
      CALL POSCALE(LUNPOS, 1.0,1.0,  XLL,YLL,  XUR,YUR)
d329 4
a332 3
      YPOS = 120.0
      XPOS = 0.0
      CALL POTEX(LUNPOS,FILPOS,NLETP,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d335 1
a335 1
      JUST   = 2
d338 12
a349 4
      XPOS = -16.0
      YPOS = -24.0
      LINE = 'WEIGHT'
      CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d351 1
d353 3
a355 2
      LINE = 'INDEX '
      CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d357 1
a357 5
C     PREVIOUS LABEL WAS INTEGER, MAR 99 AL 
c     YPOS = -21.0
c     LINE = 'X1000 '
c     CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)
      
d359 12
a370 10
      LINE = 'CLASS '
      CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)

      YPOS = 0.0           
      WRITE(CVMIN,8802) VMIN
      CALL POTEX(LUNPOS,CVMIN,10,XPOS,YPOS, ITSIZE,ITANGL,JUST)

      YPOS = 100.0
      WRITE(CVMAX,8802)VMAX
      CALL POTEX(LUNPOS,CVMAX,10,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d372 1
d375 19
a393 2
      LINE   = 'SCALE '
      CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d396 2
a397 6
      ITSIZE = 5
      ITANGL = 0
      JUST   = 0

C     CENTER X AXIS LABELS
      JUST = 1
d399 2
a400 2
      DO J = 1,NKLA
C      DO J = NKLA,1,-1
d402 2
a403 13
         LX   = (V(J) - VMIN) * PAS + 1.0
         IF (LX .LT. 1)   LX = 1
         IF (LX .GT. LIG) LX = LIG

         DO  II = 1,LX
            LIGN(II) = '.'
   	 ENDDO

C        FIND NODE HEIGHT (Y)
         X(J)    = (J-1) * XDIS
         YT(J)   = (V(J) - VMIN) * YSCALE 
         JJ      = IW(NKLA-J+1)
         POID    = PK(JJ)
d405 2
a406 2
C        SET LEAF POSITION
         XPOS  = X(J)
d408 3
a410 9
C        LABEL THE LEAF WITH WEIGHT
         YPOS  = -24.0
         IPOID = POID
         WRITE(CPOID,8800)IPOID
 8800    FORMAT(I4)
         IT = 1
         IF (CPOID(:1) .EQ. ' ') IT = 2
         CALL POTEX(LUNPOS,CPOID(IT:4),5-IT,XPOS,YPOS, 
     &              ITSIZE,ITANGL,JUST)
d412 19
a430 2
C        LABEL LEAF WITH CLASS NUMBER NUM(J)
         YPOS = -12.0
d432 10
a441 17
	 WRITE(CNUM,801) NUM(J)
801	 FORMAT(I4)
         CALL POTEX(LUNPOS,CNUM(2:4),3,XPOS,YPOS,ITSIZE,ITANGL,JUST)

C        LABEL THE LEAF WITH THE INDEX 
         YPOS = -18.0
         IF (J .NE. NKLA) THEN
C           LABEL THE LEAF WITH THE INDEX 

C           PREVIOUS LABEL WAS AN INTEGER MAR 99
            IVT  = V(J) * 1000
            WRITE(CVJ,8801)IVT
 8801       FORMAT(I3)

            WRITE(CVJ,8802) V(J)
 8802       FORMAT(1PG10.2)
            CALL POTEX(LUNPOS,CVJ,10,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d443 4
a446 7
            WRITE(NDAT,630)  POID, V(J), NUM(J), (LIGN(L),L=1,LIG)
  630       FORMAT (' ',2F10.3,1X,I4,2X,'..',102A1)   
 
         ELSE
C           LABEL THE LEAF WITH NULL INDEX
            LINE = ' --'
            CALL POTEX(LUNPOS,LINE,3,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d448 6
a453 3
            WRITE(NDAT,650)  POID, NUM(NKLA), (LIGN(L),L=1,LIG)  
  650       FORMAT (' ',F10.3,4X,6('-'),1X,I4,2X,'..',102A1)
         ENDIF
d455 26
a480 2
         IF (LX .EQ. 1) GO TO  110                               
         LX = LX - 1 
d482 1
a482 3
         DO LL = 1,LX
            LIGN(LL) = ' '
  	 ENDDO
d484 2
a485 2
  110    WRITE(NDAT,640)  (LIGN(L),L=1,LIG)
  640    FORMAT (' ',29X,102A1)
d487 2
a488 1
      ENDDO	
d490 1
a490 3
C     START I SWEEP
      DO I=1,NKLA
         YTI = YT(I)
d492 1
a492 20
C        DRAW VERTICAL LINE
         DATA(1,1) = X(I)
         DATA(2,1) = YLEAF
         DATA(1,2) = X(I)
         DATA(2,2) = YTI
         NDATA     = 2
         IF (I .EQ. NKLA) GOTO 340

C        FIND LENGTH OF HORIZONTAL LINE
         DO  J = I+1,NKLA
            YTJ   = YT(J)
            IF (YTJ .GE. YTI) GOTO 330
  	 ENDDO
C        NO HIGHER BRANCH FOUND, POSSIBLE ERROR
         GOTO 300

C        DRAW HORIZONTAL LINE
  330    DATA(1,3) = X(J)
         DATA(2,3) = YTI
         NDATA = 3
d494 2
a495 5
C        PUSH DATA INTO FILE
  340    CALL POARAYF(LUNPOS,DATA,NDATA,.FALSE.,.FALSE.)

  300    CONTINUE
      ENDDO
d497 2
a498 3
C     TICK MARKS AT Y = 0 AND Y = YMAX
      CALL POSEG(LUNPOS, -3.0,0.0, -1.0,0.0)
      CALL POSEG(LUNPOS, -3.0,100.0,  -1.0,100.0)
d500 14
a513 2
C     CLOSE THE POSTSCRIPT-FILE 
9998  CALL POEND(LUNPOS)
d515 5
a519 1
      WRITE(NOUT,*) ' PLOT PLACED IN: ',FILPOS(1:NLETP)
d521 2
a522 1
9999  CLOSE(LUNPOS)
d525 1
@


1.16
log
@GPL
@
text
@d2 6
a7 1
C **********************************************************************
d9 1
a9 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
a31 2

C**********************************************************************
d33 1
a33 4
C  DENDRO.F -- ADAPTED FOR METAFILE    3 NOVEMBER 86 ARDEAN LEITH
C              USED POSTSCRIPT OUTPUT  MAR 99        ARDEAN LEITH
C**********************************************************************
C DRAWS DENDROGRAM AND FORMS A PLOT METAFILE FOR THE DENDROGRAM
d35 15
a49 15
C BASED ON ARBRE.FOR,    A DENDROGRAM PGM BY - JEAN-PIERRE BRETAUDIERE 
C THE UNIVERSITY OF TEXAS HEALTH SCIENCE CENTER AT HOUSTON                      
C MEDICAL SCHOOL - DEPARTMENT OF PATHOLOGY AND LABORATORY MEDICINE              
C P.O. BOX 20708, HOUSTON, TX 77225.                                            
C*--------------------------------------------------------------------*         
C*                                                                
C*      TREE DESCRIPTION 
C*                                                                 
C*      NKLA SUMMITS              JFIN = 2 * NKLA - 1                
C*      ARRAYS PROVIDED BY CHAVA  VAL(JFIN), LA(NKLA), LB(NKLA)     
C*                                PK(JFIN)      
C*                                                              
C*      WORKING ARRAYS            NO(JFIN), V(NKLA), NT(NKLA),     
C*                                IW(NKLA), W(NKLA), IV(NKLA),    
C*                                NUM(NKLA)                          
d53 1
a53 1
C*--------------------------------------------------------------------*         
d102 2
a103 2
C     PRINT DESCRIPTION OF THE HIERARCHY CLASSES               
      WRITE(NDAT,*) ' '     
d105 2
a106 2
  600 FORMAT (/' NODE  INDEX  SENIOR  JUNIOR  SIZE'    ,5X,  
     &  'DESCRIPTION OF THE HIERARCHY CLASSES'     /' ',64('. ') / )
d132 4
a135 3
     &		(MOD(IV(KK),10000),KK=1,KPT)
  610   FORMAT (//1X,I4,F9.3,I5,I6,I7,5X,18(1X,I4),/' ',36X,18(1X,I4) ,
     &  /' ',36X,18(1X,I4)/' ',36X,18(1X,I4),/' ',36X,18(1X,I4))
d144 1
a144 1
  620 FORMAT (/////,6X, 'WEIGHT',4X, 'INDEX' ,9X,'DENDROGRAM',    
d352 1
a352 1
      WRITE(NOUT,*) '  PLOT PLACED IN: ',FILPOS(1:NLETP)
@


1.15
log
@GPL License added
@
text
@d1 355
@


1.14
log
@cosmetic
@
text
@a0 329

C**********************************************************************
C
C  DENDRO.F -- ADAPTED FOR METAFILE    3 NOVEMBER 86 ARDEAN LEITH
C              USED POSTSCRIPT OUTPUT  MAR 99        ARDEAN LEITH
C**********************************************************************
C DRAWS DENDROGRAM AND FORMS A PLOT METAFILE FOR THE DENDROGRAM
C
C BASED ON ARBRE.FOR,    A DENDROGRAM PGM BY - JEAN-PIERRE BRETAUDIERE 
C THE UNIVERSITY OF TEXAS HEALTH SCIENCE CENTER AT HOUSTON                      
C MEDICAL SCHOOL - DEPARTMENT OF PATHOLOGY AND LABORATORY MEDICINE              
C P.O. BOX 20708, HOUSTON, TX 77225.                                            
C*--------------------------------------------------------------------*         
C*                                                                
C*      TREE DESCRIPTION 
C*                                                                 
C*      NKLA SUMMITS              JFIN = 2 * NKLA - 1                
C*      ARRAYS PROVIDED BY CHAVA  VAL(JFIN), LA(NKLA), LB(NKLA)     
C*                                PK(JFIN)      
C*                                                              
C*      WORKING ARRAYS            NO(JFIN), V(NKLA), NT(NKLA),     
C*                                IW(NKLA), W(NKLA), IV(NKLA),    
C*                                NUM(NKLA)                          
C
C       CALLED BY:     NOYAU
C
C*--------------------------------------------------------------------*         

      SUBROUTINE DENDRO(NKLA, JFIN, VAL, LA, LB, PK, IDK, 
     &                  NO,NUM,NT,IV,IW,V,W,VMIN,VMAX)

      INCLUDE 'CMLIMIT.INC' 
      INCLUDE 'CMBLOCK.INC' 

C     LIMITED TO 200 LEAVES ON TREE BY NKMAX
      PARAMETER       (NKMAX = 200)
      PARAMETER       (NSIZE=2000)
      COMMON /COMMUN/ DATA(3,NSIZE),YT(NKMAX),X(NKMAX)
      
      DIMENSION      VAL(JFIN),PK(JFIN),V(NKLA),W(NKLA)
      INTEGER        LA(NKLA),LB(NKLA),IDK(NKLA),NO(JFIN),NT(NKLA)
      INTEGER        IV(NKLA),NUM(NKLA),IW(NKLA)

      CHARACTER(LEN=80)     :: LINE
      CHARACTER(LEN=10)     :: CVJ,CVMIN,CVMAX
      CHARACTER(LEN=4)      :: CNUM,CPOID
      CHARACTER(LEN=1)      :: NULL,LIGN(102)
      CHARACTER(LEN=MAXNAM) :: FILPOS

      DATA   LIG/102/

      NULL = CHAR(0)

C     GET NAME OF POSTSCRIPT FILE AND OPEN AS SEQUENTIAL FORMATTED
      LUNPOS = 80
      CALL OPAUXFILE(.TRUE.,FILPOS,'ps',LUNPOS,0,'N',
     &               'DENDROGRAM POSTSCRIPT OUTPUT',.TRUE.,IRTFLGT)
      IF (IRTFLGT .NE. 0) RETURN
      NLETP = LNBLNKN(FILPOS)

      JDEB   = NKLA + 1     
      VMIN   = VAL(JDEB)    
      VMAX   = VAL(JFIN)          

      DO J = JDEB,JFIN                                                   
         IR     = J - JDEB + 1           
         IA     = LA(IR)        
         IB     = LB(IR)         
         IF (VAL(J) .LT. VMIN) VMIN = VAL(J) 
         IF (VAL(J) .GT. VMAX) VMAX = VAL(J)
         NO(IA) = J          
         NO(IB) = J         
      ENDDO
      NO(JFIN)= JFIN  

C     PRINT DESCRIPTION OF THE HIERARCHY CLASSES               
      WRITE(NDAT,*) ' '     
      WRITE(NDAT,600)     
  600 FORMAT (/' NODE  INDEX  SENIOR  JUNIOR  SIZE'    ,5X,  
     &  'DESCRIPTION OF THE HIERARCHY CLASSES'     /' ',64('. ') / )

      DO J = JDEB,JFIN         
        NT(1) = J 
        KPT   = 0 
        JI    = 1 

   20   IF (NT(JI) .LE. NKLA) THEN    
           K               = NT(JI)   
           KPT             = KPT + 1  
           IV(KPT)         = IDK(K)  
           IW(KPT)         = K       
           NUM(NKLA-KPT+1) = IDK(K)
           JI              = JI - 1         
        ELSE 
          IJ               = JI + 1         
           NI              = NT(JI) - JDEB + 1
           NT(IJ)          = LA(NI)           
           NT(JI)          = LB(NI)           
           JI              = JI + 1
        ENDIF
           
        IF (JI .NE. 0) GO TO  20 

        IR    = J - JDEB + 1     
        WRITE(NDAT,610)  J, VAL(J),LA(IR),LB(IR),KPT,
     &		(MOD(IV(KK),10000),KK=1,KPT)
  610   FORMAT (//1X,I4,F9.3,I5,I6,I7,5X,18(1X,I4),/' ',36X,18(1X,I4) ,
     &  /' ',36X,18(1X,I4)/' ',36X,18(1X,I4),/' ',36X,18(1X,I4))
        I1    = IW(1)            
        I2    = IW(KPT)          
        W(I1) = NO(J) + 0.0001   
        W(I2) = NO(I2) + 0.0001  
      ENDDO

C     PRINT GRAPH OF DENDROGRAM  
      WRITE(NDAT,620)  VMIN, VMAX
  620 FORMAT (/////,6X, 'WEIGHT',4X, 'INDEX' ,9X,'DENDROGRAM',    
     &              4X, '(SCALE  ',2F7.2,' )',//)                 

      DO J = 1,NKLA
         K     = W(J)      
         W(J)  = VAL(K)
      ENDDO

      DO J = 1,NKLA   
         IWI         = IW(J)     
         V(NKLA-J+1) = W(IWI)
      ENDDO

      DO L = 1,LIG                                                        
         LIGN(L) = ' '
      ENDDO

      PAS = FLOAT(LIG) /(VMAX - VMIN)

C     SET WINDOW SIZE (SCALING WILL BE DONE IN PLOT ROUTINES)
      XWIN = 120
      YWIN = 100

C     FIND SCALE FOR TREE (NOT INCLUDING LABELS)
      YSCALE = YWIN / (VMAX - VMIN) 
  
C     FIND HORIZ DISTANCE BETWEEN LEAVES
      XDIS = XWIN / (NKLA - 1)

C     LENGTH OF LEAVES
      YLEAF = -5.0


C     INITIALIZE & SET SCALING FOR POSTSCRIPT
      CALL POSTRT(-LUNPOS)

      XLL = -66.0  
      YLL = -26.0
      XUR = 120
      YUR = 110
      CALL POSCALE(LUNPOS, 1.0,1.0,  XLL,YLL,  XUR,YUR)

C     SET TEXT CHARACTARISTICS FOR Y AXIS LABELS
      ITSIZE = 9
      ITANGL = 0
      JUST   = 0

C     PUT POSTSCRIPT FILENAME AT TOP
      YPOS = 120.0
      XPOS = 0.0
      CALL POTEX(LUNPOS,FILPOS,NLETP,XPOS,YPOS, ITSIZE,ITANGL,JUST)

C     RIGHT JUSTIFIED Y LABELS
      JUST   = 2

C     LABEL Y AXIS
      XPOS = -16.0
      YPOS = -24.0
      LINE = 'WEIGHT'
      CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)

      YPOS = -18.0
      LINE = 'INDEX '
      CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)

C     PREVIOUS LABEL WAS INTEGER, MAR 99 AL 
c     YPOS = -21.0
c     LINE = 'X1000 '
c     CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)
      
      YPOS = -12.0
      LINE = 'CLASS '
      CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)

      YPOS = 0.0           
      WRITE(CVMIN,8802) VMIN
      CALL POTEX(LUNPOS,CVMIN,10,XPOS,YPOS, ITSIZE,ITANGL,JUST)

      YPOS = 100.0
      WRITE(CVMAX,8802)VMAX
      CALL POTEX(LUNPOS,CVMAX,10,XPOS,YPOS, ITSIZE,ITANGL,JUST)

      YPOS   = 50.0
      ITANGL = 90
      LINE   = 'SCALE '
      CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)

C     SET TEXT CHARACTARISTICS FOR X AXIS LABELS
      ITSIZE = 5
      ITANGL = 0
      JUST   = 0

C     CENTER X AXIS LABELS
      JUST = 1

      DO J = 1,NKLA
C      DO J = NKLA,1,-1

         LX   = (V(J) - VMIN) * PAS + 1.0
         IF (LX .LT. 1)   LX = 1
         IF (LX .GT. LIG) LX = LIG

         DO  II = 1,LX
            LIGN(II) = '.'
   	 ENDDO

C        FIND NODE HEIGHT (Y)
         X(J)    = (J-1) * XDIS
         YT(J)   = (V(J) - VMIN) * YSCALE 
         JJ      = IW(NKLA-J+1)
         POID    = PK(JJ)

C        SET LEAF POSITION
         XPOS  = X(J)

C        LABEL THE LEAF WITH WEIGHT
         YPOS  = -24.0
         IPOID = POID
         WRITE(CPOID,8800)IPOID
 8800    FORMAT(I4)
         IT = 1
         IF (CPOID(:1) .EQ. ' ') IT = 2
         CALL POTEX(LUNPOS,CPOID(IT:4),5-IT,XPOS,YPOS, 
     &              ITSIZE,ITANGL,JUST)

C        LABEL LEAF WITH CLASS NUMBER NUM(J)
         YPOS = -12.0

	 WRITE(CNUM,801) NUM(J)
801	 FORMAT(I4)
         CALL POTEX(LUNPOS,CNUM(2:4),3,XPOS,YPOS,ITSIZE,ITANGL,JUST)

C        LABEL THE LEAF WITH THE INDEX 
         YPOS = -18.0
         IF (J .NE. NKLA) THEN
C           LABEL THE LEAF WITH THE INDEX 

C           PREVIOUS LABEL WAS AN INTEGER MAR 99
            IVT  = V(J) * 1000
            WRITE(CVJ,8801)IVT
 8801       FORMAT(I3)

            WRITE(CVJ,8802) V(J)
 8802       FORMAT(1PG10.2)
            CALL POTEX(LUNPOS,CVJ,10,XPOS,YPOS, ITSIZE,ITANGL,JUST)

            WRITE(NDAT,630)  POID, V(J), NUM(J), (LIGN(L),L=1,LIG)
  630       FORMAT (' ',2F10.3,1X,I4,2X,'..',102A1)   
 
         ELSE
C           LABEL THE LEAF WITH NULL INDEX
            LINE = ' --'
            CALL POTEX(LUNPOS,LINE,3,XPOS,YPOS, ITSIZE,ITANGL,JUST)

            WRITE(NDAT,650)  POID, NUM(NKLA), (LIGN(L),L=1,LIG)  
  650       FORMAT (' ',F10.3,4X,6('-'),1X,I4,2X,'..',102A1)
         ENDIF

         IF (LX .EQ. 1) GO TO  110                               
         LX = LX - 1 

         DO LL = 1,LX
            LIGN(LL) = ' '
  	 ENDDO

  110    WRITE(NDAT,640)  (LIGN(L),L=1,LIG)
  640    FORMAT (' ',29X,102A1)

      ENDDO	

C     START I SWEEP
      DO I=1,NKLA
         YTI = YT(I)

C        DRAW VERTICAL LINE
         DATA(1,1) = X(I)
         DATA(2,1) = YLEAF
         DATA(1,2) = X(I)
         DATA(2,2) = YTI
         NDATA     = 2
         IF (I .EQ. NKLA) GOTO 340

C        FIND LENGTH OF HORIZONTAL LINE
         DO  J = I+1,NKLA
            YTJ   = YT(J)
            IF (YTJ .GE. YTI) GOTO 330
  	 ENDDO
C        NO HIGHER BRANCH FOUND, POSSIBLE ERROR
         GOTO 300

C        DRAW HORIZONTAL LINE
  330    DATA(1,3) = X(J)
         DATA(2,3) = YTI
         NDATA = 3

C        PUSH DATA INTO FILE
  340    CALL POARAYF(LUNPOS,DATA,NDATA,.FALSE.,.FALSE.)

  300    CONTINUE
      ENDDO

C     TICK MARKS AT Y = 0 AND Y = YMAX
      CALL POSEG(LUNPOS, -3.0,0.0, -1.0,0.0)
      CALL POSEG(LUNPOS, -3.0,100.0,  -1.0,100.0)

C     CLOSE THE POSTSCRIPT-FILE 
9998  CALL POEND(LUNPOS)

      WRITE(NOUT,*) '  PLOT PLACED IN: ',FILPOS(1:NLETP)

9999  CLOSE(LUNPOS)

      END
@


1.13
log
@CA rewrite
@
text
@d77 1
d79 1
a79 1
  600 FORMAT (' NODE  INDEX  SENIOR  JUNIOR  SIZE'    ,5X,  
d88 4
a91 4
           K       = NT(JI)   
           KPT     = KPT + 1  
           IV(KPT) = IDK(K)  
           IW(KPT) = K       
d93 1
a93 1
           JI    = JI - 1         
d95 5
a99 5
          IJ     = JI + 1         
           NI    = NT(JI) - JDEB + 1
           NT(IJ)= LA(NI)           
           NT(JI)= LB(NI)           
           JI    = JI + 1
d244 1
a244 1
C         INUM = NUM(J)
@


1.12
log
@cosmetic & IDK bug
@
text
@d19 1
a19 1
C*                                PK(JFIN), IDK(NKLA)      
d32 1
a39 1

d43 6
a48 6
      CHARACTER * 81 FILPOS
      CHARACTER * 80 LINE
      CHARACTER * 10 CVJ,CVMIN,CVMAX
      CHARACTER * 4  CNUM,CPOID
C      EQUIVALENCE    (INUM,CNUM)
      CHARACTER * 1  NULL,LIGN(102)
d65 1
a65 1
      DO    J = JDEB,JFIN                                                   
d77 1
a77 1
      WRITE (NDAT,600)     
d85 18
a102 15
   20   IF (NT(JI) .GT. NKLA) GO TO  30    
        K       = NT(JI)   
        KPT     = KPT + 1  
        IV(KPT) = IDK(K)  
        IW(KPT) = K       
        NUM(NKLA-KPT+1) = IDK(K)
        JI    = JI - 1         
        GO TO  40 
             
   30   IJ    = JI + 1         
        NI    = NT(JI) - JDEB + 1
        NT(IJ)= LA(NI)           
        NT(JI)= LB(NI)           
        JI    = JI + 1           
   40   IF (JI .NE. 0) GO TO  20 
d104 1
a104 1
        WRITE (NDAT,610)  J, VAL(J),LA(IR),LB(IR),KPT,
d115 1
a115 1
      WRITE (NDAT,620)  VMIN, VMAX
d119 3
a121 3
      DO  J = 1,NKLA
        K     = W(J)      
        W(J)  = VAL(K)
d124 3
a126 3
      DO  J = 1,NKLA   
        IWI   = IW(J)     
        V(NKLA-J+1)= W(IWI)
d129 2
a130 2
      DO  L = 1,LIG                                                        
        LIGN(L)= ' '
d140 2
a141 1
      YSCALE = YWIN / (VMAX - VMIN)   
d144 1
d211 2
a212 2
      DO   J = 1,NKLA
C      DO   J = NKLA,1,-1
d262 1
a262 1
            WRITE (NDAT,630)  POID, V(J), NUM(J), (LIGN(L),L=1,LIG)
d270 1
a270 1
            WRITE (NDAT,650)  POID, NUM(NKLA), (LIGN(L),L=1,LIG)  
d275 1
a275 1
         LX    = LX - 1 
d277 2
a278 2
         DO   LL = 1,LX
            LIGN(LL)= ' '
d281 1
a281 1
  110    WRITE (NDAT,640)  (LIGN(L),L=1,LIG)
d288 1
a288 1
         YTI   = YT(I)
d324 1
a324 1
      WRITE(NOUT,*) ' PLOT PLACED IN: ',FILPOS(1:NLETP)
@


1.11
log
@*** empty log message ***
@
text
@d66 7
a72 7
        IR    = J - JDEB + 1           
        IA    = LA(IR)        
        IB    = LB(IR)         
        IF (VAL(J) .LT. VMIN) VMIN = VAL(J) 
        IF (VAL(J) .GT. VMAX) VMAX = VAL(J)
        NO(IA)= J          
        NO(IB)= J         
d78 1
a78 1
  600 FORMAT ('1','NODE  INDEX  SENIOR  JUNIOR  SIZE'    ,5X,  
d81 1
a81 1
      DO   J = JDEB,JFIN         
d92 2
a93 1
        GO TO  40              
d113 2
a114 2
  620 FORMAT ('1',5X, 'WEIGHT',4X, 'INDEX' ,9X,'DENDROGRAM',    
     &        4X, '(SCALE  ',2F7.2,' )',//)                 
d254 1
a254 1
 8802       FORMAT(G10.2)
@


1.10
log
@changed label sizes
@
text
@d42 1
a42 1
      INTEGER        IV( NKLA),NUM(NKLA),IW(NKLA)
d47 1
a47 1
      EQUIVALENCE    (INUM,CNUM)
d100 4
a103 3
        WRITE (NDAT,610)  J, VAL(J),LA(IR),LB(IR),KPT,(IV(KK),KK=1,KPT)
  610   FORMAT (//1X,I4,F9.3,I5,I6,I7,5X,18(1X,A4),/' ',36X,18(1X,A4) ,
     &  /' ',36X,18(1X,A4)/' ',36X,18(1X,A4),/' ',36X,18(1X,A4 ))
d223 1
a223 1
         XPOS  = X(J) 
d237 4
a240 2
         INUM = NUM(J)
         CALL POTEX(LUNPOS,CNUM(2:4),3,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d257 1
a257 1
  630       FORMAT (' ',2F10.3,1X,A4,2X,'..',102A1)   
d265 1
a265 1
  650       FORMAT (' ',F10.3,4X,6('-'),1X,A4,2X,'..',102A1)
@


1.9
log
@*** empty log message ***
@
text
@d151 2
a152 2
C     SET TEXT CHARACTARISTICS FOR LABEL
      ITSIZE = 12
d196 2
d199 1
@


1.8
log
@*** empty log message ***
@
text
@a54 1
      LENREC = 0
d56 1
a56 1
      CALL OPAUXFILE(.TRUE.,FILPOS,'ps',LUNPOS,LENREC,'N',
@


1.7
log
@used postscript
@
text
@d45 1
a45 2
      CHARACTER * 3  CVJ
      CHARACTER * 7  CVMIN,CVMAX
d110 1
a110 1
C..   PRINT GRAPH OF DENDROGRAM  
d146 2
a147 2
      XLL = -56.0  
      YLL = -22.0
d157 1
a157 1
C     PUT FILENAME AT TOP
d166 2
a167 2
      XPOS = -6.0
      YPOS = -21.0
d171 1
a171 1
      YPOS = -14.0
d174 5
a178 4
 
      YPOS = -17.0
      LINE = 'X1000 '
      CALL POTEX(LUNPOS,LINE,6,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d180 1
a180 1
      YPOS = -7.0
d185 2
a186 3
      WRITE(CVMIN,8805) VMIN
 8805 FORMAT(F6.3)
      CALL POTEX(LUNPOS,CVMIN,7,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d189 2
a190 2
      WRITE(CVMAX,8805)VMAX
      CALL POTEX(LUNPOS,CVMAX,7,XPOS,YPOS, ITSIZE,ITANGL,JUST)
d223 1
a223 1
         YPOS  = -21.0
d233 1
a233 1
         YPOS = -7.0
d237 2
d240 3
a242 2
C           LABEL THE LEAF WITH THE INDEX V(J) TIMES 1000
            YPOS = -14.0
d246 4
a249 1
            CALL POTEX(LUNPOS,CVJ,3,XPOS,YPOS, ITSIZE,ITANGL,JUST)
a255 1
            YPOS = -14.0
d276 1
a276 1
      DO 300 I=1,NKLA
d303 2
a304 1
  300 CONTINUE
@


1.6
log
@*** empty log message ***
@
text
@d4 2
a5 2
C  DENDRO.FOR-- ADAPTED FOR METAFILE FORMATION 3 NOVEMBER 86 al
C
a23 3
C*
C       CALLS:         CNFILE      CSOPEN       CSPSTX
C                      CSSCALT      CSPUSH
d30 1
a30 1
     &                 NO,NUM,NT,IV,IW,V,W,VMIN,VMAX)
a31 1
      INCLUDE 'CONSTG.INC'
d34 2
a35 1
      COMMON  /POLY/  HOLES
d37 1
a37 1
      COMMON /COMMUN/ DATA(3,NSIZE)
a38 2
C     LIMITED TO 200 LEAVES ON TREE BY NKMAX
      PARAMETER      (NKMAX = 200)
d42 2
a43 4
      INTEGER        IV( NKLA),NUM(NKLA),IW(NKLA),INUM
      DIMENSION      YT(NKMAX),X(NKMAX)
      LOGICAL        OLD,IOPEN,HOLES
      CHARACTER * 81 CSFILE
d46 1
a46 2
      CHARACTER * 7  DISP
      CHARACTER * 6  CVMIN,CVMAX
d49 1
a49 1
      CHARACTER * 1  NULL,LIGN(102),IBLAN,ISTAR
d51 11
a61 30
      DATA   LIG/102/,IBLAN/' '/ , ISTAR/'.'/
CNO_SAVE
      NULL=CHAR(0)

C     DON'T CHECK FOR COUNTER-CLOCKWISE CONTOURS
      HOLES = .FALSE.
      ICSPR  = -2

C..   FIND META-FILE NAME
      LUN    = 10
C     SET MAXIMUM NO. OF CONTOURS TO 200 ( I ESTIMATE THIS IS ENOUGH)
      MAXCNT = 200
      DISP   = 'UNK'
      CALL CNFILE(CSFILE,NLETC,'DENDROGRAM',
     &      DISP,DATEXC,LUN,IRTFLG)
      IF (IRTFLG .EQ. -1) RETURN
      
C     SET LINE AND TEXT PARAMETERS
      MARK   = 0
      ISHAP  = 0
      IPEN   = 0
      INTEN  = 9
      LINTP  = 0
      ITANGL = 0
      ITSIZE = 24
      IORN   = 0
      JUST   = 0
      IFON   = 0
      IPEN   = 0
      ZCOO   = 0.0
d81 1
a81 1
     #  'DESCRIPTION OF THE HIERARCHY CLASSES'     /' ',64('. ') / )
d104 1
a104 1
     #  /' ',36X,18(1X,A4)/' ',36X,18(1X,A4),/' ',36X,18(1X,A4 ))
d114 1
a114 1
     #        4X, '(SCALE  ',2F7.2,' )',//)                 
d127 1
a127 1
        LIGN(L)= IBLAN
d143 14
a156 1
      ISTFLG = 0
d159 1
a159 1
      YPOS = 110.0
d161 1
a161 1
      CALL CSPSTX(CSFILE,NLETC,LUN,NF,0,ITEXT)
d164 1
a164 1
      JUST = 2
a167 1

d170 1
a170 1
      CALL CSPSTX(LINE,6,LUN,NF,0,ITEXT)
d174 1
a174 1
      CALL CSPSTX(LINE,6,LUN,NF,0,ITEXT)
d178 1
a178 1
      CALL CSPSTX(LINE,6,LUN,NF,0,ITEXT)
d182 1
a182 1
      CALL CSPSTX(LINE,6,LUN,NF,0,ITEXT)
d185 3
a187 3
      WRITE(CVMIN,8805)VMIN
 8805 FORMAT(F5.3)
      CALL CSPSTX(CVMIN,6,LUN,NF,0,ITEXT)
d191 1
a191 1
      CALL CSPSTX(CVMAX,6,LUN,NF,0,ITEXT)
d193 1
a193 1
      YPOS = 50.0
d196 1
a196 1
      CALL CSPSTX(LINE,6,LUN,NF,0,ITEXT)
d199 1
d211 1
a211 1
            LIGN(II) = ISTAR
a219 4
C        SET ISTFLG TO PUSH LAST LABELS AND LINES
         IF (J .EQ. NKLA) ISTFLG = 1
C$         IF (J .EQ. 1) ISTFLG = 1

d230 2
a231 1
         CALL CSPSTX(CPOID(IT:4),5-IT,LUN,NF,0,ITEXT)
d236 1
a236 1
         CALL CSPSTX(CNUM(2:4),3,LUN,NF,0,ITEXT)
d244 1
a244 1
            CALL CSPSTX(CVJ,3,LUN,NF,0,ITEXT)
d253 1
a253 1
            CALL CSPSTX(LINE,3,LUN,NF,0,ITEXT)
d263 1
a263 1
            LIGN(LL)= IBLAN
a268 1
  
a270 10
C     PUSH A DUMMY CHAR. INTO TEXT SO THAT RIGHT BOTTEM MARGIN IS IMPROVED
      XPOS = XPOS + 8.0
      YPOS = -22.0
      LINE = ' '
      CALL CSPSTX(LINE,1,LUN,NF,0,ITEXT)

C     PUSH  DUMMY CHAR. INTO TEXT SO THAT LEFT BOTTEM MARGIN IS IMPROVED
      XPOS = -22.0
      CALL CSPSTX(LINE,1,LUN,NF,1,ITEXT)
      
d297 1
a297 1
  340    CALL CSPUSH(LUN,DATA,NDATA,NF,1,ICNTR)
d302 10
a311 18
      NDATA = 2
      DATA(1,1) = -3.0
      DATA(2,1) =  0.0
      DATA(1,2) = -1.0
      DATA(2,2) =  0.0
      CALL CSPUSH(LUN,DATA,NDATA,NF,1,ICNTR)

      DATA(2,1) = 100.0
      DATA(2,2) = 100.0
      CALL CSPUSH(LUN,DATA,NDATA,NF,1,ICNTR)

C..   SCALE THE META-FILE, IF ISERCH = 0 THEN SCALING IS DONE BY ONE PASS
      ISERCH = 0
      CALL CSSCALT(LUN,ISERCH)

C..   CLOSE THE META-FILE 
      CALL CSTRAP(LUN)
      CLOSE(LUN)
@


1.5
log
@*** empty log message ***
@
text
@d94 1
a94 1
      DO 10   J = JDEB,JFIN                                                   
d102 1
a102 1
   10 CONTINUE
d110 1
a110 1
      DO 50   J = JDEB,JFIN         
d136 1
a136 1
   50 CONTINUE                   
d143 1
a143 1
      DO 60  J = 1,NKLA
d146 1
a146 1
   60 CONTINUE
d148 1
a148 1
      DO 70  J = 1,NKLA   
d151 1
a151 1
   70 CONTINUE
d153 1
a153 1
      DO 80  L = 1,LIG                                                        
d155 1
a155 1
   80 CONTINUE
d217 2
a218 2
      DO 120  J = 1,NKLA
C      DO 120  J = NKLA,1,-1
d224 1
a224 1
         DO 90 II = 1,LX
d226 1
a226 1
   90    CONTINUE
d279 1
a279 1
         DO 100  LL = 1,LX
d281 1
a281 1
  100    CONTINUE
d286 2
a287 1
  120 CONTINUE
d312 1
a312 1
         DO 320 J = I+1,NKLA
d315 1
a315 1
  320    CONTINUE         
@


1.4
log
@nosave
@
text
@a34 1
#ifdef SP_UNIX
a35 4
#else
      INCLUDE 'COMMON1:CONSTG.INC'
#endif
#ifdef SP_UNIX
a36 3
#else
      INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif
d45 1
a45 1
      DIMENSION      VAL(JFIN),PK(JFIN),LIGN(102),V(NKLA),W(NKLA)
d57 1
a57 1
      CHARACTER * 1  NULL
@


1.3
log
@*** empty log message ***
@
text
@d68 1
@


1.2
log
@cpp_lines_added
@
text
@d225 1
a225 1
C$      DO 120  J = NKLA,1,-1
@


1.1
log
@Initial revision
@
text
@d35 3
d39 4
d44 1
@
