head	1.13;
access;
symbols
	pre_getangas:1.12
	GPL2010:1.12
	pre_GPL2010:1.11
	pre_var_equation:1.11
	pre_fftwrings:1.11
	pre_opfiles:1.11
	src:1.11
	best-code:1.11
	x-named-regs:1.11
	x:1.11
	v13-00:1.11
	pre_GPL:1.9
	prec_CA:1.9
	noindx:1.9
	Bproc:1.3
	oct21:1.2
	last77:1.2;
locks; strict;
comment	@c @;


1.13
date	2011.06.23.18.58.29;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.24.13.26.35;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.20.12.28;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.18.06.30;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.13.15.33.42;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.06.15.30.35;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.06.15.27.12;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.06.15.25.57;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.06.15.09.58;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.05.13.15.57;	author bimal;	state Exp;
branches;
next	1.3;

1.3
date	99.11.10.23.11.15;	author yuchen;	state Exp;
branches;
next	1.2;

1.2
date	97.10.10.18.59.53;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.08.27.14.03.48;	author pawel;	state Exp;
branches;
next	;


desc
@simple 2D PW
@


1.13
log
@comments, formatting
@
text
@
C++*********************************************************************
C
C PW2SR.F
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2011  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C PW2SR(Q,NSAM,NROW,MODE)
C
C PURPOSE: POWER SPECTRUM OF IMAGE
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE   PW2SR(Q,NSAM,NROW,MODE)

        DIMENSION    :: Q(NSAM+2-MOD(NSAM,2),NROW)
        CHARACTER*1  :: MODE
        LOGICAL      :: IFND

        NNNN = NSAM+2-MOD(NSAM,2)
        IFND = MOD(NROW,2).EQ.0
        NSC  = NSAM/2+1

        SCL = 2.0/FLOAT(NSAM)/FLOAT(NROW)

        DO J=1,NROW
           IF (MODE .EQ. '2')  THEN  ! THIS IS NEVER USED JUN 2011!
              DO I=NNNN-1,1,-2
                 Q(NNNN-1-(NNNN-1-I)/2,J)=
     &            SCL*SCL*(Q(I+1,J)*Q(I+1,J)+Q(I,J)*Q(I,J))
              ENDDO
           ELSE
              DO I=NNNN-1,1,-2
                 Q(NNNN-1-(NNNN-1-I)/2,J)=
     &            SCL*SQRT(Q(I+1,J)*Q(I+1,J)+Q(I,J)*Q(I,J))
              ENDDO
           ENDIF

           IF (MODE .EQ. 'L') CALL AL10(Q(NSAM/2,J),NSAM/2)
        ENDDO

        DO J=1,NROW/2
           JJ = J+NROW/2+MOD(NROW,2)
           DO I=NSC,NNNN-1
              TEMP    = Q(I,J)
              Q(I,J)  = Q(I,JJ)
              Q(I,JJ) = TEMP
           ENDDO
        ENDDO

        IF (.NOT.IFND)  THEN   !ODD ROW LENGTH
           DO I=NSC,NNNN-1
              TEMP = Q(I,NROW/2+1)
              DO J=NROW/2+1,NROW-1
                 Q(I,J) = Q(I,J+1)
              ENDDO
              Q(I,NROW) = TEMP
          ENDDO
        ENDIF   

        NSC = NNNN/2-1
        IF (IFND) THEN    ! EVEN ROW LENGTH
           JB = 2
           DO I=1,NSC
              II     = NNNN-I
              Q(I,1) = Q(II,1)
           ENDDO
        ELSE
           JB = 1
        ENDIF

        DO J=JB,NROW
           JJ = NROW-J+JB
           DO I=1,NSC
              II     = NNNN-I
              Q(I,J) = Q(II,JJ)
           ENDDO
        ENDDO

         Q(NSAM/2+1,NROW/2+1) = Q(NSAM/2,NROW/2)

         END
@


1.12
log
@GPL_2010
@
text
@d10 1
a10 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
a31 2
C IMAGE_PROCESSING_ROUTINE
C
d37 3
a39 3
        DIMENSION    Q(NSAM+2-MOD(NSAM,2),NROW)
        CHARACTER*1  MODE
        LOGICAL*1    IFND
d48 1
a48 1
           IF (MODE .EQ. '2')  THEN
d72 1
a72 1
        IF (.NOT.IFND)  THEN
d83 1
a83 1
        IF (IFND) THEN
@


1.11
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.10
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a39 1
C--************************************************************************
@


1.9
log
@cosmetic
@
text
@d2 1
d9 24
d47 1
@


1.8
log
@*** empty log message ***
@
text
@d1 2
a2 1
C
d4 1
a4 1
C++************************************************************************
d6 8
a13 1
C $$ PW2SR.FOR
d15 1
a15 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
C **************************************************************************
d17 1
a20 1
C        1         2         3         4         5         6         7
a21 1
C
d23 4
a26 5
C
C $$ PW2SR.FOR
C
        SUBROUTINE  PW2SR(Q,NSAM,NROW,MODE)
        DIMENSION   Q(NSAM+2-MOD(NSAM,2),NROW)
d28 1
a28 1
        LOGICAL*1 IFND
d31 19
a49 22
        IFND=MOD(NROW,2).EQ.0
        NSC=NSAM/2+1
C
C       DO  1  J=1,NROW
C1      CALL  REDLIN(LUN1,Q(1,J),NSAM,J)
C       INV=+1
C       CALL  FMRS_2(Q,NSAM,NROW,INV)
C
        SCL=2.0/FLOAT(NSAM)/FLOAT(NROW)
        DO    J=1,NROW
        IF(MODE.EQ.'2')  THEN
           DO    I=NNNN-1,1,-2
              Q(NNNN-1-(NNNN-1-I)/2,J)=
     &         SCL*SCL*(Q(I+1,J)*Q(I+1,J)+Q(I,J)*Q(I,J))
           ENDDO
        ELSE
           DO    I=NNNN-1,1,-2
              Q(NNNN-1-(NNNN-1-I)/2,J)=
     &         SCL*SQRT(Q(I+1,J)*Q(I+1,J)+Q(I,J)*Q(I,J))
           ENDDO
        ENDIF
           IF(MODE.EQ.'L')  CALL  AL10(Q(NSAM/2,J),NSAM/2)
d52 6
a57 6
        DO    J=1,NROW/2
           JJ=J+NROW/2+MOD(NROW,2)
           DO    I=NSC,NNNN-1
              TEMP=Q(I,J)
              Q(I,J)=Q(I,JJ)
              Q(I,JJ)=TEMP
d61 5
a65 5
        IF(.NOT.IFND)  THEN
           DO    I=NSC,NNNN-1
              TEMP=Q(I,NROW/2+1)
              DO    J=NROW/2+1,NROW-1
                 Q(I,J)=Q(I,J+1)
d67 1
a67 1
              Q(I,NROW)=TEMP
d71 6
a76 6
        NSC=NNNN/2-1
        IF(IFND)  THEN
           JB=2
           DO    I=1,NSC
              II=NNNN-I
              Q(I,1)=Q(II,1)
d79 1
a79 1
           JB=1
d81 6
a86 5
        DO    J=JB,NROW
           JJ=NROW-J+JB
           DO    I=1,NSC
              II=NNNN-I
              Q(I,J)=Q(II,JJ)
d89 3
a91 5
C
          Q(NSAM/2+1,NROW/2+1)=Q(NSAM/2,NROW/2)
C
C         DO  3  J=1,NROW
C3        CALL  WRTLIN(LUN2,Q(1,J),NSAM,J)
@


1.7
log
@*** empty log message ***
@
text
@d46 1
a46 1
     &          SCL*SCL*(Q(I+1,J)*(Q(I+1,J)+Q(I,J)*Q(I,J))
d51 1
a51 1
     &          SCL*SQRT(Q(I+1,J)*Q(I+1,J)+Q(I,J)*Q(I,J))
@


1.6
log
@*** empty log message ***
@
text
@d46 1
a46 1
               SCL*SCL*(Q(I+1,J)*(Q(I+1,J)+Q(I,J)*Q(I,J))
@


1.5
log
@option 2 added
@
text
@d43 1
a43 5
	IF(MODE.EQ.'2')  THEN
	   DO    I=NNNN-1,1,-2
	       SCL*SCL*(Q(I+1,J)*(Q(I+1,J)+Q(I,J)*Q(I,J))
	   ENDDO
	ELSE
d46 5
d53 1
a53 1
	ENDIF
@


1.4
log
@adapted to dynamical memory allocation
@
text
@d43 5
d52 1
d93 1
a93 1
C         IF(MODE.NE.'L')  Q(NSAM/2+1,NROW/1+1)=0.0
@


1.3
log
@a
@
text
@d18 1
d20 3
d27 41
a67 4
	SUBROUTINE  PW2SR(Q,NNNN,NSAM,NROW,MODE)
	DIMENSION   Q(NNNN,NROW)
	CHARACTER*1  MODE
	LOGICAL*1 IFND
d69 16
a84 13
	IFND=MOD(NROW,2).EQ.0
	NSC=NSAM/2+1
C
C	DO  1  J=1,NROW
C1	CALL  REDLIN(LUN1,Q(1,J),NSAM,J)
C	INV=+1
C	CALL  FMRS_2(Q,NSAM,NROW,INV)
C
	SCL=2.0/FLOAT(NSAM)/FLOAT(NROW)
	DO    J=1,NROW
	DO    I=NNNN-1,1,-2
	Q(NNNN-1-(NNNN-1-I)/2,J)=
     &		SCL*SQRT(Q(I+1,J)*Q(I+1,J)+Q(I,J)*Q(I,J))
a85 39
	IF(MODE.EQ.'L')  CALL  AL10(Q(NSAM/2,J),NSAM/2)
	ENDDO
C
	DO    J=1,NROW/2
	JJ=J+NROW/2+MOD(NROW,2)
	DO    I=NSC,NNNN-1
	TEMP=Q(I,J)
	Q(I,J)=Q(I,JJ)
	Q(I,JJ)=TEMP
	ENDDO
	ENDDO
C
	IF(.NOT.IFND)  THEN
	DO    I=NSC,NNNN-1
	TEMP=Q(I,NROW/2+1)
	DO    J=NROW/2+1,NROW-1
	Q(I,J)=Q(I,J+1)
	ENDDO
	Q(I,NROW)=TEMP
	ENDDO
	ENDIF	
C
	NSC=NNNN/2-1
	IF(IFND)  THEN
	JB=2
	DO    I=1,NSC
	II=NNNN-I
	Q(I,1)=Q(II,1)
	ENDDO
	ELSE
	JB=1
	ENDIF
	DO    J=JB,NROW
	JJ=NROW-J+JB
	DO    I=1,NSC
	II=NNNN-I
	Q(I,J)=Q(II,JJ)
	ENDDO
	ENDDO
@


1.2
log
@*** empty log message ***
@
text
@d27 1
a27 1
CNO_SAVE
@


1.1
log
@Initial revision
@
text
@d37 3
a39 3
	DO  101  J=1,NROW
	DO  102  I=NNNN-1,1,-2
102	Q(NNNN-1-(NNNN-1-I)/2,J)=
d41 3
a43 1
101	IF(MODE.EQ.'L')  CALL  AL10(Q(NSAM/2,J),NSAM/2)
d45 1
a45 1
	DO  100  J=1,NROW/2
d47 1
a47 1
	DO  100  I=NSC,NNNN-1
d50 3
a52 1
100	Q(I,JJ)=TEMP
d55 1
a55 1
	DO  103  I=NSC,NNNN-1
d57 5
a61 3
	DO  104  J=NROW/2+1,NROW-1
104	Q(I,J)=Q(I,J+1)
103	Q(I,NROW)=TEMP
d67 1
a67 1
	DO  106  I=1,NSC
d69 2
a70 1
106	Q(I,1)=Q(II,1)
d74 1
a74 1
	DO  107  J=JB,NROW
d76 1
a76 1
	DO  107  I=1,NSC
d78 3
a80 1
107	Q(I,J)=Q(II,JJ)
@
