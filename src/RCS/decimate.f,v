head	1.20;
access;
symbols
	healthdept_2018:1.20
	pre_getangas:1.19
	GPL2010:1.18
	pre_GPL2010:1.17
	pre_var_equation:1.17
	pre_fftwrings:1.16
	pre_opfiles:1.16
	src:1.16
	best-code:1.16
	x-named-regs:1.16
	x:1.16
	v13-00:1.16
	pre_GPL:1.14
	prec_CA:1.14
	noindx:1.13
	Bproc:1.12
	oct21:1.12
	last77:1.6;
locks; strict;
comment	@c @;


1.20
date	2018.10.03.14.34.04;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2010.11.24.15.09.26;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2010.06.24.13.25.23;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2009.02.02.19.05.33;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.20.43.25;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.18.33.49;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.20.21.09.56;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.11.14.08.35;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	99.09.17.15.42.55;	author pawel;	state Exp;
branches;
next	1.11;

1.11
date	99.09.17.15.34.40;	author pawel;	state Exp;
branches;
next	1.10;

1.10
date	99.09.17.15.14.52;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.06.11.16.39.06;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.06.11.13.56.54;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	99.06.04.12.43.20;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.03.12.23.13.37;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	99.03.12.22.31.35;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	99.03.12.22.28.05;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	99.03.12.22.05.30;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	99.03.12.16.47.04;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	99.03.12.16.12.16;	author pawel;	state Exp;
branches;
next	;


desc
@@


1.20
log
@email_health_dept
@
text
@C ++********************************************************************
C                                                                      *
C DECIMATE.F                                                           *
C                  OPFILEC                       ARDEAN LEITH   FEB 03 *
C                  CHECKED RANGES, REWRITE       ARDEAN LEITH   FEB 09 *
C                  SETPRS                        ARDEAN LEITH   NOV 10 *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      
C  DECIMATE
C
C  PURPOSE: DECIMATE 2-D OR 3-D REAL IMAGE  BY SKIPPING PIXELS  OR BY
C           AVERAGING OF PIXELS               
C                                                                 
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

	SUBROUTINE DECIMATE

	INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC' 
 
        CHARACTER(LEN=MAXNAM)      :: FILNAM
	CHARACTER(LEN=1)           :: NULL = CHAR(0)
	REAL, ALLOCATABLE          :: Q(:),W(:)

	INTEGER, PARAMETER         :: LUN1 = 50
	INTEGER, PARAMETER         :: LUN2 = 51

	MAXIM = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

	CALL FILERD(FILNAM,NLETI,NULL,'OUTPUT',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 999

	MX = 0
	MY = 0
        MZ = 0
        IF (IFORM .EQ. 1) THEN
           CALL RDPRIS(MX,MY,NOT_USED,
     &                'DECIMATION FACTORS FOR X & Y',IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 999
	   MZ = 1
        ELSE
           CALL RDPRI3S(MX,MY,MZ, NOT_USED,
     &                 'DECIMATION FACTORS FOR X, Y, & Z',IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 999

	   IF (MZ .LE. 0 ) THEN
              CALL RDPRI1S(MZ,NOT_USED,'DECIMATION FACTOR FOR Z',IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 999
          ENDIF
	ENDIF
        IF (IRTFLG .NE. 0) GOTO 999

	IF (MY .EQ.0) MY = MX
	IF (MZ .EQ.0) MZ = MX

	IF (MX <= 0) THEN
           CALL  ERRT(102,'ILLEGAL X DECIMATION FACTOR',MX)
           GOTO 999
	ELSEIF (MY <= 0) THEN
           CALL  ERRT(102,'ILLEGAL Y DECIMATION FACTOR',MY)
           GOTO 999
	ELSEIF (MZ <= 0) THEN
           CALL  ERRT(102,'ILLEGAL Z DECIMATION FACTOR',MZ)
           GOTO 999
	ENDIF

	NSAMP   = NSAM   / MX
	NROWP   = NROW   / MY
	NSLICEP = NSLICE / MZ

	MAXIM = 0
        CALL OPFILEC(LUN1,.FALSE.,FILNAM,LUN2,'U',IFORM,
     &               NSAMP,NROWP,NSLICEP,
     &               MAXIM,NULL,.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 999

	ALLOCATE(Q(NSAM),STAT=IRTFLG)
	IF (IRTFLG .NE. 0) THEN
           CALL  ERRT(46,'DC, Q',NSAM)
           GOTO 999
        ENDIF

	IF (FCHAR(4:4) .EQ. 'S')  THEN
C          DECIMATE BY AVERAGING PIXELS
	   ALLOCATE(W(NSAMP), STAT=IRTFLG)
	   IF (IRTFLG .NE. 0) THEN
               CALL  ERRT(46,'DC, W',NSAMP)
               GOTO 998
           ENDIF

	   CALL DECIMS(LUN1,LUN2,Q,W,
     &		 NSAM,NROW,NSLICE, NSAMP,NROWP, MX,MY,MZ)
	   IF (ALLOCATED(W)) DEALLOCATE(W)

	ELSE
C          SIMPLE DECIMATION
	   CALL DECIM(LUN1,LUN2,Q,
     &		NSAM,NROW,NSLICE,NSAMP,NROWP, MX,MY,MZ)
	ENDIF

C       FILE HEADER FOR PIXSIZ HAS CHANGED
        SCALEX = FLOAT(NSAM)   / FLOAT(NSAMP)
        SCALEY = FLOAT(NROW)   / FLOAT(NROWP)
        SCALEZ = FLOAT(NSLICE) / FLOAT(NSLICEP) 
        !write(6,*) ' set scaless:',scalex,scaley,scalez

        SCALET  = SCALEX
        IF (SCALEY .NE. SCALEX) SCALET = 0.0   ! X NOT SAME AS Y
        IF (NSLICE > 1 .AND. SCALEZ .NE. SCALEX) SCALET = 0.0

C       UPDATE THE INCORE HEADER VALUE & FILE HEADER FOR PIXSIZ
        CALL SETPRMS(LUN2, SCALET,IRTFLG)

        !write(6,*) ' set scale:',scalet

998     IF (ALLOCATED(Q)) DEALLOCATE(Q)
999     CLOSE(LUN1)
	CLOSE(LUN2)

	END

C       --------------------------- DECIMS ----------------------------

	SUBROUTINE DECIMS(LUN1,LUN2,BI,BO,
     &		    NSAM,NROW,NSLICE, NSAMP,NROWP, MX,MY,MZ)

	REAL :: BI(NSAM) ,BO(NSAMP)
        
        FACM = 1.0 / REAL(MX * MY * MZ)

        DO K=1,NSLICE-MZ+1,MZ
           DO J=1,NROW-MY+1,MY 

              BO = 0.0             ! ZEROS WHOLE ARRAY

              DO KT=1,MZ
                 DO JT=1,MY
                    IRECIN = J + JT - 1 + NROW * (K+KT-2)
                    CALL REDLIN(LUN1,BI,NSAM,IRECIN)

                    DO I=1,NSAM-MX+1,MX
                       DO IT=0,MX-1
                          ILOC     = (I+MX-1)/MX
                          BO(ILOC) = BO(ILOC) +  BI(I+IT)
                       ENDDO
                    ENDDO
                 ENDDO
              ENDDO

              BO = BO * FACM      ! ARRAY OPERATION

              IRECOUT = (J+MY-1)/MY + NROWP * ((K+MZ-1)/MZ-1)
              CALL WRTLIN(LUN2,BO,NSAMP,IRECOUT)

           ENDDO
        ENDDO

	END	

C       --------------------------- DECIM ----------------------------

	SUBROUTINE  DECIM(LUN1,LUN2,BI,
     &		NSAM,NROW,NSLICE,NSAMP,NROWP,MX,MY,MZ)

	REAL ::  BI(NSAM)

        DO K=1,NSLICE-MZ+1,MZ
           DO J=1,NROW-MY+1,MY
              CALL  REDLIN(LUN1,BI,NSAM,J+NROW*(K-1))

              DO I=1,NSAM-MX+1,MX
                 BI((I+MX-1)/MX) = BI(I)
              ENDDO

              IRECOUT = (J+MY-1)/MY + NROWP * ((K+MZ-1)/MZ-1)
              CALL WRTLIN(LUN2,BI,NSAMP,IRECOUT)
           ENDDO
        ENDDO

        END	
@


1.19
log
@SETPRS for pixsiz
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.18
log
@GPL_2010
@
text
@d4 3
a6 3
C                  OPFILEC                         FEB 03 ARDEAN LEITH
C                  CHECKED RANGES, REWRITE         FEB 09 ARDEAN LEITH
C                                                      
d28 2
a29 2
C                                                                      *
C  DECIMATE(MAXMEM)
d31 2
a32 3
C  PURPOSE: 
C    DECIMATE 2-D OR 3-D REAL IMAGE                                    *
C    DECIMATE 2-D OR 3-D REAL IMAGE BY AVERAGING OF PIXELS               
d42 3
a44 3
        CHARACTER(LEN=MAXNAM)           :: FINPIC
	CHARACTER*1                     :: NULL
	REAL, ALLOCATABLE, DIMENSION(:) :: Q,W
d46 2
a47 3
	DATA  INPIC/50/,IOPIC/51/

	NULL  = CHAR(0)
d50 1
a50 1
        CALL OPFILEC(0,.TRUE.,FINPIC,INPIC,'O',IFORM,NSAM,NROW,NSLICE,
d52 1
d54 2
a55 2
	CALL FILERD(FINPIC,NLETI,NULL,'OUTPUT',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
d61 3
a63 1
           CALL RDPRIS(MX,MY,NOT_USED,'DECIMATION FACTORS X, Y',IRTFLG)
d67 1
a67 1
     &                 'DECIMATION FACTORS X, Y, & Z',IRTFLG)
d71 3
a73 2
              CALL RDPRI1S(MZ,NOT_USED,'DECIMATION FACTOR Z',IRTFLG)
           ENDIF
d77 11
a87 2
	IF (MX.LE.0 .OR. MY.LE.0 .OR. MZ.LE.0) THEN
           CALL  ERRT(101,'ILLEGAL DECIMATION FACTOR',NE)
d96 1
a96 1
        CALL OPFILEC(INPIC,.FALSE.,FINPIC,IOPIC,'U',IFORM,
d115 1
a115 1
	   CALL DECIMS(INPIC,IOPIC,Q,W,
d118 1
d121 1
a121 1
	   CALL DECIM(INPIC,IOPIC,Q,
d125 15
d141 2
a142 2
999     CLOSE(INPIC)
	CLOSE(IOPIC)
d148 1
a148 1
	SUBROUTINE DECIMS(INPIC,IOPIC,BI,BO,
d163 1
a163 1
                    CALL REDLIN(INPIC,BI,NSAM,IRECIN)
d177 1
a177 1
              CALL WRTLIN(IOPIC,BO,NSAMP,IRECOUT)
d186 1
a186 1
	SUBROUTINE  DECIM(INPIC,IOPIC,BI,
d193 1
a193 1
              CALL  REDLIN(INPIC,BI,NSAM,J+NROW*(K-1))
d200 1
a200 1
              CALL WRTLIN(IOPIC,BI,NSAMP,IRECOUT)
@


1.17
log
@rewrite
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.16
log
@GPL License fixed
@
text
@d5 2
a6 1
C                                                                      *
d9 1
a9 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d34 5
a38 1
C                                                                      *
d42 1
a42 1
	SUBROUTINE  DECIMATE
d47 3
a49 3
        CHARACTER(LEN=MAXNAM)   ::  FINPIC
	CHARACTER*1   NULL
	REAL, ALLOCATABLE, DIMENSION(:) ::  Q,W
d51 1
a51 1
	DATA  INPIC/98/,IOPIC/97/
d53 1
a53 1
	NULL = CHAR(0)
d60 1
d62 16
a77 1
	CALL RDPRMI(MX,MY,NOT_USED,'DECIMATION FACTORS X, Y')
d79 3
a81 5
	IF (IFORM .EQ. 3) THEN
	   CALL RDPRMI(MZ,IDUM,NOT_USED,'DECIMATION FACTOR Z')
	ELSE
	   MZ     = 1
	   NSLICE = 1
d84 3
a86 9
	NSAMP   = NSAM/MX
	NROWP   = NROW/MY
	NSLICEP = NSLICE/MZ

	IF (NSAMP.LE.0 .OR. NROWP.LE.0 .OR. NSLICEP.LE.0)  THEN
           CLOSE(INPIC)
           CALL  ERRT(36,'DC',NE)
           RETURN
	ENDIF
d88 5
a92 5
	MAXIM=0
        CALL  OPFILEC(INPIC,.FALSE.,FINPIC,IOPIC,'U',IFORM,
     &             NSAMP,NROWP,NSLICEP,
     &             MAXIM,NULL,.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
d95 16
a110 8
	IF (IRTFLG.NE.0) CALL  ERRT(46,'DC, A',IER)

	IF (FCHAR(4:4).EQ.'S')  THEN
	   ALLOCATE(W(NSAMP),STAT=IRTFLG)
	   IF(IRTFLG.NE.0) CALL  ERRT(46,'DC, W',IER)
	   CALL  DECIMS(INPIC,IOPIC,Q,W,
     &		NSAM,NROW,NSLICE,NSAMP,NROWP,MX,MY,MZ)
	   DEALLOCATE(W)
d112 3
a114 2
	   CALL  DECIM(INPIC,IOPIC,Q,
     &		NSAM,NROW,NSLICE,NSAMP,NROWP,MX,MY,MZ)
d116 3
a118 2
	DEALLOCATE(Q)
	CLOSE(INPIC)
d120 1
d123 1
d125 2
d128 24
a151 2
	SUBROUTINE  DECIMS(INPIC,IOPIC,BI,BO,
     &		NSAM,NROW,NSLICE,NSAMP,NROWP,MX,MY,MZ)
d153 2
a154 1
	DIMENSION  BI(NSAM),BO(NSAMP)
a155 12
	DO    K=1,NSLICE-MZ+1,MZ
	 DO    J=1,NROW-MY+1,MY
	  BO=0.0
	   DO    KT=1,MZ
	     DO    JT=1,MY
	      CALL  REDLIN(INPIC,BI,NSAM,J+JT-1+NROW*(K+KT-2))
	       DO    I=1,NSAM-MX+1,MX
	         DO  IT=0,MX-1
	           BO((I+MX-1)/MX)=BO((I+MX-1)/MX)+BI(I+IT)
	         ENDDO
               ENDDO
             ENDDO
d157 2
a158 4
	  BO=BO/MX/MY/MZ
	 CALL  WRTLIN(IOPIC,BO,NSAMP,(J+MY-1)/MY+NROWP*((K+MZ-1)/MZ-1))
	 ENDDO
	ENDDO
d161 1
d166 9
a174 1
	DIMENSION  BI(NSAM)
d176 6
a181 10
	DO    K=1,NSLICE-MZ+1,MZ
	 DO    J=1,NROW-MY+1,MY
	 CALL  REDLIN(INPIC,BI,NSAM,J+NROW*(K-1))
	  DO    I=1,NSAM-MX+1,MX
	   BI((I+MX-1)/MX)=BI(I)
          ENDDO
	 CALL  WRTLIN(IOPIC,BI,NSAMP,(J+MY-1)/MY+NROWP*((K+MZ-1)/MZ-1))
	 ENDDO
	ENDDO
	END	
@


1.15
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.14
log
@opfilec
@
text
@d8 24
@


1.13
log
@nloop,iloop_removed
@
text
@d4 1
d19 1
d23 3
a25 1
	CHARACTER*80  FINPIC
d34 1
a34 1
        CALL OPFILE(.TRUE.,FINPIC,INPIC,'O',IFORM,NSAM,NROW,NSLICE,
d36 1
d38 1
d40 1
d47 1
d51 1
d57 1
d59 2
a60 1
        CALL  OPFILE(.FALSE.,FINPIC,IOPIC,'U',IFORM,NSAMP,NROWP,NSLICEP,
d62 2
d65 6
a70 5
	IF(IRTFLG.NE.0) CALL  ERRT(46,'DC, A',IER)
	IF(FCHAR(4:4).EQ.'S')  THEN
	 ALLOCATE(W(NSAMP),STAT=IRTFLG)
	 IF(IRTFLG.NE.0) CALL  ERRT(46,'DC, W',IER)
	 CALL  DECIMS(INPIC,IOPIC,Q,W,
d72 1
a72 1
	 DEALLOCATE(W)
d74 1
a74 1
	 CALL  DECIM(INPIC,IOPIC,Q,
d81 3
a83 1
C
d86 1
d88 1
a88 1
c
d107 2
a108 1
C
d111 1
d113 1
a113 1
C
@


1.12
log
@*** empty log message ***
@
text
@d33 1
a33 1
	CALL RDPRMI(MX,MY,NLOOP,ILOOP,'DECIMATION FACTORS X, Y')
d35 1
a35 1
	   CALL RDPRMI(MZ,IDUM,NLOOP,ILOOP,'DECIMATION FACTOR Z')
@


1.11
log
@*** empty log message ***
@
text
@d101 1
a101 1
	 CALL  WRTLIN(IOPIC,BO,NSAMP,(J+MY-1)/MY+NROWP*((K+MZ-1)/MZ-1))
@


1.10
log
@DC S
@
text
@a47 5
	IF (NSAM+NSAMP .GT. MAXMEM)  THEN
           CLOSE(INPIC)
           CALL  ERRT(6,'DC',NE)
           RETURN
	ENDIF
@


1.9
log
@opfile
@
text
@d18 1
a18 1
	SUBROUTINE  DECIMATE(MAXMEM)
d23 1
a23 1
        COMMON        Q(1)
d56 6
a61 1
	CALL  DECIM(INPIC,IOPIC,Q(1),Q(1+NSAM),
d63 6
d72 2
a73 3


	SUBROUTINE  DECIM(INPIC,IOPIC,BI,BO,
d76 1
a76 1

d79 1
a79 3
	   DO    I=1,NSAMP
	     BO(I)=0.0
	   ENDDO
d90 16
a105 3
	   DO    I=1,NSAMP
	     BO(I)=BO(I)/MX/MY/MZ
	   ENDDO
@


1.8
log
@*** empty log message ***
@
text
@d30 1
a30 1
        CALL OPFIL(.TRUE.,FINPIC,INPIC,'O',NSAM,NROW,NSLICE,
d54 1
a54 1
        CALL  OPFILE(.FALSE.,FINPIC,IOPIC,'U',NSAMP,NROWP,NSLICEP,
@


1.7
log
@cosmetic
@
text
@d30 1
a30 1
        CALL OPFIL(.TRUE.,FINPIC,INPIC,'O',IFORM,NSAM,NROW,NSLICE,
d54 1
a54 1
        CALL  OPFILE(.FALSE.,FINPIC,IOPIC,'U',IFORM,NSAMP,NROWP,NSLICEP,
a59 1
        RETURN
a87 1
        RETURN
@


1.6
log
@*** empty log message ***
@
text
@d1 17
d19 1
d21 1
a21 1
	CHARACTER*80      FINPIC
d23 2
a24 1
        COMMON    Q(1)
d26 5
a30 3
C
	MAXIM=0
        CALL OPFIL(.TRUE.,FINPIC,INPIC,'O',NSAM,NROW,NSLICE,
a31 1
	NULL=CHAR(0)
d33 3
a35 3
	CALL RDPRMI(MX,MY,NLOOP,ILOOP,'Decimation factors X, Y')
	IF(IFORM.EQ.3) THEN
	   CALL RDPRMI(MZ,IDUM,NLOOP,ILOOP,'Decimation factor Z')
d37 2
a38 2
	   MZ=1
	   NSLICE=1
d40 7
a46 7
	NSAMP=NSAM/MX
	NROWP=NROW/MY
	NSLICEP=NSLICE/MZ
	IF(NSAMP.LE.0 .OR. NROWP.LE.0 .OR. NSLICEP.LE.0)  THEN
                CLOSE(INPIC)
                CALL  ERRT(36,'DC',NE)
                RETURN
d48 4
a51 4
	IF(NSAM+NSAMP.GT.MAXMEM)  THEN
                CLOSE(INPIC)
                CALL  ERRT(6,'DC',NE)
                RETURN
d54 1
a54 1
        CALL  OPFIL(.FALSE.,FINPIC,IOPIC,'U',NSAMP,NROWP,NSLICEP,
d60 1
d62 2
d67 1
a67 1
C
d89 1
@


1.5
log
@*** empty log message ***
@
text
@d37 1
a37 1
     &		NSAM,NROW,NSLICE,NSAMP,NROWP,NSLICEP,MX,MY,MZ)
d42 1
a42 1
     &		NSAM,NROW,NSLICE,NSAMP,NROWP,NSLICEP,MX,MY,MZ)
d45 2
a46 2
	DO    K=1,NSLICE,MZ
	 DO    J=1,NROW,MY
d53 1
a53 1
	       DO    I=1,NSAM,MX
@


1.4
log
@*** empty log message ***
@
text
@d13 1
a13 1
	CALL RDPRMI(MX,MY,NLOOP,ILOOP,'Decimation factors Y, Y')
@


1.3
log
@*** empty log message ***
@
text
@d63 1
a63 1
	 CALL  WRTLIN(IOPIC,BO,NSAMP,(J+MY-1)/MY+NROWP*(K+MZ-2)/MZ)
@


1.2
log
@DC
@
text
@d52 1
a52 1
	      CALL  REDLIN(INPIC,BI,NSAM,J+JT-1+NROW*(K+KT-1))
d63 1
a63 1
	 CALL  WRTLIN(IOPIC,BO,NSAMP,(J+MY-1)/MY+NROWP*(K+MZ-1)/MZ)
@


1.1
log
@Initial revision
@
text
@d4 1
@
