head	1.7;
access;
symbols
	pre_getangas:1.7
	GPL2010:1.7
	pre_GPL2010:1.6
	pre_var_equation:1.6
	pre_fftwrings:1.5
	pre_opfiles:1.5
	src:1.5
	best-code:1.5
	x-named-regs:1.5
	x:1.5
	v13-00:1.5
	pre_GPL:1.3
	prec_CA:1.3
	noindx:1.2;
locks; strict;
comment	@c @;


1.7
date	2010.06.24.13.25.19;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2008.12.19.15.06.13;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.17.20.21.24;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.17.18.13.56;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.20.21.41.12;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.29.19.53.15;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.04.18.40.32;	author leith;	state Exp;
branches;
next	;


desc
@@


1.7
log
@GPL_2010
@
text
@
C ++********************************************************************
C
C COPYEMI                     MODIFIED FROM COPYCCP4 FEB 02 ArDean Leith         
C                             NPIX8                  DEC 08 ArDean Leith
C         
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C 
C COPYEMI(LUNSPI,LUNNEW)
C                                                                      
C PURPOSE: CONVERTS EMI IMAGES TO SPIDER IMAGES
C
C NOTES: DATA IN EMI FILE:
C	 IMODE   0 : IMAGE STORED AS INTEGER*1  
C                1 : IMAGE STORED AS INTEGER*2
C                2 : IMAGE STORED AS REALS
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE COPYEMI(LUNSPI,LUNEMI)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'
 
        INTEGER * 1     IDATA(4)
        REAL *4         DATA
        EQUIVALENCE(DATA,IDATA)

        INTEGER * 2     I2BUF(1000)
        COMMON          BUF(NBUFSIZ),I2BUF

        CHARACTER(LEN=MAXNAM) :: FILNAM,EMIFILE
	CHARACTER (LEN=1)     :: NULL
        LOGICAL               :: FLIP,FOLD
        INTEGER * 8           :: NPIX8

        NULL = CHAR(0)

C       OPEN EMI FILE AS DIRECT ACCESS, UNFORMATTED, RECL= 2000 BYTES
        LENREC = 2000
        CALL OPAUXFILE(.TRUE.,EMIFILE,DATEXC,LUNEMI,LENREC,'O',
     &                       'EMI INPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
 
        READ(LUNEMI,REC=1,IOSTAT=IERR) I2BUF
        IF (IERR .NE. 0) THEN
           WRITE(NOUT,*) '*** ERROR: (',IERR,') READING EMI HEADER'
           CALL ERRT(100,'COPYEMI',NE)
           GOTO 9999
        ENDIF

	CALL GETHEDEMI(I2BUF,NSAM,NROW,NSLICE,IMODE,
     &                 FLIP,FOLD,IOFFSET,IRTFLG)

C       OPEN SPIDER OUTPUT FILE	
        IFORM  = 1
        IF (NSLICE .GT. 1) IFORM = 3
        MAXIM  = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNSPI,'U',IFORM,NSAM,NROW,NSLICE,
     &             MAXIM,'SPIDER OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999


C       EXTRACT DATA FROM EMI FILE AFTER HEADER & PUT IN SPIDER FILE

C       NPIX8 = TOTAL NUMBER OF PIXELS IN EMI FILE
        NPIX8 = NSAM * NROW 
        NPIX8 = NPIX8 * NSLICE

C       CLOSE EMI FILE
        CLOSE(LUNEMI)

C       REOPEN EMI FILE AS NSAM*IMODE/8 BYTE, DIRECT ACCESS, UNFORMATTED
        LENOPEN = NSAM * (IMODE / 8)
        CALL OPAUXFILE(.FALSE.,EMIFILE,NULL,LUNEMI,LENOPEN,'O',
     &                    ' ',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999

        IF (IMODE .EQ. 8) THEN
C          8 BIT INTEGER EMI INPUT FILE

           CALL RAW8TOSPI(LUNEMI,LUNSPI,NSAM,NPIX8,IOFFSET,.TRUE.,
     &                   LENOPEN,BUF,IRTFLG)

        ELSEIF (IMODE .EQ. 16) THEN
C          16 BIT INTEGER EMI FILE (HEADER LENGTH DIVISABLE BY TWO)
           CALL RAW16TOSPI(LUNEMI,LUNSPI,NSAM,NPIX8,IOFFSET,FLIP,
     &                   FOLD,LENOPEN,BUF,IRTFLG)

        ELSEIF (IMODE .EQ. 32) THEN
C          32 BIT FOATING POINT IMAGE
           NFLIP   = -1
           IOFFSET = 802
           FOLD    = .FALSE.
           FLIP    = .TRUE.
           CALL RAW32TOSPI(LUNEMI,LUNSPI,NSAM,NPIX8,IOFFSET,
     &                    NFLIP,LENOPEN,BUF,IRTFLG)

C          SLOWER ALTERNATIVE (NEED TO OPEN WITH LENOPEN + 1)
C          CALL RAWTOSPI(LUNEMI,LUNSPI,NSAM,NPIX8,IOFFSET,
C    &                    IMODE,FOLD,FLIP,IDUM,IRTFLG)

        ELSE
           CALL ERRT(102,'CAN NOT CONVERT EMI MODE',IMODE)
        ENDIF


9999    CLOSE(LUNSPI)
        CLOSE(LUNEMI)

        RETURN
        END

C ------------------------ FOLDNFLIP  -------------------------------

      SUBROUTINE FOLDNFLIP(I1IN,I1OUT)

C     FOLDS NEGATIVES AND ASSIGNS 11IN TO I1OUT AND FLIPS BYTES 
C     WITHIN WORD

      INTEGER * 1    I1IN(2),I1OUT(2)

      I1OUT(1) = I1IN(2)
      IF (I1OUT(1) .LT. 0) I1OUT(1) = 256 + I1OUT(1)

      I1OUT(2) = I1IN(1)
      IF (I1OUT(2) .LT. 0) I1OUT(2) = 256 + I1OUT(2)

      RETURN
      END


C ++********************************************************************
C                                                                      *
C  GETHEDEMI                                                           *            *
C                                                                      *
C **********************************************************************
C **********************************************************************
C                                                                      *
C  GETHEDEMI(HEADBUF,NSAM,NROW,NSLICE,IMODE,DMIN,DMAX,
C             DMEAN,RMS,NSYMBT,FLIP,MACHST,IRTFLG)
C                                                                      *
C  PURPOSE:     DECODE EMISPEC HEADER                      *                                          *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C MAP/IMAGE HEADER FORMAT
C 
C 	LENGTH = 1024 BYTES, ORGANIZED AS 56 LONG WORDS 
C 
C  1	NSAM            # OF COLUMNS 
C  2	NROW		# OF ROWS
C  3	NSLICE          # OF SECTIONS 	
C  4	IMODE		 32	IMAGE : 32-BIT REALS			*
C 
C 		DATA RECORDS FOLLOW.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	SUBROUTINE GETHEDEMI(I2BUF,NSAM,NROW,NSLICE,
     &                       IMODE,FLIP,FOLD,IOFFSET,IRTFLG)

        INCLUDE 'CMBLOCK.INC'

        INTEGER * 2               I2BUF(*),I2FLIP
        LOGICAL ::                BIGENDARCH,BIGENDED,BIGENDFILE
        LOGICAL ::                FLIP,FOLD

C       GET CURRENT ARCHITECTURE ENDED-NESS
        BIGENDARCH = BIGENDED(0)
 
C       GET CURRENT FILE ENDED-NESS FLAG

        IMODE    = 32
        FOLD    = .FALSE.
        FLIP    = .TRUE.
        IOFFSET =  802

        CALL FOLDNFLIP(I2BUF(396),I2FLIP)
        NSAM = I2FLIP

        CALL FOLDNFLIP(I2BUF(398),I2FLIP)
        NROW = I2FLIP

        NSLICE  = 1
	 
C       WRITE OUT HEADER INFORMATION
        IF (VERBOSE) THEN    	
	   WRITE(NOUT,1000) NSAM,NROW,NSLICE,IMODE,IOFFSET

1000	   FORMAT(/
     &     7X,'Number of columns, rows, sections ........ ',3I6/
     &     7X,'Mode ..................................... ',I6/
     &     7X,'Header offset ............................ ',3I6//)


        ENDIF

	RETURN
        END

#ifdef NEVER
        DO I=1,NHEADER/2
            CALL FOLDNFLIP(I2BUF(I),I2FLIP(i))
        END DO

        DO I = 1,NHEADER/2
           IF (I2FLIP(I) .EQ. 1024) 
     &         WRITE(6,*) 'I2FLIP(',I,'): ',I2FLIP(I),I2FLIP(I+1),
     &                     I2FLIP(I+2),I2FLIP(I+3)
           IF (I2FLIP(I) .EQ. 1026) 
     &         WRITE(6,*) 'I2FLIP(',I,'): ',I2FLIP(I),I2FLIP(I+1),
     &                     I2FLIP(I+2),I2FLIP(I+3)
        ENDDO
#endif       


C
@


1.6
log
@*** empty log message ***
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
a158 23
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
C=*                                                                    *
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* This program is distributed in the hope that it will be useful,    *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
C=* General Public License for more details.                           *
C=*                                                                    *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
C=*                                                                    *
@


1.5
log
@GPL License fixed
@
text
@d5 2
a6 1
C                                         
d9 1
a9 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d39 2
a40 2
C               1 : IMAGE STORED AS INTEGER*2
C               2 : IMAGE STORED AS REALS
a49 2
        COMMON /IOERR/  IERR

d58 3
a60 2
	CHARACTER (LEN=1) ::     NULL
        LOGICAL ::               FLIP,FOLD
a62 1
        IERR = 0
d91 3
a93 2
C       NPIX = TOTAL NUMBER OF PIXELS IN EMI FILE
        NPIX = NSAM * NROW * NSLICE
d107 1
a107 1
           CALL RAW8TOSPI(LUNEMI,LUNSPI,NSAM,NPIX,IOFFSET,.TRUE.,
d112 1
a112 1
           CALL RAW16TOSPI(LUNEMI,LUNSPI,NSAM,NPIX,IOFFSET,FLIP,
d121 1
a121 1
           CALL RAW32TOSPI(LUNEMI,LUNSPI,NSAM,NPIX,IOFFSET,
d125 1
a125 1
C          CALL RAWTOSPI(LUNEMI,LUNSPI,NSAM,NPIX,IOFFSET,
@


1.4
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a162 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d166 1
a166 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a185 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.3
log
@opfilec
@
text
@d8 24
d171 24
@


1.2
log
@*** empty log message ***
@
text
@d68 1
a68 1
        CALL OPFILE(.TRUE.,FILNAM,LUNSPI,'U',IFORM,NSAM,NROW,NSLICE,
@


1.1
log
@Initial revision
@
text
@d95 1
a95 3
           MSB = 1
           IF (FLIP) MSB = 2
           CALL RAW16TOSPI(LUNEMI,LUNSPI,NSAM,NPIX,IOFFSET,MSB,
@
