head	1.7;
access;
symbols
	best-code:1.7
	x-named-regs:1.6
	x:1.6
	v13-00:1.6
	pre_GPL:1.5
	prec_CA:1.5
	noindx:1.5
	Bproc:1.5
	oct21:1.5
	last77:1.4;
locks; strict;
comment	@c @;


1.7
date	2006.03.07.19.50.57;	author leith;	state dead;
branches;
next	1.6;

1.6
date	2005.10.17.20.56.42;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.10.19.12.52.07;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	98.01.28.19.54.07;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.10.10.18.58.18;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.08.36;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.07;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.7
log
@unused now
@
text
@ 
C++*********************************************************************
C
C
C **********************************************************************
C *  AUTHOR :  MAHIEDDINE LADJADJ                                          *
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
C=*                                                                    *
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* This program is distributed in the hope that it will be useful,    *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
C=* General Public License for more details.                           *
C=*                                                                    *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
C=*                                                                    *
C **********************************************************************
C
C RECONSTITUTES  IMAGES USING COORDINATES STORED IN FILES (IMC***, PIX***)
C
C NIMA          NUMBER OF ACTIVE IMAGES
C NPIX          NUMBER OF ACTIVE PIXELS
C NFAC          NUMBER OF FACTORS USED IN THE ANALYSIS
C SUMP          TOTAL WEIGHT
C PIA           AVERAGE OF RECONSTITUTED IMAGE (SUPPLIED)
C RIM(NPIX)     OUTPUT IMAGE
C CP(NPIX,NFAC) PIXEL COOS AS NEEDED BY SRIPE
C CI(NFAC)      IMAGE COOS
C D(NFAC)       EIGENVALUES AS NEEDED BY SRIPE
C PJ(I)         AVERAGE OF INDIVIDUEL IMAGE.
C SDV(I)        STANDARD DEVIATION
C
C++*********************************************************************
  
        SUBROUTINE PCA_REMAKE(J, NIMA, NPIX, NF, NV, NFAC,
     &                     PIA, RIM, CP, CI, D, PJ, ADD_AVRG)

        DIMENSION RIM(NPIX), CP(NPIX,NFAC), CI(NIMA,NFAC), D(NFAC)
        DIMENSION PJ(NPIX), NV(NF)
        REAL SUM

        INCLUDE 'CMBLOCK.INC'

        CHARACTER *1 ADD_AVRG

        SUM = 0

C       LOOP OVER ALL PIXELS

        DO I = 1, NPIX

C	PUT BACK THE AVERAGES TO THE ORIGINAL DATA IF(PCA_AVRG)=TRUE

          IF(ADD_AVRG.EQ.'Y') THEN
            RIM(I)  =  PJ(I)
          ELSE
            RIM(I) = 0
          END IF
          DO L = 1, NF
            K  =  NV(L)
            RIM(I)  =  RIM(I) + CP(I, K) * CI(J, K) / SQRT(D(K))
          END DO
          SUM = SUM + RIM(I)
        END DO
        PIA = SUM / FLOAT(NPIX)
        END
 
 
@


1.6
log
@GPL License fixed
@
text
@@


1.5
log
@distributed
@
text
@d2 1
a2 1
C++************************************************************************
d5 1
a5 1
C **************************************************************************
d7 24
a30 7
C *  COPYRIGHT (C)1987 , WADSWORTH CENTER FOR LABORATORIES AND             *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
C **************************************************************************
d46 1
a46 1
C++************************************************************************
@


1.4
log
@parameters for dummy
@
text
@a0 1
#ifdef SP_DISTRIB 
a1 14
C   THIS ROUTINE SPECIFIC TO WADSWORTH LABS AND IS NOT 
C       DISTRIBUTED TO OUTSIDE SITES
 
       SUBROUTINE pca_remake(J, NIMA, NPIX, NF, NV, NFAC,
     &                     PIA, RIM, CP, CI, D, PJ, ADD_AVRG)
 
       COMMON /UNITS/LUNC,NIN,NOUT
 
       WRITE(NOUT,*) 'DUMMY CALL: pca_remake'
       RETURN
       END
 
#else
 
a14 2
C 
C
d41 1
a41 1
CNO_SAVE
d48 1
a48 1
c	put back the averages to the original data if(pca_avrg)=true
a63 1
#endif
@


1.3
log
@nosave
@
text
@d6 2
a7 1
       SUBROUTINE pca_remake
d54 1
a54 1
#ifdef SP_UNIX
d56 1
a56 3
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d60 3
a62 3
C
C LOOP OVER ALL PIXELS
C
d64 1
a64 1
c
d66 1
a66 1
c
@


1.2
log
@cpp_lines_added
@
text
@d59 1
a59 1

a79 2

        RETURN
@


1.1
log
@Initial revision
@
text
@d1 15
d53 3
d57 1
d83 3
@
