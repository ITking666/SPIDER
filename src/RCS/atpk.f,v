head	1.18;
access;
symbols
	pre_mrcs:1.18
	healthdept_2018:1.18
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.13
	prec_CA:1.13
	noindx:1.12
	Bproc:1.11
	oct21:1.8
	last77:1.8;
locks; strict;
comment	@c @;


1.18
date	2018.10.03.14.33.55;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2013.10.30.16.36.52;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.25.06;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.20.29.42;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.18.20.58;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.20.19.38.52;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.11.14.08.16;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.12.27.15.11.55;	author bimal;	state Exp;
branches;
next	1.10;

1.10
date	99.12.23.20.03.29;	author bimal;	state Exp;
branches;
next	1.9;

1.9
date	99.11.10.23.09.07;	author yuchen;	state Exp;
branches;
next	1.8;

1.8
date	98.01.22.22.26.03;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	97.10.17.15.18.24;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.03.10.16.45.44;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.01.09.19.46.21;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	96.12.06.19.08.09;	author ramani;	state Exp;
branches;
next	1.3;

1.3
date	96.05.06.19.17.45;	author ramani;	state Exp;
branches;
next	1.2;

1.2
date	96.04.23.19.30.50;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	96.04.23.15.07.05;	author mladjadj;	state Exp;
branches;
next	;


desc
@automatic particle picking
@


1.18
log
@email_health_dept
@
text
@C	
C ++********************************************************************
C
C ATPK    OPENDOC USED                           OCT  2013 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2013  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                       
C ATPK                                                                   
C
C PURPOSE: PEAK PICKING
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE ATPK(LUN1,NX,NY,NZ)
	
        IMPLICIT NONE
        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC' 

        INTEGER               :: LUN1,NX,NY,NZ

        REAL, ALLOCATABLE     :: XYZ(:,:)
        CHARACTER(LEN=MAXNAM) :: DOCNAM
 
        REAL                  :: DLIST(3)
        LOGICAL               :: ADDEXT,GETNAME,ISOLD
        LOGICAL               :: APPEND,MESSAGE,NEWFILE
        CHARACTER(LEN=90)     :: COMMENT

        INTEGER               :: NGH,NOT_USED,NQ,ITMP,IRTFLG
        INTEGER               :: LUNDOCNO,ne,nnx,nny,l,nlet,nlist,key,i1
        REAL                  :: THRSH

        INTEGER, PARAMETER    :: LUNDOCN = 55

        CALL RDPRI1S(NGH,NOT_USED,
     &              'PIXEL NEIGHBOURHOOD FOR SEARCH',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
 
        IF (NGH <. 3) THEN
           CALL ERRT(101,'NEIGHBOURHOOD MUST BE >= 3',NE)
           RETURN
        ENDIF

        NQ = NGH / 2
       
        THRSH = 0.7
        CALL RDPRM1S(THRSH,NOT_USED,'CC THRESHOLD FOR PEAKS',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN 

        WRITE(NOUT,*) '   '
        WRITE(NOUT,*)
     &        ' PEAKS CLOSE TO EDGE OF MICROGRAPH CAN BE EXCLUDED'

        CALL RDPRI2S(NNX,NNY,NOT_USED,
     &               'MICROGRAPH EDGE DIMENSION',IRTFLG)
        WRITE(NOUT,*)'   '

C       MAXIMUM NUMBER OF POSSIBLE PEAKS 
        ITMP = (NX/NGH +1) * (NY/NGH +1)

       !write(6,*) 'ngh, itmp:',ngh,itmp

       CALL FLUSHRESULTS

        ALLOCATE (XYZ(3,ITMP), STAT=IRTFLG)
        IF (IRTFLG .NE. 0) THEN 
           CALL ERRT(46,'XYZ',3*ITMP)
           RETURN
        ENDIF

        CALL PKD(LUN1,NX,NY,NQ,XYZ,ITMP,THRSH,L, NNX,NNY)

        ADDEXT  = .TRUE.
        GETNAME = .TRUE.
        ISOLD   = .FALSE.
        APPEND  = .FALSE.
        MESSAGE = .TRUE.
        IRTFLG  = -8         ! NO IC USE

        CALL OPENDOC(DOCNAM,ADDEXT,NLET,LUNDOCN,LUNDOCNO,GETNAME,
     &           'PEAK LOCATION DOC',ISOLD,APPEND,MESSAGE,
     &            NEWFILE,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C                  123456789 123456789 123456789 123456789 123456789 123456789 
        COMMENT = '          NUMBER OF PEAKS     '
        CALL LUNDOCPUTCOM(LUNDOCNO,COMMENT(1:30),IRTFLG)

        NLIST    = 2
        KEY      = -1
        DLIST(1) = L
        CALL LUNDOCWRTDAT(LUNDOCNO,KEY,DLIST,1,IRTFLG)

C                  123456789 123456789 123456789 123456789 123456789 123456789 
        COMMENT = '  X          Y          Z     '
        CALL LUNDOCPUTCOM(LUNDOCNO,COMMENT(1:30),IRTFLG)

        DO I1 = 1,L
           KEY      = I1
           DLIST(1) = XYZ(1,I1)
           DLIST(2) = XYZ(2,I1)
           DLIST(3) = XYZ(3,I1)
           CALL LUNDOCWRTDAT(LUNDOCNO,KEY,DLIST,3,IRTFLG)
        ENDDO
	CLOSE(LUNDOCN)

        IF (ALLOCATED(XYZ)) DEALLOCATE(XYZ)

        END


@


1.17
log
@used opendoc, added doc file header, added error traps
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.16
log
@GPL_2010
@
text
@d4 1
a4 1
C ATPK
d10 1
a10 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d27 2
a28 2
C                                                                      *
C ATPK                                                                 *
d30 1
a30 1
C SUPPORT_ROUTINE
d35 1
a35 1
        SUBROUTINE ATPK(LUN1,NSAM,NROW,NSLICE)
d37 1
a38 1
        REAL, ALLOCATABLE, DIMENSION(:,:) :: XYZ
a39 2
 
        DIMENSION     DLIST(4)
d41 1
a41 1
        DATA NDOC/55/
d43 20
a62 4
        CALL RDPRMI(NGH,NDUM,NOT_USED,
     &              'NEIGHBOURHOOD PIXELS FOR SEARCH')
        IF (NGH .LT. 3) THEN
           CALL ERRT(31,'PKDS',NE)
d65 2
a66 1
        NQ = NGH/2
d68 10
a77 5
        CALL  RDPRM(THRSH,NOT_USED,'THRESHOLD FOR PEAKS')
        CALL RDPRMI(NNSAM,NNROW,NOT_USED,'MICROGRAPH EDGE DIMENSION')
        WRITE(NOUT,*)'   '
        WRITE(NOUT,*) ' ****PEAKS CLOSER TO THE EDGE OF THE ',
     &                ' MICROGRAPH ARE EXCLUDED****'
d81 5
a85 1
        ITMP = (NSAM/NGH +1)*(NROW/NGH +1)
d88 2
a89 2
        IF (IRTFLG.NE.0) THEN 
           CALL ERRT(46,'AT PK, XYZ',IER)
d93 17
a109 2
        CALL PKD(LUN1,NSAM,NROW,NQ,XYZ,itmp,THRSH,L,
     &            NNSAM,NNROW)
d112 14
a125 12
        DLIST(1) = -1
        DLIST(2) = L
        CALL SAVD(NDOC,DLIST,NLIST,IRTFLG)

        NLIST = 4
	
        DO I1=1,L
           DLIST(1) = I1
           DLIST(2) = XYZ(1,I1)
           DLIST(3) = XYZ(2,I1)
           DLIST(4) = XYZ(3,I1)
           CALL SAVD(NDOC,DLIST,NLIST,IRTFLG)
d127 1
d129 1
a129 4
        CALL SAVDC

        CLOSE(NDOC)
        DEALLOCATE(XYZ)
@


1.15
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@HRI GPL License used
@
text
@a6 2
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      **
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
@


1.13
log
@opfilec
@
text
@d7 1
d9 24
@


1.12
log
@nloop,iloop_removed
@
text
@a16 1
C
a18 1
C        1         2         3         4         5         6         7
d22 1
a22 1
        SUBROUTINE ATPK
d26 1
a27 5

        CHARACTER *80   FILEP
        COMMON /F_SPEC/ FILEP,NLET

       
d30 1
a30 10
        DATA LUN1/77/,NDOC/55/


         MAXIM = 0
         CALL OPFILE(.TRUE.,FILEP,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,MAXIM,
     &   'INPUT',.FALSE.,IRTFLG)
         IF (IRTFLG .NE. 0) THEN
            CALL ERRT(4,'ATPK',NE)
            RETURN 
         ENDIF
a31 2


a39 1

d43 2
a44 2
        WRITE(NOUT,*) '              ****PEAKS CLOSER TO THE EDGE OF THE
     &  MICROGRAPH ARE EXCLUDED****'
d53 1
a53 1
           GOTO 105
d56 1
a56 2

       CALL  PKD(LUN1,NSAM,NROW,NQ,XYZ,itmp,THRSH,L,
a65 1

a77 1
105     CLOSE(LUN1)
@


1.11
log
@*** empty log message ***
@
text
@d49 1
a49 1
        CALL RDPRMI(NGH,NDUM,NLOOP,ILOOP,
d58 2
a59 2
        CALL  RDPRM(THRSH,NLOOP,ILOOP,'THRESHOLD FOR PEAKS')
        CALL RDPRMI(NNSAM,NNROW,NLOOP,ILOOP,'MICROGRAPH EDGE DIMENSION')
@


1.10
log
@adapted for dynamical memory allocation
@
text
@d26 1
a26 1
        INCLUDE '/net/ithaca/usr1/spider/src/CMBLOCK.INC'
@


1.9
log
@a
@
text
@d1 1
d16 6
a21 1
C                                                                      *
d24 5
a28 1
        SUBROUTINE ATPK(MAXDIM)
d30 2
a31 1
	INCLUDE 'CMBLOCK.INC'
d33 2
a34 1
        COMMON	Q(1)
d36 2
a37 2
        CHARACTER *80   FILEP
        COMMON /F_SPEC/ FILEP,NLET
d39 7
a45 2
	CHARACTER*1   NULL
	DIMENSION     DLIST(4)
a46 1
	DATA LUN1/77/,NDOC/55/
a47 1
	NULL = CHAR(0)
d49 1
a49 7
	CALL FILERD(FILEP,NLET,NULL,'INPUT',IRTFLG)
	CALL OPENF(FILEP,LUN1,NSAM,NROW,'O',NF,NSLICE)
	IF (NF .NE. 2) THEN
	   WRITE(NOUT,*) '*** FILE NOT FOUND'
	   RETURN
	ENDIF
	CALL RDPRMI(NGH,NDUM,NLOOP,ILOOP,
d51 2
a52 2
	IF (NGH .LT. 3) THEN
	   CALL ERRT(31,'PKDS',NE)
d54 1
a54 1
	ENDIF
d56 1
a56 3
        K_Q = 1
        K_G=K_Q+(2*NQ+1)*(2*NQ+1)
        K_1=K_G+NSAM*(2*NQ+1)
d59 4
a62 1
        CALL RDPRMI(NNSAM,NNROW,NLOOP,ILOOP,'WINDOW DIMENSIONS')
d64 12
a75 4
        WRITE(NOUT,*)'****WINDOW DIMENSIONS ARE USED TO EXCLUDE PEAKS'
        WRITE(NOUT,*)'     CLOSER TO THE EDGE OF THE MICROGRAPH****'
	WRITE(NOUT,*)'   '
	CALL  PKD(LUN1,NSAM,NROW,NQ,Q(K_Q),Q(K_G),Q(K_1),THRSH,L,
d78 13
a90 11
	NLIST    = 2
	DLIST(1) = -1
	DLIST(2) = L
	CALL SAVD(NDOC,DLIST,NLIST,IRTFLG)

	NLIST = 4
	DO I=1,L
           DLIST(1) = I
           DLIST(2) = Q(K_1+(I-1)*3)
           DLIST(3) = Q(K_1+(I-1)*3+1)
           DLIST(4) = Q(K_1+(I-1)*3+2)
d94 7
a100 1
	CALL SAVDC
a101 2
	CLOSE(NDOC)
	CLOSE(LUN1)
a102 1
	END
@


1.8
log
@nosave
@
text
@d31 1
a31 1
CNO_SAVE
@


1.7
log
@R
@
text
@d31 1
a31 1

a78 1
        RETURN
@


1.6
log
@cosmetic
@
text
@d35 1
a35 1
	CALL OPENF(FILEP,LUN1,NSAM,NROW,'R',NF,NSLICE)
@


1.5
log
@change write(nout,*)'' to write(nout,*)'   ' because of VAX'
@
text
@d1 17
d19 3
a21 1
	 INCLUDE 'CMBLOCK.INC'
d23 2
d26 4
a29 3
        CHARACTER *80 FILEP
	CHARACTER*1 NULL
	DIMENSION DLIST(4)
d31 4
a34 3
C
	NULL=CHAR(0)
	CALL FILERD(FILEP,NLET,NULL,'INPUT ',IRTFLG)
d36 9
a44 3
	IF(NF.NE.2)THEN
	WRITE(NOUT,*)'FILE NOT FOUND'
	RETURN
d46 4
a49 8
	CALL RDPRMI(NGH,NDUM,NLOOP,ILOOP,'NEIGHBOURHOOD PIXELS FOR SEARCH')
	IF(NGH.LT.3) THEN
	CALL ERRT(31,'PKDS',NE)
	ELSE
	NQ = NGH/2
	K_Q = 1
	K_G=K_Q+(2*NQ+1)*(2*NQ+1)
	K_1=K_G+NSAM*(2*NQ+1)
d53 3
a56 3
	WRITE(NOUT,*)'****WINDOW DIMENSIONS ARE USED TO EXCLUDE PEAKS'
	WRITE(NOUT,*)'     CLOSER TO THE EDGE OF THE MICROGRAPH****'
	WRITE(NOUT,*)'   '
d58 5
a62 6
     &  NNSAM,NNROW)
	ENDIF
C
	NLIST=2
	DLIST(1)=-1
	DLIST(2)=L
d64 10
a73 9
C
	NLIST=4
	DO 127 I=1,L
	DLIST(1)=I
	DLIST(2)=Q(K_1+(I-1)*3)
	DLIST(3)=Q(K_1+(I-1)*3+1)
	DLIST(4)=Q(K_1+(I-1)*3+2)
	CALL SAVD(NDOC,DLIST,NLIST,IRTFLG)
127	CONTINUE
d75 1
a75 1
C
d78 2
@


1.4
log
@saves the total number of peaks in doc file and also excludes peaksnear the edges.
@
text
@d28 1
a28 1
	WRITE(NOUT,*)''
d31 1
a31 1
	WRITE(NOUT,*)''
@


1.3
log
@vax error fixed.
@
text
@d1 1
a1 1
         SUBROUTINE ATPK(MAXDIM)
d4 2
a5 2
        COMMON /F_SPEC/ FILEP,NLET,DOCUM,NLETDD
        CHARACTER *80 FILEP,DOCUM
d7 1
d24 1
a24 13
C MEMORY CALCULATION
	MEMREQ=K_G + NSAM*1*NQ+1
	IF(MEMREQ.GT.MAXDIM) THEN
	CALL ERRT(6,'AT PK',NE)
	RETURN
	ENDIF
	

        CALL FILERD(DOCUM,NLETDD,NULL,
     &  'DOC FILE FOR PEAKS',IRTFLG)

        CALL FILCAN(DOCUM,NLETDD,NULL,NULL,DOCUM,DATEXC,IER)
        OPEN(NDOC,FILE=DOCUM,STATUS='UNKNOWN',FORM='FORMATTED')
d27 7
a33 2

	CALL  PKD(LUN1,NSAM,NROW,NQ,Q(K_Q),Q(K_G),THRSH)
d35 16
@


1.2
log
@unknown
@
text
@d23 7
@


1.1
log
@AT PK automatic particle picking
@
text
@d28 1
a28 1
        OPEN(NDOC,FILE=DOCUM,STATUS='NEW',FORM='FORMATTED')
@
