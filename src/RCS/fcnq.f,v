head	1.12;
access;
symbols
	pre_mrcs:1.12
	healthdept_2018:1.12
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.7
	prec_CA:1.7
	noindx:1.7
	Bproc:1.7
	oct21:1.4
	last77:1.4;
locks; strict;
comment	@c @;


1.12
date	2018.10.03.14.34.05;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2013.06.11.19.00.35;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.24.13.25.34;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.20.20.12;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.18.12.55;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.02.02.20.23.09;	author bimal;	state Exp;
branches;
next	1.6;

1.6
date	99.12.07.15.37.18;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.11.10.23.09.16;	author yuchen;	state Exp;
branches;
next	1.4;

1.4
date	96.02.15.18.10.25;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	95.08.09.17.16.19;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.08.10.15.39.53;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.38;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.12
log
@email_health_dept
@
text
@C ++********************************************************************
C                                                                      *
C                                                                      *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  FCNQ(P)                                                                    *
C                                                                      *
C  PURPOSE: sloppily written using commons!                                                            *
C                                                                      *
C  PARAMETERS:  XPO,YPO                          (IMPORTED IN COMMON)                                                        *
C               AA,AB                            (IMPORTED IN COMMON)                                                        *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        REAL FUNCTION FCNQ(P)

        INCLUDE 'CMBLOCK.INC'

        REAL              :: P(3)
        INTEGER           :: IM(3)

        DOUBLE PRECISION  :: AA,AB
        POINTER           :: XPO(:,:,:), YPO(:,:,:)

        COMMON  /QNORMA/  AA,AB
        COMMON  /DIMSPEC/ R
        COMMON  /POINT/   XPO,YPO
        COMMON  /ITERU/   ITER

        DOUBLE PRECISION  :: CHI,AVD,RM(3,3),QR(3),DX,DY,DZ

        DATA  PI/3.1415926/

        KLX  = LBOUND(XPO, DIM =1)
        KNX  = UBOUND(XPO, DIM =1)
        KLY  = LBOUND(XPO, DIM =2)
        KNY  = UBOUND(XPO, DIM =2)
        KLZ  = LBOUND(XPO, DIM =3)
        KNZ  = UBOUND(XPO, DIM =3)

        ITER = ITER + 1


        PHI   = P(1) * 180.0 / PI
        THETA = P(2) * 180.0 / PI
        PSI   = P(3) * 180.0 / PI
        CHI   = 0.0
        RR    = R * R

        CALL BLDR(RM,PSI,THETA,PHI)

c$omp parallel do private(ix,iy,iz,rz,ry,rt,qr,a1,a2,a3,a4,a5,a6,a7,a8,
c$omp&   iox,ioy,ioz,dx,dy,dz,avd),reduction(+:chi)
        DO IZ=KLZ,KNZ
           RZ=IZ*IZ

           DO IY=KLY,KNY
              RY=IY*IY+RZ

              DO IX=KLX,KNX
                 RT=IX*IX+RY

                 IF (RT .LE. RR) THEN  

C                   DO  3  I3=1,3
C                   QR(I3)=0.0
C                   DO  3  I2=1,3
C3                  QR(I3)=QR(I3)+RM(I2,I3)*IM(I2)

                    QR(1) = RM(1,1)*IX+RM(2,1)*IY+RM(3,1)*IZ
                    QR(2) = RM(1,2)*IX+RM(2,2)*IY+RM(3,2)*IZ
                    QR(3) = RM(1,3)*IX+RM(2,3)*IY+RM(3,3)*IZ	            
                    IOX   = QR(1)+FLOAT(1-KLX)
                    DX    = QR(1)+FLOAT(1-KLX)-IOX
                    DX    = DMAX1(DX,1.0D-5)
                    IOX   = IOX+KLX-1
                    IOY   = QR(2)+FLOAT(1-KLY)
                    DY    = QR(2)+FLOAT(1-KLY)-IOY
                    DY    = DMAX1(DY,1.0D-5)
                    IOY   = IOY+KLY-1
                    IOZ   = QR(3)+FLOAT(1-KLZ)
                    DZ    = QR(3)+FLOAT(1-KLZ)-IOZ
                    DZ    = DMAX1(DZ,1.0D-5)
                    IOZ   = IOZ+KLZ-1

C FASTER VERSION:
                    A1 = YPO(IOX,IOY,IOZ)
                    A2 = YPO(IOX+1,IOY,IOZ) - YPO(IOX,IOY,IOZ)
                    A3 = YPO(IOX,IOY+1,IOZ) - YPO(IOX,IOY,IOZ)
                    A4 = YPO(IOX,IOY,IOZ+1) - YPO(IOX,IOY,IOZ)
       A5 = YPO(IOX,IOY,IOZ) - YPO(IOX+1,IOY,IOZ) - YPO(IOX,IOY+1,IOZ)
     &   + YPO(IOX+1,IOY+1,IOZ)
       A6 = YPO(IOX,IOY,IOZ) - YPO(IOX+1,IOY,IOZ) - YPO(IOX,IOY,IOZ+1)
     &   + YPO(IOX+1,IOY,IOZ+1)
       A7 = YPO(IOX,IOY,IOZ) - YPO(IOX,IOY+1,IOZ) - YPO(IOX,IOY,IOZ+1)
     &   + YPO(IOX,IOY+1,IOZ+1)
       A8 = YPO(IOX+1,IOY,IOZ) + YPO(IOX,IOY+1,IOZ)+ YPO(IOX,IOY,IOZ+1)
     & - YPO(IOX,IOY,IOZ)- YPO(IOX+1,IOY+1,IOZ) - YPO(IOX+1,IOY,IOZ+1)
     &   - YPO(IOX,IOY+1,IOZ+1) + YPO(IOX+1,IOY+1,IOZ+1)
       AVD = A1 + DZ*(A4 + A6*DX + (A7 + A8*DX)*DY) + A3*DY
     &   + DX*(A2 + A5*DY)

C**********************************************************
C                   CHI=CHI+(XPO(IX,IY,IZ)-AVD)*(XPO(IX,IY,IZ)-AVD)

                    CHI = CHI + XPO(IX,IY,IZ) * AVD
                 ENDIF
              ENDDO
           ENDDO
        ENDDO

        CHI  = (CHI-AB) / AA

        FCNQ = 1.0 - CHI

        WRITE(NOUT,90) ITER,(P(L)*180.0/PI,L=1,3), FCNQ, CHI
90      FORMAT(' ',I6,1x,3(1X,F9.4),2x,G13.7,1x,F8.6)

        END

@


1.11
log
@updated
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.10
log
@GPL_2010
@
text
@d27 1
d29 1
d31 2
a32 1
C  PURPOSE:                                                            *
a33 4
C  PARAMETERS:                                                         *
C IMAGE_PROCESSING_ROUTINE                                             *
C                                                                      *
C        0         2         3         4         5         6         7 *
d37 9
a45 2
        FUNCTION  FCNQ(P)
        DIMENSION  P(3), IM(3)
a46 2
        COMMON  /DIMSPEC/  R
        COMMON /POINT/ XPO,YPO
d48 23
a70 27
        COMMON  /PARM/  NT
        COMMON  /ITERU/  ITER
        POINTER XPO(:,:,:), YPO(:,:,:)
        DOUBLE PRECISION  AA,AB
        DOUBLE PRECISION  CHI,AV,RM(3,3),QR(3),DX,DY,DZ
C        EQUIVALENCE  (IM(1),IX),(IM(2),IY),(IM(3),IZ)


        data  pi/3.1415926/


        KLX = LBOUND(XPO, DIM =1)
        KNX = UBOUND(XPO, DIM =1)
        KLY = LBOUND(XPO, DIM =2)
        KNY = UBOUND(XPO, DIM =2)
        KLZ = LBOUND(XPO, DIM =3)
        KNZ = UBOUND(XPO, DIM =3)

        ITER=ITER+1

        write(nt,1020)  (P(L)*180.0/PI,L=1,3)
1020    FORMAT(' FCNQ - new parameters ',3(1X,F9.4))
        PHI=P(1)*180.0/PI
        THETA=P(2)*180.0/PI
        PSI=P(3)*180.0/PI
        CHI=0.0
        RR=R*R
d75 1
a75 1
c$omp&   iox,ioy,ioz,dx,dy,dz,av),reduction(+:chi)
d78 1
d81 1
d84 1
d86 27
a112 27
C        DO  3  I3=1,3
C        QR(I3)=0.0
C        DO  3  I2=1,3
C3       QR(I3)=QR(I3)+RM(I2,I3)*IM(I2)
                    QR(1)=RM(1,1)*IX+RM(2,1)*IY+RM(3,1)*IZ
                    QR(2)=RM(1,2)*IX+RM(2,2)*IY+RM(3,2)*IZ
                    QR(3)=RM(1,3)*IX+RM(2,3)*IY+RM(3,3)*IZ	            
                    IOX=QR(1)+FLOAT(1-KLX)
                    DX=QR(1)+FLOAT(1-KLX)-IOX
                    DX=DMAX1(DX,1.0D-5)
                    IOX=IOX+KLX-1
                    IOY=QR(2)+FLOAT(1-KLY)
                    DY=QR(2)+FLOAT(1-KLY)-IOY
                    DY=DMAX1(DY,1.0D-5)
                    IOY=IOY+KLY-1
                    IOZ=QR(3)+FLOAT(1-KLZ)
                    DZ=QR(3)+FLOAT(1-KLZ)-IOZ
                    DZ=DMAX1(DZ,1.0D-5)
                    IOZ=IOZ+KLZ-1
C         
c
C faster version :
c
                     A1 = YPO(IOX,IOY,IOZ)
                     A2 = YPO(IOX+1,IOY,IOZ) - YPO(IOX,IOY,IOZ)
                     A3 = YPO(IOX,IOY+1,IOZ) - YPO(IOX,IOY,IOZ)
                     A4 = YPO(IOX,IOY,IOZ+1) - YPO(IOX,IOY,IOZ)
d122 1
a122 1
       AV= A1 + DZ*(A4 + A6*DX + (A7 + A8*DX)*DY) + A3*DY
d124 1
d126 3
a128 2
C       CHI=CHI+(XPO(IX,IY,IZ)-AV)*(XPO(IX,IY,IZ)-AV)
                    CHI=CHI+XPO(IX,IY,IZ)*AV
a132 1
        CHI=(CHI-AB)/AA
d134 6
a139 3
        FCNQ=1.0-CHI
        write(nt,*)
     &  'Iteration #',ITER,'  Distance =',FCNQ,' r=',CHI
@


1.9
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@HRI GPL License used
@
text
@a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.7
log
@adapted for dynamical memory allocation
@
text
@d7 24
@


1.6
log
@header
@
text
@a0 1

d19 1
d26 22
d49 72
a120 8
        DIMENSION  P(3)
        COMMON  /DIMSPEC/  NSAM,NROW,NSLICE,KLX,KNX,R,L1,L2,L3,L4
     &				,KLY,KNY,KLZ,KNZ
        COMMON  DUMMY(80),BUF(1024),Q(1)

C
	M=3
        FCNQ=FUNIQ(P,M,Q(L1),Q(L2),KLX,KNX,KLY,KNY,KLZ,KNZ,R)
d122 1
@


1.5
log
@a
@
text
@d1 24
d26 1
@


1.4
log
@arbitrary center
@
text
@d6 1
a6 1
CNO_SAVE
@


1.3
log
@nosace
@
text
@d3 2
a4 1
        COMMON  /DIMSPEC/  NSAM,NROW,NSLICE,KL,KN,R,L1,L2,L3,L4
d9 1
a9 1
        FCNQ=FUNIQ(P,M,Q(L1),Q(L2),KL,KN,R)
@


1.2
log
@*** empty log message ***
@
text
@d5 1
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
        SUBROUTINE  FCNQ(M,P,F)
        DIMENSION  P(M)
d6 2
a7 1
        F=FUNIQ(P,M,Q(L1),Q(L2),KL,KN,R)
@
