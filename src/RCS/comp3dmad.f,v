head	1.21;
access;
symbols
	pre_getangas:1.21
	GPL2010:1.21
	pre_GPL2010:1.20
	pre_var_equation:1.19
	pre_fftwrings:1.19
	pre_opfiles:1.19
	src:1.19
	best-code:1.19
	x-named-regs:1.19
	x:1.19
	v13-00:1.19
	pre_GPL:1.17
	prec_CA:1.17
	noindx:1.16
	Bproc:1.16
	oct21:1.10
	last77:1.10;
locks; strict;
comment	@c @;


1.21
date	2010.06.24.13.25.17;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2010.03.03.16.00.14;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.17.20.12.59;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2005.10.17.18.06.55;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.02.19.14.55.38;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2000.08.17.15.59.36;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2000.08.10.15.32.32;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2000.06.08.19.36.35;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	99.12.27.18.44.51;	author bimal;	state Exp;
branches;
next	1.12;

1.12
date	99.12.07.15.25.58;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.11.10.23.09.12;	author yuchen;	state Exp;
branches;
next	1.10;

1.10
date	98.06.03.15.03.08;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	98.01.21.20.16.06;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	97.10.17.20.50.23;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	97.10.03.21.06.20;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.03.05.22.15.34;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.01.06.16.12.27;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	96.06.10.19.10.06;	author michael;	state Exp;
branches;
next	1.3;

1.3
date	94.12.06.19.34.06;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.03.25;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.47;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.21
log
@GPL_2010
@
text
@
C ++********************************************************************
C  COMP3DMAD                                                           *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  PURPOSE: CALCULATES MEAN RELATIVE ERROR AND  DISCREPANCY            *
C           BETWEEN TWO VOLUMES WITHIN AN (OPTIONAL) MASK.             *
C                                                                      *
C  AUTHOR: M.RADERMACHER                                               *
C                                                                      *
C***********************************************************************

      SUBROUTINE COMP3DMAD(LUN,LUN1,LUN2,LUN3) 
                         
      IMPLICIT DOUBLE PRECISION (A-H,O-X)
                               
      INCLUDE 'CMBLOCK.INC' 
      INCLUDE 'CMLIMIT.INC' 

      CHARACTER (LEN=MAXNAM)          :: FIL2,FIL1,FIL3,FIL4
      REAL, ALLOCATABLE, DIMENSION(:) :: AIMG
                                                          
      CHARACTER *1  :: NULL,YN                                             
      INTEGER       :: NVOX                                                
      LOGICAL       :: FMASK,FOUT,FDIFMASK                                       
      REAL          :: RA,RCON,RDIF,RDIS 
                                                          
      NULL = CHAR(0)
                                                      
      WRITE(NOUT,*) ' COMPARISON OF TWO 3D ARRAYS'
 
      CALL OPFILEC(0,.TRUE.,FIL1,LUN,'O',IFORM1,NSAM,NROW,NSLICE,
     &           MAXIM,'FIRST',.FALSE.,IRTFLG)
      IF (IRTFLG .NE. 0) GOTO 9100

      MAXIM = 0                         
      CALL OPFILEC(0,.TRUE.,FIL2,LUN1,'O',IFORM2,NSAM2,NROW2,NSLIC2,
     &           MAXIM,'SECOND',.FALSE.,IRTFLG)
      IF (IRTFLG .NE. 0) GOTO 9100

      IF(NSAM2.NE.NSAM.OR.NROW2.NE.NROW.OR.NSLIC2.NE.NSLICE) GOTO 9100
      FMASK    = .TRUE.
      FDIFMASK = .TRUE.
      CALL FILERD(FIL3,NLET2,NULL,'MASK',IRTFLG)
      IF (IRTFLG .GT. 0) GOTO 9999
      IF (FIL3(1:1) .EQ. '*') FMASK = .FALSE.

      IF (FMASK) THEN 
         MAXIM = 0 
         CALL OPFILEC(0,.FALSE.,FIL3,LUN2,'O',IFORMM,NSAM3,NROW3,NSLIC3,
     &           MAXIM,'XXXX',.FALSE.,IRTFLG)
         IF (IRTFLG .NE. 0) GOTO 9100

         IF (NSAM3.NE.NSAM.OR.NROW3.NE.NROW.OR.NSLIC3.NE.NSLICE)  
     &       GOTO 9100
  
         CALL RDPRMC(YN,NA,.TRUE., 
     &      'APPLY MASK TO BOTH, SCALING AND DIFFERENCE/ERROR? (Y/N)', 
     &      NULL,IRT) 
         IF (YN .EQ. 'N') FDIFMASK=.FALSE. 
      ENDIF  
                                                           
      FOUT = .TRUE. 
      CALL FILERD(FIL4,NLET2,NULL,'OUTPUT DIFFERENCE',IRTFLG) 
      IF (IRTFLG .GT. 0) GOTO 9999                                       
      IF (FIL4(1:1) .EQ. '*') FOUT = .FALSE.                                  
      IF (FOUT) THEN 
         MAXIM = 0 
         CALL OPFILEC(0,.FALSE.,FIL4,LUN3,'U',IFORM1,NSAM,NROW,NSLICE,
     &                MAXIM,'XXXX',.TRUE.,IRTFLG)
         IF (IRTFLG .NE. 0) GOTO 9100
      ENDIF
      S1=0.
      S2=0.
      S3=0.
      S4=0.
      SUM1=0.
      SUM2=0.
      NVOX=0
      ALLOCATE (AIMG(4*NSAM), STAT=IRTFLG)
      IF (IRTFLG.NE.0) THEN
         CALL ERRT(46,'DR DIFF, AIMG',IER)
         GOTO 9999
      ENDIF

      DO ISL=1,NSLICE
         IOFF=(ISL-1)*NROW
         DO  I = 1,NROW
            CALL REDLIN(LUN,AIMG,NSAM,I+IOFF)
            CALL REDLIN(LUN1,AIMG(NSAM+1),NSAM,I+IOFF)
            IF(FMASK) CALL REDLIN(LUN2,AIMG(2*NSAM+1),NSAM,I+IOFF)
            DO  K = 1,NSAM
               IF (FMASK) THEN
                  IF (AIMG(2*NSAM+K).LT..5) CYCLE
               ENDIF                                                             
               NVOX = NVOX+1
               B    = AIMG(K)
               C    = AIMG(NSAM+K)
               P1   = B*C
               P2   = C*C
               S1   = S1+P1
               S2   = S2+P2
               S3   = S3+C
               S4   = S4+B
C              IF ((B.NE.0.OR.C.NE.0) .AND. NSAM.LE.16)
C     $        WRITE(NOUT,103)ISL,I,K,B,C,P1,P2,S1,S2,S3,S4
C103            FORMAT(1H ,'SLICE: ',I3,' , ROW: ',I3,' , COL: ',I3,/
C     $         ' VOXEL 1: ',F16.4,' , VOXEL 2: ',F16.4, /
C     $         '     AD1: ',F16.4,'       AD2: ',F16.4, /
C     $         '      S1: ',F16.4,'        S2: ',F16.4, /
C     $         '      S3: ',F16.4,'        S4: ',F16.4)
           ENDDO
         ENDDO
      ENDDO
      IF (NVOX .EQ. 0) THEN
        WRITE(NOUT,601)
601     FORMAT(//,' THERE ARE NO VOXELS PASSED WITH THE MASK PROVIDED'/
     &   ' A COMPARISON WOULD BE MEANINGLESS AND THEREFORE HAS NOT'/              
     &   ' BEEN DONE. IT WOULD BE ADVISABLE TO CHECK YOUR MASK.'//)
        DEALLOCATE (AIMG)
        GOTO 9999
      ENDIF

      A     = (S1-S3*S4/NVOX)/(S2-S3*S3/NVOX)
      CONST = (A*S3-S4)/NVOX
      BMEAN = S4/NVOX
      SUM1  = 0.
      SUM2  = 0.
      DNOM  = 0.
      DNUM  = 0.
      DO  ISL=1,NSLICE
         IOFF = (ISL-1)*NROW
         DO  I = 1,NROW
            CALL REDLIN(LUN,AIMG,NSAM,I+IOFF)
            CALL REDLIN(LUN1,AIMG(NSAM+1),NSAM,I+IOFF)
            IF (FMASK) CALL REDLIN(LUN2,AIMG(2*NSAM+1),NSAM,I+IOFF)

            DO  K = 1,NSAM
               IF (FOUT) AIMG(3*NSAM+K) = 0.
               IF (FMASK .AND. FDIFMASK) THEN
                  IF (AIMG(2*NSAM+K) .LT. .1) CYCLE
               ENDIF                                                         
               B     = AIMG(K)
               C     = AIMG(NSAM+K)
               BD    = A*C-B-CONST
               BD1   = DABS(BD)
               BD2   = DABS(B-BMEAN)
               SUM1  = SUM1+BD1
               SUM2  = SUM2+BD2
               BD1SQ = BD1*BD1
               DNOM  = DNOM+(B-BMEAN)*(B-BMEAN)
               DNUM  = DNUM+BD1SQ  
                                                 
               IF (FOUT) AIMG(3*NSAM+K) = BD
            ENDDO
            IF (FOUT) CALL WRTLIN(LUN3,AIMG(3*NSAM+1),NSAM,I+IOFF)
         ENDDO
      ENDDO

      DIF   = SUM1 / SUM2
      DISCR = DSQRT(DNUM / DNOM)

      WRITE(NOUT,*) ' '
      WRITE(NOUT,100) A, CONST
100   FORMAT('  SCALING OF SECOND VOLUME: VOXEL_NEW = VOXEL_OLD *',
     &          1pg14.6, ' - ',1pg14.6,/)
 
      WRITE(NOUT,101) DIF, DISCR
101   FORMAT('  MEAN RELATIVE ERROR: ',F10.5,/,                                   
     &       '  DISCREPANCY:    ',F15.5,/)

      RA = A
      RCON = CONST
      RDIF = DIF
      RDIS = DISCR

      CALL REG_SET_NSEL(1,4,RA,RCON, RDIF,RDIS,0.0,IRTFLG)
      DEALLOCATE (AIMG)
      GOTO 9999 
                                                        
9100  CALL ERRT(IER,'DR DIFF',NE)
                                        
9999  CLOSE (LUN)                                                       
      CLOSE (LUN1)                                                      
      CLOSE (LUN2)                                                      
      CLOSE (LUN3)                                                      
      END                                                               
       
C     IF ((B.NE.0.OR.C.NE.0).AND.NSAM.LE.16)
C     $ WRITE(NOUT,104)ISL,I,K,B,C,BD1,BD2,SUM1,SUM2                     
C104   FORMAT(' SLICE: ',I3,' , ROW: ',I3,' , COL: ',I3,/             
C     $' VOXEL 1: ',F16.4,' , VOXEL 2: ',F16.4, /                        
C     $'     BD1: ',F16.4,'       BD2: ',F16.4, /                        
C     $'    SUM1: ',F16.4,'      SUM2: ',F16.4)
@


1.20
log
@improved outputs
@
text
@d6 3
a8 2
C=* This file is part of:                                              * 
C=* SPIDER - Modular Image Processing System.   Author: J. FRANK       *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
@


1.19
log
@GPL License fixed
@
text
@d6 5
a10 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d12 1
a12 6
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d17 1
a17 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
d27 2
a28 1
C  PURPOSE:                                                            *
d30 1
a30 1
C  PARAMETERS:                                                         *
a31 2
C  AUTHOR: M.RADERMACHER  
C
d41 1
a41 3
      CHARACTER (LEN=MAXNAM) ::  FIL2,FIL1,FIL3,FIL4
      COMMON /COMMUN/ FIL2,FIL1,FIL3,FIL4                               

d44 5
a48 4
      CHARACTER *1    NULL,YN                                             
      INTEGER         NVOX                                                
      LOGICAL         FMASK,FOUT,FDIFMASK                                       
                                                                      
d51 2
a52 3
      WRITE(NOUT,*) ' COMPARISON OF 2 3D ARRAYS'
    
      MAXIM = 0                         
d62 9
a70 9
      IF(NSAM2.NE.NSAM.OR.NROW2.NE.NROW.OR.NSLIC2.NE.NSLICE) GOTO 9100  
      FMASK    = .TRUE.                                                      
      FDIFMASK = .TRUE.                                                   
      CALL FILERD(FIL3,NLET2,NULL,'MASK',IRTFLG)                        
      IF (IRTFLG .GT. 0) GOTO 9999                                      
      IF (FIL3(1:1) .EQ. '*') FMASK = .FALSE. 
                               
      IF (FMASK) THEN                                                    
         MAXIM = 0                         
d75 1
a75 1
         IF (NSAM3.NE.NSAM.OR.NROW3.NE.NROW.OR.NSLIC3.NE.NSLICE) 
d78 4
a81 4
         CALL RDPRMC(YN,NA,.TRUE.,                                      
     &      'APPLY MASK TO BOTH, SCALING AND DIFFERENCE/ERROR? (Y/N)',     
     &      NULL,IRT)                                                      
         IF (YN.EQ.'N') FDIFMASK=.FALSE.                                 
d84 6
a89 7
      FOUT = .TRUE.                                                       
      CALL FILERD(FIL4,NLET2,NULL,'OUTPUT DIFFERENCE',IRTFLG)           
      IF (IRTFLG .GT. 0) GOTO 9999 
                                     
      IF (FIL4(1:1) .EQ. '*') FOUT = .FALSE.                                 
      IF (FOUT) THEN                                                     
         MAXIM = 0                         
d93 5
a97 5
      ENDIF                                                             
      S1=0.                                                             
      S2=0.                                                             
      S3=0.                                                             
      S4=0.                                                             
d100 1
a100 1
      NVOX=0                                                          
d102 1
a102 1
      IF (IRTFLG.NE.0) THEN 
d107 9
a115 10

      DO ISL=1,NSLICE                                                     
         IOFF=(ISL-1)*NROW                                                      
         DO  I = 1,NROW                                                  
            CALL REDLIN(LUN,AIMG,NSAM,I+IOFF)                                  
            CALL REDLIN(LUN1,AIMG(NSAM+1),NSAM,I+IOFF)                         
            IF(FMASK) CALL REDLIN(LUN2,AIMG(2*NSAM+1),NSAM,I+IOFF)             
            DO 20 K = 1,NSAM                                                  
               IF (FMASK) THEN                                                    
                  IF(AIMG(2*NSAM+K).LT..5) GOTO 20                                 
d117 17
a133 17
               NVOX=NVOX+1                                                       
               B = AIMG(K)                                                        
               C=AIMG(NSAM+K)                                                     
               P1=B*C                                                            
               P2=C*C                                                            
               S1=S1+P1                                                          
               S2=S2+P2                                                          
               S3=S3+C                                                           
               S4=S4+B                                                           
C              IF((B.NE.0.OR.C.NE.0).AND.NSAM.LE.16)                             
C     $        WRITE(NOUT,103)ISL,I,K,B,C,P1,P2,S1,S2,S3,S4                    
C103            FORMAT(1H ,'SLICE: ',I3,' , ROW: ',I3,' , COL: ',I3,/             
C     $         ' VOXEL 1: ',F16.4,' , VOXEL 2: ',F16.4, /                        
C     $         '     AD1: ',F16.4,'       AD2: ',F16.4, /                        
C     $         '      S1: ',F16.4,'        S2: ',F16.4, /                        
C     $         '      S3: ',F16.4,'        S4: ',F16.4)                          
20          CONTINUE                                                          
d136 5
a140 5
      IF (NVOX.EQ.0) THEN                                                
        WRITE(NOUT,601)                                                   
601     FORMAT(//,' THERE ARE NO VOXELS PASSED WITH THE MASK PROVIDED'/  
     &   ' A COMPARISON WOULD BE MEANINGLESS AND THEREFORE HAS NOT'/                
     &   ' BEEN DONE. IT WOULD BE ADVISABLE TO CHECK YOUR MASK.'//)                                                  
d142 6
a147 5
        GOTO 9999 
      ENDIF                                                             
      A     = (S1-S3*S4/NVOX)/(S2-S3*S3/NVOX)                                 
      CONST = (A*S3-S4)/NVOX                                              
      BMEAN = S4/NVOX                                                     
d152 11
a162 10
      DO  ISL=1,NSLICE                                                
         IOFF = (ISL-1)*NROW                                                 
         DO  I = 1,NROW                                                  
            CALL REDLIN(LUN,AIMG,NSAM,I+IOFF)                                  
            CALL REDLIN(LUN1,AIMG(NSAM+1),NSAM,I+IOFF)                         
            IF (FMASK) CALL REDLIN(LUN2,AIMG(2*NSAM+1),NSAM,I+IOFF)         
            DO 21 K = 1,NSAM                                                  
               IF (FOUT) AIMG(3*NSAM+K) = 0.                                     
               IF (FMASK .AND. FDIFMASK) THEN                                   
                  IF (AIMG(2*NSAM+K) .LT. .1) GOTO 21                             
d164 9
a172 9
               B     = AIMG(K)                                                        
               C     = AIMG(NSAM+K)                                                     
               BD    = (A*C-B-CONST)                                                  
               BD1   = DABS(BD)                                                      
               BD2   = DABS(B-BMEAN)                                                 
               SUM1  = SUM1+BD1                                                     
               SUM2  = SUM2+BD2                                                     
               BD1SQ = BD1*BD1                                                     
               DNOM  = DNOM+(B-BMEAN)*(B-BMEAN)                                     
d175 3
a177 10
C     IF ((B.NE.0.OR.C.NE.0).AND.NSAM.LE.16)                             
C     $ WRITE(NOUT,104)ISL,I,K,B,C,BD1,BD2,SUM1,SUM2                     
C104   FORMAT(1H ,'SLICE: ',I3,' , ROW: ',I3,' , COL: ',I3,/             
C     $' VOXEL 1: ',F16.4,' , VOXEL 2: ',F16.4, /                        
C     $'     BD1: ',F16.4,'       BD2: ',F16.4, /                        
C     $'    SUM1: ',F16.4,'      SUM2: ',F16.4)
                          
               IF (FOUT) AIMG(3*NSAM+K)=BD                                         
21          CONTINUE                                                          
            IF (FOUT) CALL WRTLIN(LUN3,AIMG(3*NSAM+1),NSAM,I+IOFF)           
d181 2
a182 6
      DIF   = (SUM1)/SUM2                                                   
      DISCR = DSQRT(DNUM/DNOM)                                            
      WRITE(NOUT,100) A,CONST,DIF,DISCR                                 
100   FORMAT(' SCALING OF SECOND 3D: VOXEL_NEW=VOXEL_OLD*',F16.6,    
     &       ' - ',F16.6,/, ' MEAN RELATIVE ERROR: ',F10.5,/,                                   
     &'         DISCREPANCY: ',F15.5)                                   
d184 13
a196 1
      CALL REG_SET_NSEL(1,2,A,CONST,0.0,0.0,0.0,IRTFLG)
d198 1
d210 6
@


1.18
log
@HRI GPL License used
@
text
@a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.17
log
@opfilec
@
text
@d7 24
@


1.16
log
@reg_set_nsel params changed
@
text
@d3 1
a4 1
C                                                                      *
d27 5
a32 2
                                      
      COMMON /COMMUN/ FIL2,FIL1,FIL3,FIL4                               
a33 1
      CHARACTER *80   FIL2,FIL1,FIL3,FIL4                                 
d43 1
a43 1
      CALL OPFIL(.TRUE.,FIL1,LUN,'O',NSAM,NROW,NSLICE,
d48 1
a48 1
      CALL OPFIL(.TRUE.,FIL2,LUN1,'O',NSAM2,NROW2,NSLIC2,
d61 1
a61 1
         CALL OPFIL(.FALSE.,FIL3,LUN2,'O',NSAM3,NROW3,NSLIC3,
d81 2
a82 2
         CALL OPFIL(.FALSE.,FIL4,LUN3,'U',NSAM,NROW,NSLICE,
     &           MAXIM,'XXXX',.TRUE.,IRTFLG)
a184 2
C     PARAM(NSEL(1)) = A                                                
C     PARAM(NSEL(2)) = CONST                                            
@


1.15
log
@used reg_set_nsel
@
text
@d185 1
a185 1
      CALL REG_SET_NSEL(1,A,CONST,0.0,0.0,0.0,IRTFLG)
@


1.14
log
@ithaca & copile bugs fixed
@
text
@d50 1
a50 1
      IF(NSAM2.NE.NSAM.OR.NROW2.NE.NROW.OR.NSLIC2.NE.NSLICE) GOTO 9900  
d64 1
a64 1
     &       GOTO 9900
d182 5
a186 10
      IF (NSEL(1).EQ.0) THEN
         DEALLOCATE (AIMG)
         GOTO 9999        
      ENDIF                              
      PARAM(NSEL(1)) = A                                                
      IF (NSEL(2) .EQ. 0) THEN 
         DEALLOCATE (AIMG)
         GOTO 9999   
      ENDIF                            
      PARAM(NSEL(2)) = CONST                                            
d190 2
a191 3
9100  CONTINUE                                                          
9900  CONTINUE                                                          
      CALL ERRT(IER,'DR DIFF',NE)                                        
@


1.13
log
@adapted for dynamical memory allocation
@
text
@a4 1
C                                                                      *
a13 2
C                                                                      *
C                                                                      *
d26 1
a26 1
      INCLUDE '/net/ithaca/usr1/spider/src/CMBLOCK.INC' 
a27 2
                                            
     
d64 2
a65 1
     &       GOTO 9900  
d67 2
a68 2
     $      'APPLY MASK TO BOTH, SCALING AND DIFFERENCE/ERROR? (Y/N)',     
     $      NULL,IRT)                                                      
d79 1
a79 1
         CALL OPFIL(.FALSE.,FIL4,LUN3,'N',NSAM,NROW,NSLICE,
@


1.12
log
@header
@
text
@d29 2
a30 2
      INCLUDE 'CMBLOCK.INC' 
  
d32 2
a33 1
      COMMON          ADUM(80),BUF(2048)                                         
d35 2
a36 2
      REAL            ADUM,BUF                                                     
      CHARACTER *81   FIL2,FIL1,FIL3,FIL4                                 
d94 7
d104 3
a106 3
            CALL REDLIN(LUN,BUF,NSAM,I+IOFF)                                  
            CALL REDLIN(LUN1,BUF(NSAM+1),NSAM,I+IOFF)                         
            IF(FMASK) CALL REDLIN(LUN2,BUF(2*NSAM+1),NSAM,I+IOFF)             
d109 1
a109 1
                  IF(BUF(2*NSAM+K).LT..5) GOTO 20                                 
d112 2
a113 2
               B = BUF(K)                                                        
               C=BUF(NSAM+K)                                                     
d135 1
d148 3
a150 3
            CALL REDLIN(LUN,BUF,NSAM,I+IOFF)                                  
            CALL REDLIN(LUN1,BUF(NSAM+1),NSAM,I+IOFF)                         
            IF (FMASK) CALL REDLIN(LUN2,BUF(2*NSAM+1),NSAM,I+IOFF)         
d152 1
a152 1
               IF (FOUT) BUF(3*NSAM+K) = 0.                                     
d154 1
a154 1
                  IF (BUF(2*NSAM+K) .LT. .1) GOTO 21                             
d156 2
a157 2
               B     = BUF(K)                                                        
               C     = BUF(NSAM+K)                                                     
d174 1
a174 1
               IF (FOUT) BUF(3*NSAM+K)=BD                                         
d176 1
a176 1
            IF (FOUT) CALL WRTLIN(LUN3,BUF(3*NSAM+1),NSAM,I+IOFF)           
d186 4
a189 1
      IF (NSEL(1).EQ.0) GOTO 9999                                      
d191 4
a194 1
      IF (NSEL(2) .EQ. 0) GOTO 9999                                      
d196 1
d207 1
a207 1
                                                                        
@


1.11
log
@a
@
text
@a0 2
                                                                        
C23456789012345678901234567890123456789012345678901234567890123456789012
d2 19
d22 3
a24 1
                                              
@


1.10
log
@bad opfil
@
text
@d11 1
a11 1
CNO_SAVE  
@


1.9
log
@used opfil
@
text
@d6 1
a6 1
      SUBROUTINE COMP3DMAd(LUN,LUN1,LUN2,LUN3) 
d8 2
a9 1
      IMPLICIT DOUBLE PRECISION (A-H,O-X)                               
d21 3
a23 3
      NULL = CHAR(0)                                                      
      WRITE(NOUT,101)                                                   
101   FORMAT(' COMPARISON OF 2 3D ARRAYS:')
d54 2
a55 1
      ENDIF                                                             
d58 4
a61 3
      IF (IRTFLG .GT. 0) GOTO 9999                                      
      IF(FIL4(1:1).EQ.'*') FOUT=.FALSE.                                 
      IF(FOUT) THEN                                                     
d63 1
a63 1
         CALL OPFIL(.FALSE.,FIL4,LUN3,'O',NSAM,NROW,NSLICE,
d104 5
a108 6
      WRITE(NOUT,601)                                                   
601   FORMAT(//1X,'THERE ARE NO VOXELS PASSED WITH THE MASK PROVIDED'/  
     $' A COMPARISON WOULD BE MEANINGLESS AND THEREFOR'/                
     $' HAS NOT BEEN DONE. IT WOULD BE ADVISABLE TO CHECK'/             
     $' YOUR MASK.'//)                                                  
      GOTO 9999                                                         
d110 7
a116 7
      A=(S1-S3*S4/NVOX)/(S2-S3*S3/NVOX)                                 
      CONST=(A*S3-S4)/NVOX                                              
      BMEAN=S4/NVOX                                                     
      SUM1=0.
      SUM2=0.
      DNOM=0.
      DNUM=0.
d118 22
a139 21
      IOFF=(ISL-1)*NROW                                                 
      DO  I = 1,NROW                                                  
      CALL REDLIN(LUN,BUF,NSAM,I+IOFF)                                  
      CALL REDLIN(LUN1,BUF(NSAM+1),NSAM,I+IOFF)                         
          IF(FMASK) CALL REDLIN(LUN2,BUF(2*NSAM+1),NSAM,I+IOFF)         
      DO 21 K = 1,NSAM                                                  
          IF(FOUT) BUF(3*NSAM+K)=0.                                     
          IF(FMASK.AND.FDIFMASK) THEN                                   
            IF(BUF(2*NSAM+K).LT..1) GOTO 21                             
          ENDIF                                                         
      B = BUF(K)                                                        
      C=BUF(NSAM+K)                                                     
      BD=(A*C-B-CONST)                                                  
      BD1=DABS(BD)                                                      
      BD2=DABS(B-BMEAN)                                                 
      SUM1=SUM1+BD1                                                     
      SUM2=SUM2+BD2                                                     
      BD1SQ=BD1*BD1                                                     
      DNOM=DNOM+(B-BMEAN)*(B-BMEAN)                                     
      DNUM=DNUM+BD1SQ                                                   
C     IF((B.NE.0.OR.C.NE.0).AND.NSAM.LE.16)                             
d144 6
a149 5
C     $'    SUM1: ',F16.4,'      SUM2: ',F16.4)                          
      IF(FOUT) BUF(3*NSAM+K)=BD                                         
21    CONTINUE                                                          
         IF(FOUT) CALL WRTLIN(LUN3,BUF(3*NSAM+1),NSAM,I+IOFF)           
      ENDDO
d152 2
a153 2
      DIF=(SUM1)/SUM2                                                   
      DISCR=DSQRT(DNUM/DNOM)                                            
d156 6
a161 7
     $' - ',F16.6/                                                      
     $' MEAN RELATIVE ERROR: ',F10.5/                                   
     $'         DISCREPANCY: ',F15.5)                                   
      IF(NSEL(1).EQ.0) GOTO 9999                                      
      PARAM(NSEL(1))=A                                                
      IF(NSEL(2).EQ.0) GOTO 9999                                      
      PARAM(NSEL(2))=CONST                                            
@


1.8
log
@H
@
text
@d2 6
a7 3
*++*******************************************************************  
C  AUTHOR: M.RADERMACHER                                                
      SUBROUTINE COMP3DMAd(LUN,LUN1,LUN2,LUN3)                          
d9 4
a12 2
      INCLUDE 'CMBLOCK.INC'                                             
      COMMON ADUM(80),BUF(2048)                                         
d14 7
a20 7
      REAL ADUM,BUF                                                     
      CHARACTER *81 FIL2,FIL1,FIL3,FIL4                                 
      CHARACTER *1  NULL,YN                                             
      INTEGER       NVOX                                                
      LOGICAL FMASK,FOUT,FDIFMASK                                       
CNO_SAVE                                                                        
      NULL=CHAR(0)                                                      
d22 12
a33 9
101   FORMAT(' COMPARISON OF 2 3D ARRAYS:')                             
      CALL FILERD(FIL1,NLET1,NULL,'FIRST',IRTFLG)                       
      IF (IRTFLG .NE. 0) GOTO 9999                                      
      CALL OPENF(FIL1,LUN,NSAM,NROW,'OLD',NF,NSLICE)                    
      IF(NF.EQ.1) GOTO 9100                                             
      CALL FILERD(FIL2,NLET2,NULL,'SECOND',IRTFLG)                      
      IF (IRTFLG .NE. 0) GOTO 9999                                      
      CALL OPENF(FIL2,LUN1,NSAM2,NROW2,'OLD',NF,NSLIC2)                 
      IF(NF.EQ.1) GOTO 9100                                             
d35 2
a36 2
      FMASK=.TRUE.                                                      
      FDIFMASK=.TRUE.                                                   
d39 10
a48 5
      IF(FIL3(1:1).EQ.'*') FMASK=.FALSE.                                
      IF(FMASK) THEN                                                    
      CALL OPENF(FIL3,LUN2,NSAM3,NROW3,'OLD',NF,NSLIC3)                 
      IF(NF.EQ.1) GOTO 9100                                             
      IF(NSAM3.NE.NSAM.OR.NROW3.NE.NROW.OR.NSLIC3.NE.NSLICE) GOTO 9900  
d50 3
a52 3
     $  'APPLY MASK TO BOTH, SCALING AND DIFFERENCE/ERROR? (Y/N)$',     
     $   NULL,IRT)                                                      
         IF(YN.EQ.'N') FDIFMASK=.FALSE.                                 
d54 1
a54 1
      FOUT=.TRUE.                                                       
d59 4
a62 2
      CALL OPENF(FIL4,LUN3,NSAM,NROW,'U',NF,NSLICE)                     
      IF(NF.EQ.1) GOTO 9100                                             
d70 29
a98 28
        NVOX=0                                                          
	DO ISL=1,NSLICE                                                     
	IOFF=(ISL-1)*NROW                                                      
      DO  I = 1,NROW                                                  
      CALL REDLIN(LUN,BUF,NSAM,I+IOFF)                                  
      CALL REDLIN(LUN1,BUF(NSAM+1),NSAM,I+IOFF)                         
      IF(FMASK) CALL REDLIN(LUN2,BUF(2*NSAM+1),NSAM,I+IOFF)             
      DO 20 K = 1,NSAM                                                  
      IF(FMASK) THEN                                                    
        IF(BUF(2*NSAM+K).LT..5) GOTO 20                                 
      ENDIF                                                             
      NVOX=NVOX+1                                                       
      B = BUF(K)                                                        
      C=BUF(NSAM+K)                                                     
      P1=B*C                                                            
      P2=C*C                                                            
      S1=S1+P1                                                          
      S2=S2+P2                                                          
      S3=S3+C                                                           
      S4=S4+B                                                           
C      IF((B.NE.0.OR.C.NE.0).AND.NSAM.LE.16)                             
C     $  WRITE(NOUT,103)ISL,I,K,B,C,P1,P2,S1,S2,S3,S4                    
C103   FORMAT(1H ,'SLICE: ',I3,' , ROW: ',I3,' , COL: ',I3,/             
C     $' VOXEL 1: ',F16.4,' , VOXEL 2: ',F16.4, /                        
C     $'     AD1: ',F16.4,'       AD2: ',F16.4, /                        
C     $'      S1: ',F16.4,'        S2: ',F16.4, /                        
C     $'      S3: ',F16.4,'        S4: ',F16.4)                          
20    CONTINUE                                                          
d100 1
a100 2
	ENDDO
      IF(NVOX.EQ.0) THEN                                                
d136 1
a136 1
C      IF((B.NE.0.OR.C.NE.0).AND.NSAM.LE.16)                             
d155 6
a160 5
        IF(NSEL(1).EQ.0) GOTO 9999                                      
        PARAM(NSEL(1))=A                                                
        IF(NSEL(2).EQ.0) GOTO 9999                                      
        PARAM(NSEL(2))=CONST                                            
      GOTO 9999                                                         
@


1.7
log
@*** empty log message ***
@
text
@d136 1
a136 1
100   FORMAT(1H ,'SCALING OF SECOND 3D: VOXEL_NEW=VOXEL_OLD*',F16.6,    
@


1.6
log
@printout removed
@
text
@d56 1
a56 1
	DO 60 ISL=1,NSLICE                                                     
d58 1
a58 1
      DO 40 I = 1,NROW                                                  
d83 2
a84 2
40    CONTINUE                                                          
60	CONTINUE                                                             
d100 1
a100 1
      DO 61 ISL=1,NSLICE                                                
d102 1
a102 1
      DO 41 I = 1,NROW                                                  
d130 3
a132 2
41    CONTINUE                                                          
61    CONTINUE                                                          
@


1.5
log
@put back the close(lun3)
@
text
@a3 1
                                                                        
a4 1
                                                                        
a5 3
                                                                        
                                                                        
#ifdef SP_UNIX                                                          
a6 4
#else                                                                   
      INCLUDE 'COMMON1:CMBLOCK.INC'                                     
#endif                                                                  
                                                                        
a8 1
                                                                        
a9 1
                                                                        
d14 1
a14 1
                                                                        
a15 1
                                                                        
a17 1
                                                                        
a21 1
                                                                        
a25 1
                                                                        
a26 1
                                                                        
a31 1
                                                                        
a35 2
                                                                        
                                                                        
a38 2
                                                                        
                                                                        
a39 1
                                                                        
a40 1
                                                                        
a44 1
                                                                        
a47 1
                                                                        
a48 3
                                                                        
                                                                        
                                                                        
d53 2
a54 3
      SUM1=0                                                            
      SUM2=0                                                            
                                                                        
a60 1
                                                                        
a61 1
                                                                        
a62 1
                                                                        
d64 1
a64 1
        IF(BUF(2*NSAM+K).LT..1) GOTO 20                                 
a65 1
                                                                        
a66 1
                                                                        
d75 7
a81 7
      IF((B.NE.0.OR.C.NE.0).AND.NSAM.LE.16)                             
     $  WRITE(NOUT,103)ISL,I,K,B,C,P1,P2,S1,S2,S3,S4                    
103   FORMAT(1H ,'SLICE: ',I3,' , ROW: ',I3,' , COL: ',I3,/             
     $' VOXEL 1: ',F16.4,' , VOXEL 2: ',F16.4, /                        
     $'     AD1: ',F16.4,'       AD2: ',F16.4, /                        
     $'      S1: ',F16.4,'        S2: ',F16.4, /                        
     $'      S3: ',F16.4,'        S4: ',F16.4)                          
a84 1
                                                                        
d96 4
a99 5
                                                                        
      SUM1=0                                                            
      SUM2=0                                                            
      DNOM=0                                                            
      DNUM=0                                                            
a102 1
                                                                        
a105 1
                                                                        
a107 1
                                                                        
a110 2
                                                                        
                                                                        
d121 6
a126 6
      IF((B.NE.0.OR.C.NE.0).AND.NSAM.LE.16)                             
     $ WRITE(NOUT,104)ISL,I,K,B,C,BD1,BD2,SUM1,SUM2                     
104   FORMAT(1H ,'SLICE: ',I3,' , ROW: ',I3,' , COL: ',I3,/             
     $' VOXEL 1: ',F16.4,' , VOXEL 2: ',F16.4, /                        
     $'     BD1: ',F16.4,'       BD2: ',F16.4, /                        
     $'    SUM1: ',F16.4,'      SUM2: ',F16.4)                          
a128 1
                                                                        
a129 1
                                                                        
a131 1
                                                                        
a132 1
                                                                        
a142 1
                                                                        
a143 1
                                                                        
a144 1
                                                                        
d146 1
a146 2
      CALL ERRT(IER,'COMP3D',NE)                                        
                                                                        
a150 1
      RETURN                                                            
@


1.4
log
@added comments and forgot to close(lun3)
@
text
@d199 1
@


1.3
log
@close unit lun3
@
text
@d1 201
a201 241

*++*******************************************************************
C
C  COMP3Dmad.FOR 
C  AUTHOR: M.RADERMACHER
C ********************************************************************
C
C      COMP3DMAd 
C
C      COMP3DMASKW(LUN,LUN1,LUN2,LUN4)
C      LUN*    LOGICAL UNIT NUMBER OF IMAGE1,IMAGE2,MASK,3D-DIFFERENCE
C                                                    
C      COMPARE TWO 3D VOLUMES WIHTIN AN OPTIONALLY GIVEN MASK. IF A 
c      FILE NAME FOR A 3D DIFFERENCE VOLUME IS GIVEN, THEN VOLUME 1 IS 
c      SCALED, AND VOLUME 2 IS SUBTRACTED FROM THE SCALED VOLUME 1. THE 
c      SCALING IS DONE SUCH THAT THE ERROR MEASUERS ARE MINIMAL.
C
C      ERROR MEASURES USED: 
C      MEAN RELATIVE ERROR: E=SUM |A*DIJ2-DIJ1-CONST| / SUM |DIJ1-D| 
C      DISCREPANCY: E=SQRT [ SUM ((A*DIJ2-DIJ1)**2)/ SUM ((DIJ-D)**2)]
C      DIJ1,DIJ2 VOXEL VALUES OF VOLUME 1 AND VOLUME 2
C      A OPTIMUM SCALING FACTOR
C
C--*******************************************************************

      SUBROUTINE COMP3DMAd(LUN,LUN1,LUN2,LUN3)

      IMPLICIT DOUBLE PRECISION (A-H,O-X)
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
      COMMON ADUM(80),BUF(2048)            
      COMMON /COMMUN/ FIL2,FIL1,FIL3,FIL4

      REAL ADUM,BUF

      CHARACTER *81 FIL2,FIL1,FIL3,FIL4
      CHARACTER *1  NULL,YN
      INTEGER       NVOX
      LOGICAL FMASK,FOUT,FDIFMASK

      NULL=CHAR(0)

      WRITE(NOUT,101)
101   FORMAT(' COMPARISON OF 2 3D ARRAYS:')

C GET NAME OF VOLUME 1 AND OPEN FILE. IF ERROR OCCURS, RETURN
      CALL FILERD(FIL1,NLET1,NULL,'FIRST',IRTFLG)
      IF (IRTFLG .NE. 0) GOTO 9999
      CALL OPENF(FIL1,LUN,NSAM,NROW,'OLD',NF,NSLICE)
      IF(NF.EQ.1) GOTO 9100

C GET NAME OF VOLUME 1 AND OPEN FILE. IF ERROR OCCURS, RETURN
      CALL FILERD(FIL2,NLET2,NULL,'SECOND',IRTFLG)
      IF (IRTFLG .NE. 0) GOTO 9999
      CALL OPENF(FIL2,LUN1,NSAM2,NROW2,'OLD',NF,NSLIC2)
      IF(NF.EQ.1) GOTO 9100

      IF(NSAM2.NE.NSAM.OR.NROW2.NE.NROW.OR.NSLIC2.NE.NSLICE) GOTO 9900

C GET NAME OF MASK FILE. IF NO MASK IS WANTED ENTER "*". IF ERROR 
C OCCURS, RETURN.
      FMASK=.TRUE.
      FDIFMASK=.TRUE.
      CALL FILERD(FIL3,NLET2,NULL,'MASK',IRTFLG)
      IF (IRTFLG .GT. 0) GOTO 9999
      IF(FIL3(1:1).EQ.'*') FMASK=.FALSE.

      IF(FMASK) THEN
      CALL OPENF(FIL3,LUN2,NSAM3,NROW3,'OLD',NF,NSLIC3)
      IF(NF.EQ.1) GOTO 9100
      IF(NSAM3.NE.NSAM.OR.NROW3.NE.NROW.OR.NSLIC3.NE.NSLICE) GOTO 9900

C MASK CAN BE USED EITHER ONLY FOR SCALING CALCULATION OR FOR BOTH,
C SCALING AND DIFFERENCE/ERROR CALCULATION. 

         CALL RDPRMC(YN,NA,.TRUE.,
     $  'APPLY MASK TO BOTH, SCALING AND DIFFERENCE/ERROR? (Y/N)$',
     $   NULL,IRT)


         IF(YN.EQ.'N') FDIFMASK=.FALSE.

      ENDIF

C GET NAME OF OUTPUT DIFFERENCE FILE. IF NO DIFFERENCE IS WANTED 
C ENTER "*". IF ERROR OCCURS, RETURN.
      FOUT=.TRUE.
      CALL FILERD(FIL4,NLET2,NULL,'OUTPUT DIFFERENCE',IRTFLG)
      IF (IRTFLG .GT. 0) GOTO 9999
      IF(FIL4(1:1).EQ.'*') FOUT=.FALSE.

      IF(FOUT) THEN
      CALL OPENF(FIL4,LUN3,NSAM,NROW,'U',NF,NSLICE)
      IF(NF.EQ.1) GOTO 9100

      ENDIF


C     CALCULATE SCALING FACTOR OF VOLUME 2 (LINEAR LEAST SQUARE FIT
C     OF 2 PARAMETERS)

      S1=0.
      S2=0.
      S3=0.
      S4=0.
      SUM1=0
      SUM2=0

        NVOX=0
	DO 60 ISL=1,NSLICE
	IOFF=(ISL-1)*NROW
      DO 40 I = 1,NROW
      CALL REDLIN(LUN,BUF,NSAM,I+IOFF)
      CALL REDLIN(LUN1,BUF(NSAM+1),NSAM,I+IOFF)

      IF(FMASK) CALL REDLIN(LUN2,BUF(2*NSAM+1),NSAM,I+IOFF)

      DO 20 K = 1,NSAM

      IF(FMASK) THEN
        IF(BUF(2*NSAM+K).LT..1) GOTO 20
      ENDIF

      NVOX=NVOX+1

      B = BUF(K)
      C=BUF(NSAM+K)
      P1=B*C 
      P2=C*C
      S1=S1+P1
      S2=S2+P2
      S3=S3+C
      S4=S4+B
C FOR TEST PURPOSES:
      IF((B.NE.0.OR.C.NE.0).AND.NSAM.LE.16)
     $  WRITE(NOUT,103)ISL,I,K,B,C,P1,P2,S1,S2,S3,S4
103   FORMAT(1H ,'SLICE: ',I3,' , ROW: ',I3,' , COL: ',I3,/
     $' VOXEL 1: ',F16.4,' , VOXEL 2: ',F16.4, /
     $'     AD1: ',F16.4,'       AD2: ',F16.4, /
     $'      S1: ',F16.4,'        S2: ',F16.4, /
     $'      S3: ',F16.4,'        S4: ',F16.4)
20    CONTINUE
40    CONTINUE
60	CONTINUE
      
      IF(NVOX.EQ.0) THEN 
      WRITE(NOUT,601)
601   FORMAT(//1X,'THERE ARE NO VOXELS PASSED WITH THE MASK PROVIDED'/
     $' A COMPARISON WOULD BE MEANINGLESS AND THEREFOR'/
     $' HAS NOT BEEN DONE. IT WOULD BE ADVISABLE TO CHECK'/
     $' YOUR MASK.'//)
      GOTO 9999
      ENDIF
      A=(S1-S3*S4/NVOX)/(S2-S3*S3/NVOX) 
      CONST=(A*S3-S4)/NVOX
      BMEAN=S4/NVOX   

C CALCULATE DIFFERENCE VOLUME AND ERROR MEASURES:      
      SUM1=0
      SUM2=0
      DNOM=0
      DNUM=0
      DO 61 ISL=1,NSLICE
      IOFF=(ISL-1)*NROW
      DO 41 I = 1,NROW
      
      CALL REDLIN(LUN,BUF,NSAM,I+IOFF)
      CALL REDLIN(LUN1,BUF(NSAM+1),NSAM,I+IOFF)
C
C         READ LINE FROM MASK FILE:
          IF(FMASK) CALL REDLIN(LUN2,BUF(2*NSAM+1),NSAM,I+IOFF)

      DO 21 K = 1,NSAM
C
C         ZERO OUTPUT ARRAY: 
          IF(FOUT) BUF(3*NSAM+K)=0. 

C         APPLY MASK:
          IF(FMASK.AND.FDIFMASK) THEN
            IF(BUF(2*NSAM+K).LT..1) GOTO 21
          ENDIF


      B = BUF(K)
      C=BUF(NSAM+K)
      BD=(A*C-B-CONST)
      BD1=DABS(BD) 
      BD2=DABS(B-BMEAN)
      SUM1=SUM1+BD1
      SUM2=SUM2+BD2 
      BD1SQ=BD1*BD1
      DNOM=DNOM+(B-BMEAN)*(B-BMEAN)
      DNUM=DNUM+BD1SQ
      IF((B.NE.0.OR.C.NE.0).AND.NSAM.LE.16) 
     $ WRITE(NOUT,104)ISL,I,K,B,C,BD1,BD2,SUM1,SUM2
104   FORMAT(1H ,'SLICE: ',I3,' , ROW: ',I3,' , COL: ',I3,/
     $' VOXEL 1: ',F16.4,' , VOXEL 2: ',F16.4, /
     $'     BD1: ',F16.4,'       BD2: ',F16.4, /
     $'    SUM1: ',F16.4,'      SUM2: ',F16.4)
      IF(FOUT) BUF(3*NSAM+K)=BD
21    CONTINUE

C        WRITE DIFFERENCE VOLUME:
         IF(FOUT) CALL WRTLIN(LUN3,BUF(3*NSAM+1),NSAM,I+IOFF)

41    CONTINUE
61    CONTINUE

C MEAN REALTIVE ERROR
      DIF=(SUM1)/SUM2

C DISCREPANCY:
      DISCR=DSQRT(DNUM/DNOM)
C
      WRITE(NOUT,100) A,CONST,DIF,DISCR
100   FORMAT(1H ,'SCALING OF SECOND 3D: VOXEL_NEW=VOXEL_OLD*',F16.6,
     $' - ',F16.6/
     $' MEAN RELATIVE ERROR: ',F10.5/
     $'         DISCREPANCY: ',F15.5)
        IF(NSEL(1).EQ.0) GOTO 9999
        PARAM(NSEL(1))=A
        IF(NSEL(2).EQ.0) GOTO 9999
        PARAM(NSEL(2))=CONST

      GOTO 9999

9100  CONTINUE

9900  CONTINUE  
      CALL ERRT(IER,'COMP3D',NE)   

9999  CLOSE (LUN)
      CLOSE (LUN1)
      CLOSE (LUN2)
      CLOSE (LUN3)
      RETURN
      END
                           
@


1.2
log
@cpp_lines_added
@
text
@a28 1

d30 1
a30 1
      INCLUDE 'CMBLOCK.INC'
d32 1
a32 1
      INCLUDE 'COMMON1:CMBLOCK.INC'
d238 1
@


1.1
log
@Initial revision
@
text
@d30 3
d34 1
@
