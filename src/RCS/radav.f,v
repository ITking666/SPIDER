head	1.19;
access;
symbols
	healthdept_2018:1.19
	pre_getangas:1.14
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.13
	pre_fftwrings:1.13
	pre_opfiles:1.13
	src:1.13
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.11
	prec_CA:1.11
	noindx:1.10
	Bproc:1.10
	oct21:1.6
	last77:1.6;
locks; strict;
comment	@c @;


1.19
date	2018.10.03.14.34.13;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2013.11.22.17.08.50;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2012.05.17.12.52.51;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2012.05.17.12.37.31;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2012.05.16.18.37.40;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.24.13.26.36;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.20.25.55;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.18.17.45;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.02.20.19.40.45;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.25.21.02.45;	author bimal;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.17.20.23.33;	author bimal;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.17.19.02.28;	author bimal;	state Exp;
branches;
next	1.7;

1.7
date	99.11.10.23.11.16;	author yuchen;	state Exp;
branches;
next	1.6;

1.6
date	99.02.04.18.34.05;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.01.07.19.50.53;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	95.07.20.16.34.22;	author ramani;	state Exp;
branches;
next	1.3;

1.3
date	95.07.20.15.18.14;	author ramani;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.09.31;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.50;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.19
log
@email_health_dept
@
text
@C++*********************************************************************
C
C RADAV.F    ADDED 'RO SD'                      MAY 2012  ARDEAN LEITH
C            ADDED RITHALF                      NOV 2013  ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2013  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  RADAV(LUN1,LUN2)
C
C  PURPOSE: ROTATIONAL AVERAGING INTO A SINGLE LINE
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C **********************************************************************

      SUBROUTINE RADAV()

      IMPLICIT NONE

      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'

      CHARACTER(LEN=MAXNAM)   :: FILNAM,FILDOC
      CHARACTER(LEN=80)       :: COMMEN
      INTEGER                 :: MAXIM1,ITYPE,NX1,NY1,NZ1,NX2,NY2,NZ2
      INTEGER                 :: MAXIM2,IRMAX,IRMAX2,IRMAX3
      INTEGER                 :: NOUTANG,NLET,IRTFLG,IERR,KEY,IHALF
      LOGICAL                 :: NEWFILE
      REAL                    :: DLIST(3)
      REAL,ALLOCATABLE        :: BUF(:)
      CHARACTER(LEN=1)        :: HALF

      INTEGER, PARAMETER      :: LUN1   = 21
      INTEGER, PARAMETER      :: LUN2   = 22
      INTEGER, PARAMETER      :: LUNDOC = 80

C     OPEN INPUT FILE
      MAXIM1 = 0
      CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NX1,NY1,NZ1,
     &               MAXIM1,'INPUT',.FALSE.,IRTFLG)
      IF (IRTFLG .NE. 0) RETURN

      IRMAX  = NX1/2 + MOD(NX1,2)
      IRMAX2 = NY1/2 + MOD(NY1,2)
      IRMAX3 = NZ1/2 + MOD(NZ1,2)

      IF (NZ1 == 1)THEN
         NX2 = MIN(IRMAX,IRMAX2)
      ELSE
         NX2 = MIN(IRMAX,IRMAX2,IRMAX3)
      ENDIF

      NY2 = 1
      NZ2 = 1
           
C     OPEN AN OUTPUT FILE
      MAXIM2 = 0 
      ITYPE  = 1
      CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &               NX2,NY2,NZ2,
     &  	     MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
      IF (IRTFLG .NE. 0) GOTO 9999

      IRMAX  =  NX2
  
      ALLOCATE(BUF (IRMAX), STAT=IERR)
      IF (IERR .NE. 0) THEN
      	 CALL ERRT(46,'RADAV; BUF',IRMAX)
         GOTO 9999
      ENDIF

      IF (NZ1 == 1) THEN
C        IMAGE

C        CHECK FOR HALF IMAGE AVERAGE (L or R)
         HALF = FCHAR(7:7)

         CALL CRCSE1(LUN1,LUN2, NX1,NY1, IRMAX,BUF,HALF)
      ELSE
C        VOLUME
         CALL CRCSE3(LUN1,LUN2, NX1,NY1,NZ1, IRMAX,BUF)
      ENDIF

 

      IF (FCHAR(4:4) .NE. 'S') GOTO 9999

C     OPEN OUTPUT DOC FILE (FOR APPENDING)
      NOUTANG = LUNDOC
      CALL OPENDOC(FILDOC,.TRUE.,NLET,LUNDOC,NOUTANG,.TRUE.,
     &             'OUTPUT  DOCUMENT',.FALSE.,.TRUE.,.TRUE.,
     &             NEWFILE,IRTFLG)
      IF (IRTFLG .NE. 0) GOTO 9999

      IF (NEWFILE) THEN

C        LABELS FOR COLUMNS IN OUTPUT DOC FILE
         COMMEN = '        CONTENTS:  ROTATIONAL AVERAGE'
         CALL LUNDOCPUTCOM(LUNDOC,COMMEN,IRTFLG)
         COMMEN = '        AVERAGE       RADIUS      SPATIAL-FREQ'
         CALL LUNDOCPUTCOM(LUNDOC,COMMEN,IRTFLG)
      ENDIF

      DO KEY = 1,IRMAX

C        RADIAL AVERAGE
         DLIST(1) = BUF(KEY)

C        RADIUS
         DLIST(2) = KEY

C        SPATIAL FREQ.
         DLIST(3) = FLOAT(KEY) / (2.0 * IRMAX) 

         CALL LUNDOCWRTDAT(LUNDOC,KEY,DLIST,3,IRTFLG)
      ENDDO

9999  IF (ALLOCATED(BUF))   DEALLOCATE(BUF)
      CLOSE(LUNDOC)
      CLOSE(LUN1)
      CLOSE(LUN2)

      END
@


1.18
log
@added half image options
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.17
log
@commen line in doc file changed
@
text
@d4 1
d10 1
a10 1
C=* Copyright 1985-2012  Health Research Inc.,                         *
d46 1
a46 1
      INTEGER                 :: NOUTANG,NLET,IRTFLG,IERR,KEY
d50 1
d93 5
a97 1
         CALL CRCSE1(LUN1,LUN2, NX1,NY1, IRMAX,BUF)
@


1.16
log
@prompts changed
@
text
@d113 1
a113 1
         COMMEN = '        AMPLITUDE     RADIUS      SPATIAL-FREQ'
@


1.15
log
@added 'RO SD' operation
@
text
@d3 1
a3 1
C RADAV.F 
d9 1
a9 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d57 1
a57 1
     &               MAXIM1,'INPUT1',.FALSE.,IRTFLG)
@


1.14
log
@GPL_2010
@
text
@d29 1
a29 1
C  IMAGE_PROCESSING_ROUTINE
d34 1
a34 1
        SUBROUTINE RADAV(LUN1,LUN2)
d36 1
a36 2
        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'
d38 2
a39 1
        CHARACTER(LEN=MAXNAM)   ::  FILNAM
d41 16
a56 3
C       OPEN INPUT FILE
        MAXIM1 = 0
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,NSAM1,NROW1,NSLIC1,
d58 1
a58 1
	IF (IRTFLG .NE. 0) RETURN
d60 12
a71 11
        IRMAX  = NSAM1/2  + MOD(NSAM1,2)
        IRMAX2 = NROW1/2  + MOD(NROW1,2)
        IRMAX3 = NSLIC1/2 + MOD(NSLIC1,2)

	IF (NSLIC1 .EQ. 1)THEN
           NSAM2 = MIN0(IRMAX,IRMAX2)
	ELSE
           NSAM2 = MIN0(IRMAX,IRMAX2,IRMAX3)
	ENDIF
        NROW2  = 1
	NSLIC2 = 1
d73 5
a77 5
C       OPEN AN OUTPUT FILE
        MAXIM2 = 0 
	IFORM  = 1
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',IFORM,
     &               NSAM2,NROW2,NSLIC2,
d79 1
a79 1
	IF (IRTFLG .NE. 0) RETURN
d81 1
a81 1
        IRMAX  =  NSAM2
d83 52
a134 5
        IF (NSLIC1.EQ.1)THEN
           CALL CRCSE1(LUN1,LUN2,NSAM1,NROW1,IRMAX)
        ELSE
           CALL CRCSE3(LUN1,LUN2,NSAM1,NROW1,NSLIC1,IRMAX)
        ENDIF
d136 1
a136 1
        END
@


1.13
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.12
log
@HRI GPL License used
@
text
@a1 1
C++*************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
a29 1
C **************************************************************************
a36 1
C **************************************************************************
@


1.11
log
@opfilec.
opfilec
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d48 1
@


1.10
log
@added include file
@
text
@d3 1
a3 1
C $$ RADAV.FOR
d15 1
a15 1
C $$ RADAV:
d17 1
a17 1
C IMAGE_PROCESSING_ROUTINE
a18 1
C        1         2         3         4         5         6         7
d23 1
d25 3
a27 1
        CHARACTER *81 FILNAM
a29 1

d31 3
a33 5
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     &             MAXIM1,'INPUT1',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) THEN
           CALL ERRT(4,'RADAV, INPUT FILE ',NE)
        ENDIF
d49 5
a53 6
	IFORM = 1
        CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM2,NROW2,NSLIC2,
     &  	   MAXIM2,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) THEN
           CALL ERRT(4,'RADAV, OUTPUT FILE ',NE)
        ENDIF
@


1.9
log
@*** empty log message ***
@
text
@d24 1
a24 1

d29 1
d48 2
a49 1
C       OPEN AN OUTPUT FILE 
@


1.8
log
@adapted to F90
@
text
@d54 2
@


1.7
log
@a
@
text
@d12 1
a12 1
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
d17 4
d23 5
a27 2
	SUBROUTINE RADAV(LUN1,LUN2,NSAM1,NROW1,NSLIC1,MAXDIM)
 
d29 5
a33 2
        INCLUDE 'CMBLOCK.INC'
	COMMON BUF(1)
d35 3
a37 2
	IRMAX=NSAM1/2
	IF (NSLIC1.EQ.1)THEN
d39 2
a40 2
	   CALL CRCSE1(LUN1,BUF,NSAM1,NROW1,
     &		BUF(NSAM1+1),BUF(NSAM1+IRMAX+1),IRMAX)
d42 1
a42 2
	   CALL CRCSE3(LUN1,NSAM1,NROW1,NSLIC1,BUF,
     &  BUF(NSAM1+1),BUF(NSAM1+IRMAX+1),IRMAX)
d44 16
d61 1
a61 2
	CALL WRTLIN(LUN2,BUF(NSAM1+1),IRMAX,1)
	END
@


1.6
log
@CNO_SAVE
@
text
@d20 1
a20 1
CNO_SAVE 
@


1.5
log
@*** empty log message ***
@
text
@d20 2
d24 1
a24 1
c
d26 1
a26 1
	IF(NSLIC1.EQ.1)THEN
d28 1
a28 1
	CALL CRCSE1(LUN1,BUF,NSAM1,NROW1,
d31 1
a31 1
	CALL CRCSE3(LUN1,NSAM1,NROW1,NSLIC1,BUF,
d34 1
@


1.4
log
@*** empty log message ***
@
text
@a19 1
#ifdef SP_UNIX
a20 3
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
@


1.3
log
@added 3D operation for RO
@
text
@a24 1

d26 1
a26 1

d29 1
@


1.2
log
@cpp_lines_added
@
text
@a0 1

d19 1
a19 2
	SUBROUTINE RADAV(LUN1,LUN2,NSAM1,NROW1,MAXDIM)

d28 2
a29 1
	IRMAX=nsam1/2
d31 6
a36 2
     &		BUF(nsam1+1),buf(nsam1+irmax+1),irmax)
	CALL WRTLIN(LUN2,BUF(nsam1+1),irmax,1)
@


1.1
log
@Initial revision
@
text
@d22 3
d26 1
@
