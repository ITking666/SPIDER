head	1.15;
access;
symbols
	pre_mrcs:1.15
	healthdept_2018:1.15
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.10
	Bproc:1.10
	oct21:1.6
	last77:1.6;
locks; strict;
comment	@c @;


1.15
date	2018.10.03.14.33.54;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2013.06.11.19.00.44;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.25.02;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.34.14;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.18.24.52;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.02.03.15.26.47;	author bimal;	state Exp;
branches;
next	1.9;

1.9
date	2000.02.02.20.24.52;	author bimal;	state Exp;
branches;
next	1.8;

1.8
date	99.12.03.14.28.05;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.11.10.23.09.07;	author yuchen;	state Exp;
branches;
next	1.6;

1.6
date	97.10.01.20.16.49;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.07.09.15.20.55;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	95.10.04.19.31.37;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	95.10.04.18.36.34;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	95.08.09.17.15.50;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.14;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.15
log
@email_health_dept
@
text
@C++*********************************************************************
C
C AMOEBA.F
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C 
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

         SUBROUTINE AMOEBA(P,Y,NDIM,FTOL,FUNK,ITER,ITMAX,PR,PRR,PBAR)

         INCLUDE 'CMBLOCK.INC'

         PARAMETER (ALPHA=1.0,BETA=0.5,GAMMA=2.0)
         DIMENSION P(NDIM+1,NDIM),Y(NDIM+1),PR(NDIM)
         DIMENSION PRR(NDIM),PBAR(NDIM)

         EXTERNAL  FUNK

         MPTS = NDIM+1
         ITER = 0

1        ILO = 1
         IF (Y(1) .GT. Y(2)) THEN
            IHI  = 1
            INHI = 2
         ELSE
            IHI  = 2
            INHI = 1
         ENDIF

         DO I=1,MPTS
            IF (Y(I) .LT. Y(ILO)) ILO=I
            IF (Y(I) .GT. Y(IHI)) THEN
               INHI=IHI
               IHI=I
            ELSE IF (Y(I) .GT. Y(INHI)) THEN
               IF (I .NE. IHI) INHI=I
            ENDIF
         ENDDO

         RTOL = 2. * ABS(Y(IHI)-Y(ILO))/(ABS(Y(IHI))+ABS(Y(ILO)))
         IF (RTOL .LT. FTOL) RETURN

         IF (ITER == ITMAX) THEN
            WRITE(NOUT,*) ' Amoeba exceeding maximum iterations.'
            RETURN
         ENDIF

         ITER = ITER + 1
         DO J=1,NDIM
            PBAR(J) = 0.
         ENDDO

         DO I=1,MPTS
            IF (I .NE. IHI) THEN
               DO  J=1,NDIM
                  PBAR(J) = PBAR(J) + P(I,J)
               ENDDO
            ENDIF
         ENDDO

         DO J=1,NDIM
            PBAR(J) = PBAR(J)/NDIM
            PR(J)   = (1.+ALPHA)*PBAR(J)-ALPHA*P(IHI,J)
         ENDDO

         YPR = FUNK(PR)
         IF (YPR .LE. Y(ILO)) THEN
            DO  J=1,NDIM
               PRR(J) = GAMMA * PR(J) + (1.-GAMMA) * PBAR(J)
            ENDDO

            YPRR = FUNK(PRR)
            IF (YPRR .LT. Y(ILO)) THEN
               DO J=1,NDIM
                  P(IHI,J) = PRR(J)
               ENDDO

               Y(IHI) = YPRR
            ELSE
               DO  J=1,NDIM
                  P(IHI,J) = PR(J)
               ENDDO

               Y(IHI) = YPR
            ENDIF
         ELSE IF (YPR .GE. Y(INHI)) THEN
            IF (YPR .LT. Y(IHI)) THEN
               DO  J=1,NDIM
                  P(IHI,J) = PR(J)
               ENDDO

               Y(IHI)=YPR
            ENDIF
            DO J=1,NDIM
               PRR(J) = BETA * P(IHI,J) + (1.-BETA) * PBAR(J)
            ENDDO

            YPRR = FUNK(PRR)
            IF (YPRR .LT. Y(IHI)) THEN
               DO J=1,NDIM
                  P(IHI,J) = PRR(J)
               ENDDO

               Y(IHI) = YPRR
            ELSE
               DO  I=1,MPTS
                  IF (I .NE. ILO) THEN
                     DO  J=1,NDIM
                        PR(J)  = 0.5 * (P(I,J) + P(ILO,J))
                        P(I,J) = PR(J)
                     ENDDO

                     Y(I) = FUNK(PR)
                  ENDIF
               ENDDO
            ENDIF
         ELSE
            DO  J=1,NDIM
               P(IHI,J) = PR(J)
            ENDDO

            Y(IHI) = YPR
         ENDIF

         GO TO 1

         END

@


1.14
log
@updated
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.13
log
@GPL_2010
@
text
@d27 1
a27 1
C IMAGE_PROCESSING_ROUTINE
a28 1
C        1         2         3         4         5         6         7
d39 1
d42 2
a43 2
         MPTS=NDIM+1
         ITER=0
d45 4
a48 4
1        ILO=1
         IF (Y(1).GT.Y(2)) THEN
            IHI=1
            INHI=2
d50 2
a51 2
            IHI=2
            INHI=1
d53 1
d55 2
a56 2
            IF (Y(I).LT.Y(ILO)) ILO=I
            IF (Y(I).GT.Y(IHI)) THEN
d59 2
a60 2
            ELSE IF (Y(I).GT.Y(INHI)) THEN
               IF (I.NE.IHI) INHI=I
d64 4
a67 3
         RTOL=2.*ABS(Y(IHI)-Y(ILO))/(ABS(Y(IHI))+ABS(Y(ILO)))
         IF (RTOL.LT.FTOL) RETURN
         IF (ITER.EQ.ITMAX) THEN
d71 2
a72 1
         ITER=ITER+1
d74 1
a74 1
            PBAR(J)=0.
d78 1
a78 1
            IF (I.NE.IHI) THEN
d80 1
a80 1
                  PBAR(J)=PBAR(J)+P(I,J)
d86 2
a87 2
            PBAR(J)=PBAR(J)/NDIM
            PR(J)=(1.+ALPHA)*PBAR(J)-ALPHA*P(IHI,J)
d90 2
a91 2
         YPR=FUNK(PR)
         IF (YPR.LE.Y(ILO)) THEN
d93 1
a93 1
               PRR(J)=GAMMA*PR(J)+(1.-GAMMA)*PBAR(J)
d96 2
a97 2
            YPRR=FUNK(PRR)
            IF (YPRR.LT.Y(ILO)) THEN
d99 1
a99 1
                  P(IHI,J)=PRR(J)
d102 1
a102 1
               Y(IHI)=YPRR
d105 1
a105 1
                  P(IHI,J)=PR(J)
d108 1
a108 1
               Y(IHI)=YPR
d110 2
a111 2
         ELSE IF (YPR.GE.Y(INHI)) THEN
            IF (YPR.LT.Y(IHI)) THEN
d113 1
a113 1
                  P(IHI,J)=PR(J)
d119 1
a119 1
               PRR(J)=BETA*P(IHI,J)+(1.-BETA)*PBAR(J)
d122 2
a123 2
            YPRR=FUNK(PRR)
            IF (YPRR.LT.Y(IHI)) THEN
d125 1
a125 1
                  P(IHI,J)=PRR(J)
d128 1
a128 1
               Y(IHI)=YPRR
d131 1
a131 1
                  IF (I.NE.ILO) THEN
d133 2
a134 2
                        PR(J)=0.5*(P(I,J)+P(ILO,J))
                        P(I,J)=PR(J)
d137 1
a137 1
                     Y(I)=FUNK(PR)
d143 1
a143 1
               P(IHI,J)=PR(J)
d146 1
a146 1
            Y(IHI)=YPR
d150 1
@


1.12
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a29 1
C **************************************************************************
a35 1
C--************************************************************************
@


1.10
log
@cosmetic
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d47 1
@


1.9
log
@cosmetic
@
text
@d23 1
a23 1
         INCLUDE '/net/ithaca/usr1/spider/src/CMBLOCK.INC'
@


1.8
log
@cosmetic
@
text
@d12 1
a12 1
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
d15 4
d23 1
a23 1
         INCLUDE 'CMBLOCK.INC'
d49 1
a49 1
	 ENDDO
d60 1
a60 1
	 ENDDO
d66 1
a66 1
	       ENDDO
d68 1
a68 1
	 ENDDO
d73 1
a73 1
	 ENDDO
d79 1
a79 1
	    ENDDO
d85 1
a85 1
	       ENDDO
d91 1
a91 1
	       ENDDO
d99 1
a99 1
	       ENDDO
d105 1
a105 1
	    ENDDO
d111 1
a111 1
	       ENDDO
d120 1
a120 1
	             ENDDO
d124 1
a124 1
	       ENDDO
d129 1
a129 1
	    ENDDO
d136 1
@


1.7
log
@a
@
text
@d3 1
a3 1
C $$ AMOEBA.FOR
a14 2
C
C
d16 1
a16 3
C
C $$ AMOEBA.FOR
C
d18 3
a20 1
        INCLUDE 'CMBLOCK.INC'
d22 3
a24 2
      DIMENSION P(NDIM+1,NDIM),Y(NDIM+1),PR(NDIM),PRR(NDIM),PBAR(NDIM)
         EXTERNAL FUNK
d28 1
d30 3
a32 3
         IF(Y(1).GT.Y(2))THEN
         IHI=1
         INHI=2
d34 2
a35 2
         IHI=2
         INHI=1
d38 7
a44 7
         IF(Y(I).LT.Y(ILO)) ILO=I
         IF(Y(I).GT.Y(IHI))THEN
         INHI=IHI
         IHI=I
         ELSE IF(Y(I).GT.Y(INHI))THEN
         IF(I.NE.IHI) INHI=I
         ENDIF
d46 1
a46 1
c 11       CONTINUE
d48 4
a51 4
         IF(RTOL.LT.FTOL)RETURN
         IF(ITER.EQ.ITMAX) THEN
         WRITE(NOUT,*) ' Amoeba exceeding maximum iterations.'
         RETURN
d55 1
a55 1
         PBAR(J)=0.
d57 1
a57 1
c 12       CONTINUE
d59 5
a63 3
         IF(I.NE.IHI)THEN
         DO  J=1,NDIM
         PBAR(J)=PBAR(J)+P(I,J)
d65 1
a65 4
c 13       CONTINUE
         ENDIF
	 ENDDO
c 14       CONTINUE
d67 2
a68 2
         PBAR(J)=PBAR(J)/NDIM
         PR(J)=(1.+ALPHA)*PBAR(J)-ALPHA*P(IHI,J)
d70 1
a70 1
c 15       CONTINUE
d72 50
a121 12
         IF(YPR.LE.Y(ILO))THEN
         DO  J=1,NDIM
         PRR(J)=GAMMA*PR(J)+(1.-GAMMA)*PBAR(J)
	 ENDDO
c 16       CONTINUE
         YPRR=FUNK(PRR)
         IF(YPRR.LT.Y(ILO))THEN
         DO J=1,NDIM
         P(IHI,J)=PRR(J)
	 ENDDO
c 17       CONTINUE
         Y(IHI)=YPRR
d123 5
a127 5
         DO  J=1,NDIM
         P(IHI,J)=PR(J)
	 ENDDO
c 18       CONTINUE
         Y(IHI)=YPR
d129 1
a129 39
         ELSE IF(YPR.GE.Y(INHI))THEN
         IF(YPR.LT.Y(IHI))THEN
         DO  J=1,NDIM
         P(IHI,J)=PR(J)
	 ENDDO
c 19       CONTINUE
         Y(IHI)=YPR
         ENDIF
         DO J=1,NDIM
         PRR(J)=BETA*P(IHI,J)+(1.-BETA)*PBAR(J)
	 ENDDO
c 21       CONTINUE
         YPRR=FUNK(PRR)
         IF(YPRR.LT.Y(IHI))THEN
         DO J=1,NDIM
         P(IHI,J)=PRR(J)
	 ENDDO
c 22       CONTINUE
         Y(IHI)=YPRR
         ELSE
         DO  I=1,MPTS
         IF(I.NE.ILO)THEN
         DO  J=1,NDIM
         PR(J)=0.5*(P(I,J)+P(ILO,J))
         P(I,J)=PR(J)
	 ENDDO
c 23       CONTINUE
         Y(I)=FUNK(PR)
         ENDIF
	 ENDDO
c 24       CONTINUE
         ENDIF
         ELSE
         DO  J=1,NDIM
         P(IHI,J)=PR(J)
	 ENDDO
c 25       CONTINUE
         Y(IHI)=YPR
         ENDIF
@


1.6
log
@*** empty log message ***
@
text
@d26 1
a26 1
CNO_SAVE
@


1.5
log
@*** empty log message ***
@
text
@d37 1
a37 1
         DO 11 I=1,MPTS
d45 2
a46 1
11       CONTINUE
d54 1
a54 1
         DO 12 J=1,NDIM
d56 3
a58 2
12       CONTINUE
         DO 14 I=1,MPTS
d60 1
a60 1
         DO 13 J=1,NDIM
d62 2
a63 1
13       CONTINUE
d65 3
a67 2
14       CONTINUE
         DO 15 J=1,NDIM
d70 2
a71 1
15       CONTINUE
d74 1
a74 1
         DO 16 J=1,NDIM
d76 2
a77 1
16       CONTINUE
d80 1
a80 1
         DO 17 J=1,NDIM
d82 2
a83 1
17       CONTINUE
d86 1
a86 1
         DO 18 J=1,NDIM
d88 2
a89 1
18       CONTINUE
d94 1
a94 1
         DO 19 J=1,NDIM
d96 2
a97 1
19       CONTINUE
d100 1
a100 1
         DO 21 J=1,NDIM
d102 2
a103 1
21       CONTINUE
d106 1
a106 1
         DO 22 J=1,NDIM
d108 2
a109 1
22       CONTINUE
d112 1
a112 1
         DO 24 I=1,MPTS
d114 1
a114 1
         DO 23 J=1,NDIM
d117 2
a118 1
23       CONTINUE
d121 2
a122 1
24       CONTINUE
d125 1
a125 1
         DO 25 J=1,NDIM
d127 2
a128 1
25       CONTINUE
@


1.4
log
@wrtie ti write
@
text
@a21 2

#ifdef SP_UNIX
a22 4
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif

@


1.3
log
@change write(* to write(nout
@
text
@d55 1
a55 1
         WRTIE(NOUT,*) ' Amoeba exceeding maximum iterations.'
@


1.2
log
@nosave
@
text
@d22 7
d55 1
a55 1
         WRITE(*,*) ' Amoeba exceeding maximum iterations.'
@


1.1
log
@Initial revision
@
text
@d25 1
@
