head	1.16;
access;
symbols
	healthdept_2018:1.16
	pre_getangas:1.15
	GPL2010:1.15
	pre_GPL2010:1.14
	pre_var_equation:1.14
	pre_fftwrings:1.14
	pre_opfiles:1.14
	src:1.14
	best-code:1.14
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.12
	prec_CA:1.12
	noindx:1.11
	Bproc:1.8
	oct21:1.7
	last77:1.7;
locks; strict;
comment	@c @;


1.16
date	2018.10.03.14.34.10;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.24.13.26.16;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.20.33.39;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.18.24.21;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.19.21.41.14;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.11.14.08.21;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.12.22.16.05.07;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2000.11.03.21.27.44;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.11.10.23.09.39;	author yuchen;	state Exp;
branches;
next	1.7;

1.7
date	99.02.04.17.14.22;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	98.01.05.20.45.02;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.10.10.17.48.06;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.07.10.14.36.50;	author liy;	state Exp;
branches;
next	1.3;

1.3
date	95.04.17.18.47.17;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.07.47;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.29;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.16
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C MRREFL.F          FILENAMES LENGTHENED          JAN 89 al
C                   OPFILEC                       FEB 03 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C       MRREFL
C
C--*******************************************************************

	SUBROUTINE MRREFL

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC' 
 
        CHARACTER(LEN=MAXNAM)   ::  FNAM,OUTP

        COMMON BUF(500)

        COMMON /COMMUN/ FNAM,OUTP

	LUN1 = 11
	LUN2 = 12

        MAXIM = 0
        CALL OPFILEC(0,.TRUE.,FNAM,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
     &                   MAXIM,'INPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
 
        MAXIM  = 0
	NSLICE = 1
        CALL OPFILEC(LUN1,.TRUE.,OUTP,LUN2,'U',IFORM,NSAM,NROW,NSLICE,
     &                   MAXIM,' ',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        CALL RDPRM(FCT,NOT_USED,'INTERPOLATION FACTOR OF INPUT')
  	CALL RDPRM2(BETA,FBET,NOT_USED,'ILLUMIN. ANGLE, INTENSITY')
	CALL RDPRM(DIF,NOT_USED,'MIX FACTOR')
	IF (FCT.EQ.0) FCT=1.

	PI   = 3.142
	BETA = BETA/180*PI
	SB   = SIN(BETA)
	CB   = COS(BETA)
C       ERROR: THIS WILL NOT WORK ON SHORT IMAGES SHOULD USE REDHED al
	CALL REDLIN(LUN1,BUF,NSAM,0)
	FMIN = BUF(8)
	FMAX = BUF(7)
	CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
	DO L=1,NROW-1
	   CALL REDLIN(LUN1,BUF,NSAM,L)
	   CALL REDLIN(LUN1,BUF(NSAM+1),NSAM,L+1)
	   NNEW = 2*NSAM
           BUF(NNEW+NSAM)=0.
	
           DO I=1,NSAM-1
              BUF(NNEW+I)=0.
              I1=I
              I2=I+1
              I3=I+NSAM
              A1=BUF(I1)-FMIN
              A2=BUF(I2)-FMIN
              A3=BUF(I3)-FMIN
              IF(A1.LE.0.001) GOTO 2
              IF(A2.LE.0.001) GOTO 2
              IF(A3.LE.0.001) GOTO 2
              AD=DIF*(A1+A2+A3)/(3*(FMAX-FMIN))
              XX=(A1-A2)*FCT
              YY=(A1-A3)*FCT
C             INCIDENT SECOND LIGHT VECTOR:
              XS=CB
              YS=0
              ZS=SB
              XS2=XS*XS
              ZS2=ZS*ZS
              SABS=SQRT(XS2+ZS2)

              X2=XX*XX
              Y2=YY*YY
              CABS=SQRT(X2+Y2+1)
              CS=1./CABS
              SI=CS
              R=ABS(A1)
C             SPECULAR REFLECTION:
C             N*L:      
              XS1=XX*XS+ZS
              RX=2*XX*XS1-XS
              RY=2*YY*XS1-YS
              RZ=2*1*XS1-ZS
C             INTENSITY IN Z-COMPONENT, WHICH IS THE ONE ONE SEES:
              IF(RZ.LT.0) THEN
                 RIZ=0
              ELSE
                 RIZ=RZ/SQRT(RX*RX+RY*RY+RZ*RZ)
              ENDIF         
      
              BUF(NNEW+I)=SI-AD+DIF+RIZ*FBET
2	      CONTINUE
           ENDDO
           BUF(NNEW+NSAM)=0.
           CALL WRTLIN(LUN2,BUF(NNEW+1),NSAM,L)
        ENDDO

	DO  I=1,NSAM
           BUF(I)=0.0
        ENDDO
  
        CALL WRTLIN(LUN2,BUF(1),NSAM,NROW)
	CLOSE(LUN1)
	CLOSE(LUN2)

	RETURN
	END

@


1.15
log
@GPL_2010
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.14
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.13
log
@HRI GPL License used
@
text
@a2 1
C++*************************************************************************
a7 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.                          *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.                             *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a31 1
C **************************************************************************
@


1.12
log
@opfilec
@
text
@d2 1
d8 1
d10 1
d12 24
d42 1
@


1.11
log
@nloop,iloop_removed
@
text
@d4 2
a5 1
C MRREFL.F                               FILENAMES LENGTHENED JAN 89 al
d24 5
a29 1
        COMMON ADUM(80),BUF(500)
a31 2
        CHARACTER *81 FNAM,OUTP

d36 1
a36 1
        CALL OPFILE(.TRUE.,FNAM,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
d42 1
a42 1
        CALL OPFILE(.TRUE.,OUTP,LUN2,'U',IFORM,NSAM,NROW,NSLICE,
@


1.10
log
@lun11 --> lun1
@
text
@d43 3
a45 3
        CALL RDPRM(FCT,NLOOP,ILOOP,'INTERPOLATION FACTOR OF INPUT')
  	CALL RDPRM2(BETA,FBET,NLOOP,ILOOP,'ILLUMIN. ANGLE, INTENSITY')
	CALL RDPRM(DIF,NLOOP,ILOOP,'MIX FACTOR')
@


1.9
log
@used opfile
@
text
@d116 1
a116 1
	CLOSE(LUN11)
@


1.8
log
@a
@
text
@d4 1
a4 1
C MRREFL.FOR                             FILENAMES LENGTHENED JAN 89 al
a21 2
 

a27 3
        CHARACTER *1  NULL

        NULL=CHAR(0)
d32 3
a34 1
	CALL FILERD(FNAM,NLET,NULL,'INPUT',IRTFLG)
d36 5
a40 1
	CALL FILERD(OUTP,NLET,NULL,'OUTPUT',IRTFLG)
d47 1
a47 3
	NSLICE=1
	CALL OPENF(FNAM,LUN1,NSAM,NROW,'OLD',NF1,NSLICE)
	CALL OPENF(OUTP,LUN2,NSAM,NROW,'UNKNOWN',NF2,NSLICE)
d116 2
a117 2
	CLOSE(11)
	CLOSE(12)
@


1.7
log
@CNO_SAVE
@
text
@d22 1
a22 1
CNO_SAVE 
@


1.6
log
@used norm3
@
text
@d22 2
@


1.5
log
@*** empty log message ***
@
text
@d4 1
a4 2
C $$ MRREFL.FOR                         
C                            FILENAMES LENGTHENED JAN 89 al
d16 1
a16 1
C  $$ MRREFL
a21 1
#ifdef SP_UNIX
d23 1
a23 3
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
a28 1
	INTEGER LUN1,LUN2
d31 1
d40 4
a43 4
        CALL RDPRM(FCT,NLOOP,ILOOP,'INTERPOLATION FACTOR OF INPUT$')
  	CALL RDPRM2(BETA,fbet,NLOOP,ILOOP,'ILLUMIN. ANGLE, intensity$')
	CALL RDPRM(DIF,NLOOP,ILOOP,'MIX FACTOR$')
	IF(FCT.EQ.0) FCT=1.
d47 5
a51 4
	PI=3.142
	BETA=BETA/180*PI
	SB=SIN(BETA)
	CB=COS(BETA)
d53 8
a60 8
	FMIN=BUF(8)
	FMAX=BUF(7)
	CALL NORM(LUN1,NSAM,NROW,FMAX,FMIN,AV)
	DO  L=1,NROW-1
	CALL REDLIN(LUN1,BUF,NSAM,L)
	CALL REDLIN(LUN1,BUF(NSAM+1),NSAM,L+1)
	NNEW=2*NSAM
        BUF(NNEW+NSAM)=0.
d62 40
a101 40
	DO 2 I=1,NSAM-1
	BUF(NNEW+I)=0.
 	I1=I
	I2=I+1
	I3=I+NSAM
	A1=BUF(I1)-FMIN
	A2=BUF(I2)-FMIN
	A3=BUF(I3)-FMIN
	IF(A1.LE.0.001) GOTO 2
	IF(A2.LE.0.001) GOTO 2
	IF(A3.LE.0.001) GOTO 2
        AD=DIF*(A1+A2+A3)/(3*(FMAX-FMIN))
	XX=(A1-A2)*FCT
	YY=(A1-A3)*FCT
C INCIDENT SECOND LIGHT VECTOR:
        XS=CB
        YS=0
        ZS=SB
        XS2=XS*XS
        ZS2=ZS*ZS
        SABS=SQRT(XS2+ZS2)

   	X2=XX*XX
	Y2=YY*YY
        cabs=sqrt(x2+y2+1)
        CS=1./cabs
	SI=CS
	R=ABS(A1)
c specular reflection:
c n*l:      
         xs1=xx*xs+zs
         rx=2*xx*xs1-xs
         ry=2*yy*xs1-ys
         rz=2*1*xs1-zs
c intensity in z-component, which is the one one sees:
         if(rz.lt.0) then
         riz=0
         else
         riz=rz/sqrt(rx*rx+ry*ry+rz*rz)
         endif         
d103 7
a109 5
	BUF(NNEW+I)=SI-AD+DIF+riz*fbet
2	CONTINUE
	BUF(NNEW+NSAM)=0.
	CALL WRTLIN(LUN2,BUF(NNEW+1),NSAM,L)
	ENDDO
d111 3
a113 3
         BUF(I)=0.
	ENDDO

d117 1
@


1.4
log
@michael's new program with 2 lights from any directions
@
text
@d59 1
a59 1
	DO 1 L=1,NROW-1
d110 4
a113 3
1	CONTINUE
	DO 4 I=1,NSAM
4       BUF(I)=0.
@


1.3
log
@use lun for unit instead of 11,12
@
text
@d45 1
a45 1
C	CALL RDPRM(BETA,NLOOP,ILOOP,'ILLUMIN. ANGLE$')
d52 3
a54 3
C	BETA=BETA/180*PI
C	SB=SIN(BETA)
C	CB=COS(BETA)
d79 9
a87 1
	X2=XX*XX
d89 2
a90 1
        CS=1./SQRT(X2+Y2+1)
d93 14
a106 1
	BUF(NNEW+I)=SI-AD+DIF
@


1.2
log
@cpp_lines_added
@
text
@d33 1
d36 2
d49 2
a50 2
	CALL OPENF(FNAM,11,NSAM,NROW,'OLD',NF1,NSLICE)
	CALL OPENF(OUTP,12,NSAM,NROW,'UNKNOWN',NF2,NSLICE)
d55 1
a55 1
	CALL REDLIN(11,BUF,NSAM,0)
d58 1
a58 1
	CALL NORM(11,NSAM,NROW,FMAX,FMIN,AV)
d60 2
a61 2
	CALL REDLIN(11,BUF,NSAM,L)
	CALL REDLIN(11,BUF(NSAM+1),NSAM,L+1)
d64 1
d87 1
a87 1
	CALL WRTLIN(12,BUF(NNEW+1),NSAM,L)
d91 2
a92 1
        CALL WRTLIN(12,BUF(1),NSAM,NROW)
@


1.1
log
@Initial revision
@
text
@d23 3
d27 1
@
