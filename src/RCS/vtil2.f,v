head	1.88;
access;
symbols
	pre_mrcs:1.88
	healthdept_2018:1.88
	pre_getangas:1.70
	GPL2010:1.68
	pre_GPL2010:1.67
	pre_var_equation:1.67
	pre_fftwrings:1.63
	pre_opfiles:1.61
	src:1.61
	best-code:1.61
	x-named-regs:1.61
	x:1.61
	v13-00:1.61
	pre_GPL:1.58
	prec_CA:1.49
	noindx:1.41
	Bproc:1.39
	oct21:1.31
	last77:1.28;
locks; strict;
comment	@c @;


1.88
date	2018.10.03.14.51.09;	author leith;	state Exp;
branches;
next	1.87;

1.87
date	2018.06.01.15.52.15;	author leith;	state Exp;
branches;
next	1.86;

1.86
date	2016.03.23.15.13.28;	author leith;	state Exp;
branches;
next	1.85;

1.85
date	2014.03.28.15.51.13;	author leith;	state Exp;
branches;
next	1.84;

1.84
date	2014.02.12.18.48.32;	author leith;	state Exp;
branches;
next	1.83;

1.83
date	2013.05.22.15.30.09;	author leith;	state Exp;
branches;
next	1.82;

1.82
date	2013.05.22.14.20.30;	author leith;	state Exp;
branches;
next	1.81;

1.81
date	2013.02.15.19.52.51;	author leith;	state Exp;
branches;
next	1.80;

1.80
date	2013.01.04.15.42.47;	author leith;	state Exp;
branches;
next	1.79;

1.79
date	2012.05.08.13.01.59;	author leith;	state Exp;
branches;
next	1.78;

1.78
date	2012.04.09.16.37.38;	author leith;	state Exp;
branches;
next	1.77;

1.77
date	2012.04.09.16.25.25;	author leith;	state Exp;
branches;
next	1.76;

1.76
date	2012.01.26.15.38.43;	author leith;	state Exp;
branches;
next	1.75;

1.75
date	2011.12.16.15.00.39;	author leith;	state Exp;
branches;
next	1.74;

1.74
date	2011.12.08.19.52.11;	author leith;	state Exp;
branches;
next	1.73;

1.73
date	2011.12.08.19.31.30;	author leith;	state Exp;
branches;
next	1.72;

1.72
date	2011.11.07.18.31.25;	author leith;	state Exp;
branches;
next	1.71;

1.71
date	2011.05.16.17.53.49;	author leith;	state Exp;
branches;
next	1.70;

1.70
date	2011.01.12.18.27.31;	author leith;	state Exp;
branches;
next	1.69;

1.69
date	2011.01.10.16.30.57;	author leith;	state Exp;
branches;
next	1.68;

1.68
date	2010.06.24.13.27.15;	author leith;	state Exp;
branches;
next	1.67;

1.67
date	2008.10.17.12.35.24;	author leith;	state Exp;
branches;
next	1.66;

1.66
date	2008.06.16.15.01.48;	author leith;	state Exp;
branches;
next	1.65;

1.65
date	2008.06.16.15.01.34;	author leith;	state Exp;
branches;
next	1.64;

1.64
date	2008.06.09.12.31.31;	author leith;	state Exp;
branches;
next	1.63;

1.63
date	2007.03.29.14.48.41;	author leith;	state Exp;
branches;
next	1.62;

1.62
date	2007.01.25.16.34.58;	author leith;	state Exp;
branches;
next	1.61;

1.61
date	2005.10.18.21.06.25;	author leith;	state Exp;
branches;
next	1.60;

1.60
date	2005.10.17.20.50.49;	author leith;	state Exp;
branches;
next	1.59;

1.59
date	2005.10.17.18.41.13;	author leith;	state Exp;
branches;
next	1.58;

1.58
date	2005.08.17.13.58.31;	author leith;	state Exp;
branches;
next	1.57;

1.57
date	2005.06.03.18.26.21;	author cyang;	state Exp;
branches;
next	1.56;

1.56
date	2005.04.29.16.57.48;	author leith;	state Exp;
branches;
next	1.55;

1.55
date	2005.04.13.19.41.54;	author leith;	state Exp;
branches;
next	1.54;

1.54
date	2005.04.13.19.39.48;	author leith;	state Exp;
branches;
next	1.53;

1.53
date	2005.04.13.19.33.26;	author leith;	state Exp;
branches;
next	1.52;

1.52
date	2004.11.19.22.36.42;	author cyang;	state Exp;
branches;
next	1.51;

1.51
date	2003.11.10.23.34.34;	author pawel;	state Exp;
branches;
next	1.50;

1.50
date	2003.10.28.14.53.12;	author leith;	state Exp;
branches;
next	1.49;

1.49
date	2003.09.18.18.00.28;	author leith;	state Exp;
branches;
next	1.48;

1.48
date	2003.09.17.16.21.05;	author leith;	state Exp;
branches;
next	1.47;

1.47
date	2003.09.04.13.13.19;	author leith;	state Exp;
branches;
next	1.46;

1.46
date	2003.08.04.15.15.08;	author leith;	state Exp;
branches;
next	1.45;

1.45
date	2003.05.29.14.09.37;	author leith;	state Exp;
branches;
next	1.44;

1.44
date	2003.05.28.17.12.35;	author leith;	state Exp;
branches;
next	1.43;

1.43
date	2003.05.27.18.42.31;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	2003.02.18.19.42.11;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	2002.05.29.20.06.11;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	2001.09.14.16.23.30;	author leith;	state Exp;
branches;
next	1.39;

1.39
date	2000.04.14.13.38.02;	author bimal;	state Exp;
branches;
next	1.38;

1.38
date	2000.03.27.19.50.51;	author bimal;	state Exp;
branches;
next	1.37;

1.37
date	2000.03.27.19.49.29;	author bimal;	state Exp;
branches;
next	1.36;

1.36
date	2000.02.09.21.50.36;	author bimal;	state Exp;
branches;
next	1.35;

1.35
date	2000.02.08.20.27.07;	author bimal;	state Exp;
branches;
next	1.34;

1.34
date	2000.01.12.20.58.08;	author bimal;	state Exp;
branches;
next	1.33;

1.33
date	2000.01.06.18.29.34;	author bimal;	state Exp;
branches;
next	1.32;

1.32
date	99.10.26.20.58.40;	author bimal;	state Exp;
branches;
next	1.31;

1.31
date	99.09.17.15.04.44;	author pawel;	state Exp;
branches;
next	1.30;

1.30
date	99.09.02.16.20.51;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	99.08.26.12.44.40;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	99.03.12.20.39.21;	author pawel;	state Exp;
branches;
next	1.27;

1.27
date	99.03.12.15.12.15;	author pawel;	state Exp;
branches;
next	1.26;

1.26
date	99.03.09.16.41.40;	author pawel;	state Exp;
branches;
next	1.25;

1.25
date	99.03.09.15.44.38;	author pawel;	state Exp;
branches;
next	1.24;

1.24
date	99.03.08.22.53.59;	author pawel;	state Exp;
branches;
next	1.23;

1.23
date	98.11.09.20.39.26;	author pawel;	state Exp;
branches;
next	1.22;

1.22
date	98.11.07.18.45.24;	author pawel;	state Exp;
branches;
next	1.21;

1.21
date	98.10.23.17.23.32;	author pawel;	state Exp;
branches;
next	1.20;

1.20
date	98.10.22.15.12.14;	author pawel;	state Exp;
branches;
next	1.19;

1.19
date	98.04.03.19.29.59;	author pawel;	state Exp;
branches;
next	1.18;

1.18
date	98.01.26.19.55.57;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	98.01.21.20.34.51;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	97.12.10.16.58.57;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	97.08.19.19.47.04;	author pawel;	state Exp;
branches;
next	1.14;

1.14
date	97.07.30.12.22.01;	author pawel;	state Exp;
branches;
next	1.13;

1.13
date	97.07.23.15.59.34;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	97.04.22.23.30.12;	author pawel;	state Exp;
branches;
next	1.11;

1.11
date	96.09.30.15.43.39;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	96.04.10.20.14.14;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	95.11.13.22.05.12;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	95.10.11.15.17.01;	author mladjadj;	state Exp;
branches;
next	1.7;

1.7
date	95.01.12.13.38.09;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	95.01.12.12.31.54;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	94.08.09.10.45.31;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	94.07.11.18.40.11;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	94.06.23.10.08.41;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.12.33;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.45;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.88
log
@email_health_dept
@
text
@
C++************************************************ 6/23/80 2/20/81 VAX
C
C VTIL2.F          FILENAMES LENGTHENED               1/89 ARDEAN LEITH
C                  CHANGED                            4/93 M. LADJADJ
C                  CHANGED                            8/93 JING SU
C                  PJ CYL NEEDED OPFILE               9/01 ARDEAN LEITH
C                  OPFILEC                         3/18/03 ARDEAN LEITH 
C                  IRTFLG = 0                     10/28/03 ARDEAN LEITH
C                  PJ  CASE                       04/13/05 ARDEAN LEITH
C                  'PJ RG' REMOVED                10/18/05 ARDEAN LEITH
C                  CASE                           12/20/06 ARDEAN LEITH
C                  'RB' ADDED                      1/02/07 ARDEAN LEITH
C                  'BPD' ADDED                     1/23/07 ARDEAN LEITH
C                  'PJ RG' REMOVED                10/18/05 ARDEAN LEITH
C                  'PJ 3G' ADDED                   3/28/07 ARDEAN LEITH
C                  'BP 3G' ADDED                   3/28/07 ARDEAN LEITH
C                  'BPD --> BP, BP --> OLD'        6/08/08 ARDEAN LEITH
C                  'BP NF --> BP 3N'               6/16/08 ARDEAN LEITH
C                  WIW3D_OLD                      10/17/08 ARDEAN LEITH
C                  WIW3* RENAMED BP*               1/10/11 ARDEAN LEITH
C                  REPCG RENAMED BPCG              1/12/11 ARDEAN LEITH
C                  REPS RENAMED BPRP               5/16/11 ARDEAN LEITH
C                  REMOVED 'PJ 3O' & 'PJ 3QO'     11/07/11 ARDEAN LEITH
C                  FBS SUPPORT IN PJ3Q            11/07/11 ARDEAN LEITH
C                  ADDED 'BP RP 3'                04/09/12 ARDEAN LEITH
C                  REMOVED 'BP 3F O'               1/04/13 ARDEAN LEITH
C                  'BP 3F P','BP 3F M'             2/14/13 ARDEAN LEITH
C                  'SK' PARAMETERS                 5/20/13 ARDEAN LEITH
C                  'DR ERR' REMOVED                2/10/14 ARDEAN LEITH
C                  'PJ 2D' ADDED                   5/24/18 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2018  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  VTIL2(MAXDIM)
C
C  HANDLES: 'PS SK CS PJ BP DC DR MF RB BP '
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE VTIL2(MAXDIM)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        INTEGER               :: MAXDIM

        LOGICAL               :: REFRINGS,REPLACE

        CHARACTER(LEN=MAXNAM) :: FILNAM,FIL

        INTEGER               :: MAXIM  
        INTEGER               :: MAXIM2 
        INTEGER               :: IRTFLG 

        INTEGER, PARAMETER    :: LUN1   = 8            
        INTEGER, PARAMETER    :: LUN2   = 9
        INTEGER, PARAMETER    :: LUN3   = 10
        INTEGER, PARAMETER    :: LUN4   = 11

        MAXIM  = 0
        MAXIM2 = 0
        IRTFLG = 0

        SELECT CASE(FCHAR(1:2))

        CASE ('RB') !  -------- ROTATE & BACK PROJECT  -----------   RB
           SELECT CASE(FCHAR(4:5))

           CASE ('32') !   
              CALL BP32F(.TRUE.)
           CASE ('3F') !   
              CALL BP3F(.TRUE.,.FALSE.)
           CASE DEFAULT
              CALL ERRT(101,'UNKNOWN OPERATION',NDUM)
           END SELECT

        CASE ('DC') !  -------------- DECIMATE -------------------   DC
           CALL  DECIMATE

        CASE ('DR') !  --------------- ERROR ---------------------   DR

           SELECT CASE(FCHAR(4:6))
       
           CASE ('ERR') !   
C             CALCULATE ERROR MEASURES BETWEEN 2 VOLUMES
              CALL ERRT(101,
     &            'OBSOLETE, USE <DR DIFF> INSTEAD',NDUM)
              !CALL COMP3D(LUN1,LUN2)

           CASE ('DIF') !   
C             CALCULATE ERROR MEASURES BETWEEN 2 VOLUMES WITHIN 
C             BOUNDARIES OF A MASK, SCALE VOLS AND CALCULATE 
C             DIFFERENCE VOL
              CALL COMP3DMAD(LUN1,LUN2,LUN3,LUN4)

           CASE DEFAULT
              CALL ERRT(101,'UNKNOWN/OBSOLETE OPERATION',NDUM)
           END SELECT


        CASE ('MF') !  --------------------------------------------  MF
C          FIT SPHERE MODEL TO A 3-D RECONSTRUCTION
           CALL ERRT(101,
     &         'OBSOLETE SUBROUTINE (LUNA OR MATVEC) CALLED',NE)

        CASE ('SK') !  -------------- STACK SLICES ----------------  SK

          !WRITE(NOUT,'(A,/)') '  OBSOLETE OPERATION, USE: <CP TO VOL>'
          IF (FCHAR(4:) == 'R') THEN
             CALL STACK_REPLACE()
          ELSE
             CALL STACK()
          ENDIF

        CASE ('CS') ! ---- ARBITRARY  SLICING (SAME AS "PS A") ----  CS
C         ARBITRARY DIRECTION OF SLICING (SAME AS "PS A")
          CALL CSLICE

        CASE ('PS') ! -----------------PICK SLICE -----------------  PS

          IF (FCHAR(4:4) == 'A') THEN
C           ARBITRARY DIRECTION OF SLICING
            CALL CSLICE

          ELSE
            CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &               NX1,NY1,NZ1, MAXIM,
     &               'INPUT',.FALSE.,IRTFLG)
            IF (IRTFLG .NE. 0) GOTO 9999
            IF (IFORM .NE. 3) THEN
               CALL ERRT(2,'VTIL2',NE)
               GOTO 9999
            ENDIF

            FMIN1 = FMIN
            FMAX1 = FMAX
            AV1   = AV
            SIG1  = SIG
            ITYPE = 1
            IF (FCHAR(4:4) == 'Z') THEN

C             WANT Z SLICE
              NZ = 1
              CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &                     NX1,NY1,NZ,MAXIM2,
     &                    'OUTPUT',.FALSE.,IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 9999
              CALL PICKSL(LUN1,LUN2,NX1,NY1,NZ1)
              NX = NX1
            ELSE

C             WANT X OR Y SLICE
              NX = NX1
              IF (FCHAR(4:4) == 'X') NX = NY1
              NZ = 1
              !write(6,*) 'opening maxim2:',maxim2

              CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &                   NX,NZ1,NZ,MAXIM2,
     &                   'OUTPUT',.FALSE.,IRTFLG)
              CALL PICKSV(LUN1,LUN2,NX1,NY1,NZ1)
            ENDIF
            IF (FCHAR(5:5) == 'N') THEN
C              KEEP FMIN AND FMAX SAME FOR ALL SLICES
               IF (MYPID <= 0) WRITE(NOUT,*) 
     &            ' SETTING FMIN & FMAX:',FMIN1,FMAX1
               SIG = SIG1
               CALL SETPRM(LUN2,NX,IDUM,FMAX1,FMIN1,AV1,'U')
            ENDIF
          ENDIF


        CASE ('PJ') !  -------------- PROJECTION -----------------   PJ
C         MOST "PJ" ROUTINES OPEN THEIR OWN FILES

          NCT = lnblnkn(FCHAR)
          SELECT CASE(FCHAR(4:NCT))

          CASE ('2')
              CALL PJ2D(LUN1,LUN2,LUN3)

          CASE ('3')
              IF (USE_FBS_INTERP) THEN 
                 CALL PJ3_FBS()
              ELSE
                 CALL PJ3_N()
              ENDIF

          CASE ('3O')
              CALL ERRT(101,'OBSOLETE OPERATION, USE <PJ 3>',NE)
 
          CASE ('3Q RR')  ! NOT FBS, MAKE REFRINGS 
              REFRINGS = .TRUE.
              CALL PJ3Q_N(.FALSE., REFRINGS)

          CASE ('3Q')  ! NOT FBS 
              REFRINGS = .FALSE.
              CALL PJ3Q_N(.FALSE., REFRINGS)

          CASE ('3F RR')  ! FBS, MAKE REFRINGS
              REFRINGS = .TRUE.
              CALL PJ3Q_N(.TRUE., REFRINGS)

          CASE ('3F')  ! FBS   
               REFRINGS = .FALSE.
             CALL PJ3Q_N(.TRUE., REFRINGS)

          CASE ('3G')
              CALL PJ3G()     ! GRIDDED PROJECTION? MAR 07

          CASE ('3Q O','3QO')
              CALL ERRT(101,'OBSOLETE OPERATION, USE <PJ 3Q>',NE)

          CASE ('ST')
              CALL MRRSURF
 
          CASE ('SU')
              CALL MRSURF
 
          CASE ('SHAD')
              CALL MRREFL
 
          CASE ('COL')
              CALL MRNCOLOR

          CASE ('A','AT')
C            PROJECT VOLUME USING EXPONENTIAL ATTENUATION

C            OPEN FIRST INPUT FILE 
             CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,
     &               NX1,NY1,NZ1,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
             IF (IRTFLG .NE. 0) GOTO 9999

             CALL MRPRREP(LUN1,LUN2,MAXDIM,IER)

          CASE ('C','CY','CYL')

C            CYLINDRICAL PROJECTION
             CALL MRCP(LUN1,LUN2,LUN3)

          CASE DEFAULT
              CALL ERRT(101,'UNKNOWN/OBSOLETE OPERATION',NDUM)

          END SELECT
          CALL FLUSHRESULTS  


        CASE ('BP') !  -------- BACK PROJECTION ------------------   BP

C          ALL 'BP' ROUTINES OPEN THEIR OWN FILES

           IF (FCHAR(7:7) == 'O' .OR. FCHAR(8:8) == 'O' ) THEN !  'BP 3F O'
              CALL ERRT(101,'OBSOLETE OPERATION REMOVED',NDUM)
              GOTO 9999
           ENDIF

           SELECT CASE(FCHAR(4:5))
       
           CASE ('W2')                      !  'BP W2'  
              CALL WGBP2(MAXDIM)

           CASE ('RP')                      !  'BP RP' 
              IF (FCHAR(7:7) == '3') THEN
                 CALL BPRP3()               !  'BP RP 3'
              ELSE
                 CALL BPRP()                !  'BP RP'
              ENDIF

           CASE ('R2')                      !  'BP R2'  
              CALL BPWR(MAXDIM)

           CASE ('S2')                      !  'BP S2'   
              CALL BPS2(MAXDIM)

           CASE ('3D')                      !  'BP 3D'   
              CALL BCQ(MAXDIM)

           CASE ('3F')                      !  'BP 3F'  

              IF (FCHAR(7:7) == 'M') THEN
                 CALL BP3F_MERGE()          !  'BP 3F M'

              ELSEIF (FCHAR(7:7) == 'P' ) THEN
                 CALL BP3F(.FALSE.,.TRUE.)  !  'BP 3F P' 

              ELSE
                 CALL BP3F(.FALSE.,.FALSE.) !  'BP 3F' 
              ENDIF

           CASE ('3N')                      ! 'BP 3N'      
              CALL NN4        

           CASE ('32')                      !  'BP 32'     
              IF (FCHAR(6:6) == 'N') THEN
                ! UNDOC. OPERATION (HIGH MEMORY)
                CALL NN24                   ! 'BP 32N' 
              ELSE
                CALL BP32F(.FALSE.)
              ENDIF

           CASE ('CG')                      !  'BP CG'   
             CALL BPCG

           CASE ('3G')                      !  'BP CG'  BUGGY??
                CALL WIW3G

           CASE DEFAULT
              CALL ERRT(101,'UNKNOWN/OBSOLETE OPERATION',NDUM)
           END SELECT

           RETURN
        END SELECT

C----------------------------------------------------------------------  

9999    CLOSE(LUN1)
        CLOSE(LUN2)

        END
@


1.87
log
@pj2d
@
text
@d39 1
a39 1
C=* Email: spider@@wadsworth.org                                        *
@


1.86
log
@mrcp parameters fixed, buggy
@
text
@d31 1
d37 1
a37 1
C=* Copyright 1985-2014  Health Research Inc.,                         *
a67 2
        INTEGER, PARAMETER    :: MAXSAM = 4096
        REAL                  :: BUF(MAXSAM + 1)
d73 4
a81 4
        INTEGER               :: MAXIM  
        INTEGER               :: MAXIM2 
        INTEGER               :: IRTFLG 

d200 3
@


1.85
log
@INTEGER               :: MAXIM2 = 0 bug
@
text
@d188 1
a188 1
               IF (MYPID .LE. 0) WRITE(NOUT,*) 
d260 1
a260 16
             MAXLEN = MAXDIM - MAXSAM
             IF ((NZ1 * NX1) .GE. MAXLEN) THEN
                IF (MYPID .LE. 0) WRITE(NOUT,1999) MAXLEN
1999            FORMAT(' *** NX * NZ1 > ',I6,' NOT ALLOWED')
                CALL ERRT(31,'VTIL2',IER)
                GOTO 9999
             ENDIF

             CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,
     &                    NX1,NY1,NZ1,
     &                    MAXIM,'INPUT',.FALSE.,IRTFLG)
             IF (IRTFLG .NE. 0) GOTO 9999

             CALL MRCP(NX1,NY1,NZ1,
     &                 LUN1,LUN2,LUN3,BUF(1),
     &                 BUF(MAXSAM + 1),MAXSAM)
@


1.84
log
@'DR ERR' removed (use 'DR DIFF')
@
text
@d79 7
a85 3
        INTEGER               :: MAXIM  = 0
        INTEGER               :: MAXIM2 = 0
        INTEGER               :: IRTFLG = 0
d179 2
@


1.83
log
@*** empty log message ***
@
text
@d30 1
d36 1
a36 1
C=* Copyright 1985-2013  Health Research Inc.,                         *
d105 3
a107 1
              CALL COMP3D(LUN1,LUN2)
@


1.82
log
@SK calling changed
@
text
@d124 1
a124 1
          WRITE(NOUT,'(A,/)') '  OBSOLETE OPERATION, USE: <CP TO VOL>'
@


1.81
log
@CALL BP32F_DL --> CALL BP32F
BP3F_MERGE & CALL BP3F(.FALSE.,.TRUE.)  part
@
text
@d5 13
a17 13
C	           CHANGED                            4/93 M. LADJADJ
C	           CHANGED                            8/93 JING SU
C	           PJ CYL NEEDED OPFILE               9/01 ARDEAN LEITH
C	           OPFILEC                         3/18/03 ARDEAN LEITH 
C	           IRTFLG = 0                     10/28/03 ARDEAN LEITH
C	           PJ  CASE                       04/13/05 ARDEAN LEITH
C	           'PJ RG' REMOVED                10/18/05 ARDEAN LEITH
C	           CASE                           12/20/06 ARDEAN LEITH
C	           'RB' ADDED                      1/02/07 ARDEAN LEITH
C	           'BPD' ADDED                     1/23/07 ARDEAN LEITH
C	           'PJ RG' REMOVED                10/18/05 ARDEAN LEITH
C	           'PJ 3G' ADDED                   3/28/07 ARDEAN LEITH
C	           'BP 3G' ADDED                   3/28/07 ARDEAN LEITH
d29 1
d62 2
a63 2
	INCLUDE 'CMBLOCK.INC'
	INCLUDE 'CMLIMIT.INC'
d65 2
a66 1
	INTEGER, PARAMETER    :: MAXSAM = 4096
d68 2
a69 1
        LOGICAL               :: REFRINGS
d73 8
a80 7
	LUN1   = 8            
	LUN2   = 9
        LUN3   = 10
        LUN4   = 11
        MAXIM  = 0
        MAXIM2 = 0
        IRTFLG = 0
d123 7
a129 1
          CALL STACK(LUN1,LUN2,FCHAR(4:))
d142 2
a143 2
	    CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &               NSAM1,NROW1,NSLICE1, MAXIM,
d145 1
a145 1
	    IF (IRTFLG .NE. 0) GOTO 9999
d159 3
a161 3
              NSLICE = 1
	      CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &                     NSAM1,NROW1,NSLICE,MAXIM2,
d163 3
a165 3
	      IF (IRTFLG .NE. 0) GOTO 9999
              CALL PICKSL(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
              NSAM = NSAM1
d169 5
a173 5
              NSAM = NSAM1
              IF (FCHAR(4:4) == 'X') NSAM = NROW1
              NSLICE = 1
	      CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &                   NSAM,NSLICE1,NSLICE,MAXIM2,
d175 1
a175 1
              CALL PICKSV(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
d182 1
a182 1
               CALL SETPRM(LUN2,NSAM,IDUM,FMAX1,FMIN1,AV1,'U')
d240 5
a244 5
C	     OPEN FIRST INPUT FILE 
	     CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,
     &               NSAM1,NROW1,NSLICE1,
     &    	   MAXIM,'INPUT',.FALSE.,IRTFLG)
	     IF (IRTFLG .NE. 0) GOTO 9999
d252 1
a252 1
             IF ((NSLICE1 * NSAM1) .GE. MAXLEN) THEN
d254 1
a254 1
1999            FORMAT(' *** NSAM * NSLICE1 > ',I6,' NOT ALLOWED')
d260 2
a261 2
     &                    NSAM1,NROW1,NSLICE1,
     &  	          MAXIM,'INPUT',.FALSE.,IRTFLG)
d264 1
a264 1
             CALL MRCP(NSAM1,NROW1,NSLICE1,
d343 2
a344 2
9999	CLOSE(LUN1)
	CLOSE(LUN2)
d346 1
a346 1
	END
@


1.80
log
@removed BP 3F O , 'BP 3F O' 'BP 32F O'
@
text
@d28 1
d54 1
a54 1
C  HANDLES: 'PS SK CS PJ BP DC DR MF RB BPD(13) '
d66 1
a66 1
        LOGICAL               :: REFRINGS 
d84 1
a84 1
              CALL BP32F_DL(.TRUE.)
d86 1
a86 1
              CALL BP3F_DL(.TRUE.)
d269 1
a269 1
           IF (FCHAR(7:7) == 'O') THEN !  'BP 3F O'
a270 6
              !!CALL BP3F_OLD           !  'BP 3F O'
              GOTO 9999

           ELSEIF (FCHAR(8:8) == 'O') THEN
              CALL ERRT(101,'OBSOLETE OPERATION REMOVED',NDUM)
              !!CALL BP32F_OLD            !  'BP 32F O' 
d276 1
a276 1
           CASE ('W2')                  !  'BP W2'  
d279 1
a279 1
           CASE ('RP')                  !  'BP RP' 
d281 1
a281 1
                 CALL BPRP3()           !  'BP RP 3'
d283 1
a283 1
                 CALL BPRP()            !  'BP RP'
d286 1
a286 1
           CASE ('R2')                  !  'BP R2'  
d289 1
a289 1
           CASE ('S2')                  !  'BP S2'   
d292 1
a292 1
           CASE ('3D')                  !  'BP 3D'   
d295 13
a307 4
           CASE ('3F')                  !  'BP 3F'  
              CALL BP3F_DL(.FALSE.)
 
           CASE ('3N')                  ! 'BP 3N'      
d310 1
a310 1
           CASE ('32')                  !  'BP 32'     
d312 2
a313 1
                CALL NN24 ! UNDOC. OPERATION (HIGH MEMORY)
d315 1
a315 1
                CALL BP32F_DL(.FALSE.)
d318 1
a318 1
           CASE ('CG')                 !  'BP CG'   
d321 1
a321 1
           CASE ('3G')                 !  'BP CG'  BUGGY??
@


1.79
log
@REFRINGS = .FALSE...  since pj3q_n redefines (ifort caught bug)
@
text
@d27 1
d33 1
a33 1
C=* Copyright 1985-2012  Health Research Inc.,                         *
d126 1
a126 1
          IF (FCHAR(4:4) .EQ. 'A') THEN
d145 1
a145 1
            IF (FCHAR(4:4) .EQ. 'Z') THEN
d159 1
a159 1
              IF (FCHAR(4:4) .EQ. 'X') NSAM = NROW1
d166 1
a166 1
            IF (FCHAR(5:5) .EQ. 'N') THEN
d268 3
a270 2
           IF (FCHAR(7:7) .EQ. 'O') THEN
              CALL BP3F_OLD             !  'BP 3F O'
d273 3
a275 2
           ELSEIF (FCHAR(8:8) .EQ. 'O') THEN
              CALL BP32F_OLD            !  'BP 32F O' 
d307 1
a307 1
              IF (FCHAR(6:6) .EQ. 'N') THEN
@


1.78
log
@bug
@
text
@d64 1
d192 2
a193 1
              CALL PJ3Q_N(.FALSE., .TRUE.)
d196 2
a197 1
              CALL PJ3Q_N(.FALSE., .FALSE.)
d200 2
a201 1
              CALL PJ3Q_N(.TRUE., .TRUE.)
d204 2
a205 1
              CALL PJ3Q_N(.TRUE., .FALSE.)
@


1.77
log
@added 'bp rp 3' call
@
text
@a281 1
              CALL BPRP
@


1.76
log
@FBS_WANTED
@
text
@d26 1
d260 1
a260 1
C          ALL "BP" ROUTINES OPEN THEIR OWN FILES
d263 1
a263 1
              CALL BP3F_OLD
d265 1
d267 1
a267 1
              CALL BP32F_OLD
d273 2
a274 2
           CASE ('W2') !   
             CALL WGBP2(MAXDIM)
d276 7
a282 2
           CASE ('RP') !   
             CALL BPRP
d284 1
a284 1
           CASE ('R2') !   
d287 2
a288 2
           CASE ('S2') !   
             CALL BPS2(MAXDIM)
d290 2
a291 2
           CASE ('3D') !   
             CALL BCQ(MAXDIM)
d293 5
a297 5
           CASE ('3F') !   
             CALL BP3F_DL(.FALSE.)

           CASE ('3N')     
              CALL NN4     !   'BP NF' DOCUMENTED JUNE 2008 al 
d299 1
a299 1
           CASE ('32') !   
d301 1
a301 1
                CALL NN24    !   UNDOCUMENTED OPERATION (HIGH MEMORY)
d306 1
a306 1
           CASE ('CG') !   
d309 1
a309 1
           CASE ('3G')     !   TO RESURRECT GRIDDED BP al
@


1.75
log
@comment
@
text
@d31 1
a31 1
C=* Copyright 1985-2011  Health Research Inc.,                         *
d49 1
a49 1
C  VTIL2
d61 2
a62 3
	INTEGER, PARAMETER   :: MAXSAM = 4096
        REAL                 :: BUF(MAXSAM + 1)
        COMMON                  BUF
d109 1
a109 1
        CASE ('MF') !  -------------------------------------------   MF
d114 1
a114 1
        CASE ('SK') !  -------------- STACK SLICES ---------------   SK
d121 1
a121 1
        CASE ('PS') ! -----------------PICK SLICE ----------------   PS
d189 11
a199 2
          CASE ('3Q')  ! FBS SELECTED IN: WRITPRO
              CALL PJ3Q_N()
@


1.74
log
@pj 3 calls fbs not: 'PJ 3Q'
@
text
@d190 1
a190 1
          CASE ('3Q')
@


1.73
log
@added: PJ3_FBS if: USE_FBS_INTERP
@
text
@d181 5
a185 1
              CALL PJ3_N()
d191 1
a191 5
              IF (USE_FBS_INTERP) THEN 
                 CALL PJ3_FBS()
              ELSE
                 CALL PJ3Q_N()
              ENDIF
@


1.72
log
@ REMOVED 'PJ 3O' & 'PJ 3QO'
@
text
@d25 1
d61 3
a63 2
	PARAMETER      (MAXSAM = 4096)
        COMMON         BUF(MAXSAM + 1)
d181 1
a181 1
              CALL PJ3_N
a184 1
              !CALL PJ3
d187 5
a191 1
              CALL PJ3Q_N()
a197 1
              !CALL PJ3Q()
@


1.71
log
@reps --> bprp
@
text
@d24 1
d128 2
a129 1
     &               NSAM1,NROW1,NSLICE1, MAXIM,'INPUT',.FALSE.,IRTFLG)
d146 2
a147 1
     &            NSAM1,NROW1,NSLICE,MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
d158 2
a159 1
     &           NSAM,NSLICE1,NSLICE,MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
d182 2
a183 1
              CALL PJ3
d192 2
a193 1
              CALL PJ3Q()
d234 2
a235 1
             CALL MRCP(NSAM1,NROW1,NSLICE1,LUN1,LUN2,LUN3,BUF(1),
@


1.70
log
@repcg --> bpcg
@
text
@d23 1
d29 1
a29 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d256 1
a256 1
             CALL REPS
@


1.69
log
@renamed wiw.. bp
@
text
@d22 1
d280 1
a280 1
             CALL REPCG
@


1.68
log
@GPL_2010
@
text
@d21 1
d76 1
a76 1
              CALL WIW32D_DL(.TRUE.)
d78 1
a78 1
              CALL WIW3D_DL(.TRUE.)
d241 1
a241 1
              CALL WIW3D_OLD
d244 1
a244 1
              CALL WIW32D_OLD
d266 1
a266 1
             CALL WIW3D_DL(.FALSE.)
d275 1
a275 1
                CALL WIW32D_DL(.FALSE.)
@


1.67
log
@WIW32D_OLD WIW3D_OLD
@
text
@a22 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d24 5
a28 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                * 
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d30 1
a30 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d35 1
a35 1
C=* This program is distributed in the hope that it will be useful,    *
d37 1
a37 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a38 1
C=*                                                                    *
d40 1
a40 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.66
log
@BP 3N calls NN4
@
text
@d20 1
d244 1
a244 1
              CALL WIW3D
d247 1
a247 1
              CALL WIW32D
@


1.65
log
@BP 3N calls NN4
@
text
@d19 1
a19 1
C                  'BPNF --> BP 3N'                6/16/08 ARDEAN LEITH
d271 1
a271 1
              CALL NN4     !   DOCUMENTED JUNE 2008 al 
@


1.64
log
@'BPD --> BP, BP --> OLD'
@
text
@d19 1
d270 3
d274 5
a278 1
             CALL WIW32D_DL(.FALSE.)
a282 7
           CASE ('NF')     !   UNDOCUMENTED OPERATION??
             IF (FCHAR(6:6) .EQ. '2') THEN
                CALL NN24
             ELSE
                CALL NN4
             ENDIF

@


1.63
log
@bp 3g & pj 3g added
@
text
@d18 1
d22 1
a22 1
C=* Copyright (C) 1985-2007  Health Research Inc.                      *
a235 1
        CASE ('14') !  ------ NEW BACK PROJECTION ---------------   BPD
a236 8
           SELECT CASE(FCHAR(4:5))
           CASE ('3F') !   
              CALL WIW3D_DL(.FALSE.)

           CASE ('32') !   
              CALL WIW32D_DL(.FALSE.)
           END SELECT
 
d241 8
d267 1
a267 2
             CALL WIW3D
C            CALL WIW3D_DL(.FALSE.)
d270 1
a270 2
             CALL WIW32D
C            CALL WIW32D_DL(.FALSE.)
d275 1
a275 1
           CASE ('NF') !   UNDOCUMENTED OPERATION??
d282 1
a282 1
           CASE ('3G') !   THIS IS TO RESURRECT GRIDDED BP al
@


1.62
log
@BPD & RTD
@
text
@d15 3
d181 2
a182 3
          CASE ('RG')
C              CALL REVERSEGRID32()
               CALL ERRT(101,'OPERATION REMOVED',NE)
a185 3
#ifdef USE_MPI
              CALL FLUSHRESULTS  
#endif 
d200 1
a200 1
C            PROJECT 3VOLUME USING EXPONENTIAL ATTENUATION
d233 1
d277 1
a277 1
           CASE ('NF') !
d284 3
@


1.61
log
@REVERSEGRID removed
@
text
@d4 11
a14 8
C VTIL2.F                    FILENAMES LENGTHENED               1/89 al
C	                     CHANGED BY MAHIEDDINE LADJADJ      4/93
C                            CHANGED BY JING SU                 8/93
C                            PJ CYL NEEDED OPFILE               9/01 al
C                            OPFILEC                         3/18/03 al 
C                            IRTFLG = 0                     10/28/03
C                            PJ  CASE                       04/13/05 al
C                            'PJ RG' REMOVED                10/18/05 al
d18 1
a18 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d44 1
a44 1
C  HANDLES: 'PS SK CS PJ BP DC DR MF '
a57 3
        COMMON /COMMUN/FILNAM,FIL
        CHARACTER(LEN=27)    :: FUNC
        CHARACTER(LEN=1)     :: NULL
a58 3
	DATA FUNC/'PS SK CS PJ BP DC DR MF '/

        NULL   = CHAR(0)
a62 1
	LUND   = 7
d67 45
a111 11
        IFUNC  = 0
        IF (INDEX(FUNC,FCHAR(1:2)) .GT. 0) 
     &      IFUNC = (INDEX(FUNC,FCHAR(1:2)) / 3) + 1
        IF (IFUNC .LE. 0) RETURN

        GOTO (1,2,3,4,5,6,7,9), IFUNC

C-----------------------------------------------------------------   PS
C       PICK SLICE
1       IF (FCHAR(4:4) .EQ. 'A') THEN
C         ARBITRARY DIRECTION OF SLICING
d114 8
a121 2
        ELSE
	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
d123 37
a159 4
	  IF (IRTFLG .NE. 0) GOTO 9999
          IF (IFORM .NE. 3) THEN
             CALL ERRT(2,'VTIL2',NE)
             GOTO 9999
a161 32
          FMIN1 = FMIN
          FMAX1 = FMAX
          AV1   = AV
          SIG1  = SIG
          ITYPE = 1
          IF (FCHAR(4:4) .EQ. 'Z') THEN

C           WANT Z SLICE
            NSLICE = 1
	    CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &              NSAM1,NROW1,NSLICE,MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
	    IF (IRTFLG .NE. 0) GOTO 9999
            CALL PICKSL(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
            NSAM = NSAM1
          ELSE

C           WANT X OR Y SLICE
            NSAM = NSAM1
            IF (FCHAR(4:4) .EQ. 'X') NSAM = NROW1
            NSLICE = 1
	    CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &              NSAM,NSLICE1,NSLICE,MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
            CALL PICKSV(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
          ENDIF
          IF (FCHAR(5:5) .EQ. 'N') THEN
C            KEEP FMIN AND FMAX SAME FOR ALL SLICES
             IF (MYPID .LE. 0) WRITE(NOUT,*) ' SETTING FMIN & FMAX:',FMIN1,FMAX1
             SIG = SIG1
             CALL SETPRM(LUN2,NSAM,IDUM,FMAX1,FMIN1,AV1,'U')
          ENDIF
        ENDIF
        GOTO 9999
d163 2
a164 12
C       ----------------------------------------------------------   SK
C       STACK SLICES
2       CALL STACK(LUN1,LUN2,FCHAR(4:))
	GOTO 9999

C       ----------------------------------------------------------   CS
C       ARBITRARY DIRECTION OF SLICING (SAME AS "PS A")
3       CALL CSLICE
        GOTO 9999

C-----------------------------------------------------------------   PJ
C       MOST "PJ" ROUTINES OPEN THEIR OWN FILES
d166 2
a167 2
4       NCT = lnblnkn(FCHAR)
        SELECT CASE(FCHAR(4:NCT))
d169 2
a170 2
        CASE ('3')
            CALL PJ3_N
d172 2
a173 2
        CASE ('3O')
            CALL PJ3
d175 2
a176 2
        CASE ('3Q')
            CALL PJ3Q_N()
d178 3
a180 3
        CASE ('RG')
C            CALL REVERSEGRID32()
             CALL ERRT(101,'OPERATION REMOVED',NE)
d182 2
a183 2
        CASE ('3Q O','3QO')
            CALL PJ3Q()
d185 1
a185 1
            CALL FLUSHRESULTS  
d188 2
a189 2
        CASE ('ST')
            CALL MRRSURF
d191 2
a192 2
        CASE ('SU')
            CALL MRSURF
d194 2
a195 2
        CASE ('SHAD')
            CALL MRREFL
d197 2
a198 5
        CASE ('COL')
            CALL MRNCOLOR

        CASE ('A','AT')
C          PROJECT 3VOLUME USING EXPONENTIAL ATTENUATION
d200 2
a201 23
C	   OPEN FIRST INPUT FILE 
	   CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,
     &             NSAM1,NROW1,NSLICE1,
     &  	   MAXIM,'INPUT',.FALSE.,IRTFLG)
	   IF (IRTFLG .NE. 0) GOTO 9999

           CALL MRPRREP(LUN1,LUN2,MAXDIM,IER)

        CASE ('C','CY','CYL')

C          CYLINDRICAL PROJECTION
           MAXLEN = MAXDIM - MAXSAM
           IF ((NSLICE1 * NSAM1) .GE. MAXLEN) THEN
              IF (MYPID .LE. 0) WRITE(NOUT,1999) MAXLEN
1999          FORMAT(' *** NSAM * NSLICE1 > ',I6,' NOT ALLOWED')
              CALL ERRT(31,'VTIL2',IER)
              GOTO 9999
           ENDIF

           CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,
     &                  NSAM1,NROW1,NSLICE1,
     &  	        MAXIM,'INPUT',.FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9999
d203 5
a207 2
           CALL MRCP(NSAM1,NROW1,NSLICE1,LUN1,LUN2,LUN3,BUF(1),
     &               BUF(MAXSAM + 1),MAXSAM)
d209 1
a209 2
        CASE DEFAULT
            CALL ERRT(101,'UNKNOWN/OBSOLETE OPERATION',NDUM)
d211 1
a211 2
        END SELECT
	GOTO 9999
d213 8
a220 3
 
C-----------------------------------------------------------------   BP
C       ALL "BP" ROUTINES OPEN THEIR OWN FILES
d222 4
a225 3
5       CALL CHKINPQ('W2,RP,R2,S2,3D,3F,32F,CG,NF,NF2,RG$',
     &                FCHAR(4:),ICALL2)
 	GOTO (510,811,814,815,816,817,818,819,820,821,822,823) ,ICALL2
d227 2
a228 2
510     CALL ERRT(101,'PRJCT NO LONGER IN USE ',NDUM)
	GOTO 9999
d230 2
a231 2
811	CALL  WGBP2(MAXDIM)
	GOTO  9119
d233 1
a233 2
814	CALL  REPS
	GOTO  9119
d235 1
a235 2
815	CALL  BPWR(MAXDIM)
	GOTO  9119
d237 3
a239 2
816	CALL  BPS2(MAXDIM)
	GOTO  9119
d241 5
a245 2
817	CALL  BCQ(MAXDIM)
	GOTO  9119
d247 1
a247 2
818	CALL  WIW3D
	GOTO  9119
d249 4
a252 2
819	CALL  WIW32D
	GOTO  9119
d254 2
a255 2
820	CALL  REPCG
	GOTO  9119
d257 2
a258 2
821     CALL  NN4
        GOTO  9119
d260 2
a261 2
822     CALL  NN24
        GOTO  9119
d263 2
a264 3
823     CALL ERRT(101,'OPERATION REMOVED',NE)
C       CALL  REVERSEGRID
        GOTO  9119
d266 3
a268 3
C-----------------------------------------------------------------   DC
6       CALL  DECIMATE
        GOTO 9999
d270 3
a272 5
C-----------------------------------------------------------------   DR
7       CALL CHKINPQ('ERR,DIFF$',FCHAR(4:),KCALL1)
        GOTO (7100,7200,7300) KCALL1
       
7100    GOTO 9119
d274 2
a275 3
C       CALCULATE ERROR MEASURES BETWEEN 2 VOLUMES:
7200    CALL COMP3D(LUN1,LUN2)
        GOTO 9999
d277 6
a282 2
C       CALCULATE ERROR MEASURES BETWEEN 2 VOLUMES WITHIN THE
C       BOUNDARIES OF A MASK, SCALE VOLUMES AND CALCULATE DIFFERENCE VOL
d284 3
a286 2
7300    CALL COMP3DMAD(LUN1,LUN2,LUN3,LUN4)
        GOTO 9999
d288 2
d291 1
a291 6
C-----------------------------------------------------------------   MF
C       FIT A SPHERE MODEL TO A 3-D RECONSTRUCTION
9       CONTINUE
        CALL ERRT(101,'OBSOLETE SUBROUTINE (LUNA OR MATVEC) CALLED',NE)
	GOTO 9999
C-----------------------------------------------------------------  
a295 1
9119    RETURN
@


1.60
log
@GPL License fixed
@
text
@d11 2
d17 1
a17 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
d152 2
a153 1
            CALL REVERSEGRID32()
d250 2
a251 1
823     CALL  REVERSEGRID
@


1.59
log
@HRI GPL License used
@
text
@a11 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d15 1
a15 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a34 6

C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.58
log
@pp's resolution determ. changes
@
text
@d13 24
@


1.57
log
@removed MPI stuff
@
text
@d132 3
d193 1
a193 1
5       CALL CHKINPQ('W2,RP,R2,S2,3D,3F,32F,CG,NF,NF2$',
d195 1
a195 1
 	GOTO (510,811,814,815,816,817,818,819,820,821,822) ,ICALL2
d230 3
@


1.56
log
@pj menu
@
text
@a41 8
#ifdef USE_MPI
        include 'mpif.h'
        icomm = mpi_comm_world
        call mpi_comm_rank(icomm, mypid, mpierr)
#else
        MYPID = -1
#endif

a134 1
            call mpi_barrier(icomm,ierr)
@


1.55
log
@icomm
@
text
@d128 5
a132 1
4       SELECT CASE(FCHAR(4:))
d137 9
a145 2
        CASE ('3')
            CALL PJ3_N
d147 3
a152 3
        CASE ('ST')
            CALL MRRSURF
 
d156 3
d160 1
a188 13
        CASE ('3Q O','3QO')
            CALL PJ3Q()
#ifdef USE_MPI
            call mpi_barrier(icomm,ierr)
            CALL FLUSHRESULTS  
#endif 

        CASE ('3Q')
            CALL PJ3Q_N()

        CASE ('COL')
            CALL MRNCOLOR

@


1.54
log
@icomm
@
text
@d45 1
a45 1
        call mpi_comm_rank(comm, mypid, mpierr)
@


1.53
log
@case pj bug
@
text
@d22 2
d44 2
a45 3
        INTEGER  MYPID, COMM, MPIERR
        COMM = MPI_COMM_WORLD
        CALL MPI_COMM_RANK(COMM, MYPID, MPIERR)
d49 1
@


1.52
log
@Allow only the master processor to write to NOUT
@
text
@d4 4
a7 4
C VTIL2.F                    FILENAMES LENGTHENED            1/89 al
C	                     CHANGED BY MAHIEDDINE LADJADJ   4/93
C                            CHANGED BY JING SU              8/93
C                            PJ CYL NEEDED OPFILE            9/01 al
d9 2
a10 1
C                            IRTFLG = 0                      10/28/03
a62 3
        CALL CHKINPQ('3,SU,ST,SHAD,INTER,AT,CYL,3Q,COL$'
     &               ,FCHAR(4:),ICALL1)  
      
d113 1
a113 1
C       ---------------------------------------------------------   SK
d121 1
a121 1
        GOTO 400
a124 6
4       IF (ICALL1 .GT. 1 .AND. ICALL1 .NE. 7) GOTO 400
                                
C	OPEN FIRST INPUT FILE 
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,NSAM1,NROW1,NSLICE1,
     &  	   MAXIM,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9999
d126 1
a126 5
C	PROJECTION
400     GOTO  (410,800,950,960,965,966,967,968,962,963) ,ICALL1

410     IF (MYPID .LE. 0) WRITE(NOUT,*) '*** PRJCT NO LONGER IN USE '
	GOTO 9999
d128 1
a128 2
C       3-D PROJECTIONS
800     IF (FCHAR(5:5) .EQ. 'O') THEN
d130 2
a131 1
        ELSE
a132 2
        ENDIF
	GOTO 9999
d134 16
a149 2
950     CALL MRSURF
        GOTO 9999
d151 1
a151 2
960     CALL MRRSURF
        GOTO 9999
d153 1
a153 2
965     CALL MRREFL
	GOTO 9999
d155 13
a167 3
966     CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)
C       CALL INTERL
        GOTO 9999
d169 2
a170 2
967     CALL MRPRREP(LUN1,LUN2,MAXDIM,IER)
        GOTO 9999
d172 1
a172 19
C       CYLINDRICAL PROJECTION
968     MAXLEN = MAXDIM - MAXSAM
        IF ((NSLICE1 * NSAM1) .GE. MAXLEN) THEN
           IF (MYPID .LE. 0) WRITE(NOUT,1999) MAXLEN
1999       FORMAT(' *** NSAM*NSLICE1 > ',I6,' NOT ALLOWED')
           CALL ERRT(31,'VTIL2',IER)
           GOTO 9999
        ENDIF

        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,NSAM1,NROW1,NSLICE1,
     &  	     MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999

        CALL MRCP(NSAM1,NROW1,NSLICE1,LUN1,LUN2,LUN3,BUF(1),
     &            BUF(MAXSAM + 1),MAXSAM)
        GOTO 9999

C       FAST PROJECTION WITH 3 ANGLES:
962     IF (FCHAR(7:7) .EQ. 'O') THEN
d175 1
a175 1
            CALL MPI_BARRIER(comm,ierr)
d178 2
a179 1
        ELSE
a180 2
        ENDIF
	GOTO 9119
d182 8
a189 2
963     CALL MRNCOLOR
        GOTO 9999
d191 1
@


1.51
log
@NN4 and NN24 added
@
text
@d41 5
a45 3
        integer mypid, comm, ierr
        comm = MPI_COMM_WORLD
        call MPI_COMM_RANK(comm, mypid, ierr)
d108 1
a108 1
             WRITE(NOUT,*) ' SETTING FMIN & FMAX:',FMIN1,FMAX1
d137 1
a137 1
410     WRITE(NOUT,*) '*** PRJCT NO LONGER IN USE '
d167 1
a167 1
           WRITE(NOUT,1999) MAXLEN
@


1.50
log
@irtflg = 0
@
text
@d197 3
a199 2
5       CALL CHKINPQ('W2,RP,R2,S2,3D,3F,32F,CG$',FCHAR(4:),ICALL2)
 	GOTO (510,811,814,815,816,817,818,819,820) ,ICALL2
d227 6
@


1.49
log
@missing (
@
text
@d9 1
a9 1
C
d53 1
@


1.48
log
@aliasing
@
text
@d138 1
a138 1
800     IF (FCHAR5:5) .EQ. 'O') THEN
@


1.47
log
@for mpi
@
text
@a66 1

d138 5
a142 1
800     CALL PJ3
d179 2
a180 1
962     CALL PJ3Q()
d182 2
a183 2
        call MPI_BARRIER(comm,ierr)
        call flushresults  
d185 3
@


1.46
log
@interl call removed
@
text
@a8 2
C                            'BP 3DP'                        5/18/03 al 
C                            'PJ INTER' removed (buggy)      8/04/03 al 
d39 6
d177 4
d189 2
a190 2
5       CALL CHKINPQ('W2,RP,R2,S2,3D,3F,32F,CG,3DP',FCHAR(4:),ICALL2)
 	GOTO (510,811,814,815,816,817,818,819,820,817) ,ICALL2
@


1.45
log
@'BP 3DP' back in
@
text
@d10 1
d147 2
a148 1
966     CALL INTERL
d157 4
a160 4
          WRITE(NOUT,1999) MAXLEN
1999      FORMAT(' *** NSAM*NSLICE1 > ',I6,' NOT ALLOWED')
          CALL ERRT(31,'VTIL2',IER)
          GOTO 9999
@


1.44
log
@'BP 3DP' removed
@
text
@d9 1
d179 2
a180 2
5       CALL CHKINPQ('W2,RP,R2,S2,3D,3F,32F,CG',FCHAR(4:),ICALL2)
 	GOTO (510,811,814,815,816,817,818,819,820) ,ICALL2
@


1.43
log
@bp 3dp
@
text
@a8 1
C                            'BP 3DP'                        5/18/03 al 
d178 2
a179 2
5       CALL CHKINPQ('W2,RP,R2,S2,3D,3F,32F,CG,3DP',FCHAR(4:),ICALL2)
 	GOTO (510,811,814,815,816,817,818,819,820,817) ,ICALL2
@


1.42
log
@opfilec
@
text
@d9 1
d179 2
a180 2
5       CALL CHKINPQ('W2,RP,R2,S2,3D,3F,32F,CG$',FCHAR(4:),ICALL2)
 	GOTO (510,811,814,815,816,817,818,819,820) ,ICALL2
@


1.41
log
@mem2 & mem3 removed
@
text
@d4 1
a4 1
C VTIL2.F                    FILENAMES LENGTHENED            JAN 89 al
d6 3
a8 2
C                            CHANGED BY JING SU              8/31/93
C                            PJ CYL NEEDED OPFILE            SEP 01 al
d27 1
a29 1
        COMMON /COMMUN/FILNAM,FIL
d32 4
a35 3
        CHARACTER *81  FILNAM,FIL
        CHARACTER *27  FUNC
        CHARACTER *1   NULL
d64 1
d66 2
a67 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE1,
     &  	     MAXIM,'INPUT',.FALSE.,IRTFLG)
d78 1
a78 1
          IFORM = 1
d83 2
a84 2
	    CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM1,NROW1,NSLICE,
     &  	       MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
d94 2
a95 2
	    CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM,NSLICE1,NSLICE,
     &                 MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
d107 1
a107 1
C-----------------------------------------------------------------   SK
d112 1
a112 1
C-----------------------------------------------------------------   CS
d122 1
a122 1
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE1,
d127 1
a127 2
400     GOTO  (410,800,950,960,965,966,967,968,962,963)
     $         ,ICALL1
d160 1
a160 1
        CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE1,
@


1.40
log
@no input file for 'pj cyl'
@
text
@a52 2
        CALL CHKINPQ('W2,RP,R2,S2,3D,3F,32F,CG$'
     &               ,FCHAR(4:),ICALL2)
a174 1
5	GOTO (510,811,814,815,816,817,818,819,820) ,ICALL2
d176 4
a179 1
510     WRITE(NOUT,*) ' *** PRJCT NO LONGER IN USE '
a183 8

C812	CONTINUE
c	CALL  MEM2(MAXDIM)
C	GOTO  9119

C813	CONTINUE
c	CALL  MEM3(MAXDIM)
C	GOTO  9119
@


1.39
log
@*** empty log message ***
@
text
@d4 1
a4 1
C VTIL2.FOR                  FILENAMES LENGTHENED            JAN 89 al
d7 1
d10 6
a15 6
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
d52 1
a52 1
     $               ,FCHAR(4:),ICALL1)  
d54 1
a54 1
     $  ,FCHAR(4:),ICALL2)
d68 5
a72 1
          IF (IFORM .NE. 3) GOTO 9300
d159 5
a234 1

d238 1
a238 2
        WRITE(NOUT,*) 
     &    ' *** OBSOLETE SUBROUTINE (LUNA OR MATVEC) CALLED'
a240 6


9300	IER = 2
C	GOTO 9900

9900    CALL ERRT(IER,'VTIL2',NE)
@


1.38
log
@*** empty log message ***
@
text
@d159 1
a159 1
962     CALL PJ3Q(MAXDIM)
@


1.37
log
@dr command removed
@
text
@d212 1
a212 1
7100    GOTO 9999
@


1.36
log
@adapted for BP 32F
@
text
@d211 2
a212 8

C       PUT DENSITY REFERENCE INTO FILE:
7100    CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
     &  	   MAXIM,'THREED',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999

        CALL DENREF(LUN1,NSAM,NROW,NSLICE)
        GOTO 9999
@


1.35
log
@adapted for BP 3F
@
text
@d198 1
a198 1
819	CALL  WIW32D(MAXDIM)
@


1.34
log
@adapted for subroutine repcg
@
text
@d195 1
a195 1
818	CALL  WIW3D(MAXDIM)
@


1.33
log
@adapted for subroutine reps.f
@
text
@d201 1
a201 1
820	CALL  REPCG(MAXDIM)
@


1.32
log
@adapted for pj3
@
text
@d183 1
a183 1
814	CALL  REPS(MAXDIM)
@


1.31
log
@*** empty log message ***
@
text
@d128 1
a128 1
800     CALL PJ3(MAXDIM)
@


1.30
log
@nslice1 needed in picksl call
@
text
@d205 1
a205 1
6       CALL  DECIMATE(MAXDIM)
@


1.29
log
@nslice was constant on opfil call
@
text
@d80 1
a80 1
            CALL PICKSL(LUN1,LUN2,NSAM1,NROW1,NSLICE)
@


1.28
log
@*** empty log message ***
@
text
@a23 1
CNO_SAVE
d64 1
a64 1
	  CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
d76 2
a77 1
	    CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM1,NROW1,1,
d87 2
a88 1
	    CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM,NSLICE,1,
d90 1
a90 1
            CALL PICKSV(LUN1,LUN2,NSAM1,NROW1,NSLICE)
@


1.27
log
@decimate
@
text
@d204 1
a204 1
6       CALL  DECIMATE(MAXDDM)
@


1.26
log
@bp consolidated
@
text
@d204 1
a204 7
C	DETERMINE COMMON LINE
6       IF (FCHAR(4:4) .EQ. 'T') THEN
C          THIS PROGRAM IS OBSOLETE (WAS 'DC T').
           WRITE(NOUT,*) ' *** DC T -- NO LONGER IN USE '
        ELSE
           CALL MARKER
        END IF
@


1.25
log
@some of the BPs removed
@
text
@d53 1
a53 2
        CALL CHKINPQ(
     $	'WX,WY,XY,GW,3E,GW3,W2,RP,CTF,R2,S2,3D,3F,32F,CG$'
d166 1
a166 2
5	GOTO (510,970,980,990,998,
     &	      991,997,811,814,824,815,816,817,818,819,820) ,ICALL2
a170 18
970     CALL WEIGHTC(2,MAXDIM)
        GOTO 9999

980     CALL WEIGHTC(1,MAXDIM)
        GOTO 9999

990     CALL BAPI(1)
        GOTO 9999

998     CALL GENW
        GOTO 9999

991     CALL BAPI3A(MAXDIM)
        GOTO 9999

997     CALL GENW3E
        GOTO 9999

d182 1
a182 7
814	CONTINUE
	CALL  REPS(MAXDIM)
	GOTO  9119

824	CONTINUE
C	CALL  REPC(MAXDIM)
	CALL ERRT(41,' BP CTF',NE)
d185 1
a185 2
815	CONTINUE
	CALL  BPWR(MAXDIM)
@


1.24
log
@pj 3
@
text
@d54 1
a54 1
     $	'3,WX,WY,XY,3S,GW,3E,GW3,W2,RP,CTF,R2,S2,3D,3F,32F,CG$'
d166 2
a167 15
C       MOST "BP" ROUTINES OPEN THEIR OWN FILES
5	IF (ICALL2 .GT. 1) GOTO 500
            
C	OPEN FIRST INPUT FILE 
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE1,
     &  	   MAXIM,'INPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9999

C	OPEN SECOND INPUT FILE 
	CALL OPFIL(.TRUE.,FIL,LUN2,'O',NSAM2,NROW2,NSLICE1,
     &  	   MAXIM2,'INPUT2',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9999

C	BACK PROJECTION
500     GOTO (510,900,970,980,990,906,998,
a172 5
C       3-D BACK PROJECTION
900	CALL BPROJ3(LUN1,LUN2,MAXDIM,IER)
	IF (IER .NE. 0) GOTO 9900
	GOTO 9999

a180 4

906	CALL BPROJ4(LUN1,LUN2,MAXDIM,IER)
	IF (IER .NE. 0) GOTO 9900
	GOTO 9999
@


1.23
log
@BP CG added
@
text
@d51 1
a51 1
        CALL CHKINPQ('3,3T,SU,ST,SHAD,INTER,AT,CYL,3E,3Q,COL$'
d113 1
a113 1
4       IF (ICALL1 .GT. 1 .AND. ICALL1 .NE. 9) GOTO 400
d121 1
a121 1
400     GOTO  (410,800,810,950,960,965,966,967,968,969,962,963)
d128 1
a128 2
800     CALL PROJ3(LUN1,LUN2,MAXDIM,IER,.FALSE.)
	IF (IER.NE.0) GOTO 9900
a130 5
C       PROJECTION WITH THRESHOLD
810     CALL PROJ3(LUN1,LUN2,MAXDIM,IER,.TRUE.)
	IF (IER.NE.0) GOTO 9900
	GOTO 9999

a156 5

C       PROJECTION WITH 3 ANGLES:
969     CALL PROJ3E(LUN1,LUN2,MAXDIM,IER,.FALSE.)
	IF (IER.NE.0) GOTO 9900
	GOTO 9999
@


1.22
log
@bp 32f added
@
text
@d54 1
a54 1
     $	'3,WX,WY,XY,3S,GW,3E,GW3,W2,RP,CTF,R2,S2,3D,3F,32F$'
d192 1
a192 1
     &	      991,997,811,814,824,815,816,817,818,819) ,ICALL2
d258 3
@


1.21
log
@*** empty log message ***
@
text
@d54 1
a54 1
     $	'3,WX,WY,XY,3S,GW,3E,GW3,W2,RP,CTF,R2,S2,3D,3F$'
d192 1
a192 1
     &	      991,997,811,814,824,815,816,817,818) ,ICALL2
d255 3
@


1.20
log
@BP 3F (wiw3d) added
@
text
@d51 1
a51 1
        CALL CHKINPQ('3,3T,SU,ST,SHAD,INTER,AT,CYL,3E,3Q,COL,STP$'
d54 1
a54 1
     $	'3,WX,WY,XY,GW3D,3S,GW,B,3E,GW3,W2,RP,CTF,R2,S2,3D,3F,LOCAL$'
d121 1
a121 1
400     GOTO  (410,800,810,950,960,965,966,967,968,969,962,963,961)
a142 4
961     WRITE(NOUT,*) '*** MRRSURFPAR UNFINISHED'
C       CALL MRRSURFPAR
        GOTO 9999

d191 2
a192 2
500     GOTO (510,900,970,980,990,995,906,998,999,
     &	      991,997,811,814,824,815,816,817,818,992) ,ICALL2
a210 6
995     CONTINUE
        WRITE(NOUT,*) ' *** BP GW3D NO LONGER IN USE '
        CALL ERRT(100,'VTIL2',NE)
C       CALL GENW3D (SENT TO REJECTS)
        GOTO 9999

a217 3
999     WRITE(NOUT,*) ' *** MNBPROJ NO LONGER IN USE '
	GOTO 9999

d240 2
a241 2
	CALL  REPC(MAXDIM)
C	CALL ERRT(41,' BP CTF',NE)
a255 6

992     CONTINUE
C       CALL TDLOCAL(LUN1,LUN2,LUN3)
        WRITE(NOUT,*) ' *** BP LOCAL NO LONGER IN USE '
        CALL ERRT(100,'VTIL2',NE)
        GOTO 9999
@


1.19
log
@BP CTF restored
@
text
@d54 1
a54 1
     $	'3,WX,WY,XY,GW3D,3S,GW,B,3E,GW3,W2,RP,CTF,R2,S2,3D,LOCAL$'
d196 1
a196 1
     &	      991,997,811,814,824,815,816,817,992) ,ICALL2
d265 3
@


1.18
log
@removed atiltax3 call (DC T)
@
text
@d253 2
a254 2
C	CALL  REPC(MAXDIM)
	CALL ERRT(41,' BP CTF',NE)
@


1.17
log
@used opfil for denref call
@
text
@d275 3
a277 4
6       CALL CHKINPQ('T$',FCHAR(4:),ICALL3)
        IF (ICALL3 .EQ. 2) THEN
C          THIS PROGRAM IS OBSOLETE (WAS DC T).
           CALL ATILTAX3
@


1.16
log
@removed IFORM from OPFIL call
@
text
@d2 1
a2 1
C++*************************************************** 6/23/80 2/20/81 VAX
d8 8
a15 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d24 1
d27 3
a29 4
	PARAMETER (NFUNC  = 8)
	PARAMETER (MAXSAM = 4096)
        COMMON    /COMMUN/FILNAM,FIL
        COMMON    BUF(MAXSAM + 1)
d36 1
a36 1
CNO_SAVE
d43 4
a46 2
   
        IFUNC = 0
d67 1
a67 1
     &  	     IDUM,'INPUT',.FALSE.,IRTFLG)
d79 1
a79 1
     &  	       IDUM,'OUTPUT',.FALSE.,IRTFLG)
d89 1
a89 1
     &                 IDUM,'OUTPUT',.FALSE.,IRTFLG)
d93 4
a96 5

C           KEEP FMIN AND FMAX SAME FOR ALL SLICES
            WRITE(NOUT,*) ' SETTING FMIN & FMAX:',FMIN1,FMAX1
            SIG = SIG1
            CALL SETPRM(LUN2,NSAM,IDUM,FMAX1,FMIN1,AV1,'U')
d117 1
a117 1
     &  	   IDUM,'INPUT',.FALSE.,IRTFLG)
d186 1
a186 1
     &  	   IDUM,'INPUT',.FALSE.,IRTFLG)
d191 1
a191 1
     &  	   IDUM,'INPUT2',.FALSE.,IRTFLG)
d277 2
a278 2
c         this program is obsolete (was DC T).
          CALL ATILTAX3
d280 1
a280 1
          CALL MARKER
d286 1
a287 1
        GOTO (7100,7200,7300) KCALL1
d289 5
a293 1
7100    CALL DENREF(LUN1)
d302 1
@


1.15
log
@BP CTF disabled
@
text
@d66 1
a66 1
     &  	     IFORM,'INPUT',.FALSE.,IRTFLG)
d78 1
a78 1
     &  	       IFORM,'OUTPUT',.FALSE.,IRTFLG)
d88 1
a88 1
     &                 IFORM,'OUTPUT',.FALSE.,IRTFLG)
d117 1
a117 1
     &  	   IFORM,'INPUT',.FALSE.,IRTFLG)
d186 1
a186 1
     &  	   IFORM,'INPUT',.FALSE.,IRTFLG)
d191 1
a191 1
     &  	   IFORM,'INPUT2',.FALSE.,IRTFLG)
@


1.14
log
@nosave
@
text
@d253 2
a254 1
	CALL  REPC(MAXDIM)
@


1.13
log
@removed bp local and bp gw3d operations to rejects
@
text
@d37 1
a37 1

d312 1
a312 1
	GOTO 9900
@


1.12
log
@bp ctf added
@
text
@d215 4
a218 1
995     CALL GENW3D
d266 4
a269 1
992     CALL TDLOCAL(LUN1,LUN2,LUN3)
d319 1
a319 2
9119    FCHAR(1:1) = ';'
        RETURN
@


1.11
log
@removed unused subroutine previously in dummy.f
@
text
@d53 1
a53 1
     $	'3,WX,WY,XY,GW3D,3S,GW,B,3E,GW3,W2,MEM2,MEM3,RP,R2,S2,3D,LOCAL$'
d196 1
a196 1
     &	      991,997,811,812,813,814,815,816,817,992) ,ICALL2
d237 1
a237 1
812	CONTINUE
d239 1
a239 1
	GOTO  9119
d241 1
a241 1
813	CONTINUE
d243 1
a243 1
	GOTO  9119
d247 4
@


1.10
log
@increased maxsam
@
text
@a24 1
#ifdef SP_UNIX
a25 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d124 1
a124 1
410     WRITE(NOUT,*) ' *** PRJCT NO LONGER IN USE '
d143 2
a144 1
961     CALL MRRSURFPAR
@


1.9
log
@removed unused pcount "TC" function
@
text
@d32 1
a32 1
	PARAMETER (MAXSAM = 2048)
@


1.8
log
@removed call rcon3e which is never reached
@
text
@d31 1
a31 1
	PARAMETER (NFUNC  = 9)
d40 1
a40 1
	DATA FUNC/'PS SK CS PJ BP DC DR TC MF '/
d60 1
a60 1
        GOTO (1,2,3,4,5,6,7,8,9), IFUNC
a293 3
C-----------------------------------------------------------------   TC
8       CALL PCOUNT(LUN1,LUND)
	GOTO 9999
@


1.7
log
@bad nslice1
@
text
@d205 1
a205 6
900     IF (FCHAR(5:5) .EQ. 'E') THEN
          CALL RCON3E(LUN1,LUN2,LUND,MAXDIM,IER)
          IF (IER .NE. 0) GOTO 9900
          GOTO 9999
        END IF
	CALL BPROJ3(LUN1,LUN2,MAXDIM,IER)
@


1.6
log
@mrcp call had undefined nslice
@
text
@d120 1
a120 1
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
@


1.5
log
@undefined nsam used
@
text
@d32 3
a34 3
	PARAMETER (MAXSAM = 1024)
        COMMON /COMMUN/FILNAM,FIL
        COMMON BUF(MAXSAM + 1)
d161 1
a161 1
        IF ((NSLICE * NSAM1) .GT. MAXLEN) THEN
d163 2
a164 1
1999      FORMAT(' *** NSAM*NSLICE > ',I6,' NOT ALLOWED')
d168 1
a168 1
     &            BUF( MAXSAM + 1 ),MAXSAM)
d294 1
a294 2
C       BOUNDARIES OF A MASK, SCALE VOLUMES AND CALCULATE DIFFERENCE
C       VOLUME:
d309 1
d321 1
@


1.4
log
@bp 3d added.
@
text
@d4 3
a6 2
C VTIL2.FOR                         
C                            FILENAMES LENGTHENED JAN 89 al
a7 5
C
C	CHANGED BY MAHIEDDINE LADJADJ   4/93
C
C       CHANGED BY JING SU 		8/31/93
C
d21 1
a21 1
C--*******************************************************************
d35 1
d39 1
d62 1
a62 1
C---------------------------------------------------------   PS
d105 1
a105 1
C---------------------------------------------------------   SK
d110 1
a110 1
C---------------------------------------------------------   CS
d115 1
a115 1
C---------------------------------------------------------   PJ
d119 1
a119 1
C	OPEN FIRST INPUT FILE -------------------------------
d161 1
a161 1
        IF ((NSLICE * NSAM) .GT. MAXLEN) THEN
d182 1
a182 1
C---------------------------------------------------------   BP
d186 1
a186 1
C	OPEN FIRST INPUT FILE -------------------------------
d191 1
a191 1
C	OPEN SECOND INPUT FILE -------------------------------
d269 1
a269 1
C---------------------------------------------------------   DC
d280 1
a280 1
C---------------------------------------------------------   DR
d284 1
a284 1
C  PUT DENSITY REFERENCE INTO FILE:
d288 1
a288 1
C  CALCULATE ERROR MEASURES BETWEEN 2 VOLUMES:
d292 3
a294 3
C  CALCULATE ERROR MEASURES BETWEEN 2 VOLUMES WITHIN THE
C  BOUNDARIES OF A MASK, SCALE VOLUMES AND CALCULATE DIFFERENCE
C  VOLUME:
d299 1
a299 1
C---------------------------------------------------------   TC
d303 2
a304 2
C---------------------------------------------------------   MF
C-------FIT A SPHERE MODEL TO A 3-D RECONSTRUCTION--------
d309 1
@


1.3
log
@maxdim passed to bapi3a
@
text
@d59 1
a59 1
     $	'3,WX,WY,XY,GW3D,3S,GW,B,3E,GW3,W2,MEM2,MEM3,RP,R2,S2,LOCAL$'
d200 1
a200 1
     &	      991,997,811,812,813,814,815,816,992) ,ICALL2
d263 3
@


1.2
log
@cpp_lines_added
@
text
@d237 1
a237 1
991     CALL BAPI3A(1)
@


1.1
log
@Initial revision
@
text
@d29 3
d33 1
@
