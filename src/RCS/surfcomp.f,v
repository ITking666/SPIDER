head	1.10;
access;
symbols
	pre_mrcs:1.10
	healthdept_2018:1.10
	pre_getangas:1.7
	GPL2010:1.7
	pre_GPL2010:1.6
	pre_var_equation:1.6
	pre_fftwrings:1.6
	pre_opfiles:1.6
	src:1.6
	best-code:1.6
	x-named-regs:1.6
	x:1.6
	v13-00:1.6
	pre_GPL:1.4
	prec_CA:1.4
	noindx:1.3
	Bproc:1.3;
locks; strict;
comment	@c @;


1.10
date	2018.10.03.14.34.24;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2014.07.30.15.45.43;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2014.07.30.15.45.17;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.24.13.27.05;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.19.52.13;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.17.17.49.32;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.20.17.13.43;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.07.15.40.12;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.07.14.48.44;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.06.19.53.43;	author leith;	state Exp;
branches;
next	;


desc
@@


1.10
log
@email_health_dept
@
text
@C **********************************************************************
C
C   SURFCOMP.F   -- CREATED                        MAR 00
C                   MAXNAM                         JUL 14 ARDEAN LEITH
C **********************************************************************
C=*  AUTHOR: ArDean Leith                                              *
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  SURFCOMP()
C
C  PURPOSE:     READS TWO SPIDER BINARY VOLUMES CONTAINING
C               SURFACE VOXELS FROM A SPIDER VOLUME, (THE SURFACE
C               VOXELS HAVE VALUES GREATEER THAN ZERO).
C               FINDS DIFFERENCE STATISTICS FOR THE TWO SURFACES.     
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE SURFCOMP()

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        REAL,    ALLOCATABLE, DIMENSION(:)   :: BUFV1,BUFV2,BUFS1,BUFS2
        INTEGER, ALLOCATABLE, DIMENSION(:,:) :: ISURF1,ISURF2
        REAL,    ALLOCATABLE, DIMENSION(:)   :: RSURF1,RSURF2

        DOUBLE PRECISION :: DISTMINAV,DISTMINAV2
        DOUBLE PRECISION :: DSIG
        REAL, PARAMETER  :: BACKLEVEL = 0.0
        REAL, PARAMETER  :: SURFLEVEL = 1.0
        REAL, PARAMETER  :: FLTZER    = 10E-10

        CHARACTER(LEN=MAXNAM) :: FILNAM

        LUNIMV1   = 11
        LUNIMS1   = 12
        LUNIMV2   = 13
        LUNIMS2   = 14

C       OPEN FIRST SPIDER VOLUME AS INPUT
        MAXIM    = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNIMV1,'O',IFORM,NSAM,NROW,NSLICE,
     &             MAXIM,'FIRST INPUT VOLUME',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       OPEN FIRST SPIDER SURFACE VOLUME AS INPUT
        MAXIM    = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNIMS1,'O',IFORM,
     &             NSAM1,NROW1,NSLICE1,
     &             MAXIM,'FIRST INPUT SURFACE',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        IF (NSAM .NE. NSAM1 .OR. NROW .NE. NROW1 .OR. 
     &      NSLICE .NE. NSLICE1) THEN
            CALL ERRT(101,'VOLUMES MUST HAVE SAME DIMENSIONS',NDUM)
            GOTO 9999
        ENDIF

C       OPEN SECOND SPIDER VOLUME AS INPUT
        MAXIM    = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNIMV2,'O',IFORM,
     &              NSAM1,NROW1,NSLICE1,
     &             MAXIM,'SECOND INPUT VOLUME',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        IF (NSAM .NE. NSAM1 .OR. NROW .NE. NROW1 .OR. 
     &      NSLICE .NE. NSLICE1) THEN
            CALL ERRT(101,'VOLUMES MUST HAVE SAME DIMENSIONS',NDUM)
            GOTO 9999
        ENDIF

C       OPEN SECOND SPIDER SURFACE VOLUME AS INPUT
        MAXIM    = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNIMS2,'O',IFORM,
     &             NSAM1,NROW1,NSLICE1,
     &             MAXIM,'SECOND INPUT SURFACE',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        IF (NSAM .NE. NSAM1 .OR. NROW .NE. NROW1 .OR. 
     &      NSLICE .NE. NSLICE1) THEN
            CALL ERRT(101,'VOLUMES MUST HAVE SAME DIMENSIONS',NDUM)
            GOTO 9999
        ENDIF

        ALLOCATE (BUFV1(NSAM),BUFV2(NSAM),
     &            BUFS1(NSAM),BUFS2(NSAM),STAT=IRTFLG)
        IF (IRTFLG .NE. 0) THEN
            CALL ERRT(101,'ALLOCATION FAILED',NDUM)
            GOTO 9999
        ENDIF

        ALLOCATE (ISURF1(3,NSAM * NROW * NSLICE), 
     &            ISURF2(3,NSAM * NROW * NSLICE),
     &            RSURF1(NSAM * NROW * NSLICE), 
     &            RSURF2(NSAM * NROW * NSLICE), STAT=IRTFLG)
        IF (IRTFLG .NE. 0) THEN
            CALL ERRT(101,'ALLOCATION FAILED',NDUM)
            GOTO 9999
        ENDIF

C       INCASE SURFLEVEL IS NOT EXACT DIGIT
        THLEV  = SURFLEVEL - FLTZER

        NSURF1 = 0
        NSURF2 = 0
        DO ISLICE = 1,NSLICE
          DO IROW = 1, NROW
             IREC = (ISLICE -1) * NROW + IROW

             CALL REDLIN(LUNIMV1,BUFV1,NSAM,IREC)
             CALL REDLIN(LUNIMS1,BUFS1,NSAM,IREC)
             CALL REDLIN(LUNIMV2,BUFV2,NSAM,IREC)
             CALL REDLIN(LUNIMS2,BUFS2,NSAM,IREC)

             DO ISAM = 1,NSAM
                IF (BUFS1(ISAM) .GE. THLEV) THEN
C                  SURFACE VOXEL
                   NSURF1           = NSURF1 + 1
                   ISURF1(1,NSURF1) = ISAM
                   ISURF1(2,NSURF1) = IROW
                   ISURF1(3,NSURF1) = ISLICE
                   RSURF1(NSURF1)   = BUFV2(ISAM)
                ENDIF

                IF (BUFS2(ISAM) .GE. THLEV) THEN
C                  SURFACE VOXEL
                   NSURF2           = NSURF2 + 1
                   ISURF2(1,NSURF2) = ISAM
                   ISURF2(2,NSURF2) = IROW
                   ISURF2(3,NSURF2) = ISLICE
                   RSURF2(NSURF2)   = BUFV1(ISAM)
                ENDIF

             ENDDO
           ENDDO
        ENDDO
        CLOSE(LUNIMV1)
        CLOSE(LUNIMV2)
        CLOSE(LUNIMS1)
        CLOSE(LUNIMS2)

C       FIND INTER-SURFACE DISTANCES

        NUMDIST    = 0
        DISTMINAV  = 0.0
        DISTMINAV2 = 0.0
        IDIF       = 0.0

        DO N1 = 1,NSURF1
           IX1 = ISURF1(1,N1)
           IY1 = ISURF1(2,N1)
           IZ1 = ISURF1(3,N1)

           IDISTMIN = MAX(NSAM,NROW,NSLICE) ** 2

           DO N2 = 1, NSURF2
              IX2 = ISURF2(1,N2)
              IY2 = ISURF2(2,N2)
              IZ2 = ISURF2(3,N2)

              IDIST = (IX2 -IX1)**2 + (IY2 - IY1)**2 + (IZ2 - IZ1)**2
              IF (IDIST .LT. IDISTMIN) THEN
                 IDISTMIN = IDIST
                 NODE2    = N2
              ENDIF
           ENDDO
           
C          FOUND MINIMAL DISTANCE FROM SURFACE 1 TO VOXEL ON SURFACE 2
           DIF        = RSURF2(NODE2) - RSURF1(N1)
           IF (DIF .NE. 0) IDIF = IDIF + SIGN(1.0,DIF)

           NUMDIST    = NUMDIST + 1
           DISTMINAV  = DISTMINAV  + SQRT(REAL(IDISTMIN))
           DISTMINAV2 = DISTMINAV2 + IABS(IDISTMIN)
                    
        ENDDO

        WRITE(NOUT,*) ' '

        WRITE(NOUT,90) NSURF1
90      FORMAT(' Total Voxels on First Surface:     ',I10)
        WRITE(NOUT,91) NSURF2
91      FORMAT(' Total Voxels on 2nd Surface:       ',I10)

        WRITE(NOUT,92) NUMDIST
92      FORMAT(' Total Number of Distances:         ',I10)

        AVDIST2  = DISTMINAV / NUMDIST
        WRITE(NOUT,93) AVDIST2
93      FORMAT(' Mean Inter-surface Distance:       ',G14.3)

        DSIG   = SQRT((DISTMINAV2 - DISTMINAV**2/NUMDIST) / 
     &                 DBLE(NUMDIST-1.0))

        WRITE(NOUT,94) DSIG
94      FORMAT(' S.D. of Distances:                 ',G14.3)

        WRITE(NOUT,95) IDIF
95      FORMAT(' Summed Sign of Density Difference: ',I10)

9999    CONTINUE
        IF (ALLOCATED(BUFV1))  DEALLOCATE(BUFV1)
        IF (ALLOCATED(BUFV2))  DEALLOCATE(BUFV2)
        IF (ALLOCATED(BUFS1))  DEALLOCATE(BUFS1)
        IF (ALLOCATED(BUFS2))  DEALLOCATE(BUFS2)
        IF (ALLOCATED(ISURF1)) DEALLOCATE(ISURF1)
        IF (ALLOCATED(ISURF2)) DEALLOCATE(ISURF2)
        IF (ALLOCATED(RSURF1)) DEALLOCATE(RSURF1)
        IF (ALLOCATED(RSURF2)) DEALLOCATE(RSURF2)

        RETURN
        END
    

@


1.9
log
@date
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.8
log
@LEN=MAXNAM) :: FILNAM
@
text
@d10 1
a10 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
@


1.7
log
@GPL_2010
@
text
@d3 2
a4 1
C   SURFCOMP.F   -- CREATED MAR 00
d6 1
a6 1
C *  AUTHOR: ArDean Leith 
d28 1
a28 8
C      SURFCOMP()
C
C      PURPOSE:     READS TWO SPIDER BINARY VOLUMES CONTAINING
C                   SURFACE VOXELS FROM A SPIDER VOLUME, (THE SURFACE
C                   VOXELS HAVE VALUES GREATEER THAN ZERO).
C                   FINDS DIFFERENCE STATISTICS FOR THE TWO SURFACES.     
C
C      PARAMETERS:  
d30 4
d41 1
d43 1
a43 1
        REAL, ALLOCATABLE, DIMENSION(:) ::      BUFV1,BUFV2,BUFS1,BUFS2
d45 9
a53 7
        REAL, ALLOCATABLE, DIMENSION(:) ::      RSURF1,RSURF2
        DOUBLE PRECISION ::                     DISTMINAV,DISTMINAV2
        DOUBLE PRECISION ::                     DSIG
        REAL, PARAMETER ::   BACKLEVEL = 0.0
        REAL, PARAMETER ::   SURFLEVEL = 1.0
        REAL, PARAMETER ::   FLTZER    = 10E-10
        CHARACTER(LEN=81) :: FILNAM
@


1.6
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.5
log
@HRI GPL License used
@
text
@a1 1
C**************************************************************************
a4 1
C **************************************************************************
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)2000 , WADSWORTH CENTER FOR LABORATORIES AND RESEARCH    *
C *    NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.              *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH  			   *
a29 1
C **************************************************************************
@


1.4
log
@opfilec
@
text
@d1 1
d5 1
d8 24
d38 1
@


1.3
log
@*** empty log message ***
@
text
@a22 1
C      CALLS:       
d48 1
a48 1
        CALL OPFILE(.TRUE.,FILNAM,LUNIMV1,'O',IFORM,NSAM,NROW,NSLICE,
d54 2
a55 1
        CALL OPFILE(.TRUE.,FILNAM,LUNIMS1,'O',IFORM,NSAM1,NROW1,NSLICE1,
a63 1

d66 2
a67 1
        CALL OPFILE(.TRUE.,FILNAM,LUNIMV2,'O',IFORM,NSAM1,NROW1,NSLICE1,
d78 2
a79 1
        CALL OPFILE(.TRUE.,FILNAM,LUNIMS2,'O',IFORM,NSAM1,NROW1,NSLICE1,
@


1.2
log
@*** empty log message ***
@
text
@d142 1
a142 1
        CLOSE(LUNIMS1)
d175 2
a176 2
           DISTMINAV  = DISTMINAV  + IDISTMIN
           DISTMINAV2 = DISTMINAV2 + IDISTMIN * IDISTMIN
d192 1
a192 1
93      FORMAT(' Mean Sq. Inter-surface Distance:   ',G14.3)
d194 3
a196 1
        DSIG   = SQRT( DISTMINAV2 / DBLE(NUMDIST-1.0))
d198 1
a198 1
94      FORMAT(' S.D. of Squared Distance:          ',G14.3)
@


1.1
log
@Initial revision
@
text
@d32 1
a32 1
        REAL, ALLOCATABLE, DIMENSION(:) :: BUF
d34 12
a45 1
        DOUBLE PRECISION ::                   DISTMINAV,DISTMINAV2,DSIG
a46 6
        CHARACTER * 81 FILNAM
       
        DATA FLTZER/10E-10/

        LUNIM    = 11

d49 2
a50 2
        CALL OPFILE(.TRUE.,FILNAM,LUNIM,'O',IFORM,NSAM,NROW,NSLICE,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
d53 10
a62 6
        ALLOCATE (BUF(NSAM), STAT=IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999
        ALLOCATE (ISURF1(3,NSAM * NROW * NSLICE), STAT=IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999
        ALLOCATE (ISURF2(3,NSAM * NROW * NSLICE), STAT=IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999
a63 16
        NSURF1 = 0
        DO ISLICE = 1,NSLICE
          DO IROW = 1, NROW
             IREC = (ISLICE -1) * NROW + IROW
             CALL REDLIN(LUNIM,BUF,NSAM,IREC)
             DO ISAM = 1,NSAM
                IF (BUF(ISAM) .GT. FLTZER) THEN
                   NSURF1           = NSURF1 + 1
                   ISURF1(1,NSURF1) = ISAM
                   ISURF1(2,NSURF1) = IROW
                   ISURF1(3,NSURF1) = ISLICE
                ENDIF
             ENDDO
           ENDDO
        ENDDO
        CLOSE(LUNIM)
d65 1
a65 1
C       OPEN 2ND SPIDER VOLUME AS INPUT
d67 8
a74 3
        CALL OPFILE(.TRUE.,FILNAM,LUNIM,'O',IFORM,NSAM1,NROW1,NSLICE1,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999
d76 5
d87 20
d111 6
a116 1
             CALL REDLIN(LUNIM,BUF,NSAM,IREC)
d118 11
a128 1
                IF (BUF(ISAM) .GT. FLTZER) THEN
d133 1
d135 1
d137 1
a137 1
          ENDDO
d139 4
a142 1
        CLOSE(LUNIM)
a144 6
        NPOSX      = 0
        NPOSY      = 0
        NPOSZ      = 0
        NNEGX      = 0
        NNEGY      = 0
        NNEGZ      = 0
d149 1
d166 1
a166 1
                 NODE     = N2
d171 2
a172 11
           IXDIF = ISURF2(1,NODE) - IX1
           IYDIF = ISURF2(2,NODE) - IY1
           IZDIF = ISURF2(3,NODE) - IZ1

           IF (IXDIF .GE. 1)  NPOSX = NPOSX + 1
           IF (IYDIF .GE. 1)  NPOSY = NPOSY + 1
           IF (IZDIF .GE. 1)  NPOSZ = NPOSZ + 1

           IF (IXDIF .LE. -1) NNEGX = NNEGX + 1
           IF (IYDIF .LE. -1) NNEGY = NNEGY + 1
           IF (IZDIF .LE. -1) NNEGZ = NNEGZ + 1
d180 2
d183 1
a183 1
90      FORMAT(' Total Voxels on First Surface:   ',I10)
d185 1
a185 1
91      FORMAT(' Total Voxels on 2nd Surface:     ',I10)
d188 1
a188 1
92      FORMAT(' Total Number of Distances:       ',I10)
d192 1
a192 1
93      FORMAT(' Mean Sq. Inter-surface Distance :',G10.3)
d196 1
a196 5
94      FORMAT(' S.D. of Inter-surface Distance : ',G10.3)

        WRITE(NOUT,95) NPOSX,NPOSY,NPOSZ
95      FORMAT(' Positive distances in X, Y & Z : ',
     &           I8,' , ',I8,' , ',I8)
d198 2
a199 3
        WRITE(NOUT,96) NNEGX,NNEGY,NNEGZ
96      FORMAT(' Negative distances in X, Y & Z : ',
     &           I8,' , ',I8,' , ',I8)
a200 1
 
d202 4
a205 3
C       CLOSE THE FILES
        CLOSE(LUNIM)
        IF (ALLOCATED(BUF))    DEALLOCATE(BUF)
d208 2
@
