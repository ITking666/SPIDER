head	1.11;
access;
symbols
	pre_getangas:1.11
	GPL2010:1.11
	pre_GPL2010:1.10
	pre_var_equation:1.10
	pre_fftwrings:1.10
	pre_opfiles:1.10
	src:1.10
	best-code:1.10
	x-named-regs:1.10
	x:1.10
	v13-00:1.10
	pre_GPL:1.8
	prec_CA:1.8
	noindx:1.8
	Bproc:1.6
	oct21:1.5
	last77:1.5;
locks; strict;
comment	@c @;


1.11
date	2010.06.24.13.25.22;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.19.58.07;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.17.54.26;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.30.17.05.53;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.30.16.39.34;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.21.17.03.08;	author bimal;	state Exp;
branches;
next	1.5;

1.5
date	99.03.01.14.24.00;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	98.01.08.21.25.41;	author hedget;	state Exp;
branches;
next	1.3;

1.3
date	97.10.03.21.09.19;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	97.09.30.22.21.24;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	97.09.30.14.25.23;	author pawel;	state Exp;
branches;
next	;


desc
@@


1.11
log
@GPL_2010
@
text
@C++*********************************************************************
C
C $$ CROSRNG_Q.FOR
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C
C IMAGE_PROCESSING_ROUTINE
C
C        1         2         3         4         5         6         7
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************
C
C $$ CROSRNG_Q.FOR
C
         SUBROUTINE  CROSRNG_Q
     &   (CIRC1,CIRC2,LCIRC,NRING,T,Q,MAXRIN,JACUP,NUMR,QN,TOT,MODE)
C
C  INPUT - Fourier transforms of rings!!!
C
C  NUMR(3,I) - ACTUAL LENGTH +2 (to use new FFT)
C  CIRC - FT of rings stored as:
C  Re(0), 0, Re(1) Im(1), ..., Re((NUMR(3,I)-2)/2), 0.
        INTEGER  NUMR(3,NRING),NUMR2I,NUMR3I,MAXRIN
        DIMENSION  CIRC1(LCIRC),CIRC2(LCIRC)
        DOUBLE PRECISION  T(MAXRIN+2),Q(MAXRIN+2)
        DOUBLE PRECISION  QN,QT,PI,T7(-3:3)
        CHARACTER*1  MODE

        PI=4.0*DATAN(1.0D0)
        IF(MODE.EQ.'F')  PI=2*PI

        Q=0.0D0

        DO    I=1,NRING
           NUMR3I=NUMR(3,I)-2
           NUMR2I=NUMR(2,I)
        WR=REAL(NUMR(1,I))*PI/REAL(NUMR3I)*REAL(MAXRIN)/REAL(NUMR3I)

           DO   J=1,NUMR3I+2,2
              JC=J+NUMR2I-1
        T(J)=DBLE(CIRC1(JC))*CIRC2(JC)+DBLE(CIRC1(JC+1))*CIRC2(JC+1)
        T(J+1)=-DBLE(CIRC1(JC))*CIRC2(JC+1)+DBLE(CIRC1(JC+1))*CIRC2(JC)
           ENDDO

           IF(NUMR3I.LT.MAXRIN)  T(NUMR3I+1)=T(NUMR3I+1)/2.0
C###
           Q(1:NUMR3I+1)=Q(1:NUMR3I+1)+T(1:NUMR3I+1)*WR
        ENDDO
C
        INV=-1
        IP=MAXRIN
        CALL  FMRS_1D(Q,IP,INV)
C
         QN=-1.0D20
         DO    J=1,MAXRIN
            IF(Q(J).GE.QN)  THEN
               QN=Q(J)
               JTOT=J
            ENDIF
         ENDDO
C
         DO  K=-3,3
            J=MOD(JTOT+K+MAXRIN-1,MAXRIN)+1
            T7(K)=Q(J)
         ENDDO
         CALL  PRB1D(T7,7,POS)
         TOT=REAL(JTOT)+POS
         END
@


1.10
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.9
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a29 1
C **************************************************************************
a36 1
C--************************************************************************
@


1.8
log
@*** empty log message ***
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d48 1
@


1.7
log
@bug with Q fixed.
@
text
@d56 1
a56 3
           DO    J=1,NUMR3I+1
              Q(J)=Q(J)+T(J)*WR
           ENDDO
@


1.6
log
@cosmetic
@
text
@d41 1
a41 3
        DO    J=1,MAXRIN
           Q(J)=0.0D0
        ENDDO
@


1.5
log
@ff
@
text
@d16 1
d18 1
d32 25
a56 23
         INTEGER  NUMR(3,NRING),NUMR2I,NUMR3I,MAXRIN
         DIMENSION  CIRC1(LCIRC),CIRC2(LCIRC)
         DOUBLE PRECISION  T(MAXRIN+2),Q(MAXRIN+2)
         DOUBLE PRECISION  QN,QT,PI,T7(-3:3)
         CHARACTER*1  MODE
	PI=4.0*DATAN(1.0D0)
	IF(MODE.EQ.'F')  PI=2*PI
C
	DO    J=1,MAXRIN
	Q(J)=0.0D0
	ENDDO
C
	DO    I=1,NRING
	NUMR3I=NUMR(3,I)-2
	NUMR2I=NUMR(2,I)
	WR=REAL(NUMR(1,I))*PI/REAL(NUMR3I)*REAL(MAXRIN)/REAL(NUMR3I)
C
	DO   J=1,NUMR3I+2,2
	JC=J+NUMR2I-1
	T(J)=DBLE(CIRC1(JC))*CIRC2(JC)+DBLE(CIRC1(JC+1))*CIRC2(JC+1)
      T(J+1)=-DBLE(CIRC1(JC))*CIRC2(JC+1)+DBLE(CIRC1(JC+1))*CIRC2(JC)
	ENDDO
	IF(NUMR3I.LT.MAXRIN)  T(NUMR3I+1)=T(NUMR3I+1)/2.0
d58 8
a65 8
	DO    J=1,NUMR3I+1
	Q(J)=Q(J)+T(J)*WR
	ENDDO
	ENDDO
C
	INV=-1
	IP=MAXRIN
	CALL  FMRS_1D(Q,IP,INV)
d69 5
a73 5
         IF(Q(J).GE.QN)  THEN
         QN=Q(J)
         JTOT=J
         ENDIF
	 ENDDO
d76 3
a78 3
         J=MOD(JTOT+K+MAXRIN-1,MAXRIN)+1
         T7(K)=Q(J)
	 ENDDO
@


1.4
log
@added variable to support type change
@
text
@d30 1
a30 1
         INTEGER*2  NUMR(3,NRING),NUMR2I,NUMR3I,MAXRIN,CMP
a34 1
CNO_SAVE
d72 1
a72 2
         CMP = JTOT+K+MAXRIN-1
         J=MOD(CMP,MAXRIN)+1
@


1.3
log
@*** empty log message ***
@
text
@d30 1
a30 1
         INTEGER*2  NUMR(3,NRING),NUMR2I,NUMR3I,MAXRIN
d73 2
a74 1
         J=MOD(JTOT+K+MAXRIN-1,MAXRIN)+1
@


1.2
log
@*** empty log message ***
@
text
@d39 3
a41 2
	DO  11  J=1,MAXRIN
11	Q(J)=0.0D0
d43 1
a43 1
	DO  1  I=1,NRING
d48 1
a48 1
	DO  31  J=1,NUMR3I+2,2
d52 1
a52 1
31	CONTINUE
d55 4
a58 3
	DO  44  J=1,NUMR3I+1
44	Q(J)=Q(J)+T(J)*WR
1	CONTINUE
d65 1
a65 1
         DO  20  J=1,MAXRIN
d70 1
a70 1
20       CONTINUE
d72 1
a72 1
         DO  81  K=-3,3
d74 2
a75 1
81       T7(K)=Q(J)
@


1.1
log
@Initial revision
@
text
@d45 1
a45 1
	WR=FLOAT(NUMR(1,I))*PI/FLOAT(NUMR3I)*FLOAT(MAXRIN)/FLOAT(NUMR3I)
d74 1
a74 1
         TOT=FLOAT(JTOT)+POS
@
