head	1.10;
access;
symbols
	pre_mrcs:1.10
	healthdept_2018:1.10
	pre_getangas:1.7
	GPL2010:1.6
	pre_GPL2010:1.5
	pre_var_equation:1.5
	pre_fftwrings:1.4
	pre_opfiles:1.4
	src:1.4
	best-code:1.4
	x-named-regs:1.4
	x:1.4
	v13-00:1.4
	pre_GPL:1.3
	prec_CA:1.3
	noindx:1.3
	Bproc:1.2
	oct21:1.1;
locks; strict;
comment	@c @;


1.10
date	2018.10.03.14.33.55;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2011.08.02.17.34.59;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2011.07.28.16.23.57;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.24.13.42.20;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2010.06.24.13.25.04;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.19.12.02.44;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.17.21.09.58;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.03.20.34.49;	author bimal;	state Exp;
branches;
next	1.2;

1.2
date	99.12.03.14.32.49;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	99.08.05.13.17.24;	author pawel;	state Exp;
branches;
next	;


desc
@@


1.10
log
@email_health_dept
@
text
@C++*********************************************************************
C
C APPLYWS.F
C               MODIFED FOR USING FFTW3           MAR 2003 ARDEAN LEITH
C               WEIGHTING BUG FOR POS. 2          JUN 2010 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C APPLYWS_NEW(CIRC,LCIRC,NUMR,WR,NRING)
C
C PURPOSE: APPLY WEIGTHS FROM ARRAY: WR TO: CIRC ARRAY VALUES
C	   WR()  = REAL(RING_RADIUS * PI / REAL(NVAL) *
C                  REAL(MAXRIN) / REAL(NVAL)
C
C NOTE:  FROM SPIDER ?--> 16.0  (IN 19MAY08) THIS WORKED WITH NON-
C        FFTW FOURIER FORMATTING WHICH HAD COMPACTED FOURIER WITH
C        SECOND LOCATION ON EACH RING REPRESENTING FINAL FFT TERM. 
C        THIS SECOND LOCATION HAD ONLY HALF WEIGHT.  
C        AFTER SWITCH TO FFTW THE SECOND LOCATION KEPT THE OLD
C        INCORRECT WEIGHT UP TILL:   2010/06/24 WHEN IT WAS FIXED
C        BY WEIGHTING THE SECOND TO LAST LOCATION OF EACH RING
C        THIS ACCOUNTS FOR CHANGES IN VALUES OF CCROT ON THOSE DATES.
C        IN JULY 2011 CHANGE IN APSH_** FOR CCROT SO THAT NEGATIVE 
C        VALUES (WHICH ARE NORMAL) AGAIN WERE REPORTED CORRECTLY.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

      SUBROUTINE APPLYWS_NEW(CIRC,LCIRC,NUMR, WR,NRING)

      IMPLICIT NONE

      REAL    :: CIRC(LCIRC)
      INTEGER :: LCIRC
      INTEGER :: NUMR(3,NRING)
      INTEGER :: NRING
      REAL    :: WR(NRING)

      INTEGER :: IRING,IGO,NVAL,MAXRIN,J
      REAL    :: WT

      DO IRING=1,NRING
         IGO    = NUMR(2,IRING)
         NVAL   = NUMR(3,IRING)   ! INCLUDING FFT PAD
         MAXRIN = NUMR(3,NRING)   ! LENGTH OF LONGEST RING + FFT PAD

         WT     = WR(IRING)

C        APPLY WEIGHTS FOR CIRC LOCATIONS

         DO J=IGO,IGO+NVAL-1      ! LOOP OVER ALL FFT COEFFs
            CIRC(J) = CIRC(J) * WT
         ENDDO

         IF (NVAL .NE. MAXRIN) THEN
C           IF RING LENGTH < THAN THE MAX. RING LENGTH THEN WEIGHT
C           OF LAST REAL FFT COEF FOR THE RING IS HALF USUAL WEIGHT.
C           WHY? al
            CIRC(IGO+NVAL-2) = CIRC(IGO+NVAL-2) * 0.5 
         ENDIF
      ENDDO

      END


C       -------------------- APPLYWS --------------------------------
C       STILL USED IN: oracfmsk.f, oracfmskm.f:         

        SUBROUTINE APPLYWS(CIRC,LCIRC,NUMR,WR,NRING,MAXRIN)

	INTEGER :: NUMR(3,NRING), MAXRIN, NVAL,IGO
	REAL    :: CIRC(LCIRC), WR(NRING)

	DO I=1,NRING
	   IGO       = NUMR(2,I)
	   NVAL      = NUMR(3,I)

	   W         = WR(I)
	   CIRC(IGO) = CIRC(IGO)*W

	   IF (NVAL .EQ. MAXRIN)  THEN
	      CIRC(IGO+1) = CIRC(IGO+1) * W
	   ELSE
	      CIRC(IGO+1) = CIRC(IGO+1) * 0.5 * W
	   ENDIF

	   DO J=3,NVAL
	      JC       = J + IGO - 1
	      CIRC(JC) = CIRC(JC) * W
	   ENDDO
	ENDDO
	END

@


1.9
log
@msg about why ccrot values negative allowed again and loc. 2 bug
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.8
log
@removed native spider fft
@
text
@d35 11
@


1.7
log
@WEIGHTING BUG FOR POS. 2
@
text
@d38 1
a38 1
#ifdef SP_LIBFFTW3
d40 1
a40 1
      SUBROUTINE APPLYWS_NEW(CIRC,LCIRC,NUMR, WR,NRING)
a73 32
#else

	SUBROUTINE APPLYWS_NEW(CIRC,LCIRC,NUMR,WR,NRING)

	INTEGER :: NUMR(3,NRING), NVAL,IGO
	REAL    :: CIRC(LCIRC), WR(NRING)

	DO I=1,NRING
	   IGO       = NUMR(2,I)
	   W         = WR(I)

C          APPLY WEIGHTS FOR CIRC LOCATIONS

	   NVAL   = NUMR(3,I)   
           MAXRIN = NUMR(3,NRING)   ! ACTUAL LENGTH OF LONGEST RING

	   CIRC(IGO) = CIRC(IGO) * W

	   IF (NVAL .EQ. MAXRIN)  THEN
	      CIRC(IGO+1) = CIRC(IGO+1) * W
	   ELSE
	      CIRC(IGO+1) = CIRC(IGO+1) * 0.5 * W
	   ENDIF

	   DO J=3,NVAL
	      JC       = J + IGO - 1
	      CIRC(JC) = CIRC(JC) * W
	   ENDDO

	ENDDO
	END
#endif
d76 1
a76 1
C  STILL USED IN: oracfmsk.f, oracfmskm.f:         
@


1.6
log
@GPL_2010
@
text
@d5 2
d29 1
a29 1
C APPLYWS_NEW(CIRC,LCIRC,NUMR,WR,NRING,MAXRIN)
d34 1
a34 1

d38 38
a86 16
#ifdef SP_LIBFFTW3

	   NVAL   = NUMR(3,I) - 2     ! NOT INCLUDING FOURIER PAD
           MAXRIN = NUMR(3,NRING) - 2 ! ACTUAL LENGTH OF LONGEST RING

	   DO J=1,NVAL+2
	      JC       = J + IGO - 1
	      CIRC(JC) = CIRC(JC) * W
	   ENDDO

	   IF (NVAL .NE. MAXRIN) THEN
C             UNUSUAL WEIGHTING HISTORICALLY USED HERE
              CIRC(IGO+1) = CIRC(IGO+1) - 0.5 * W
           ENDIF

#else
a101 1
#endif
d105 1
d108 1
d110 1
a110 1
	SUBROUTINE APPLYWS(CIRC,LCIRC,NUMR,WR,NRING,MAXRIN)
d117 1
a117 1
	   NVAL       = NUMR(3,I)
@


1.5
log
@FFTW3 plan changes, FFTW aprings
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.4
log
@GPL License fixed
@
text
@d4 1
a4 1
C
d7 1
a7 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d31 1
d33 4
a36 3
C IMAGE_PROCESSING_ROUTINE
C
C        1         2         3         4         5         6         7
d40 31
a70 1
	SUBROUTINE  APPLYWS(CIRC,LCIRC,NUMR,WR,NRING,MAXRIN)
d72 14
a85 2
	INTEGER  NUMR(3,NRING),MAXRIN,NUMR3I,NUMR2I
	DIMENSION  CIRC(LCIRC),WR(NRING)
d87 16
a102 7
	DO    I=1,NRING
	   NUMR3I=NUMR(3,I)
	   NUMR2I=NUMR(2,I)
	   W=WR(I)
	   CIRC(NUMR2I)=CIRC(NUMR2I)*W
	   IF (NUMR3I.EQ.MAXRIN)  THEN
	      CIRC(NUMR2I+1)=CIRC(NUMR2I+1)*W
d104 1
a104 1
	      CIRC(NUMR2I+1)=CIRC(NUMR2I+1)*0.5*W
d107 3
a109 3
	   DO J=3,NUMR3I
	      JC=J+NUMR2I-1
	      CIRC(JC)=CIRC(JC)*W
d113 1
@


1.3
log
@header
@
text
@d1 1
a1 1
C++************************************************************************
d5 25
a29 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
C **************************************************************************
d36 1
a36 1
C--************************************************************************
@


1.2
log
@cosmetic
@
text
@d16 1
d18 2
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
C $$ APPLYWS.FOR
a16 1
C23456789012345678901234567890123456789012345678901234567890123456789012
d18 1
a18 3
C
C $$ APPLYWS.FOR
C
d20 1
d23 1
d25 14
a38 14
	 NUMR3I=NUMR(3,I)
	 NUMR2I=NUMR(2,I)
	 W=WR(I)
	 CIRC(NUMR2I)=CIRC(NUMR2I)*W
	 IF(NUMR3I.EQ.MAXRIN)  THEN
	  CIRC(NUMR2I+1)=CIRC(NUMR2I+1)*W
	 ELSE
	  CIRC(NUMR2I+1)=CIRC(NUMR2I+1)*0.5*W
	 ENDIF
C
	 DO    J=3,NUMR3I
	  JC=J+NUMR2I-1
	  CIRC(JC)=CIRC(JC)*W
	 ENDDO
@
