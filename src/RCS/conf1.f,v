head	1.31;
access;
symbols
	healthdept_2018:1.31
	pre_getangas:1.26
	GPL2010:1.26
	pre_GPL2010:1.25
	pre_var_equation:1.25
	pre_fftwrings:1.24
	pre_opfiles:1.24
	src:1.24
	best-code:1.24
	x-named-regs:1.24
	x:1.24
	v13-00:1.24
	pre_GPL:1.23
	prec_CA:1.22
	noindx:1.21
	Bproc:1.19
	oct21:1.15
	last77:1.15;
locks; strict;
comment	@c @;


1.31
date	2018.10.03.14.34.03;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2014.07.29.14.57.16;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2014.01.30.19.21.35;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2014.01.29.15.13.04;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2012.05.08.14.06.30;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2010.06.24.13.25.17;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2008.10.30.13.39.05;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2005.10.17.21.04.09;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2004.02.12.15.45.12;	author pawel;	state Exp;
branches;
next	1.22;

1.22
date	2003.02.18.19.42.26;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2002.03.11.14.08.59;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2001.02.20.14.48.20;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2000.07.12.23.37.45;	author pawel;	state Exp;
branches;
next	1.18;

1.18
date	2000.07.12.16.26.02;	author pawel;	state Exp;
branches;
next	1.17;

1.17
date	99.12.27.19.32.27;	author bimal;	state Exp;
branches;
next	1.16;

1.16
date	99.11.10.23.09.12;	author yuchen;	state Exp;
branches;
next	1.15;

1.15
date	98.07.16.15.12.02;	author pawel;	state Exp;
branches;
next	1.14;

1.14
date	98.07.16.14.58.52;	author pawel;	state Exp;
branches;
next	1.13;

1.13
date	98.01.05.19.18.26;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	97.12.10.16.58.43;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	97.11.06.15.19.06;	author pawel;	state Exp;
branches;
next	1.10;

1.10
date	97.10.14.13.11.59;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	97.10.10.15.06.28;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	97.09.15.19.50.20;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.04.21.19.35.45;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.09.16.18.32.41;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	96.02.28.15.56.04;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.02.28.15.18.10;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.10.03.14.08.57;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.03.26;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.48;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.31
log
@email_health_dept
@
text
@
C ++*******************************************************************
C
C   CONF1.F    LONG FILE NAMES              JAN 89   ARDEAN LEITH
C                                          4/30/93   MAHIEDDINE LADJADJ
C                                           9/1/93   JING SU
C              REMOVED UNUSED 'RS'        10/27/08   ARDEAN LEITH
C              TYPET                        5/7/12   ARDEAN LEITH
C              'EP TM' PROMPT              1/28/14   ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C **********************************************************************

        SUBROUTINE CONF1(MAXDIM)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

C       ACTUAL MAX. LENGTH OF A0 IS SET IN CMLIMIT.INC
        COMMON /IOBUF/ A0(NBUFSIZ)

        PARAMETER (NFUNC=3)
        CHARACTER(LEN=2)      :: CFUNC(NFUNC)
        CHARACTER(LEN=MAXNAM) :: FILNAM,FILTST
        CHARACTER             :: DISP
        LOGICAL               :: EX,ISOPEN
        CHARACTER(LEN=3)      :: TYPET
        CHARACTER(LEN=1)      :: NULL = CHAR(0)

C       COMMAND OPTIONS:
        DATA CFUNC /'PT', 'CI', 'EP'/

        LUN1   = 10
        LUN2   = 7
        LUN3   = 8
        LUN4   = 9
        LUN5   = 12
        MAXIM  = 0
        MAXIM1 = 0
        MAXIM2 = 0
        MAXIM3 = 0
        MAXIM4 = 0

        DO IFUNC = 1, NFUNC
          IF (FCHAR(1:2) == CFUNC(IFUNC)) THEN
            GOTO ( 2, 3, 4), IFUNC
          ENDIF
        ENDDO
        RETURN


C       OPERATION ----------------------------------------------- 'PT'
2       CONTINUE

        IF (FCHAR(4:4)  ==  'U') THEN
           CALL ERRT(101,'UNKNOWN OPERATION: PT U',NE)
           RETURN
        ENDIF

C       GET NAME FOR EXISTING OR NEW IMAGE FILE
10      CALL FILERD(FILNAM,NLET,NULL,'OUTPUT',IRTFLG)
        IF (IRTFLG  ==  -1) RETURN

C       MERGE FILNAM WITH DATEXC IF NECESARY
        IF (FILNAM(1:1) .NE. '_' .AND. INDEX(FILNAM,'@@')  ==  0) THEN
           CALL FILCAN(FILTST,NLET,NULL,NULL,FILNAM,DATEXC,IER)
           IF (IRTFLG .NE. 0) RETURN
        ELSE
           FILTST = FILNAM
        ENDIF

C       FIND IF FILE EXISTS
        TYPET = 'FI'
        CALL INQUIREIF1(LUN1,FILTST,TYPET,EX,ISOPEN,LUNOP,
     &                  INLNED,IMGNUM,IRTFLG)

        DISP = 'U'
        IF (EX) DISP = 'O'

C       OPEN IMAGE FILE
	IF (FCHAR(4:4)  ==  '3')  THEN
	   IFORM  = 3
           NSLICE = 0
	ELSE
           IFORM  = 1
           NSLICE = 1
	ENDIF
        NSAM   = 0
        CALL OPFILEC(0,.FALSE.,FILNAM,LUN1,DISP,IFORM,NSAM,NROW,NSLICE,
     &             MAXIM,'IMAGE',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 10
        IF (.NOT. EX) THEN

C          FILL THE OUTPUT IMAGE WITH ZEROS
           A0(1:NSAM) = 0.0

           DO  I = 1, NROW*NSLICE
              CALL WRTLIN(LUN1,A0,NSAM,I)
           ENDDO

           FMIN = 0.0
           FMAX = 0.0
        ELSE
           IF (IMAMI.NE.1) 
     &        CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAXD,FMIND,AVD)
        ENDIF

C       CREATE PATTERN
        CALL PTTERN(LUN1,NSAM,NROW,NSLICE,FMAX,FMIN)
        GOTO 9000

C      OPERATION ------------------------------------------------- 'CI'
C      INPUT FILE (MEAN FILE)
3      CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,NSAM1,NROW1,NSLIC1,
     &  	   MAXIM,'AVERAGE',.FALSE.,IRTFLG)
       IF (IRTFLG .NE. 0) GOTO 9000

       IF (NSLIC1 .NE. 1) THEN
          CALL ERRT(101,'DOES NOT WORK ON VOLUMES',NE)
          GOTO 9000
       ENDIF

C      SECOND INPUT FILE CONTAINING THE VARIANCE
       
       CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'O',IFORM,NSAM2,NROW2,NSLIC2,
     &  	   MAXIM2,'VARIANCE',.FALSE.,IRTFLG)
       IF (IRTFLG .NE. 0) GOTO 9000

       IF (NSLIC2 .NE. 1) THEN
          CALL ERRT(101,'DOES NOT WORK ON VOLUMES',NE)
          GOTO 9000

       ELSEIF (NSAM1 .NE. NSAM2 .OR. NROW1 .NE. NROW2) THEN
          CALL ERRT(101,'INCONSISTENT DIMENSIONS',NE)
          GOTO 9000
       ENDIF

C      OUTPUT FILE OR FILE TO RECEIVE UPPER LIMIT OF CONFIDENCE INTERVAL
       NROW3 = NROW2
       NSAM3 = NSAM2
       NSAM  = NSAM2
       NROW  = NROW2
       IFORM = 1
       CALL OPFILEC(0,.TRUE.,FILNAM,LUN3,'U',IFORM,NSAM3,NROW3,1,
     &  	   MAXIM3,'UPPER LIMIT OUTPUT',.FALSE.,IRTFLG)
       IF (IRTFLG .NE. 0) GOTO 9000

C      FILE TO RECEIVE LOWER LIMIT OF CONFIDENCE INTERVAL
       NROW4 = NROW2
       NSAM4 = NSAM2
       IFORM = 1
       CALL OPFILEC(0,.TRUE.,FILNAM,LUN4,'U',IFORM,NSAM4,NROW4,1,
     &  	   MAXIM,'LOWER LIMIT OUTPUT',.FALSE.,IRTFLG)
       IF (IRTFLG .NE. 0) GOTO 9000

C      CONFIDENCE INTERVAL
       CALL RDPRMI(N,IDUM,NOT_USED,'NUMBER OF FILES ADDED')

       CALL RDPRM(ALPHA,NOT_USED,'ERROR PROBABILITY IN %')

       CALL CONF(N,ALPHA,LUN1,LUN2,LUN3,LUN4,NSAM,NROW)
       GOTO 9000

C      OPERATION	------------------------------------------- 'EP'
C      SECOND INPUT FILE CONTAINING THE VARIANCE
4      IF(FCHAR(4:5) == 'TT')  THEN
C
	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
     &  	     MAXIM,'FIRST AVERAGE',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000

	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'O',IFORM,NSAM,NROW,NSLICE,
     &  	     MAXIM1,'FIRST VARIANCE',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000

          CALL RDPRMI(N1,IDUMP,NOT_USED,'NUMBER OF IMAGES AVERAGED')

	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN3,'O',IFORM,NSAM,NROW,NSLICE,
     &  	     MAXIM2,'SECOND AVERAGE',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000

	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN4,'O',IFORM,NSAM,NROW,NSLICE,
     &  	     MAXIM3,'SECOND VARIANCE',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000

          CALL RDPRMI(N2,IDUMP,NOT_USED,'NUMBER OF IMAGES AVERAGED')
									
	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN5,'U',IFORM,NSAM,NROW,NSLICE,
     &  	     MAXIM4,'SIGNIFICANCE',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000
	  IF (IFORM < 1)  THEN
             CALL ERRT(101,'DOES NOT WORK ON FOURIER FILES',NE)
             GOTO 9000
          ENDIF

          CALL  TTEST(LUN1,LUN2,LUN3,LUN4,LUN5,N1,N2,
     &                NSAM,NROW,NSLICE)
          CLOSE(LUN5)

	ELSEIF(FCHAR(4:5) == 'TM')  THEN
C
	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
     &  	     MAXIM,'AVERAGE',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000

	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'O',IFORM,NSAM,NROW,NSLICE,
     &  	       MAXIM1,'VARIANCE',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000

          CALL RDPRMI(N1,IDUMP,NOT_USED,'NUMBER OF IMAGES AVERAGED')

	  CALL RDPRM(UM,NOT_USED,'TESTED POPULATION MEAN')

	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN5,'U',IFORM,NSAM,NROW,NSLICE,
     &  	     MAXIM2,'SIGNIFICANCE',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000
	  IF (IFORM < 1)  THEN
             CALL ERRT(101,'DOES NOT WORK ON FOURIER FILES',NE)
             GOTO 9000
          ENDIF

          CALL TTEST1(LUN1,LUN2,LUN5,N1,UM,NSAM,NROW,NSLICE)
          CLOSE(LUN5)

	ELSEIF(FCHAR(4:5) == 'TP')  THEN
          CALL ERRT(101,'UNDOCUMENTED OPERATION REMOVED',NE)
          !CALL TPAIRED  July 2014 al

	ELSEIF(FCHAR(4:5) == 'MM')  THEN

          CALL ERRT(101,'UNDOCUMENTED OPERATION REMOVED',NE)
          !CALL HOTM July 2014 al

	ELSEIF(FCHAR(4:5) == 'T2')  THEN

          CALL ERRT(101,'UNDOCUMENTED OPERATION REMOVED',NE)
          !CALL HOTELLING July 2014 al

        ELSE
	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'O',IFORM,
     &               NSAM2,NROW2,NSLIC2,
     &  	     MAXIM,'VARIANCE',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000

          IF (NSLIC2 .NE. 1) THEN
             CALL ERRT(101,'DOES NOT WORK ON VOLUMES',NE)
             GOTO 9000
          ENDIF

          NROW3 = NROW2
          NSAM3 = NSAM2
          NSAM  = NSAM2
          NROW  = NROW2
          IFORM = 1
	  CALL OPFILEC(0,.TRUE.,FILNAM,LUN3,'U',IFORM,NSAM3,NROW3,1,
     &  	     MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000

C         ERROR PROBABILITY
          CALL RDPRMI(N,IDUM,NOT_USED,'NUMBER OF FILES ADDED')

          CALL RDPRM(A,NOT_USED,'MAGNITUDE OF CONFIDENCE INTERVAL')

          CALL PROBER(A,N,LUN2,LUN3,NSAM,NROW,NZERO)

	  IF (NZERO .GT. 0)  WRITE(NOUT,401)  NZERO
401	  FORMAT('  WARNING ! ',I0,' NEGATIVE VALUES ENCOUNTERED')
        ENDIF
        GOTO 9000

9000    CLOSE(LUN1)
        CLOSE(LUN2)
        CLOSE(LUN3)
        CLOSE(LUN4)

        END

@


1.30
log
@UNDOCUMENTED OP: calling tpaired, hotm & hotelling
@
text
@d17 1
a17 1
C=* Email: spider@@wadsworth.org                                        *
@


1.29
log
@extra null definition
@
text
@d247 2
a248 1
          CALL TPAIRED
d252 3
a254 1
          CALL HOTM
d257 2
a258 1
          CALL HOTELLING
@


1.28
log
@EP TM prompt, ==, errt, cosmetic
@
text
@d46 1
a46 1
        CHARACTER             :: NULL,DISP
d50 1
@


1.27
log
@typet for inquireif1
@
text
@d2 1
a2 1
C ++********************************************************************
d4 6
a9 6
C   CONF1.F
C                 LONG FILE NAMES            JAN 89   ARDEAN LEITH
C                                           4/30/93   MAHIEDDINE LADJADJ
C                                            9/1/93   JING SU
C                 REMOVED UNUSED 'RS'      10/27/08   ARDEAN LEITH
C                 TYPET                     5/7/12    ARDEAN LEITH
d15 1
a15 1
C=* Copyright 1985-2012  Health Research Inc.,                         *
a32 1
C
d49 1
a49 1

a52 1
        NULL   = CHAR(0)
d65 1
a65 1
          IF (FCHAR(1:2) .EQ. CFUNC(IFUNC)) THEN
d75 2
a76 2
        IF (FCHAR(4:4) .EQ. 'U') THEN
           CALL ERRT(100,'UNKNOWN OPERATION: PT U',NE)
d82 1
a82 1
        IF (IRTFLG .EQ. -1) RETURN
d85 1
a85 1
        IF (FILNAM(1:1) .NE. '_' .AND. INDEX(FILNAM,'@@') .EQ. 0) THEN
d101 1
a101 1
	IF (FCHAR(4:4) .EQ. '3')  THEN
d113 1
d116 1
d120 1
d137 5
a141 1
       IF (NSLIC1 .NE. 1) GOTO 9600
d148 9
a156 2
       IF (NSLIC2 .NE. 1) GOTO 9600
       IF (NSAM1 .NE. NSAM2 .OR. NROW1 .NE. NROW2) GOTO 9200
d178 1
d180 1
d186 1
a186 1
4      IF(FCHAR(4:5).EQ.'TT')  THEN
d211 2
a212 2
	  IF (IFORM .LT. 1)  THEN
             CALL ERRT(2,'T_TEST ',NE)
d217 1
a217 1
     &       NSAM,NROW,NSLICE)
d220 1
a220 1
	ELSEIF(FCHAR(4:5).EQ.'TM')  THEN
d227 1
a227 1
     &  	     MAXIM1,'VARIANCE',.FALSE.,IRTFLG)
d231 3
a233 1
	  CALL RDPRM(UM,NOT_USED,'Tested population mean')
d237 2
a238 2
	  IF (IFORM .LT. 1)  THEN
             CALL ERRT(2,'T_TEST ',NE)
d242 1
a242 1
          CALL  TTEST1(LUN1,LUN2,LUN5,N1,UM,NSAM,NROW,NSLICE)
d245 2
a246 2
	ELSEIF(FCHAR(4:5).EQ.'TP')  THEN
          CALL  TPAIRED
d248 1
a248 1
	ELSEIF(FCHAR(4:5).EQ.'MM')  THEN
d250 2
a251 2
          CALL  HOTM
	ELSEIF(FCHAR(4:5).EQ.'T2')  THEN
d253 1
a253 1
          CALL  HOTELLING
d260 6
a265 1
          IF (NSLIC2 .NE. 1) GOTO 9600
d277 1
d282 2
a283 2
	  IF (NZERO.GT.0)  WRITE(NOUT,401)  NZERO
401	  FORMAT('  WARNING ! ',I10,' NEGATIVE VALUES ENCOUNTERED')
a285 9

C       INCONSISTENT PICTURE DIMENSIONS
9200    IER = 1
        GOTO 9900

C       OPERATION NOT USED ON VOLUMES
9600    IER = 42

9900    CALL ERRT(IER,'CONF1',NE)
@


1.26
log
@GPL_2010
@
text
@d9 1
d15 1
a15 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d49 1
d95 2
a96 1
        CALL INQUIREIF1(LUN1,FILTST,A0,640000,EX,ISOPEN,LUNOP,
@


1.25
log
@PT S bug, removed RS, cosmetic
@
text
@a10 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d12 5
a16 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d18 1
a18 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d23 1
a23 1
C=* This program is distributed in the hope that it will be useful,    *
d25 1
a25 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a26 1
C=*                                                                    *
d28 1
a28 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.24
log
@GPL License fixed
@
text
@d4 5
a8 3
C   CONF1.FC                  LONG FILE NAMES        JAN 89 al
C   CHANGES:               MAHIEDDINE LADJADJ        4/30/93
C                                     JING SU        9/1/93
d12 1
a12 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
a35 6
C RK IS THE COMPOSITE OF TWO MAIN PROGRAMS ORIGINALLY DEVELOPED
C BY W.HAENICKE FOR A PDP 11/70 IN GOETTINGEN. THE RANK SUM
C ANALYSIS HAS BEEN DESCRIBED IN W.HAENICKE'S THESIS (AVAILABLE
C FROM THE AUTHOR OR FROM J.FRANK) AND IN HAENICKE ET AL., J.MICROSCOPY
C JAN.84. FIRST IMPLEMENTED IN ALBANY OCT 8,1982. CURRENT COMPOSITE
C PROGRAM NOV 8 1983. JF.
a40 2
        PARAMETER (NFUNC=4)

d42 1
d44 2
a45 2
C COMMON BLOCK CONTAINING RANK SUM LABEL INFO (SEE COMMENT OF WRKLBL.F).
C TO GET THE INFO, USE RRKLBL.F  (IREC1 MUST BE KNOWN).
d47 5
a51 11
        COMMON /RKLABL/ ITREC,NR,NPTS,NTYP,NPTS1,RN,CRDIF5,CRDIF1,FIL1
C       ACTUAL MAX. LENGTH OF A0 IS SET IN INILUN
        COMMON          A0(8192)
        COMMON /NUMS/   NRS,IPIC1(100),IXS,IYS
        CHARACTER *81   FILNAM,FILNM2,FILTST
        CHARACTER *11   FILLIS
        COMMON /COMMUN/ FILNAM,FILLIS,FILNM2,FILTST

        CHARACTER *2    CFUNC(NFUNC)
        CHARACTER       NULL,FTEMP,DISP
        LOGICAL         EX,ISOPEN
d54 1
a54 1
        DATA CFUNC /'RS', 'PT', 'CI', 'EP'/
d70 1
a70 1
            GOTO (1, 2, 3, 4), IFUNC
a75 56
C       OPERATION ----------------------------------------------- 'RS'
1       FTEMP = FCHAR(4:4)
        IF (FTEMP .NE. 'E' .AND. FTEMP .NE. 'R' .AND. 
     &      FTEMP .NE. ' ') GOTO 42

131     CONTINUE
C       FRIEDMAN'S RANK VARIANCE ANALYSIS (COMMENTED OUT) !!!!!!!
c       CALL RKANAL(LUN1,LUN2,MAXDIM,NSAM,NROW,FILNM2,FCHAR(4:))
        GOTO 9000

C       RANK SUM FILE USED AS INPUT
42	CALL OPFILEC(0,.TRUE.,FILNM2,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
     &  	   MAXIM,'INPUT RANK SUM',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000
        IF (NSLICE .NE. 1) GOTO 9600
        ITREC = NROW * NSLICE

C       RRKLBL COMMENTED OUT !!!!!!!!!!!!!!!!!!!!!!!!!
c       CALL RRKLBL(LUN1,NSAM)

        IF (NR.LE.0 .OR. NPTS.LE.1) GOTO 9600
        IF (FTEMP .EQ.'F' .OR. FTEMP .EQ. 'H') GOTO 62
        IF (FTEMP .EQ. 'D' .OR.FTEMP.EQ.'A' .OR.FTEMP .EQ.'B') GOTO 131
        IF (FTEMP .EQ.'I') GOTO 22

C       OUTPUT FILE IS A RANK SUM FILE
        IFORM  = 1
        NSLICE = 1
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'U',IFORM,NSAM,NROW,NSLICE,
     &  	   MAXIM,'OUTPUT RANK SUM',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000
        GOTO 131 

C       OUTPUT FILE IS A LIST FILE
C       LIST FILE: OUTRKS.LST OR OUTRKS.TXT
62      IF (FTEMP .EQ. 'H') THEN
          FILLIS = 'OUTRKS.TXT' // NULL
        ELSE
          IF (FTEMP .EQ. 'F') THEN
            FILLIS = 'OUTRKS.LST' // NULL
          END IF
        ENDIF
        WRITE(NOUT,1003) FILLIS
1003    FORMAT(/' LISTFILE:  ',A/)
        OPEN(LUN2,STATUS='NEW',FILE=FILLIS)
        GOTO 131

C       IMAGE FILE IS OUTPUT
22      IFORM  = 1
        NSLICE = 1
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'U',IFORM,NSAM,NROW,NSLICE,
     &  	   MAXIM,'OUTPUT',.FALSE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000
        GOTO 131


d80 1
a80 2
           WRITE(NOUT,*) '*** PT U OPERATION MERGED WITH PLAIN PT NOW'
           CALL ERRT(100,'CONF1',NE)
d104 1
a104 1
	IF (FCHAR(4:4).EQ.'3')  THEN
d117 1
a117 3
           DO I = 1, NSAM
              A0(I) = 0.0
           ENDDO
a128 1
        IF (FMAX .EQ. FMIN) FMAX = FMIN + 1.0
@


1.23
log
@hotelling added
@
text
@d9 23
a31 6
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
d41 1
a41 1
C************************************************************************
@


1.22
log
@opfilec
h
@
text
@d290 3
@


1.21
log
@nloop,iloop_removed
@
text
@a49 1

d56 6
d81 2
a82 2
42	CALL OPFIL(.TRUE.,FILNM2,LUN1,'O',NSAM,NROW,NSLICE,
     &  	   IDUM,'INPUT RANK SUM',.TRUE.,IRTFLG)
d98 2
a99 2
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM,NROW,NSLICE,
     &  	   IDUM,'OUTPUT RANK SUM',.FALSE.,IRTFLG)
d118 1
a118 1
22      IFORM = 1
d120 2
a121 2
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'U',NSAM,NROW,NSLICE,
     &  	   IDUM,'OUTPUT',.FALSE.,IRTFLG)
d155 3
a157 3
	IF(FCHAR(4:4).EQ.'3')  THEN
	IFORM  = 3
        NSLICE = 0
d159 2
a160 2
        IFORM  = 1
        NSLICE = 1
d163 2
a164 2
        CALL OPFIL(.FALSE.,FILNAM,LUN1,DISP,NSAM,NROW,NSLICE,
     &             IDUM,'IMAGE',.FALSE.,IRTFLG)
d188 2
a189 2
3      CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
     &  	   IDUM,'AVERAGE',.FALSE.,IRTFLG)
d194 3
a196 2
       CALL OPFIL(.TRUE.,FILNAM,LUN2,'O',NSAM2,NROW2,NSLIC2,
     &  	   IDUM,'VARIANCE',.FALSE.,IRTFLG)
d207 2
a208 2
       CALL OPFIL(.TRUE.,FILNAM,LUN3,'U',NSAM3,NROW3,1,
     &  	   IDUM,'UPPER LIMIT OUTPUT',.FALSE.,IRTFLG)
d215 2
a216 2
       CALL OPFIL(.TRUE.,FILNAM,LUN4,'U',NSAM4,NROW4,1,
     &  	   IDUM,'LOWER LIMIT OUTPUT',.FALSE.,IRTFLG)
d229 2
a230 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
     &  	     IDUM,'FIRST AVERAGE',.FALSE.,IRTFLG)
d233 2
a234 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN2,'O',NSAM,NROW,NSLICE,
     &  	     IDUM,'FIRST VARIANCE',.FALSE.,IRTFLG)
d239 2
a240 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN3,'O',NSAM,NROW,NSLICE,
     &  	     IDUM,'SECOND AVERAGE',.FALSE.,IRTFLG)
d243 2
a244 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN4,'O',NSAM,NROW,NSLICE,
     &  	     IDUM,'SECOND VARIANCE',.FALSE.,IRTFLG)
d249 2
a250 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN5,'U',NSAM,NROW,NSLICE,
     &  	     IDUM,'SIGNIFICANCE',.FALSE.,IRTFLG)
d263 2
a264 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
     &  	     IDUM,'AVERAGE',.FALSE.,IRTFLG)
d267 2
a268 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN2,'O',NSAM,NROW,NSLICE,
     &  	     IDUM,'VARIANCE',.FALSE.,IRTFLG)
d273 2
a274 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN5,'U',NSAM,NROW,NSLICE,
     &  	     IDUM,'SIGNIFICANCE',.FALSE.,IRTFLG)
d292 3
a294 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN2,'O',NSAM2,NROW2,NSLIC2,
     &  	     IDUM,'VARIANCE',.FALSE.,IRTFLG)
d302 2
a303 2
	  CALL OPFIL(.TRUE.,FILNAM,LUN3,'U',NSAM3,NROW3,1,
     &  	     IDUM,'OUTPUT',.FALSE.,IRTFLG)
d309 1
d311 1
@


1.20
log
@added tpaired call
@
text
@d214 2
a215 2
       CALL RDPRMI(N,IDUM,NLOOP,ILOOP,'NUMBER OF FILES ADDED')
       CALL RDPRM(ALPHA,NLOOP,ILOOP,'ERROR PROBABILITY IN %')
d231 1
a231 1
          CALL RDPRMI(N1,IDUMP,NLOOP,ILOOP,'NUMBER OF IMAGES AVERAGED')
d241 1
a241 1
          CALL RDPRMI(N2,IDUMP,NLOOP,ILOOP,'NUMBER OF IMAGES AVERAGED')
d265 2
a266 2
          CALL RDPRMI(N1,IDUMP,NLOOP,ILOOP,'NUMBER OF IMAGES AVERAGED')
	  CALL RDPRM(UM,NLOOP,ILOOP,'Tested population mean')
d300 2
a301 2
          CALL RDPRMI(N,IDUM,NLOOP,ILOOP,'NUMBER OF FILES ADDED')
          CALL RDPRM(A,NLOOP,ILOOP,'MAGNITUDE OF CONFIDENCE INTERVAL')
@


1.19
log
@EP MM added
@
text
@d1 1
d277 4
d282 1
a282 1
C
d284 1
d323 1
@


1.18
log
@EP TM added
@
text
@d276 3
a315 1
        RETURN
@


1.17
log
@adapted arguments for subroutine ttest.f
@
text
@a0 1

d253 20
a272 1
          GOTO 9000
d274 2
@


1.16
log
@a
@
text
@a251 1
     &       A0(1),A0(NSAM+1),A0(2*NSAM+1),A0(3*NSAM+1),A0(4*NSAM+1),
@


1.15
log
@*** empty log message ***
@
text
@d50 1
a50 1
CNO_SAVE
@


1.14
log
@3D line added
@
text
@d152 1
d155 1
a157 1
        NSLICE = 1
@


1.13
log
@used norm3
@
text
@d125 1
a125 1
           WRITE(NOUT,*) '*** PT U OPERATIION MERGED WITH PLAIN PT NOW'
d150 3
d154 1
a159 1
        IF (NSLICE .NE. 1) GOTO 9600
d165 1
a165 1
           DO  I = 1, NROW
d177 1
a177 1
        CALL PTTERN(LUN1,NSAM,NROW,FMAX,FMIN)
@


1.12
log
@removed IFORM from OPFIL call
@
text
@d168 2
a169 1
           IF (IMAMI.NE.1) CALL NORM(LUN1,NSAM,NROW,FMAXD,FMIND,AVD)
@


1.11
log
@R removed
@
text
@d77 1
a77 1
     &  	   IFORM,'INPUT RANK SUM',.TRUE.,IRTFLG)
d94 1
a94 1
     &  	   IFORM,'OUTPUT RANK SUM',.FALSE.,IRTFLG)
d116 1
a116 1
     &  	   IFORM,'OUTPUT',.FALSE.,IRTFLG)
d154 1
a154 1
     &             IFORM,'IMAGE',.FALSE.,IRTFLG)
d179 1
a179 1
     &  	   IFORM,'AVERAGE',.FALSE.,IRTFLG)
d185 1
a185 1
     &  	   IFORM,'VARIANCE',.FALSE.,IRTFLG)
d197 1
a197 1
     &  	   IFORM,'UPPER LIMIT OUTPUT',.FALSE.,IRTFLG)
d205 1
a205 1
     &  	   IFORM,'LOWER LIMIT OUTPUT',.FALSE.,IRTFLG)
d219 1
a219 1
     &  	     IFORM,'FIRST AVERAGE',.FALSE.,IRTFLG)
d223 1
a223 1
     &  	     IFORM,'FIRST VARIANCE',.FALSE.,IRTFLG)
d229 1
a229 1
     &  	     IFORM,'SECOND AVERAGE',.FALSE.,IRTFLG)
d233 1
a233 1
     &  	     IFORM,'SECOND VARIANCE',.FALSE.,IRTFLG)
d239 1
a239 1
     &  	     IFORM,'SIGNIFICANCE',.FALSE.,IRTFLG)
d254 1
a254 1
     &  	     IFORM,'VARIANCE',.FALSE.,IRTFLG)
d263 1
a263 1
     &  	     IFORM,'OUTPUT',.FALSE.,IRTFLG)
@


1.10
log
@needed filtest added
@
text
@d218 1
a218 1
	  CALL OPFIL(.TRUE.,FILNAM,LUN1,'R',NSAM,NROW,NSLICE,
d222 1
a222 1
	  CALL OPFIL(.TRUE.,FILNAM,LUN2,'R',NSAM,NROW,NSLICE,
d228 1
a228 1
	  CALL OPFIL(.TRUE.,FILNAM,LUN3,'R',NSAM,NROW,NSLICE,
d232 1
a232 1
	  CALL OPFIL(.TRUE.,FILNAM,LUN4,'R',NSAM,NROW,NSLICE,
@


1.9
log
@used inquireif1 in pt to set disp
@
text
@d138 2
@


1.8
log
@rmoved unused INFLUN
@
text
@d36 1
a38 1
        COMMON /COMMUN/ FILNAM,FILLIS,FILNM2,FILTST
d41 2
d45 1
a45 1
        LOGICAL         EX
d134 9
a142 3
C       SEE IF THE IMAGE ALREADY EXISTS
        CALL FILCAN(FILTST,NLET,NULL,NULL,FILNAM,DATEXC,IER)
        IF (IER .NE. 0) RETURN
a143 1
        INQUIRE(FILE=FILTST,ERR=9000,EXIST=EX)
@


1.7
log
@changed 'PT' operation to merge with 'pt u'
@
text
@a49 1
        INFLUN = 2
@


1.6
log
@nosave
@
text
@d2 1
a2 1
C++*********************************************************************
d4 3
a6 1
C   CONF1.FOR
d8 10
a17 4
C   CHANGED BY MAHIEDDINE LADJADJ        4/30/93
C   CHANGED BY JING SU 			 9/1/93
C
C THIS IS THE COMPOSITE OF TWO MAIN PROGRAMS ORIGINALLY DEVELOPED
d23 1
a23 1
C                                         LONG FILE NAMES JAN 89 al
d36 1
a36 1
        COMMON          A0(1)
d38 2
a39 2
        COMMON /COMMUN/ FILNAM,FILLIS,FILNM2
        CHARACTER *81   FILNAM,FILNM2
d42 2
a43 1
        CHARACTER       NULL,FTEMP
d47 1
d56 1
a56 1
        DO 10 IFUNC = 1, NFUNC
d59 2
a60 2
          END IF
10      CONTINUE
d78 1
a78 2
        IF (NSAM.GT.4 .AND. IFORM.NE.1) GOTO 9500
        IF (NSLICE.NE.1) GOTO 9600
d81 1
a81 1
C       RRDLBL COMMENTED OUT !!!!!!!!!!!!!!!!!!!!!!!!!
d121 19
a139 2
2       FTEMP = FCHAR(4:4)
        IF (FTEMP .EQ. 'U') THEN
d141 18
a158 6
C         IMAGE FILE USED AS INPUT
	  CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
     &  	     IFORM,'INPUT',.TRUE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000
          IF (NSAM.GT.4.AND.IFORM.NE.1) GOTO 9500
          IF (NSLICE.NE.1) GOTO 9600
d160 2
a161 17
C         IMAGE FILE IS OUTPUT
          IFORM = 1

C         OPERATION "PT": NO INPUT FILE NEEDED
	  NSAM = 0
	  NROW = 0
          NSLICE=1
	  CALL OPFIL(.TRUE.,FILNAM,LUN1,'U',NSAM,NROW,NSLICE,
     &    	     IFORM,'OUTPUT',.FALSE.,IRTFLG)
	  IF (IRTFLG .NE. 0) GOTO 9000
          DO I = 1, NSAM
            A0(I) = 0.
          END DO
          DO  I = 1, NROW
            CALL WRTLIN(LUN1,A0,NSAM,I)
          END DO
        END IF
d164 1
a164 2
        IF (IMAMI.NE.1) CALL NORM(LUN1,NSAM,NROW,FMAXD,FMIND,AVD)
        IF (FMAX.EQ.FMIN) FMAX=FMIN+1.
d248 1
a248 1
          IF (NSLIC2.NE.1) GOTO 9600
d262 1
a262 1
	  IF(NZERO.GT.0)  WRITE(NOUT,401)  NZERO
d267 6
d274 1
a274 6
9200    IER=1
        GOTO 9900
9500    IER=15
        GOTO 9900
9600    IER=2
9900    CALL ERRT(IER,'SQOP1B',NE)
d281 1
a281 2
        FCHAR(1:1) = ';'

@


1.5
log
@bad )
@
text
@d38 1
a38 1

d239 3
a241 1
          CALL PROBER(A,N,LUN2,LUN3,NSAM,NROW)
a259 1
	RETURN
@


1.4
log
@cosmetic
@
text
@d57 1
a57 1
     &      FTEMP .NE. ' ')) GOTO 42
@


1.3
log
@NAME -> FILE in open statement
@
text
@d4 1
a4 1
C $$ CONF1.FOR
d21 1
a21 1
#ifdef SP_UNIX
a22 3
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d39 1
a39 1
        NULL=CHAR(0)
d53 2
a54 1
C       OPERATION							'RS'
d56 3
a58 2
        IF (FTEMP .EQ. 'E') GOTO 131
        IF (FTEMP .NE. 'R' .AND. FTEMP .NE. ' ') GOTO 42
d98 1
a98 1
1003    FORMAT(/' LISTFILE:  ',A10/)
d110 2
a111 1
C       OPERATION							'PT'
d146 3
a148 3
C       OPERATION							'CI'
C       INPUT FILE (MEAN FILE)
3	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLIC1,
d150 2
a151 2
	IF (IRTFLG .NE. 0) GOTO 9000
        IF (NSLIC1 .NE. 1) GOTO 9600
d153 2
a154 2
C       SECOND INPUT FILE CONTAINING THE VARIANCE
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'O',NSAM2,NROW2,NSLIC2,
d156 11
a166 11
	IF (IRTFLG .NE. 0) GOTO 9000
        IF (NSLIC2 .NE. 1) GOTO 9600
        IF (NSAM1 .NE. NSAM2 .OR. NROW1 .NE. NROW2) GOTO 9200

C       OUTPUT FILE OR FILE TO RECEIVE UPPER LIMIT OF CONFIDENCE INTERVAL
        NROW3 = NROW2
        NSAM3 = NSAM2
        NSAM  = NSAM2
        NROW  = NROW2
        IFORM = 1
	CALL OPFIL(.TRUE.,FILNAM,LUN3,'U',NSAM3,NROW3,1,
d168 1
a168 1
	IF (IRTFLG .NE. 0) GOTO 9000
d170 5
a174 5
C    FILE TO RECEIVE LOWER LIMIT OF CONFIDENCE INTERVAL
        NROW4 = NROW2
        NSAM4 = NSAM2
        IFORM = 1
	CALL OPFIL(.TRUE.,FILNAM,LUN4,'U',NSAM4,NROW4,1,
d176 1
a176 1
	IF (IRTFLG .NE. 0) GOTO 9000
d178 9
a186 9
C   CONFIDENCE INTERVAL
        CALL RDPRMI(N,IDUM,NLOOP,ILOOP,'NUMBER OF FILES ADDED')
        CALL RDPRM(ALPHA,NLOOP,ILOOP,'ERROR PROBABILITY IN %')
        CALL CONF(N,ALPHA,LUN1,LUN2,LUN3,LUN4,NSAM,NROW)
        GOTO 9000

C       OPERATION							'EP'
C    SECOND INPUT FILE CONTAINING THE VARIANCE
4       IF(FCHAR(4:5).EQ.'TT')  THEN
d189 1
a189 1
     &  	     IFORM,'First average',.FALSE.,IRTFLG)
d191 1
d193 1
a193 1
     &  	     IFORM,'First variance',.FALSE.,IRTFLG)
d195 3
a197 2
        CALL  RDPRMI(N1,IDUMP,NLOOP,ILOOP,'Number of images averaged')
C
d199 1
a199 1
     &  	     IFORM,'Second average',.FALSE.,IRTFLG)
d201 1
d203 1
a203 1
     &  	     IFORM,'Second variance',.FALSE.,IRTFLG)
d205 3
a207 2
        CALL  RDPRMI(N2,IDUMP,NLOOP,ILOOP,'Number of images averaged')
C									
d209 1
a209 1
     &  	     IFORM,'Significance',.FALSE.,IRTFLG)
d211 5
a215 2
	  IF (IFORM .LT. 1) GOTO 145
C
d217 2
a218 2
     &    A0(1),A0(NSAM+1),A0(2*NSAM+1),A0(3*NSAM+1),A0(4*NSAM+1),
     &    NSAM,NROW,NSLICE)
d221 1
a221 2
145       CALL ERRT(2,'T_TEST ',NE)
          GOTO 9000
d236 1
a236 1
C    ERROR PROBABILITY
d242 2
a243 1
C
@


1.2
log
@cpp_lines_added
@
text
@d1 1
a6 1
C
d27 2
a28 2
C COMMON BLOCK CONTAINING RANK SUM LABEL INFO (SEE COMMENT OF WRKLBL.FTN).
C TO GET THE INFO, USE RRKLBL.FTN (IREC1 MUST BE KNOWN).
d31 2
a32 2
        COMMON  A0(1)
        COMMON /NUMS/ NRS,IPIC1(100),IXS,IYS
d34 4
a37 4
        CHARACTER *81 FILNAM,FILNM2
        CHARACTER *11 FILLIS
        CHARACTER *2  CFUNC(NFUNC)
        CHARACTER     NULL,FTEMP
d100 1
a100 1
        OPEN(LUN2,STATUS='NEW',NAME=FILLIS)
d179 2
a180 2
        CALL RDPRMI(N,IDUM,NLOOP,ILOOP,'NUMBER OF FILES ADDED$')
        CALL RDPRM(ALPHA,NLOOP,ILOOP,'ERROR PROBABILITY IN %$')
d231 2
a232 2
          CALL RDPRMI(N,IDUM,NLOOP,ILOOP,'NUMBER OF FILES ADDED$')
          CALL RDPRM(A,NLOOP,ILOOP,'MAGNITUDE OF CONFIDENCE INTERVAL$')
@


1.1
log
@Initial revision
@
text
@d21 3
d25 1
@
