head	1.17;
access;
symbols
	pre_getangas:1.15
	GPL2010:1.15
	pre_GPL2010:1.14
	pre_var_equation:1.14
	pre_fftwrings:1.14
	pre_opfiles:1.14
	src:1.14
	best-code:1.14
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.12
	prec_CA:1.12
	noindx:1.11
	Bproc:1.2
	oct21:1.1
	last77:1.1;
locks; strict;
comment	@c @;


1.17
date	2013.06.07.18.19.36;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2011.12.30.20.22.02;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.24.13.26.24;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.20.32.24;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.18.23.15;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.24.16.27.35;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2002.08.22.16.12.33;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2002.08.22.15.36.27;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.08.20.15.39.12;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.08.19.20.23.55;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2002.08.19.18.52.03;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.09.21.04.31;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.09.20.23.40;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2002.08.09.18.37.17;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.11.14.08.19;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	99.11.10.23.10.02;	author yuchen;	state Exp;
branches;
next	1.1;

1.1
date	99.02.19.16.59.58;	author leith;	state Exp;
branches;
next	;


desc
@@


1.17
log
@prompts changed
@
text
@
C++*********************************************************************
C
C OPENCHK.F -- NEW NOVEMBER 1996  AUTHOR: ARDEAN LEITH
C              NX, NY, NZ ALL ON ONE LINE         AUG 2002 ARDEAN LEITH
C              'MS' MODIFICATIONS                 AUG 2002 ARDEAN LEITH
C              NX                                 DEC 2011 ARDEAN LEITH
C              NO MORE 'ENTER'                    JUN 2013 ARDEAN LEITH
C           
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2013  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    OPENCHK(NX,NY,NZ,ITYPE,NXMAX,IRTFLG)
C
C    PURPOSE:       CHECK ON INFO TO OPEN A NEW SPIDER IMAGE.
C
C    PARAMETERS:
C        NX,NY      DIMENSIONS OF FILE                     (SENT)
C        NZ         NUMBER OF PLANES                       (SENT)
C        ITYPE      IFORM                                  (SENT/RET.)                    
C        NXMAX      MAX. RECORD SIZE                       (SENT)                    
C        IRTFLG     ERROR RETURN FLAG.                     (RET.)
C                   IRTFLG = 0    NORMAL RETURN
C                   IRTFLG = 1    ERROR RETURN
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

      SUBROUTINE OPENCHK(NX,NY,NZ,ITYPE,NXMAX,IRTFLG)

      INCLUDE 'CMBLOCK.INC'
	
C     CHECK THAT INPUT PARAMETERS ARE OK
C     IF NX OR NY IS NOT LOGICAL ASK FOR THEM

      IF ((ITYPE == 0  .OR. ITYPE == -1 ) .AND.  NZ <= 0) THEN
C        NEED TO INQUIRE DIMENSIONS (FROM 'MS')
         CALL RDPRI3S(NX,NY,NZ,NOT_USED,
     &              'X, Y, & Z DIMENSIONS',IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

         IF (ITYPE == -1 .AND. NZ <= 1)  THEN
C          FOURIER IMAGE STACK
           ITYPE  = -12 + MOD(NX,2)
           NZ = 1
           
         ELSEIF (ITYPE == -1)  THEN
C          FOURIER VOLUME STACK
           ITYPE = -22 + MOD(NX,2)

         ELSEIF (NZ <= 1) THEN
C           IMAGE STACK
            NZ = 1
            ITYPE  = 1
         ELSE
C           VOLUME STACK
            ITYPE  = 3
         ENDIF

      ELSEIF (ITYPE == 3 .AND. NZ <= 0) THEN
C        NEED TO INQUIRE DIMENSIONS FROM OTHER OPS THAN 'MS'
         CALL RDPRI3S(NX,NY,NZ,NOT_USED,
     &              'X, Y, & Z DIMENSIONS',IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

         IF (NZ .EQ. -9999) THEN
C           SET NZ TO 1
            NZ = 1

         ELSEIF (NZ <= 0) THEN
C           STILL NEED TO INQUIRE AS TO NZ
            CALL RDPRI1S(NZ,NOT_USED,
     &                 'Z DIMENSION',IRTFLG)
         ENDIF
         IF (IRTFLG .NE. 0) RETURN

         IF (NZ <= 1) ITYPE = 1

      ELSEIF (NX <= 0 .OR. NY <= 0) THEN
C        NEED TO FIND NX & NY FOR NEW FILE
         NY = 0
         CALL RDPRIS(NX,NY,NOT_USED,
     &               'X & Y DIMENSIONS',IRTFLG)
         IF (IRTFLG .NE. 0) RETURN
         IF (ITYPE == 0) ITYPE = 1
      ENDIF
      IRTFLG = 1
      IF (NY .LE. 0) NY = NX

      IF (NX <= 0 .OR. NY <= 0) THEN
C        FOR NEW FILES, NON-ZERO NX, NY NEED TO BE SUPPLIED
         CALL ERRT(101,'NX OR NY NOT GIVEN',NE)
         RETURN

      ELSEIF (NX > NXMAX) THEN
C        EXCESSIVE ROW LENGTH 
         CALL ERRT(102,'ROWLENGTH MUST BE <=:',NXMAX)
         RETURN

      ELSEIF (NZ == 0) THEN
C        NEW FILES NEED A NON ZERO SLICE NUMBER
         NZ = 1

      ELSEIF (NZ < 0) THEN
C        WANT TO CREATE OBSOLETE SHORT HEADER FILE
         WRITE(NOUT,*) 
     &            'WARNING:  SHORT HEADER FILES NO LONGER SUPPORTED.'
         NZ = -NZ
      ENDIF

      IF (ITYPE == -1 .OR. ITYPE == -3 .OR. ITYPE == -7) THEN
C        WANT TO CREATE OBSOLETE FOURIER FILE
         CALL ERRT(101,
     &         'CAN NOT CREATE OBSOLETE FOURIER FORMAT FILE',NE)
         RETURN

      ELSEIF (ITYPE == 0) THEN
C        WANT TO CREATE ???? TYPE
         CALL ERRT(101, 'PGM. ERROR, UNKNOWN FILE FORMAT',NE)
         RETURN

      ENDIF

      IRTFLG = 0

      END

@


1.16
log
@nx,  <
@
text
@d8 1
d14 1
a14 1
C=* Copyright 1985-2011  Health Research Inc.,                         *
d58 1
a58 1
     &              'ENTER DIMENSIONS (NX,NY,NZ)',IRTFLG)
d82 1
a82 1
     &              'ENTER DIMENSIONS (NX,NY,NZ)',IRTFLG)
d92 1
a92 1
     &                 'ENTER Z DIMENSION (NZ)',IRTFLG)
d102 1
a102 1
     &               'ENTER X & Y DIMENSIONS (NX,NY)',IRTFLG)
d116 1
a116 2
         WRITE(NOUT,*) '*** ROWLENGTH MUST BE <=:',NXMAX
         CALL ERRT(100,'OPENCHK',NE)
a143 1
      RETURN
@


1.15
log
@GPL_2010
@
text
@d5 1
a5 1
C              NSAM, NROW, NSLICE ALL ON ONE LINE AUG 2002 ARDEAN LEITH
d7 1
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d31 1
a31 1
C   OPENCHK(NSAM,NROW,NSLICE,ITYPE,NSAMAX,IRTFLG)
d36 2
a37 2
C        NSAM,NROW  DIMENSIONS OF FILE                     (SENT)
C        NSLICE     NUMBER OF PLANES                       (SENT)
d39 1
a39 1
C        NSAMAX     MAX. RECORD SIZE                       (SENT)                    
d47 1
a47 1
      SUBROUTINE OPENCHK(NSAM,NROW,NSLICE,ITYPE,NSAMAX,IRTFLG)
d52 1
a52 1
C     IF NSAM OR NROW IS NOT LOGICAL ASK FOR THEM
d54 1
a54 1
      IF ((ITYPE .EQ. 0  .OR. ITYPE .EQ. -1 ) .AND.  NSLICE .LE. 0) THEN
d56 2
a57 2
         CALL RDPRI3S(NSAM,NROW,NSLICE,NOT_USED,
     &              'ENTER DIMENSIONS (NSAM,NROW,NSLICE)',IRTFLG)
d60 1
a60 1
         IF (ITYPE .EQ. -1 .AND. NSLICE .LE. 1)  THEN
d62 2
a63 2
           ITYPE  = -12 + MOD(NSAM,2)
           NSLICE = 1
d65 1
a65 1
         ELSEIF (ITYPE .EQ. -1)  THEN
d67 1
a67 1
           ITYPE = -22 + MOD(NSAM,2)
d69 1
a69 1
         ELSEIF (NSLICE .LE. 1) THEN
d71 1
a71 1
            NSLICE = 1
d78 1
a78 1
      ELSEIF (ITYPE .EQ. 3 .AND. NSLICE .LE. 0) THEN
d80 2
a81 2
         CALL RDPRI3S(NSAM,NROW,NSLICE,NOT_USED,
     &              'ENTER DIMENSIONS (NSAM,NROW,NSLICE)',IRTFLG)
d84 8
a91 8
         IF (NSLICE .EQ. -9999) THEN
C           SET NSLICE TO 1
            NSLICE = 1

         ELSEIF (NSLICE .LE. 0) THEN
C           STILL NEED TO INQUIRE AS TO NSLICE
            CALL RDPRI1S(NSLICE,NOT_USED,
     &                 'ENTER Z DIMENSION (NSLICE)',IRTFLG)
d95 1
a95 1
         IF (NSLICE .LE. 1) ITYPE = 1
d97 5
a101 5
      ELSEIF (NSAM .LE. 0 .OR. NROW .LE. 0) THEN
C        NEED TO FIND NSAM & NROW FOR NEW FILE
         NROW = 0
         CALL RDPRIS(NSAM,NROW,NOT_USED,
     &               'ENTER X & Y DIMENSIONS (NSAM,NROW)',IRTFLG)
d103 1
a103 1
         IF (ITYPE .EQ. 0) ITYPE = 1
d106 1
a106 1
      IF (NROW .LE. 0) NROW = NSAM
d108 3
a110 3
      IF (NSAM .LE. 0 .OR. NROW .LE. 0) THEN
C        FOR NEW FILES, NON-ZERO NSAM, NROW NEED TO BE SUPPLIED
         CALL ERRT(101,'NSAM OR NROW NOT GIVEN',NE)
d113 1
a113 1
      ELSEIF (NSAM .GT. NSAMAX) THEN
d115 1
a115 1
         WRITE(NOUT,*) '*** ROWLENGTH MUST BE <=:',NSAMAX
d119 1
a119 1
      ELSEIF (NSLICE .EQ. 0) THEN
d121 1
a121 1
         NSLICE = 1
d123 1
a123 1
      ELSEIF (NSLICE .LT. 0) THEN
d127 1
a127 1
         NSLICE = -NSLICE
d130 1
a130 1
      IF (ITYPE .EQ. -1 .OR. ITYPE .EQ. -3 .OR. ITYPE .EQ. -7) THEN
d136 1
a136 1
      ELSEIF (ITYPE .EQ. 0) THEN
@


1.14
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.13
log
@HRI GPL License used
@
text
@a8 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 6

C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.12
log
@-9999 is default to image
@
text
@d10 24
@


1.11
log
@'MS F' mods
@
text
@d70 5
a74 1
         IF (NSLICE .LE. 0) THEN
@


1.10
log
@MS F can make fourier now
@
text
@d6 2
a7 1
C                         
d40 1
a40 1
      IF (ITYPE .EQ. 0  .AND.  NSLICE .LE. 0) THEN
@


1.9
log
@bad itype
@
text
@d40 1
a40 1
C        NEED TO INQUIRE DIMENSIONS
d45 11
a55 1
         IF (NSLICE .LE. 1) THEN
d59 1
d64 1
a64 1
C        NEED TO INQUIRE DIMENSIONS
@


1.8
log
@bad ms
@
text
@d39 1
a39 1
      IF ((ITYPE .EQ. 0) .AND. NSLICE .LE. 0) THEN
d45 1
a45 1
         IF (NSLICE .LE. 0) THEN
d73 1
@


1.7
log
@'ms' for vol
@
text
@d39 1
a39 1
      IF ((ITYPE .EQ. 0 .OR. ITYPE .EQ. 3) .AND. NSLICE .LE. 0) THEN
d46 13
d64 2
a65 1
         IF (ITYPE .EQ. 0 .AND. NSLICE .GT. 1) ITYPE = 3
@


1.6
log
@bad irtflg
@
text
@d15 1
a15 1

d23 1
a23 1
C        ITYPE      IFORM                                  (SENT)                    
d25 1
a25 1
C        IRTFLG     ERROR RETURN FLAG.
d39 1
a39 1
      IF (ITYPE .EQ. 3 .AND. NSLICE .LE. 0) THEN
d51 1
@


1.5
log
@nslice wrong
@
text
@d50 1
d57 1
d59 1
a59 2
      IF (IRTFLG .NE. 0) RETURN

@


1.4
log
@*** empty log message ***
@
text
@d47 1
a47 1
            CALL RDPRI1S(NSAM,NOT_USED,
@


1.3
log
@nloop,iloop_removed
@
text
@d4 3
a6 2
C OPENCHK.F   -- NEW NOVEMBER 1996  AUTHOR: ARDEAN LEITH
C                                          
d8 6
a13 6
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
d15 1
a15 1
C
a34 1

d37 1
d39 11
a49 1
      IRTFLG = 0
d51 1
a51 2
C     IF NSAM OR NROW IS NOT LOGICAL ASK FOR THEM
      IF (NSAM .LE. 0 .OR. NROW .LE. 0) THEN
d53 3
a55 2
         CALL RDPRMI(NSAM,NROW,NOT_USED,
     &               'ENTER DIMENSIONS (NSAM,NROW)')
d57 2
a59 7

      IF (ITYPE .EQ. 3 .AND. NSLICE .LE. 0) THEN
C        NEED TO INQUIRE AS TO NSLICE
         CALL RDPRMI(NSLICE,NDUM,NOT_USED,
     &              'ENTER NUMBER OF SLICES (NSLICE)')
      ENDIF

@


1.2
log
@a
@
text
@d43 1
a43 1
         CALL RDPRMI(NSAM,NROW,NLOOP,ILOOP,
d50 1
a50 1
         CALL RDPRMI(NSLICE,NDUM,NLOOP,ILOOP,
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
CNO_SAVE
@
