head	1.20;
access;
symbols
	healthdept_2018:1.20
	pre_getangas:1.19
	GPL2010:1.19
	pre_GPL2010:1.18
	pre_var_equation:1.18
	pre_fftwrings:1.18
	pre_opfiles:1.18
	src:1.18
	best-code:1.18
	x-named-regs:1.18
	x:1.18
	v13-00:1.18
	pre_GPL:1.16
	prec_CA:1.16
	noindx:1.16
	Bproc:1.16
	oct21:1.15
	last77:1.13;
locks; strict;
comment	@c @;


1.20
date	2018.10.03.14.34.03;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2010.06.24.13.25.16;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2005.10.17.20.22.31;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.17.18.14.53;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	99.12.07.15.25.55;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	99.09.08.17.00.18;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	99.03.30.13.48.09;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	99.03.15.18.57.55;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	99.03.12.18.30.04;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	98.02.04.14.59.28;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	98.02.04.14.40.57;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	98.02.03.17.09.06;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	98.02.02.18.31.39;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	98.01.29.15.01.48;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	98.01.26.18.08.19;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.08.12.14.08.19;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.08.27.18.02.03;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.02.07.15.53.05;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.17.12.24.00;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.14.03.16;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.20
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C                                                                      *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C      CNSTUFF.F         LAST UPDATE               8/27/96 ARDEAN LEITH
C                                                  3/27/92 ARDEAN LEITH
C                                                  2/04/98 ARDEAN LEITH
C                                      REWRITTEN   3/10/99 ARDEAN LEITH
C
C **********************************************************************
C
C    PURPOSE:      PLACE CONTOUR FROM CNTRCE IN OUTPUT FILE
C
C    PARAMETERS:   LUN     OUTPUT FILE UNIT                       (SENT)
C                  X,Y     DATA ARRAY                             (SENT)
C                  NPTS    NUMBER OF POINTS IN DATA               (SENT)
C                  MULTIZ  LOGICAL FLAG FOR STERECON INPUT FILE   (SENT)
C                  MAXPTS  THIN LIMIT                             (SENT)
C                  IPEN    COLOR FOR CONTOUR (UNUSED)             (SENT)
C                  IRTFLG  ERROR FLAG                             (RET.)
C
C    CALLED BY:    CNTRCE
C                                                          ...CNCALC
C    CALL TREE:    PLOT1...CNINT3...CNTUR...CNSCAN...CNTRCE...
C                                                          ...CNSTUFF
C                                                             SSPUSH
C
C--********************************************************************

      SUBROUTINE CNSTUFF(LUN,X,Y,NPTS,MULTIZ,MAXPTS,IPENT,IRTFLG)

      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'

      COMMON /POLY/  MINPTS,ISLICE

      PARAMETER      (NSIZE = 2000)
      DIMENSION      DATA(3,NSIZE),WORK(3,NSIZE)
      EQUIVALENCE    (BUF(1),DATA(1,1)), (BUF(6400),WORK(1,1))

      COMMON /IOBUF/ BUF(NBUFSIZ)

      DIMENSION      X(NSIZE),Y(NSIZE)
      LOGICAL        THINED

      IRTFLG = 0

      DO I2 = 1, NPTS
         DATA(1,I2) = X(I2)
         DATA(2,I2) = Y(I2)
      ENDDO

      IF (NPTS .GT. MAXPTS) THEN 
C       TOO MANY POINTS ON THIS CONTOUR, TRY TO THIN IT
        N0      = NPTS
        RETANG  = 178.0
        MAXTRYS = 2
        CALL RATHIN(DATA,NPTS,0.0333,RETANG,MAXPTS,MAXTRYS,WORK,IRTFLGR)
      ENDIF
      THINED = (NPTS .LT. N0) 

      IF (NPTS .LT. MINPTS) THEN
C        ABANDON THIS TOO-SHORT CONTOUR
         WRITE(NOUT,1112) NPTS
 1112    FORMAT(' SHORT CONTOUR WITH: ',I4,' POINTS ABANDONED.')

      ELSEIF (FCHAR(4:4) .EQ. 'S') THEN
C        STORE THE CONTOUR IN STERECON INPUT FILE
         CALL SSPUSH(LUN,DATA,NPTS,ISLICE,IRTFLG)
      ELSE
C        STORE THE CONTOUR IN POSTSCRIPT FILE
         CALL POARAYF(LUN,DATA,NPTS,.TRUE.,.FALSE.)
      ENDIF
        
      IF (THINED) THEN
         WRITE(NOUT,101) ISLICE,N0,NPTS
  101    FORMAT(' CONTOUR:',I5,' WITH: ',I4,' --> ',I4,
     &          ' POINTS STORED.')
      ELSE
         WRITE(NOUT,103) ISLICE,NPTS
  103    FORMAT(' CONTOUR:',I5, ' WITH: ',I4,' POINTS STORED.')
      ENDIF

      RETURN
      END
@


1.19
log
@GPL_2010
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.18
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.17
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.16
log
@header
@
text
@d8 24
@


1.15
log
@CMLIMIT.INC
@
text
@d2 13
a14 2
C++*********************************************************************
C
@


1.14
log
@sspush call wrong parameter number
@
text
@d32 1
a39 1
      PARAMETER      (NBUFSIZ = 17008)
@


1.13
log
@*** empty log message ***
@
text
@d68 1
a68 1
         CALL SSPUSH(LUN,DATA,NPTS,ISLICE)
@


1.12
log
@used postscript
@
text
@d25 1
d67 2
a68 3
C        STORE THE CONTOUR IN DOC FILE
C         CALL SSOUT(DATA,NPTS,ISLICE)
         CONTINUE
@


1.11
log
@*** empty log message ***
@
text
@d4 4
a7 1
C      CNSTUFF.FOR 
a8 1
C      LAST UPDATE        8/27/96 al     3/27/92 al      2/04/98 al
d11 1
a11 1
C    PURPOSE:      PLACE CONTOUR FROM CNTRCE IN SSR AND CNT FILE
d13 7
a19 7
C    PARAMETERS:   LUN     CONTOUR FILE UNIT
C                  X,Y     DATA ARRAY
C                  NPTS    NUMBER OF POINTS IN DATA
C                  MULTIZ  LOGICAL FLAG FOR Z SERIES
C                  MAXPTS  THIN LIMIT
C                  IPEN    COLOR FOR CONTOUR
C                  IRTFLG  ERROR FLAG
a21 2
C
C    CALLS:        CNCALC    CSPUSH    SSPUSH
d23 1
a23 2
C    CALL TREE:    PLOT1...CNINT4...CNTUR...CNSCAN...CNTRCE...SSPUSH
C                                                          ...CSPUSH
d25 1
d30 1
a30 9
      INCLUDE   'CONSTG.INC'
CNO_SAVE

C---------------------------------------------------------
       PARAMETER       (KULIAH=20)
       CHARACTER * 4   CLASNM(KULIAH)
       COMMON /SSRECN/ NSEC,NPLAN,NCLAS,NCNT,
     &                 ISEC,IPLAN,ICLAS,ICNT,LUNSS,CLASNM
C---------------------------------------------------------
d32 1
a32 2
      COMMON /UNITS/ LUNC,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT
      COMMON /POLY/  MINPTS
a34 1
      PARAMETER      (NBUFSIZ = 17008)
d37 2
d42 1
a42 1
      LOGICAL        MULTIZ,THINED
a44 1
      IPEN   = IPENT
a50 1
      THINED = .FALSE.
a56 1
        IF (NPTS .LT. N0) THINED = .TRUE.
d58 1
a59 5
C     SET LINE PARAMETERS
      MARK  = 0
      LINTP = 0
      INTEN = 9

d65 4
a68 21
      ELSEIF (MULTIZ) THEN
C..      STORE THE CONTOUR
         ICNT   = ICNT + 1
         CALL SSPUSH(DATA,NPTS,NERR)
         IF (NERR .EQ. 0) THEN
            IF (THINED) THEN 
              WRITE(NOUT,1101) ISEC,ICLAS,ICNT,ZCOO,N0,NPTS
 1101         FORMAT(' CONTOUR',I3,I4,' ',I4,' AT Z:',1PG11.3,
     &        ' WITH: ',I4,' --> ',I4,' POINTS STORED.')
            ELSE
              WRITE(NOUT,1103) ISEC,ICLAS,ICNT,ZCOO,NPTS
 1103         FORMAT(' CONTOUR',I3,I4,' ',I4,' AT Z:',1PG11.3,
     &        ' WITH: ',I4,' POINTS STORED.')
            ENDIF
         ELSE
            WRITE(NOUT,1102) ISEC,ICLAS,ICNT,ZCOO,NPTS
 1102       FORMAT(' *** ERROR STORING CONTOUR',I3,' ',I3,' ',I4,
     &      ' AT Z:',1PG11.3,' WITH: ',I4,' POINTS'//)
            ICNT = ICNT - 1
         ENDIF

d70 2
a71 17
         ISTFLG = 1
         CALL CSPUSH(LUN,DATA,NPTS,NERR,ISTFLG,ICNTR)
         IF (NERR .EQ. 0) THEN
            IF (THINED) THEN
              WRITE(NOUT,101) ICNTR,ZCOO,N0,NPTS
  101         FORMAT(' CONTOUR:',I5,' AT Z:',1PG11.3,
     &        ' WITH: ',I4,' --> ',I4,' POINTS STORED.')
            ELSE
              WRITE(NOUT,103) ICNTR,ZCOO,NPTS
  103         FORMAT(' CONTOUR:',I5,' AT Z:',1PG11.3,
     &        ' WITH: ',I4,' POINTS STORED.')
            ENDIF
         ELSE
            WRITE(NOUT,102) ICNTR,NPTS
  102       FORMAT(' *** ERROR STORING CONTOUR: ',I5,' WITH ',
     &           I4,' POINTS')
         ENDIF
d74 9
@


1.10
log
@minor
@
text
@d36 2
a37 2
       COMMON /SSRECN/ NSEC,NPLAN,NCLAS,NCNT,CLASNM,
     &                 ISEC,IPLAN,ICLAS,ICNT,LUNSS
@


1.9
log
@removed ssrecn file stuff
@
text
@d6 1
a6 1
C      LAST UPDATE        8/27/96 al     3/27/92 al
d34 1
a34 2

       PARAMETER (KULIAH=20)
a37 1

a81 1
         ICONCT = 0
@


1.8
log
@needed npts to replace n passed in emplott common
@
text
@a29 1
      INCLUDE   'SSRECN.INC'
d33 9
a81 1
#ifdef SP_UNIX
d103 1
a103 1
#endif
@


1.7
log
@ sspush  parameters did not match
@
text
@d49 1
a49 1
      DO I2 = 1, N
d55 1
a55 1
      IF (N .GT. MAXPTS) THEN 
d57 1
a57 1
        N0      = N
d60 2
a61 2
        CALL RATHIN(DATA,N,0.0333,RETANG,MAXPTS,MAXTRYS,WORK,IRTFLGR)
        IF (N .LT. N0) THINED = .TRUE.
d69 1
a69 1
      IF (N .LT. MINPTS) THEN
d71 1
a71 1
         WRITE(NOUT,1112) N
d79 1
a79 1
         CALL SSPUSH(DATA,N,NERR)
d82 1
a82 1
              WRITE(NOUT,1101) ISEC,ICLAS,ICNT,ZCOO,N0,N
d86 1
a86 1
              WRITE(NOUT,1103) ISEC,ICLAS,ICNT,ZCOO,N
d91 1
a91 1
            WRITE(NOUT,1102) ISEC,ICLAS,ICNT,ZCOO,N
d99 1
a99 1
         CALL CSPUSH(LUN,DATA,N,NERR,ISTFLG,ICNTR)
d102 1
a102 1
              WRITE(NOUT,101) ICNTR,ZCOO,N0,N
d106 1
a106 1
              WRITE(NOUT,103) ICNTR,ZCOO,N
d111 1
a111 1
            WRITE(NOUT,102) ICNTR,N
@


1.6
log
@used common iobuf to save space
@
text
@d32 1
a33 19
C-------- START OF EM-PLOTT-COMMON-------------------------------------
C     INTEGERS
      COMMON /CONT1/ ICALL, IDIDIT, IDONE, IDX, IDY, ILINE, INTT,
     &               IRCD, ISS, ISTART, ISUM1, ISUM2, ISUM3, IT, IV, 
     &               IXX1, IXX2, IXX3, IX, IY, JSUM1, JSUM2, JSUM3, JT,
     &               LEVEL, LW, M, MF, MI, MT, N, NDIV, NF, NI, NT, NW

C     FLOATING POINT
      COMMON /CONT2/ APDIV, APDIVX, CV, DL, PY, RA, RC, RS, SKALE, THE,
     &               SX, SY, DENSL

C     ARRAYS
      COMMON /CONT3/ INCX(3), IORGX(3), INX(8),
     &               INY(8),  IPT(3,3), IMAP(12), NG(3), NP(3)

      COMMON /CONT4/ CTRI(6),FCTR(6),CTRDEL(6),ICNDSH(6),ICNCEL

C--------END OF EM-PLOTT-COMMON----------------------------------------

a42 1
      DIMENSION      CONLST(2,10)
d50 2
a51 2
        DATA(1,I2) = X(I2)
        DATA(2,I2) = Y(I2)
d79 1
a79 1
         CALL SSPUSH(DATA,N,ICONCT,CONLST,ICNTX,.TRUE.,NERR)
@


1.5
log
@removed EMPLOTT.INC
@
text
@d55 2
a56 1
      PARAMETER      (NSIZE=2000)
d58 3
@


1.4
log
@improved
@
text
@d32 19
a50 1
      INCLUDE   'EMPLOTT.INC'
@


1.3
log
@updated for UNIX only
@
text
@d6 1
a6 1
C      LAST UPDATE        3/27/92 al
a29 1
#ifdef SP_UNIX
a32 4
#else
      INCLUDE   'COMMON1:CONSTG.INC'
      INCLUDE   'COMMON1:EMPLOTT.INC'
#endif
d35 1
a35 1
      COMMON /POLY/  HOLES,REVERSE,MINPTS
d41 1
a41 1
      LOGICAL        MULTIZ,THINED,HOLES,REVERSE
d53 5
a57 3
C       TOO MANY POINTS ON THIS CONTOUR, THIN IT
        N0 = N
        CALL RATHIN(DATA,N,0.0333,MAXPTS,WORK,IRTFLGR)
d110 1
a110 1
     &      I4,' POINTS')
@


1.2
log
@removed vax version
@
text
@a34 1
      INCLUDE   'COMMON1:SSRECN.INC'
d74 1
d96 1
a96 1

@


1.1
log
@cpp_lines_added
@
text
@a0 17
 
 
#ifdef SP_VMS 
 
C   THIS ROUTINE SPECIFIC TO UNIX SPIDER AND IS NOT 
C       USED AT VAX SITES
 
       SUBROUTINE cnstuff
 
       COMMON /UNITS/LUNC,NIN,NOUT
 
       WRITE(NOUT,*) 'DUMMY CALL: cnstuff'
       RETURN
       END
 
#else
 
a1 2
C UNIX SPECIFIC !!
C
d32 2
a35 4
#endif
#ifdef SP_UNIX
      INCLUDE   'CONSTG.INC'
#else
a36 4
#endif
#ifdef SP_UNIX
      INCLUDE   'EMPLOTT.INC'
#else
a118 5


 
#endif
 
@
