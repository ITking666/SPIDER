head	1.16;
access;
symbols
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.14
	pre_opfiles:1.14
	src:1.14
	best-code:1.14
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.12
	prec_CA:1.10
	noindx:1.10
	Bproc:1.10
	oct21:1.9
	last77:1.9;
locks; strict;
comment	@c @;


1.16
date	2010.06.24.13.26.12;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2008.12.02.19.44.27;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.20.48.57;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.18.39.21;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2004.03.11.16.20.47;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2004.03.11.14.15.53;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.12.07.15.52.45;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.03.19.20.14.07;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	99.03.19.19.50.17;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	98.03.19.21.26.24;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	98.03.19.19.29.23;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	98.02.26.19.28.32;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.10.10.17.47.35;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	95.10.10.16.05.55;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.07.22.20.29.27;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.13;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.16
log
@GPL_2010
@
text
@
C ++********************************************************************
C                                                                      *
C  MR2TO3D                                                              *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C   MR2TO3D(P3D, PRJ, ANGLE,PTACTIVE,NUMPTS,NTVW,NTPT)                                                                    *
C                                                                      *
C  PURPOSE:                                                            *
C       CALCULATES, USING LINEAR REGRESSION AND ASSUMING A SINGLE
C       TILT AXIS THROUGH THE Y AXIS, THE X, Y, AND Z COORDS OF THE
C       MARKERS.
C
C  PARAMETERS:                                                         *
C  INPUT:
C     PRJ(2,LS,LV)   = COORDS OF MARKER IN PROJECTIONS
C     ANGLE(3,LV)    = ANGLES TILTED ABOUT Z,Y,Z
C     NUMPTS(LV)     = MAX INDEX OF POINT USED IN EACH VIEW
C     PTACTIVE(LS,LV)= BOOLEAN ARRAY HOLDING WHETHER POINT IS IN VIEW.
C     NTVW           = TOTAL NUMBER OF VIEWS
C     NTPT           = TOTAL NUMBER OF MARKERS
C  OUTPUT:
C     P3D(3,LS)      = COORDS OF POINTS IN 3-D SPACE                   
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

      SUBROUTINE MR2TO3D(P3D, PRJ, ANGLE, PTACTIVE,NUMPTS,NTVW,NTPT)

      PARAMETER (LV=300)
      PARAMETER (LS=256)

      LOGICAL     PTACTIVE(LS,LV)
      INTEGER     NUMPTS(LV)

      DIMENSION   P3D(3,LS)
      DIMENSION   PRJ(2,LS,LV), ANGLE(3,LV)
      DIMENSION   XPR(LV), YPR(LV)

C     PREPARE ARRAYS FOR REGRESSION. 
      DO I=1,NTPT
        YSUM  = 0.0
	A2    = 0.0
	B2    = 0.0
	AB    = 0.0
	AP    = 0.0
	BP    = 0.0
        NYSUM = 0
        NDATA = 0

        DO  J=1,NTVW
          IF (PTACTIVE(I,J)) THEN
             YSUM  = YSUM + PRJ(2,I,J)
             NYSUM = NYSUM + 1
             A = COS(ANGLE(2,J))
             B = SIN(ANGLE(2,J))
             P = PRJ(1,I,J)

C            SOLVE SYSTEM OF EQUATIONS:
C            X*COS(THETA(I)) - Z*SIN(THETA(I)) = P(I)
C            THAT IS:
C            [ X*COS(THETA(I)) - Z*SIN(THETA(I)) - P(I)]^2 ->MIN

             A2 = A2 + A * A
             B2 = B2 + B * B
             AB = AB + A * B
             AP = AP + A * P
             BP = BP + B * P

             NDATA = NDATA + 1

           ENDIF
	ENDDO

	IF (NDATA.NE.0)  THEN
           P3D(1,I) = (AB * BP - B2 * AP) / (AB*AB-A2*B2)
           P3D(3,I) = (A2 * BP - AB * AP) / (AB*AB-A2*B2)
           P3D(2,I) = YSUM / NYSUM
	ELSE
	   DO J=1,3
	      P3D(J,I) = 0.0
	   ENDDO
	ENDIF
      ENDDO

      END
@


1.15
log
@mk xypts in 2 parameters mralign bug
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@GPL License fixed
@
text
@d4 1
a4 1
C                                                                      *
d32 1
a32 1
C                                                                      *
d35 3
a37 16
C                                                                      *
C **************************************************************
C CALCULATES, USING LINEAR REGRESSION AND ASSUMING A SINGLE
C TILT AXIS THROUGH THE Y AXIS, THE X, Y, AND Z COORDS OF THE
C MARKERS.
C INPUT:
C     PRJ(2,LS,LV)= COORDS OF MARKER IN PROJECTIONS
C     ANGLE(3,LV)= ANGLES TILTED ABOUT Z,Y,Z
C COMMON INPUT:
C     NUMPT(LV)= MAX INDEX OF POINT USED IN EACH VIEW
C     PTACTIVE(LS,LV)= BOOLEAN ARRAY HOLDING WHETHER A POINT IS IN
C           VIEW OR NOT.
C     NTVW= TOTAL NUMBER OF VIEWS
C     NTPT= TOTAL NUMBER OF MARKERS
C OUTPUT:
C     P3D(3,LS)= COORDS OF POINTS IN 3-D SPACE
d40 9
d53 1
a53 1
      SUBROUTINE MR2TO3D(P3D, PRJ, ANGLE)
d57 3
a59 2
      LOGICAL*1   PTACTIVE(LS,LV),PARAMQ(4)
      COMMON /GENERAL/PTACTIVE,NUMPTS(LV),NTVW,NTPT,CIR(2),PARAMQ
d62 1
a62 1
      DIMENSION   PRJ(2,LS,LV), ANGLE(3,LV), NUMPT(LV)
d67 9
a75 8
        YSUM=0.0
	A2=0.0
	B2=0.0
	AB=0.0
	AP=0.0
	BP=0.0
        NYSUM=0
        NDATA=0
d78 20
a97 26
            YSUM=YSUM+PRJ(2,I,J)
            NYSUM=NYSUM+1
		A=COS(ANGLE(2,J))
		B=SIN(ANGLE(2,J))
		P=PRJ(1,I,J)
C Solve system of equations:
C  x*cos(theta(i)) - z*sin(theta(i)) = p(i)
C that is:
C  [ x*cos(theta(i)) - z*sin(theta(i)) - p(i)]^2 ->min
C
		A2=A2+A*A
		B2=B2+B*B
		AB=AB+A*B
		AP=AP+A*P
		BP=BP+B*P
Cc            IF (ABS(SIN(ANGLE(2,J))) .GT. 0.001 ) THEN
              NDATA=NDATA+1
Cc              XPR(NDATA)= 1/TAN(ANGLE(2,J))
Cc              YPR(NDATA)= PRJ(1,I,J)/SIN(ANGLE(2,J))
c the following version worked:
C            IF (ABS(COS(ANGLE(2,J))) .GT. 0.001 ) THEN
C              NDATA=NDATA+1
C              XPR(NDATA)=-TAN(ANGLE(2,J))
C              YPR(NDATA)= PRJ(1,I,J)/COS(ANGLE(2,J))
C            ENDIF
          ENDIF
d99 5
a103 9
	IF(NDATA.NE.0)  THEN
C        X=0
C        ZN=0
C        CALL MRRLINE(XPR,YPR,NDATA,LV,ZN,X,ERZ,ERX,STER)
c        P3D(1,I)=X
c        P3D(3,I)=-ZN
        P3D(1,I)=(AB*BP-B2*AP)/(AB*AB-A2*B2)
        P3D(3,I)=(A2*BP-AB*AP)/(AB*AB-A2*B2)
        P3D(2,I)=YSUM/NYSUM
d105 3
a107 3
	  DO    j=1,3
	    P3D(j,i)=0.0
	  ENDDO
d109 3
a111 2
	ENDDO
	END
@


1.13
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.12
log
@MAXKEY, cosmetic
@
text
@d8 24
@


1.11
log
@ls-->256
@
text
@a36 1
C        0         2         3         4         5         6         7 *
d42 2
a43 4
        PARAMETER (LV=300)
        PARAMETER (LS=256)
        PARAMETER (MAXREG=7)
        PARAMETER (MAXKEY=100)
d51 1
a51 1
C PREPARE ARRAYS FOR REGRESSION. 
@


1.10
log
@header
@
text
@d44 1
a44 1
        PARAMETER (LS=100)
@


1.9
log
@*** empty log message ***
@
text
@a0 1
      SUBROUTINE MR2TO3D(P3D, PRJ, ANGLE)
d2 17
d34 6
d41 1
d53 1
a53 1
C
@


1.8
log
@*** empty log message ***
@
text
@d78 1
@


1.7
log
@correct
@
text
@d1 1
a1 1
      SUBROUTINE MR2TO3D(P3D, PRJ, ANGLE, ERRX, ERRY, ERRZ)
a23 4
        PARAMETER (MAXLOOP=999)
        REAL MAXPER
        PARAMETER (MAXPER=1.0e-6)

d30 1
a30 6
CNO_SAVE
c
      ERRX=0.0
      ERRY=0.0
      ERRZ=0.0
c
d70 1
a70 6
	if(ndata.eq.0)  then
	  do    j=1,3
	    p3d(j,i)=0.0
	  enddo
	  GOTO  100
	endif
d78 5
a82 12
        YNSUM=NYSUM
        YAVE=YSUM/YNSUM
        P3D(2,I)=YAVE
        SSQY=0.0
        DO  K=1,NTVW
         IF(PTACTIVE(I,K)) SSQY=SSQY+((PRJ(2,I,K)-YAVE)**2)/NYSUM
	ENDDO
C
        ERRY=ERRY+SQRT(SSQY)
        ERRZ=ERRZ+ERZ
        ERRX=ERRX+ERX
100	CONTINUE
@


1.6
log
@fixed
@
text
@d41 1
a41 1
      DO 100 I=1,NTPT
d83 1
a83 1
	  goto  100
d90 2
a91 4
	ZN=(B2*AP+AB*BP)/(A2*B2-AB*AB)
	X=(A2*BP+AB*AP)/(A2*B2-AB*AB)
        P3D(1,I)=zn
        P3D(3,I)=-x
d103 3
a105 2
 100  CONTINUE
      END
@


1.5
log
@new version.
@
text
@d68 1
a68 1
Cc              NDATA=NDATA+1
@


1.4
log
@*** empty log message ***
@
text
@d42 6
a47 1
        YSUM=0
d54 23
a76 9
c            IF (ABS(SIN(ANGLE(2,J))) .GT. 0.001 ) THEN
c              NDATA=NDATA+1
c              XPR(NDATA)= 1/TAN(ANGLE(2,J))
c              YPR(NDATA)= PRJ(1,I,J)/SIN(ANGLE(2,J))
            IF (ABS(COS(ANGLE(2,J))) .GT. 0.001 ) THEN
              NDATA=NDATA+1
              XPR(NDATA)=-TAN(ANGLE(2,J))
              YPR(NDATA)= PRJ(1,I,J)/COS(ANGLE(2,J))
            ENDIF
d85 3
a87 3
        X=0
        ZN=0
        CALL MRRLINE(XPR,YPR,NDATA,LV,ZN,X,ERZ,ERX,STER)
d90 2
d93 1
a93 1
        P3D(3,I)=x
@


1.3
log
@nosave
@
text
@d45 1
a45 1
        DO 110 J=1,NTVW
d59 1
a59 1
 110    CONTINUE
d61 3
a63 2
	  do  111  j=1,3
111	  p3d(j,i)=0.0
d77 3
a79 2
        DO 300 K=1,NTVW
300     IF(PTACTIVE(I,K)) SSQY=SSQY+((PRJ(2,I,K)-YAVE)**2)/NYSUM
d84 1
a84 1
100   CONTINUE
@


1.2
log
@LV set to 300 (number of projections)
@
text
@d34 1
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
        PARAMETER (LV=100)
@
