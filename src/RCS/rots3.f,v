head	1.14;
access;
symbols
	healthdept_2018:1.14
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.9
	Bproc:1.8
	oct21:1.8
	last77:1.5;
locks; strict;
comment	@c @;


1.14
date	2018.10.03.14.34.15;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.26.50;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.31.01;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.18.22.04;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.09.17.16.18.54;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.06.14.34.04;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.10.15.14.16.53;	author bimal;	state Exp;
branches;
next	1.7;

1.7
date	99.10.14.18.27.20;	author bimal;	state Exp;
branches;
next	1.6;

1.6
date	99.10.08.17.26.20;	author bimal;	state Exp;
branches;
next	1.5;

1.5
date	97.10.14.21.19.41;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.02.16.18.41.55;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.02.16.15.41.53;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.02.28.20.44.10;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.30;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.14
log
@email_health_dept
@
text
@C++*********************************************************************
C
C $$ ROTS3.FOR
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C
C IMAGE_PROCESSING_ROUTINE 
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

         SUBROUTINE ROTS3(LUN2,Q1,KLX,KNX,KLY,KNY,KLZ,KNZ,PSI,THETA,PHI)

         DIMENSION  Q1(KLX:KNX,KLY:KNY,KLZ:KNZ),Q2(KLX:KNX)
         DIMENSION  IM(3)
         DOUBLE PRECISION  AV,RM(3,3),QR(3),DX,DY,DZ

C        EQUIVALENCE  (IM(1),IX),(IM(2),IY),(IM(3),IZ)

         LEX=KNX-KLX+1

         IF (THETA.EQ.0.0.AND.PHI.EQ.0.0.AND.PSI.EQ.0.0)  THEN
            IBUF=0
            DO IZ=KLZ,KNZ
               DO IY=KLY,KNY
                  IBUF = IBUF + 1
                  CALL WRTLIN(LUN2,Q1(KLX,IY,IZ),LEX,IBUF)
               ENDDO
            ENDDO
         RETURN
         ENDIF

C     AV=0.0
C     DO  1  IZ=KLZ,KNZ
C     DO  1  IY=KLY,KNY
C     DO  1  IX=KLX,KNX
C1    AV=AV+Q1(IX,IY,IZ)
C     AV=AV/FLOAT(KNX-KLX+1)/FLOAT(KNY-KLY+1)/FLOAT(KNZ-KLZ+1)

        CALL BLDR(RM,PSI,THETA,PHI)

         IBUF=0
         DO    IZ=KLZ,KNZ
         DO    IY=KLY,KNY

        QR(1)=RM(1,1)*KLX+RM(2,1)*IY+RM(3,1)*IZ
        QR(2)=RM(1,2)*KLX+RM(2,2)*IY+RM(3,2)*IZ
        QR(3)=RM(1,3)*KLX+RM(2,3)*IY+RM(3,3)*IZ

         DO     IX=KLX,KNX

C         DO  3  I3=1,3
C         QR(I3)=0.0
C         DO  3  I2=1,3
C3        QR(I3)=QR(I3)+RM(I2,I3)*IM(I2)

         IOX=QR(1)+FLOAT(1-KLX)
         DX=QR(1)+FLOAT(1-KLX)-IOX
         DX=DMAX1(DX,1.0D-5)
         IOX=IOX+KLX-1
         IOY=QR(2)+FLOAT(1-KLY)
         DY=QR(2)+FLOAT(1-KLY)-IOY
         DY=DMAX1(DY,1.0D-5)
         IOY=IOY+KLY-1
         IOZ=QR(3)+FLOAT(1-KLZ)
         DZ=QR(3)+FLOAT(1-KLZ)-IOZ
         DZ=DMAX1(DZ,1.0D-5)
         IOZ=IOZ+KLZ-1

         IF(IOX.GE.KLX.AND.IOX.LT.KNX)  THEN
         IF(IOY.GE.KLY.AND.IOY.LT.KNY)  THEN
         IF(IOZ.GE.KLZ.AND.IOZ.LT.KNZ)  THEN

C     Q2(IX)=
C     &  +(1-DX)*(1-DY)*(1-DZ)*Q1(IOX,IOY,IOZ)
C     &  +   DX *(1-DY)*(1-DZ)*Q1(IOX+1,IOY,IOZ)
C     &  +(1-DX)*   DY *(1-DZ)*Q1(IOX,IOY+1,IOZ)
C     &  +(1-DX)*(1-DY)*   DZ *Q1(IOX,IOY,IOZ+1)
C     &  +   DX *   DY *(1-DZ)*Q1(IOX+1,IOY+1,IOZ)
C     &  +   DX *(1-DY)*   DZ *Q1(IOX+1,IOY,IOZ+1)
C     &  +(1-DX)*   DY *   DZ *Q1(IOX,IOY+1,IOZ+1)
C     &  +   DX *   DY *   DZ *Q1(IOX+1,IOY+1,IOZ+1)
C
C faster version :

         A1 = Q1(IOX,IOY,IOZ)
         A2 = Q1(IOX+1,IOY,IOZ) - A1
         A3 = Q1(IOX,IOY+1,IOZ) - A1
         A4 = Q1(IOX,IOY,IOZ+1) - A1
         A5 = -A2 - Q1(IOX,IOY+1,IOZ) + Q1(IOX+1,IOY+1,IOZ)
         A6 = -A2 - Q1(IOX,IOY,IOZ+1) + Q1(IOX+1,IOY,IOZ+1)
         A7 = -A3 - Q1(IOX,IOY,IOZ+1) + Q1(IOX,IOY+1,IOZ+1)
         A8 = -A5 + Q1(IOX,IOY,IOZ+1) - Q1(IOX+1,IOY,IOZ+1)
     &   - Q1(IOX,IOY+1,IOZ+1) + Q1(IOX+1,IOY+1,IOZ+1)
         Q2(IX)= A1 + DZ*(A4 + A6*DX + (A7 + A8*DX)*DY) + A3*DY
     &   + DX*(A2 + A5*DY)

         GOTO  5
         ENDIF
         ENDIF
         ENDIF

C        Q2(IX)=AV
         Q2(IX)=Q1(IX,IY,IZ)
5        CONTINUE
         QR(1) = QR(1) + RM(1,1)
         QR(2) = QR(2) + RM(1,2)
         QR(3) = QR(3) + RM(1,3)
         ENDDO
         IBUF=IBUF+1
         CALL  WRTLIN(LUN2,Q2,LEX,IBUF)
         ENDDO
         ENDDO

         END



@


1.13
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.12
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a29 1
C **************************************************************************
a34 1
C--************************************************************************
@


1.10
log
@pawels changes
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d46 1
@


1.9
log
@cosmetic
@
text
@d3 1
a3 1
C ROTS3.F
d20 1
a20 2
         SUBROUTINE  ROTS3
     &         (LUN2,Q1,KLX,KNX,KLY,KNY,KLZ,KNZ,PSI,THETA,PHI)
d25 1
d29 2
a30 1
         IF(THETA.EQ.0.0.AND.PHI.EQ.0.0.AND.PSI.EQ.0.0)  THEN
d32 4
a35 4
            DO    IZ=KLZ,KNZ
               DO    IY=KLY,KNY
                  IBUF=IBUF+1
                  CALL  WRTLIN(LUN2,Q1(KLX,IY,IZ),LEX,IBUF)
d38 1
a38 1
            RETURN
d41 6
d60 4
d95 7
a101 11
         A2 = Q1(IOX+1,IOY,IOZ) - Q1(IOX,IOY,IOZ)
         A3 = Q1(IOX,IOY+1,IOZ) - Q1(IOX,IOY,IOZ)
         A4 = Q1(IOX,IOY,IOZ+1) - Q1(IOX,IOY,IOZ)
         A5 = Q1(IOX,IOY,IOZ) - Q1(IOX+1,IOY,IOZ) - Q1(IOX,IOY+1,IOZ)
     &   + Q1(IOX+1,IOY+1,IOZ)
         A6 = Q1(IOX,IOY,IOZ) - Q1(IOX+1,IOY,IOZ) - Q1(IOX,IOY,IOZ+1)
     &   + Q1(IOX+1,IOY,IOZ+1)
         A7 = Q1(IOX,IOY,IOZ) - Q1(IOX,IOY+1,IOZ) - Q1(IOX,IOY,IOZ+1)
     &   + Q1(IOX,IOY+1,IOZ+1)
         A8 = Q1(IOX+1,IOY,IOZ) + Q1(IOX,IOY+1,IOZ)+ Q1(IOX,IOY,IOZ+1)
     &   - Q1(IOX,IOY,IOZ)- Q1(IOX+1,IOY+1,IOZ) - Q1(IOX+1,IOY,IOZ+1)
d105 1
a105 1
C**********************************************************
d122 1
a123 1

@


1.8
log
@Edited header to indicate image processing routine
@
text
@d3 1
a3 1
C $$ ROTS3.FOR
d19 1
a19 3
C
C $$ ROTS3.FOR
C
d21 2
a22 1
     &   (LUN2,Q1,KLX,KNX,KLY,KNY,KLZ,KNZ,PSI,THETA,PHI)
d26 2
a27 1
C         EQUIVALENCE  (IM(1),IX),(IM(2),IY),(IM(3),IZ)
d30 8
a37 8
         IBUF=0
         DO    IZ=KLZ,KNZ
         DO    IY=KLY,KNY
         IBUF=IBUF+1
         CALL  WRTLIN(LUN2,Q1(KLX,IY,IZ),LEX,IBUF)
         ENDDO
         ENDDO
         RETURN
d39 2
a40 9
C...
C     AV=0.0
C     DO  1  IZ=KLZ,KNZ
C     DO  1  IY=KLY,KNY
C     DO  1  IX=KLX,KNX
C1    AV=AV+Q1(IX,IY,IZ)
C     AV=AV/FLOAT(KNX-KLX+1)/FLOAT(KNY-KLY+1)/FLOAT(KNZ-KLZ+1)
C...
C
d42 1
a42 1
C
d46 1
a46 1
C
d50 1
a50 1
C
d52 2
a53 7
C
C         DO  3  I3=1,3
C         QR(I3)=0.0
C         DO  3  I2=1,3
C3        QR(I3)=QR(I3)+RM(I2,I3)*IM(I2)
C
C
d66 1
a66 1
C
d70 1
a70 2
C
C
d82 1
a82 1
C
d103 2
a104 2
C...
C     Q2(IX)=AV
d116 1
a116 1
C
@


1.7
log
@Edited header to indicate image processing routine and got rid of MATMUL
function since it was slow
@
text
@d16 1
a16 1
C IMAGE PROCESSING ROUTINE 
@


1.6
log
@Introduced transpose and matmul
@
text
@d16 1
a16 1
C
d26 1
a26 1
         DOUBLE PRECISION  AV,RM(3,3),RMT(3,3),QR(3),DX,DY,DZ
a50 1
         RMT = TRANSPOSE(RM)
d54 4
a64 8
C        QR(1)=RM(1,1)*IX+RM(2,1)*IY+RM(3,1)*IZ
C        QR(2)=RM(1,2)*IX+RM(2,2)*IY+RM(3,2)*IZ
C        QR(3)=RM(1,3)*IX+RM(2,3)*IY+RM(3,3)*IZ
C
         IM(1) = IX
         IM(2) = IY
         IM(3) = IZ
         QR=MATMUL((RMT),IM)
d120 3
d129 1
a129 2


@


1.5
log
@*** empty log message ***
@
text
@d12 1
a12 1
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
d23 1
a23 1
     &   (LUN2,Q1,Q2,KLX,KNX,KLY,KNY,KLZ,KNZ,PSI,THETA,PHI)
d25 2
a26 2
C         DIMENSION  IM(3)
         DOUBLE PRECISION  AV,RM(3,3),QR(3),DX,DY,DZ
a27 2
CNO_SAVE
C
d35 2
a36 2
	 ENDDO
	 ENDDO
d48 1
a48 1
	CALL BLDR(RM,PSI,THETA,PHI)
d51 1
d55 1
a55 1
         DO  5  IX=KLX,KNX
d62 8
a69 3
        QR(1)=RM(1,1)*IX+RM(2,1)*IY+RM(3,1)*IZ
        QR(2)=RM(1,2)*IX+RM(2,2)*IY+RM(3,2)*IZ
        QR(3)=RM(1,3)*IX+RM(2,3)*IY+RM(3,3)*IZ
d125 1
d128 2
a129 2
	 ENDDO
	 ENDDO
d131 5
@


1.4
log
@obsolete IM removed
@
text
@d33 2
a34 2
         DO  8  IZ=KLZ,KNZ
         DO  8  IY=KLY,KNY
d36 3
a38 1
8        CALL  WRTLIN(LUN2,Q1(KLX,IY,IZ),LEX,IBUF)
d53 2
a54 2
         DO  7  IZ=KLZ,KNZ
         DO  7  IY=KLY,KNY
d122 3
a124 1
7        CALL  WRTLIN(LUN2,Q2,LEX,IBUF)
@


1.3
log
@bldr called to build rotation matrix
@
text
@d25 1
a25 1
         DIMENSION  IM(3)
@


1.2
log
@nosave, equivalence removed
@
text
@d23 1
a23 1
     &   (LUN2,Q1,Q2,KLX,KNX,KLY,KNY,KLZ,KNZ,THETA,PHI,PSI)
d26 1
a26 1
         DOUBLE PRECISION  AV,RM(3,3),QR(3),THETA,PHI,PSI,DX,DY,DZ
d48 1
a48 9
         RM(1,1)=DCOS(THETA)*DCOS(PHI)*DCOS(PSI)-DSIN(PHI)*DSIN(PSI)
         RM(2,1)=-DCOS(THETA)*DCOS(PHI)*DSIN(PSI)-DSIN(PHI)*DCOS(PSI)
         RM(3,1)=DSIN(THETA)*DCOS(PHI)
         RM(1,2)=DCOS(THETA)*DSIN(PHI)*DCOS(PSI)+DCOS(PHI)*DSIN(PSI)
         RM(2,2)=-DCOS(THETA)*DSIN(PHI)*DSIN(PSI)+DCOS(PHI)*DCOS(PSI)
         RM(3,2)=DSIN(THETA)*DSIN(PHI)
         RM(1,3)=-DSIN(THETA)*DCOS(PSI)
         RM(2,3)=DSIN(THETA)*DSIN(PSI)
         RM(3,3)=DCOS(THETA)
@


1.1
log
@Initial revision
@
text
@d27 2
a28 1
         EQUIVALENCE  (IM(1),IX),(IM(2),IY),(IM(3),IZ)
d64 8
a71 4
         DO  3  I3=1,3
         QR(I3)=0.0
         DO  3  I2=1,3
3        QR(I3)=QR(I3)+RM(I2,I3)*IM(I2)
@
