head	1.19;
access;
symbols
	pre_getangas:1.19
	GPL2010:1.19
	pre_GPL2010:1.18
	pre_var_equation:1.17
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.14
	prec_CA:1.12
	noindx:1.10
	Bproc:1.9
	oct21:1.6
	last77:1.4;
locks; strict;
comment	@c @;


1.19
date	2010.06.24.13.26.39;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2009.08.10.16.25.34;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2009.06.19.17.48.30;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2009.05.29.12.48.15;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.21.07.51;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2004.09.30.16.40.20;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.10.30.20.16.08;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.09.04.13.27.07;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.07.08.16.18.21;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.12.19.19.50.18;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.17.16.48.28;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.08.08.19.07.29;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.08.08.18.30.13;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.06.23.18.21.53;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.06.17.19.11.58;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	97.09.10.19.36.44;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.09.09.15.55.24;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	97.02.28.13.59.56;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	97.02.19.17.17.38;	author leith;	state Exp;
branches;
next	;


desc
@new
@


1.19
log
@GPL_2010
@
text
@
C++*********************************************************************
C
C RDDOCN.F     ADAPTED FROM RDDOCA2Q.F          FEB 1997 ARDEAN LEITH
C              OPENDOC PARAMETERS               DEC 2000 ARDEAN LEITH
C              INCORE OPENDOC                   JUL 2003 ARDEAN LEITH
C              ADDED 'UD M'                     MAY 2009 ARDEAN LEITH
C              ADDED KEYUSED RETURN             AUG 2009 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   RDDOCN(DOCNAM,NDOC,MAXMIN)
C
C   PURPOSE:  FINDS NUMBER OF COLUMNS, HIGHEST KEY, & NUMBER OF KEYS 
C             IN DOC A FILE  OR
C             FINDS MAX/MIN VALUE IN SPECIFED COLUMN OF DOC FILE. CAN
C             PLACE THESE VALUES IN REGISTERS GIVEN ON COMMAND LINE
C C 
C   PARAMETERS:  DOCNAM    DOC FILE                            (SENT)
C                NDOC      LUN FOR DOC FILE                    (SENT)
C   PARAMETERS:  NDOC      LUN FOR DOC FILE                    (SENT)
C
C   USAGE:       UD N   [maxkeys],[maxcols],[nkeys]
C                UD MAX [maxval],[minval]
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

	SUBROUTINE RDDOCN(DOCNAM,NDOC,MAXMIN)

	INCLUDE 'CMBLOCK.INC' 

        CHARACTER(LEN=*)                :: DOCNAM
        REAL, ALLOCATABLE, DIMENSION(:) :: PLIST
        LOGICAL                         :: NEWFILE,MAXMIN,EMPTY

        CALL SET_MPI(ICOMM,MYPID,IRTFLG) ! SETS ICOMM AND MYMPID

C       GET DOC FILE NAME
        CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,NICDOC,.FALSE.,'',
     &               .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
  
        IF (MAXMIN) THEN
C          FIND MAX/MIN VALUE IN SPECIFED COLUMN OF DOC FILE.

           ICOL  = 0
           CALL RDPRI1S(ICOL,NOT_USED,
     &            'REGISTER COLUMN TO BE SEARCHED (0 = KEY)',IRTFLG)
           IF (IRTFLG .NE. 0)  GOTO 9998
           IF (ICOL .LT. 0) THEN
              CALL ERRT(102,'ILLEGAL COLUMN',ICOL)
              GOTO 9999
           ENDIF

           IW = MAX(ICOL,1)
           ALLOCATE(PLIST(IW),STAT=IRTFLG)
           IF (IRTFLG .NE. 0) THEN
              CALL ERRT(46,'PLIST',IW)
              GOTO 9999
           ENDIF

           VMIN   = HUGE(VMIN)
           VMAX   = -VMIN
           EMPTY  = .TRUE.

           !write(6,*) ' ikeygot,icount,plist(1),irtflg '
 
           DO        ! ENDLESS LOOP
              CALL LUNDOCREDNXT(NICDOC,IKEYGOT,PLIST,IW,
     &                          IGO,ICOUNT,IRTFLG)
              !write(6,*) ikeygot,icount,plist(1),irtflg
 
              IF (IRTFLG .EQ. 1)  THEN
                 CALL ERRT(101,'ERROR READING DOC. FILE',NE)
                 GOTO 9998

              ELSEIF (IRTFLG .EQ. 2 .AND. EMPTY) THEN
C                END OF DOC FILE AND NO KEYS FOUND
                 CALL ERRT(101,'DID NOT FIND ANY KEYS IN DOC. FILE',NE)
                 GOTO 9998

              ELSEIF (IRTFLG .NE. 0) THEN
C                HAVE FINISHED ALL KEYS IN DOC FILE
                 EXIT

              ELSEIF (ICOUNT .LT. ICOL) THEN
                 CALL ERRT(102,'REGISTER MISSING IN DOC. FILE',ICOL)
                 GOTO 9998
              ENDIF
              EMPTY  = .FALSE.

              IF (ICOL .GT. 0) THEN
C                WANT MAX/MIN VALUE IN REGISTER
                 VMAX = MAX(PLIST(ICOL),VMAX)
                 VMIN = MIN(PLIST(ICOL),VMIN)
              ELSE
C                WANT MAX/MIN KEY
                 VMAX = MAX(FLOAT(IKEYGOT),VMAX)
                 VMIN = MIN(FLOAT(IKEYGOT),VMIN)
              ENDIF
           ENDDO

C          SET OPERATION LINE REGISTERS TO VMIN & VMAX
           CALL REG_SET_NSEL(1,2, VMAX,VMIN, 0.0,0.0,0.0, IRTFLG)

           IF (MYPID .LE. 0) THEN
              WRITE(NOUT,*) ' '
              WRITE(NOUT,90) ICOL,VMAX,VMIN
90            FORMAT('  IN COLUMN: ',I7,
     &                '  MAXIMUM=', G12.5,'  MINIMUM=', G12.5,/)
           ENDIF

9998       IF (ALLOCATED(PLIST)) DEALLOCATE (PLIST)
        ELSE
C          FIND NUMBER OF COLUMNS AND HIGHEST KEY IN DOC A FILE.
           CALL LUNDOCINFO(NICDOC,MAXKEYS,MAXCOLS,KEYUSED,.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9999

C          SET OPERATION LINE REGISTERS TO MAXKEYS, MAXCOLS, & KEYUSED
           CALL REG_SET_NSEL(1,3,FLOAT(MAXKEYS),FLOAT(MAXCOLS),
     &                        FLOAT(KEYUSED),0.0,0.0,IRTFLG)

           IF (MYPID .LE. 0) WRITE(NOUT,*) ' '
        ENDIF

9999    IF (MYPID .LE. 0) CLOSE(NDOC)
	END

@


1.18
log
@added row conter
@
text
@d11 3
a13 3
C=* This file is part of:                                              * 
C=* SPIDER - Modular Image Processing System.   Author: J. FRANK       *
C=* Copyright 1985-2009  Health Research Inc.                          *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 1
C=* along with this program. If not, see <http://www.gnu.org/licenses> *                      *
@


1.17
log
@key 0 bug
@
text
@d8 1
a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d28 1
a28 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
d34 2
a35 1
C   PURPOSE:  FINDS NUMBER OF COLUMNS AND KEYS IN DOC A FILE OR
d38 1
a38 1
C 
d43 1
a43 1
C   USAGE:       UD N   [maxkeys],[maxcols]
d140 3
a142 3
C          SET OPERATION LINE REGISTERS TO MAXKEYS & MAXCOLS
           CALL REG_SET_NSEL(1,2,FLOAT(MAXKEYS),FLOAT(MAXCOLS),
     &                        0.0,0.0,0.0,IRTFLG)
@


1.16
log
@UD MAX
@
text
@d77 2
a78 1
           ALLOCATE(PLIST(ICOL),STAT=IRTFLG)
d80 1
a80 1
              CALL ERRT(46,'PLIST',ICOL)
d91 1
a91 1
              CALL LUNDOCREDNXT(NICDOC,IKEYGOT,PLIST,ICOL,
@


1.15
log
@GPL License fixed
@
text
@d4 4
a7 4
C RDDOCN.F               ADAPTED FROM RDDOCA2Q.F FEB 97 BY ArDean Leith
C                        OPENDOC PARAMETERS       DEC 2000 ARDEAN LEITH
C                        INCORE OPENDOC           JUL 2003 ARDEAN LEITH
C
d10 1
a10 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d34 1
a34 1
C   RDDOCN(DOCNAM,NDOC)
d36 7
a42 5
C   PURPOSE:  FINDS NUMBER OF COLUMNS AND KEYS IN DOC A FILE. CAN
C             SET THESE VALUES IN REGISTERS GIVEN ON COMMAND LINE
C   
C   PARAMETERS:   DOCNAM    FILE NAME                   (SENT)
C                 NDOC      LUN FOR DOC FILE            (SENT)
d44 2
a45 1
C   USAGE:        UD N,X11,X12
d47 2
a48 1
C--*******************************************************************
d50 1
a50 1
	SUBROUTINE RDDOCN(DOCNAM,NDOC)
d54 3
a56 1
        CHARACTER(LEN=*) :: DOCNAM
d58 1
a58 10
#ifdef USE_MPI
        include 'mpif.h' 
        INTEGER MYPID, COMM, MPIERR
c                  
        COMM   = MPI_COMM_WORLD 
        MPIERR = 0   
        CALL MPI_COMM_RANK(COMM, MYPID, MPIERR) 
#else
        MYPID = -1
#endif
d60 2
a61 2
C       FIND MAXKEYS BY READING DOC FILE TO GET MAX KEY NUMBER
        CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,NICDOC,.FALSE.,' ',
d64 79
d144 2
a145 9
        CALL LUNDOCINFO(NICDOC,MAXKEYS,MAXCOLS,KEYUSED,.TRUE.,IRTFLG)
        IF (MYPID .LE. 0) CLOSE(NDOC)
        IF (IRTFLG .NE. 0) RETURN

C       SET FIRST REGISTER TO MAXKEYS & MAXCOLS
        CALL REG_SET_NSEL(1,2,FLOAT(MAXKEYS),FLOAT(MAXCOLS),
     &                        0.0, 0.0 ,0.0,IRTFLG)

        IF (MYPID .LE. 0) WRITE(NOUT,*) ' '
d147 1
a147 1
	RETURN
@


1.14
log
@mpi
@
text
@d2 1
a2 1
C++************************************************************************
d9 23
a31 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 2003. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.13
log
@mpi
@
text
@d37 1
a37 1
        INTEGER MYPID, COMM, IERR
d39 3
a41 2
        COMM = MPI_COMM_WORLD    
        CALL MPI_COMM_RANK(COMM, MYPID, IERR) 
d52 1
a52 1
        CLOSE(NDOC)
d59 1
a59 8
#ifdef USE_MPI
        IF (MYPID .EQ. 0) THEN
           WRITE(NOUT,*) ' '
        ENDIF
        CALL MPI_BARRIER(COMM,IERR)
#else
        WRITE(NOUT,*) ' '
#endif
@


1.12
log
@mpi
@
text
@d37 1
a37 1
        integer mypid, comm, ierr 
d39 4
a42 2
        comm = MPI_COMM_WORLD    
        call MPI_COMM_RANK(comm, mypid , ierr) 
d59 1
a59 1
        if (mypid .eq. 0) then
d61 2
a62 1
        endif
@


1.11
log
@incore opendoc
@
text
@d35 8
d56 5
d62 1
@


1.10
log
@opendoc has prompt parameter now
@
text
@d6 1
d8 8
a15 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d33 1
a33 1
        CHARACTER *(*) DOCNAM
d36 1
a36 1
        CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,.FALSE.,' ',
d40 1
a40 1
        CALL LUNDOCINFO(NDOC,MAXKEYS,MAXCOLS,KEYUSED,.TRUE.,IRTFLG)
@


1.9
log
@*** empty log message ***
@
text
@d4 2
a5 1
C RDDOCN.F   ADAPTED FROM RDDOCA2Q.F FEB 97 BY ArDean Leith
a26 2
C   CALLS:        OPENDOC, LUNDOCINFO, CHKSTR
C
d36 1
a36 1
        CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,.FALSE.,
@


1.8
log
@maxcols bug
@
text
@d46 1
a46 1
        CALL REG_SET_NSEL(1,FLOAT(MAXKEYS),FLOAT(MAXCOLS),
@


1.7
log
@used reg_set_nsel
@
text
@d46 1
a46 1
        CALL REG_SET_NSEL(1,FLOAT(MAXKEYS),FLOAT(MAXKEYS),
@


1.6
log
@keyused parameter added to lundocinfo call
@
text
@a35 3
        PARAMETER      (NMAX = 10)
        COMMON         ILIST(NMAX)

d45 3
a47 9
C       FIND THE DATA REGISTER NUMBER(S), IF ANY
        ILEN = LNBLNKN(FCHAR)
        IGO  = 6
        CALL CHKSTR(FCHAR(IGO:),ILEN-IGO+1,'IR',ILIST,DUM,
     &              NMAX,NLIST,IRTFLG)
        IF (IRTFLG .NE. 0) THEN
           CALL ERRT(16,'RDDOCN',NE)
           RETURN
        ENDIF
d49 1
a49 3
        IF (NLIST .GE. 1) THEN
C          SET FIRST REGISTER TO MAXKEYS
           PARAM(ILIST(1)) = MAXKEYS
a50 7
           IF (NLIST .GE. 2) THEN
C             SET FIRST REGISTER TO MAXKEYS
              PARAM(ILIST(2)) = MAXCOLS
           ENDIF
        ENDIF

        WRITE(NOUT,*) ' '
@


1.5
log
@used lundoc
@
text
@d44 1
a44 1
        CALL LUNDOCINFO(NDOC,MAXKEYS,MAXCOLS,.TRUE.,IRTFLG)
@


1.4
log
@*** empty log message ***
@
text
@d18 2
a19 2
C   PURPOSE:  FINDS NUMBER OF COLUMNS AND KEYS IN DOC FILES. CAN
C             SET THESE VALUES IN REGISTERS GIVEN COMMAND LINE
d26 1
a26 1
C   CALLS:    
a32 1
CNO_SAVE
a34 1
        LOGICAL        ISDIGI
d36 3
d40 13
a52 1
        CALL DOCINFO(DOCNAM,NDOC,MAXKEYS,MAXCOLS,.TRUE.,IRTFLG)
d54 1
a54 1
           CALL ERRT(100,'RDDOCN',NE)
d58 7
a64 36
C       IF 'X' PRESENT SET DESIRED REGISTER TO MAXKEYS

        KGO = INDEX(FCHAR,'X')

        IF (KGO .GT. 5 .AND. NALPH .GE. 6) THEN
C          HAVE REGISTER TO BE SET
             
           KLEN = 3
           IF (((KGO + 2) .GT. NALPH) .OR. 
     &         (.NOT. ISDIGI(FCHAR(KGO+2:KGO+2)))) KLEN = 2
           CALL CHKSTRQ(FCHAR(KGO:NALPH),KLEN,'I',IREG,DUM,NREGS,IER)

           IF (IREG .GT. 1 .AND. IREG .LT. 100) THEN
C             SET THIS REGISTER TO MAXKEYS
              PARAM(IREG) = MAXKEYS
           ELSE
C             CAN ONLY HAVE 100 REGISTERS
              WRITE(NOUT,*) '*** REGISTERS: 0..99  GOT: ',IREG
           ENDIF

           IF ((KGO + KLEN + 1) .LT. NALPH) THEN
C             MAY WANT TO SET SECOND REGISTER WITH MAXCOLS
              KGO = INDEX(FCHAR(KGO + KLEN + 1:NALPH),'X') + KGO + KLEN

              KLEN = 3
              IF (((KGO + 2) .GT. NALPH) .OR. 
     &           (.NOT. ISDIGI(FCHAR(KGO+2:KGO+2)))) KLEN = 2
              CALL CHKSTRQ(FCHAR(KGO:NALPH),KLEN,'I',IREG,DUM,NREGS,IER)

              IF (IREG .GT. 1 .AND. IREG .LT. 100) THEN
C                SET THIS REGISTER TO MAXCOLS
                 PARAM(IREG) = MAXCOLS
              ELSE
C                CAN ONLY HAVE 100 REGISTERS
                 WRITE(NOUT,*) '*** REGISTERS: 0..99  GOT: ',IREG
              ENDIF
@


1.3
log
@*** empty log message ***
@
text
@a24 1
C          IF DOCUMENT FILE DOES NOT EXIST SET X11 AND X12 TO ZERO
d41 2
a42 4
C           CALL ERRT(100,'RDDOCN',NE)
C           RETURN
	MAXKEYS=0
	MAXCOLS=0
@


1.2
log
@fixed register assignment
@
text
@d25 1
d42 4
a45 2
           CALL ERRT(100,'RDDOCN',NE)
           RETURN
@


1.1
log
@Initial revision
@
text
@d21 2
a22 2
C   PARAMETERS:     DOCNAM    FILE NAME                   (SENT)
C                   NDOC      LUN FOR DOC FILE            (SENT)
d24 1
a24 1
C   USAGE:    'UD N,X11,X12
d56 1
d59 1
a59 1
              PARAM(IREG+1) = MAXKEYS
d62 1
a62 1
              WRITE(NOUT,*) '*** REGISTERS: 0..99', GOT: ',IREG
d64 2
a65 2
           KGO = KGO + KLEN 
           IF ((KGO + 1) .LT. NALPH) THEN
d67 2
a68 1
              KGO = INDEX(FCHAR(KGO:NALPH),'X')
d73 1
d75 2
a76 2
C                SET THIS REGISTER TO MAXKEYS
                 PARAM(IREG+1) = MAXCOLS
d79 1
a79 1
                 WRITE(NOUT,*) '*** REGISTERS: 0..99', GOT: ',IREG
@
