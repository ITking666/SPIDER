head	1.24;
access;
symbols
	pre_getangas:1.21
	GPL2010:1.19
	pre_GPL2010:1.18
	pre_var_equation:1.18
	pre_fftwrings:1.18
	pre_opfiles:1.18
	src:1.18
	best-code:1.18
	x-named-regs:1.17
	x:1.17
	v13-00:1.17
	pre_GPL:1.15
	prec_CA:1.14
	noindx:1.13
	Bproc:1.12
	oct21:1.8
	last77:1.7;
locks; strict;
comment	@c @;


1.24
date	2016.09.14.17.53.51;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2015.01.20.19.22.59;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2013.11.13.14.26.45;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2011.01.03.17.03.01;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2011.01.03.16.34.53;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2010.06.24.13.26.36;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2006.01.06.15.09.28;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.17.20.26.01;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.18.17.50;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2004.05.07.16.04.02;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.20.19.40.41;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.04.18.18.15.09;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.08.17.16.48.23;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.08.20.21.42;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.08.19.40.13;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.11.10.23.11.16;	author yuchen;	state Exp;
branches;
next	1.8;

1.8
date	99.09.08.16.59.35;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.02.19.16.59.36;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.01.12.17.15.53;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.01.16.16.03.48;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	98.01.13.19.00.53;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	97.10.17.15.19.15;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.08.21.14.08.50;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.49;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.24
log
@==,NSAM,IMPLICIT
@
text
@
C++*********************************************************************
C
C    QSTAT.F           LONG FILE NAMES JAN             89 ArDean Leith
C                      MODIFIED FOR STACKS             98 ArDean Leith
C                      ==,NSAM,IMPLICIT                16 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2016  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    QSTAT(LUN1,LUNM,LUNDOC,LUNXM1)
C
C    PARAMETERS:   LUN????      LOGICAL UNIT NUMBERS
C                  LUNM         LOGICAL UNIT NUMBER OF MASK
C                  NX,NY        X & Y DIMENSIONS OF IMAGE
C                  NZ           Z DIMENSION  OF IMAGE
C                  NSTACK       STACK/MAXIM INDICATOR
C
C--*******************************************************************

      SUBROUTINE QSTAT(LUN1,LUNM,LUNDOC,LUNXM1)

      IMPLICIT NONE

      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'

      INTEGER               :: LUN1,LUNM,LUNDOC,LUNXM1

      CHARACTER(LEN=MAXNAM) :: FILNAM1,FILNAMM

      LOGICAL               :: ISFIRST,FOUROK
      INTEGER               :: ILIST1(NIMAX)
      INTEGER               :: NILMAX,NLET1,IFORM1,NX1,NY1,NZ1
      INTEGER               :: NDUM,NGOT1,IMG1,IRTFLG
      INTEGER               :: NXM,NYM,NZM,MAXIMM,ninndx1,npoint

      INTEGER               :: ICOMM, MYPID, MPIERR
      INTEGER               :: NSTACK1, IMAMI1, IFORMM, NINDX1, NLET 
      INTEGER               :: lnblnk 


      REAL                  :: unused
      CHARACTER (LEN=1)     :: NULL = CHAR(0)

      CALL SET_MPI(ICOMM,MYPID,MPIERR) ! SETS ICOMM AND MYPID

C     OPEN INPUT FILE
      NILMAX = NIMAX
      FOUROK = .TRUE.
      CALL OPFILES(0,LUN1,LUNDOC,LUNXM1,  
     &             .TRUE.,FILNAM1,NLET1, 'O',
     &             IFORM1,NX1,NY1,NZ1,NSTACK1,
     &             NULL,
     &             FOUROK, ILIST1,NILMAX, 
     &             NDUM,NGOT1,IMG1, IRTFLG)
 
      !write(6,'(a,8i5)')' nstack1,ngot1,img1:',nstack1,ngot1,img1,irtflg
      IF (IRTFLG .NE. 0) RETURN
      

      IMAMI1 = IMAMI   ! FROM CMBLOCK

      IF (FCHAR(4:4) == 'M') THEN
C        FIND STATISTICS UNDER A MASKED AREA

C        OPEN MASK INPUT FILE
         CALL OPFILEC(0,.TRUE.,FILNAMM,LUNM,'O',IFORMM,
     &             NXM,NYM,NZM,MAXIMM,'MASK',.FALSE.,IRTFLG)
         IF (IRTFLG .NE. 0) RETURN

         CALL SIZCHK(UNUSED,NX1,NY1,NZ1,IFORM1,
     &                      NXM,NYM,NZM,IFORMM,IRTFLG)
         IF (IRTFLG .NE. 0) GOTO 9999

      ENDIF

      ISFIRST = .TRUE.
       
      NINDX1  = 1
      DO                ! LOOP OVER ALL IMAGES/STACKS

        IF (FCHAR(4:4) == 'M') THEN
           CALL NORMM(LUN1,LUNM,NX1,NY1,NZ1,
     &                 FMAX,FMIN,AV,NPOINT)
 
           IF (MYPID <= 0 .AND. ISFIRST) THEN
              NLET = lnblnk(FILNAMM)
              WRITE(NOUT,99) FILNAMM(1:NLET)
99            FORMAT('  STATISTICS RELATING TO MASK: ',A)

              WRITE(NOUT,98) NPOINT
98            FORMAT('  NUMBER OF POINTS: ',I8)
           ENDIF
           ISFIRST = .FALSE.

        ELSEIF (IMAMI1 .NE. 1) THEN    ! IMAMI IS FROM CMBLOCK
           CALL NORM3(LUN1,NX1,NY1,NZ1,FMAX,FMIN,AV)
        ENDIF

        CALL REPORTSTAT(FMIN,FMAX,AV,SIG)

C       OPEN NEXT INPUT FILE, UPDATE NINDX1 
        CALL NEXTFILE(NINDX1,   ILIST1, 
     &                FOUROK,  LUNXM1,
     &                NGOT1,   NSTACK1,  
     &                LUN1,    0,  
     &                FILNAM1, 'O',
     &                IMG1,    IRTFLG)
        IF (IRTFLG .NE. 0) EXIT      ! ERROR / END OF INPUT STACK
        IMAMI1 = IMAMI

      ENDDO

9999  CLOSE(LUN1)
      CLOSE(LUNM)
      CLOSE(LUNXM1)

      END

C     --------------- REPORTSTAT -----------------------------------

      SUBROUTINE REPORTSTAT(FMINT,FMAXT,AVT,SIGT)

      IMPLICIT NONE
      INCLUDE 'CMBLOCK.INC'

      REAL    :: FMINT,FMAXT,AVT,SIGT
      INTEGER :: IRTFLG

      WRITE(NOUT,90) FMINT,FMAXT,AVT,SIGT
90    FORMAT('  FMIN: ', 1PG10.3,
     &       '  FMAX: ', 1PG10.3,
     &       '  AV: ',   1PG12.5,
     &       '  SIG: ',  1PG12.5)

      CALL REG_SET_NSEL(1,4,FMAXT,FMINT, AVT, SIGT, 0.0, IRTFLG)

      CALL REG_SET(3,FMAXT,CHAR(0), IRTFLG)
      CALL REG_SET(4,FMINT,CHAR(0), IRTFLG)
      CALL REG_SET(5,AVT,  CHAR(0), IRTFLG)
      CALL REG_SET(6,SIGT, CHAR(0), IRTFLG)

      END
@


1.23
log
@'  FMIN:' --> '  FMIN: ' etc
@
text
@d4 3
a6 2
C    QSTAT.F                       LONG FILE NAMES JAN 89 ArDean Leith
C                                  MODIFIED FOR STACKS 98 ArDean Leith
d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d34 2
a35 2
C                  NSAM,NROW    X & Y DIMENSIONS OF IMAGE
C                  NSLICE       Z DIMENSION  OF IMAGE
d42 2
d53 1
a53 1
      INTEGER               :: NILMAX,NLET1,IFORM1,NSAM1,NROW1,NSLICE1
d55 6
a60 1
      INTEGER               :: NSAMM,NROWM,NSLICEM,MAXIMM,ninndx1,npoint
d72 1
a72 1
     &             IFORM1,NSAM1,NROW1,NSLICE1,NSTACK1,
d75 3
a77 1
     &             NDUM,NGOT1,IMG1, IRTFLG) 
d79 1
a79 1
      !write(6,'(a,8i5)')' In  nstack1,ngot1,img1:',nstack1,ngot1,img1
d83 1
a83 1
      IF (FCHAR(4:4) .EQ. 'M') THEN
d88 1
a88 1
     &             NSAMM,NROWM,NSLICEM,MAXIMM,'MASK',.FALSE.,IRTFLG)
d91 2
a92 2
         CALL SIZCHK(UNUSED,NSAM1,NROW1,NSLICE1,IFORM1,
     &                      NSAMM,NROWM,NSLICEM,IFORMM,IRTFLG)
d102 2
a103 2
        IF (FCHAR(4:4) .EQ. 'M') THEN
           CALL NORMM(LUN1,LUNM,NSAM1,NROW1,NSLICE1,
d117 1
a117 1
           CALL NORM3(LUN1,NSAM1,NROW1,NSLICE1,FMAX,FMIN,AV)
d124 5
a128 5
     &                 FOUROK,  LUNXM1,
     &                 NGOT1,   NSTACK1,  
     &                 LUN1,    0,  
     &                 FILNAM1, 'O',
     &                 IMG1,    IRTFLG)
@


1.22
log
@output line formatting
@
text
@d141 4
a144 4
90    FORMAT('  FMIN:', 1PG10.3,
     &       '  FMAX:', 1PG10.3,
     &       '  AV:',   1PG12.5,
     &       '  SIG:',  1PG12.5)
@


1.21
log
@typo
@
text
@d99 2
a100 1
99            FORMAT(' STATISTICS RELATING TO MASK: ',A)
d102 1
a102 1
98            FORMAT(' NUMBER OF POINTS: ',I8)
d141 4
a144 4
90    FORMAT('  FMIN =', 1PG10.3,
     &       '  FMAX =', 1PG10.3,
     &       '  AV =',   1PG12.5,
     &       '  SIG =',  1PG12.5)
@


1.20
log
@opfiles support refactored
@
text
@d54 1
a54 1
      REAL                  :: unused,fmax,fmin,av
d106 1
a106 1
     &     CALL NORM3(LUN1,NSAM1,NROW1,NSLICE1,FMAX,FMIN,AV)
@


1.19
log
@GPL_2010
@
text
@d29 1
a29 1
C    QSTAT(LUN,LUNM,NSAM,NROW,NSLICE)
d31 1
a31 2
C    PARAMETERS:   FILNAM       FILE NAME
C                  LUN          LOGICAL UNIT NUMBER OF IMAGE
d39 1
a39 1
      SUBROUTINE QSTAT(FILNAM,LUN,LUNM,NSAM,NROW,NSLICE,NSTACK)
d44 1
a44 1
      COMMON /COMMUN/ BUFF(NBUFSIZ)
d46 1
a46 1
      CHARACTER(LEN=MAXNAM)   :: FILNAMM
d48 24
a71 2
      CHARACTER *(*)   FILNAM
      LOGICAL          ISBARE
d74 5
a78 10
C        STATISTICS ON A MASK 
	 IF (NSTACK .GE. 0)  THEN
	     CALL ERRT(101,'THIS OPERATION NOT STACK AWARE YET',NE)
             RETURN
         ENDIF

         MAXIM = 0
         CALL OPFILEC(0,.TRUE.,FILNAMM,LUNM,'O',IFORM,
     &                NSAM1,NROW1,NSLICE1,
     &                MAXIM,'MASK',.FALSE.,IRTFLG)
d81 4
a84 46
         IF (NSAM1 .NE. NSAM .OR. NROW1 .NE. NROW .OR. 
     &       NSLICE .NE. NSLICE1)  THEN
	     CALL ERRT(1,'QSTAT  ',NE)
	     CLOSE(LUNM)
	     RETURN
	 ENDIF

         CALL NORMM(LUN,LUNM,NSAM,NROW,NSLICE,FMAX,FMIN,AV,NPOINT)
         CLOSE(LUNM)

         NLET = lnblnk(FILNAMM)
         WRITE(NOUT,99) FILNAMM(1:NLET)
99       FORMAT(' STATISTICS RELATING TO MASK: ',A)
         WRITE(NOUT,98)  NPOINT
98       FORMAT(' NUMBER OF POINTS: ',I8)

         CALL REPORTSTAT(FMIN,FMAX,AV,SIG)

      ELSEIF (.NOT. ISBARE(FILNAM)) THEN
C        FIND STATISTICS ON REGULAR IMAGE OR STACKED IMAGE
         IF (IMAMI .NE. 1) 
     &      CALL NORM3(LUN,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
         CALL REPORTSTAT(FMIN,FMAX,AV,SIG)

      ELSE
C        WHOLE STACK OPERATION

C        START WITH FIRST IMAGE
         NIMAGE = MAX(NSTACK,1)
         IMGNUM = 1

         DO WHILE (IMGNUM .LE. NIMAGE)
            IF (VERBOSE) WRITE(NOUT,*) ' '
C           GET NEXT IMAGE FROM STACK
            CALL GETOLDSTACK(LUN,NSAM,IMGNUM,
     &                      .TRUE.,.FALSE.,.TRUE.,IRTFLG)
            IF (IRTFLG .GT. 0) RETURN

            IF (IMAMI .NE. 1) 
     &         CALL NORM3(LUN,NSAM,NROW,NSLICE,FMAX,FMIN,AV)

            CALL REPORTSTAT(FMIN,FMAX,AV,SIG)

C           TRY NEXT IMAGE IF THIS IS A STACK AND THERE IS ONE
            IMGNUM = IMGNUM + 1
         ENDDO
d87 40
a126 1
      RETURN
d133 2
d136 2
a137 1
      INCLUDE 'CMBLOCK.INC'
d140 4
a143 2
90    FORMAT('  FMIN =', G10.3,'  FMAX =', G10.3,'  AV =', G12.5,
     &       '  SIG =', G12.5)
a151 1
      RETURN
@


1.18
log
@reg_set param
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.17
log
@GPL License fixed
@
text
@d133 4
a136 4
      CALL REG_SET(3,FMAXT,.TRUE., IRTFLG)
      CALL REG_SET(4,FMINT,.TRUE., IRTFLG)
      CALL REG_SET(5,AVT,  .TRUE., IRTFLG)
      CALL REG_SET(6,SIGT, .TRUE., IRTFLG)
@


1.16
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a7 2
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      **
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
@


1.15
log
@term. output formatting
@
text
@d2 1
d9 1
d11 24
@


1.14
log
@opfilec
@
text
@d111 1
a111 1
90    FORMAT(' FMIN =', G10.3,'  FMAX =', G10.3,'  AV =', G12.5,
@


1.13
log
@N_VERBOSE --> VERBOSE
@
text
@d34 2
a36 1
      CHARACTER *81    FILNAMM
d47 3
a49 2
         CALL OPFIL(.TRUE.,FILNAMM,LUNM,'O',NSAM1,NROW1,NSLICE1,
     &             MAXIM,'MASK',.FALSE.,IRTFLG)
@


1.12
log
@*** empty log message ***
@
text
@d82 1
a82 1
            IF (N_VERBOSE .EQ. 1) WRITE(NOUT,*) ' '
@


1.11
log
@reg off by one for reg_set
@
text
@d4 1
a4 1
C    QSTAT.FOR                     LONG FILE NAMES JAN 89 ArDean Leith
d112 1
a112 1
      CALL REG_SET_NSEL(1,FMAXT,FMINT, AVT, SIGT, 0.0, IRTFLG)
@


1.10
log
@used reg_set
@
text
@d114 4
a117 4
      CALL REG_SET(4,FMAXT,.TRUE., IRTFLG)
      CALL REG_SET(5,FMINT,.TRUE., IRTFLG)
      CALL REG_SET(6,AVT,  .TRUE., IRTFLG)
      CALL REG_SET(7,SIGT, .TRUE., IRTFLG)
@


1.9
log
@a
@
text
@d112 6
a117 11
      IF (NSEL(1) .NE. 0) THEN
          PARAM(NSEL(1)) = FMAXT
          PARAM(NSEL(2)) = FMINT
          PARAM(NSEL(3)) = AVT
          PARAM(NSEL(4)) = SIGT
      ELSE
          PARAM(4) = FMAXT
          PARAM(5) = FMINT
          PARAM(6) = AVT
          PARAM(7) = SIGT
      ENDIF
@


1.8
log
@CMLIMIT.INC
@
text
@d105 1
a105 1
CNO_SAVE
@


1.7
log
@lunsethdr used
@
text
@a28 1
CNO_SAVE
d30 1
a31 1
      PARAMETER       (NBUFSIZ=17008)
@


1.6
log
@uses getoldstack call now
@
text
@d85 1
a85 1
            CALL GETOLDSTACK(FILNAM,LUN,NSAM,IMGNUM,
@


1.5
log
@removed nstack from nextimg call
@
text
@d1 1
d4 2
a5 1
C    QSTAT.FOR                          LONG FILE NAMES JAN 89 al
d7 8
a14 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d32 1
a32 1
      PARAMETER     (NBUFSIZ=17000)
d37 1
a37 3
      CHARACTER        NULL

      NULL = CHAR(0)
d46 1
a46 1
         NSTACK1 = 0
d48 1
a48 1
     &             NSTACK1,'MASK',.FALSE.,IRTFLG)
d50 3
a52 6
         IF (IFORM .LT. 1) THEN
            CALL ERRT(2,'QSTAT  ',NE)
            CLOSE(LUNM)
            RETURN
	 ELSEIF (NSAM1  .NE. NSAM   .OR. NROW1 .NE. NROW .OR. 
     &           NSLICE .NE. NSLICE1)  THEN
d59 1
a59 1
         CLOSE (LUNM)
d61 2
a62 1
         WRITE(NOUT,99) FILNAM(1:NLET)
d69 5
d76 1
a76 1
C        FIND STATISTICS ON THIS IMAGE
d79 2
a80 2
         MAXIM  = NSTACK
         NIMAGE = 1
d82 6
a87 2
10       CALL NEXTIMG(BUFF,FILNAM,LUN,NSAM,NROW,NSLICE,
     &               NIMAGE,.TRUE.,IFORM,'Z',IRTFLG)
a88 2
         IF (IRTFLG .EQ. 0) THEN
C           IMAGE FOUND BY NEXTIMG (MAY BE FIRST OR ONLY IMAGE)
d93 1
a93 2
C           TRY NEXT IMAGE IN STACK
            NIMAGE = NIMAGE + 1
d95 2
a96 2
            IF (MAXIM .GT. 0 .AND. NIMAGE .LE. MAXIM) GOTO 10
          ENDIF
d103 1
@


1.4
log
@rewritten
for stacks
@
text
@d80 1
a80 1
10       CALL NEXTIMG(BUFF,FILNAM,LUN,NSAM,NROW,NSLICE,NSTACK,
@


1.3
log
@R
@
text
@d17 2
a18 1
C    PARAMETERS:   LUN          LOGICAL UNIT NUMBER OF IMAGE
d20 3
a22 1
C                  NSAM,NROW    DIMENSIONS OF IMAGE
d26 1
a26 1
      SUBROUTINE QSTAT(LUN,LUNM,NSAM,NROW,NSLICE)
d29 1
a29 10
      COMMON /PARAM/PARAM(103),NS1,NS2,NS3,NS4
      COMMON /UNITS/LUNC,NIN,NOUT
      COMMON /FUNCTION/FCHAR
      COMMON /MASTER/ NSAMC,NROWC,IREC,NLABEL,IFORM,IMAMI,FMAX,FMIN,
     1                AV,SIG,IHIST
      COMMON /COMMUN/ FILNAM

      CHARACTER *81  FILNAM
      CHARACTER * 80 FCHAR
      CHARACTER      NULL
d31 7
a39 5
      IF (IFORM .LT. 1) THEN
          CALL ERRT(2,'QSTAT  ',NE)
          RETURN
      ENDIF
C
d42 9
a50 5
         CALL FILERD(FILNAM,NLET,NULL,'MASK',IRTFLG)
         IF (FILNAM(1:1) .EQ. '*') RETURN
         CALL OPENF(FILNAM,LUNM,NSAM1,NROW1,'O',NF,NSLICE1)
	 NSLICE1 = AMAX0(NSLICE1,1)
         IF (NF .NE. 2) RETURN
d67 6
a72 2
         WRITE(NOUT,999)   NPOINT
999      FORMAT('    Number of points: ',i8)
d74 20
a93 3
C        WANT STATISTICS ON IMAGE
         IF (IMAMI .NE. 1) CALL NORM3(LUN,NSAM,NROW,NSLICE,
     &                       FMAX,FMIN,AV)
d95 12
a106 3
C
      WRITE(NOUT,101) FMIN,FMAX,AV,SIG
101   FORMAT(' FMIN =', G10.3,'  FMAX =', G10.3,'  AV =', G12.5,
d109 5
a113 5
      IF (NS1 .NE. 0) THEN
          PARAM(NS1) = FMAX
          PARAM(NS2) = FMIN
          PARAM(NS3) = AV
          PARAM(NS4) = SIG
d115 4
a118 4
          PARAM(4) = FMAX
          PARAM(5) = FMIN
          PARAM(6) = AV
          PARAM(7) = SIG
d120 1
@


1.2
log
@cosmetic
@
text
@d48 1
a48 1
         CALL OPENF(FILNAM,LUNM,NSAM1,NROW1,'R',NF,NSLICE1)
@


1.1
log
@Initial revision
@
text
@d3 2
a4 2
C $$ QSTAT.FOR
C                                    LONG FILE NAMES JAN 89 al
d15 1
a15 1
C $$ QSTAT(LUN,LUNM,NSAM,NROW)
d25 1
d37 1
a37 1
      NULL=CHAR(0)
d45 24
a68 24
C          STATISTICS ON A MASK 
           CALL FILERD(FILNAM,NLET,NULL,'MASK',IRTFLG)
           IF (FILNAM(1:1) .EQ. '*') RETURN
           CALL OPENF(FILNAM,LUNM,NSAM1,NROW1,'R',NF,NSLICE1)
		nslice1=amax0(nslice1,1)
           IF (NF .NE. 2) RETURN
	        IF (IFORM .LT. 1) THEN
	          CALL ERRT(2,'QSTAT  ',NE)
		CLOSE(LUNM)
	          RETURN
	        ENDIF
	IF(NSAM1.NE.NSAM .OR. NROW1.NE.NROW.or.nslice.ne.nslice1)  THEN
	          CALL ERRT(1,'QSTAT  ',NE)
		CLOSE(LUNM)
		RETURN
		ENDIF
C
           CALL NORMM(LUN,LUNM,NSAM,NROW,nslice,FMAX,FMIN,AV,NPOINT)
           CLOSE (LUNM)
C
           WRITE(NOUT,99) FILNAM(1:NLET)
99	   FORMAT(' ** STATISTICS RELATING TO MASK ',A)
           WRITE(NOUT,999)   NPOINT
999	   FORMAT('    Number of points: ',i8)
d70 2
a71 2
C          WANT STATISTICS ON IMAGE
           IF (IMAMI .NE. 1) CALL NORM3(LUN,NSAM,NROW,NSLICE,
d77 2
a78 2
     1       '  SIG =', G12.5)
C
d80 4
a83 4
           PARAM(NS1) = FMAX
           PARAM(NS2) = FMIN
           PARAM(NS3) = AV
           PARAM(NS4) = SIG
d85 4
a88 4
           PARAM(4) = FMAX
           PARAM(5) = FMIN
           PARAM(6) = AV
           PARAM(7) = SIG
d90 1
a90 1
C
@
