head	1.15;
access;
symbols
	pre_getangas:1.14
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.13
	pre_fftwrings:1.13
	pre_opfiles:1.13
	src:1.13
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.11
	prec_CA:1.11
	noindx:1.11
	Bproc:1.11
	oct21:1.10
	last77:1.10;
locks; strict;
comment	@c @;


1.15
date	2014.07.30.13.45.40;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.24.13.25.36;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.20.18.23;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.18.11.24;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.11.10.23.09.17;	author yuchen;	state Exp;
branches;
next	1.10;

1.10
date	99.02.04.15.06.11;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	95.07.03.20.31.26;	author mladjadj;	state Exp;
branches;
next	1.8;

1.8
date	95.05.05.19.24.07;	author mladjadj;	state Exp;
branches;
next	1.7;

1.7
date	95.05.05.19.19.46;	author mladjadj;	state Exp;
branches;
next	1.6;

1.6
date	95.05.04.17.58.58;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	95.04.19.20.30.23;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	95.04.19.19.48.54;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	95.04.18.16.15.23;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	95.04.17.18.35.27;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.46;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.15
log
@(LEN=MAXNAM) :: MASTMP
@
text
@
C++*********************************************************************
C
C    FILCAN.FOR   ADAPTED FROM FILCON.FOR          OCT 88 al
C                 LONG FILNAMES
C                 MAXNAM                           JUL 14 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   FILCAN(FILNAM,NF,DEV,DIR,MASTER,EXTEN,IER)
C
C   PURPOSE: CONSTRUCTS FILE NAME FROM CHARACTER STRINGS THAT CONTAIN
C            1) DEVICE ,2) DIRECTORY NAME, 3) MASTER FILE NAME AND 
C            4) FILE EXTENSION.
C            THIS SUBROUTINE IS INSTALLATION-DEPENDENT. IT IS WRITTEN 
C            FOR THE FILE-NAMING CONVENTIONS OF THE VAX/VMS OPERATING
C            SYSTEM.
C
C            THE FILE NAME HAS THE FOLLOWING FORMAT:
C	         <dev>:[<dir>]<master>.<exten>
C
C  PARAMETERS:  FILNAM   COMPLETE FILE NAME           (RETURNED)
C               NLET     LENGTH OF COMPLETE FILE NAME (RETURNED)
C               DEV      DEVICE NAME                  (RECEIVED)
C               DIR      DIRECTORY NAME               (RECEIVED)
C               MASTER   MASTER FILE NAME             (RECEIVED)
C               EXTEN    EXTENSION NAME               (RECEIVED)
C               IER      ERROR FLAG (0 IS NORMAL)
C
C **********************************************************************

	SUBROUTINE FILCAN(FILNAM,NLET,DEV,DIR,MASTER,EXTEN,IER)

 
        INCLUDE 'CMLIMIT.INC'

	COMMON/UNITS/LUN,NIN,NOUT

        CHARACTER *(*)  FILNAM,DEV,DIR,MASTER,EXTEN
        CHARACTER * 1   NULL

        CHARACTER(LEN=MAXNAM) :: MASTMP

        NULL = CHAR(0)
    
C       SAVE MASTER IN CASE FILNAM IS SAME AS MASTER
C       NULL OUT THE COMPLETE FILE NAME
#ifdef __osf__
        NP = INDEX(MASTER,NULL) - 1
        IF (NP .LT. 0) NP = LEN(MASTER)
	MASTMP = MASTER(1:NP) // NULL
	NLET = LEN(FILNAM)
	FILNAM(1:1) = NULL
#else
	MASTMP = MASTER // NULL
	FILNAM = NULL
#endif

	IER  = 0
C       ZERO THE RETURNED FILE NAME LENGTH
	NLET = 0      

        INDNUL = INDEX(DEV,NULL)
        IF (INDNUL .GT. 1 .OR. 
     &     (INDNUL .EQ. 0  .AND. LEN(DEV) .GT. 1)) THEN
C          DEVICE PROVIDED
           CALL LONGER(FILNAM,NLET,DEV,IRTFLG)
           ILOC = 1
           IF (IRTFLG .EQ. 1) GOTO 799
           CALL LONGER(FILNAM,NLET,':',IRTFLG)
           ILOC = 2
           IF (IRTFLG .EQ. 1) GOTO 799
        ENDIF

        INDNUL = INDEX(DIR,NULL)
        IF (INDNUL .GT. 1 .OR. 
     &     (INDNUL .EQ. 0  .AND. LEN(DIR) .GT. 1)) THEN
C          DIRECTORY PROVIDED
           CALL LONGER(FILNAM,NLET,'[',IRTFLG)
           ILOC = 3
           IF (IRTFLG .EQ. 1) GOTO 799
           CALL LONGER(FILNAM,NLET,DIR,IRTFLG)
           ILOC = 4
           IF (IRTFLG .EQ. 1) GOTO 799
           CALL LONGER(FILNAM,NLET,']',IRTFLG)
           ILOC = 5
           IF (IRTFLG .EQ. 1) GOTO 799
        ENDIF

        CALL LONGER(FILNAM,NLET,MASTMP,IRTFLG)
        ILOC = 6
        IF (IRTFLG .EQ. 1) GOTO 799

        INDNUL = INDEX(EXTEN,NULL)
        IF (INDNUL .GT. 1 .OR. 
     &     (INDNUL .EQ. 0  .AND. LEN(EXTEN) .GT. 1)) THEN
C          EXTENSION PROVIDED IN CALL

C          PUT DOT FOR EXTENSION IN FILENAME
           CALL LONGER(FILNAM,NLET,'.',IRTFLG)
           ILOC = 7
           IF (IRTFLG .EQ. 1) GOTO 799

C          PUT EXTENSION IN FILENAME
           CALL LONGER(FILNAM,NLET,EXTEN,IRTFLG)
           ILOC = 8
           IF (IRTFLG .EQ. 1) GOTO 799
        ENDIF

C       NORMAL RETURN
	RETURN  

799	WRITE(NOUT,51) ILOC,MASTMP
51	FORMAT(' *** ',I1,' CAN NOT CONSTRUCT FILENAME FROM: ',A)
	IER = 1
	RETURN

	END

@


1.14
log
@GPL_2010
@
text
@d4 4
a7 2
C    FILCAN.FOR -- ADAPTED FROM FILCON.FOR OCT 88 al
C                                          LONG FILNAMES
d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d32 6
a37 6
C   PURPOSE: constructs file name from character strings that contain
C            1) device ,2) directory name, 3) master file name and 
C            4) file extension.
C            This subroutine is installation-dependent. It is written 
C            for the file-naming conventions of the VAX/VMS operating
C            system.
d39 1
a39 1
C            The file name has the following format:
d55 1
a59 1
        CHARACTER *81   MASTMP
d61 2
@


1.13
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.12
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a6 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a30 1
C **************************************************************************
a52 1
C ************************************************************************
@


1.11
log
@a
@
text
@d2 1
d7 1
d9 1
d11 24
d41 1
d64 1
@


1.10
log
@CNO_SAVE
@
text
@d40 1
a40 1
CNO_SAVE 
@


1.9
log
@correct filename finally more filcan.f!
@
text
@d4 1
a4 1
C $$ FILCAN.FOR -- ADAPTED FROM FILCON.FOR OCT 88 al
d16 1
a16 1
C $ CALL FILCAN(FILNAM,NF,DEV,DIR,MASTER,EXTEN,IER)
d39 2
@


1.8
log
@correct the cpp endif
@
text
@d51 2
a52 1
        NP = LEN(MASTER)
d55 1
a55 1
	FILNAM(1:NLET) = NULL
@


1.7
log
@put a ifdef __osf__ around mstmp=master//null
@
text
@d58 1
a58 1
#end if
@


1.6
log
@correction needed  by tioman
@
text
@d50 1
d55 4
@


1.5
log
@fixed the end if of __osf__
@
text
@d50 4
a53 9
#ifdef __osf__
         NP = LEN(MASTER)
	 MASTMP = MASTER(1:NP) // NULL
	 NLET = LEN(FILNAM)
	 FILNAM(1:NLET) = NULL
#else
         MASTMP = MASTER // NULL 
	 FILNAM = NULL
#endif
@


1.4
log
@add __osf__ around filnam(1:nlet)=null for tioman
@
text
@d58 1
a58 1
#end if
@


1.3
log
@change back filnam(1:nlet)=null to filnam=null
@
text
@a48 2
        MASTMP = MASTER // NULL 

d50 9
a58 1
        FILNAM = NULL
@


1.2
log
@change filnam=null to filnam(1:nlet)=null because of osf
@
text
@d49 1
a49 3
	NP = LEN(MASTER)
        MASTMP = MASTER(1:NP) // NULL
c        MASTMP = MASTER // NULL 
d52 1
a52 3
        NLET = LEN(FILNAM)
        FILNAM(1:NLET) = NULL
c        FILNAM = NULL
@


1.1
log
@Initial revision
@
text
@d49 3
a51 1
        MASTMP = MASTER // NULL 
d54 3
a56 1
        FILNAM = NULL
@
