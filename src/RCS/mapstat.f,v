head	1.12;
access;
symbols
	healthdept_2018:1.12
	pre_getangas:1.9
	GPL2010:1.9
	pre_GPL2010:1.8
	pre_var_equation:1.8
	pre_fftwrings:1.8
	pre_opfiles:1.8
	src:1.8
	best-code:1.7
	x-named-regs:1.7
	x:1.7
	v13-00:1.7
	pre_GPL:1.5
	prec_CA:1.5
	noindx:1.5
	Bproc:1.5
	oct21:1.4
	last77:1.4;
locks; strict;
comment	@c @;


1.12
date	2018.10.03.14.34.09;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2013.05.29.15.43.04;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2013.05.29.15.39.34;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2010.06.24.13.26.07;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2006.12.21.15.22.34;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.17.20.05.01;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.18.00.10;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.11.10.23.09.36;	author yuchen;	state Exp;
branches;
next	1.4;

1.4
date	99.02.04.16.48.23;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.09.18.17.27.26;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	95.09.13.17.28.18;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	95.09.12.20.37.26;	author mladjadj;	state Exp;
branches;
next	;


desc
@file for EC group of comands
@


1.12
log
@email_health_dept
@
text
@
C***********************************************************************
C
C  MAPSTAT.FOR  -- CREATED JAN 91
C
C **********************************************************************
C *  AUTHOR: ArDean Leith 
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C      MAPSTAT(LUNIN,LUND,NX,NY,NZ,NREC1,NREC2,NVOX,IRTFLG) 
C
C      PURPOSE:  EXAMINES AN IMAGE STACK FOR NUMBERS OF EACH IMAGE VALUE
C                AND CENTER OF MASS OF EACH IMAGE VALUE.  CREATES A DOC.
C                FILE FOR STATISTICS OUTPUT HAVING KEY=IMAGE VALUE + 1, 
C                THEN NUMBER OF CELLS HAVING THAT VALUE, IXCOM, IYCOM, & 
C                IZCOM.  LIMITED TO IMAGEVALUES >= 0 AND <= MAXVOX.
C
C      PARAMETERS:  
C
C      CALLED BY:  IMSTAT 
C
C      CALLS:      REDLIN      WRTLIN   
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

       SUBROUTINE MAPSTAT(LUNIN,LUND,NX,NY,NZ,NREC1,NREC2,
     &            NVOX,IRTFLG)

 
       INCLUDE 'CMLIMIT.INC'
       INCLUDE 'CMBLOCK.INC'


       PARAMETER (MAXBUF = 16000)
       PARAMETER (MAXVOX = 9999)

       LOGICAL :: ONZ
       COMMON BUF(MAXBUF),FVOX(MAXVOX),FXCEN(MAXVOX),FYCEN(MAXVOX),
     &        FZCEN(MAXVOX),ONZ(MAXVOX),NUMSL(MAXVOX)

       REAL                   :: DLIST(7)
       LOGICAL                :: DEBUGGING
       CHARACTER (LEN=MAXNAM) :: DOCNAM
       LOGICAL                :: ADDEXT,GETNAME,ISOLD
       LOGICAL                :: APPEND,MESSAGE,NEWFILE
       CHARACTER(LEN=90)      :: COMMENT                   


       DEBUGGING = .FALSE.

       IOVER = 0
       NVOX  = 0

C      ZERO STATISTICS COUNTERS

       DO I = 1,MAXVOX
          FVOX(I)  = 0.0
          FXCEN(I) = 0.0
          FYCEN(I) = 0.0
          FZCEN(I) = 0.0
          NUMSL(I) = 0
       END DO

       LASTSLICE = -100        
       DO IREC = NREC1,NREC2
          CALL REDLIN(LUNIN,BUF,NX,IREC)
          ISLICE = (IREC / NY) + 1
          IROW   = IREC - (ISLICE - 1) * NY 

          IF (ISLICE .NE. LASTSLICE) THEN
C            STARTING A NEW SLICE, CHANGE ONZ FLAGS
             DO IBLOB = 1,MAXVOX
                ONZ(IBLOB) = .FALSE.
             ENDDO
             LASTSLICE = ISLICE
          ENDIF

          DO ICOL = 1,NX
C            CHECK THIS VOXEL STATISTICS, NOTE THAT TABLE LOCATION IS
C            1 > THAN IMAGE VALUE!!

             IT = BUF(ICOL) + 1

             IF (IT .LE. 0 .OR. IT > MAXVOX) THEN
C               VOXEL VALUE TOO SMALL OR LARGE FOR STATISTICS TABLE
                IOVER = IOVER + 1
                IF (IOVER < 8) THEN
C                   REPORT THE PROBLEM 8 TIMES
                    WRITE(NOUT,*) ' *** VOXEL VALUE: ',IT,
     &                             ' OUTSIDE TABLE SIZE: ',MAXVOX
                ENDIF

             ELSE
C               VOXEL VALUE IS WITHIN TABLE LIMITS
                FVOX(IT)  = FVOX(IT)  + 1
                FXCEN(IT) = FXCEN(IT) + ICOL
                FYCEN(IT) = FYCEN(IT) + IROW
                FZCEN(IT) = FZCEN(IT) + ISLICE

                IF (.NOT. ONZ(IT)) THEN
                   ONZ(IT)   = .TRUE.
                   NUMSL(IT) = NUMSL(IT) + 1
                ENDIF    
                IF (IT > NVOX) NVOX = IT
             ENDIF
          END DO

       END DO

C       OPEN OUTPUT DOC FILE 
        ADDEXT  = .TRUE.                    
        GETNAME = .TRUE.                    
        ISOLD   = .FALSE.                   
        APPEND  = .FALSE.                    
        MESSAGE = .TRUE.                    
        IRTFLG  = -8         ! NO IC USE    

        LUNRET  = LUND
        CALL OPENDOC(DOCNAM,ADDEXT,NLET,LUND,LUNRET,GETNAME,
     &             'OUTPUT STATISTICS DOC',ISOLD,APPEND,MESSAGE,
     &             NEWFILE,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999

        IF (NEWFILE) THEN
C                     123456789 123456789 123456789 123456789 123456789 1
           COMMENT = 'CONTENTS:   CLUSTER STATISTICS'

           CALL LUNDOCPUTCOM(LUNRET,COMMENT(1:37),IRTFLG)
C                   123456789 123456789 123456789 123456789 123456789
           COMMENT='       #VOXELS        X-COM          Y-COM      '//
     &             '   Z-COM  #OCCUPIED-SLICES '
C                   9 123456789 123456789 123456789 123456789 123456789
           CALL LUNDOCPUTCOM(LUNRET,COMMENT(1:75),IRTFLG)
       ENDIF


C      CALCULATE STATISTICS FOR EACH VOXEL VALUE
       DO I = 1,NVOX
          INUM     = FVOX(I)

          IF (INUM > 0) THEN
C           VOXEL VALUE IS OCCUPIED
            KEY      = I
            DLIST(1) = FVOX(I)
            DLIST(2) = FXCEN(I) / FVOX(I)
            DLIST(3) = FYCEN(I) / FVOX(I)
            DLIST(4) = FZCEN(I) / FVOX(I)
            DLIST(5) = NUMSL(I) 
            IF (KEY == 1) DLIST(5) = DLIST(5) - 1  ! why?? al

C           SAVE STATISTICS IN DOC FILE
            CALL LUNDOCWRTDAT(LUNRET,KEY,DLIST,5,IRTFLG)

            IF (DEBUGGING) THEN
C              WRITE STATISTICS ON STANDARD OUTPUT
               WRITE(NOUT,90) I,INUM,(DLIST(J),J=2,5)
90             FORMAT(2I10,4G12.3)
            ENDIF
          ENDIF
       ENDDO

C      CLOSE THE DOC FILE
9999   CLOSE(LUND)

       END
@


1.11
log
@prompt
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.10
log
@used opendoc, nx, labels
@
text
@d140 1
a140 1
     &             'OUTPUT STATISTICS DOCUMENT',ISOLD,APPEND,MESSAGE,
@


1.9
log
@GPL_2010
@
text
@d29 1
a29 1
C      MAPSTAT(LUNIN,LUND,NSAM,NROW,NSLICE,NREC1,NREC2,NVOX,IRTFLG) 
d46 1
a46 1
       SUBROUTINE MAPSTAT(LUNIN,LUND,NSAM,NROW,NSLICE,NREC1,NREC2,
d50 3
d57 3
a59 1
       INCLUDE 'CMBLOCK.INC'
d61 6
a66 3
       LOGICAL ONSLICE
       COMMON BUF(MAXBUF),FVOX(MAXVOX),FXCEN(MAXVOX),FYCEN(MAXVOX),
     &        FZCEN(MAXVOX),ONSLICE(MAXVOX),NUMSL(MAXVOX)
a67 2
       DIMENSION DLIST(7)
       LOGICAL   DEBUGGING
d86 3
a88 3
          CALL REDLIN(LUNIN,BUF,NSAM,IREC)
          ISLICE = (IREC / NROW) + 1
          IROW   = IREC - (ISLICE - 1) * NROW 
d91 1
a91 1
C            STARTING A NEW SLICE, CHANGE ONSLICE FLAGS
d93 1
a93 1
                ONSLICE(IBLOB) = .FALSE.
d98 1
a98 1
          DO ICOL = 1,NSAM
d104 1
a104 1
             IF (IT .LE. 0 .OR. IT .GT. MAXVOX) THEN
d107 1
a107 1
                IF (IOVER .LT. 8) THEN
d119 4
a122 3
                IF (.NOT. ONSLICE(IT)) THEN
                   ONSLICE(IT) = .TRUE.
                   NUMSL(IT)   = NUMSL(IT) + 1
d124 1
a124 1
                IF (IT .GT. NVOX) NVOX = IT
d130 27
d160 2
a161 1
          IF (INUM .GT. 0) THEN
d163 7
a169 6
            DLIST(1) = I
            DLIST(2) = FVOX(I)
            DLIST(3) = FXCEN(I) / FVOX(I)
            DLIST(4) = FYCEN(I) / FVOX(I)
            DLIST(5) = FZCEN(I) / FVOX(I)
            DLIST(6) = NUMSL(I) 
d172 1
a172 1
            CALL SAVD(LUND,DLIST,6,IRTFLG)
d176 1
a176 1
               WRITE(NOUT,90) I,INUM,(DLIST(J),J=3,6)
d183 1
a183 2
       CALL SAVDC
       CLOSE(LUND)
a184 1
       RETURN
@


1.8
log
@ debug -> debugging compiler balks on cpp DEBUG defined
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.7
log
@GPL License fixed
@
text
@d65 1
a65 1
       LOGICAL   DEBUG
d67 1
a67 1
       DEBUG = .FALSE.
d142 1
a142 1
            IF (DEBUG) THEN
@


1.6
log
@HRI GPL License used
@
text
@d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 7

C *  COPYRIGHT (C)1991, WADSWORTH CENTER FOR LABORATORIES AND RESEARCH   *
C *    NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.            *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR   *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR*
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF *
C *    THE CENTER FOR LABORATORIES AND RESEARCH  		       *
@


1.5
log
@a
@
text
@d8 24
@


1.4
log
@CNO_SAVE
@
text
@d36 1
a36 1
CNO_SAVE 
@


1.3
log
@put cpp around CMBLOCK.INC
@
text
@d36 2
d41 1
a41 5
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
@


1.2
log
@add close(lund) to close doc file
@
text
@d39 6
@


1.1
log
@file for EC group of comands
@
text
@d131 1
@
