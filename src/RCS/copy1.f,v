head	1.66;
access;
symbols
	pre_getangas:1.54
	GPL2010:1.51
	pre_GPL2010:1.50
	pre_var_equation:1.50
	pre_fftwrings:1.48
	pre_opfiles:1.48
	src:1.48
	best-code:1.48
	x-named-regs:1.48
	x:1.48
	v13-00:1.48
	pre_GPL:1.46
	prec_CA:1.42
	noindx:1.34
	Bproc:1.29
	oct21:1.27
	last77:1.26;
locks; strict;
comment	@c @;


1.66
date	2016.04.14.18.30.30;	author leith;	state Exp;
branches;
next	1.65;

1.65
date	2015.07.15.14.07.36;	author leith;	state Exp;
branches;
next	1.64;

1.64
date	2015.01.05.19.23.09;	author leith;	state Exp;
branches;
next	1.63;

1.63
date	2014.03.07.15.27.16;	author leith;	state Exp;
branches;
next	1.62;

1.62
date	2013.05.22.14.20.53;	author leith;	state Exp;
branches;
next	1.61;

1.61
date	2013.05.01.15.21.10;	author leith;	state Exp;
branches;
next	1.60;

1.60
date	2013.04.15.16.08.21;	author leith;	state Exp;
branches;
next	1.59;

1.59
date	2013.04.08.19.27.39;	author leith;	state Exp;
branches;
next	1.58;

1.58
date	2012.04.30.19.10.38;	author leith;	state Exp;
branches;
next	1.57;

1.57
date	2012.04.11.15.27.32;	author leith;	state Exp;
branches;
next	1.56;

1.56
date	2012.02.13.14.20.40;	author leith;	state Exp;
branches;
next	1.55;

1.55
date	2011.06.16.15.05.19;	author leith;	state Exp;
branches;
next	1.54;

1.54
date	2011.01.03.18.39.04;	author leith;	state Exp;
branches;
next	1.53;

1.53
date	2011.01.03.16.38.29;	author leith;	state Exp;
branches;
next	1.52;

1.52
date	2010.12.21.16.16.43;	author leith;	state Exp;
branches;
next	1.51;

1.51
date	2010.06.24.13.25.18;	author leith;	state Exp;
branches;
next	1.50;

1.50
date	2009.05.22.13.52.44;	author leith;	state Exp;
branches;
next	1.49;

1.49
date	2009.03.23.14.45.15;	author leith;	state Exp;
branches;
next	1.48;

1.48
date	2005.10.17.19.56.55;	author leith;	state Exp;
branches;
next	1.47;

1.47
date	2005.10.17.17.53.26;	author leith;	state Exp;
branches;
next	1.46;

1.46
date	2005.01.13.20.09.33;	author leith;	state Exp;
branches;
next	1.45;

1.45
date	2004.12.14.17.39.25;	author leith;	state Exp;
branches;
next	1.44;

1.44
date	2004.02.05.14.14.23;	author leith;	state Exp;
branches;
next	1.43;

1.43
date	2003.10.30.19.45.57;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	2003.10.14.12.41.10;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	2003.07.21.15.48.57;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	2003.03.14.14.46.19;	author leith;	state Exp;
branches;
next	1.39;

1.39
date	2003.03.10.19.26.02;	author leith;	state Exp;
branches;
next	1.38;

1.38
date	2003.02.28.19.23.04;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2003.02.20.19.54.04;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2003.01.28.21.42.24;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2003.01.23.15.51.43;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2002.03.04.19.17.41;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2002.02.22.18.06.25;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2001.09.14.19.09.46;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2001.06.25.16.14.18;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2000.10.30.19.01.43;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	99.10.21.19.02.45;	author bimal;	state Exp;
branches;
next	1.28;

1.28
date	99.10.21.19.00.39;	author bimal;	state Exp;
branches;
next	1.27;

1.27
date	99.09.09.14.29.59;	author pawel;	state Exp;
branches;
next	1.26;

1.26
date	99.02.24.16.56.24;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	99.02.23.19.43.35;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	99.02.11.15.56.45;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	99.02.09.15.11.11;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	99.02.09.15.00.03;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	99.02.05.16.25.58;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	99.02.03.19.15.45;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	98.10.27.17.48.12;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	97.12.10.17.09.38;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	97.12.08.16.58.45;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	97.09.24.17.53.11;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	97.09.24.16.47.21;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	97.09.23.18.11.23;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	97.07.17.20.07.32;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	97.07.15.18.27.14;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	97.07.14.16.52.19;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.03.18.20.49.33;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	97.03.17.16.36.56;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	97.03.17.16.06.06;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.12.16.16.45.22;	author liy;	state Exp;
branches;
next	1.6;

1.6
date	96.11.20.17.13.16;	author liy;	state Exp;
branches;
next	1.5;

1.5
date	96.10.31.15.58.26;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.10.04.15.30.54;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	96.10.03.19.22.12;	author liy;	state Exp;
branches;
next	1.2;

1.2
date	96.09.30.20.00.17;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	96.09.27.20.44.26;	author liy;	state Exp;
branches;
next	;


desc
@new routine for handling <CP> commands
@


1.66
log
@added 'CP TO STK'
@
text
@C++*********************************************************************
C
C  COPY1.F      REMOVED FROM UTIL2                  JUL 96 ArDean Leith
C               ADDED NT INTERFACES                 OCT 98 ArDean Leith
C               REMOVED 'CP FROM LUM'               FEB 99 ArDean Leith
C               ADDED 'CP FROM XP'                  OCT 00 Pawel Penczek
C               'CP TO NT' ON NT                    JUN 01 ArDean Leith
C               'CP FROM SG' ON NT                  SEP 01 ArDean Leith
C               'CP TO/FROM CCP4'                   FEB 02 ArDean Leith
C               'CP FROM EMI'                       FEB 02 ArDean Leith
C               INDEXED STACK                       JAN 02 ArDean Leith
C               'CP TO OPEND'                       FEB 03 ArDean Leith
C               'CP TO' NORM                        JUL 03 ArDean Leith
C               'CP FIX' REMOVED                    OCT 03 ArDean Leith
C               MPI                                 OCT 03 Chao Yang
C               'CP TO SF3' GONE                    DEC 04 ArDean Leith
C               'CP FROM NIK'                       JAN 05 ArDean Leith
C               'CP TO PDS' GONE                    MAR 09 ArDean Leith
C               'CP TO SGI' GONE                    MAY 09 ArDean Leith
C               'CP TO VV'  GONE                    DEC 10 ArDean Leith
C               'CCP4' NOW JUST MRC                 FEB 12 ArDean Leith
C               'CP TO JPG'                         APR 13 ArDean Leith
C               'CP TO VOL'                         MAY 13 ArDean Leith
C               'CP FROM TIF'                       MAR 14 ArDean Leith
C               'CP TO MRC' STACKS                  JUN 15 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2015  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  COPY1(MAXDIM)
C
C  PARAMETERS:      MAXDIM         MAX LENGTH FOR UNLABELED COMMON
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE COPY1(MAXDIM)

        IMPLICIT NONE

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        INTEGER               :: MAXDIM
        INTEGER               :: ICOMM,MYPID,MPIERR
        INTEGER               :: NILMAX,IRTFLG,NLET,ITYPE,NX,NY,NZ,NE
        INTEGER               :: MAXIM,NDUM,NIMG,IMGNUM,LOCAT,LOCAST
        LOGICAL               :: VERBOSET       

        CHARACTER(LEN=MAXNAM) :: FILOLD,FILNEW
        INTEGER, ALLOCATABLE  :: ILIST(:)

        CHARACTER(LEN=1)      :: NULL = CHAR(0)
        LOGICAL               :: INDXD,FLIPOUT,ASKNAM,FOUROK,BARE
        LOGICAL               :: ISSTACK

        INTEGER,PARAMETER     :: IDELAY  = 3

        INTEGER, PARAMETER    :: LUN1    = 14 
        INTEGER, PARAMETER    :: LUN2    = 15 
        INTEGER, PARAMETER    :: LUNT    = 16 
        INTEGER, PARAMETER    :: LUNDOC  = 81 
        INTEGER, PARAMETER    :: LUNDOC2 = 82 
        INTEGER, PARAMETER    :: LUNXM1  = 83 
        INTEGER, PARAMETER    :: LUNXM2  = 84 

C       FROM/'AS','MR','PD','RA','NI','TE','VA','EM','NT','XP'
C       TO  /'AS','BR','MR','PO','RA','TI','XP','OP','JPG'  

        CALL SET_MPI(ICOMM,MYPID,MPIERR) ! SETS ICOMM AND MYPID

        IF (FCHAR(4:7) == 'TO O') THEN !----------------- 'CP TO OPEND'
C          STANDARD COPY WITH FLIPPED ENDEDNESS
           INDXD   = .FALSE.
           FLIPOUT = .TRUE.
           CALL COPYD(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,INDXD,FLIPOUT)
           GOTO 9000

        ELSEIF (FCHAR(4:7) == 'TO V') THEN !--------------- 'CP TO VOL'
C          SPIDER IMAGE(S) FILE INTO VOLUME FILES '
           CALL COPYTOVOL()
           GOTO 9000

        ELSEIF (FCHAR(4:8) == 'TO ST') THEN !-------------- 'CP TO STK'
C          SPIDER STACK(S) INTO A SINGLE STACK '
           CALL COPYTOSTK()
           GOTO 9000

        ENDIF

C                                    12345678     1234567890
        SELECT CASE(FCHAR(4:5))   ! 'CP TO XX' , 'CP FROM XX'

#if defined(SP_IFC) || defined(__INTEL_COMPILER) 
        CASE ('I')      ! --------------------------------------- 'CP I'
#else
#if defined(__GFORTRAN__) 
        CASE ('I')      ! --------------------------------------- 'CP I'
#else
        CASE ('I','I ') ! --------------------------------------- 'CP I'
#endif
#endif
C          STANDARD COPY TO INDEXED STACK
           INDXD   = .TRUE.
           FLIPOUT = .FALSE.
           CALL COPYD(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,INDXD,FLIPOUT)

        CASE ('')    ! ------------------------------------------ 'CP'
C          STANDARD COPY 
           INDXD   = .FALSE.
           FLIPOUT = .FALSE.
           CALL COPYD(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,INDXD,FLIPOUT)


        CASE ('TO')  ! ------------------------------------- 'CP TO **'

C          OPEN INPUT IMAGE(S), (NOT FOURIER)
           NILMAX = NIMAX  ! FROM CMLIMIT.INC
           ALLOCATE(ILIST(NILMAX), STAT=IRTFLG)
           IF (IRTFLG .NE. 0) THEN
              CALL ERRT(46,'COPY1; ILIST....',NILMAX)
              RETURN
           ENDIF

           ASKNAM = .TRUE.
           FOUROK = .FALSE.
           CALL OPFILES(0,LUN1,LUNDOC,LUNXM1, 
     &                  ASKNAM,FILOLD,NLET, 'O',
     &                  ITYPE,NX,NY,NZ,MAXIM,
     &                  'SPIDER INPUT',
     &                  FOUROK,ILIST,NILMAX, 
     &                  NDUM,NIMG,IMGNUM, IRTFLG) 
           IF (IRTFLG .NE. 0) RETURN

           LOCAT   = INDEX(FILOLD,'@@')
           LOCAST  = INDEX(FILOLD,'*')
           ISSTACK = (MAXIM > 0)                    ! USING A STACK
           BARE    = (LOCAT > 0 .AND. LOCAT == NLET)  ! BARESTACK


           IF (FCHAR(7:9) .NE. 'MRC') THEN
              IF (BARE) THEN
                 CALL ERRT(101,
     &                  'THIS OPERATION CAN NOT COPY A WHOLE STACK',NE)
                 RETURN
              ENDIF
              IF (IMAMI .NE. 1) 
     &            CALL NORM3(LUN1,NX,NY,NZ,FMAX,FMIN,AV)
           ENDIF


           SELECT CASE(FCHAR(7:8)) 

           CASE ('AS') 
C             FROM SPIDER IMAGE INTO EDITABLE IMAGE ------ 'CP TO ASCII'
              CALL COPYE(LUN1,LUN2,NX,NY,NZ)

           CASE ('BR')
C             FROM 3D SPIDER FILE TO BRIX FORMAT----------- 'CP TO BRIX'
              CALL COPYBRIX(LUN1,LUN2,NX,NY,NZ)

           CASE ('MR','CC')
C             FROM SPIDER IMAGE FILE INTO MRC FORMAT ------- 'CP TO MRC'

              IF (ISSTACK) THEN 
C                COPYING WHOLE STACK
                 CALL COPYTOCCP4_STK(LUN1,LUN2,FILOLD, 
     &                             ILIST,NIMG,MAXIM,
     &                             NX,NY,NZ)
             ELSE
C                COPYING IMAGE/VOLUME
                 CALL COPYTOCCP4(LUN1,LUN2,NX,NY,NZ)
              ENDIF

           CASE ('PO')
C             FROM SPIDER TO POSTSCRIPT IMAGE (8 BIT)------ 'CP TO POST'
              CALL COPYPOS(FILOLD,LUN1,LUN2,NX, NY, NZ)

           CASE ('RA')
C             FROM SPIDER IMAGE FILE INTO RAW IMAGE FILE --- 'CP TO RAW'
              CALL COPYU(LUN1,LUN2,NX,NY,NZ)
 
           CASE ('TI')
C             FROM SPIDER FORMAT TO TIFF FORMAT ----------- 'CP TO TIFF'
              CALL SPDTOTIFF(LUN1,LUN2,NX,NY,NZ,IRTFLG)
 
           CASE ('XP')
C             SPIDER IMAGE FILE INTO XPLOR FILES --------- 'CP TO XPLOR'
              CALL COPYTOXPLOR(LUN1,FILOLD,LUN2,NX,NY,NZ)

           CASE ('JP')
C             SPIDER IMAGE FILE INTO JPG FILES ------------- 'CP TO JPG'
              VERBOSET = VERBOSE  ! FROM CMBLOCK
              FILNEW   = NULL
              CALL COPYTOJPG(LUN1,LUNT,FILNEW,NX,NY,NZ,
     &                       VERBOSET,IDELAY)

           CASE DEFAULT
C             NO SUCH COPY FUNCTION
              CALL ERRT(101,'NO SUCH CP OPERATION, CHECK MENU',NE)
          
           END SELECT



        CASE ('FR') !  CP FROM OPERATIONS ----------------------------

           SELECT CASE(FCHAR(9:10))

           CASE ('AS')
C             EDITABLE IMAGE FILE TO SPIDER IMAGE FILE - 'CP FROM ASCII'
              CALL COPYF(LUN1,LUN2)

           CASE ('MR','CC')
C             FROM MRC FORMAT TO SPIDER ------------------ 'CP FROM MRC'
              CALL COPYFROMCCP4(LUN1,LUN2,NX,NY,NZ)

           CASE ('PD')
C             FROM PDB FILE TO SPIDER VOLUME FILE -------- 'CP FROM PDB'
              CALL READPDB

           CASE ('RA')
C             COPY RAW IMAGE FILE INTO SPIDER IMAGE FILE - 'CP FROM RAW'
              CALL RAWTOSPIDER(LUN1,LUN2,IRTFLG)

           CASE ('NI')
C             NIKON TIFF IMAGE FILE INTO SPIDER FILE ----- 'CP FROM NIK'
              CALL COPYFROMNIK(LUN1,LUN2,IRTFLG)

           CASE ('TE')
C             FROM TERMINAL INTO SPIDER IMAGE FILE ------ 'CP FROM TERM'
              CALL COPYR(LUN2)
          
           CASE ('VA')
C             VAX SPIDER TO UNIX SPIDER ------------------ 'CP FROM VAX'
              FILOLD = NULL
              FILNEW = NULL
              CALL VAXTOUNIX(FILOLD,FILNEW,LUN1,LUN2,IRTFLG)
 
           CASE ('EM')
C             EMI FORMAT TO SPIDER ----------------------- 'CP FROM EMI'
              CALL COPYEMI(LUN1,LUN2)

           CASE ('NT')
C             FROM NT FORMAT TO SPIDER -------------------- 'CP FROM NT'
              CALL ERRT(101,'USE OPERATION: <CP TO OPEND> ',NE)

           CASE ('XP')
C             FROM XPLO FORMAT TO SPIDER ------------------ 'CP FROM XP'
              CALL COPYFROMXPLO(LUN1,LUN2,MAXDIM)

           CASE ('SG')
C             FROM TO SGI BYTE FORMAT --------------------- 'CP FROM SG'
              CALL ERRT(101,"USE OPERATION: <CP TO OPEND> ",NE)

           CASE ('TI')
C             FROM TIFF TO SPIDER FORMAT ----------------- 'CP FROM TIF'
               CALL COPYFROMTIF(LUN1,LUN2,IRTFLG)


           CASE DEFAULT
C             NO SUCH COPY FUNCTION
              CALL ERRT(101,"NO SUCH 'CP' OPERATION, CHECK MENU",NE)

           END SELECT

        CASE DEFAULT
           CALL ERRT(101,'NO SUCH CP OPERATION, CHECK MENU',NE)

        END SELECT

9000    CLOSE(LUN1)
        CLOSE(LUN2)
        IF (ALLOCATED(ILIST)) DEALLOCATE(ILIST)

        END

#ifdef NEVER
        write(6,*) '  filold:',filold(1:nlet)
        write(6,*) '  locat:',locat
        write(6,*) '  locast:',locast
        write(6,*) '  nlet:',nlet
        write(6,*) '  isstack:',isstack
        write(6,*) '  maxim:',maxim
        write(6,*) '  nimg: ',nimg
        write(6,*) '  bare: ',bare
        stop
#endif
@


1.65
log
@added copy from mrc stk support
@
text
@d102 6
d159 1
d296 12
@


1.64
log
@'DIS' added
@
text
@d3 23
a25 22
C  COPY1.F                   REMOVED FROM UTIL2    JUL 96 ArDean Leith
C                            ADDED NT INTERFACES   OCT 98 ArDean Leith
C                            REMOVED 'CP FROM LUM' FEB 99 ArDean Leith
C                            ADDED 'CP FROM XP'    OCT 00 Pawel Penczek
C                            'CP TO NT' ON NT      JUN 01 ArDean Leith
C                            'CP FROM SG' ON NT    SEP 01 ArDean Leith
C                            'CP TO/FROM CCP4'     FEB 02 ArDean Leith
C                            'CP FROM EMI'         FEB 02 ArDean Leith
C                            INDEXED STACK         JAN 02 ArDean Leith
C                            'CP TO OPEND'         FEB 03 ArDean Leith
C                            'CP TO' NORM          JUL 03 ArDean Leith
C                            'CP FIX' REMOVED      OCT 03 ArDean Leith
C                            MPI                   OCT 03 Chao Yang
C                            'CP TO SF3' GONE      DEC 04 ArDean Leith
C                            'CP FROM NIK'         JAN 05 ArDean Leith
C                            'CP TO PDS' GONE      MAR 09 ArDean Leith
C                            'CP TO SGI' GONE      MAY 09 ArDean Leith
C                            'CP TO VV'  GONE      DEC 10 ArDean Leith
C                            'CCP4' NOW JUST MRC   FEB 12 ArDean Leith
C                            'CP TO JPG'           APR 13 ArDean Leith
C                            'CP TO VOL'           MAY 13 ArDean Leith
C                            'CP FROM TIF'         MAR 14 ArDean Leith
d31 1
a31 1
C=* Copyright 1985-2014  Health Research Inc.,                         *
d58 2
d63 6
d70 2
a71 1
 
d73 2
a74 1
        LOGICAL               :: INDXD,FLIPOUT
d86 2
a87 3
C       FROM/'AS','MR','PD','RA','NI','TE','VA','EM','NT','XP'/
  
C       TO/'AS','BR','MR','PO','RA','TI','XP','OP','JPG'/  
d116 1
a116 2

C          STANDARD COPY OR STANDARD COPY TO INDEXED STACK
d121 1
a121 1
        CASE ('')    ! -------------------------------------------- 'CP'
d128 1
d130 32
a161 8
        CASE ('TO')  ! -------------------------------- ----- 'CP TO **'

C          OPEN INPUT FILE, WHOLE STACK NOT ALLOWED
           MAXIM = 0
           CALL OPFILEC(0,.TRUE.,FILOLD,LUN1,'O',ITYPE,
     &                   NX1,NY1,NZ1,MAXIM,'SPIDER INPUT',
     &                   .FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000
a162 2
           IF (IMAMI .NE. 1) 
     &         CALL NORM3(LUN1,NX1,NY1,NZ1,FMAX,FMIN,AV)
d168 1
a168 1
              CALL COPYE(LUN1,LUN2,NX1,NY1,NZ1)
d172 1
a172 1
              CALL COPYBRIX(LUN1,LUN2,NX1,NY1,NZ1)
d176 10
a185 2
              CALL COPYCCP4(LUN1,LUN2,NX1,NY1,NZ1)
              ! OBSOLETE CALL COPYMRC(LUN1,LUN2,NX1,NY1,NZ1)
d189 1
a189 1
              CALL COPYPOS(FILOLD,LUN1,LUN2,NX1, NY1, NZ1)
d193 1
a193 1
              CALL COPYU(LUN1,LUN2,NX1,NY1,NZ1)
d197 1
a197 1
              CALL SPDTOTIFF(LUN1,LUN2,NX1,NY1,NZ1,IRTFLG)
d201 1
a201 1
              CALL COPYTOXPLOR(LUN1,FILOLD,LUN2,NX1,NY1,NZ1)
d207 1
a207 1
              CALL COPYTOJPG(LUN1,LUNT,FILNEW,NX1,NY1,NZ1,
d212 1
a212 1
              CALL ERRT(101,'NO SUCH CP OPERATION, CHECK MENU',IDUM)
d228 1
a228 2
              CALL COPYCCP4(LUN1,LUN2,NSAM,NROW,NSLICE)
              ! NO LONGER SUPPORTED: COPYMRC(LUN1,LUN2,NX,NY,NZ)
d258 1
a258 1
              CALL ERRT(101,'USE OPERATION: <CP TO OPEND> ',IDUM)
d266 1
a266 1
              CALL ERRT(101,"USE OPERATION: <CP TO OPEND> ",IDUM)
a273 1

d275 1
a275 1
              CALL ERRT(101,"NO SUCH 'CP' OPERATION, CHECK MENU",IDUM)
d280 1
a280 1
           CALL ERRT(101,'NO SUCH CP OPERATION, CHECK MENU',IDUM)
d286 1
@


1.63
log
@cp from tif
@
text
@a51 2
C  SUPPORT_ROUTINE
C
d65 2
d165 4
a168 1
              CALL COPYTOJPG(LUN1,LUNT,NX1,NY1,NZ1)
@


1.62
log
@added 'CP TO VOL'
@
text
@d24 1
d30 1
a30 1
C=* Copyright 1985-2013  Health Research Inc.,                         *
d225 5
@


1.61
log
@copytojpg params cleaned, detab, unused var removed
@
text
@d23 1
d80 1
a80 1
        IF (FCHAR(4:7) == 'TO O') THEN !---------------- 'CP TO OPEND'
d86 5
d117 2
d171 1
@


1.60
log
@if defined(__GFORTRAN__)
@
text
@d57 2
a58 2
	INCLUDE 'CMBLOCK.INC'
	INCLUDE 'CMLIMIT.INC'
a61 3
	INTEGER, PARAMETER    :: NFROM = 17 
	INTEGER, PARAMETER    :: NTO   = 9 
        CHARACTER (LEN=2)     :: FROM(NFROM), TO(NTO)
d65 7
a71 7
	INTEGER, PARAMETER    :: LUN1    = 14 
	INTEGER, PARAMETER    :: LUN2    = 15 
	INTEGER, PARAMETER    :: LUNT    = 16 
	INTEGER, PARAMETER    :: LUNDOC  = 81 
	INTEGER, PARAMETER    :: LUNDOC2 = 82 
	INTEGER, PARAMETER    :: LUNXM1  = 83 
	INTEGER, PARAMETER    :: LUNXM2  = 84 
d73 1
a73 1
C	FROM/'AS','MR','PD','RA','NI','TE','VA','EM','NT','XP'/
d75 1
a75 1
C	TO/'AS','BR','MR','PO','RA','TI','XP','OP','JPG'/  
d79 1
a79 1
	IF (FCHAR(4:7) == 'TO O') THEN !---------------- 'CP TO OPEND'
d82 2
a83 2
	   FLIPOUT = .TRUE.
	   CALL COPYD(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,INDXD,FLIPOUT)
d91 1
a91 1
	CASE ('I')      ! --------------------------------------- 'CP I'
d94 1
a94 1
	CASE ('I')      ! --------------------------------------- 'CP I'
d96 1
a96 1
	CASE ('I','I ') ! --------------------------------------- 'CP I'
d102 1
a102 1
	   FLIPOUT = .FALSE.
d105 1
a105 1
	CASE ('')    ! -------------------------------------------- 'CP'
d108 2
a109 2
	   FLIPOUT = .FALSE.
	   CALL COPYD(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,INDXD,FLIPOUT)
d118 1
a118 1
	   IF (IRTFLG .NE. 0) GOTO 9000
d125 1
a125 1
	   CASE ('AS') 
d129 1
a129 1
	   CASE ('BR')
d133 1
a133 1
	   CASE ('MR','CC')
d138 1
a138 1
	   CASE ('PO')
d142 1
a142 1
	   CASE ('RA')
d146 1
a146 1
	   CASE ('TI')
d150 1
a150 1
	   CASE ('XP')
d154 1
a154 1
	   CASE ('JP')
d156 1
a156 1
              CALL COPYTOJPG(LUN1,FILOLD,LUNT,NX1,NY1,NZ1)
d158 2
a159 2
 	   CASE DEFAULT
C	      NO SUCH COPY FUNCTION
d161 1
a161 1
	  
d218 1
a218 1
C	      NO SUCH COPY FUNCTION
@


1.59
log
@cp to jpg
@
text
@d96 3
d100 1
@


1.58
log
@#if defined(SP_IFC) || defined(__INTEL_COMPILER)
@
text
@d22 1
d28 1
a28 1
C=* Copyright 1985-2012  Health Research Inc.,                         *
d68 3
a70 2
	INTEGER, PARAMETER    :: LUN1 = 14 
	INTEGER, PARAMETER    :: LUN2 = 15 
d78 1
a78 1
C	TO/'AS','BR','MR','PO','RA','TI','XP','OP'/  
d82 1
a82 1
	IF (FCHAR(4:7) .EQ. 'TO O') THEN !---------------- 'CP TO OPEND'
d115 1
a115 1
     &                   NSAM1,NROW1,NSLICE1,MAXIM,'SPIDER INPUT',
d120 1
a120 1
     &         CALL NORM3(LUN1,NSAM1,NROW1,NSLICE1,FMAX,FMIN,AV)
d126 1
a126 1
              CALL COPYE(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
d130 1
a130 1
              CALL COPYBRIX(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
d134 2
a135 2
              CALL COPYCCP4(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
              ! OBSOLETE CALL COPYMRC(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
d139 1
a139 1
              CALL COPYPOS(FILOLD,LUN1,LUN2,NSAM1, NROW1, NSLICE1)
d143 1
a143 1
              CALL COPYU(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
d147 1
a147 1
              CALL SPDTOTIFF(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IRTFLG)
d151 5
a155 1
              CALL COPYTOXPLOR(LUN1,FILOLD,LUN2,NSAM1,NROW1,NSLICE1)
d175 1
a175 1
              ! NO LONGER SUPPORTED: COPYMRC(LUN1,LUN2,NSAM,NROW,NSLICE)
d213 1
a213 1
              CALL ERRT(101,'USE OPERATION: <CP TO OPEND> ',IDUM)
d218 1
a218 1
              CALL ERRT(101,'NO SUCH CP OPERATION, CHECK MENU',IDUM)
@


1.57
log
@#ifndef SP_IFC for : CASE ('I')
@
text
@d91 1
a91 1
#ifndef SP_IFC
@


1.56
log
@ccp4 stuff now for mrc
@
text
@d91 3
d95 2
@


1.55
log
@cp to opend , no such op bug
@
text
@d21 1
d27 1
a27 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d74 1
a74 1
C	FROM/'AS','MR','PD','RA','NI','TE','VA','EM','NT','XP','CC'/
d76 1
a76 1
C	TO/'AS','BR','MR','PO','RA','TI','XP','CC','OP'/  
d91 1
a91 1
	CASE ('I','I ') ! ------------------------------------ 'CP I'
d97 1
a97 1
	CASE ('')    ! --------------------------------------- 'CP'
d103 1
a103 1
        CASE ('TO')  ! --------------------------------------- 'CP TO **'
d125 1
a125 1
	   CASE ('MR')
d127 2
a128 1
              CALL COPYMRC(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
d131 1
a131 1
C             FROM SPIDER IMAGE TO POSTSCRIPT IMAGE (8 BIT)- 'CP TO POST'
a145 4
	   CASE ('CC')
C             FROM SPIDER IMAGE FILE INTO CCP4 FORMAT ----- 'CP TO CCP4'
              CALL COPYCCP4(LUN1,LUN2,NSAM1,NROW1,NSLICE1)

d158 1
a158 2

C             EDITABLE IMAGE FILE TO SPIDER IMAGE FILE -- 'CP FROM ASCII'
d161 1
a161 1
           CASE ('MR')
d163 2
a164 1
              CALL COPYMRC(LUN1,LUN2,NSAM,NROW,NSLICE)
d171 1
a171 1
C             COPY RAW IMAGE FILE INTO SPIDER IMAGE FILE -- 'CP FROM RAW'
a202 4

           CASE ('CC')
C             CCP4 FORMAT TO SPIDER ----------------------- 'CP FROM CC'
              CALL COPYCCP4(LUN1,LUN2,NSAM,NROW,NSLICE)
@


1.54
log
@typo
@
text
@d79 8
d90 1
a90 1
	CASE ('I') ! ------------------------------------------- 'CP I'
d96 1
a96 7
	CASE ('TO O') ! --------------------------------- 'CP TO OPEND'
C          STANDARD COPY WITH FLIPPED ENDEDNESS
           INDXD   = .FALSE.
	   FLIPOUT = .TRUE.
	   CALL COPYD(LUN1,LUN2,LUNDOC,LUNXM1,LUNXM2,INDXD,FLIPOUT)

	CASE ('')    ! ------------------------------------------- 'CP'
@


1.53
log
@rewrite, removed obsolete calls, used 'case'
@
text
@d80 1
a80 1
        SELECT CASE(FCHAR(4:6))   ! 'CP TO XX' , 'CP FROM XX'
@


1.52
log
@'CP TO VV'  GONE
@
text
@d63 2
a64 2
        CHARACTER(LEN=1)      :: NULL
        LOGICAL               :: INDXD
d66 8
a73 4
	DATA FROM/'AS','MR','PD','RA','NI',
     &            'SH','TE','VA','LU','EM',
     &            'SC','TR','PE','NT','XP',
     &            '##','CC'/
d75 1
a75 2
	DATA   TO/'AS','BR','MR','PO','RA',
     &            'TI','XP','CC','OP'/  
d79 10
a88 9
	NULL   = CHAR(0)
	LUN1   = 14
	LUN2   = 15

C       TEST THE FUNC FIRST

	IF ((FCHAR(4:4) .EQ. 'I') .OR.
     &      (FCHAR(4:4) .EQ. ' ') .OR.
     &      (FCHAR(4:8) .EQ. 'TO OP')) THEN
d90 11
a100 1
C          STANDARD COPY OR STANDARD COPY TO INDEXED STACK
d102 2
a103 2
C	   OPEN EXISTING INPUT FILE, CAN BE A BARE STACK
           NSTACKIN = 1
a104 29
     &             NSAM,NROW,NSLICE,NSTACKIN,'INPUT',.TRUE.,IRTFLG) 
          IF (IRTFLG .NE. 0) RETURN

          IFLIPOUT = 0
	  IF (FCHAR(4:8) .EQ. 'TO OP') THEN
C            STANDARD COPY WITH FLIPPED ENDEDNESS
             CALL LUNGETFLIP(LUN1,IFLIPIN,IRTFLG)
             IF (IFLIPIN .NE. 1) IFLIPOUT = 1
           ENDIF

          INDXD   = (FCHAR(4:4) .EQ. 'I')
	  CALL COPYD(LUN1,LUN2,INDXD,NSAM,NROW,NSLICE,
     &               NSTACKIN,ITYPE,IFLIPOUT)
	  GOTO 9000


	ELSEIF (FCHAR(4:5) .EQ. 'TO') THEN
C         OPERATION ----------- COPY TO ----------------------- 'CP TO' 
          IC = 7
          DO  IFUNC = 1, NTO
            IF (FCHAR(IC:IC+1) .EQ. TO(IFUNC)) THEN

C             COPY SPIDER FORMAT TO FOREIGN FORMAT
	      IF (FCHAR(IC:IC+2) .NE. 'SF3'  .AND.
     &            FCHAR(IC:IC+2) .NE. 'VAX') THEN

C                 OPEN INPUT FILE, WHOLE STACK NOT ALLOWED
                  MAXIM = 0
                  CALL OPFILEC(0,.TRUE.,FILOLD,LUN1,'O',ITYPE,
d107 34
a140 1
	          IF (IRTFLG .NE. 0) GOTO 9000
d142 39
a180 94
                  IF (IMAMI .NE. 1) 
     &               CALL NORM3(LUN1,NSAM1,NROW1,NSLICE1,FMAX,FMIN,AV)
	      ENDIF

C                   AS,BR,MR,PO,RA,TI,XP,CC
              GOTO (20,21,22,23,24,27,30,33)IFUNC
            ENDIF
          ENDDO

C	  NO SUCH COPY FUNCTION
          CALL ERRT(101,'NO SUCH CP OPERATION, CHECK MENU',IDUM)
	  RETURN

	ELSEIF (FCHAR(4:7) .EQ. 'FROM') THEN
C         OPERATION ----------- COPY FROM ------------------- 'CP FROM' 
C         COPY FROM FOREIGN FORMAT TO SPIDER
          IC = 9
          DO  IFUNC = 1, NFROM
            IF (FCHAR(IC:IC+1) .EQ. FROM(IFUNC)) THEN
            GOTO (50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66)
     &          IFUNC
            ENDIF
          ENDDO
        ENDIF

        CALL ERRT(101,'NO SUCH CP OPERATION, CHECK MENU',NERRD)
        RETURN


C	--------------- CP TO OPERATIONS -----------------------------

C       COPY SPIDER IMAGE FILE INTO EDITABLE IMAGE ------ 'CP TO ASCII'
20      CALL COPYE(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
        GOTO 9000

C       COPY 3D SPIDER FILE TO BRIX FORMAT-----------------'CP TO BRIX'
21      CALL COPYBRIX(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
        GOTO 9000

C       MRC'S FORMAT FOR TRANSFERING TO CAMBRIDGE --------- 'CP TO MRC'
C       COPY FROM SPIDER IMAGE FILE INTO MRC FORMAT
22      CALL COPYMRC(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
        GOTO 9000

C       SPIDER IMAGE TO POSTSCRIPT IMAGE (8 BIT) --------- 'CP TO POST'
23      CALL COPYPOS(FILOLD,LUN1,LUN2,NSAM1, NROW1, NSLICE1)
        GOTO 9000

C       COPY SPIDER IMAGE FILE INTO RAW IMAGE FILE -------- 'CP TO RAW'
24      CALL COPYU(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
        GOTO 9000

C       CONVERT FROM SPIDER FORMAT TO TIFF FORMAT -------- 'CP TO TIFF'
27      CALL SPDTOTIFF(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IRTFLG)
        GOTO 9000

C       COPY SPIDER IMAGE FILE INTO XPLOR FILES -----------'CP TO XPLOR'
30      CALL COPYTOXPLOR(LUN1,FILOLD,LUN2,NSAM1,NROW1,NSLICE1)
        GOTO 9000

C       COPY FROM SPIDER IMAGE FILE INTO CCP4 FORMAT ----- 'CP TO CCP4'
33      CALL COPYCCP4(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
        GOTO 9000

C	--------------- CP FROM OPERATIONS ----------------------------

C       EDITABLE IMAGE FILE TO SPIDER IMAGE FILE ------ 'CP FROM ASCII'
50      CALL COPYF(LUN1,LUN2)
        GOTO 9000

C       MRC'S FORMAT TO SPIDER -------------------------- 'CP FROM MRC'
C       COPY FROM MRC FORMAT INTO SPIDER IMAGE FILE
51      CALL COPYMRC(LUN1,LUN2,NSAM,NROW,NSLICE)
        GOTO 9000

C       COPY A PDB FILE INTO SPIDER VOLUME FILE --------- 'CP FROM PDB'
52      CALL READPDB
        GOTO 9000

C       COPY RAW IMAGE FILE INTO SPIDER IMAGE FILE ------ 'CP FROM RAW'
53      CALL RAWTOSPIDER(LUN1,LUN2,IRTFLG)
        GOTO 9000

C       COPY NIKON TIFF IMAGE FILE INTO SPIDER IMAGE FILE - 'CP FROM NIK'
54      CALL COPYFROMNIK(LUN1,LUN2,IRTFLG)
        GOTO 9000

C       SHORT HEADER FILE TO REGULAR HEADER FILE ------ 'CP FROM SHORT'
55      CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)
        GOTO 9000

C       COPY FROM TERMINAL INTO SPIDER IMAGE FILE ------- 'CPFROM TERM'
56      CALL COPYR(LUN2)
        GOTO 9000
d182 37
a218 43
C       COPY VAX SPIDER TO UNIX SPIDER ------------------ 'CP FROM VAX'
57      FILOLD = NULL
        FILNEW = NULL
        CALL VAXTOUNIX(FILOLD,FILNEW,LUN1,LUN2,IRTFLG)
        GOTO 9000

C			--------------------------------- 'CP FROM LUM'	
C       COPY TWO ILUMINATION LEVEL IMAGES INTO A MERGED THIRD IMAGE
58      CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)
        GOTO 9000

C       EMI FORMAT TO SPIDER ---------------------------- 'CP FROM EMI'
59      CALL COPYEMI(LUN1,LUN2)
        GOTO 9000

C       EIKONIX SCAN PROGRAMS (REMOVED 1994)
60      CALL ERRT(101,'EIKONIX SUBROUTINES NO LONGER SUPPORTED',NE)
        GOTO 9000

C       COPY FROM MICRO D TAPE FORMAT TO SPIDER  --------- 'CP FROM TR'
61      CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)
        GOTO 9000

C       COPY FROM MICRO D ONDISK FORMAT TO SPIDER  ------- 'CP FROM PE'
62      CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)
        GOTO 9000

C       COPY FROM NT FORMAT TO SPIDER -------------------- 'CP FROM NT'
63      CALL ERRT(101,'USE OPERATION: <CP TO OPEND> ',IDUM)
        GOTO 9000

C       COPY FROM XPLO FORMAT TO SPIDER ------------------ 'CP FROM XP'
64      CALL COPYFROMXPLO(LUN1,LUN2,MAXDIM)
        GOTO 9000

C       COPY FROM TO SGI BYTE FORMAT -------------------- 'CP FROM SG'
65      CALL ERRT(101,'USE OPERATION: <CP TO OPEND> ',IDUM)
        GOTO 9000

C       CCP4 FORMAT TO SPIDER -------------------------- 'CP FROM CC'
66      MODE = -1
        CALL COPYCCP4(LUN1,LUN2,NSAM,NROW,NSLICE)
        GOTO 9000
a222 1
        RETURN
@


1.51
log
@GPL_2010
@
text
@d20 1
d59 6
a64 7
        COMMON /COMMUN/          FILOLD,FILNEW

	PARAMETER           (NFROM=17)
	PARAMETER           (NTO=14)
        CHARACTER *2        FROM(NFROM), TO(NTO)
        CHARACTER(LEN=1) :: NULL
        LOGICAL          :: INDXD
a68 3
#ifdef SP_NT 
     &            'SG','CC'/  
#else 
a69 2
#endif

d72 4
a75 14
     &            'TA','TI','VA','VV','XP',  
#ifdef SP_NT 
     &            'SG','UN','CC','OP'/  
#else 
     &            'SG','NT','CC','OP'/ 
#endif
#ifdef USE_MPI    
        include 'mpif.h'
        INTEGER  MYPID, COMM, IERR 
        COMM = MPI_COMM_WORLD
        CALL MPI_COMM_RANK(COMM, MYPID, IERR) 
#else
        MYPID = -1
#endif  
d83 2
a84 2
     &          (FCHAR(4:4) .EQ. ' ') .OR.
     &          (FCHAR(4:8) .EQ. 'TO OP')) THEN
d127 3
a129 1
              GOTO (20,21,22,23,24,26,27,28,29,30,31,32,33)IFUNC
d176 1
a176 5
C       TO TARGA FORMAT --------------------------------- 'CP TO TARGA'
26      CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)
        GOTO 9000

C       CONVERT FROM SPIDER FORMAT TO TIFF FORMAT ------- 'CP TO TIFF'
a179 9
C       COPY UNIX SPIDER FILE TO VAX SPIDER   ------------- 'CP TO VAX'
28      CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)
C       CALL COPYVAX(LUN1,LUN2,LUN3)
        GOTO 9000

C       COPY UNIX IMAGE FILE INTO VOXEL-VIEW FILES --------- 'CP TO VV'
29      CALL UNIXTOVV(LUN1,LUN2,0,255,NSAM1,NROW1,NSLICE1,IRTFLG)
        GOTO 9000

a183 8
C       COPY UNIX IMAGE FILE INTO SGI FILES --------------- 'CP TO SGI'
31      CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)
        GOTO 9000

C       COPY UNIX IMAGE FILE INTO NT FILES ----------------- 'CP TO NT'
32      CALL ERRT(101,'USE OPERATION: <CP TO OPENEND> ',IDUM)
        GOTO 9000

a187 1

d247 1
a247 1
63      CALL ERRT(101,'USE OPERATION: <CP TO OPENEND> ',IDUM)
d255 1
a255 1
65      CALL ERRT(101,'USE OPERATION: <CP TO OPENEND> ',IDUM)
@


1.50
log
@removed spitosgi.f
@
text
@a21 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d23 5
a27 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d29 1
a29 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d34 1
a34 1
C=* This program is distributed in the hope that it will be useful,    *
d36 1
a36 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a37 1
C=*                                                                    *
d39 1
a39 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.49
log
@cpfrompds gone
@
text
@d19 1
d193 1
a193 1
C       TO TARGA FORMAT USING SGI  ---------------------- 'CP TO TARGA'
d215 1
a215 1
31      CALL SPITOSGI(LUN1,LUN2,NSAM1,NROW1,NSLICE1,0,IRTFLG)
@


1.48
log
@GPL License fixed
@
text
@d18 1
d22 1
a22 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d281 1
a281 1
62      CALL COPYPDS(LUN1,LUN2)
@


1.47
log
@HRI GPL License used
@
text
@a19 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d23 1
a23 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a42 6

C * COPYRIGHT (C)1985, 2003. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.46
log
@cp from nik   added
@
text
@d21 24
@


1.45
log
@*** empty log message ***
@
text
@d17 2
d32 1
a32 1
C SUPPORT_ROUTINE
d45 1
a45 1
	PARAMETER           (NFROM=16)
d51 1
a51 1
	DATA FROM/'AS','MR','PD','RA',
d141 1
a141 1
            GOTO (50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66)
d175 1
a175 1
26      CALL SPITOSGI(LUN1,LUN2,NSAM1,NROW1,NSLICE1,1,IRTFLG)
d227 4
@


1.44
log
@mpi changes
@
text
@d16 1
d43 2
a44 2
	PARAMETER           (NFROM=17)
	PARAMETER           (NTO=15)
d49 1
a49 1
	DATA FROM/'AS','MR','PD','RA','SF',
d60 1
a60 1
     &            'SF','TA','TI','VA','VV','XP',  
d125 1
a125 1
              GOTO (20,21,22,23,24,25,26,27,28,29,30,31,32,33)IFUNC
d139 1
a139 1
            GOTO (50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66)
a171 4
C       COPY 3D FOURIER TRANSFORM TO SIMPLE FORMAT -------- 'CP TO SF3'
25      CALL COPYFSIMPLE(LUN1,LUN2)
        GOTO 9000

a224 4
C       3D FOURIER TRANSFORM FROM SIMPLE FORMAT --------- 'CP FROM SF3'
54      CALL COPYFSIMPLE(LUN1,LUN2)
        GOTO 9000

@


1.43
log
@mpi
@
text
@a15 1
C
a64 1

d80 2
a81 2
     &      (FCHAR(4:4) .EQ. ' ') .OR.
     &      (FCHAR(4:8) .EQ. 'TO OP')) THEN
a98 7
#ifdef USE_MPI
          IF (MYPID .EQ. 0) THEN
	     CALL COPYD(LUN1,LUN2,INDXD,NSAM,NROW,NSLICE,
     &                  NSTACKIN,ITYPE,IFLIPOUT)
          ENDIF 
          CALL MPI_BCAST(IBCNT, 1, MPI_INTEGER, 0, COMM, IERR)
#else
a100 1
#endif
d179 1
a179 1
C       CONVERT FROM SPIDER FORMAT TO TIFF FORMAT -------  'CP TO TIFF'
@


1.42
log
@cp fix removed
@
text
@d15 2
d67 8
d101 7
d110 1
@


1.41
log
@norm3 before 'cp to'
@
text
@d14 1
d71 3
a73 9
	IF (FCHAR(4:6) .EQ. 'FIX') THEN
C         USE COPY TO FIX A MALFORMED STACK
          CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',NE)
C	  CALL STACKFIX(IRTFLG)
	  GOTO 9000

	ELSEIF ((FCHAR(4:4) .EQ. 'I') .OR.
     &          (FCHAR(4:4) .EQ. ' ') .OR.
     &          (FCHAR(4:8) .EQ. 'TO OP')) THEN
d171 1
a171 1
C       CONVERT FROM SPIDER FORMAT TO TIFF FORMAT ------- 'CP TO TIFF'
@


1.40
log
@removed stackfix and old errt calls for old cp routines
@
text
@d3 2
a4 2
C  COPY1.F                   REMOVED FROM UTIL2 JULY 96 ArDean Leith
C                            ADDED NT INTERFACES OCT 98 ArDean Leith
d11 1
a11 1
C                            INDEXED STACK         JAN 02 ARDEAN LEITH
d13 1
a13 1
C       
d117 3
d126 1
a126 1
          CALL ERRT(101,'**** NO SUCH CP OPERATION, CHECK MENU',IDUM)
@


1.39
log
@iflipout = 1 not 86
@
text
@d72 2
a73 1
	  CALL STACKFIX(IRTFLG)
d136 1
d138 2
a139 9
C	  NO SUCH COPY FUNCTION
          WRITE(NOUT,*) '**** NO SUCH CP OPERATION, CHECK MENU'
          CALL ERRT(100,'COPY1',NERRD)
	  RETURN

        ELSE
C         OLD COPY OPERATION
          GOTO 9922
        ENDIF
d178 1
a178 1
28      CALL ERRT(101,'NO LONGER SUPPORTED',IDUM)
d227 1
a227 1
55      WRITE(NOUT,*)'*** SUBROUTINE NO LONGER SUPPORTED'
d242 1
a242 1
58      WRITE(NOUT,*)'*** SUBROUTINE NO LONGER SUPPORTED'
d250 1
a250 2
60      WRITE(NOUT,*)'*** EIKONIX SUBROUTINES NO LONGER SUPPORTED'
        CALL ERRT(IER,'COPY1 ',NE)
d254 1
a254 1
61      WRITE(NOUT,*)'*** SUBROUTINE NO LONGER SUPPORTED'
a281 150



C       ----------- OLD 'CP' OPERATIONS   (Changed in Sept. 96 by liy)
9922    IF (FCHAR(4:5) .EQ. 'SC') THEN
C         EIKONIX SCAN PROGRAMS (REMOVED 1994)
          WRITE(NOUT,*)'**** EIKONIX SUBROUTINES NO LONGER SUPPORTED'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:7) .EQ. 'BRIX') THEN
C         COPY 3D SPIDER FILE TO BRIX FORMAT
          WRITE(NOUT,*) '**** Use <CP TO BRIX> instead ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:6) .EQ. 'SF3') THEN
C         COPY 3D FOURIER TRANSFORM TO AND FROM SIMPLE FORMAT
          WRITE(NOUT,*)'**** Use <CP TO or FROM SF3> instead ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:5) .EQ. 'SH') THEN
C         COPY SHORT HEADER FILE TO REGULAR HEADER FILE
          WRITE(NOUT,*)'**** Use <CP FROM SH> instead ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'L') THEN
C         COPY TWO ILUMINATION LEVEL IMAGES INTO A MERGED THIRD IMAGE
          WRITE(NOUT,*)'**** Use <CP FROM LUM> instead ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:6) .EQ. 'RAW') THEN
C         COPY RAW IMAGE FILE INTO SPIDER IMAGE FILE
          WRITE(NOUT,*)'**** Use <CP FROM RAW> instead ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'R') THEN
C         COPY FROM TERMINAL INTO SPIDER IMAGE FILE
          WRITE(NOUT,*)'**** Use <CP FROM TERM> instead ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'W') THEN
C         OBSOLETE IMAGE INPUT/OUTPUT REMOVED DEC 89 AL
          WRITE(NOUT,*) 'USE "CP F" INSTEAD'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN
          
        ELSEIF (FCHAR(4:5) .EQ. 'EM') THEN
C         COPY FROM EM-FORMAT TO SPIDER FORMAT
          WRITE(NOUT,*)'**** Use <CP FROM EM> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:5) .EQ. 'EF' .OR. FCHAR(4:5) .EQ. 'VF') THEN
          WRITE(NOUT,*) 'USE "CP E" INSTEAD'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:5) .EQ. 'PO') THEN
C         COPY FROM SPIDER IMAGE TO POSTSCRIPT IMAGE (8 BIT)
          WRITE(NOUT,*)'**** Use <CP TO PO> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:5) .EQ. 'JP') THEN
C         COPIES FROM JP'S FORMAT INTO SPIDER IMAGE FILE
          WRITE(NOUT,*)'**** COMMAND NO LONGER SUPPORTED'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:6) .EQ.'MRC') THEN
C         MRC'S FORMAT FOR TRANSFERING TO CAMBRIDGE (CP MRC)
C         COPY FROM MRC FORMAT INTO SPIDER IMAGE FILE
          WRITE(NOUT,*)'**** Use <CP TO or FROM MRC>  ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:5) .EQ. 'U8' .OR. FCHAR(4:6) .EQ. 'U-8'
     &          .OR. FCHAR(4:5) .EQ. 'U8n' ) THEN
C         COPY SPIDER IMAGE FILE INTO UNIX SPIDER IMAGE FILE
          WRITE(NOUT,*)'**** Use <CP TO RAW> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'U') THEN
C         COPY SPIDER IMAGE FILE INTO UNIX SPIDER IMAGE FILE
          WRITE(NOUT,*)'**** Use <CP FROM VAX> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'TIFF') THEN
C         COPY TARGA IMAGE FILE INTO UNIX SPIDER IMAGE FILE
          WRITE(NOUT,*)'**** Use <CP TO TIFF> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'T') THEN
C         COPY TARGA IMAGE FILE INTO UNIX SPIDER IMAGE FILE
          WRITE(NOUT,*)'**** Use <CP TO TARGA or TARGAV> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:5) .EQ. 'VV') THEN
C         COPY UNIX IMAGE FILE INTO VOXEL-VIEW FILES
          WRITE(NOUT,*)'**** Use <CP TO VV> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'V') THEN
C         COPY UNIX IMAGE FILE INTO VAX SPIDER IMAGE FILE
          WRITE(NOUT,*)'**** Use <CP TO VAX> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSEIF (FCHAR(4:4) .EQ. 'F') THEN
C         COPY EDITABLE IMAGE FILE INTO SPIDER IMAGE FILE
          WRITE(NOUT,*)'**** Use <CP FROM ASC> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

       ELSEIF (FCHAR(4:6) .EQ. 'PDB') THEN
C         COPY A PDB FILE INTO SPIDER VOLUME FILE
          WRITE(NOUT,*)'**** Use <CP FROM PDB> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSE IF (FCHAR(4:4).EQ.'I') THEN
C         TRAP FOR 'CP I' ROUTINE, SIXEL IMAGE OUTPUT
          WRITE(NOUT,*)'**** THIS COMMAND NO LONGER SUPPORTED'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSE IF (FCHAR(4:4).EQ.'E') THEN
C         TRAP FOR 'CP E', COPY SPIDER IMAGE FILE INTO EDITABLE IMAGE
          WRITE(NOUT,*)'**** Use <CP TO ASC> INSTEAD ****'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN

        ELSE
          WRITE(NOUT,*)
     &     '**** NO SUCH OPERATION'
          CALL ERRT(100,'COPY1 ',NE)
          RETURN
        ENDIF

@


1.38
log
@endedness
@
text
@d91 1
a91 1
             IF (IFLIPIN .NE. 1) IFLIPOUT = 86
@


1.37
log
@opfilec
@
text
@d5 2
a6 2
C                            REMOVED "CP FROM LUM" FEB 99 ArDean Leith
C                            ADDED "CP FROM XP"    OCT 00 Pawel Penczek
d10 1
a10 1
C                            'CP FROM EMI          FEB 02 ArDean Leith
d12 1
d16 1
a16 1
C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
d37 2
a38 2
        CHARACTER(LEN=MAXNAM) ::   FILOLD,FILNEW
        COMMON /COMMUN/ FILOLD,FILNEW
d40 5
a44 4
	PARAMETER       (NFROM=17)
	PARAMETER       (NTO=14)
        CHARACTER *2    FROM(NFROM), TO(NTO)
        CHARACTER       NULL
d59 1
a59 1
     &            'SG','UN','CC'/  
d61 1
a61 1
     &            'SG','NT','CC'/ 
d65 2
a66 3
	LUN1   = 8
	LUN2   = 10
	IFORM  = 1
d70 3
a72 3
	IF (FCHAR(4:4) .EQ. 'I') THEN
C         STANDARD COPY TO INDEXED STACK
	  CALL COPYD(.TRUE.,IRTFLG)
d75 22
a96 3
	ELSEIF (FCHAR(4:4) .EQ. ' ') THEN
C         STANDARD COPY
	  CALL COPYD(.FALSE.,IRTFLG)
a98 4
	ELSEIF (FCHAR(4:6) .EQ. 'FIX') THEN
C         USE COPY TO FIX A MALFORMED STACK
	  CALL STACKFIX(IRTFLG)
	  GOTO 9000
d107 1
a107 3
	      IF (FCHAR(IC:IC+2) .NE. 'MRC'  .AND.
     &            FCHAR(IC:IC+2) .NE. 'SF3'  .AND.
     &            FCHAR(IC:IC+1) .NE. 'NT'   .AND.
d112 2
a113 2
                  CALL OPFILEC(0,.TRUE.,FILOLD,LUN1,'O',IFORM,
     &                   NSAM1,NROW1,NSLICE1, MAXIM,'SPIDER INPUT',
d159 1
a159 1
22      CALL COPYMRC(LUN1,LUN2)
d200 1
a200 8
32      CONTINUE
#if  defined (SP_NT) || defined (__osf__) || defined (__linux__)
C       OLD FILE IS FOREIGN, NEW IS NATIVE
        CALL COPYFROMNT(LUN1,LUN2,IRTFLG)
#else 
C       OLD FILE IS NATIVE TYPE, NEW IS FOREIGN
        CALL COPYTONT(LUN1,LUN2,IRTFLG)
#endif
d216 1
a216 1
51      CALL COPYMRC(LUN1,LUN2)
d232 1
a232 1
55      CALL COPYSHORT(LUN1,LUN2)
d260 1
a260 1
61      CALL COPYMDTR(LUN1,LUN2)
d268 1
a268 1
63      CALL COPYFROMNT(LUN1,LUN2,IRTFLG)
d275 2
a276 10
C       COPY FROM SGI BYTE FORMAT TO SGI BYTE FORMAT ----- 'CP FROM SG'
65      CONTINUE
#if  defined (SP_NT) || defined (__osf__) || defined (__linux__)
C       OLD FILE IS FOREIGN SGI ORDERING, NEW IS NATIVE TO NT
        CALL COPYFROMNT(LUN1,LUN2,IRTFLG)
#else 
C       OLD FILE IS NATIVE TYPE, NEW IS NATIVE TYPE,NO SUCH OP.
        CALL ERRT(100,'NO SUCH CP OPERATION, CHECK MENU',NERRD)
	RETURN
#endif
a283 1

a286 1
        IFOUND = 1
@


1.36
log
@*** empty log message ***
@
text
@d98 1
a98 1
                  CALL OPFILE(.TRUE.,FILOLD,LUN1,'O',IFORM,
@


1.35
log
@indexed stacks
@
text
@d187 1
a187 1
#if  defined (SP_NT) || defined (__osf__)
d270 1
a270 1
#if  defined (SP_NT) || defined (__osf__)
@


1.34
log
@emispcec
@
text
@d11 1
d66 1
a66 1
	IERR   = 100
d68 7
a74 1
	IF (FCHAR(4:4) .EQ. ' ') THEN
d76 1
a76 1
	  CALL COPYD(IRTFLG)
@


1.33
log
@added ccp4
@
text
@d10 1
d26 1
a26 1
C        1         2         3         4         5         6         7
d236 2
a237 3
C       EIKONIX SCAN PROGRAMS (REMOVED 1994)
59      WRITE(NOUT,*)'*** EIKONIX SUBROUTINES NO LONGER SUPPORTED'
        CALL ERRT(IER,'COPY1 ',NE)
d240 2
a241 2
C       COPY FROM EM-FORMAT TO SPIDER FORMAT ------------- 'CP FROM EM'
60      WRITE(NOUT,*)'*** CP FROM EM:  NO LONGER SUPPORTED'
a270 1

d277 1
@


1.32
log
@copynt
@
text
@d3 1
a3 1
C  COPY1.FOR                 REMOVED FROM UTIL2 JULY 96 ArDean Leith
d9 2
a10 1
C
d37 2
a38 2
	PARAMETER       (NFROM=16)
	PARAMETER       (NTO=13)
d44 1
a44 1
     &            'SC','TR','PE','NT','XP' 
d46 1
a46 1
     &            ,'SG'/  
d48 1
a48 1
     &            ,'##'/ 
d50 1
d55 1
a55 1
     &            'SG','UN'/  
d57 1
a57 1
     &            'SG','NT'/ 
d77 1
a77 1
C         OPERATION ----------- COPY TO ------------------------ 'CP TO' 
d91 1
a91 1
     &                   NSAM1,NROW1,NSLICE1, MAXIM,'INPUT',
d95 1
a95 1
              GOTO (20,21,22,23,24,25,26,27,28,29,30,31,32)IFUNC
d109 2
a110 1
            GOTO (50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65)IFUNC
d188 3
d272 5
@


1.31
log
@'CP TO NT' on NT
@
text
@d8 1
d36 1
a36 1
	PARAMETER       (NFROM=15)
d43 6
a48 1
     &            'SC','TR','PE','NT','XP'/ 
d107 1
a107 1
             GOTO (50,51,52,53,54,55,56,57,58,59,60,61,62,63,64)IFUNC
d153 3
a155 3
C        CONVERT FROM SPIDER FORMAT TO TIFF FORMAT ------- 'CP TO TIFF'
27	 CALL SPDTOTIFF(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IRTFLG)
         GOTO 9000
d253 13
@


1.30
log
@added copy from xp
@
text
@d7 1
d10 6
a15 7
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND     *
C *    RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201 *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS *
C *    OR USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN        *
C *    APPROVAL OF THE CENTER FOR LABORATORIES AND RESEARCH.           *
d30 1
d32 1
a32 1
        CHARACTER *81   FILOLD,FILNEW
d77 1
d169 8
a176 1
32      CALL COPYTONT(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IRTFLG)
d242 1
a242 1
63      CALL COPYFROMNT(LUN1,LUN2,MAXDIM)
@


1.29
log
@*** empty log message ***
@
text
@d6 1
d34 1
a34 1
	PARAMETER       (NFROM=14)
d41 1
a41 1
     &            'SC','TR','PE','NT'/ 
d99 1
a99 1
             GOTO (50,51,52,53,54,55,56,57,58,59,60,61,62,63)IFUNC
d158 1
a158 1
C       COPY SPIDER IMAGE FILE INTO EXPLORER FILES -------------'CP TO XPLOR'
d236 4
d299 1
a299 1
          WRITE(NOUT,*)'**** Use <CP FROM EM> instead ****'
d310 1
a310 1
          WRITE(NOUT,*)'**** Use <CP TO PO> instead ****'
d316 1
a316 1
          WRITE(NOUT,*)'**** THIS COMMAND NO LONGER SUPPORTED'
d323 1
a323 1
          WRITE(NOUT,*)'**** Use <CP TO or FROM MRC> instead ****'
d330 1
a330 1
          WRITE(NOUT,*)'**** Use <CP TO RAW> instead ****'
d336 1
a336 1
          WRITE(NOUT,*)'**** Use <CP FROM VAX> instead ****'
d342 1
a342 1
          WRITE(NOUT,*)'**** Use <CP TO TIFF> instead ****'
d348 1
a348 1
          WRITE(NOUT,*)'**** Use <CP TO TARGA or TARGAV> instead ****'
d354 1
a354 1
          WRITE(NOUT,*)'**** Use <CP TO VV> instead ****'
d360 1
a360 1
          WRITE(NOUT,*)'**** Use <CP TO VAX> instead ****'
d366 1
a366 1
          WRITE(NOUT,*)'**** Use <CP FROM ASC> instead ****'
d372 1
a372 1
          WRITE(NOUT,*)'**** Use <CP FROM PDB> instead ****'
d384 1
a384 1
          WRITE(NOUT,*)'**** Use <CP TO ASC> instead ****'
@


1.28
log
@added "cp to xplor" command
@
text
@d28 1
a28 1
	INCLUDE '/net/ithaca/usr1/spider/src/CMBLOCK.INC'
@


1.27
log
@*** empty log message ***
@
text
@a0 1

d21 1
d28 1
a28 1
	INCLUDE 'CMBLOCK.INC'
d34 1
a34 1
	PARAMETER       (NTO=12)
d43 1
a43 1
     &            'SF','TA','TI','VA','VV',  
a54 1

d84 1
a84 2

              GOTO (20,21,22,23,24,25,26,27,28,29,30,31)IFUNC
d98 1
a98 1
              GOTO (50,51,52,53,54,55,56,57,58,59,60,61,62,63)IFUNC
d157 4
d162 1
a162 1
30      CALL SPITOSGI(LUN1,LUN2,NSAM1,NROW1,NSLICE1,0,IRTFLG)
d166 1
a166 1
31      CALL COPYTONT(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IRTFLG)
d168 2
@


1.26
log
@removed operation cp from em
@
text
@a28 1
CNO_SAVE
d179 1
a179 1
52      CALL READPDB(MAXDIM) 
@


1.25
log
@changed copypos param
@
text
@d216 2
a217 1
60      CALL COPYEM(LUN1,LUN2)
@


1.24
log
@copyu params changed
@
text
@d31 2
a32 2
        CHARACTER *81   FILNAM,FILOLD,FILNEW
        COMMON /COMMUN/ FILNAM,FILOLD,FILNEW
d132 1
a132 1
23      CALL COPYPOS(LUN1,LUN2,NSAM1, NROW1, NSLICE1)
@


1.23
log
@typo
@
text
@d79 5
a83 4
C                 OPEN INPUT FILE
	          CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,
     &                NSLICE1,IDUM1,'INPUT',.TRUE.,IRTFLG)

a84 4
	          IF (NSAM1 .GT. MAXDIM) THEN
                     CALL ERRT(9,'COPY1 ',NE)
                     GOTO 9000
                  ENDIF
a90 1

d92 1
a92 2
          WRITE(NOUT,*) '**** NO SUCH CP OPERATION, CHECK MENU'
          CALL ERRT(100,'COPY1',NERRD)
d136 1
a136 1
24      CALL COPYU(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IC)
@


1.22
log
@removed copyvax
@
text
@d157 1
a157 1
        CALL ERRT(101,'NO LONGER SUPPORTED',IDUM)
@


1.21
log
@removed SP_VMS
.removed SP_VMS
@
text
@d157 2
a158 1
28      CALL COPYVAX(LUN1,LUN2,LUN3)
@


1.20
log
@removed "CP FROM LUM" (adjust.f)
@
text
@a76 4
#ifdef SP_VMS
     &            FCHAR(IC:IC+1) .NE. 'TI'   .AND.
     &            FCHAR(IC:IC+2) .NE. 'RAW'  .AND.
#endif
a151 6
#ifdef SP_VMS
C	'CP TO TIFF' does not exist in VAX version
27	WRITE(NOUT,*)' *** CP TO TIFF NOT AVAILABLE ON VAX/VMS'
        CALL ERRT(100,'COPY1',NERRD)
	GOTO 9000
#else
a154 1
#endif
@


1.19
log
@added nt
@
text
@d4 4
a7 2
C  COPY1.FOR                    REMOVED FROM UTIL2 JULY 96 ArDean Leith
C                               ADDED NT INTERFACES OCT 98 ArDean Leith
a216 3
#ifdef SP_VMS
        CALL COPYU(LUN1,LUN2,NSAM,NROW,NSLICE,IC)
#else
a217 1
#endif
d220 1
d222 1
a222 2
C			--------------------------------- 'CP FROM LUM'	
58      CALL ADJUST(LUN1,LUN2,LUN3,IRTFLG)
@


1.18
log
@removed IFORM from OPFIL call
@
text
@d4 2
a5 2
C  COPY1.FOR                  REMOVED FROM UTIL2 JULY 96 AL
C
d32 2
a33 2
	PARAMETER       (NFROM=13)
	PARAMETER       (NTO=11)
d39 1
a39 1
     &            'SC','TR','PE'/ 
d42 6
a47 2
     &            'SF','TA','TI','VA','VV',   
     &            'SG'/   
d72 3
a74 5
C             COPY FSPIDER FORMAT TO FOREIGN FORMAT
	      IF (FCHAR(IC:IC+2) .NE. 'MRC'      .AND.
     &            FCHAR(IC:IC+2) .NE. 'SF3'      .AND.
     &            FCHAR(IC:IC+2) .NE. 'VAX') THEN
C               OPEN INPUT FILE
d76 2
a77 2
                IF (FCHAR(IC:IC+1) .NE. 'TI' .AND.
     &              FCHAR(IC:IC+2) .NE. 'RAW') THEN
d79 3
d84 6
a89 8
#ifdef SP_VMS
	        ENDIF
#endif
	        IF (IRTFLG .NE. 0) GOTO 9000
	        IF (NSAM1 .GT. MAXDIM) THEN
                   CALL ERRT(9,'COPY1 ',NE)
                   GOTO 9000
                ENDIF
d92 1
a92 1
              GOTO (20,21,22,23,24,25,26,27,28,29,30)IFUNC
d96 1
d108 1
a108 1
              GOTO (50,51,52,53,54,55,56,57,58,59,60,61,62)IFUNC
d156 1
a156 1
27	WRITE(NOUT,*)' *** CP TO TIFF NOT AVAILABLE ON VAX'
d177 4
d242 4
@


1.17
log
@added stackfix call
@
text
@d78 1
a78 1
     &                NSLICE1,IFORM1,'INPUT',.TRUE.,IRTFLG)
@


1.16
log
@bad test for vax "to raw"
@
text
@d57 5
@


1.15
log
@should not have got input name for "to raw"
@
text
@d70 1
a70 1
     &              FCHAR(IC:IC+1) .NE. 'RAW') THEN
@


1.14
log
@bad parameter list in rawtospider call
@
text
@d69 2
a70 1
                IF (FCHAR(IC:IC+1) .NE. 'TI') THEN
@


1.13
log
@*** empty log message ***
@
text
@d183 1
a183 1
53      CALL RAWTOSPIDER(LUN1,LUN2,32,.FALSE.,IRTFLG)
@


1.12
log
@cosmetic
@
text
@d29 2
a30 2
        CHARACTER *81   FILNAM
        COMMON /COMMUN/ FILNAM
d64 1
a64 2
	      IF (FCHAR(IC:IC+5) .NE. 'TARGAV'   .AND. 
     &            FCHAR(IC:IC+2) .NE. 'MRC'      .AND.
d140 2
a141 3
C       COPY SPIDER IMAGE FILE INTO UNIX SPIDER IMAGE FILE
C                              ---------------- 'CP TO TARGA or TARGAV'
26      CALL COPYU(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IC)
d145 1
a145 1
C	'CP TIFF' does not exist in VAX version
d150 1
a150 1
C        CONVERT FROM  SPIDER FORMAT TO TIFF FORMAT ------ 'CP TO TIFF'
d155 1
a155 1
C       COPY UNIX IMAGE FILE INTO VAX SPIDER   ------------ 'CP TO VAX'
d164 1
a164 1
30      CALL SPITOSGI(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IRTFLG)
d167 1
a167 1
C	--------------- CP FROMOPERATIONS -----------------------------
d199 7
a205 1
57      CALL COPYU(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IC)
@


1.11
log
@added to sgi
@
text
@a28 2
	COMMON          BUF(1)

d148 1
a148 1
27	WRITE(NOUT,*)' CP TO TIFF NOT AVAILABLE ON VAX'
d196 1
a196 1
C       COPY FROM TERMINAL INTO SPIDER IMAGE FILE -------- 'CPFROM TERM'
@


1.10
log
@bad ' in vms stuff
@
text
@d35 1
a35 1
	PARAMETER       (NTO=10)
d44 2
a45 1
     &            'SF','TA','TI','VA','VV'/   
d86 1
a86 1
              GOTO (20,21,22,23,24,25,26,27,28,29)IFUNC
d91 1
a91 1
          WRITE(NOUT,*) '**** NO SUCH OPERATION, CHECK MENU'
d106 1
a106 1
          WRITE(NOUT,*) '**** NO SUCH OPERATION, CHECK MENU'
d131 1
a131 1
C       COPY FROM SPIDER IMAGE TO POSTSCRIPT IMAGE (8 BIT) - 'CP TO POST'
d135 1
a135 1
C       COPY SPIDER IMAGE FILE INTO RAW IMAGE FILE --------- 'CP TO RAW'
d139 1
a139 1
C       COPY 3D FOURIER TRANSFORM TO SIMPLE FORMAT --------- 'CP TO SF3'
d144 1
a144 1
C                              ----------------- 'CP TO TARGA or TARGAV'
d150 1
a150 1
27	WRITE(NOUT,*)' CP TIFF NOT AVAILABLE ON VAX'
d154 1
a154 1
C        CONVERT FROM  SPIDER FORMAT TO TIFF FORMAT ------- 'CP TO TIFF'
d164 1
a164 1
29      CALL COPYU(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IC)
d167 4
d173 1
a173 1
C       COPY EDITABLE IMAGE FILE TO SPIDER IMAGE FILE -- 'CP FROM ASCII'
d177 1
a177 1
C       MRC'S FORMAT FOR TRANSFERING TO CAMBRIDGE -------- 'CP FROM MRC'
d182 1
a182 1
C       COPY A PDB FILE INTO SPIDER VOLUME FILE ---------- 'CP FROM PDB'
d186 1
a186 1
C       COPY RAW IMAGE FILE INTO SPIDER IMAGE FILE ------- 'CP FROM RAW'
d190 1
a190 1
C       COPY 3D FOURIER TRANSFORM FROM SIMPLE FORMAT ----- 'CP FROM SF3'
d194 1
a194 1
C       COPY SHORT HEADER FILE TO REGULAR HEADER FILE ---- 'CPFROM SHORT'
d202 1
a202 1
C       COPY VAX SPIDER TO UNIX SPIDER      -------------- 'CP FROM VAX'
d207 1
a207 1
C			---------------------------------- 'CP FROM LUM'	
d216 1
a216 1
C       COPY FROM EM-FORMAT TO SPIDER FORMAT -------------- 'CP FROM EM'
d220 1
a220 1
C       COPY FROM MICRO D TAPE FORMAT TO SPIDER  ---------- 'CP FROM TR'
d224 1
a224 1
C       COPY FROM MICRO D ONDISK FORMAT TO SPIDER  -------- 'CP FROM PE'
@


1.9
log
@*** empty log message ***
@
text
@d150 1
a150 1
        CALL ERRT(100,'COPY1,NERRD)
@


1.8
log
@added perkin lemer "CP FROM PE" & "CP FROM TR"
@
text
@d91 1
a91 1
          CALL ERRT(100,COPY1,NERRD)
d106 1
a106 1
          CALL ERRT(100,COPY1,NERRD)
@


1.7
log
@Added the referring info for old CP commands
@
text
@d30 2
d34 1
a34 2
        CHARACTER *81   FILNAM
	PARAMETER       (NFROM=11)
d39 6
a44 3
	DATA FROM/'AS','MR', 'PD','RA','SF','SH',
     1            'TE','VA','LU','EM','SC'/   
	DATA TO/'AS','BR','MR','PO','RA','SF','TA','TI','VA','VV'/   
d59 1
a59 1
C         OPERATION ----------- COPY TO ------------------------- 'CP TO' 
d66 3
a68 3
     &          FCHAR(IC:IC+2) .NE. 'MRC'      .AND.
     &          FCHAR(IC:IC+2) .NE. 'SF3'      .AND.
     &          FCHAR(IC:IC+2) .NE. 'VAX') THEN
d80 2
a81 2
                  IER = 9
                  GOTO 9900
d89 4
a92 4
C	  THIS FUNCTION IS NOT EXISTED IN SPIDER CP
          WRITE(NOUT,*)
     &     '**** THE FUNCTION DOESNOT EXIST, CHECK THE MENU INDEX ****'
	  GOTO 9911
d95 1
a95 1
C         OPERATION ----------- COPY FROM ---------------------- 'CP FROM' 
d100 1
a100 1
              GOTO (50,51,52,53,54,55,56,57,58,59,60)IFUNC
d104 4
a107 4
C	  THIS FUNCTION IS NOT EXISTED IN SPIDER CP 
          WRITE(NOUT,*)
     &     '**** THE FUNCTION DOESNOT EXIST, CHECK THE MENU INDEX ****'
	  GOTO 9911
a110 1
C          WRITE(NOUT,*)'**** Use CP TO or CP FROM ****'
d114 2
a115 1
C	--------------- CP OPERATION ------------------------------
d117 1
a117 1
C       COPY SPIDER IMAGE FILE INTO EDITABLE IMAGE -- 'CPTO ASCII'
d121 1
a121 1
C       COPY 3D SPIDER FILE TO BRIX FORMAT-----------------'CPTO BRIX'
d125 1
a125 1
C       MRC'S FORMAT FOR TRANSFERING TO CAMBRIDGE -- 'CPTO MRC'
d130 1
a130 1
C       COPY FROM SPIDER IMAGE TO POSTSCRIPT IMAGE (8 BIT) --- 'CPTO POST'
d134 1
a134 1
C       COPY SPIDER IMAGE FILE INTO RAW IMAGE FILE --- 'CPTO RAW'
d138 1
a138 1
C       COPY 3D FOURIER TRANSFORM TO SIMPLE FORMAT-- 'CPTO SF3'
d143 1
a143 1
C                ----------------- 'CPTO TARGA or TARGAV'
d150 2
a151 2
	GOTO 9900

d153 1
a153 1
C        CONVERT FROM  SPIDER FORMAT TO TIFF FORMAT --- 'CPTO TIFF'
d158 1
a158 1
C       COPY UNIX IMAGE FILE INTO VAX SPIDER   ---- 'CPTO VAX'
d162 1
a162 1
C       COPY UNIX IMAGE FILE INTO VOXEL-VIEW FILES -------- 'CPTO VV'
d166 3
a168 1
C       COPY EDITABLE IMAGE FILE INTO SPIDER IMAGE FILE -- 'CPFROM ASCII'
d172 1
a172 1
C       MRC'S FORMAT FOR TRANSFERING TO CAMBRIDGE -- 'CPFROM MRC'
d177 1
a177 1
C       COPY A PDB FILE INTO SPIDER VOLUME FILE -------- 'CPFROM PDB'
d181 1
a181 1
C       COPY RAW IMAGE FILE INTO SPIDER IMAGE FILE --- 'CPFROM RAW'
d185 1
a185 1
C       COPY 3D FOURIER TRANSFORM TO AND FROM SIMPLE FORMAT-- 'CPFROM SF3'
d197 1
a197 1
C       COPY VAX SPIDER TO UNIX SPIDER      ------- 'CPFROM VAX'
d202 1
a202 1
C			---------------------------------- 'CPFROM LUM'	
d208 2
a209 1
        GOTO 9900
d211 1
a211 1
C       COPY FROM EM-FORMAT TO SPIDER FORMAT------------- 'CPFROM EM'
d215 7
a221 1
9900    CALL ERRT(IER,'COPY1 ',NE)
d227 1
a228 1
9911    RETURN
d230 2
a231 1
C       ----------- OLD 'CP' OPERATIONS  ----(Changed in Sept. 96 by liy)
d235 2
a236 1
          GOTO 9911
d240 3
a242 2
          WRITE(NOUT,*)'**** Use <CP TO BRIX> instead ****'
          GOTO 9911
d247 2
a248 1
          GOTO 9911
d253 2
a254 1
          GOTO 9911
d259 2
a260 1
          GOTO 9911
d265 2
a266 1
          GOTO 9911
d271 2
a272 1
          GOTO 9911
d277 2
a278 1
          GOTO 9911
d283 2
a284 1
          GOTO 9911
d288 2
a289 1
          GOTO 9911
d294 2
a295 1
          GOTO 9911
d300 2
a301 1
          GOTO 9911
d306 3
a308 2
           WRITE(NOUT,*)'**** Use <CP TO or FROM MRC> instead ****'
          GOTO 9911
d314 2
a315 1
          GOTO 9911
d320 2
a321 1
          GOTO 9911
d326 2
a327 1
          GOTO 9911
d332 2
a333 1
          GOTO 9911
d338 2
a339 1
          GOTO 9911
d344 2
a345 1
          GOTO 9911
d350 2
a351 1
          GOTO 9911
d356 2
a357 1
          GOTO 9911
a359 1

d362 2
a363 1
          GOTO 9911
a365 1

d368 2
a369 1
          GOTO 9911
d373 3
a375 2
     &     '**** SPIDER DOESNOT HAVE THE FUNCTION ****'
	  GOTO 9911
@


1.6
log
@change the structure of copy1 to protect the wrong commands
@
text
@d107 2
a108 2
          WRITE(NOUT,*)'**** Use CP TO or CP FROM ****'
          GOTO 9911
d216 126
@


1.5
log
@improved error messages
@
text
@d33 3
a35 2
	PARAMETER       (NFUNC=1)
        CHARACTER *2    FUNC(NFUNC)
d38 3
a40 1
	DATA FUNC/'CP'/      
d48 5
a52 5
        DO  IFUNC = 1, NFUNC
          IF (FCHAR(1:2) .EQ. FUNC(IFUNC)) THEN
            GOTO ( 3 ) IFUNC
          ENDIF
        ENDDO
d54 5
a58 7
C       FUNCTION NOT FOUND IN COPY1
        RETURN 


C       OPERATION ----------- COPY  ------------------------------- 'CP' 

3       IF (FCHAR(4:5) .EQ. 'TO') THEN
d60 6
a65 9
C         COPY FROM SPIDER TO FOREIGN FORMAT
          IC = 7
	  IF (FCHAR(IC:IC+5) .NE. 'TARGAV'   .AND. 
     &        FCHAR(IC:IC+2) .NE. 'MRC'      .AND.
     &        FCHAR(IC:IC)   .NE. 'I'        .AND.
     &        FCHAR(IC:IC)   .NE. ' '        .AND.
     &        FCHAR(IC:IC+2) .NE. 'SF3'      .AND.
     &        FCHAR(IC:IC+2) .NE. 'VAX') THEN
C            OPEN INPUT FILE
d67 1
a67 1
             IF (FCHAR(IC:IC+3) .NE. 'TIFF') THEN
d69 2
a70 2
	        CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,
     &               NSLICE1,IFORM1,'INPUT',.TRUE.,IRTFLG)
d72 1
a72 1
	     ENDIF
d74 15
a88 6
	     IF (IRTFLG .NE. 0) GOTO 9000
	     IF (NSAM1 .GT. MAXDIM) THEN
                IER = 9
                GOTO 9900
             ENDIF
	   ENDIF
d90 2
a91 1
        ELSEIF (FCHAR(4:7) .EQ. 'FROM') THEN
d94 10
a103 5

	ELSEIF (FCHAR(4:4) .EQ. ' ') THEN
C       STANDARD COPY
	  CALL COPYD(IRTFLG)
	  GOTO 9000
d107 2
a108 2
          WRITE(NOUT,*)'**** Use CP TO or CP FROM '
          GOTO 9900
d111 9
a119 19
        IF (FCHAR(IC:IC+1) .EQ. 'SC') THEN
C         EIKONIX SCAN PROGRAMS (REMOVED 1994)
          WRITE(NOUT,*)'*** EIKONIX SUBROUTINES NO LONGER SUPPORTED'
          GOTO 9900

        ELSEIF (FCHAR(IC:IC) .EQ. 'B') THEN
C         COPY 3D SPIDER FILE TO BRIX FORMAT-----------------'CPTO BRIX'
          CALL COPYBRIX(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
          GOTO 9000

        ELSEIF (FCHAR(IC:IC+1) .EQ. 'SF') THEN
C         COPY 3D FOURIER TRANSFORM TO AND FROM SIMPLE FORMAT-- 'CPFROM SF3'
          CALL COPYFSIMPLE(LUN1,LUN2)
          GOTO 9000

        ELSEIF (FCHAR(IC:IC+1) .EQ. 'SH') THEN
C         COPY SHORT HEADER FILE TO REGULAR HEADER FILE
          CALL COPYSHORT(LUN1,LUN2)
          GOTO 9000
d121 4
a124 5
        ELSEIF (FCHAR(IC:IC) .EQ. 'L') THEN
C         COPY TWO ILUMINATION LEVEL IMAGES INTO A MERGED THIRD IMAGE
C			---------------------------------- 'CPFROM LUM'	
          CALL ADJUST(LUN1,LUN2,LUN3,IRTFLG)
          GOTO 9000
d126 3
a128 67
        ELSEIF (FCHAR(IC:IC+2) .EQ. 'RAW') THEN
C         COPY RAW IMAGE FILE INTO SPIDER IMAGE FILE or reverse
C		---------------------------- 'CPTO RAW or CPFROM RAW'
	  IF(FCHAR(4:5) .EQ. 'TO') THEN
            CALL COPYU(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IC)
	  ELSE
            CALL RAWTOSPIDER(LUN1,LUN2,32,.FALSE.,IRTFLG)
	  ENDIF
          GOTO 9000

        ELSEIF (FCHAR(IC:IC+1) .EQ. 'TE') THEN
C         COPY FROM TERMINAL INTO SPIDER IMAGE FILE -------- 'CPFROM TERM'
          CALL COPYR(LUN2)
          GOTO 9000

        ELSEIF (FCHAR(IC:IC) .EQ. 'W') THEN
C         OBSOLETE IMAGE INPUT/OUTPUT REMOVED DEC 89 AL
          WRITE(NOUT,*) '*** USE "CP FROM ASCII" INSTEAD'
          GOTO 9900
          
        ELSEIF (FCHAR(IC:IC+1) .EQ. 'EM') THEN 
C         COPY FROM EM-FORMAT TO SPIDER FORMAT------------- 'CPFROM EM'
          CALL COPYEM(LUN1,LUN2)
          GOTO 9000

        ELSEIF (FCHAR(IC:IC+1) .EQ. 'EF' .OR. FCHAR(IC:IC+1) .EQ. 'VF')
     &          THEN
          WRITE(NOUT,*) '*** USE "CP TO ASCII" INSTEAD'
          GOTO 9900

        ELSEIF (FCHAR(IC:IC+1) .EQ. 'PO') THEN
C         COPY FROM SPIDER IMAGE TO POSTSCRIPT IMAGE (8 BIT) --- 'CPTO POST'
          CALL COPYPOS(LUN1,LUN2,NSAM1, NROW1, NSLICE1)
          GOTO 9000

        ELSEIF (FCHAR(IC:IC+2) .EQ. 'MRC') THEN
C         MRC'S FORMAT FOR TRANSFERING TO CAMBRIDGE -- 'CPTO or FROM MRC'
C         COPY FROM MRC FORMAT INTO SPIDER IMAGE FILE
          CALL COPYMRC(LUN1,LUN2)
          GOTO 9000

        ELSEIF (FCHAR(IC:IC) .EQ. 'U' .OR. 
     &	        FCHAR(IC:IC+2) .EQ. 'TAR') THEN
C         COPY SPIDER IMAGE FILE INTO UNIX SPIDER IMAGE FILE
C                ----------------- 'CPTO U and CPTO TARGA or TARGAV'
          CALL COPYU(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IC)
          GOTO 9000

        ELSEIF (FCHAR(IC:IC+1) .EQ. 'VV') THEN
C         COPY UNIX IMAGE FILE INTO VOXEL-VIEW FILES -------- 'CPTO VV'
          CALL COPYU(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IC)
          GOTO 9000

        ELSEIF (FCHAR(IC:IC+2) .EQ. 'VAX') THEN
           IF (FCHAR(4:5) .EQ. 'TO') THEN
C             COPY UNIX IMAGE FILE INTO VAX SPIDER   ---- 'CPTO VAX'
              CALL COPYVAX(LUN1,LUN2,LUN3)
           ELSE
C             COPY VAX SPIDER TO UNIX SPIDER      ------- 'CPFROM VAX'
              CALL COPYU(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IC)
          ENDIF
          GOTO 9000

       ELSEIF (FCHAR(IC:IC+2) .EQ. 'PDB') THEN
C         COPY A PDB FILE INTO SPIDER VOLUME FILE -------- 'CPFROM PDB'
          CALL READPDB(MAXDIM) 
          GOTO 9000
d130 3
a132 1
        ENDIF
d134 3
a136 1
	IF (FCHAR(IC:IC).EQ.'I') THEN
d138 4
a141 15
C         TRAP FOR 'CP I' ROUTINE, SIXEL IMAGE OUTPUT
          WRITE(NOUT,*)'*** CP WITH SIXEL OUTPUT NO LONGER SUPPORTED'
          GOTO 9900

        ELSE IF (FCHAR(IC:IC) .EQ. 'A') THEN
C                    ------------------------- 'CPTO ASCII or CPFROM ASCII'
C         COPY SPIDER IMAGE FILE INTO EDITABLE IMAGE or reverse
	  IF(FCHAR(4:5) .EQ. 'TO') THEN
C            TRAP FOR 'CP E', COPY SPIDER IMAGE FILE INTO EDITABLE IMAGE
             CALL COPYE(LUN1,LUN2,NSAM1,NROW1,NSLICE1)
	  ELSEIF(FCHAR(4:7).EQ.'FROM') THEN
C           COPY EDITABLE IMAGE FILE INTO SPIDER IMAGE FILE
	    CALL COPYF(LUN1,LUN2)
	  ENDIF
          GOTO 9000
d145 1
a145 2
      	ELSEIF (FCHAR(IC:IC+3) .EQ. 'TIFF') THEN
	WRITE(NOUT,*)' CP TIFF NOT AVAILABLE ON VAX'
a148 1
      	ELSEIF (FCHAR(IC:IC+3) .EQ. 'TIFF') THEN
d150 1
a150 2
	 CALL SPDTOTIFF(LUN1,LUN2,
     &			NSAM1,NROW1,NSLICE1,IRTFLG)
d153 33
a185 1
        ENDIF
d187 7
a193 5
C       OPEN THE OUTPUT FILE
8000    NSAM2   = NSAM1
        NROW2   = NROW1
        NSLICE2 = NSLICE1
        IFORM   = IFORM1
d195 3
a197 1
        CALL COPYD(IRTFLG)
d200 7
d208 1
a208 1
9900    CALL ERRT(IER,'UTIL2 ',NE)
d213 1
a213 1
9911    IFOUND = 1
d215 1
a215 1
        RETURN
@


1.4
log
@removed jp copy routine and vax16
@
text
@d43 1
a43 1
	NE     = 0
d94 2
a95 2
          WRITE(NOUT,*)'**** Use CP TO or CP FROM now!!!'
          GOTO 9000
d100 2
a101 2
          WRITE(NOUT,*)'**** EIKONIX SUBROUTINES NO LONGER SUPPORTED'
          GOTO 9000
d141 2
a142 2
          WRITE(NOUT,*) 'USE "CP FROM ASCII" INSTEAD'
          GOTO 9000
d151 2
a152 2
          WRITE(NOUT,*) 'USE "CP TO ASCII" INSTEAD'
          GOTO 9000
d197 2
a198 2
          WRITE(NOUT,*)'**** CPTO I is abandoned!!!'
          GOTO 9000
d215 2
a216 2
	WRITE(NOUT,*)' <CP TIFF> doesnot exist in VAX sites!!!'
	GOTO 9000
@


1.3
log
@moved <cp> commands from util2 to copy1
@
text
@d27 1
d32 4
a35 4
        CHARACTER *81 FILNAM
	PARAMETER     (NFUNC=1)
        CHARACTER *2  FUNC(NFUNC),ANS
        CHARACTER     NULL
d69 1
a69 5
C	     VAX VERSION
             IF (FCHAR(IC:IC+3).NE.'TIFF') THEN
#else
C	     UNIX VERSION
             IF (FCHAR(IC:IC+4).NE.'RAW16') THEN
d73 1
d75 1
d159 1
a159 6
        ELSEIF (FCHAR(IC:IC+1) .EQ. 'JP') THEN
C         COPIES FROM JP'S FORMAT INTO SPIDER IMAGE FILE ---- 'CPFROM JP'
          CALL COPYJP(LUN1,LUN2)
          GOTO 9000

        ELSEIF (FCHAR(IC:IC+2) .EQ.'MRC') THEN
@


1.2
log
@some correction to if(fchar(ic:ic+....)
@
text
@d63 2
d66 1
a66 1
C             OPEN INPUT FILE
d68 2
a69 2
C	      VAX VERSION
              IF (FCHAR(IC:IC+3).NE.'TIFF') THEN
d71 2
a72 2
C	      UNIX VERSION
              IF (FCHAR(IC:IC+4).NE.'RAW16') THEN
d76 3
a78 3
	      ENDIF
	      IF (IRTFLG .NE. 0) GOTO 9000
	      IF (NSAM1 .GT. MAXDIM) THEN
d81 1
a81 1
              ENDIF
d88 5
d104 1
a104 1
        ELSEIF (FCHAR(IC:IC+3) .EQ. 'BRIX') THEN
d109 1
a109 1
        ELSEIF (FCHAR(IC:IC+2) .EQ. 'SF3') THEN
d119 2
a120 7
        ELSEIF (FCHAR(IC:IC) .EQ. ' ') THEN
C         STANDARD COPY ------------------------------------ 'CPTO  '
          CALL COPYD(LUN1,LUN2,NSAM1,NROW1,NSLICE1,IRTFLG)
          GOTO 9000

        ELSEIF (FCHAR(IC:IC+2) .EQ. 'LUM') THEN
C         COPY TWO ILLUMINATION LEVEL IMAGES INTO A MERGED THIRD IMAGE
d135 1
a135 1
        ELSEIF (FCHAR(IC:IC+3) .EQ. 'TERM') THEN
d142 1
a142 1
          WRITE(NOUT,*) 'USE "CP FROM TET" INSTEAD'
d152 1
a152 1
          WRITE(NOUT,*) 'USE "CPTO TET" INSTEAD'
d155 1
a155 1
        ELSEIF (FCHAR(IC:IC+3) .EQ. 'POST') THEN
d172 1
a172 1
     &	        FCHAR(IC:IC+4) .EQ. 'TARGA') THEN
d206 2
a207 2
        ELSE IF (FCHAR(IC:IC+2) .EQ. 'TET') THEN
C                    ------------------------- 'CPTO TET or CPFROM TET'
d221 1
a221 1
	WRITE(NOUT,*)' <CP TIFF> does not exist on VAX sites!!!'
d239 1
a239 1
        CALL COPYD(LUN1,LUN2,NSAM2,NROW2,NSLICE2,IRTFLG)
@


1.1
log
@Initial revision
@
text
@d64 1
a64 1
C            OPEN INPUT FILE
d66 2
a67 2
C	     VAX VERSION
             IF (FCHAR(IC:IC+3).NE.'TIFF') THEN
d69 2
a70 2
C	     UNIX VERSION
             IF (FCHAR(IC:IC+4).NE.'RAW16') THEN
d74 3
a76 3
	     ENDIF
	     IF (IRTFLG .NE. 0) GOTO 9000
	     IF (NSAM1 .GT. MAXDIM) THEN
d79 1
a79 1
             ENDIF
d107 1
a107 1
        ELSEIF (FCHAR(IC:IC+2) .EQ. 'SH') THEN
d117 2
a118 2
        ELSEIF (FCHAR(IC:IC) .EQ. 'LUM') THEN
C         COPY TWO ILUMINATION LEVEL IMAGES INTO A MERGED THIRD IMAGE
d191 1
a191 1
       ELSEIF (FCHAR(IC:IC+1) .EQ. 'PDB') THEN
d219 1
a219 1
	WRITE(NOUT,*)' <CP TIFF> doesnot exist in VAX sites!!!'
@
