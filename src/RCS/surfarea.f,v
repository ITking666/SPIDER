head	1.16;
access;
symbols
	healthdept_2018:1.16
	pre_getangas:1.14
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.13
	pre_fftwrings:1.13
	pre_opfiles:1.13
	src:1.13
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.12
	prec_CA:1.12
	noindx:1.11
	Bproc:1.10
	oct21:1.6
	last77:1.5;
locks; strict;
comment	@c @;


1.16
date	2018.10.03.14.34.24;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2013.12.31.17.19.38;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.24.13.27.04;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.21.00.27;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.19.18.01.37;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.11.14.08.57;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.17.16.52.37;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.10.13.45.23;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.01.14.33.58;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.24.19.10.59;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.09.08.16.58.35;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.10.27.15.56.50;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	98.09.28.15.02.38;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	98.09.14.19.37.47;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	98.09.11.18.45.48;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	98.09.11.15.43.43;	author leith;	state Exp;
branches;
next	;


desc
@new
@


1.16
log
@email_health_dept
@
text
@
C **********************************************************************
C
C   SURFAREA.F   -- CREATED SEPT. 98 al
C
C **********************************************************************
C *  AUTHOR: ArDean Leith 
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C      SURFAREA(MAXDIM)
C
C      PURPOSE:     READS SPIDER  PICTURE FILE, FINDS INTERFACIAL AREA
C
C      PARAMETERS:  MAXDIM      UNLABELED COMMON BLOCK LENGTH
C
C      CALLED BY:   
C
C      CALLS:  
C
C      NOTES:       NOT OPTIMIZED FOR SPEED I JUST WANTED TO GET IT 
C                   RUNNING QUICK, DO NOT EXPECT MUCH USAGE     
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE SURFAREA(MAXDIM)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        COMMON /IOBUF/ BUF(NBUFSIZ)

        INTEGER, ALLOCATABLE, DIMENSION(:) :: IMGS
        CHARACTER(LEN=MAXNAM)              :: FILNAM
 
        DATA    FLTZER/10E-30/

        LUNIM    = 11
        
C       OPEN SPIDER FILE AS INPUT
20      MAXIM    = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNIM,'O',IFORM,NSAM,NROW,NSLICE,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 999

        NSLICE1 = NSLICE
        NPIXP1  = NSAM * NROW + 1

        IF (NSAM .GT. NBUFSIZ) THEN
            CALL ERRT(6,'SURFAREA',NE)
            GOTO 999
        ENDIF

        IF (IMAMI .NE. 1) THEN
            CALL NORM3(LUNIM,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
        ENDIF

        IF ((FMAX - FMIN) .LT. FLTZER) THEN
            CALL ERRT(101,'BLANK FILE SKIPPED',NE)
            GOTO 999
        ENDIF

C       DISPLAY MAX AND MIN VALUE OF PICTURE , ASK FOR THE LEVEL
        WRITE(NOUT,91) FMIN,FMAX
91      FORMAT('  IMAGE RANGE: ',1PG11.3,'....',1PG11.3)

C       FIND THRESHOLD LEVEL FOR CLUSTERS            
22      CALL RDPRM2S(THLEV,FDUM,NOT_USED,'THRESHOLD LEVEL',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 20

        WRITE(NOUT,*) ' '

        MEMWANT = NSAM * NROW * 2
        ALLOCATE (IMGS(MEMWANT), STAT=IRTFLG)
        IF (IRTFLG .NE. 0) THEN
           CALL ERRT(46,'SURFAREA, IMGS',MEMWANT)
           GO TO 999
        ENDIF

        INOW  = 1
        INEXT = NPIXP1
        IVOL  = 0
        IVOX  = 0
        ISURF = 0

        DO ISLICE = 1,NSLICE

           NREC1  = (ISLICE - 1) * NROW + 1
           NREC2  = NREC1 + NROW - 1

C          LOAD FIRST SLICE 
           CALL SURFAREA2(LUNIM,BUF,NSAM,NREC1,NREC2,
     &                THLEV,IMGS(INOW))

           IF (ISLICE .LT. NSLICE) THEN
C             MUST LOAD FOLLOWING SLICE ALSO
              NREC1N  = ISLICE * NROW + 1
              NREC2N  = NREC1N + NROW - 1

              CALL SURFAREA2(LUNIM,BUF,NSAM,NREC1N,NREC2N,
     &           THLEV,IMGS(INEXT))
           ENDIF

C          PROCESS CURRENT SLICE FOR AREA 
           CALL SURFAREA1(NSAM,NROW,NSLICE,ISLICE,
     &                IMGS(INOW),IMGS(INEXT),IVOLT,IVOXT,ISURFT,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

           IF (NSLICE .GT. 1) WRITE(NOUT,96) ISLICE,ISURFT
96         FORMAT(' SLICE:',I4,',  INTERFACE AREA=',I8)

           IVOL  = IVOL  + IVOLT
           IVOX  = IVOX  + IVOXT
           ISURF = ISURF + ISURFT
           
        ENDDO

        WRITE(NOUT,92) IVOX
92      FORMAT(/' TOTAL VOXELS:           ',I10)

        WRITE(NOUT,93) IVOL
93      FORMAT(' VOXELS ABOVE THRESHOLD: ',I10)

        WRITE(NOUT,95) ISURF
95      FORMAT(' INTERFACE AREA:         ',I10/)

C       IF (NSEL(1).NE. 0.) PARAM(NSEL(1)) = IVOX
C       IF (NSEL(2).NE. 0.) PARAM(NSEL(2)) = IVOL
C       IF (NSEL(3).NE. 0.) PARAM(NSEL(3)) = ISURF

        CALL REG_SET_NSEL(1,3,FLOAT(IVOX),FLOAT(IVOL),
     &                      FLOAT(ISURF), 0.0,0.0, IRTFLG)
       
999     CONTINUE
C       CLOSE THE FILE
        CLOSE(LUNIM)

C       DEALLOCATE RUN-TIME MEMORY
        IF (ALLOCATED(IMGS)) DEALLOCATE(IMGS)

        RETURN
        END
    
C **********************************************************************
C
C      SURFAREA1SURFAREA1(NSAM,NROW,NSLICE,ISLICE,
C                         MSLICE1,MSLICE2,ISURF,IRTFLG)
C
C      PURPOSE:  DETERMINES SURFACE AREA USING 2 SLICES AT A TIME    
C
C      PARAMETERS:  
C
C      CALLED BY:  SURFAREA1  
C
C      CALLS:       
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--********************************************************************

       SUBROUTINE SURFAREA1(NSAM,NROW,NSLICE,ISLICE,
     &                      MSLICE1,MSLICE2,IVOL,IVOX,ISURF,IRTFLG)

       INTEGER      MSLICE1(*),MSLICE2(*)

       ISURF  = 0
       IVOL   = 0
       IVOX   = 0

       DO  IROW = 1, NROW 
          IPTR0 = (IROW-1) * NSAM

          DO  ICOL = 1, NSAM 
             IPTR1 = IPTR0 + ICOL
             NOW   = MSLICE1(IPTR1)
            
             IVOX = IVOX + 1
             IF (NOW .LT. 0) THEN
C               VOXEL OCCUPIED

                IVOL = IVOL + 1

C               COUNT SURFACE  UP & DOWN (IF BORDER) 
                IF (IROW .EQ. 1 .OR. IROW .EQ. NROW) ISURF = ISURF + 1

C               COUNT SURFACE TO LEFT & RIGHT (IF BORDER) 
                IF (ICOL .EQ. 1 .OR. ICOL .EQ. NSAM) ISURF = ISURF + 1

C               CHECK VOXEL TO LEFT FROM THIS VOXEL FOR SURFACE
                IF (ICOL .GT. 1 .AND.
     &              MSLICE1(IPTR1 - 1) .EQ. 0)  ISURF = ISURF + 1

C               CHECK VOXEL TO RIGHT FROM THIS VOXEL FOR SURFACE
                IF (ICOL .LT. NSAM .AND.
     &              MSLICE1(IPTR1 + 1) .EQ. 0)  ISURF = ISURF + 1

C               CHECK VOXEL UP FROM THIS VOXEL FOR SURFACE
                IF (IROW .GT. 1 .AND.
     &              MSLICE1(IPTR1 - NSAM) .EQ. 0) ISURF = ISURF + 1

C               CHECK VOXEL DOWN FROM THIS VOXEL FOR SURFACE
                IF (IROW .LT. NROW .AND.
     &              MSLICE1(IPTR1 + NSAM) .EQ. 0) ISURF = ISURF + 1

C               COUNT SURFACE  ABOVE (IF BORDER) 
                IF (NSLICE .GT. 1 .AND. 
     &             (ISLICE .EQ. 1 .OR. ISLICE .EQ. NSLICE)) 
     &              ISURF = ISURF + 1

C               CHECK VOXEL BELOW (SLICE) FROM THIS VOXEL FOR SURFACE
                IF (ISLICE .LT. NSLICE .AND.
     &              MSLICE2(IPTR1) .EQ. 0) ISURF = ISURF + 1

             ELSE
C               CHECK NEXT VOXEL DOWN FROM THIS VOXEL FOR SURFACE
                IF (ISLICE .LT. NSLICE .AND.
     &              MSLICE2(IPTR1) .LT. 0)  ISURF = ISURF + 1
                
             ENDIF
          END DO
       END DO

       RETURN
       END

C **********************************************************************
C
C   SURFAREA2.FOR  -- CREATED OCT 98
C **********************************************************************
C *  AUTHOR: ArDean Leith 
C **********************************************************************
C
C      SURFAREA2(LUNIM,BUF,NSAM,NREC1,NREC2,THLEV,SLICE)  
C
C      PURPOSE:     READS SPIDER PICTURE FILES SLICES INTO SLICE ARRAY 
C
C      PARAMETERS:  
C
C      CALLED BY:   
C
C      CALLS:       REDLIN 
C
C--********************************************************************

         SUBROUTINE SURFAREA2(LUNIM,BUF,NSAM,NREC1,NREC2,
     &                     THLEV,SLICE)
 
         INTEGER        SLICE(*)
         DIMENSION      BUF(*)

C        READ THE SPIDER FILE INTO SLICE ARRAY

         IPTR = 0 

           DO  I = NREC1,NREC2
             CALL REDLIN(LUNIM,BUF,NSAM,I)

             DO  J = 1,NSAM
               IPTR = IPTR + 1

               IF (BUF(J) .GE. THLEV) THEN
C                 VOXEL IS ABOVE THRESHOLD
                  SLICE(IPTR) = -1
               ELSE
                  SLICE(IPTR) = 0
               ENDIF
             END DO
           END DO

         RETURN
         END



@


1.15
log
@' IMAGE RANGE,  ERRT(46,'SURFAREA, IMGS',MEMWANT
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.14
log
@GPL_2010
@
text
@d84 1
a84 1
91      FORMAT(' IMAGE RANGE: ',1PG11.3,'....',1PG11.3)
d95 1
a95 1
           CALL ERRT(46,'SURFAREA, IMGS',NDUM)
@


1.13
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
a248 23
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
C=*                                                                    *
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* This program is distributed in the hope that it will be useful,    *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
C=* General Public License for more details.                           *
C=*                                                                    *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
C=*                                                                    *
@


1.12
log
@opfilec
@
text
@d2 1
a2 1
C**************************************************************************
d6 1
a6 1
C **************************************************************************
d8 24
a31 7
C *  COPYRIGHT (C)1990 , WADSWORTH CENTER FOR LABORATORIES AND RESEARCH    *
C *    NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.              *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH  			   *
C **************************************************************************
d167 1
a167 1
C **************************************************************************
d248 1
a248 1
C**************************************************************************
d251 1
a251 1
C **************************************************************************
d253 24
a276 7
C *  COPYRIGHT (C)1998, WADSWORTH CENTER FOR LABORATORIES AND RESEARCH    *
C *    NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.              *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
C **************************************************************************
@


1.11
log
@nloop,iloop_removed
@
text
@d40 1
a40 1
        CHARACTER(LEN=81)                  :: FILNAM
d48 1
a48 1
        CALL OPFIL(.TRUE.,FILNAM,LUNIM,'O',NSAM,NROW,NSLICE,
@


1.10
log
@reg_set_nsel params changed
@
text
@d74 1
a74 1
22      CALL RDPRM2S(THLEV,FDUM,NLOOP,ILOOP,'THRESHOLD LEVEL',IRTFLG)
@


1.9
log
@used reg_set
@
text
@d137 1
a137 1
        CALL REG_SET_NSEL(1,FLOAT(IVOX),FLOAT(IVOL),
@


1.8
log
@removed chkmem
@
text
@d133 6
a138 3
        IF (NSEL(1).NE. 0.) PARAM(NSEL(1)) = IVOX
        IF (NSEL(2).NE. 0.) PARAM(NSEL(2)) = IVOL
        IF (NSEL(3).NE. 0.) PARAM(NSEL(3)) = ISURF
@


1.7
log
@SP_F90 removed
@
text
@d39 3
a41 13
        INCLUDE 'F90ALLOC.INC'
C       Q WILL ACTUALLY BE USED AS INTEGER, THIS IS FOR F90 COMPAT.
        REAL, DIMENSION(:), POINTER :: IPQ
        REAL, DIMENSION(:), POINTER :: Q

C       SLICES WILL ACTUALLY BE USED AS INTEGER, THIS IS FOR F90 COMPAT.
        DIMENSION      SLICES(1)
        COMMON         SLICES

        CHARACTER * 81 FILNAM
        CHARACTER * 1  NULL
        LOGICAL        RUNTIME,DEBUG
       
a43 2
        NULL     = CHAR(0)
        DEBUG    = .FALSE.
d80 5
a84 7
        MAXMEM  = MAXDIM 
        IRTFLG = 0

        CALL CHKMEM(MEMWANT,SLICES,MAXMEM,RUNTIME,IPQ,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 999

         Q = >IPQ
d99 1
a99 1
     &                THLEV,Q(INOW))
d107 1
a107 1
     &           THLEV,Q(INEXT))
d112 1
a112 1
     &                    Q(INOW),Q(INEXT),IVOLT,IVOXT,ISURFT,IRTFLG)
d141 2
a142 1
        IF (RUNTIME)  CALL ALLOCIT(0,RUNTIME,IPQ,'IA',IRTFLG)
@


1.6
log
@CMLIMIT.INC
@
text
@d5 1
a38 1
#ifdef SP_F90
a47 8
#else
        INTEGER       Q(1)
        POINTER       (IPQ,Q) 

        INTEGER        SLICES(1)
        COMMON         SLICES
#endif

d97 1
a97 1
#ifdef SP_F90
d99 1
a99 1
#endif
@


1.5
log
@undefinded nslmax
@
text
@d34 1
a34 1
CNO_SAVE
a35 2
C       NSAMAX IS MAXIMUM NUMBER OF COL. IN IMAGE 
        PARAMETER  (NBUFSIZ = 17008)
@


1.4
log
@changed for f90 compilation
@
text
@d102 1
a102 1
        MAXMEM  = MAXDIM - NSLMAX
@


1.3
log
@added register setting
@
text
@d42 3
a44 2
        INTEGER, DIMENSION(:), POINTER :: IPQ
        INTEGER, DIMENSION(:), POINTER :: Q
d46 4
a52 1
#endif
d56 1
@


1.2
log
@cosmetic
@
text
@d152 3
@


1.1
log
@Initial revision
@
text
@d17 1
a17 2
C      PURPOSE:     READS SPIDER 3-D PICTURE FILE, CREATES 3-D IMAGE 
C                   FILE CONTAINING NUMBERS FOR CONNECTED CLUSTERS
@
