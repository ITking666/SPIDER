head	1.14;
access;
symbols
	healthdept_2018:1.14
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.10
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.7
	prec_CA:1.5
	noindx:1.5
	Bproc:1.5
	oct21:1.3
	last77:1.3;
locks; strict;
comment	@c @;


1.14
date	2018.10.03.14.34.04;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.25.25;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2009.06.22.14.47.53;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2008.12.05.13.28.51;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2007.12.20.18.34.49;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.18.18.54.37;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.18.14.32.45;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2004.02.10.18.42.15;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.16.18.15.57;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.12.06.13.40.16;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.09.14;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	98.02.17.18.59.10;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	97.10.06.17.04.10;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.15;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.14
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C DEUCL.F                                                   02.03.81   *         
C                                                           01.12.86   *         
C           IMC FILE FDUM                      JUN 2009 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C*
C*  DEUCL(NKDIM,NKLA,MCARD,NUMIM,KFAC,NFAC,                       
C*              KLAS, D, T, PK, CI, LUNI )                             
C*                                                                     
C*  CONSTRUCTION OF THE MONO-INDEXED TABLE OF DISTANCES BETWEEN                 
C*  THE NKLA CLASSES IN THE EUCLIDEAN SPACE CHARACTERIZED BY THE                
C*  KFAC FIRST FACTORIAL COORDINATES.                                           
C*                                                                              
C*  INPUT:                                                                      
C*      NKDIM        = MAJORIZER OF NKLA FOR T(*,KFAC)                          
C*      NKLA         = NUMBER OF CLUSTERS FOR THE GIVEN PARTITION               
C*      MCARD        = NKLA * (NKLA-1) / 2  = DIMENSION FOR D(*)                 
C*      JFIN         = 2 * NKLA - 1   = DIMENSION OF WORKING ARRAYS             
C*      NUMIM        = NUMBER OF OBJECTS TO BE CLUSTERED                        
C*      KFAC,NFAC    = FIRST KFAC FACTORIAL COORDINATES FROM A TOTAL            
C*                     OF NFAC                                                  
C*      KLAS(NUMIM)  = GIVEN PARTITION IN NKLA CLUSTERS.                        
C*      LUNI         = FILE CONTAINING THE FACTORIAL COORDINATES OF             
C*                     THE GRAVITY CENTERS OF THE CLUSTERS.                     
C*                                                                              
C*   OUTPUT:                                                                    
C*      T(NKLA,KFAC) = TABLE CONTAINING THE COORDINATES OF THE NKLA             
C*                     CENTERS                                                  
C*      PK(JFIN)     = WEIGHT OF THE NKLA CLUSTERS                              
C*      D(MCARD)     = MATRIX OF DISTANCES BETWEEN CLUSTERS                     
C*                                                                              
C*      WORKING ARRAY ... CI(KFAC)                                        
C*                                                                              
C*   INTERNAL FUNCTION  ... MONO.                                               
C*                                                                              
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

      SUBROUTINE DEUCL(NKDIM,NKLA,MCARD,NUMIM,KFAC,NFAC,                       
     &                  KLAS, D, T, PK, CI, LUNI)                              

      DIMENSION KLAS(NUMIM),D(MCARD),PK(NKLA),CI(NFAC),T(NKDIM,KFAC)                                                   

C     MONO-INDEXING OF THE TABLE OF DISTANCES                              

      MONO(K1,K2) = MIN(K1,K2) + ((MAX(K1,K2)-1)*(MAX(K1,K2)-2)/2)            

C     GRAVITY CENTER OF THE NKLA CLASSES                                   

      CALL REWF(LUNI, 1)                                                         
      DO  J=1,NKLA                                                       
         PK(J) = -1.0                                                             
      ENDDO 

      DO I = 1,NUMIM                                                      
         READ(LUNI,*) (CI(KF),KF=1,NFAC), FDUM,FDUM,FDUM,FDUM

         J = KLAS(I)

C        FOLLOWING LINE ADDED FEB. 04 al TO PREVENT ACCESS BEYOND PK
         IF (J .GT. NKLA)  CYCLE
                                                           
         IF (PK(J) .LE. -0.99) THEN                                
            PK(J) = 1.0                                                               
            DO K = 1,KFAC                                                       
               T(J,K) = CI(K)
	    ENDDO                                                             
         ELSE                       
            PK(J) = PK(J) + 1.0                                                       
            PKJ   = 1.0 / PK(J)                                                       
            DO   K = 1,KFAC                                                       
               CI(K)  = CI(K)  - T(J,K)                                                    
               T(J,K) = T(J,K) + PKJ*CI(K)                                                
	    ENDDO
        ENDIF
      ENDDO                                                                

C       CALCULATION OF THE MATRIX OF DISTANCES BETWEEN OBJECTS               
        DO K1 = 2,NKLA                                                      
           K3 = K1 - 1
                                                            
           DO K2 = 1,K3                                                        
              K1K2    = MONO (K1, K2)                                                     
              D(K1K2) = 0.0 
                                                             
              DO K = 1,KFAC                                                       
                 AJ      = T(K1,K) - T(K2,K)                                                 
                 D(K1K2) = D(K1K2) + AJ*AJ                                                  
              ENDDO
           ENDDO
	ENDDO

        DO K1 = 2,NKLA                                                      
           K3 = K1 - 1                                                            
           DO K2 = 1,K3                                                        
              K1K2    = MONO (K1, K2)                                                     
              D(K1K2) = PK(K1)*PK(K2)*D(K1K2) / (PK(K1)+PK(K2))                          
           ENDDO
        ENDDO

        END  
@


1.13
log
@GPL_2010
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.12
log
@_IMC or _PIX Line length bug
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@refactor
@
text
@d6 1
d9 1
a9 1
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d82 1
a82 1
         READ(LUNI,*) (CI(KF),KF=1,NFAC), FDUM,FDUM,FDUM
@


1.10
log
@NFAC,KFAC,READ BUG & REFORMATTING
@
text
@d8 1
a8 1
C=* Copyright (C) 1985-2007  Health Research Inc.                      *
d33 16
a48 16
C*              KLAS, D, T, PK, CI, LUNI )                            *
C*                                                                    *
C*  CONSTRUCTION OF THE MONO-INDEXED TABLE OF DISTANCES BETWEEN       *         
C*  THE NKLA CLASSES IN THE EUCLIDEAN SPACE CHARACTERIZED BY THE      *         
C*  KFAC FIRST FACTORIAL COORDINATES.                                 *         
C*                                                                    *         
C*  INPUT:                                                            *         
C*      NKDIM        = MAJORIZER OF NKLA FOR T(*,KFAC)                *         
C*      NKLA         = NUMBER OF CLUSTERS FOR THE GIVEN PARTITION     *         
C*      MCARD        = NKLA * (NKLA-1) / 2  = DIMENSION FOR D(*)      *         
C*      JFIN         = 2 * NKLA - 1   = DIMENSION OF WORKING ARRAYS   *         
C*      NUMIM        = NUMBER OF OBJECTS TO BE CLUSTERED              *         
C*      KFAC,NFAC    = FIRST KFAC FACTORIAL COORDINATES FROM A TOTAL  *         
C*                     OF NFAC                                        *         
C*      KLAS(NUMIM)  = GIVEN PARTITION IN NKLA CLUSTERS.              *         
C*      LUNI         = FILE CONTAINING THE FACTORIAL COORDINATES OF   *         
d50 13
a62 12
C*                                                                    *         
C*   OUTPUT:                                                          *         
C*      T(NKLA,KFAC) = TABLE CONTAINING THE COORDINATES OF THE NKLA   *         
C*                     CENTERS                                        *         
C*      PK(JFIN)     = WEIGHT OF THE NKLA CLUSTERS                    *         
C*      D(MCARD)     = MATRIX OF DISTANCES BETWEEN CLUSTERS           *         
C*                                                                    *         
C*   WORKING ARRAY ... CI(KFAC)                                       *
C*                                                                    *         
C*   INTERNAL FUNCTION  ... MONO.                                     *         
C*                                                                    *         
C*--------------------------------------------------------------------*         
d71 1
a71 1
      MONO(K1,K2)= MIN0(K1,K2) + ((MAX0(K1,K2)-1)*(MAX0(K1,K2)-2)/2)            
d84 3
a86 2
C          FOLLOWING LINE ADDED FEB. 04 al TO PREVENT ACCESS BEYOND PK
           IF (J .GT. NKLA) CYCLE
a103 1

d105 2
a106 1
           K3    = K1 - 1                                                            
d109 2
a110 1
              D(K1K2) = 0.0                                                              
d121 1
a121 1
              K1K2   = MONO (K1, K2)                                                     
@


1.9
log
@GPL
@
text
@d2 4
d8 1
a8 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d31 7
a37 6

C*--------------------------------------------------------------------*         
C*                                                                    *         
C*      CONSTRUCTION OF THE MONO-INDEXED TABLE OF DISTANCES BETWEEN   *         
C*      THE NKLA CLASSES IN THE EUCLIDEAN SPACE CHARACTERIZED BY THE  *         
C*      KFAC FIRST FACTORIAL COORDINATES.                             *         
d39 1
a39 1
C*   INPUT:                                                           *         
d54 4
a57 2
C*      PK(JFIN)     = WEIGHT OF THE NKLA CLUSTERS                     *         
C*      D(MCARD)     = MATRIX OF DISTANCES BETWEEN CLUSTERS            *         
a58 1
C*   WORKING ARRAY ... CI(KFAC)                                       *         
a60 2
C==02.03.81                                                           *         
C==01.12.86                                                           *         
d64 1
a64 1
     &                  KLAS, D, T, PK, CI, LUNI )                              
d80 2
a81 1
         READ(LUNI,*) (CI(K),K=1,KFAC)                                            
@


1.8
log
@GPL License added
@
text
@d1 118
@


1.7
log
@cosmetic
@
text
@a0 92

C*--------------------------------------------------------------------*         
C*                                                                    *         
C*      CONSTRUCTION OF THE MONO-INDEXED TABLE OF DISTANCES BETWEEN   *         
C*      THE NKLA CLASSES IN THE EUCLIDEAN SPACE CHARACTERIZED BY THE  *         
C*      KFAC FIRST FACTORIAL COORDINATES.                             *         
C*                                                                    *         
C*   INPUT:                                                           *         
C*      NKDIM        = MAJORIZER OF NKLA FOR T(*,KFAC)                *         
C*      NKLA         = NUMBER OF CLUSTERS FOR THE GIVEN PARTITION     *         
C*      MCARD        = NKLA * (NKLA-1) / 2  = DIMENSION FOR D(*)      *         
C*      JFIN         = 2 * NKLA - 1   = DIMENSION OF WORKING ARRAYS   *         
C*      NUMIM        = NUMBER OF OBJECTS TO BE CLUSTERED              *         
C*      KFAC,NFAC    = FIRST KFAC FACTORIAL COORDINATES FROM A TOTAL  *         
C*                     OF NFAC                                        *         
C*      KLAS(NUMIM)  = GIVEN PARTITION IN NKLA CLUSTERS.              *         
C*      LUNI         = FILE CONTAINING THE FACTORIAL COORDINATES OF   *         
C*                     THE GRAVITY CENTERS OF THE CLUSTERS.                     
C*                                                                    *         
C*   OUTPUT:                                                          *         
C*      T(NKLA,KFAC) = TABLE CONTAINING THE COORDINATES OF THE NKLA   *         
C*                     CENTERS                                        *         
C*      PK(JFIN)     = WEIGHT OF THE NKLA CLUSTERS                     *         
C*      D(MCARD)     = MATRIX OF DISTANCES BETWEEN CLUSTERS            *         
C*                                                                    *         
C*   WORKING ARRAY ... CI(KFAC)                                       *         
C*   INTERNAL FUNCTION  ... MONO.                                     *         
C*                                                                    *         
C==02.03.81                                                           *         
C==01.12.86                                                           *         
C*--------------------------------------------------------------------*         

      SUBROUTINE DEUCL(NKDIM,NKLA,MCARD,NUMIM,KFAC,NFAC,                       
     &                  KLAS, D, T, PK, CI, LUNI )                              

      DIMENSION KLAS(NUMIM),D(MCARD),PK(NKLA),CI(NFAC),T(NKDIM,KFAC)                                                   

C     MONO-INDEXING OF THE TABLE OF DISTANCES                              

      MONO(K1,K2)= MIN0(K1,K2) + ((MAX0(K1,K2)-1)*(MAX0(K1,K2)-2)/2)            

C     GRAVITY CENTER OF THE NKLA CLASSES                                   

      CALL REWF(LUNI, 1)                                                         
      DO  J=1,NKLA                                                       
         PK(J) = -1.0                                                             
      ENDDO 

      DO I = 1,NUMIM                                                      
         READ(LUNI,*) (CI(K),K=1,KFAC)                                            
         J = KLAS(I)
C          FOLLOWING LINE ADDED FEB. 04 al TO PREVENT ACCESS BEYOND PK
           IF (J .GT. NKLA) CYCLE
                                                           
         IF (PK(J) .LE. -0.99) THEN                                
            PK(J) = 1.0                                                               
            DO K = 1,KFAC                                                       
               T(J,K) = CI(K)
	    ENDDO                                                             
         ELSE                       
            PK(J) = PK(J) + 1.0                                                       
            PKJ   = 1.0 / PK(J)                                                       
            DO   K = 1,KFAC                                                       
               CI(K)  = CI(K)  - T(J,K)                                                    
               T(J,K) = T(J,K) + PKJ*CI(K)                                                
	    ENDDO
        ENDIF
      ENDDO                                                                

C       CALCULATION OF THE MATRIX OF DISTANCES BETWEEN OBJECTS               

        DO K1 = 2,NKLA                                                      
           K3    = K1 - 1                                                            
           DO K2 = 1,K3                                                        
              K1K2    = MONO (K1, K2)                                                     
              D(K1K2) = 0.0                                                              
              DO K = 1,KFAC                                                       
                 AJ      = T(K1,K) - T(K2,K)                                                 
                 D(K1K2) = D(K1K2) + AJ*AJ                                                  
              ENDDO
           ENDDO
	ENDDO

        DO K1 = 2,NKLA                                                      
           K3 = K1 - 1                                                            
           DO K2 = 1,K3                                                        
              K1K2   = MONO (K1, K2)                                                     
              D(K1K2) = PK(K1)*PK(K2)*D(K1K2) / (PK(K1)+PK(K2))                          
           ENDDO
        ENDDO

        END  
@


1.6
log
@CA rewrite
@
text
@a0 1
                                                                  
d23 2
a24 2
C*      PK(JFIN)    = WEIGHT OF THE NKLA CLUSTERS                     *         
C*      D(MCARD)    = MATRIX OF DISTANCES BETWEEN CLUSTERS            *         
d51 4
a54 1
         J     = KLAS(I)                                                           
d83 1
@


1.5
log
@# continuations removed, used opfile
@
text
@d1 2
a2 14
C *NAME* = DEUCL.FOR                   31-JAN-86      13:23:06                  
C----------------------------------=*=----------------------------------        
C           COPYRIGHT 1986 - JEAN-PIERRE BRETAUDIERE                            
C THE UNIVERSITY OF TEXAS HEALTH SCIENCE CENTER AT HOUSTON                      
C MEDICAL SCHOOL - DEPARTMENT OF PATHOLOGY AND LABORATORY MEDICINE              
C P.O. BOX 20708, HOUSTON, TX 77225.                                            
C DISCLAIMER: NO GUARANTEES OF PERFORMANCE ACCOMPANY THIS SOFTWARE,             
C NOR IS ANY RESPONSIBILITY ASSUMED ON THE PART OF THE AUTHOR                   
C OR THE INSTITUTION.  ALL THE SOFTWARE HAS BEEN TESTED EXTENSIVELY             
C AND EVERY EFFORT HAS BEEN MADE TO INSURE ITS RELIABILITY.                     
C THE FOLLOWING SOFTWARE MAY NOT BE COMMUNICATED TO A THIRD PARTY               
C UNDER ANY FORM WITHOUT WRITTEN PERMISSION OF THE AUTHOR.                      
C PLEASE REPORT ANY BUG(S) TO JPB AT (713) 792 52 00.                           
C OR THRU ARPANET AT  ......!rice!ots!ut-path!suprim                            
d9 1
a9 1
C*      INPUT:                                                        *         
d14 1
a14 1
C*      ICARD        = NUMBER OF OBJECTS TO BE CLUSTERED              *         
d17 2
a18 2
C*      KLAS(ICARD)  = GIVEN PARTITION IN NKLA CLUSTERS.              *         
C*      NGUS         = FILE CONTAINING THE FACTORIAL COORDINATES OF   *         
d21 1
a21 1
C*      OUTPUT:                                                       *         
d27 2
a28 2
C*      WORKING ARRAY ... CI(KFAC)                                    *         
C*      INTERNAL FUNCTION  ... MONO.                                  *         
d34 2
a35 2
      SUBROUTINE DEUCL(NKDIM,NKLA,MCARD,ICARD,KFAC,NFAC,                       
     &                  KLAS, D, T, PK, CI, NGUS )                              
d37 1
a37 1
      DIMENSION KLAS(ICARD),D(MCARD),PK(NKLA),CI(NFAC),T(NKDIM,KFAC)                                                   
d45 2
a46 3
                                                                              
      CALL REW(NGUS, 0)                                                         
      DO  J = 1,NKLA                                                       
d50 2
a51 2
      DO 50  I = 1,ICARD                                                      
         READ (NGUS)  (CI(K), K=1,KFAC)                                            
d53 14
a66 14
         IF (PK(J) .GT. -0.99) GO TO  30                                
         PK(J) = 1.0                                                               
         DO   K = 1,KFAC                                                       
            T(J,K)= CI(K)
	ENDDO                                                             
        GO TO  50
                                
   30   PK(J) = PK(J) + 1.0                                                       
        PKJ   = 1.0 / PK(J)                                                       
        DO   K = 1,KFAC                                                       
           CI(K) = CI(K) - T(J,K)                                                    
           T(J,K)= T(J,K) + PKJ*CI(K)                                                
	ENDDO
   50   CONTINUE                                                                
d70 1
a70 1
        DO   K1 = 2,NKLA                                                      
d72 6
a77 6
           DO   K2 = 1,K3                                                        
              K1K2  = MONO (K1, K2)                                                     
              D(K1K2)= 0.0                                                              
              DO   K = 1,KFAC                                                       
                 AJ = T(K1,K) - T(K2,K)                                                 
                 D(K1K2)= D(K1K2) + AJ*AJ                                                  
d81 5
a85 5
        DO   K1 = 2,NKLA                                                      
           K3    = K1 - 1                                                            
           DO   K2 = 1,K3                                                        
              K1K2  = MONO (K1, K2)                                                     
              D(K1K2)= PK(K1)*PK(K2)*D(K1K2) / (PK(K1)+PK(K2))                          
d89 1
a89 1
        END                                                                    
@


1.4
log
@a
@
text
@d45 8
a52 8
      SUBROUTINE DEUCL (NKDIM,NKLA,MCARD,ICARD,KFAC,NFAC,                       
     #                  KLAS, D, T, PK, CI, NGUS )                              
C                                                                               
      DIMENSION KLAS(ICARD),D(MCARD),PK(NKLA),CI(NFAC),                         
     #          T(NKDIM,KFAC)                                                   
C                                                                               
C......... MONO-INDEXING OF THE TABLE OF DISTANCES                              
C                                                                               
d54 3
a56 3
C                                                                               
C......... GRAVITY CENTER OF THE NKLA CLASSES                                   
C 
d59 11
a69 10
        DO  J = 1,NKLA                                                       
      PK(J) = -1.0                                                             
	ENDDO 
        DO 50  I = 1,ICARD                                                      
      READ (NGUS)  (CI(K), K=1,KFAC)                                            
      J     = KLAS(I)                                                           
        IF (PK(J) .GT. -0.99)          GO TO  30                                
      PK(J) = 1.0                                                               
        DO   K = 1,KFAC                                                       
      T(J,K)= CI(K)
d71 4
a74 3
                                       GO TO  50                                
   30 PK(J) = PK(J) + 1.0                                                       
      PKJ   = 1.0 / PK(J)                                                       
d76 2
a77 2
      CI(K) = CI(K) - T(J,K)                                                    
      T(J,K)= T(J,K) + PKJ*CI(K)                                                
d80 3
a82 3
C                                                                               
C......... CALCULATION OF THE MATRIX OF DISTANCES BETWEEN OBJECTS               
C                                                                               
d84 9
a92 7
      K3    = K1 - 1                                                            
        DO   K2 = 1,K3                                                        
      K1K2  = MONO (K1, K2)                                                     
      D(K1K2)= 0.0                                                              
        DO   K = 1,KFAC                                                       
      AJ    = T(K1,K) - T(K2,K)                                                 
      D(K1K2)= D(K1K2) + AJ*AJ                                                  
d94 7
d102 1
a102 10
   	ENDDO
	ENDDO
        DO   K1 = 2,NKLA                                                      
      K3    = K1 - 1                                                            
        DO   K2 = 1,K3                                                        
      K1K2  = MONO (K1, K2)                                                     
      D(K1K2)= PK(K1)*PK(K2)*D(K1K2) / (PK(K1)+PK(K2))                          
   	ENDDO
	ENDDO
         END                                                                    
@


1.3
log
@nosave
@
text
@d57 1
a57 1
CNO_SAVE                                                                              
@


1.2
log
@*** empty log message ***
@
text
@d56 2
a57 1
C                                                                               
a99 1
         RETURN                                                                 
@


1.1
log
@Initial revision
@
text
@d58 3
a60 2
        DO 10  J = 1,NKLA                                                       
   10 PK(J) = -1.0                                                              
d66 3
a68 2
        DO 20  K = 1,KFAC                                                       
   20 T(J,K)= CI(K)                                                             
d72 1
a72 1
        DO 40  K = 1,KFAC                                                       
d74 2
a75 1
   40 T(J,K)= T(J,K) + PKJ*CI(K)                                                
d80 1
a80 1
        DO 70  K1 = 2,NKLA                                                      
d82 1
a82 1
        DO 70  K2 = 1,K3                                                        
d85 1
a85 1
        DO 60  K = 1,KFAC                                                       
d87 6
a92 3
   60 D(K1K2)= D(K1K2) + AJ*AJ                                                  
   70   CONTINUE                                                                
        DO 80  K1 = 2,NKLA                                                      
d94 1
a94 1
        DO 80  K2 = 1,K3                                                        
d97 2
a98 1
   80   CONTINUE                                                                
@
