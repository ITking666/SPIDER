head	1.8;
access;
symbols
	healthdept_2018:1.8
	pre_getangas:1.7
	GPL2010:1.7
	pre_GPL2010:1.6
	pre_var_equation:1.6
	pre_fftwrings:1.6
	pre_opfiles:1.6
	src:1.6
	best-code:1.6
	x-named-regs:1.6
	x:1.6
	v13-00:1.6
	pre_GPL:1.4
	prec_CA:1.4
	noindx:1.4
	Bproc:1.3
	oct21:1.2
	last77:1.2;
locks; strict;
comment	@c @;


1.8
date	2018.10.03.14.34.03;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.24.13.25.21;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.20.11.28;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.17.18.05.39;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.29.20.36.03;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.11.10.23.09.12;	author yuchen;	state Exp;
branches;
next	1.2;

1.2
date	98.11.03.22.39.24;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.58;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.8
log
@email_health_dept
@
text
@
C **********************************************************************
C
C
C **********************************************************************
C *  AUTHOR :                                                              *
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C
C **********************************************************************

        SUBROUTINE CPROJ(NUMIM, JBASE, NPIX, S, D, BB, U, AD, 
     $                    SOMP, PJ, NB, LUV,JCASE, INB)

C	OPERATION OF PROJECTION AND DIAGONALIZATION, FOR DIAGO-
C       NALIZATION BY DIRECT READING.

        DIMENSION S(NPIX, JBASE),  BB(NPIX, JBASE),  AD(JCASE, JCASE), 
     &              U(NPIX),  PJ(NPIX),  D(NPIX),  LUV(NUMIM)
        LOGICAL  INB(JBASE)

        CALL REW(NB,  1)
        DO  M  =  1, JCASE
          DO L  =  1, JCASE
            AD(L, M)  =  0.0
          END DO
        END DO

        DO  I  =  1, NUMIM                                     
          IF(LUV(I) .EQ. 0) THEN
            READ(NB)
          ELSE
C
C	U90 HAS TO HAVE AVERAGE SUBTRACTED
C
            READ (NB) (U(KK),  KK = 1, NPIX) , PIA,  VAR,  INO
C
C	PQ HAS TO BE = 1
C
            PQ  =  1.0 / (SOMP * PIA)
            MC = 0
            DO  M  =  1, JBASE
              IF(INB(M))  THEN
                MC = MC + 1
                LC = 0
                DO L  =  1, M
                  IF(INB(L))  THEN
                    LC = LC + 1
                    CIL  =  0.0
                    CIM  =  0.0
                    DO K  =  1, NPIX
C
C	IF PJ() CONTAINS AVERAGES , PIA HAS TOP BE =1 
C
C
                      UUU  =  U(K)  -  PJ(K) * PIA
                      CIL  =  CIL  +  S(K, L) * UUU
                      CIM  =  CIM  +  S(K, M) * UUU
                    END DO
                    AD(LC, MC)  =  AD(LC, MC)  +  PQ * CIL * CIM
                  ENDIF
                END DO
              ENDIF
            END DO
          ENDIF
        END DO
                                                                               
        DO M  =  1, JCASE                                                       
          DO L  =  1, M                                                   
            AD(M, L)  =  AD(L, M)
          END DO
        END DO
        
        CALL VPROP (JCASE ,  JCASE ,  AD ,  D ,  U ,  KOD)

        MC = 0
        DO  M  =  1, JBASE
          IF(INB(M))  THEN
            MC = MC + 1
            DO J  =  1, NPIX
              BB(J, M)  =  0.0
              KC = 0
              DO  K  =  1, JBASE
                IF(INB(K))  THEN
                  KC = KC + 1
                  BB(J, M)  =  BB(J, M)  +  S(J, K) * AD(KC, MC)
                ENDIF
              END DO
            END DO
          ENDIF
        END DO

        DO  L  =  1, JBASE
          IF(INB(L))  THEN
            DO J  =  1, NPIX
              S(J, L)  =  BB(J, L)
            END DO
          ENDIF
        END DO
        RETURN
        END
@


1.7
log
@GPL_2010
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.6
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.5
log
@HRI GPL License used
@
text
@a2 1
C***************************************************************************
a5 1
C **************************************************************************
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1987 , WADSWORTH CENTER FOR LABORATORIES AND             *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
a30 1
C **************************************************************************
a33 1
C***************************************************************************
@


1.4
log
@ diagonalization comments removed
@
text
@d2 1
d6 1
d9 24
d39 1
d43 1
@


1.3
log
@a
@
text
@a1 1
C
a16 1
C
d19 2
a20 2
     $                    SOMP, PJ, NB, LUV,jcase, inb)
C
d23 2
a24 2
C
        DIMENSION S(NPIX, JBASE),  BB(NPIX, JBASE),  AD(JcASE, JcASE), 
d26 1
a26 1
        logical  inb(jbase)
d29 2
a30 2
        DO  M  =  1, JcASE
          DO L  =  1, JcASE
d47 1
a47 1
            mc = 0
d49 3
a51 3
              if(inb(m))  then
                mc = mc + 1
                lc = 0
d53 2
a54 2
                  if(inb(l))  then
                    lc = lc + 1
d66 2
a67 2
                    AD(Lc, Mc)  =  AD(Lc, Mc)  +  PQ * CIL * CIM
                  endif
d69 1
a69 1
              endif
d74 1
a74 1
        DO M  =  1, JcASE                                                       
d80 1
a80 2
C     DIAGONALIZATION OF THE PROJECTED MATRIX....                             
        CALL VPROP (JcASE ,  JcASE ,  AD ,  D ,  U ,  KOD)
d82 1
a82 1
        mc = 0
d84 2
a85 2
          if(inb(m))  then
            mc = mc + 1
d88 1
a88 1
              kc = 0
d90 4
a93 4
                if(inb(k))  then
                  kc = kc + 1
                  BB(J, M)  =  BB(J, M)  +  S(J, K) * AD(Kc, Mc)
                endif
d96 1
a96 1
          endif
d100 1
a100 1
          if(inb(l))  then
d104 1
a104 1
          endif
@


1.2
log
@nosave
@
text
@d29 1
a29 1
CNO_SAVE
@


1.1
log
@Initial revision
@
text
@d29 1
a29 1

@
