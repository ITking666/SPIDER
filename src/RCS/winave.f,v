head	1.18;
access;
symbols
	pre_mrcs:1.18
	healthdept_2018:1.18
	pre_getangas:1.17
	GPL2010:1.17
	pre_GPL2010:1.16
	pre_var_equation:1.16
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.13
	prec_CA:1.13
	noindx:1.12
	Bproc:1.11
	oct21:1.9
	last77:1.9;
locks; strict;
comment	@c @;


1.18
date	2018.10.03.14.51.09;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.06.24.13.27.17;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2009.05.22.10.57.08;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.20.03.13;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.17.58.38;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.19.15.56.10;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.11.14.07.53;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.12.07.16.35.46;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.11.10.23.11.25;	author yuchen;	state Exp;
branches;
next	1.9;

1.9
date	99.02.05.15.09.45;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	98.01.20.21.24.01;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.10.15.17.10.16;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	96.02.22.17.20.32;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.02.22.16.41.10;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.10.27.19.34.14;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	95.09.29.16.45.53;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.12.42;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.51;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.18
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C  WINAVE.F    INTERP. FOR NONINTEGER AVERAGING. 5/2/83 MR
C              LONG FILE NAMES                   JAN 89 ARDEAN LEITH
C              OPFILEC                           FEB 03 ARDEAN LEITH
C              SETPRMB PARAMETERS                MAY 09 ARDEAN LEITH
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C WINAVE(LUN1,LUN2,NDOC,NSAM1,NROW1,NSAM2,NROW2)
C
C PARAMETERS:
C	  LUN1		LOGICAL UNIT NUMBER OF LARGE FILE
C	  LUN2		LOGICAL UNIT NUMBER OF SMALL FILE
C	  NDOC		LOGICAL UNIT NUMBER FOR DOCUMENT FILE
C	  NSAM1,NROW1	DIMENSIONS OF IMAGE FILE TO BE AVERAGED
C	  NSAM2,NROW2	DIMENSIONS OF SMALL FILE
C
C   INTERPOLATION FOR NONINTEGER AVERAGING INTRODUCED. 5/2/83 MR
C
C--*******************************************************************

	SUBROUTINE WINAVE(LUN1,LUN2,NDOC,NSAM1,NROW1,NSAM2,NROW2)

	INCLUDE 'CMBLOCK.INC' 
        INCLUDE 'CMLIMIT.INC' 

        CHARACTER(LEN=MAXNAM)     ::  DOCFIL,FILNAM,FILPAT

	COMMON DUM(80),NPEAK(4000),PLIST(10),BUF(1)

        CHARACTER *1   NULL,FIX,Y,CONT,CDUM
 	LOGICAL        CFLAG,C2FLAG
	INTEGER        XBIG,YBIG,ILOW,IHI,IRTFLG

	DATA   Y/'Y'/,NBUF/4000/

        NULL = CHAR(0)
	LUN3 = 20

C       12/12/85 SEQUENTIAL SEARCH OPTION
	NSS = 0
	IF (FCHAR(4:4) .EQ. 'S') THEN
           NSS = 1
           WRITE(NOUT,1)
1	   FORMAT(' ** WARNING: SEQUENTIAL DOCUMENT SEARCH SPECIFIED')
        ENDIF

	NOPEN=0
	NSW=1
	NOFF1=31
	NOF11=NOFF1+NSAM1
	NOFF2=NOFF1+2*NSAM1
	NOFF3=NOFF2+NSAM2+1
	IB1=NOFF1
	IB2=NOF11

C       MAKE OUTPUT FILE BLANK
	DO  IS=1,NSAM2
	   BUF(NOFF1+IS-1) = 0.
	ENDDO
	DO  IR=1,NROW2
          CALL WRTLIN(LUN2,BUF(NOFF1),NSAM2,IR)
	ENDDO

	NSAMC = NSAM1 - NSAM2
	NROWC = NROW1 - NROW2
	CALL SETPRMB(LUN2 ,0.,0., 0.,0.)  ! UNNEEDED??

	CALL FILERD(DOCFIL,NLETD,NULL,'DOCUMENT',IRTFLG)
	IF (DOCFIL(1:1) .EQ. '*') RETURN

10 	CONTINUE
        IDONE = 1
        NUM   = NBUF
	ILOW  = 0
	IHI   = NBUF 
        CALL RDPRAI(NPEAK,NBUF,NUM,ILOW,IHI,'PEAK NUMBERS',CDUM,IRTFLG)

	CALL RDPRMC(FIX,NCHAR,.TRUE.,
     &          'NUMBER OF PEAKS FIXED? (Y/N)',NULL,IRTFLG)
	IFIX=0
	IF (FIX.EQ.'Y') IFIX=1

	CALL RDPRMI(ISTEP,IDUM,NOT_USED,'PEAK NUMBER INCREMENT')
	CALL RDPRMC(CONT,NCHAR,.TRUE.,'CONTROL WINDOWS? (Y/N)',
     &              NULL,IRTFLG)
	CFLAG = .FALSE.
	ICONT = 1

	IF (CONT .EQ. 'Y') THEN
	  CFLAG =.TRUE.
	  CALL RDPRMI(ICONT,IDUM,NOT_USED,'CONTROL INTERVAL')

C         GET FILE NAME PATTERN
          CALL FILSEQP(FILPAT,NLET,IDUM,0,IDUM,
     &                 'PREFIX OF CONTROL WINDOWS',IRTFLG)
          IF (IRTFLG .NE. 0) RETURN
        ENDIF

	IF (ISTEP.LE.0) ISTEP=1
	ICONT  = ICONT*ISTEP
        ICOUNT = 0
        ILOWX  = (NSAM1-NSAMC)/2+1
        ILOWY  = (NROW1-NROWC)/2+1
        IHIGHX = NSAM1/2+NSAMC/2
        IHIGHY = NROW1/2+NROWC/2
	WRITE (NOUT,1111) ILOWX,ILOWY,IHIGHX,IHIGHY
1111    FORMAT(' ILOWX,-Y,IHIGHX,-Y',4I6)

C	HANDMADE DOLOOP:
	I=1-ISTEP
120 	I=I+ISTEP
 
C       COORDS FROM DOCUMENT FILE
 
	ICK=I-1
	IDO=MOD(ICK,ICONT)
	C2FLAG = .FALSE.
	IF (CFLAG .AND. IDO.EQ.0 .OR. IDO.EQ.ISTEP) C2FLAG=.TRUE.
C       12/12/85: NSS SUBSTITUTED FOR 0 IN LAST ARGUMENT TO ENABLE 
C       SEQUENTIAL SEARCH OPTION IF SPECIFIED ('WV S')
        IKEY = NPEAK(I)

C       *****************88DEBUG
        WRITE(NOUT,*) 'DEBUGGING: I,IKEY,NPEAK(2):',I,IKEY,NPEAK(2)
C        *****************

	CALL UNSAV(DOCFIL,NOPEN,NDOC,IKEY,PLIST,2,LERR,NSS)
	NOPEN = 1
	IF (LERR .NE. 0) THEN
           WRITE (NDAT,9301) NPEAK(I)
9301       FORMAT(' ***',I4,' OUTSIDE PEAK FILE RANGE')
           GOTO 9500
        ENDIF

        X1=PLIST(1)
        Y1=PLIST(2)

        IF (X1.LT.ILOWX .OR. X1.GT.IHIGHX .OR. 
     &      Y1.LT.ILOWY .OR. Y1.GT.IHIGHY)THEN
           IF (IFIX.NE.0) THEN
             DO  III=NUM+1,NUM+ISTEP
               NPEAK(III) = NPEAK(III-1)+1
	     ENDDO
             NUM=NUM+ISTEP
           ENDIF

           IF (I.LT.NUM) GOTO 120
           IF (IDONE.EQ.1) GOTO 9500
           NSW = 2
           GOTO 10
        ENDIF

	IF (C2FLAG) THEN
          IWNUM = NPEAK(I)
          CALL FILGET(FILPAT,FILNAM,NLET,IWNUM,IRTFLG)

          MAXIM  = 0
          NSLICE = 1
          CALL OPFILEC(0,.FALSE.,FILNAM,LUN3,'U',IFORM,
     &             NSAM2,NROW2,NSLICE,MAXIM,' ',.TRUE.,IRTFLG)
        ENDIF

        IX1=X1
        IY1=Y1
        DX=1-(X1-IX1)
        DY=1-(Y1-IY1)
        C1=(1-DX)*(1-DY)
        C2=DX*(1-DY)
        C3=DY*(1-DX)
        C4=DX*DY

C	THE FOLLOWING LINES TAKE INTO ACCOUNT THE INTERPOLATION
	IXBIG=NSAM1+2-IX1-NSAM2/2-1
	IYBIG=NROW1+2-IY1-NROW2/2-1
        ICOUNT=ICOUNT+1
	WRITE (NDAT,11) NPEAK(I),X1,Y1,IXBIG,DX,IYBIG,DY
11	FORMAT(' PEAK #:',I4,' X:',F7.2,' Y:',F7.2,
     &     'UPPER LEFT CORNER: X=',I5,'+',F5.2,' Y=',I5,'+',F5.2)

	IF (IYBIG+NROW2-1.GT.NROW1 .OR. IXBIG+NSAM2-1.GT.NSAM1)THEN
           WRITE(NOUT,91)NPEAK(I)
91         FORMAT(' *** PEAK NO.',I3,' OUT OF LIMITS')

110        IF (IFIX.NE.0) THEN
             DO  III=NUM+1,NUM+ISTEP
                NPEAK(III)=NPEAK(III-1)+1
 	     ENDDO 
             NUM=NUM+ISTEP
           ENDIF

           IF (I.LT.NUM) GOTO 120
           IF (IDONE.EQ.1) GOTO 9500
           NSW=2
           GOTO 10
        ENDIF

	CALL REDLIN(LUN1,BUF(IB1),NSAM1,IYBIG)
	DO  J=1,NROW2
          LINE=IYBIG+J
          IF(LINE.GT.NROW1)LINE=NROW1
          CALL REDLIN(LUN1,BUF(IB2),NSAM1,LINE)
          CALL REDLIN(LUN2,BUF(NOFF2),NSAM2,J)
          DO  K=1,NSAM2
            IX2=IXBIG+K
            IF(IX2.GT.NSAM1)IX2=NSAM1
            I1=IB1-1+IXBIG+K-1
            I2=IB1-1+IX2
            I3=IB2-1+IXBIG+K-1
            I4=IB2-1+IX2
            VAL=BUF(I1)*C1+BUF(I2)*C2+BUF(I3)*C3+BUF(I4)*C4
            IF (C2FLAG) BUF(NOFF3+K-1)=VAL
            BUF(NOFF2+K-1)=BUF(NOFF2+K-1)+VAL
	  ENDDO
          IZ=IB1
          IB1=IB2
          IB2=IZ
          IF (C2FLAG) CALL WRTLIN(LUN3,BUF(NOFF3),NSAM2,J)
          CALL WRTLIN(LUN2,BUF(NOFF2),NSAM2,J)
	ENDDO

	IF (C2FLAG) CLOSE(LUN3)
        IF (I.LT.NUM)  GOTO 120
        IF (IDONE.EQ.1)  GOTO 9500
        NSW = 2
        GOTO 10

9500	CLOSE(NDOC)
	WRITE(NDAT,12) NSAMC,NROWC
12      FORMAT(' DIMENSIONS OF CCF WINDOW USED:',2I6)
        WRITE(NOUT,14) ICOUNT
14      FORMAT(' ',I5,' PEAKS USED FOR AVERAGING')

	RETURN
	END

@


1.17
log
@GPL_2010
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.16
log
@rdprmb parameters
@
text
@a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.15
log
@GPL License fixed
@
text
@d4 4
a7 2
C  WINAVE.F                              LONG FILE NAMES JAN 89 al
C              OPFILEC                   FEB  03 ARDEAN LEITH
d11 1
a11 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
a53 1
        COMMON /COMMUN/DOCFIL,FILNAM,FILPAT
d69 1
a69 1
           NSS=1
a83 1

d85 1
a85 1
	   BUF(NOFF1+IS-1)=0.
a86 1

d90 5
a94 4
C	CALL RDPRMI(NSAMC,NROWC,NOT_USED,'DIMENSIONS OF CCF-WINDOW')
	NSAMC=NSAM1-NSAM2
	NROWC=NROW1-NROW2
	CALL SETPRM(LUN2,NSAM2,NROW2,0.,0.,0.,'R')
d96 1
a96 1
	IF (DOCFIL(1:1) .EQ. '*')RETURN
d169 1
a169 1
               NPEAK(III)=NPEAK(III-1)+1
d251 1
a251 1
        NSW=2
@


1.14
log
@HRI GPL License used
@
text
@a7 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.13
log
@opfilec
@
text
@d9 24
@


1.12
log
@nloop,iloop_removed
@
text
@d4 2
a6 1
C                                                                      *
a15 4
C  WINAVE.F                                   LONG FILE NAMES JAN 89 al
C
C**********************************************************************
C
a30 1
 
d32 4
a37 1
	COMMON /COMMUN/ DOCFIL,FILNAM,FILPAT
a38 1
        CHARACTER *81  DOCFIL,FILNAM,FILPAT
d49 1
a49 1
	NSS=0
d53 1
a53 1
1	FORMAT(' ** WARNING: SEQUENTIAL DOCUMENT SEARCH IS SPECIFIED')
d86 1
a86 3
        CALL RDPRAI(NPEAK,NBUF,NUM,ILOW,IHI,
     $        '.ENTER PEAK NUMBERS:', CDUM,IRTFLG)
C
d89 1
a89 1
     &    'NUMBER OF PEAKS FIXED? (Y/N)',NULL,IRTFLG)
d95 1
a95 1
     &    NULL,IRTFLG)
d133 1
a133 1
C*****************88DEBUG
d135 1
a135 1
C*****************
d138 2
a139 2
	NOPEN=1
	IF (LERR.NE.0) THEN
d159 1
a159 1
           NSW=2
d164 1
a164 1
          IWNUM=NPEAK(I)
d166 5
a170 3
          MAXIM = 0
          CALL OPFIL(.FALSE.,FILNAM,LUN3,'U',NSAM2,NROW2,1,
     &             MAXIM,' ',.TRUE.,IRTFLG)
d181 1
d188 1
a188 1
     $     'UPPER LEFT CORNER: X=',I5,'+',F5.2,' Y=',I5,'+',F5.2)
d239 1
a239 1
12      FORMAT('  DIMENSIONS OF CCF WINDOW USED:',2I5)
@


1.11
log
@header
@
text
@d76 1
a76 1
C	CALL RDPRMI(NSAMC,NROWC,NLOOP,ILOOP,'DIMENSIONS OF CCF-WINDOW')
d97 1
a97 1
	CALL RDPRMI(ISTEP,IDUM,NLOOP,ILOOP,'PEAK NUMBER INCREMENT')
d105 1
a105 1
	  CALL RDPRMI(ICONT,IDUM,NLOOP,ILOOP,'CONTROL INTERVAL')
@


1.10
log
@a
@
text
@d2 12
a13 1
C**********************************************************************
@


1.9
log
@CNO_SAVE
@
text
@d23 1
a23 1
CNO_SAVE 
@


1.8
log
@used opfil & f90 formatting
@
text
@d23 1
@


1.7
log
@*** empty log message ***
@
text
@a2 2
C  WINAVE.FOR
C                                        LONG FILE NAMES JAN 89 al
d4 2
d25 1
a25 1
	COMMON DUM(80),NPEAK(4000),PLIST(10),BUF2(17000),BUF(1)
d38 1
a38 1
C 12/12/85 SEQUENTIAL SEARCH OPTION
d58 1
a58 1
	 BUF(NOFF1+IS-1)=0.
a70 1

d73 3
a75 3
        NUM = NBUF
	ILOW = 0
	IHI = NBUF 
d115 1
a115 1
C COORDS FROM DOCUMENT FILE
d158 3
a160 1
          CALL OPENFB(BUF2,FILNAM,LUN3,NSAM2,NROW2,'UNKNOWN',NF,1)
@


1.6
log
@*** empty log message ***
@
text
@d57 3
a59 2
	DO 5 IS=1,NSAM2
5	BUF(NOFF1+IS-1)=0.
d61 1
a61 1
	DO 6 IR=1,NROW2
d63 1
a63 1
6	CONTINUE
d144 1
a144 1
             DO 1109 III=NUM+1,NUM+ISTEP
d146 1
a146 1
1109         CONTINUE
d183 3
a185 2
             DO 109 III=NUM+1,NUM+ISTEP
109          NPEAK(III)=NPEAK(III-1)+1
d196 1
a196 1
	DO 80 J=1,NROW2
d201 1
a201 1
          DO 50 K=1,NSAM2
d211 1
a211 1
50        CONTINUE
d217 1
a217 1
80	CONTINUE
@


1.5
log
@cosmetic & parrelel with manual chapters, filseqp
@
text
@d97 1
a97 1
                       "PREFIX OF CONTROL WINDOWS",IRTFLG)
@


1.4
log
@idone=1 for rdprai instead of getnum call
@
text
@a22 1
#ifdef SP_UNIX
d24 1
a24 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif
d55 1
a55 1
C MAKE OUTPUT FILE BLANK
d59 1
d63 1
a63 1
C	CALL RDPRMI(NSAMC,NROWC,NLOOP,ILOOP,'DIMENSIONS OF CCF-WINDOW$')
d68 1
a68 1
	IF(DOCFIL(1:1).EQ.'*')RETURN
a69 4
C 	replace all this by a call to rdprai
C	WRITE(NOUT,2)
C2	FORMAT($' .ENTER PEAK NUMBERS: ')
C10	CALL GETNUM(NPEAK,NBUF,NUM,IDONE,NSW)
d81 1
a81 1
     &    'NUMBER OF PEAKS FIXED? (Y/N)$',NULL,IRTFLG)
d85 2
a86 2
	CALL RDPRMI(ISTEP,IDUM,NLOOP,ILOOP,'PEAK NO. INCREMENT$')
	CALL RDPRMC(CONT,NCHAR,.TRUE.,'CONTROL WINDOWS? (Y/N)$',
d89 1
a89 1
	ICONT=1
d93 2
a94 1
	  CALL RDPRMI(ICONT,IDUM,NLOOP,ILOOP,'CONTROL INTERVAL$')
d96 2
a97 2
          WRITE(NOUT,*) ' FOR CONTROL WINDOWS'
          CALL FILSEQ(FILPAT,NLET,IDUM,0,IDUM,IRTFLG)
d102 6
a107 6
	ICONT=ICONT*ISTEP
        ICOUNT=0
        ILOWX=(NSAM1-NSAMC)/2+1
        ILOWY= (NROW1-NROWC)/2+1
        IHIGHX=NSAM1/2+NSAMC/2
        IHIGHY=NROW1/2+NROWC/2
d110 1
d114 1
a114 1
C
d116 1
a116 1
C
d175 1
a175 1
     $  'UPPER LEFT CORNER: X=',I5,'+',F5.2,' Y=',I5,'+',F5.2)
d225 1
a225 1
12      FORMAT(' ** DIMENSIONS OF CCF WINDOW USED:',2I5)
d227 2
a228 1
14      FORMAT(' **',I5,' PEAKS USED FOR AVERAGING')
@


1.3
log
@replace GETNUM by RDPRAI call
@
text
@d78 1
@


1.2
log
@cpp_lines_added
@
text
@d32 1
a32 1
        CHARACTER *1   NULL,FIX,Y,CONT
d34 1
a34 1
	INTEGER        XBIG,YBIG
d72 12
a83 3
	WRITE(NOUT,2)
2	FORMAT($' .ENTER PEAK NUMBERS: ')
10	CALL GETNUM(NPEAK,NBUF,NUM,IDONE,NSW)
@


1.1
log
@Initial revision
@
text
@d23 3
d27 1
@
