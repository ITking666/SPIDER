head	1.22;
access;
symbols
	pre_mrcs:1.22
	healthdept_2018:1.22
	pre_getangas:1.20
	GPL2010:1.20
	pre_GPL2010:1.19
	pre_var_equation:1.19
	pre_fftwrings:1.19
	pre_opfiles:1.19
	src:1.19
	best-code:1.19
	x-named-regs:1.19
	x:1.19
	v13-00:1.19
	pre_GPL:1.18
	prec_CA:1.18
	noindx:1.17
	Bproc:1.15
	oct21:1.12
	last77:1.12;
locks; strict;
comment	@c @;


1.22
date	2018.10.03.14.34.04;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2014.07.30.14.35.48;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2010.06.24.13.25.23;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.17.20.53.01;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.18.16.20.44;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2002.03.11.14.08.46;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2001.01.29.21.37.16;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	99.11.10.18.46.48;	author pawel;	state Exp;
branches;
next	1.14;

1.14
date	99.11.10.18.41.59;	author pawel;	state Exp;
branches;
next	1.13;

1.13
date	99.11.10.16.45.41;	author pawel;	state Exp;
branches;
next	1.12;

1.12
date	99.03.26.17.00.46;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.03.25.19.32.05;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.03.23.17.31.36;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.03.18.20.59.24;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.03.16.19.35.16;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.03.01.19.50.59;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	98.01.30.18.30.15;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.01.30.17.37.34;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.12.28.17.12.30;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.10.03.14.58.29;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.04.12;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.12;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.22
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C   DCHIST                        I4 UPDATED        FEB 88 ArDean Leith
C                                 AXIS ALTERED     JULY 88 ArDean Leith
C                                 LONG FILE NAMES   FEB 89 ArDean Leith
C                                 POSTSCRIPT OUTPUT JAN 99 ArDean Leith
C                                 MAXNAM            JUL 14 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   DCHIST(DOCF1,LUN)
C
C   PURPOSE: CREATES HISTOGRAM IN A POSTSCRIPT FILE FROM A DOC FILE
C
C--*********************************************************************

	SUBROUTINE DCHIST(LUNDOC,LUNPOS)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        PARAMETER     (NSIZE  = 2000)
	COMMON        IFREQ(660),DATA(3,NSIZE)

        CHARACTER(LEN=MAXNAM) :: FILDOC,FILPOS
        LOGICAL       ERRI2

        INCLUDE 'F90ALLOC.INC'
        REAL, DIMENSION(:,:), POINTER :: PBUF

C       READ DOCUMENT FILE, ALL KEYS AND REGISTERS 
        MAXX   = 0
        MAXY   = 0
        CALL GETDOCDAT('HISTOGRAM DOCUMENT',.TRUE.,FILDOC,LUNDOC,
     &                 .TRUE.,MAXX, MAXY,PBUF,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999

        KEY1 = 1
        KEY2 = MAXY
8       CALL RDPRIS(KEY1,KEY2,NOT_USED,'FIRST & LAST KEY NUMBERS',
     &              IRTFLG)
        IF (IRTFLG .NE. 0 .AND. IRTFLG .NE. -3) GOTO 9999
        IF (ERRI2(KEY1,KEY2,2,1,MAXY,KEY1,MAXY)) GOTO 8

9       CALL RDPRI1S(ICOL,NOT_USED,
     &       'REGISTER (COLUMN) IN DOC. FILE USED FOR HISTOGRAM',IRTFLG)
        IF (IRTFLG .NE. 0 .AND. IRTFLG .NE. -3) GOTO 9999
        IF (ERRI2(ICOL,IDUM,1,0,MAXX-1,IDUM,IDUM)) GOTO 9

C       FIND RANGE FOR THIS COLUMN BETWEEN DESIRED KEYS
        SXMIN = PBUF(ICOL + 1,KEY1)
        SXMAX = SXMIN

        DO IKEY=KEY1,KEY2
           ICOUNT = PBUF( 1,IKEY)
           IF (ICOUNT .GT. 0) THEN
              VALUE = PBUF( ICOL + 1,IKEY)
              SXMIN = MIN(SXMIN,VALUE)
              SXMAX = MAX(SXMAX,VALUE)
           ENDIF
        ENDDO

        WRITE(NOUT,101) SXMIN, SXMAX 
101     FORMAT(' RANGE OF X VALUES IN THIS COLUMN:',G11.3,'...',G11.3,/)

11      XINT = (SXMAX - SXMIN) / 10
        CALL RDPRM2S(SXMIN,XINT,NOT_USED,
     &               'STARTING X VALUE, INTERVAL',IRTFLG)
        IF (IRTFLG .EQ. -1 .OR. IRTFLG .GT. 0) GOTO 9
        IF (IRTFLG .GT. 0) GOTO 9999

        CALL RDPRM1S(SXMAX,NOT_USED, 'ENDING X VALUE',IRTFLG)
        IF (IRTFLG .EQ. -1 .OR. IRTFLG .GT. 0) GOTO 11

C       CALCULATE HISTOGRAM -----------------------------

C       FIND NUMBER OF BINS
        FNBIN = (SXMAX - SXMIN) / XINT
        NBIN  = FNBIN
        IF (FLOAT(NBIN) .LT. FNBIN) NBIN = NBIN + 1
        NBIN  = MIN(660,NBIN)

        DO I = 1,NBIN
           IFREQ(I) = 0
        ENDDO

        MAXBIN = 0
        ICN    = 0
        ICM    = 0
        ICC    = 0
        DO IKEY=KEY1,KEY2
           ICOUNT = PBUF( 1, IKEY)
           IF (ICOUNT .GT. 0) THEN
              VALUE  = PBUF( ICOL + 1,IKEY)
              IDIV   = INT((VALUE - SXMIN) / XINT) + 1
              IF (IDIV .LT. 0) THEN
                 ICN = ICN + 1
              ELSEIF (IDIV .GT. NBIN) THEN
                 ICM = ICM + 1
              ELSE
                 ICC   = ICC+1
                 NFREQ = IFREQ(IDIV) + 1
                 IF (NFREQ .GT. MAXBIN) MAXBIN = NFREQ
                 IFREQ(IDIV) = NFREQ
              ENDIF
           ENDIF
        ENDDO

        WRITE(NOUT,111) ICC,ICN,ICM
111     FORMAT(' VALUES USED IN HISTOGRAM: ',I6,//,
     &         ' VALUES BELOW LOWER END: ',I6,' ABOVE UPPER END: ',I6)

C       HEADING FOR BIN DATA OUTPUT
        WRITE(NOUT,113) 
113     FORMAT(//,' INTERVAL:',14X,'NUMBER IN INTERVAL')

        DO L=1,NBIN
           F1 = (L - 1) * XINT + SXMIN
           F2 = L * XINT + SXMIN
           WRITE (NOUT,911) F1,F2,IFREQ(L)
911        FORMAT(1X,F12.4,' TO ',F12.4,2X,I4)
        ENDDO

C       GET NAME OF POSTSCRIPT FILE AND OPEN AS SEQUENTIAL FORMATTED
        LENREC = 0
        CALL OPAUXFILE(.TRUE.,FILPOS,'ps',LUNPOS,LENREC,'N',
     &                       'POSTSCRIPT OUTPUT',.TRUE.,IRTFLGT)
        IF (IRTFLGT .NE. 0) GOTO 9999

        CALL POSTRT(-LUNPOS)
        CALL POSCALE(LUNPOS,1.0,1.0,  -12.0,-7.0,  125.0,102.0)

C       MAKE AXIS FOR GRAPH
        SYMIN = 0.0
        SYMAX = MAXBIN
        CALL POSAXIS('Y',SYMIN,SYMAX, 0.0,0.0, 120.0,100.0, YFACTR,
     &              LUNPOS,IRTFLG)

        CALL POSAXIS('X',SXMIN,SXMAX, 0.0,0.0, 120.0,100.0, XFACTR,
     &              LUNPOS,IRTFLG)

C       TRANSFER DATA FOR PLOT:

        X     = 0.0
        XPLUS = XINT  * XFACTR
        DO  L=1,NBIN
          KK           = (L-1) * 3 + 1
          Y            = IFREQ(L) * YFACTR
          DATA(1,KK)   = X 
          DATA(2,KK)   = Y

          X            = X + XPLUS
          DATA(1,KK+1) = X
          DATA(2,KK+1) = Y

          DATA(1,KK+2) = X
          DATA(2,KK+2) = 0.0
        ENDDO

        NDATA = 3 * NBIN
        CALL POARAYF(LUNPOS,DATA,NDATA,.FALSE.,.FALSE.)

        NLET = LNBLNKN(FILPOS)
        WRITE(NOUT,*) ' GRAPH PLACED IN: ',FILPOS(1:NLET)

9998    CLOSE(LUNPOS)

C       DEALLOCATE DOC. FILE MEMORY
9999    DEALLOCATE(PBUF)

        END
@


1.21
log
@LEN=MAXNAM) :: FILDOC,FILPOS
@
text
@d16 1
a16 1
C=* Email: spider@@wadsworth.org                                        *
@


1.20
log
@GPL_2010
@
text
@d8 1
d14 1
a14 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d41 1
d46 1
a46 1
        CHARACTER*81  FILDOC,FILPOS
d51 1
@


1.19
log
@GPL License fixed
@
text
@a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.18
log
@icount
@
text
@d10 23
a32 7
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999.  HEALTH RESEARCH INCORPORATED,            *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
@


1.17
log
@nloop,iloop_removed
@
text
@d61 2
a62 2
           KEYGOT = PBUF( 1,IKEY)
           IF (KEYGOT .EQ. IKEY) THEN
d98 2
a99 2
           KEYGOT = PBUF( 1, IKEY)
           IF (KEYGOT .EQ. IKEY) THEN
@


1.16
log
@rdprm1s
@
text
@d46 1
a46 1
8       CALL RDPRIS(KEY1,KEY2,NLOOP,ILOOP,'FIRST & LAST KEY NUMBERS',
d51 1
a51 1
9       CALL RDPRI1S(ICOL,NLOOP,ILOOP,
d73 1
a73 1
        CALL RDPRM2S(SXMIN,XINT,NLOOP,ILOOP,
d78 1
a78 1
        CALL RDPRM1S(SXMAX,NLOOP,ILOOP, 'ENDING X VALUE',IRTFLG)
@


1.15
log
@*** empty log message ***
@
text
@d78 1
a78 1
        CALL RDPRM2S(SXMAX,FDUM,NLOOP,ILOOP, 'ENDING X VALUE',IRTFLG)
@


1.14
log
@*** empty log message ***
@
text
@d175 1
a175 1
9999    DEALLOCATE(PBUF,IRTFLG)
a176 1
        RETURN
@


1.13
log
@getdocdat changed
@
text
@d175 1
a175 1
9999    CALL DEALLOCATE(PBUF,IRTFLG)
@


1.12
log
@initialiazed sxmin,sxmax
@
text
@a34 1
#ifdef SP_F90
d36 1
a36 7
        REAL, DIMENSION(:), POINTER :: PBUF
        REAL, DIMENSION(:), POINTER :: IPQ
#else
      DIMENSION      PBUF(1)
      POINTER        (IPQ,PBUF) 
#endif

d41 1
a41 4
     &                 .TRUE.,MAXX, MAXY,IPQ,IRTFLG)
#ifdef SP_F90
        PBUF => IPQ
#endif
d57 1
a57 1
        SXMIN = PBUF((KEY1 - 1) * MAXX + ICOL + 1)
d61 1
a61 1
           KEYGOT = PBUF((IKEY - 1) * MAXX + 0 + 1)
d63 1
a63 1
              VALUE = PBUF((IKEY - 1) * MAXX + ICOL + 1)
d98 1
a98 1
           KEYGOT = PBUF((IKEY - 1) * MAXX + 0 + 1)
d100 1
a100 1
              VALUE  = PBUF((IKEY - 1) * MAXX + ICOL + 1)
d175 1
a175 1
9999    CALL DEALLOCMEM_R(IPQ,IRTFLG)
@


1.11
log
@erri2 igo bad
@
text
@d67 2
a68 2
        XMIN = PBUF((KEY1 - 1) * MAXX + ICOL + 1)
        XMAX = XMIN
@


1.10
log
@bad dchist rdpris irtflg test
@
text
@d59 1
a59 1
        IF (ERRI2(KEY1,KEY2,2,1,MAXY,IGO,MAXY)) GOTO 8
@


1.9
log
@f90
@
text
@d58 1
a58 1
        IF (IRTFLG .GE. -1) GOTO 9999
d63 1
a63 1
        IF (IRTFLG .GE. -1) GOTO 9999
d85 1
a85 1
        IF (IRTFLG .EQ. -1) GOTO 9
d89 1
a89 1
        IF (IRTFLG .EQ. -1) GOTO 11
@


1.8
log
@spelling bug
@
text
@d35 8
a42 2
        DIMENSION     PBUF(1)
        POINTER       (IPQ,PBUF) 
d49 3
d185 1
a185 1
9999    CALL DEALLOCIT(IPQ,IRTFLG)
@


1.7
log
@for postscript
@
text
@d73 1
a73 1
11      XINT = (SXMAN - SXMIN) / 10
@


1.6
log
@reremoved nkey(iline) setting (unused??)
@
text
@d2 1
a2 1
C++************************************************************************
d4 4
a7 12
C   DCHIST                                         I4 UPDATED FEB 88 al
C                                               AXIS ALTERED JULY 88 al
C                                             LONG FILE NAMES FEB 89 al
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.                             *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d9 10
d21 1
a21 1
C   PURPOSE: CREATES HISTOGRAM CONTOUR FILE FROM A DOC FILE
d23 1
a23 1
C--*******************************************************************
d25 1
a25 1
	SUBROUTINE DCHIST(DOCF1,LUN)
d28 9
a36 2
CNO_SAVE
        INCLUDE 'CONSTG.INC'
d38 30
a67 48
        PARAMETER (MAXREG=7)
        PARAMETER (MAXKEY=1500)
        PARAMETER (NSIZE = 2000)

	COMMON A(20),BUF(1500),IFREQ(660),DATA(3,NSIZE),
     $         DBUF(MAXREG,MAXKEY)

        CHARACTER*(*) DOCF1
	DIMENSION     PLIST(10)
        CHARACTER*80  CSFLNM
        CHARACTER*8   DISP
        CHARACTER*3   CSEXT

	NOPEN = 0
	NSW   = 1
        CALL RDPRMI(KEY1,KEY2,NLOOP,ILOOP,'FIRST & LAST KEY NUMBERS')
        IF (KEY2 .GT. MAXKEY) THEN 
           WRITE(NOUT,102)
102        FORMAT(' ENDING KEY TOO LARGE, YOU MIGHT CONSIDER',/
     &       ' TO ASK YOUR PROGRAMMER, IF HE MIGHT BE SO'/
     &       ' KIND TO CHANGE THE PARAMETERS IN DCHIST.F')
           RETURN
        ENDIF

	CALL RDPRMI(ICOL,IDUM,NLOOP,ILOOP,
     &             'COLUMN # IN DOC. FILE USED FOR HISTOGRAM')

        CALL RDPRM2(SXMIN,XINT,NLOOP,ILOOP,
     &             'STARTING X VALUE, INTERVAL')

97      CALL RDPRM2(SXMAX,FDUM,NLOOP,ILOOP,
     &             'X-RANGE (ENDING X VALUE)')

C       READ DOCUMENT FILE:

        IF (ICOL .GT. NREG) NREG=ICOL
        ILINE = 0
        DO  I=KEY1,KEY2
          CALL UNSDAL(DOCF1,NOPEN,NDOC,I,PLIST,NREG,
     $      DBUF,MAXKEY,MAXREG,NKEY,LERR)
	  NOPEN=1
          IF (LERR .EQ. 0) THEN
             ILINE       = ILINE + 1
cc             NKEY(ILINE) = I
             BUF(I)      = PLIST(ICOL)
          ENDIF
          WRITE(NOUT,101) (PLIST(II),II=1,NREG)
101       FORMAT(' ',7F12.6)
d69 3
a71 1
        CLOSE(NDOC)
d73 5
a77 1
C       CALCULATE HISTOGRAM:
d79 5
d95 19
a113 15
        ICN  = 0
        ICM  = 0
        ICC  = 0
        DO L=KEY1,KEY2
          IDIV = INT((BUF(L) - SXMIN) / XINT) + 1
          IF (IDIV .LT. 0) THEN
            ICN=ICN+1
          ELSEIF (IDIV .GT. NBIN) THEN
            ICM=ICM+1
          ELSE
            ICC=ICC+1
            NFREQ = IFREQ(IDIV) + 1
            IF (NFREQ .GT. MAXBIN) MAXBIN = NFREQ
            IFREQ(IDIV) = NFREQ
          ENDIF
d117 4
a120 2
111     FORMAT(' VALUES USED IN HISTOGRAM: ',I4,
     $     ' VALUES OUTSIDE LOWER END: ',I4,' UPPER END: ',I4)
d122 1
a122 1
113     FORMAT('0INTERVAL:',14X,'NUMBER IN INTERVAL')
d125 4
a128 4
          F1 = (L - 1) * XINT + SXMIN
          F2 = L * XINT + SXMIN
          WRITE (NOUT,11) F1,F2,IFREQ(L)
11        FORMAT(1X,F12.4,' TO ',F12.4,2X,I4)
d131 5
d137 2
a138 27
C       INITIALIZE CNT PLOT METAFILE PARAMETERS
C       CENTER TEXT
        JUST   = 1   
C       HORIZONTAL TEXT
        ITANGL = 0   
        IFON   = 0   
        IPEN   = 0   
        LINTP  = 0   
        ITSIZE = 24  

        ICSPR  = -3
        LABAH  = .TRUE.
C       REVERS = .FALSE.
        LUNCS  = 21
        MAXCNT = 1000
        MAXTXT = 1000
        ITFLG  = 0
        DISP   = 'UNK'
        IRECLN = 1080

        WRITE(CSEXT(1:3),8898) DATEXC(1:3)
8898    FORMAT(A3)

C       GET NAME OF METAFILE AND OPEN IT UP
        CALL CNFILE(CSFLNM,NLETC,'.PLOT FILE NAME',DISP,
     &     CSEXT,LUNCS,IRTFLG)
        IF ( IRTFLG .EQ. -1) GOTO 97
d140 1
d143 5
a147 4
        CALL CSAXIS('Y',SYMIN,SYMAX,0.0,0.0,120.0,100.0,YFACTR,LUNCS,
     &              IRTFLG)
        CALL CSAXIS('X',SXMIN,SXMAX,0.0,0.0,120.0,100.0,XFACTR,LUNCS,
     &              IRTFLG)
d154 4
a157 4
          KK = (L-1) * 3 + 1
          Y  = IFREQ(L) * YFACTR
          DATA(1,KK) = X 
          DATA(2,KK) = Y
d159 1
a159 1
          X = X + XPLUS
d168 1
a168 1
        CALL CSPUSH(LUNCS,DATA,NDATA,NF,1,ICNTR)
d170 2
a171 3
900     ISERCH = 0
        CALL CSSCALT(LUNCS,ISERCH)
        CALL CSTRAP(LUNCS)
d173 1
a173 1
        CLOSE(LUNCS)
d175 2
a176 2
        WRITE(NOUT,9045) CSFLNM(1:NLETC)
9045    FORMAT(/,' GRAPH PLACED IN: ',A)
a179 8

C**************************** NOT NEEDED
C       ADD DUMMY CHAR AT LOWER LEFT TO HELP SCALING OF TEXT ON AXIS
C        XPOS = -24.0
C        YPOS = -12.0
C        LABEL(1:1) = ' '
C        CALL CSPSTX(LABEL,1,LUNCS,NF,1,ITEXT)
C***************************************************
@


1.5
log
@removed unused nkey array
@
text
@d72 1
a72 1
             NKEY(ILINE) = I
@


1.4
log
@bad i in filename listing ,  & cosmetic
@
text
@d4 3
a6 4
C   DCHIST
C                 I4 UPDATED FEB 88 al
C                 AXIS ALTERED JULY 88 al
C                 LONG FILE NAMES FEB 89 al
d17 1
a17 1
C   DCHIST
d25 4
a34 4
	DIMENSION NKEY(1500),PLIST(10)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CONSTG.INC'
d37 1
a41 1
        WRITE(NOUT,*) ' DCHIST'
d49 1
a49 1
     &       ' KIND TO CHANGE THE PARAMETERS IN DCHIST.FOR')
@


1.3
log
@REVERSE NOT LOGICAL
@
text
@d20 2
d31 1
a31 1
     $  DBUF(MAXREG,MAXKEY)
d33 1
a33 1
#ifdef SP_UNIX
a34 4
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
#ifdef SP_UNIX
a35 3
#else
        INCLUDE 'COMMON1:CONSTG.INC'
#endif
d43 2
a44 2
	NOPEN=0
	NSW=1
d46 1
a46 1
        IF(KEY2.GT.MAXKEY) THEN 
d48 3
a50 3
102       FORMAT(' ENDING KEY TOO LARGE, YOU MIGHT CONSIDER',/
     &    ' TO ASK YOUR PROGRAMMER, IF HE MIGHT BE SO'/
     &    ' KIND TO CHANGE THE PARAMETERS IN DCHIST.FOR')
d53 1
d67 1
a67 1
        DO 1 I=KEY1,KEY2
d72 3
a74 3
            ILINE = ILINE + 1
            NKEY(ILINE) = I
            BUF(I) = PLIST(ICOL)
d76 3
a78 3
        WRITE(NOUT,101) (PLIST(II),II=1,NREG)
101     FORMAT(1H ,7F12.6)
1       CONTINUE
d89 1
a89 1
        DO 1000 I = 1,NBIN
d91 1
a91 2
1000    CONTINUE

d97 1
a97 1
        DO 2 L=KEY1,KEY2
d109 1
a109 1
2       CONTINUE
d113 1
a113 1
     $ ' VALUES OUTSIDE LOWER END: ',I4,' UPPER END: ',I4)
d117 1
a117 1
        DO 112 L=1,NBIN
d122 1
a122 1
112     CONTINUE
d151 1
a151 1
        IF( IRTFLG .EQ. -1) GOTO 97
d156 1
a156 1
     &  IRTFLG)
d158 1
a158 1
     &  IRTFLG)
d164 1
a164 1
        DO 12 L=1,NBIN
d176 1
a176 1
12      CONTINUE
d187 1
a187 1
        WRITE(NOUT,9045) CSFLNM(I:NLETC)
@


1.2
log
@cpp_lines_added
@
text
@d4 1
a4 1
C $$ DCHIST
d18 1
a18 1
C $$ DCHIST
d43 1
a43 1
        CHARACTER*80  CSFLNM,LINE
a46 1

d52 5
a56 5
        WRITE(NOUT,102)
102     FORMAT(1H ,'ENDING KEY TOO LARGE, YOU MIGHT CONSIDER',/
     &  1X,        'TO ASK YOUR PROGRAMMER, IF HE MIGHT BE SO'/
     &  1X,        'KIND TO CHANGE THE PARAMETERS IN DCHIST.FOR')
        RETURN
d142 1
a142 1
        REVERS = .FALSE.
d155 1
a155 1
     &  CSEXT,LUNCS,IRTFLG)
d192 2
a193 2
        WRITE(NOUT,9045) (CSFLNM(I:I),I=1,NLETC)
9045    FORMAT('0GRAPH PLACED IN: ',80A1)
@


1.1
log
@Initial revision
@
text
@d31 3
d35 4
d40 1
@
