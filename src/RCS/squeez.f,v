head	1.17;
access;
symbols
	healthdept_2018:1.17
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.13
	prec_CA:1.13
	noindx:1.12
	Bproc:1.10
	oct21:1.10
	last77:1.10;
locks; strict;
comment	@c @;


1.17
date	2018.10.03.14.34.23;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.27.01;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.20.33.57;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.18.24.37;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.20.17.13.45;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2002.07.12.18.59.42;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.11.14.08.22;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.02.11.15.26.20;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.02.10.16.25.15;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	98.03.16.20.49.17;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	98.03.16.20.33.37;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	98.02.17.19.51.21;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	98.01.05.19.58.14;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	97.10.29.18.08.06;	author hedget;	state Exp;
branches;
next	1.3;

1.3
date	97.10.15.14.29.10;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.11.21;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.01;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.17
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C SQUEEZ.F              LONG FILENAMES JAN89 al
C                       MIRRORING BUG FIXED JUL 02 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C SQUEEZ(LUNI,LUNO,NSAM,NROW,IRTFLG)
C
C **********************************************************************

	SUBROUTINE SQUEEZ(LUNI,LUNO,NSAM,NROW,NSLICE,IRTFLG)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        COMMON /IOBUF/ BUF(NBUFSIZ)

	COMMON BUFOUT(1)

	CHARACTER (LEN=MAXNAM) ::  FILNAM
        COMMON /COMMUN/FILNAM

	PARAMETER (QUADPI = 3.141592653589793238462643383279502884197)
	PARAMETER (DGR_TO_RAD = (QUADPI/180))

        IF (IMAMI .NE. 1) CALL NORM3(LUNI,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
        AVSAV = AV

 	CALL RDPRM(ALPHA,NOT_USED,
     &             'ANGLE BETWEEN UNIT VECTORS IN DEGREES')
	IF (ALPHA .GE. 90.0 .OR. ALPHA .LE. 0.0)  THEN
          CALL ERRT(101,'ANGLE MUST BE 0...90 DEGREES',NE)
          RETURN
	ENDIF

C       FIND OUTPUT IMAGE WIDTH (PADDED FOR SHEAR ANGLE)
	CTG   = COS(ALPHA*DGR_TO_RAD)/SIN(ALPHA*DGR_TO_RAD)
	NSAMO = NSAM + INT(ABS(CTG*NROW))

        MAXIM = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNO,'U',IFORM,NSAMO,NROW,NSLICE,
     &              MAXIM,'OUTPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        DO ISLICE = 1,NSLICE
C          FIND I/O RECORD
           IREC1 = (ISLICE - 1) * NROW

	   DO  I = 1,NROW
              CALL REDLIN(LUNI,BUF,NSAM,I+IREC1)

C             FIND SHEAR AMOUNT IN PIXELS
              SH      = (NROW - I) * CTG
              KSH     = SH
              EPS     = SH  - KSH
              ONEMEPS = 1.0 - EPS
    
C             FILL OUTPUT BUFFER WITH AVERAGE
              DO K = 1,NSAMO
                 BUFOUT(K) = AVSAV
              ENDDO

C             FIRST PIXEL INTERPOLATED WITH AVSAV VALUE
              BUFOUT(1+KSH) = AVSAV * EPS + BUF(1) * ONEMEPS

C             INTERPOLATE INTERNAL PIXELS
              DO  K = 2,NSAM
                 BUFOUT(K+KSH) = BUF(K-1) * EPS + BUF(K) * ONEMEPS
              ENDDO

C             LAST PIXEL INTERPOLATED WITH AVSAV VALUE
              IF ((NSAM + KSH) .LE. NSAMO) 
     &           BUFOUT(NSAM+KSH) = BUF(NSAM) * EPS + AVSAV * ONEMEPS

C             WRITE OUTPUT BUFFER TO FILE
              CALL WRTLIN(LUNO,BUFOUT,NSAMO,I+IREC1)
	   ENDDO
        ENDDO

        IRTFLG = 0
	END
@


1.16
log
@GPL_2010
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.15
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a7 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a35 1
C **************************************************************************
@


1.13
log
@opfilec
@
text
@d2 1
d10 24
d43 1
@


1.12
log
@mirror f& interpolation bugs fixed
@
text
@d28 1
d30 1
d50 1
a50 1
        CALL OPFILE(.TRUE.,FILNAM,LUNO,'U',IFORM,NSAMO,NROW,NSLICE,
@


1.11
log
@nloop,iloop_removed
@
text
@d4 11
a14 11
C SQUEEZ.FOR
C                                    LONG FILENAMES JAN89 al
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d23 1
d25 5
a29 2
	COMMON BUF(1)
	COMMON /COMMUN/ FILNAM
a32 4
	CHARACTER *81 FILNAM
        CHARACTER *1  NULL
        NULL = CHAR(0)

d38 1
a38 1
	IF (ALPHA.GE.90.0 .OR. ALPHA.LE.0.0)  THEN
d46 1
d48 1
a48 1
        CALL OPFIL(.TRUE.,FILNAM,LUNO,'U',NSAMO,NROW,NSLICE,
d60 1
a60 1
              SH      = (I-1) * CTG
d62 1
a62 1
              EPS     = SH - KSH
d66 2
a67 2
              DO  K = 1,NSAMO
                 BUF(NSAM+K) = AVSAV
d71 1
a71 1
              BUF(NSAM+1+KSH) = AVSAV * ONEMEPS + BUF(1) * EPS
d73 1
d75 1
a75 1
                 BUF(NSAM+K+KSH) = BUF(K-1) * ONEMEPS + BUF(K) * EPS
d78 3
a80 9
              IF (NSAM + KSH + 1 .LE. NSAMO) 
     &            BUF(2*NSAM+KSH+1) = BUF(NSAM) * ONEMEPS + AVSAV * EPS

C             INVERT THE OUTPUT BUFFER (I KNOW THIS IS INEFFECIENT
C             BUT I DO NOT HAVE TIME NOW TO FIX IT RIGHT)

              DO  K = 1,NSAMO
                 BUF(NSAM+NSAMO+K) = BUF(NSAM+NSAMO+1-K)
              ENDDO
d83 1
a83 3
cc            CALL WRTLIN(LUNO,BUF(NSAM+1),NSAMO,I+IREC1)

              CALL WRTLIN(LUNO,BUF(NSAM+NSAMO+1),NSAMO,I+IREC1)
@


1.10
log
@*** empty log message ***
@
text
@d36 1
a36 1
 	CALL RDPRM(ALPHA,NLOOP,ILOOP,
@


1.9
log
@trig
@
text
@d27 1
a27 1
	PARAMETER (DRG_TO_RAD = (QUADPI/180))
d44 1
a44 1
	CTG   = COS(ALPHA*DRG_TO_RAD)/SIN(ALPHA*DRG_TO_RAD)
@


1.8
log
@changed angle input prompt
@
text
@d26 2
a30 1
CNO_SAVE
d44 1
a44 1
	CTG   = COSD(ALPHA)/SIND(ALPHA)
a93 1
        RETURN
@


1.7
log
@flipped to correspond to usual crystallographic convention (re: MR's request)
@
text
@d36 1
a36 1
     &             'ANGLE BETWEEN UNIT VECTORS (DEG.)')
d86 1
a86 1
cc              CALL WRTLIN(LUNO,BUF(NSAM+1),NSAMO,I+IREC1)
@


1.6
log
@nosave
@
text
@d16 1
a16 1
C SQUEEZ(LUNI,LUNO,NSAM,NROW,IERR)
d20 1
a20 1
	SUBROUTINE SQUEEZ(LUNI,LUNO,NSAM,NROW,NSLICE,IERR)
d33 1
d35 3
a37 5
	IERR = 0
	CALL FILERD(FILNAM,NLET,NULL,'OUTPUT',IRTFLG)

	CALL RDPRM(ALPHA,NLOOP,ILOOP,'ANGLE BETWEEN UNIT VECTORS')
	IF (ALPHA.GE.90.0.OR.ALPHA.LE.0.0)  THEN
d42 1
d45 39
a83 16

	CALL OPENF(FILNAM,LUNO,NSAMO,NROW,'UNKNOWN',NF,1)
        IF (NF .NE. 2) THEN
           IERR = 1
           CALL ERRT(4,'SQUEEZ',NE)
           RETURN
        ENDIF

	DO  I = 1,NROW
           CALL REDLIN(LUNI,BUF,NSAM,I)
           SH  = (I-1)*CTG
           KSH = SH
           EPS = SH-KSH
           DO  K = 1,NSAMO
              BUF(NSAM+K) = AV
	   ENDDO
d85 2
a86 1
           BUF(NSAM+1+KSH) = AV  * (1.-EPS) + BUF(1)*EPS
d88 1
a88 2
           DO  K = 2,NSAM
             BUF(NSAM+K+KSH) = BUF(K-1)*(1.-EPS) + BUF(K)*EPS
d90 1
a90 5

           IF (NSAM + KSH + 1 .LE. NSAMO) 
     &	      BUF(2*NSAM+KSH+1)=BUF(NSAM)*(1.-EPS) + AV * EPS
           CALL WRTLIN(LUNO,BUF(NSAM+1),NSAMO,I)
	ENDDO
d92 2
@


1.5
log
@used norm3 & many cosmetic
@
text
@d29 1
a29 1

a72 1
        RETURN
@


1.4
log
@modified intrinsic function call for f90 compatibility
@
text
@d20 1
a20 1
	SUBROUTINE SQUEEZ(LUNI,LUNO,NSAM,NROW,IERR)
a21 1
#ifdef SP_UNIX
a22 3
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d32 2
d38 2
a39 3
	IF(ALPHA.GE.90.0.OR.ALPHA.LE.0.0)  THEN
          WRITE(NOUT,222)
222       FORMAT(' Angle has to be in the range 0 and 90 degrees')
d48 1
a48 1
           IERR=1
a52 1
        IF (IMAMI .NE. 1) CALL NORM(LUNI,NSAM,NROW,FMAX,FMIN,AV)
d54 17
a70 21
          CALL REDLIN(LUNI,BUF,NSAM,I)
          SH  = (I-1)*CTG
          KSH = SH
          EPS = SH-KSH
          DO  K = 1,NSAMO
            BUF(NSAM+K) = AV
	  ENDDO

C**       BUF(NSAM+1+KSH) = AVE *(1.-EPS) + BUF(1)*EPS
          BUF(NSAM+1+KSH) = AV  * (1.-EPS) + BUF(1)*EPS

          DO  K = 2,NSAM
            BUF(NSAM+K+KSH) = BUF(K-1)*(1.-EPS) + BUF(K)*EPS
	  ENDDO

          IF (NSAM + KSH + 1 .LE. NSAMO) 
     &	     BUF(2*NSAM+KSH+1)=BUF(NSAM)*(1.-EPS) + AV * EPS

C**     &		BUF(2*NSAM+KSH+1)=BUF(NSAM)*(1.-EPS) + AVE*EPS

          CALL WRTLIN(LUNO,BUF(NSAM+1),NSAMO,I)
@


1.3
log
@*** empty log message ***
@
text
@d47 1
a47 1
	NSAMO = NSAM + JNINT(ABS(CTG*NROW))
@


1.2
log
@cpp_lines_added
@
text
@d57 1
a57 1
	DO 100 I = 1,NROW
d62 3
a64 2
          DO 40 K = 1,NSAMO
40        BUF(NSAM+K) = AV
d69 1
a69 1
          DO 50 K = 2,NSAM
d71 1
a71 1
50        CONTINUE
d79 1
a79 1
100	CONTINUE
@


1.1
log
@Initial revision
@
text
@d22 3
d26 1
@
