head	1.12;
access;
symbols
	pre_getangas:1.12
	GPL2010:1.12
	pre_GPL2010:1.11
	pre_var_equation:1.11
	pre_fftwrings:1.10
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.8
	x:1.8
	v13-00:1.8
	pre_GPL:1.6
	prec_CA:1.6
	noindx:1.6
	Bproc:1.6
	oct21:1.2
	last77:1.2;
locks; strict;
comment	@c @;


1.12
date	2010.06.24.13.25.00;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.28.13.15.35;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2008.02.19.15.24.38;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.07.18.15.37;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.20.15.38;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.17.18.09.07;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.14.19.30.47;	author bimal;	state Exp;
branches;
next	1.5;

1.5
date	99.12.03.19.41.38;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.09.06;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	99.11.05.15.08.03;	author bimal;	state Exp;
branches;
next	1.2;

1.2
date	96.09.06.15.09.20;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.08.27.19.43.35;	author pawel;	state Exp;
branches;
next	;


desc
@simple ac 2D, calling program
@


1.12
log
@GPL_2010
@
text
@C++*********************************************************************
C
C ACRS_2.F
C              PGI BUG                         FEB 10 2006 ArDean Leith
C              MOD PGI COMPILER BUG            FEB 19 2008 ArDean Leith
C              X RETURNS O                     APR 24 2009 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  Calculates circular autocorrelation, non-power-of-two dimensions
C  Input - X Fourier transform
C  Output -  O=F(X*conjg(X))
C
C  PARAMETERS:  X      FOURIER TRANSFORM                  (SENT)
C                      F(X )                              (RET.)
C               BUF    I/O BUFFER                         (SENT)
C               LS     FOURIER NSAM DIMENSION             (SENT)
C               NSAM   READ DIMENSION                     (SENT)
C               NROW   NROW DIMENSION                     (SENT)   
C  
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE ACRS_2(X, LS,NSAM,NROW)

        COMPLEX          :: X(LS/2,NROW)

        DOUBLE PRECISION :: PI2
        COMPLEX          :: CTEMP

        NNNN = LS / 2

        PI2  = 8.0 * DATAN(1.0D0)
        ITMP = NSAM / 2
        SX   = PI2 * FLOAT(ITMP) / FLOAT(NSAM)
        ITMP = NROW / 2
        SY   = PI2 * FLOAT(ITMP) / FLOAT(NROW)

c$omp   parallel do private(i,j,ix,iy,argy,arg,ctemp)
        DO J=1,NROW
           IY = J-1
           IF (IY .GT. (NROW/2))  IY = IY - NROW
           ARGY = SY * IY

           DO I=1,NNNN
              IX     = I - 1
              ARG    = SX * IX + ARGY
              CTEMP  = CMPLX(COS(ARG),SIN(ARG))
              X(I,J) = X(I,J) * CONJG(X(I,J)) * CTEMP
           ENDDO
        ENDDO   

        INS = -1
        CALL FMRS_2(X,NSAM,NROW,INS)

        END
@


1.11
log
@*** empty log message ***
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.10
log
@PGI MOD in declare bug on 7.1
@
text
@d6 1
d10 1
a10 1
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d37 7
d48 1
a48 1
        SUBROUTINE ACRS_2(X,O, LS,NSAM,NROW)
a50 1
        COMPLEX          :: O(LS/2,NROW)
d55 1
a55 1
        NNNN = LS/2
d57 5
a61 5
        PI2  = 8.0*DATAN(1.0D0)
        ITMP = NSAM/2
        SX   = PI2*FLOAT(ITMP)/FLOAT(NSAM)
        ITMP = NROW/2
        SY   = PI2*FLOAT(ITMP)/FLOAT(NROW)
d66 1
a66 1
           IF (IY .GT. NROW/2)  IY = IY-NROW
d73 1
a73 1
              O(I,J) = X(I,J) * CONJG(X(I,J)) * CTEMP
d78 1
a78 1
        CALL FMRS_2(O,NSAM,NROW,INS)
@


1.9
log
@pgi compiler bug
@
text
@d4 2
a5 1
C                           PGI BUG            FEB 10 2006 ArDean Leith
d9 1
a9 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
a32 2
C IMAGE_PROCESSING_ROUTINE
C
d40 7
a46 1
        SUBROUTINE  ACRS_2(X,O,NSAM,NROW)
d48 7
a54 12
        COMPLEX     X((NSAM+2-MOD(NSAM,2))/2,NROW)
        COMPLEX     O((NSAM+2-MOD(NSAM,2))/2,NROW)
        DOUBLE PRECISION  PI2
        COMPLEX :: CTEMP

        NNNN = (NSAM+2-MOD(NSAM,2))/2

        PI2=8.0*DATAN(1.0D0)
        ITMP=NSAM/2
        SX=PI2*FLOAT(ITMP)/FLOAT(NSAM)
        ITMP=NROW/2
        SY=PI2*FLOAT(ITMP)/FLOAT(NROW)
d59 1
a59 1
           IF (IY .GT. NROW/2)  IY=IY-NROW
d63 2
a64 2
              IX     = I-1
              ARG    = SX*IX+ARGY
d72 1
@


1.8
log
@GPL License fixed
@
text
@d4 1
d34 4
a37 1
C        1         2         3         4         5         6         7
a42 1

d46 1
a47 5
C  Calculates circular autocorrelation, non-power-of-two dimensions
C  Input - X Fourier transform
C  Output -  O=F(X*conjg(X))
C
  
a49 4
C       INS=1
C       CALL  FMRS_2(X,NSAM,NROW,INS)
C       IF(INS.EQ.0)  RETURN
C
d55 2
a56 1
c$omp parallel do private(i,j,ix,iy,argy,arg)
d58 4
a61 3
           IY=J-1
           IF(IY.GT.NROW/2)  IY=IY-NROW
           ARGY=SY*IY
d63 4
a66 3
              IX=I-1
              ARG=SX*IX+ARGY
        O(I,J)=X(I,J)*CONJG(X(I,J))*CMPLX(COS(ARG),SIN(ARG))
d70 2
a71 2
        INS=-1
        CALL  FMRS_2(O,NSAM,NROW,INS)
@


1.7
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a29 1
C **************************************************************************
a35 1
C--************************************************************************
@


1.6
log
@adapted for dynamical memory allocation
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d47 1
@


1.5
log
@cosmetic
@
text
@d12 1
a12 1
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
d17 2
d21 1
a21 1
	SUBROUTINE  ACRS_2(X,O,NSAM,NROW)
a22 1
	DIMENSION  X(*),O(*)
d24 3
a26 1
	CALL  ACRS_2R(X,O,(NSAM+2-MOD(NSAM,2))/2,NSAM,NROW)
d28 31
a58 1
	END
@


1.4
log
@a
@
text
@d3 1
a3 1
C $$ ACRS_2.FOR
a14 1
C
d18 1
a18 3
C
C $$ ACRS_2.FOR
C
d20 1
d24 1
@


1.3
log
@added image_processing_routine string
@
text
@d24 1
a24 1
CNO_SAVE
@


1.2
log
@nosave
@
text
@d16 1
@


1.1
log
@Initial revision
@
text
@d23 1
@
