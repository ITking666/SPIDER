head	1.20;
access;
symbols
	healthdept_2018:1.20
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.13
	prec_CA:1.13
	noindx:1.12
	Bproc:1.11
	oct21:1.10
	last77:1.10;
locks; strict;
comment	@c @;


1.20
date	2018.10.03.14.34.10;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2015.03.12.14.36.59;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2014.01.12.19.29.03;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2012.02.27.19.05.51;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.26.11;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.18.14.04.20;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.21.08.41;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.20.19.40.23;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.11.14.09.08;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.11.10.23.09.38;	author yuchen;	state Exp;
branches;
next	1.10;

1.10
date	99.02.04.16.54.30;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	98.01.05.20.29.16;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	97.12.10.17.10.24;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.10.21.13.43.45;	author mladjadj;	state Exp;
branches;
next	1.6;

1.6
date	96.10.09.15.54.31;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	96.07.10.15.46.31;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.05.30.15.22.01;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	96.05.10.19.04.56;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.07.15;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.11;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.20
log
@email_health_dept
@
text
@
C++************************************************************** 3/4/81
C
C  MONT.F             LONG FILNAMES               JAN  89 ARDEAN LEITH
C                     REWRITTEN                   MAY  01 ARDEAN LEITH
C                     ALLOC                       FEB  12 ARDEAN LEITH
C                     DEALLOC                     MAR  15 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2015  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C PURPOSE: MAKE MONTAGE FROM FILE SERIES
C
C***********************************************************************

	SUBROUTINE MONT(MAXDIM)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC' 

        REAL, ALLOCATABLE       :: BUF(:)

        LOGICAL                 :: NORMLZ, PUTOUT
        CHARACTER(LEN=MAXNAM)   :: FILNAM,FILOUT,FILPAT
        CHARACTER(LEN=1)        :: NULL = CHAR(0)

        INTEGER,PARAMETER       :: LUN  = 20
        INTEGER,PARAMETER       :: LUNO = 21

C       GET FILENAME PATTERN, NUMBERS
        NILMAX = NIMAX
        CALL FILSEQP(FILPAT,NLET,INUMBR,NILMAX,NUMTOT, 
     &     'FILE PREFIX OR TEMPLATE (EG. PIC****)' ,IRTFLG)
     
        IF (IRTFLG .NE. 0) RETURN

C       CREATE FIRST FILENAME
        CALL FILGET(FILPAT,FILNAM,NLET,INUMBR(1),IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       OPEN FIRST FILE
        MAXIM = 0
        CALL OPFILEC(0,.FALSE.,FILNAM,LUN,'O',IFORM,NX,NY,NZ,
     &               MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        IF (IFORM == 3) THEN
           WRITE(NOUT,*) 'WARNING: CAN ONLY USE FIRST SLICE OF VOLUME'
        ENDIF

        IF (IMAMI.NE.1) CALL NORM3(LUN,NX,NY,NZ,FMAX,FMIN,AV)
        WRITE(NOUT,97) FMIN,FMAX
97      FORMAT('  FIRST IMAGE RANGE: ',G11.3,' ... ',G11.3,/)

	IF (FCHAR(4:4) == 'S') THEN
           NORMLZ = .TRUE.
           IF (IMAMI.NE.1) CALL NORM3(LUN,NX,NY,NZ,FMAX,FMIN,AV)
           FMINT = FMIN
           SCT   = 0.0
           IF (FMAX .NE. FMIN) SCT = 2.0 / (FMAX-FMIN)
        ELSE
           NORMLZ = .FALSE.
        ENDIF

	CALL RDPRI2S(NPR,MAR,NOT_USED,
     &      'NUMBER OF IMAGES PER ROW, MARGIN WIDTH',IRTFLG)

        BACK = 1.0
10      CALL RDPRM1S(BACK,NOT_USED,'MARGIN VALUE',IRTFLG)
	IF (FCHAR(4:4) == 'S' .AND. 
     &     (BACK < 0.0 .OR. BACK > 2.0)) THEN
           CALL ERRT(101,'MARGIN VALUE MUST BE IN RANGE 0 ... 2',NE)
           GOTO 10
        ENDIF

C       FIND SIZE OF OUTPUT MONTAGE (MARGINS ALL AROUND)
	NXO    = (NX * NPR) + MAR *(NPR + 1)
	NUMROW = NUMTOT / NPR + 1
	IF ((NUMTOT / NPR) * NPR == NUMTOT) NUMROW = NUMTOT / NPR
	NYO     = NY * NUMROW + MAR * ( NUMROW + 1)
        NUMMARS = NUMROW + 1

        MWANT = NXO * (NYO + MAR)
        ALLOCATE(BUF(MWANT), STAT=IRTFLG)
        IF (IRTFLG .NE. 0) THEN
           CALL ERRT(46,'MONT; BUF',MWANT)
           GOTO 999
        ENDIF
                  
C       OPEN OUTPUT FILE
        IFORM = 1
        MAXIM = 0
        CALL OPFILEC(0,.TRUE.,FILOUT,LUNO,'N',IFORM,NXO,NYO,1,
     &             MAXIM,'OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 999
          
C       FILL HORIZONTAL MARGIN ROWS IN FILE
        IROW = 1
        IF (MAR > 0) THEN
C          FILL BUFFER WITH BACKGROUND FIRST
           BUF = BACK

C          PLACE MARGIN ROWS IN FILE
           DO M = 1, NUMMARS
C             PLACE MAR ROWS OF BUFFER IN FILE
              DO I = 1,MAR
                 CALL WRTLIN(LUNO,BUF(1),NXO,IROW)
                 IROW = IROW + 1
              ENDDO
             IROW = IROW + NY
           ENDDO
        ENDIF

C       READ IN IMAGE ROWS               
        IPICONY = NPR
        IROWO     = MAR 

        DO IFIL = 1,NUMTOT
C          FIRST FILE ALREADY OPEN!
	   IF (IFIL > 1) THEN
C             OPEN THE NEW INPUT FILE
              CLOSE(LUN)
              CALL FILGET(FILPAT,FILNAM,NLET,INUMBR(IFIL),IRTFLG)
              MAXIM = 0
              CALL OPFILEC(0,.FALSE.,FILNAM,LUN,'O',IFORM,
     &             NXN,NYN,NZ,
     &             MAXIM,'UNUSED',.FALSE.,IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 998

              CALL SIZCHK(UNUSED,NX, NY, 1,1,
     &                           NXN,NYN,1,1,IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 998

              IF (NORMLZ) THEN
                 IF (IMAMI .NE. 1)CALL NORM3(LUN,NX,NY,NZ,FMAX,FMIN,AV)
                 FMINT = FMIN
                 SCT   = 0.0
                 IF (FMAX .NE. FMIN) SCT = 2./(FMAX-FMIN)
              ENDIF
	   ENDIF

	   IPICONY = IPICONY + 1
C          START NEW ROW IF NECESSARY
	   IF (IPICONY > NPR)  IPICONY = 1

           PUTOUT = .TRUE.

C          PUT IN VERTICAL LEFT MARGIN
	   NSTART = 1
	   DO IROW = 1, NY
              DO ISAM = NSTART, NSTART + MAR - 1
                 BUF(ISAM) = BACK
              ENDDO
              NSTART = NSTART + NXO
	   ENDDO
      
C          READ ROWS FROM FILE
	   DO  IROW = 1,NY
C             COMPUTE CURRENT BUFFER POSITION
              NSTART = (IPICONY - 1) * (NX + MAR) + MAR + 1 +
     &                 (IROW -1) * NXO
              CALL REDLIN(LUN,BUF(NSTART),NX,IROW)
              IF (NORMLZ) THEN
                 DO  K = NSTART ,NSTART+NX-1
                    BUF(K) = (BUF(K) - FMINT) * SCT
                 ENDDO
              ENDIF

C             ADD VERTICAL MARGIN TO RIGHT
              DO J = NSTART+NX, NSTART+NX+MAR
                 BUF(J) = BACK
              ENDDO
	   ENDDO

           IF (IPICONY == NPR) THEN
C             OUTPUT THIS ROW OF IMAGES
              ISTART =  1
              DO IROWT = 1, NY
	         CALL WRTLIN(LUNO,BUF(ISTART),NXO,IROWO + IROWT)
                 ISTART = ISTART + NXO
              ENDDO
              IROWO  = IROWO + NY + MAR 
              PUTOUT = .FALSE.
           ENDIF
        ENDDO

        IF (PUTOUT) THEN
C          OUTPUT REMAINING PARTIAL ROW OF IMAGES

C          MUST FILL REMAINING PART OF BUFFER WITH BACKGROUND
           ISTART =  IPICONY  * (NX + MAR) + MAR + 1
           NVALS  = NXO - ISTART
           DO IROWT = 1, NY 
              DO ISAMO = ISTART, ISTART + NVALS
	         BUF(ISAMO) = BACK
              ENDDO
              ISTART = ISTART + NXO
           ENDDO

C          PUT OUT THE ROW OF IMAGES 
           ISTART = 1
           DO IROWT = 1, NY
	      CALL WRTLIN(LUNO,BUF(ISTART),NXO,IROWO + IROWT)
              ISTART = ISTART + NXO
           ENDDO
        ENDIF

998     CLOSE(LUNO)
999     CLOSE(LUN)

        IF (ALLOCATED(BUF))    DEALLOCATE(BUF)

	END

@


1.19
log
@dealloc buf
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.18
log
@enter
@
text
@d7 1
d13 1
a13 1
C=* Copyright 1985-2012  Health Research Inc.,                         *
d228 2
@


1.17
log
@alloc bug
@
text
@d83 1
a83 1
     &      'ENTER NUMBER OF IMAGES PER ROW, MARGIN WIDTH',IRTFLG)
d86 1
a86 1
10      CALL RDPRM1S(BACK,NOT_USED,'ENTER MARGIN VALUE',IRTFLG)
@


1.16
log
@GPL_2010
@
text
@d4 3
a6 3
C  MONT.F                                 LONG FILNAMES JAN 89 al
C                                         REWRITTEN     MAY 1996 al
C                                         OPFILEC  FEB  03 ARDEAN LEITH
d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d30 1
a30 1
C    MONT:    SUBROUTINE FOR MAKING GENERAL MONTAGE FROM FILE SERIES
d39 1
a39 1
        COMMON /COMMUN/ NUMBER(600),FILNAM,FILOUT,FILPAT
d41 3
a43 1
	COMMON BUF(1)
d45 2
a46 7
        LOGICAL                 ::  NORMLZ, PUTOUT
        CHARACTER(LEN=MAXNAM)   ::  FILNAM,FILOUT,FILPAT
        CHARACTER(LEN=1)        ::  NULL

        DATA LUN,LUNO/9,10/

        NULL = CHAR(0)
d49 2
a50 1
        CALL FILSEQP(FILPAT,NLET,NUMBER,400,NUMTOT, 
d56 1
a56 1
        CALL FILGET(FILPAT,FILNAM,NLET,NUMBER(1),IRTFLG)
d61 1
a61 1
        CALL OPFILEC(0,.FALSE.,FILNAM,LUN,'O',IFORM,NSAM,NROW,NSLICE,
d64 1
a64 1
        IF (IFORM .EQ. 3) THEN
d68 1
d70 1
a70 1
97      FORMAT(' FIRST IMAGE RANGE: ',G11.3,' ... ',G11.3,/)
d72 1
a72 1
	IF (FCHAR(4:4) .EQ. 'S') THEN
d74 1
a74 1
           IF (IMAMI.NE.1) CALL NORM3(LUN,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
d82 2
a83 2
	CALL RDPRMI(NPR,MAR,NOT_USED,
     &      'ENTER NUMBER OF IMAGES PER ROW, MARGIN WIDTH')
d85 5
a89 5
10      CALL RDPRM(BACK,NOT_USED,'ENTER MARGIN VALUE')
	IF (FCHAR(4:4) .EQ. 'S' .AND. 
     &     (BACK .LT. 0.0 .OR. BACK .GT. 2.0)) THEN
           WRITE(NOUT,*) 'MARGIN VALUE MUST BE IN RANGE 0.0 ... 2.0)'
           CALL ERRT(100,'MONT',NE)
d94 4
a97 4
	NSAMO   = NSAM * NPR + MAR *(NPR + 1)
	NUMROW  = NUMTOT / NPR + 1
	IF ((NUMTOT / NPR) * NPR .EQ. NUMTOT) NUMROW = NUMTOT / NPR
	NROWO   = NROW * NUMROW + MAR * ( NUMROW + 1)
d100 4
a103 6
C       OPENF, NORM AND SETPRM WILL USE COMMON BUFFER IF NEEDED
        IPAD = 256 + NSAM
 
        IF (IPAD + (NROWO * (NROW + MAR)) .GT. MAXDIM) THEN
C          INSUFFICIENT MEMORY
           CALL ERRT(6,'MONT',NE)
d110 1
a110 1
        CALL OPFILEC(0,.TRUE.,FILOUT,LUNO,'N',IFORM,NSAMO,NROWO,1,
d116 1
a116 1
        IF (MAR .GT. 0) THEN
d118 1
a118 3
           DO J = 1, NSAMO
              BUF(IPAD + J) = BACK
           ENDDO
d124 1
a124 1
                 CALL WRTLIN(LUNO,BUF(IPAD+1),NSAMO,IROW)
d127 1
a127 1
             IROW = IROW + NROW
d132 1
a132 1
        IPICONROW = NPR
d137 1
a137 1
	   IF (IFIL .NE. 1) THEN
d140 1
a140 1
              CALL FILGET(FILPAT,FILNAM,NLET,NUMBER(IFIL),IRTFLG)
d143 1
a143 1
     &             NSAMN,NROWN,NSLICE,
d147 6
a152 8
              IF (NSAMN .NE. NSAM .OR. NROWN .NE. NROW) THEN
C                INCONSISTENT IMAGE SIZES
                 WRITE(NOUT,*)'*** THIS IMAGE HAS DIFFERENT SIZE!'
                 CALL ERRT(100,'MONT',NE)
                 GOTO 998
              ELSEIF (NORMLZ) THEN
                 IF (IMAMI .NE. 1) 
     &              CALL NORM3(LUN,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
d155 1
a155 1
                 IF (FMAX.NE.FMIN) SCT = 2./(FMAX-FMIN)
d159 1
a159 1
	   IPICONROW = IPICONROW + 1
d161 1
a161 1
	   IF (IPICONROW .GT. NPR)  IPICONROW = 1
d166 2
a167 2
	   NSTART = IPAD + 1
	   DO IROW = 1, NROW
d171 1
a171 1
              NSTART = NSTART + NSAMO
d175 1
a175 1
	   DO  IROW = 1,NROW
d177 3
a179 3
              NSTART = IPAD + (IPICONROW - 1) * (NSAM + MAR) + MAR + 1 +
     &                 (IROW -1) * NSAMO
              CALL REDLIN(LUN,BUF(NSTART),NSAM,IROW)
d181 1
a181 1
                 DO  K = NSTART ,NSTART+NSAM-1
d187 1
a187 1
              DO J = NSTART+NSAM, NSTART+NSAM+MAR
d192 1
a192 1
           IF (IPICONROW .EQ. NPR) THEN
d194 4
a197 4
              ISTART = IPAD + 1
              DO IROWT = 1, NROW
	         CALL WRTLIN(LUNO,BUF(ISTART),NSAMO,IROWO + IROWT)
                 ISTART = ISTART + NSAMO
d199 1
a199 1
              IROWO  = IROWO + NROW + MAR 
d208 4
a211 4
           ISTART =  IPICONROW  * (NSAM + MAR) + MAR + 1
           NVALS  = NSAMO - ISTART
           DO IROWT = 1, NROW 
              DO ISAMO = IPAD + ISTART, IPAD + ISTART + NVALS
d214 1
a214 1
              ISTART = ISTART + NSAMO
d218 4
a221 4
           ISTART = IPAD + 1
           DO IROWT = 1, NROW
	      CALL WRTLIN(LUNO,BUF(ISTART),NSAMO,IROWO + IROWT)
              ISTART = ISTART + NSAMO
d227 1
a227 1
	RETURN
@


1.15
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@GPL License fixed
@
text
@a31 1
C *    APPROVAL OF HEALTH RESEARCH INC.                                *
@


1.13
log
@opfilec
@
text
@d9 23
a31 5
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        *
C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY  *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH         *
C *    RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS             *
C *    OR USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN        *
@


1.12
log
@nloop,iloop_removed
@
text
@d4 3
a6 2
C  MONT.FOR                               LONG FILNAMES JAN 89 al
C                                         REWRITTEN MAY 1996 al
a22 2
 

d24 1
d30 3
a32 3
        LOGICAL        NORMLZ, PUTOUT
	CHARACTER *81  FILNAM,FILOUT,FILPAT
	CHARACTER *1   NULL
d40 1
a40 1
     $     'FILE PREFIX OR TEMPLATE (EG. PIC****)' ,IRTFLG)
d49 3
a51 2
        CALL OPFIL(.FALSE.,FILNAM,LUN,'O',NSAM,NROW,NSLICE,
     &             IDUM,'INPUT',.FALSE.,IRTFLG)
d99 3
a101 2
        CALL OPFIL(.TRUE.,FILOUT,LUNO,'N',NSAMO,NROWO,1,
     &             IDUM,'OUTPUT',.FALSE.,IRTFLG)
d133 4
a136 3

              CALL OPFIL(.FALSE.,FILNAM,LUN,'O',NSAMN,NROWN,NSLICE,
     &             IDUM,'UNUSED',.FALSE.,IRTFLG)
@


1.11
log
@a
@
text
@d69 1
a69 1
	CALL RDPRMI(NPR,MAR,NLOOP,ILOOP,
d72 1
a72 1
10      CALL RDPRM(BACK,NLOOP,ILOOP,'ENTER MARGIN VALUE')
@


1.10
log
@CNO_SAVE
@
text
@d22 1
a22 1
CNO_SAVE 
@


1.9
log
@used norm3
@
text
@d22 2
@


1.8
log
@removed IFORM from OPFIL call
@
text
@d38 1
a38 1
     $  'FILE PREFIX OR TEMPLATE (EG. PIC****)' ,IRTFLG)
d140 2
a141 2
                 IF (IMAMI.NE.1) 
     &              CALL NORM(LUN,NSAM,NROW,FMAX,FMIN,AV)
@


1.7
log
@delete an extra common in arg list
@
text
@d48 1
a48 1
     &             IFORM,'INPUT',.FALSE.,IRTFLG)
d97 1
a97 1
     &             IFORM,'OUTPUT',.FALSE.,IRTFLG)
d131 1
a131 1
     &             IFORM,'UNUSED',.FALSE.,IRTFLG)
@


1.6
log
@change filseq to filseqp call
@
text
@d38 1
a38 1
     $  'FILE PREFIX OR TEMPLATE (EG. PIC****)',,IRTFLG)
@


1.5
log
@eror trap for iform, added image range output
@
text
@d37 3
a39 1
        CALL FILSEQ(FILPAT,NLET,NUMBER,400,NUMTOT,IRTFLG)
@


1.4
log
@can can call close on vax
@
text
@d48 3
d52 2
d57 1
a57 1
           IF (IMAMI.NE.1) CALL NORM(LUN,NSAM,NROW,FMAX,FMIN,AV)
@


1.3
log
@rewritten to allow > 20 images per row
@
text
@d120 1
a120 1
              CALL CLOSE(LUN)
@


1.2
log
@cpp_lines_added
@
text
@d2 1
a2 1
C++***************************************************************** 3/4/81
d4 2
a5 11
C $$ MONT.FOR
C                                         LONG FILNAMES JAN 89 al
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d7 8
a14 1
C $$ MONT:    SUBROUTINE FOR MAKING GENERAL MONTAGE FROM FILE SERIES
d16 3
a18 1
C**************************************************************************
d20 1
a20 1
	SUBROUTINE MONT
a21 1
#ifdef SP_UNIX
a22 4
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
        COMMON /COMMUN/ FILNAM,FILOUT,FILPAT
d24 1
a24 1
	COMMON RESERV(17000),BUF(1)
d26 1
a26 2
C EACH OPEN USES FIRST PART OF COMMON BUFFER. RESERV RESERVES
C SPACE FOR THIS
d28 1
a28 1
        LOGICAL        NORMLZ
a30 1
	DIMENSION      NUMBER(400),LUN(20),SC(20),FM(20)
d32 1
a32 1
        NULL=CHAR(0)
d34 1
a34 3
	LUNO=9
	DO 10 I=1,20
10	LUN(I)=I+10
d36 2
a37 1
        CALL FILSEQ(FILPAT,NLET,NUMBER,400,NUMT,IRTFLG)
d40 1
d44 5
a48 1
	CALL OPENF(FILNAM,LUN(1),NSAM,NROW,'OLD',NF,NDUM)
d51 5
a55 5
          NORMLZ = .TRUE.
          IF(IMAMI.NE.1)CALL NORM(LUN(1),NSAM,NROW,FMAX,FMIN,AV)
          FM(1)=FMIN
          SC(1)=0.
          IF(FMAX.NE.FMIN) SC(1)=2./(FMAX-FMIN)
d57 1
a57 1
          NORMLZ = .FALSE.
a59 4
C       NORMLZ ADDED 13 NOV 87 al TO OVERCOME BUG WHEN PGM. IS RUN IN
C       BATCH MODE.  SOMEWHERE IN RDPRMI, F(4) IS REDEFINED SO THAT
C       IT IS NO LONGER S CAUSING NORMALIZATION FAILURE

d61 1
a61 1
     &  'NUMBER OF PICTURES PER ROW, MARGIN')
d63 7
a69 20
	CALL RDPRM(BACK,NLOOP,ILOOP,'ENTER BACKGROUND VALUE')

	NSAMO=NSAM*NPR+MAR*(NPR+1)
	NUMROW=NUMT/NPR+1
	IF((NUMT/NPR)*NPR.EQ.NUMT)NUMROW=NUMT/NPR
	NROWO=NROW*NUMROW+MAR*(NUMROW+1)

	CALL FILERD(FILOUT,NLETO,NULL,'OUTPUT',IRTFLG)
        IFORM=1
	CALL OPENF(FILOUT,LUNO,NSAMO,NROWO,'UNKNOWN',NF,1)

	IFIL=0
	IOFF=0
C CLEAR PARTS OF BUFFER THAT CORRESPOND TO HORIZ.MARGIN

	DO 50 IHOR=1,NPR+1
	NOFF=(IHOR-1)*(NSAM+MAR)
	DO 40 K=1,MAR
40	BUF(K+NOFF)=BACK
50	CONTINUE
d71 14
a84 29
C
C CLEAR SECOND BUFFER SECTION FOR VERTICAL MARGIN
	DO 60 K=NSAMO+1,2*NSAMO
60	BUF(K) = BACK
C
	DO 200 IROW=1,NUMROW+1
	IOPEN=0
C IOPEN= NUMBER OF FILES OPENED THIS ROW
C WRITE VERTICAL MARGIN
	DO 80 I=1,MAR
80	CALL WRTLIN(LUNO,BUF(NSAMO+1),NSAMO,IOFF+I)
	IF (IROW.EQ.NUMROW+1)GOTO 210
	IOFF=IOFF+MAR
C
	DO 100 IHOR=1,NPR
	IFIL=IFIL+1
	IF (IFIL.GT.NUMT)GOTO 100
	IOPEN=IOPEN+1

C FIRST FILE ALREADY OPEN!
	IF (IFIL.EQ.1)GOTO 100
        CALL FILGET(FILPAT,FILNAM,NLET,NUMBER(IFIL),IRTFLG)
	CALL OPENF(FILNAM,LUN(IHOR),NSAM,NROW,'OLD',NF,NDUM)

	IF (NORMLZ) THEN
          IF(IMAMI.NE.1) CALL NORM(LUN(IHOR),NSAM,NROW,FMAX,FMIN,AV)
          FM(IHOR)=FMIN
          SC(IHOR)=0.
          IF (FMAX.NE.FMIN) SC(IHOR)=2./(FMAX-FMIN)
d86 24
a109 13
100	CONTINUE
C
C FOR EACH ROW, READ ALONG HORIZ. DIRECTION
	DO 150 I=1,NROW
	DO 130 IHOR=1,NPR
	IF (IHOR .GT. IOPEN) GOTO 135
	NSTART = MAR+(IHOR-1)*(NSAM+MAR)+1
	CALL REDLIN(LUN(IHOR),BUF(NSTART),NSAM,I)
	IF (NORMLZ) THEN
          FMIN=FM(IHOR)
          SCALE=SC(IHOR)
          DO 120 K=NSTART,NSTART+NSAM-1
120	  BUF(K) = (BUF(K)-FMIN)*SCALE
a110 2
130	CONTINUE
	GOTO 145
d112 94
a205 12
C IF IOPEN SMALLER THAN NPR MAKE SURE REST OF BUFFER IS CLEAR
135	NSTART=NSTART+NSAM+MAR
	DO 138 K=NSTART,NSAMO
138	BUF(K)=BACK

145	CONTINUE
	CALL WRTLIN(LUNO,BUF,NSAMO,I+IOFF)
150	CONTINUE
	IOFF=IOFF+NROW
C
	DO 180 IHOR=1,IOPEN
180	CLOSE(LUN(IHOR))
d207 2
a208 9
C*****************8DEBUG
C        WRITE(NOUT,9903) (IQ,SC(IQ),FM(IQ),IQ=1,IHOR)
C9903    FORMAT(' I,SC(I),FM(I):',3(I3,F7.2,F7.2))
C************************


200	CONTINUE

210	CLOSE(LUNO)
d211 1
@


1.1
log
@Initial revision
@
text
@d22 3
d26 1
@
