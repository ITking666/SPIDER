head	1.11;
access;
symbols
	pre_mrcs:1.11
	healthdept_2018:1.11
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.7
	prec_CA:1.7
	noindx:1.7
	Bproc:1.7
	oct21:1.3
	last77:1.3;
locks; strict;
comment	@c @;


1.11
date	2018.10.03.14.34.23;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.24.13.26.58;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.20.14.50;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.18.08.27;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.01.06.18.16.26;	author bimal;	state Exp;
branches;
next	1.6;

1.6
date	99.12.06.20.55.45;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.12.06.19.14.36;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.11.21;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	97.10.15.14.29.06;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.01.27.15.40.44;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.55;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.11
log
@email_health_dept
@
text
@C ++********************************************************************
C                                                                      *
C   SMT3_Q                                                             *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  SMT3_Q(T,ALA,X,Y,NSAM,NROW,NSLICE,IPCUBE,NN)                        *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:                                                         *
C 
C IMAGE_PROCESSING_ROUTINE                                             *
C
C        0         2         3         4         5         6         7 *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE  SMT3_Q(T,ALA,X,Y,NSAM,NROW,NSLICE,IPCUBE,NN)

        DIMENSION   X(NSAM,NROW,NSLICE),Y(NSAM*NROW*NSLICE)
        DIMENSION  IPCUBE(5,NN)

        QT=1.0-6*T*ALA
        TL=T*ALA
        M=0
        DO KN=1,NN
           J=IPCUBE(4,KN)
           K=IPCUBE(5,KN)
           DO I=IPCUBE(3,KN),IPCUBE(3,KN)+IPCUBE(2,KN)-IPCUBE(1,KN)
              M=M+1
              Y(M)=QT*X(I,J,K)+TL*(X(I-1,J,K)+X(I+1,J,K)+
     &                      X(I,J-1,K)+X(I,J+1,K)+
     &                      X(I,J,K-1)+X(I,J,K+1))
           ENDDO
        ENDDO

        N=M+1
        DO KN=NN,1,-1
           J=IPCUBE(4,KN)
           K=IPCUBE(5,KN)
           DO I=IPCUBE(3,KN)+IPCUBE(2,KN)-IPCUBE(1,KN),IPCUBE(3,KN),-1
              N=N-1
              X(I,J,K)=Y(N)
           ENDDO
        ENDDO

C       PUT ZEROS OUTSIDE ...

        NT=1
        DO    I=1,NSAM*NROW*NSLICE
           IF(NT.GT.NN)  THEN
              Y(I)=0.0
           ELSEIF(I.LT.IPCUBE(1,NT))  THEN
              Y(I)=0.0
           ELSEIF(I.EQ.IPCUBE(2,NT))  THEN
              NT=NT+1
           ENDIF
        ENDDO
        END
@


1.10
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.9
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@HRI GPL License used
@
text
@a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.7
log
@cosmetic
@
text
@d7 24
@


1.6
log
@header
@
text
@a0 1

d19 3
a21 1
C                                                                      *
d26 1
a26 1
	SUBROUTINE  SMT3_Q(T,ALA,X,Y,NSAM,NROW,NSLICE,IPCUBE,NN)
d28 2
a29 2
	DIMENSION   X(NSAM,NROW,NSLICE),Y(NSAM*NROW*NSLICE)
	DIMENSION  IPCUBE(5,NN)
d31 11
a41 11
	QT=1.0-6*T*ALA
	TL=T*ALA
	M=0
	DO KN=1,NN
	   J=IPCUBE(4,KN)
	   K=IPCUBE(5,KN)
	   DO I=IPCUBE(3,KN),IPCUBE(3,KN)+IPCUBE(2,KN)-IPCUBE(1,KN)
	      M=M+1
	      Y(M)=QT*X(I,J,K)+TL*(X(I-1,J,K)+X(I+1,J,K)+
     &			    X(I,J-1,K)+X(I,J+1,K)+
     &			    X(I,J,K-1)+X(I,J,K+1))
d43 1
a43 1
	ENDDO
d45 9
a53 9
	N=M+1
	DO KN=NN,1,-1
	   J=IPCUBE(4,KN)
	   K=IPCUBE(5,KN)
	   DO I=IPCUBE(3,KN)+IPCUBE(2,KN)-IPCUBE(1,KN),IPCUBE(3,KN),-1
	      N=N-1
	      X(I,J,K)=Y(N)
	   ENDDO
	ENDDO
d57 11
a67 11
	NT=1
	DO    I=1,NSAM*NROW*NSLICE
	   IF(NT.GT.NN)  THEN
	      Y(I)=0.0
	   ELSEIF(I.LT.IPCUBE(1,NT))  THEN
	      Y(I)=0.0
	   ELSEIF(I.EQ.IPCUBE(2,NT))  THEN
	      NT=NT+1
	   ENDIF
	ENDDO
	END
@


1.5
log
@header
@
text
@d4 1
a5 1
C                                                                      *
d15 1
a15 1
C                                                                      *
d33 6
a38 6
	DO    KN=1,NN
	J=IPCUBE(4,KN)
	K=IPCUBE(5,KN)
	DO    I=IPCUBE(3,KN),IPCUBE(3,KN)+IPCUBE(2,KN)-IPCUBE(1,KN)
	M=M+1
	Y(M)=QT*X(I,J,K)+TL*(X(I-1,J,K)+X(I+1,J,K)+
d41 1
a41 1
        ENDDO
d43 1
d45 7
a51 7
	DO    KN=NN,1,-1
	J=IPCUBE(4,KN)
	K=IPCUBE(5,KN)
	DO    I=IPCUBE(3,KN)+IPCUBE(2,KN)-IPCUBE(1,KN),IPCUBE(3,KN),-1
	N=N-1
	X(I,J,K)=Y(N)
	ENDDO
d54 1
a54 1
C  PUT ZEROS OUTSIDE ...
d58 7
a64 7
	IF(NT.GT.NN)  THEN
	Y(I)=0.0
	ELSEIF(I.LT.IPCUBE(1,NT))  THEN
	Y(I)=0.0
	ELSEIF(I.EQ.IPCUBE(2,NT))  THEN
	NT=NT+1
	ENDIF
@


1.4
log
@a
@
text
@d1 64
a64 40
	SUBROUTINE  smt3_q(t,ala,X,y,NSAM,NROW,nslice,ipcube,nn)
	DIMENSION   X(NSAM,NROW,nslice),y(nsam*nrow*nslice)
	dimension  ipcube(5,nn)

C
	qt=1.0-6*t*ala
	tl=t*ala
	m=0
	do    kn=1,nn
	j=ipcube(4,kn)
	k=ipcube(5,kn)
	do    i=ipcube(3,kn),ipcube(3,kn)+ipcube(2,kn)-ipcube(1,kn)
	m=m+1
	Y(m)=qt*x(i,j,k)+tl*(x(i-1,j,k)+x(i+1,j,k)+
     &			    x(i,j-1,k)+x(i,j+1,k)+
     &			    x(i,j,k-1)+x(i,j,k+1))
        enddo
	enddo
	n=m+1
	do    kn=nn,1,-1
	j=ipcube(4,kn)
	k=ipcube(5,kn)
	do    i=ipcube(3,kn)+ipcube(2,kn)-ipcube(1,kn),ipcube(3,kn),-1
	n=n-1
	x(i,j,k)=Y(n)
	enddo
	enddo
c
c  put zeros outside ...
c
	nt=1
	do    i=1,nsam*nrow*nslice
	if(nt.gt.nn)  then
	y(i)=0.0
	elseif(i.lt.ipcube(1,nt))  then
	y(i)=0.0
	elseif(i.eq.ipcube(2,nt))  then
	nt=nt+1
	endif
	enddo
@


1.3
log
@*** empty log message ***
@
text
@d4 1
a4 1
CNO_SAVE
@


1.2
log
@nosave
@
text
@d9 1
a9 1
	do  100  kn=1,nn
d12 1
a12 1
	do  101  i=ipcube(3,kn),ipcube(3,kn)+ipcube(2,kn)-ipcube(1,kn)
d14 1
a14 1
101	Y(m)=qt*x(i,j,k)+tl*(x(i-1,j,k)+x(i+1,j,k)+
d17 2
a18 1
100	continue
d20 1
a20 1
	do  200  kn=nn,1,-1
d23 1
a23 1
	do  201  i=ipcube(3,kn)+ipcube(2,kn)-ipcube(1,kn),ipcube(3,kn),-1
d25 3
a27 2
201	x(i,j,k)=Y(n)
200	continue
d32 1
a32 1
	do  501  i=1,nsam*nrow*nslice
d40 1
a40 1
501	continue
@


1.1
log
@Initial revision
@
text
@d4 1
@
