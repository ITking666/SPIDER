head	1.9;
access;
symbols
	healthdept_2018:1.9
	pre_getangas:1.8
	GPL2010:1.7
	pre_GPL2010:1.6
	pre_var_equation:1.6
	pre_fftwrings:1.6
	pre_opfiles:1.6
	src:1.6
	best-code:1.6
	x-named-regs:1.6
	x:1.6
	v13-00:1.6
	pre_GPL:1.5
	prec_CA:1.5
	noindx:1.1;
locks; strict;
comment	@c @;


1.9
date	2018.10.03.14.34.02;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2011.01.04.19.55.07;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.24.13.25.10;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.20.57.52;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.29.17.57.13;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.16.15.31.02;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.23.20.50.04;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.18.16.15.21;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.21.19.30.32;	author leith;	state Exp;
branches;
next	;


desc
@from wiw32d
@


1.9
log
@email_health_dept
@
text
@C++*********************************************************************
C
C  BUILDM.F         MERGED WITH REANG                JUL 03 ARDEAN LEITH
C                   BYLIST ADDED                     SEP 03 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  BUILDM(ILIST,DM,NANG,ANGBUF,FILLSS,SS,BYLIST,IRTFLG)
C
C  PURPOSE: BULID ROTATION MATRICES FROM THREE EULERIAN ANGLES
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

       SUBROUTINE BUILDM(ILIST,DM,NANG,ANGBUF,FILLSS,SS,BYLIST,IRTFLG)

        INCLUDE 'CMBLOCK.INC' 

        DIMENSION  :: DM(9,NANG),ILIST(NANG),ANGBUF(4,NANG),SS(6,NANG)
        LOGICAL    :: FILLSS,BYLIST

        CALL SET_MPI(ICOMM,MYPID,MPIERR) ! SETS ICOMM AND MYPID

C       READ ANGLES FROM THE DOCUMENT FILE.
C       ORDER IN THE DOCUMENT FILE IS PSI, THETA, PHI AND ANGLES 
C       ARE IN DEGREES! IN ANG ARRAY IT IS OTHER WAY AROUND
C       OUTPUT IS COMPACTED TO 1...NANG LINES (NOT BY SELECTOR)

        DO K=1,NANG

C          GET ANGLE SELECTOR INDEX FROM ILIST
           ITMP   = ILIST(K)

           ICOUNT = ANGBUF(1,ITMP)
           IF (ICOUNT .LE. 0) THEN
C             MISSING KEY
              CALL ERRT(102,'MISSING ANGLE FOR IMAGE',ITMP)
              IRTFLG = 1
              RETURN
           ENDIF

           KT = K
           IF (BYLIST) KT = ITMP

           CALL CANG(ANGBUF(4,ITMP),ANGBUF(3,ITMP),ANGBUF(2,ITMP),
     &               FILLSS,SS(1,KT),DM(1,KT))

           IF (VERBOSE) THEN
              IF (MYPID .LE. 0)WRITE(NOUT,333)K,(ANGBUF(J,ITMP),J=2,4)
333           FORMAT('  PROJECTION #',I7,
     &               '; PSI=',F6.1,' THETA=',F6.1,' PHI=',F6.1)
           ENDIF
         ENDDO

        IRTFLG = 0
        END

@


1.8
log
@FORMAT('  PROJECTION
set_mpi
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.7
log
@GPL_2010
@
text
@d38 2
a39 2
        DIMENSION  DM(9,NANG),ILIST(NANG),ANGBUF(4,NANG),SS(6,NANG)
        LOGICAL :: FILLSS,BYLIST
d41 1
a41 8
#ifdef USE_MPI
        include 'mpif.h' 
        integer mypid, comm, ierr 
        comm = MPI_COMM_WORLD 
        call MPI_COMM_RANK(comm, mypid, ierr)
#else
        mypid = -1 
#endif  
d69 1
a69 1
333           FORMAT(' PROJECTION #',I7,
@


1.6
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.5
log
@parameters changed
@
text
@d1 1
a1 1
C++************************************************************************
d6 23
a28 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.4
log
@mpi
@
text
@d4 1
a4 1
C
d14 1
a14 1
C  BUILDM(ILIST,DM,NANG,ANGBUF,FILLSS,SS,IRTFLG)
d21 1
a21 1
       SUBROUTINE BUILDM(ILIST,DM,NANG,ANGBUF,FILLSS,SS,IRTFLG)
d26 2
a27 1
        LOGICAL :: FILLSS
d32 3
a34 1
        call MPI_COMM_RANK(comm, mypid, ierr) 
d55 3
d59 1
a59 1
     &               FILLSS,SS(1,K),DM(1,K))
d62 1
a62 7
#ifdef USE_MPI
              if (mypid .eq. 0) then
                 WRITE(NOUT,333) K,(ANGBUF(J,ITMP),J=2,4)
              endif
#else
              WRITE(NOUT,333) K,(ANGBUF(J,ITMP),J=2,4)
#endif
@


1.3
log
@reang --> buildm (incorporating cang call)
@
text
@d27 6
d56 5
d62 1
@


1.2
log
@icount
@
text
@d3 1
a3 1
C  BUILDM.F
d14 1
a14 1
C  BUILDM
d21 1
a21 1
       SUBROUTINE BUILDM(ILIST,DM,NANG,ANGBUF,IRTFLG)
d23 4
a26 1
C      BULID ROTATION MATRICES FROM THREE EULERIAN ANGLES
d28 4
a31 1
        INCLUDE 'CMBLOCK.INC' 
d33 1
a33 12
        DOUBLE PRECISION :: CPHI,SPHI,CTHE,STHE,CPSI,SPSI
        DOUBLE PRECISION :: QUADPI,DGR_TO_RAD
        PARAMETER  (QUADPI = 3.141592653589793238462643383279502884197)
        PARAMETER  (DGR_TO_RAD = (QUADPI/180))
        DIMENSION  DM(9,NANG),ILIST(NANG)
        DIMENSION  ANGBUF(4,NANG)

         DO K=1,NANG

C          READ ANGLES FROM THE DOCUMENT FILE.
C          ORDER IN THE DOCUMENT FILE IS PSI, THETA, PHI AND ANGLES 
C          ARE IN DEGREES! IN ANG ARRAY IT IS OTHER WAY AROUND
d35 1
d37 1
a38 1

d46 3
a48 16
           CPHI=DCOS(DBLE(ANGBUF(4,ITMP))*DGR_TO_RAD)
           SPHI=DSIN(DBLE(ANGBUF(4,ITMP))*DGR_TO_RAD)
           CTHE=DCOS(DBLE(ANGBUF(3,ITMP))*DGR_TO_RAD)
           STHE=DSIN(DBLE(ANGBUF(3,ITMP))*DGR_TO_RAD)
           CPSI=DCOS(DBLE(ANGBUF(2,ITMP))*DGR_TO_RAD)
           SPSI=DSIN(DBLE(ANGBUF(2,ITMP))*DGR_TO_RAD)

           DM(1,K)=CPHI*CTHE*CPSI-SPHI*SPSI
           DM(2,K)=SPHI*CTHE*CPSI+CPHI*SPSI
           DM(3,K)=-STHE*CPSI
           DM(4,K)=-CPHI*CTHE*SPSI-SPHI*CPSI
           DM(5,K)=-SPHI*CTHE*SPSI+CPHI*CPSI
           DM(6,K)=STHE*SPSI
           DM(7,K)=STHE*CPHI
           DM(8,K)=STHE*SPHI
           DM(9,K)=CTHE
d50 1
a50 1
              WRITE(NOUT,333)  K,(ANGBUF(J,ITMP),J=2,4)
@


1.1
log
@Initial revision
@
text
@d41 1
a41 1
           IKEY   = ANGBUF(1,ITMP)
d43 1
a43 1
           IF (IKEY .NE. ITMP) THEN
@
