head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2013.05.01.16.19.15;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2013.05.01.15.37.02;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2013.04.24.11.43.28;	author leith;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@# 
# PURPOSE:  MAKEFILE FOR GNU/Linux SPIDER using FFTW3 on single processor 
#
# USING:    Gnu Fortran compiler!!
# TARGET:   Same machine as compiled on  
# IMAGES:   Optimal SPIDER image byte order: native 
# USAGE:    To create executable: make -f Makefile_linux.gfort
#
# NOTE:     Uses FFTW3 configured with: --enable-float --enable-openmp
# NOTE:     You may ignore any undefined QFFLAGS, QLFLAGS & SUFFIX
#
# NOTE:     SINCE .MOD FILES ARE NOT COMPATIBLE WITH THOSE PREPARED BY
#           OTHER COMPILERS BE SURE AND COMPILE IN A CLEAN DIRECTORY!!!
#
# Some Gfort Compile/link flags
# -Ofast               : Selects appropriate set of flags usually including 
# -fwrapv              : Wrapping of underflow/overflow  (needed for correct results in: bpcg.f
# -fno-strict-aliasing :
# -Wall                : Report possible errors

SHELL    = /bin/sh

AFLAGS   = r

# Location of Fortran compiler
COMP     = /usr/bin/gfortran

PGM      = spider_linux_gfort

LIB      = $(PGM).a

EXE      = ../../bin/$(PGM)

#FFLAGS  = -cpp -Ofast -funroll-loops -finline-limit=600 -DSP_LIBFFTW3 -DSP_GFORTRAN -Wall -fno-strict-aliasing  -fwrapv -fbounds-check -c  
FFLAGS   = -cpp -Ofast -funroll-loops -finline-limit=600 -DSP_LIBFFTW3 -DSP_GFORTRAN -Wall -fno-strict-aliasing  -fwrapv -c   

LF       = $(QLFLAGS)

# Static link with static FFTW3 libraries 
FFTWLIBDIR = ../../fftw/fftw3-opt64-gfort/lib
LINKLIBS   = -L$(FFTWLIBDIR) -lfftw3f 

.PRECIOUS : $(EXE) $(LIB) 

include Makefile.inc

#include Makebody.inc  Can not use: hardwired bin dir!

$(EXE) : $(LIB)
	$(COMP) $(LF)  $(LIB) $(LINKLIBS) -o $(EXE)
	@@echo "Created: $(EXE)"
	@@echo " "

$(LIB) : $(ELEMENTS)
	@@echo "        linking $(EXE) now ----"
.f.a:
	$(COMP) $(FFLAGS) $<
	$(AR) $(AFLAGS) $(LIB) $*.o
	@@\rm $*.o

#SRCS = $(patsubst %.f, %.o, $(filter-out $(EXCLUDE), $(wildcard *.f)))
@


1.2
log
@*** empty log message ***
@
text
@d12 4
a15 2
# Gfort Compile/link flags
# -mp                  : Invokes multi processor support 
d28 1
a28 1
PGM      = spider
d30 1
a30 1
EXE      = $(PGM)_linux_gfort
d32 1
a32 1
LIB      = $(EXE).a
d43 1
a43 1
.PRECIOUS : ../bin/$(EXE) $(LIB) 
d49 3
a51 3
../../bin/$(EXE)$(DEST) : $(LIB)
	$(COMP) $(LF)  $(LIB) $(LINKLIBS) -o ../../bin/$(EXE)$(DEST)
	@@echo "Created: ../../bin/$(EXE)$(DEST)"
d55 1
a55 1
	@@echo "        linking $(EXE)$(DEST) now ----"
d60 2
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# PURPOSE:  MAKEFILE FOR GNU/Linux SPIDER using FFTW3 on single Intel 32 bit processor 
d4 3
a6 3
# USING:    Gnu Fortran compiler
# TARGET:   Intel IA32 (i386) running GNU/Linux  
# IMAGES:   Optimal SPIDER image byte order:    ??? 
d12 6
a17 4
# PGI Compile/link flags
# -O2             : Invokes level 2 optimization 
# -mp             : Invokes multi processor support  (needed to link in PGI 2013)
# -fast           : Selects appropriate set of flags usually including -O2 -Munroll -Mnoframe
d32 2
a33 3
# For mp ::        FFLAGS  = -cpp -Ofast -funroll-loops -finline-limit=600 -fopenmp -DSP_MP 
# For defo001.f :: FFLAGS  = -cpp -Ofast -funroll-loops -finline-limit=600 -DSP_LIBFFTW3 -DSP_GFORTRAN -Wall -Wextra -fno-strict-aliasing -fwrapv -c
FFLAGS  = -cpp -Ofast -funroll-loops -finline-limit=600 -DSP_LIBFFTW3 -DSP_GFORTRAN -c  
d35 1
a35 1
LF       = $(QLFLAGS) 
d37 1
a37 1
# Static link with static FFTW3 libraries and math library
d39 1
a39 1
LINKLIBS = -L$(FFTWLIBDIR) -lfftw3f 
d45 1
a45 1
#include Makebody.inc  hardwired bin dir!
a57 6


# For defo001.f :: 
#  gfortran -cpp -Ofast -funroll-loops -finline-limit=600 -DSP_LIBFFTW3 -DSP_GFORTRAN  -fwrapv -c defo001.f
#  ar -r spider_linux_gfort.a defo001.o
# \rm defo001.o
@
