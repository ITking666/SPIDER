head	1.26;
access;
symbols
	pre_getangas:1.25
	GPL2010:1.25
	pre_GPL2010:1.24
	pre_var_equation:1.24
	pre_fftwrings:1.24
	pre_opfiles:1.24
	src:1.24
	best-code:1.24
	x-named-regs:1.24
	x:1.24
	v13-00:1.24
	pre_GPL:1.23
	prec_CA:1.23
	noindx:1.23
	Bproc:1.21
	oct21:1.21
	last77:1.20;
locks; strict;
comment	@c @;


1.26
date	2014.07.29.16.43.24;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2010.06.24.13.25.15;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2005.10.17.21.04.44;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2002.03.11.14.08.59;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2001.01.29.21.45.47;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	99.03.30.13.47.55;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	99.03.23.15.37.24;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	99.03.15.19.22.55;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	99.03.15.18.57.52;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	99.03.12.18.29.51;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	99.02.05.15.16.58;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	98.01.21.16.50.39;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	98.01.05.19.20.29;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	97.09.30.20.01.46;	author pawel;	state Exp;
branches;
next	1.12;

1.12
date	97.08.12.14.08.11;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	96.10.21.13.41.22;	author mladjadj;	state Exp;
branches;
next	1.10;

1.10
date	96.10.09.15.54.26;	author mladjadj;	state Exp;
branches;
next	1.9;

1.9
date	96.09.09.14.17.14;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	96.09.09.14.14.46;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.08.27.18.01.48;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	95.03.01.11.30.39;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	94.05.17.15.18.17;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	94.05.17.15.08.18;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.05.17.12.35.03;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.03.10;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.41;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.26
log
@LEN=MAXNAM
@
text
@
C **********************************************************************
C
C   CNINT3.F    -- CREATED MAY 87
C                  CHANGED TO POSTSCRIPT MAR 99 ARDEAN LEITH
C                  MAXNAM                JUL 14 ARDEAN LEITH
C
C **********************************************************************
C * AUTHOR: ArDean Leith                                               *
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C      CNINT3(LUNIM,LUNPOS,MAXDIM)
C
C      PURPOSE:     READS  MULTIPLE SPIDER PICTURE FILES, EXTRACTS CONTOURS, 
C                   AND TRANSFERS THEM TO A POSTSCRIPT FILE
C
C      PARAMETERS:  LUNIM   = SPIDER IMAGEE INPUT UNIT           (SENT)
C                   LUNPOS  = POSTSCRIPT OUTPUT UNIT             (SENT)
C                   MAXDIM  = COMMON BUFFER SIZE                 (SENT)
C
C      CALLED BY:   PLOT1
C
C      CALL TREE:   PLOT1..CNINT3..CNTUR..CNSCAN..CNTRCE..CNSTUFF
C                                               ..CNCALC
C                      
C23456789012345678901234567890123456789012345678901234567890123456789012
C--********************************************************************

       SUBROUTINE CNINT3(LUNIM,LUNPOS,NSAM,NROW,NSLICE,
     &                   FMINT,FMAXT,MAXDIM)
  
        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

C-------- START OF EM-PLOTT-COMMON-------------------------------------
C     INTEGERS
      COMMON /CONT1/ ICALL, IDIDIT, IDONE, IDX, IDY, ILINE, INTT,
     &               IRCD, ISS, ISTART, ISUM1, ISUM2, ISUM3, IT, IV, 
     &               IXX1, IXX2, IXX3, IX, IY, JSUM1, JSUM2, JSUM3, JT,
     &               LEVEL, LW, M, MF, MI, MT, N, NDIV, NF, NI, NT, NW

C     FLOATING POINT
      COMMON /CONT2/ APDIV, APDIVX, CV, DL, PY, RA, RC, RS, SKALE, THE,
     &               SX, SY, DENSL

C     ARRAYS
      COMMON /CONT3/ INCX(3), IORGX(3), INX(8),
     &               INY(8),  IPT(3,3), IMAP(12), NG(3), NP(3)

      COMMON /CONT4/ CTRI(6),FCTR(6),CTRDEL(6),ICNDSH(6),ICNCEL

C--------END OF EM-PLOTT-COMMON----------------------------------------

        PARAMETER        (MAXIRR  = 80000)
        PARAMETER        (NSIZE   = 2000)

        COMMON           BUF(MAXIRR),X(NSIZE),Y(NSIZE),AM(1)
        COMMON /SPI_BUF/ DATA(3,NSIZE),WORK(2,NSIZE)

        COMMON /POLY/    MINPTS,ISLICE,ICNT
      
        CHARACTER(LEN=MAXNAM) :: FILPOS,FILPAT

        CHARACTER *1     LABEL1
        CHARACTER *10    LABEL2
        CHARACTER *28    LABEL3
        CHARACTER *28    LABEL4
        CHARACTER *12    PROMPT

C*      NMAXI IS DIMENSION OF X AND Y ARRAYS
        NMAXI = NSIZE

C       MINIMUM NUMBER OF POINTS SAVED IN CONTOUR FILE / CONTOUR
        MINPTS = 4

C       MAX NUMBER OF POINTS DESIRED ON CONTOUR FILE CONTOUR
        MAXPTS  = 800

        MAXPIX = MAXDIM - 3 * NSIZE 
        IF ((NSAM * NROW) .GT. MAXPIX) THEN
            WRITE(NOUT,9945) MAXPIX
 9945       FORMAT(' SORRY, PGM LIMITED TO: ',I8,' PIXELS'/)
            CALL ERRT(100,'CNINT3',NE)
            GOTO 9999
        ENDIF

C       DISPLAY MAX AND MIN VALUE OF PICTURE , ASK FOR THE CONTOUR LEVELS
        WRITE(NOUT,106) FMINT,FMAXT
  106   FORMAT(' IMAGE RANGE: ',1PG11.3,'....',1PG11.3)

   11   CALL RDPRM2S(BLEV,ELEV,NOT_USED,
     &             'STARTING AND ENDING CONTOUR LEVELS',IRTFLG)
        IF (IRTFLG .EQ. -1) RETURN

   12   CALL RDPRM1S(RINC,NOT_USED,
     &    'CONTOUR LEVEL INCREMENT (USE INCR. > END FOR ONE LEVEL)',
     &     IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 11

        IF (FCHAR(4:4) .EQ. 'S') THEN
C          GET NAME OF OUTPUT FILE AND OPEN AS SEQUENTIAL FORMATTED
           CALL OPAUXFILE(.TRUE.,FILPOS,'ssr',LUNPOS,0,'N',
     &                    'OUTPUT',.TRUE.,IRTFLG)
           IF (IRTFLG .EQ. -1) GOTO 12
           IF (IRTFLG .NE. 0) GOTO 9999
           ICNT = 0
          
        ELSE 
           IF (NSLICE .GT. 1) THEN
C             GET NAME OF POSTSCRIPT FILE TEMPLATE
              CALL FILSEQP(FILPAT,NLET,ILIST,0,NUM,
     &                  'OUTPUT FILE TEMPLATE (E.G. SLI***)',IRTFLG)

C             FIND FILE NAME FOR FIRST SLICE
              CALL FILGET(FILPAT,FILPOS,NLET,ISLICE,IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 9999

C             OPEN THE FIRST SLICE OUTPUT FILE (SEQ. FORMATTED)
              CALL OPAUXFILE(.FALSE.,FILPOS,'ps',LUNPOS,0,'N',
     &                    ' ',.TRUE.,IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 9999

           ELSE
C             OPEN POSTSCRIPT FILE
              CALL OPAUXFILE(.TRUE.,FILPOS,'ps',LUNPOS,0,'N',
     &                    'OUTPUT',.TRUE.,IRTFLG)
           ENDIF
           IF (IRTFLG .EQ. -1) GOTO 12
           IF (IRTFLG .NE. 0) GOTO 9999

           CALL POSTRT(-LUNPOS)

C          INITIALIZE & SET SCALING PARAMETERS FOR POSTSCRIPT
           XLL = 0  
           YLL = -30
           XUR = NSAM
           YUR = NROW

           CALL POSCALE(LUNPOS, 1.0,1.0,  XLL,YLL,  XUR,YUR)
           CALL POGETSCALE(LUNPOS,SCALE,SCALED)

        ENDIF


C       SET X AND Y EXTENT FOR CONTOUR FILE
        XMIN  = 0.0
        YMIN  = 0.0
        XMAX  = NSAM
        YMAX  = NROW

C       PUT IN FRAME AROUND PLOT
        DATA(1,1) = 1.0
        DATA(2,1) = 1.0

        DATA(1,2) = NROW
        DATA(2,2) = 1.0

        DATA(1,3) = NROW
        DATA(2,3) = NSAM

        DATA(1,4) = 1.0
        DATA(2,4) = NSAM

        DATA(1,5) = 1.0
        DATA(2,5) = 1.0

        NDATA     = 5

        IF (FCHAR(4:4) .EQ. 'S') THEN
C          PUSH FRAME DATA INTO FILE
           CALL SSPUSH(LUNPOS,DATA,NDATA,0,IRTFLG)
        ELSE
C          SET TEXT CHARACTARISTICS FOR LABEL
           ITSIZE = 12
           ITANGL = 0
           JUST   = 0

C          SCALING DATA LABELS
           YPOS1  = -6.0 * SCALED
           XPOS1  = 1.0
           LABEL1 = '1'

           XPOS2  = NSAM
           YPOS2  = -6.0* SCALED
           CALL INTTOCHAR(NSAM,LABEL2,NLET2,1)

C          SLICE LABEL
           XPOS3       = NSAM / 2.0
           YPOS3       = -60.0 * SCALED
           LABEL3(1:7) = 'SLICE: '

C          THRESHOLD LABEL
           XPOS4        = XPOS3
           YPOS4        = -30.0 * SCALED
           LABEL4(1:16) = 'STARTING LEVEL: '
           WRITE(LABEL4(17:),8000,IOSTAT=IERR) BLEV
8000       FORMAT(1PG10.3)
           NLET4 = 27
        ENDIF

        DO ISLICE = 1,NSLICE

          IF (FCHAR(4:4) .NE. 'S') THEN
C            POSTSCRIPT OUTPUT

             IF (ISLICE .GT. 1) THEN
C               FIND FILE NAME FOR THIS SLICE
                CALL FILGET(FILPAT,FILPOS,NLET,ISLICE,IRTFLG)
                IF (IRTFLG .NE. 0) GOTO 9999

C               OPEN THE SLICE OUTPUT FILE (SEQ., FORMATTED)
                CALL OPAUXFILE(.FALSE.,FILPOS,'ps',LUNPOS,0,'N',
     &                    ' ',.TRUE.,IRTFLG)
                IF (IRTFLG .NE. 0) GOTO 9999

C               INITIALIZE POSTSCRIPT FILE
                CALL POSTRT(-LUNPOS)
                CALL POSCALE(LUNPOS, 1.0,1.0,  XLL,YLL,  XUR,YUR)
             ENDIF

C            PUSH FRAME DATA INTO FILE
             CALL POARAYF(LUNPOS,DATA,NDATA,.FALSE.,.FALSE.)

C            LABEL SCALING
             CALL POTEX(LUNPOS,LABEL1,1,XPOS1,YPOS1,ITSIZE,ITANGL,JUST)
             CALL POTEX(LUNPOS,LABEL2,NLET2,XPOS2,YPOS2,
     &                  ITSIZE,ITANGL,JUST)

             IF (NSLICE .GT. 1) THEN
C               LABEL SLICE
                CALL INTTOCHAR(ISLICE,LABEL3(8:),NLET3,1)
                CALL POTEX(LUNPOS,LABEL3,NLET3+7,XPOS3,YPOS3,
     &                     ITSIZE,ITANGL,1)
             ENDIF

C            LABEL THRESHOLD
             CALL POTEX(LUNPOS,LABEL4,NLET4,XPOS4,YPOS4,
     &                  ITSIZE,ITANGL,1)
             
          ENDIF

C         READ THE SPIDER FILE INTO AM ARRAY
          IREC1 = (ISLICE-1)*NROW
          ILOC  = 1
C         INVERT FOR CORRECT MIRRORING AS A SPIDER IMAGE
          DO  IREC = IREC1+NROW,IREC1,-1
             CALL REDLIN (LUNIM,AM(ILOC),NSAM,IREC)
             ILOC = ILOC + NSAM
          ENDDO

C         CNTUR EXTRACTS THE CONTOUR FROM THE SPIDER FILE AND PLACES
C         IT IN THE OUTPUT FILE
          CALL CNTUR(AM,NSAM,NROW,BLEV,ELEV,RINC,BUF,X,Y,
     &                NMAXI,LUNPOS,.FALSE.,MAXPTS,MAXIRR)

C         ECHO OUTPUT FILE NAME TO TERMINAL
          NLETP = LNBLNKN(FILPOS)
          WRITE(NOUT,*) ' PLOT PLACED IN: ',FILPOS(1:NLETP)

          IF (FCHAR(4:4) .NE. 'S') THEN
C            CLOSE THE POSTSCRIPT-FILE
             CALL POEND(LUNPOS)
             CLOSE(LUNPOS)
C            GIVE IMMEDIATE POSTSCRIPT PLOT (IF DESIRED)
             CALL POPRINT(FILPOS(1:NLETP))
          ENDIF
        ENDDO


9998    CLOSE(LUNPOS)
9999    CLOSE(LUNIM)
        RETURN
        END
@


1.25
log
@GPL_2010
@
text
@d6 1
d52 1
d81 2
a82 1
        CHARACTER *81    FILNAM,FILPOS,FILPAT
@


1.24
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.23
log
@nloop,iloop_removed
@
text
@d2 1
a2 1
C**************************************************************************
d7 1
a7 1
C **************************************************************************
d9 24
a32 7
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999 HEALTH RESEARCH INCORPORATED, ALBANY, NY.  *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
C **************************************************************************
@


1.22
log
@rdprm1s
@
text
@d94 1
a94 1
   11   CALL RDPRM2S(BLEV,ELEV,NLOOP,ILOOP,
d98 1
a98 1
   12   CALL RDPRM1S(RINC,NLOOP,ILOOP,
@


1.21
log
@sspush call wrong parameter number
@
text
@d98 1
a98 1
   12   CALL RDPRM2S(RINC,FDUM,NLOOP,ILOOP,
@


1.20
log
@put print request in here
@
text
@d174 1
a174 1
           CALL SSPUSH(LUNPOS,DATA,NDATA,0)
@


1.19
log
@nslice misspelled.
@
text
@d259 4
d264 1
a264 1
C            CLOSE THE POSTSCRIPT-FILE 
d267 2
a269 5

C         ECHO OUTPUT FILE NAME TO TERMINAL
          NLETP = LNBLNKN(FILPOS)
          WRITE(NOUT,*) ' PLOT PLACED IN: ',FILPOS(1:NLETP)

@


1.18
log
@*** empty log message ***
@
text
@d112 1
a112 1
           IF (NLSICE .GT. 1) THEN
@


1.17
log
@used postscript
@
text
@d34 2
a35 1
       SUBROUTINE CNINT3(LUNIM,LUNPOS,MAXDIM)
d64 1
a64 1
        COMMON /POLY/    MINPTS,ISLICE
a81 10
C       OPEN SPIDER IMAGE TYPE FILE AS INPUT
10      MAXIM = 0
        CALL OPFILE(.TRUE.,FILNAM,LUNIM,'O',ITYPE,NSAM,NROW,NSLICE,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       ESTABLISH FMIN AND FMAX IF NOT IN COMMON YET
        IF (IMAMI .NE. 1) 
     &       CALL NORM3(LUNIM,NSAM,NROW,NSLICE,FMAX,FMIN,AV)

d91 1
a91 1
        WRITE(NOUT,106) FMIN,FMAX
d96 1
a96 1
        IF (IRTFLG .EQ. -1) GOTO 10
d109 1
d121 1
a121 1
C             OPEN THE FIRST SLICE OUTPUT FILE
d174 1
a174 2
C           CALL SSOUT(LUNPOS,DATA,NDATA,ISLICE)
            continue
d214 1
a214 1
C               OPEN THE SLICE OUTPUT FILE
@


1.16
log
@CNO_SAVE
@
text
@d4 2
a5 1
C   CNINT3.FOR  -- CREATED MAY 87
d8 7
a14 7
C *  AUTHOR: ArDean Leith 
C *  COPYRIGHT (C)1987 , WADSWORTH CENTER FOR LABORATORIES AND RESEARCH    *
C *    NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.              *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
d17 1
a17 1
C      CNINT3(LUNCS,DISPL)
d20 1
a20 1
C                   AND TRANSFERS THEM TO A CNT META-FILE
d22 3
a24 2
C      PARAMETERS:  UNUSED
C                   MAXDIM  = COMMON BUFFER SIZE
d28 2
a29 4
C      CALLS:       REDLIN     CNTUR   CSSCALT                
C
C      CALL TREE:   PLOT1..CNINT3..CNTUR..CNSCAN..CNTRCE..CSPUSH
C                        ..CNINT                ..CNCALC
a30 1
C        0         2         3         4         5         6         7
d34 1
a34 1
       SUBROUTINE CNINT3(LUNCS,UNUSED,MAXDIM)
a35 2
CNO_SAVE 
        INCLUDE 'CONSTG.INC'
d61 3
a63 2
        COMMON /SPI_BUF/ DATA(3,NSIZE),WORK(2,NSIZE),NUMBER(200)
        COMMON /POLY/    MINPTS
d65 6
a70 2
        CHARACTER *81    FILPAT,FILNAM
        CHARACTER * 1    NULL,ANSW
a71 3
        DATA             LUNIM/11/
	NULL=CHAR(0)

d79 1
a79 3
        MAXPTS = 800

        ISTFLG = 1
d81 5
a85 16
C       GET IMAGE FILE NAMES
4004    WRITE(NOUT,*) 'FOR IMAGE FILE NAMES:'
        NIMAG = 200
        CALL FILSEQP(FILPAT,NLET,NUMBER,200,NIMAG, 
     $  'FILE PREFIX OR TEMPLATE (EG. PIC****)', IRTFLG)
     
        
        DO 1000 IFIL = 1,NIMAG
          CALL FILGET(FILPAT,FILNAM,NLET,NUMBER(IFIL),IERR)
          IF (IERR .NE. 0) GOTO 1000
         
C         OPEN A SPIDER IMAGE TYPE FILE AS INPUT
          MAXIM = 0
          CALL OPFIL(.FALSE.,FILNAM,LUNIM,'O',NSAM,NROW,NSLICE,
     &             MAXIM,' ',.FALSE.,IRTFLG)
          IF (IRTFLG .NE. 0) GOTO 1000
d87 2
a88 2
C         ESTABLISH FMIN AND FMAX IF NOT IN COMMON YET
          IF (IMAMI .NE. 1) 
d91 2
a92 2
          MAXPIX = MAXDIM - 3 * NSIZE 
          IF ((NSAM * NROW) .GT. MAXPIX) THEN
d96 2
a97 2
            RETURN
          ENDIF
d99 7
a105 15
C         SET X AND Y EXTENT FOR CONTOUR FILE
          XMIN  = 1.0
          YMIN  = 1.0
          XMAX  = NSAM
          YMAX  = NROW

C         PUT IN FRAME AROUND PLOT
          DATA(1,1) = 1.0
          DATA(2,1) = 1.0

          DATA(1,2) = NROW
          DATA(2,2) = 1.0

          DATA(1,3) = NROW
          DATA(2,3) = NSAM
d107 4
a110 2
          DATA(1,4) = 1.0
          DATA(2,4) = NSAM
d112 141
a252 2
          DATA(1,5) = 1.0
          DATA(2,5) = 1.0
a253 3
          NDATA     = 5
          CALL CSPUSH(LUNCS,DATA,NDATA,NERR,ISTFLG,ICNTR)

d255 6
a260 5
C         FLIP IS FOR MIRRORING INPUT PRIOR TO CONTOUR STORAGE
          J = NSAM * NROW + 1
          DO  I = 1,NROW
             J = J - NSAM
             CALL REDLIN (LUNIM,AM(J),NSAM,I)
a262 14
C         DISPLAY MAX AND MIN VALUE OF PICTURE , ASK FOR THE CONTOUR LEVELS
          WRITE(NOUT,106) FMIN,FMAX
  106     FORMAT(' IMAGE RANGE: ',1PG11.3,'....',1PG11.3)


 1009     CALL RDPRM2S(BLEV,ELEV,NLOOP,ILOOP,
     &        'STARTING AND ENDING CONTOUR LEVELS',IRTFLG)
          IF (IRTFLG .EQ. -1) GOTO 4004

 1010     CALL RDPRM2S(RINC,FDUM,NLOOP,ILOOP,
     &    'CONTOUR LEVEL INCREMENT (USE INCR. > END FOR ONE LEVEL)',
     &     IRTFLG)
          IF (IRTFLG .EQ. -1) GOTO 1009

d264 1
a264 1
C         IT IN THE CONTOUR FILE
d266 1
a266 1
     &                NMAXI,LUNCS,.FALSE.,MAXPTS,MAXIRR)
d268 5
a272 3
C         SCALE AND WRITE THE CONTROL DATA INTO THE FILE
          CALL CSSCALT(LUNCS,1)
          CALL CSTRAP(LUNCS)
d274 3
a276 1
          CLOSE(LUNIM)
d278 1
a278 1
1000    CONTINUE
a279 2
C       CLOSE CONTOUR STORAGE FILE 
        CLOSE(LUNCS)
d281 2
@


1.15
log
@used opfil
@
text
@d37 1
@


1.14
log
@used norm3
@
text
@d95 4
a98 3
          CALL OPENF(FILNAM,LUNIM,NSAM,NROW,'OLD',NF,NSLICE)
C         NF = 2    NORMAL RETURN
          IF (NF .NE. 2) GOTO 1000
@


1.13
log
@*** empty log message ***
@
text
@d95 1
a95 1
          CALL OPENF(FILNAM,LUNIM,NSAM,NROW,'OLD',NF,NDUM)
d100 2
a101 1
          IF (IMAMI .NE. 1) CALL NORM(LUNIM,NSAM,NROW,FMAX,FMIN,AV)
@


1.12
log
@removed EMPLOTT.INC
@
text
@d69 2
a70 1
        DATA             NULL/0/,LUNIM/11/
@


1.11
log
@delete an extra common in arg list
@
text
@d39 19
a57 1
        INCLUDE 'EMPLOTT.INC'
@


1.10
log
@change filseq to filseqp call
@
text
@d68 1
a68 1
     $  'FILE PREFIX OR TEMPLATE (EG. PIC****)',,IRTFLG)
@


1.9
log
@added errt
@
text
@d67 3
a69 1
        CALL FILSEQ(FILPAT,NLET,NUMBER,200,NIMAG,IRTFLG)
@


1.8
log
@removed multiz question (unused)
@
text
@d84 2
a85 1
 9945       FORMAT(' SORRY, PGM LIMITED TO',I8,' PIXELS'/)
@


1.7
log
@improved
@
text
@d21 2
a22 1
C      PARAMETERS:  DISPL = FLAG FOR CONTOURS DISPLAY
d26 1
a26 4
C      CALLS:       RDPRMC             TMEND             REDLIN 
C                   RDPRI3             TMSTRT            CNTUR
C                   TMCLR              CNTERM            CSCLOS
C                   CSSCALT            CNOPEN            
d28 2
a29 3
C      CALL TREE:   PLOT1..CNINT3..CNTUR..CNSCAN..CNCALC
C                        ..CNINT4               ..CNTRCE..CSPUSH
C                        ..CNINT 
d35 1
a35 1
       SUBROUTINE CNINT3(LUNCS,DISPL,MAXDIM)
d41 2
a42 2
        PARAMETER       (MAXIRR  = 80000)
        PARAMETER       (NSIZE   = 2000)
a49 1
        LOGICAL          MULTIZ
d59 1
a59 1
C       MAX NUMBER OF POINTS DESIRED  ON CONTOUR FILE CONTOUR
a62 5
        CALL RDPRMC(ANSW,N,.TRUE.,
     &    'MULTIPLE Z-LEVEL CONTOUR FILE? (N/Y)',NULL,IRTFLG)
        IF (IRTFLG .EQ. -1) RETURN
        MULTIZ = .FALSE.
        IF (ANSW .EQ. 'Y') MULTIZ = .TRUE.
d94 3
a96 2
1002      IF (MULTIZ) CALL RDPRM2(ZCOO,ZDUM,NLOOP,ILOOP,
     &               'ENTER Z-LEVEL COORDINATE')
d98 2
a99 3
C           PUT IN FRAME AROUND PLOT
            DATA(1,1) = 0.0
            DATA(2,1) = 0.0
d101 2
a102 2
            DATA(1,2) = NROW
            DATA(2,2) = 0.0
d104 2
a105 2
            DATA(1,3) = NROW
            DATA(2,3) = NSAM
d107 2
a108 2
            DATA(1,4) = 0
            DATA(2,4) = NSAM
d110 2
a111 2
            DATA(1,5) = 0.0
            DATA(2,5) = 0.0
a112 3
            NDATA     = 5
            CALL CSPUSH(LUNCS,DATA,NDATA,NERR,ISTFLG,ICNTR)

d117 2
a118 2
            J = J - NSAM
            CALL REDLIN (LUNIM,AM(J),NSAM,I)
d128 1
a128 4
          IF (IRTFLG .EQ. -1) THEN
             IF (MULTIZ) GOTO 1002
             GOTO 4004
          ENDIF
@


1.6
log
@unknown change
@
text
@d28 1
a28 1
C                   CSSCALT             CNOPEN            
d32 2
a33 1
C                        ..CNINT                       
a39 1
#ifdef SP_UNIX
a42 5
#else
        INCLUDE 'COMMON1:CONSTG.INC'
        INCLUDE 'COMMON1:CMBLOCK.INC'
        INCLUDE 'COMMON1:EMPLOTT.INC'
#endif
d44 2
a45 1
        PARAMETER       (NSIZE  = 2000)
d47 1
a47 1
        COMMON           BUF(NSIZE),X(NSIZE),Y(NSIZE),AM(1)
d49 1
d51 3
a53 1
        COMMON /POLY/   HOLES,REVERS
d55 1
a55 3
        CHARACTER *81  FILPAT,FILNAM
        CHARACTER * 1  NULL,ANSW
        LOGICAL        HOLES,REVERS,DISPL,MULTIZ
d57 2
a58 5
        DATA           NULL/0/,LUNIM/11/,MAXPTS/450/

C*      HOLES IS LOGICAL FLAG THAT ALL CONTOURS ARE BOTH INTERIOR AND
C*      EXTERIOR. CAN BE CLOCKWISE OR COUNTER-CLOCKWISE
C*      REVERS IS FLAG THAT CONTOUR CAN BE REVERSED
d60 2
a61 3
C       DON'T CHECK FOR COUNTER-CLOCKWISE CONTOURS
        HOLES  = .FALSE.
        REVERS = .FALSE.
d63 2
a64 2
C*      NMAXI IS DIMENSION OF X AND Y ARRAYS
        NMAXI = NSIZE
d67 1
a67 1
4001    CALL RDPRMC(ANSW,N,.TRUE.,
d71 1
a71 1
        IF (ANSW .EQ. 'Y' .OR. ANSW .EQ. 'y') MULTIZ = .TRUE.
a124 8
c******************debug***********
c9001        format(' ',i5,'=(',f5.0,','f5.0,')')
c            do i = 1,5
c               write(6,9001) i,data(1,i),data(2,i)
c            enddo
c**********************************


d126 2
d129 1
a129 1
            J = (I - 1) * NSAM + 1
a149 1

d152 2
a153 2
          CALL CNTUR (AM,NSAM,NROW,BLEV,ELEV,RINC,BUF,X,Y
     &              ,NMAXI,LUNCS,.FALSE.,MAXPTS,NSIZE)
d155 1
a155 1
C         SCAL AND WRITE THE CONTROL DATA INTO THE FILE
a160 3
          IF (SCALE .EQ. 0.0) CALL CSSCALT(LUNCS,1)
C         WRITE THE CONTROL DATA INTO THE FILE HEADER

a161 11

        IF (DISPL) THEN 
C         DISPLAY CONTOUR ON DEC TERM (VT125 OR VT240)
          ISEL = 1

5555      CALL CNTERM(CNTFIL,EXTEN,LUNCS,ISEL,NF)
C         THERE IS A QUESTION ASKED AT END OF CNDEC SO OK TO CLEAR SCREEN
          CALL TMSTRT(NOUT)
          CALL TMCLR(NOUT)
          CALL TMEND(NOUT)
        ENDIF
@


1.5
log
@undefined NCNT
so I always put frame around plot now
@
text
@d169 2
a170 1
C         WRITE THE CONTROL DATA INTO THE FILE
d174 4
@


1.4
log
@bug fixed
@
text
@a1 1

a112 1
          IF (NCNT .LE. 1) THEN
a138 1
          ENDIF
@


1.3
log
@removed special vax version
@
text
@a39 3

       SUBROUTINE CNINT3(LUNCS,DISPL,MAXDIM)
  
@


1.2
log
@cpp_lines_added
@
text
@d1 2
a2 1
#ifdef VMS
a39 15
#ifdef SP_UNIX
        INCLUDE 'CONSTG.INC'
#else
        INCLUDE 'COMMON1:CONSTG.INC'
#endif
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
#ifdef SP_UNIX
        INCLUDE 'EMPLOTT.INC'
#else
        INCLUDE 'COMMON1:EMPLOTT.INC'
#endif
a40 141
        PARAMETER       (NSIZE  = 2000)
        COMMON          BUF(NSIZE),X(NSIZE),Y(NSIZE),AM(1)
        COMMON /COMMUN/ DATA(3,NSIZE),WORK(2,NSIZE),NUMBER(200)
        COMMON /POLY/   HOLES,REVERS

        CHARACTER *81  FILPAT,FILNAM
        CHARACTER * 1  NULL,ANSW
        LOGICAL        HOLES,REVERS,DISPL,MULTIZ

        DATA           NULL/0/,LUNIM/11/,MAXPTS/450/

C*      HOLES IS LOGICAL FLAG THAT ALL CONTOURS ARE BOTH INTERIOR AND
C*      EXTERIOR. CAN BE CLOCKWISE OR COUNTER-CLOCKWISE
C*      REVERS IS FLAG THAT CONTOUR CAN BE REVERSED

C       DON'T CHECK FOR COUNTER-CLOCKWISE CONTOURS
        HOLES  = .FALSE.
        REVERS = .FALSE.

C*      NMAXI IS DIMENSION OF X AND Y ARRAYS
        NMAXI = NSIZE
C       SET X AND Y EXTENT FOR CONTOUR FILE
        XMIN  = 1.0
        YMIN  = 1.0
        XMAX  = NSAM
        YMAX  = NROW

        ISTFLG = 1
4001    CALL RDPRMC(ANSW,N,.TRUE.,
     &    'MULTIPLE Z-LEVEL CONTOUR FILE? (N/Y)',NULL,IRTFLG)
        IF (IRTFLG .EQ. -1) RETURN
        MULTIZ = .FALSE.
        IF (ANSW .EQ. 'Y' .OR. ANSW .EQ. 'y') MULTIZ = .TRUE.

C       GET IMAGE FILE NAMES
4004    WRITE(NOUT,*) ' FOR IMAGE FILE SERIES ENTER'
        NIMAG = 200
        CALL FILSEQ(FILPAT,NLET,NUMBER,200,NIMAG,IRTFLG)
        
        DO 1000 IFIL = 1,NIMAG
          CALL FILGET(FILPAT,FILNAM,NLET,NUMBER(IFIL),IERR)
          IF (IERR .NE. 0) GOTO 1000
         
C         OPEN A SPIDER IMAGE TYPE FILE AS INPUT
          CALL OPENF(FILNAM,LUNIM,NSAM,NROW,'OLD',NF,NDUM)
C         NF = 2    NORMAL RETURN
          IF (NF .NE. 2) GOTO 1000

C         ESTABLISH FMIN AND FMAX IF NOT IN COMMON YET
          IF (IMAMI .NE. 1) CALL NORM(LUNIM,NSAM,NROW,FMAX,FMIN,AV)

          MAXPIX = MAXDIM - 3 * NSIZE 
          IF ((NSAM * NROW) .GT. MAXPIX) THEN
            WRITE(NOUT,9945) MAXPIX
 9945       FORMAT(' *** SORRY, PGM LIMITED TO',I8,' PIXELS'/)
            RETURN
          ENDIF

1002      IF (MULTIZ) CALL RDPRM2(ZCOO,ZDUM,NLOOP,ILOOP,
     &                'ENTER Z-LEVEL COORDINATE')

          NCNT = 1
          IF (NCNT .LE. 1) THEN
C           PUT IN FRAME AROUND PLOT
            DATA(1,1) = 0.0
            DATA(2,1) = 0.0

            DATA(1,2) = NSAM
            DATA(2,2) = 0.0

            DATA(1,3) = NSAM
            DATA(2,3) = NROW

            DATA(1,4) = 0
            DATA(2,4) = NROW

            DATA(1,5) = 0.0
            DATA(2,5) = 0.0
            NDATA     = 5

            CALL CSPUSH(LUNCS,DATA,NDATA,NERR,ISTFLG,ICNTR)
          ENDIF

C..       READ THE SPIDER FILE INTO AM ARRAY
          DO I = 1,NROW
            J = (I - 1) * NSAM + 1
            CALL REDLIN (LUNIM,AM(J),NSAM,I)
          ENDDO

C..       DISPLAY MAX AND MIN VALUE OF PICTURE , ASK FOR THE CONTOUR LEVELS
          WRITE(NOUT,106) FMIN,FMAX
  106     FORMAT('  IMAGE RANGE: ',1PG11.3,'....',1PG11.3)


 1009     CALL RDPRM2S(BLEV,ELEV,NLOOP,ILOOP,
     &    'STARTING AND ENDING CONTOUR LEVELS',IRTFLG)
          IF (IRTFLG .EQ. -1) THEN
             IF (MULTIZ) GOTO 1002
             GOTO 4004
          ENDIF

 1010     CALL RDPRM2S(RINC,FDUM,NLOOP,ILOOP,
     &    'CONTOUR LEVEL INCREMENT (USE INCR. > END FOR ONE LEVEL)',
     &     IRTFLG)
          IF (IRTFLG .EQ. -1) GOTO 1009


C         CNTUR EXTRACTS THE CONTOUR FROM THE SPIDER FILE AND PLACES
C         IT IN THE CONTOUR FILE
          CALL CNTUR (AM,NROW,NSAM,BLEV,ELEV,RINC,BUF,X,Y
     &              ,NMAXI,LUNCS,.FALSE.,MAXPTS)

C..       WRITE THE CONTROL DATA INTO THE FILE
          CALL CSTRAP(LUNCS)

          CLOSE(LUNIM)
1000    CONTINUE

        IF (DISPL) THEN 
C..       DISPLAY CONTOUR ON DEC TERM (VT125 OR VT240)
          ISEL = 1

5555      CALL CNTERM(CNTFIL,EXTEN,LUNCS,ISEL,NF)
C..       THERE IS A QUESTION ASKED AT END OF CNDEC SO OK TO CLEAR SCREEN
          CALL TMSTRT(NOUT)
          CALL TMCLR(NOUT)
          CALL TMEND(NOUT)
        ENDIF

C..     CLOSE CONTOUR STORAGE FILE 
        IF (SCALE .EQ. 0.0) THEN
C         FILE NEEDS SCALING
          CALL SPOUT(0,' SCALING CONTOUR FILE NOW.',0)
          CALL CSSCALT(LUNCS,0)
          CALL CSTRAP(LUNCS)
        ENDIF
        CLOSE(LUNCS)

        RETURN
        END
#else
d45 2
a48 4
#endif
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
a49 4
#endif
#ifdef SP_UNIX
        INCLUDE 'EMPLOTT.INC'
#else
a196 1
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1

d39 3
d43 4
d48 4
d53 1
d195 164
a358 1
    
@
