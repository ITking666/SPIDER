head	1.19;
access;
symbols
	pre_mrcs:1.19
	healthdept_2018:1.19
	pre_getangas:1.18
	GPL2010:1.18
	pre_GPL2010:1.17
	pre_var_equation:1.17
	pre_fftwrings:1.16
	pre_opfiles:1.16
	src:1.16
	best-code:1.16
	x-named-regs:1.16
	x:1.16
	v13-00:1.16
	pre_GPL:1.14
	prec_CA:1.14
	noindx:1.13
	Bproc:1.10
	oct21:1.9
	last77:1.9;
locks; strict;
comment	@c @;


1.19
date	2018.10.03.14.34.23;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2010.06.24.13.26.58;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2009.05.22.10.57.05;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.20.49.27;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.18.39.52;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.18.16.23.49;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.11.14.08.41;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.11.06.15.44.21;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.11.01.19.16.29;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.11.10.23.11.21;	author yuchen;	state Exp;
branches;
next	1.9;

1.9
date	99.02.05.14.10.23;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	98.02.17.19.56.28;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	98.01.06.16.16.46;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	97.10.15.14.29.06;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.10.02.14.28.50;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.10.21.13.48.31;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	96.10.09.15.54.43;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	95.07.07.18.35.25;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.54;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.19
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C  SLICE.F                  LONGFILENAMES           JAN 89 ARDEAN LEITH
C                           USED OPFILE             NOV 00 ARDEAN LEITH
C                           USED OPFILEC            FEB 03 ARDEAN LEITH
C                           SETPRMB PARAMETERS      MAY 09 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C      SLICE(MAXDIM,LUN1,LUN2,LUNO)
C
C      THIS SUBROUTINE MAKES A PERPENDICULAR SLICE THROUGH NUMT
C      FILES AT THE SPECIFIED ROW, NREC.
C 
C      PARAMETERS:
C        MAXDIM    MAXIMUM BUFFER SPACE
C        LUN1      LOGICAL UNIT NUMBER OF THE OLDER FILE
C        LUN2      LOGICAL UNIT NUMBER OF THE FILE MOST RECENTLY OPENED
C        LUNO      LOGICAL UNIT NUMBER OF OUTPUT FILE
C
C      CALLED BY: UTIL3
C
C--*******************************************************************

	SUBROUTINE SLICE(MAXDIM,LUN1,LUN2,LUNO)

        INCLUDE 'CMLIMIT.INC'

	COMMON BUF(1)

        COMMON/UNITS/LUNC,NIN,NOUT
	COMMON/MASTER/NSAM1,NROW1,IREC,NLABEL,IFORM,IMAMI,FMAX,FMIN,
     &	              AV,SIG,IHIST

        PARAMETER     (NUMTOT = 256)
	DIMENSION     LUNA(2),NREC1(NUMTOT)

        CHARACTER(LEN=MAXNAM) :: FILNAM(NUMTOT),FILOUT,FILPAT
        CHARACTER(LEN=1)      :: NULL

        NULL = CHAR(0)

	LUNA(1) = LUN1
	LUNA(2) = LUN2
	NMOD    = 2
	AVG     = 0.0
	NS      = 1
	NUMT    = 0

        WRITE(NOUT,*) ' SLICING A STACK OF 2D FILES'

        CALL FILSEQP(FILPAT,NLET,NREC1,NUMTOT,NUMT, 
     &      'FILE PREFIX OR TEMPLATE (EG. PIC****)', IRTFLG)
        IF (IRTFLG .EQ. -1) RETURN

200	DO  IFIL =1,NUMT
           CALL FILGET(FILPAT,FILNAM(IFIL),NLET,NREC1(IFIL),IRTFLG)
           IF (IRTFLG .NE. 0) THEN
              CALL ERRT(19,'SLICE',NE)
              RETURN
           ENDIF
	ENDDO

        CALL FILERD(FILOUT,NLETO,NULL,'OUTPUT',IRTFLG)
        IF (IRTFLG .NE. 0) THEN
           CALL ERRT(19,'SLICE',NE)
           RETURN
        ENDIF
	
	CALL RDPRMI(NREC,NDUM,NOT_USED,'ROW NUMBER OF SLICE')

        MAXIM = 0
        CALL OPFILEC(0,.FALSE.,FILNAM(1),LUNA(1),'O',IFORM,NSAM,NROW,
     &               NSL1, MAXIM,' ',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        IF (IMAMI.EQ.0)
     &      CALL NORM3(LUNA(1),NSAM,NROW,NSL1,FMAX,FMIN,AV1)
	AVREF = AV1

C       THE EXTRA NSAM COMES FROM LABEL INFORMATION IN OPEN.
	NOFFS1 = 1+ NSAM
	NOFFS2 = NOFFS1 + 3 * NSAM
	NSAM2 = NSAM*2
	NSAM3 = NSAM*3

12  	IF (NREC.EQ.1 .OR. NREC+1.GT.NROW .OR. NSAM*8.GT.MAXDIM) THEN
           CALL ERRT(7,'SLICE',NE)
           RETURN
        ENDIF

C       NA1 CORRESPONDS TO THE 1ST OF 3 LINES OF ONE FILE.
C       NB1 CORRESPONDS TO THE 1ST OF 3 LINES OF THE SECOND FILE.
C       NAOUT CORRESPONDS TO 1 LINE CONTAINING INTERPOLATION BETWEEN THE
C       TWO FILES DESCRIBED ABOVE.

30	NA1 = NOFFS1
	NB1 = NOFFS2
	NAOUT = NB1+3*NSAM

        MAXIM = 0
        NROWT = 2*NUMT-1
        CALL OPFILEC(0,.FALSE.,FILOUT,LUNO,'U',IFORM,NSAM,NROWT,1,
     &                 MAXIM,' ',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) THEN
	   CLOSE(LUNA(1))
	   RETURN
        ENDIF
	IRECSV = IREC

C       READ IN THE THREE LINES TO BE USED FOR INTERPOLATION.
   	CALL REDLIN(LUNA(1),BUF(NA1),NSAM,NREC-1)
	CALL REDLIN(LUNA(1),BUF(NA1+NSAM),NSAM,NREC)

	B    = BUF(NA1+NSAM)
	AMAX = B
	AMIN = B
	AVG  = 0.0
        AVS  = 0.0

	DO  KL1 = 1,NSAM
          B   = BUF(NA1+NSAM+KL1-1)
          AVG = AVG + B
          AVS = AVS + B * B
          IF (B .GT. AMAX) AMAX = B
          IF (B .LT. AMIN) AMIN = B
	ENDDO

	CALL WRTLIN(LUNO,BUF(NA1+NSAM),NSAM,1)
	CALL REDLIN(LUNA(1),BUF(NA1+2*NSAM),NSAM,NREC+1)

C       FOR EFFICIENCY, DO THE FOLLOWING CALCULATIONS OUTSIDE LOOP.

	CONS1 = 1. / SQRT(2.)
	CONS2 = 2. + 6./ SQRT(2.)
	CONS3 = 2. + 8./ SQRT(2.)

C       LOOP TO FORM AN INTERPOLATED LINE BETWEEN EACH OF THE NUMT LINES.
	DO  J = 2,NUMT
           MAXIM = 0
           CALL OPFILEC(0,.FALSE.,FILNAM(J),LUNA(NMOD),'O',IFORM,
     &                 NSAM,NROW,NSL2,MAXIM,' ',.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0)  THEN
	      IF (NMOD .NE. 1) CLOSE(LUNA(1))
  	      CLOSE(LUNA(2))
	      CLOSE(LUNO)
	      RETURN
           ENDIF
           IF (IMAMI.EQ.0)
     &         CALL NORM3(LUNA(NMOD),NSAM,NROW,NSL2,FMAX,FMIN,AV)
	   AV2 = AV

C          READ IN THE THREE LINES TO BE USED FOR INTERPOLATION.

    	   CALL REDLIN(LUNA(NMOD),BUF(NOFFS2),NSAM,NREC-1)
	   CALL REDLIN(LUNA(NMOD),BUF(NOFFS2+NSAM),NSAM,NREC)
	   CALL REDLIN(LUNA(NMOD),BUF(NOFFS2+NSAM2),NSAM,NREC+1)

C          INTERPOLATE BETWEEN EACH OF NSAM POINTS.

C          NORMALIZE THE FILES
	   DIFF1 = AVREF - AV1
	   DIFF2 = AVREF - AV2
	   DIFF  = (2*DIFF1)+(2*DIFF2)

C          NORMALIZE LINE STARTING AT NOFFS2+NSAM SO THAT WHEN WE COPY
C          IT INTO THE OUTPUT FILE, IT IS NORMALIZED ALREADY.

	   DO  K = 1,NSAM
              KN = NOFFS2+NSAM+K-1
              BUF(KN) = BUF(KN)+DIFF2
	   ENDDO

C          FOR FIRST POINT,K=1, INTERPOLATE USING ONLY 3 POINTS.
C          NORMALIZE THE VALUES OF NREC-1 AND NREC+1 ONLY.

	   BUF(NAOUT) = (BUF(NOFFS1+NSAM)+BUF(NOFFS2+NSAM)+
     &        CONS1*(BUF(NOFFS1)+BUF(NOFFS1+NSAM+1)+BUF(NOFFS1+
     &        NSAM2)+BUF(NOFFS2)+BUF(NOFFS2+NSAM+1)+
     &        BUF(NOFFS2+NSAM2)+DIFF))/CONS2
	   B   = BUF(NAOUT)
	   AVG = AVG + B
           AVS = AVS + B * B
	   IF (B .GT. AMAX) AMAX = B
	   IF (B .LT. AMIN) AMIN = B

C          LOOP TO INTERPOLATE FOR ALL BUT THE ENDPOINTS.

	   DO  K = 2,NSAM-1
              BUF(NAOUT+K-1) = (BUF(NOFFS1+NSAM+K-1)+BUF(NOFFS2+NSAM+
     &        K-1)+CONS1*(BUF(NOFFS1+K-1)+BUF(NOFFS1+NSAM+K-2)+
     &        BUF(NOFFS1+NSAM+K)+BUF(NOFFS1+NSAM2+K-1)+
     &        BUF(NOFFS2+K-1)+BUF(NOFFS2+NSAM+K-2)+BUF(NOFFS2+
     &        NSAM+K)+BUF(NOFFS2+NSAM2+K-1)+DIFF))/CONS3
	      B   = BUF(NAOUT+K-1)
              AVG = AVG + B
              AVS = AVS + B * B
              IF (B .GT. AMAX) AMAX = B
              IF (B .LT. AMIN) AMIN = B
	   ENDDO

C          INTERPOLATE THE ENDPOINT.
	   BUF(NAOUT+NSAM-1) = (BUF(NOFFS1+NSAM2-1)+BUF(NOFFS2+
     &        NSAM2-1)+CONS1*(BUF(NOFFS1+NSAM-1)+BUF(NOFFS1+
     &        NSAM2-2)+BUF(NOFFS1+NSAM3-1)+BUF(NOFFS2+NSAM-1)+
     &        BUF(NOFFS2+NSAM2-2)+BUF(NOFFS2+NSAM3-1)+DIFF))/CONS2
	   B   = BUF(NAOUT+NSAM-1)
	   AVG = AVG + B
           AVS = AVS + B * B
	   IF (B .GT. AMAX) AMAX = B
	   IF (B .LT. AMIN) AMIN = B

	   CALL WRTLIN(LUNO,BUF(NAOUT),NSAM,J*2-2)
 	   CALL WRTLIN(LUNO,BUF(NOFFS2+NSAM),NSAM,J*2-1)
	   DO  KL2 = 1,NSAM
              B   = BUF(NOFFS2+NSAM+KL2-1)
              AVG = AVG + B
              AVS = AVS + B * B
              IF (B .GT. AMAX) AMAX = B
              IF (B .LT. AMIN) AMIN = B
	   ENDDO

C          CHANGE POINTER, THEN CLOSE OLDEST FILE.
	   IF (NMOD .EQ. 1) GO TO 90
	   NOFFS1 = NB1
	   NOFFS2 = NA1
	   AV1    = AV2
	   NMOD   = 1
	   GO TO 95

90	   NOFFS1 = NA1
	   NOFFS2 = NB1
	   AV1    = AV2
	   NMOD   = 2
95	   CLOSE(LUNA(NMOD))
	ENDDO

	FMIN  = AMIN
	FMAX  = AMAX
	AVE   = AVG / (FLOAT(NSAM) * FLOAT(NUMT*2-1))
        FNALL = FLOAT(NSAM) * FLOAT(NUMT*2-1)
        DTOP  = AVS - AVE * AVE / FNALL
        IF (DTOP .LT. 0.0D0 .OR. FNALL .EQ. 1.0) THEN
C          SQRT OF NEGATIVE NUMBER OR 1 PIXEL IMAGE
           SIG = 0.0
        ELSE
           SIG = SQRT( DTOP / (FNALL - 1.0))
        ENDIF

 	IREC  = IRECSV
	CALL SETPRMB(LUNO, FMAX,FMIN, AVE,SIG)

	RETURN
	END

@


1.18
log
@GPL_2010
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.17
log
@rdprmb parameters
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.16
log
@GPL License fixed
@
text
@d4 4
a7 3
C  SLICE.F                  LONGFILENAMES JAN 89 ARDEAN LEITH
C                           USED OPFILE   NOV 00 ARDEAN LEITH
C                           USED OPFILEC  FEB 03 ARDEAN LEITH
d10 1
a10 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d51 1
a51 1
        PARAMETER     (NUMTOT = 256)
d54 1
a54 1
        COMMON/COMMUN/FILNAM,FILOUT,FILPAT
d59 1
d61 3
a63 2
        CHARACTER *81 FILNAM(NUMTOT),FILOUT,FILPAT
        CHARACTER *1  NULL
d138 1
d143 2
d147 4
a150 3
          AVG = AVG+B
          IF (B.GT.AMAX) AMAX=B
          IF (B.LT.AMIN) AMIN=B
d152 1
d158 3
a160 3
	CONS1 = 1./SQRT(2.)
	CONS2 = 2.+6./SQRT(2.)
	CONS3 = 2.+8./SQRT(2.)
d186 2
a187 2
	   DIFF1 = AVREF-AV1
	   DIFF2 = AVREF-AV2
d206 4
a209 3
	   AVG = AVG+B
	   IF (B .GT. AMAX) AMAX=B
	   IF (B .LT. AMIN) AMIN=B
d220 4
a223 3
              AVG = AVG+B
              IF (B.GT.AMAX) AMAX=B
              IF (B.LT.AMIN) AMIN=B
d232 5
a236 3
	   AVG = AVG+B
	   IF (B .GT. AMAX) AMAX=B
	   IF (B .LT. AMIN) AMIN=B
d241 4
a244 3
              AVG = AVG+B
              IF (B.GT.AMAX) AMAX=B
              IF (B.LT.AMIN) AMIN=B
d248 1
a248 1
	   IF (NMOD.EQ.1) GO TO 90
d262 14
a275 5
	FMIN = AMIN
	FMAX = AMAX
	AVE  = AVG/(FLOAT(NSAM)*FLOAT(NUMT*2-1))
 	IREC = IRECSV
	CALL SETPRM(LUNO,NSAM,NUMT*2-1,FMAX,FMIN,AVE,'R')
@


1.15
log
@HRI GPL License used
@
text
@a2 1
C++*************************************************************************
a7 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a31 1
C **************************************************************************
@


1.14
log
@opfilec
@
text
@d2 1
d8 1
d10 1
d12 24
d42 1
@


1.13
log
@nloop,iloop_removed
@
text
@d5 2
a6 1
C                           USED OPFILE NOV 00 ARDEAN LEITH
d78 2
a79 2
        CALL OPFILE(.FALSE.,FILNAM(1),LUNA(1),'O',IFORM,NSAM,NROW,NSL1,
     &                 MAXIM,' ',.TRUE.,IRTFLG)
d108 1
a108 1
        CALL OPFILE(.FALSE.,FILOUT,LUNO,'U',IFORM,NSAM,NROWT,1,
d141 1
a141 1
           CALL OPFILE(.FALSE.,FILNAM(J),LUNA(NMOD),'O',IFORM,
@


1.12
log
@removed openf (commented out line)
@
text
@d74 1
a74 1
	CALL RDPRMI(NREC,NDUM,NLOOP,ILOOP,'ROW NUMBER OF SLICE')
@


1.11
log
@opfile used, cosmetic, bug on nf fixed
@
text
@a75 1
C	CALL OPENF(FILNAM(1),LUNA(1),NSAM,NROW,'OLD',NF,NSL1)
a104 1
C	CALL OPENF(FILOUT,LUNO,NSAM,2*NUMT-1,'UNKNOWN',NF,1)
a138 1
C	   CALL OPENF(FILNAM(J),LUNA(NMOD),NSAM,NROW,'OLD',NF,NSL2)
@


1.10
log
@a
@
text
@d4 2
a5 1
C  SLICE.FOR                                    LONGFILENAMES JAN 89 al
a33 1
 
a34 1

d43 1
a43 1
        CHARACTER *1  NULL,F
a44 2
	DATA          F/'R'/
CNO_SLICE
a57 1
     
d63 2
a64 2
15           CALL ERRT(19,'SLICE',NE)
             RETURN
d75 9
a83 2
	CALL OPENF(FILNAM(1),LUNA(1),NSAM,NROW,'OLD',NF,NSL1)
	CALL NORM3(LUNA(1),NSAM,NROW,NSL1,FMAX,FMIN,AV1)
d87 2
a88 2
	NOFFS1 = 1+NSAM
	NOFFS2 = NOFFS1+3*NSAM
a90 4
	IF (NF .EQ. 1) THEN
          CALL ERRT(4,'SLICE',NE)
          RETURN
        ENDIF
d105 7
a111 4
	CALL OPENF(FILOUT,LUNO,NSAM,2*NUMT-1,'UNKNOWN',NF,1)
	IRECSV = IREC
	IF (NF .EQ. 1) THEN
	   CALL ERRT(4,'SLICE',NE)
d115 1
d118 1
a118 2

    	CALL REDLIN(LUNA(1),BUF(NA1),NSAM,NREC-1)
d141 5
a145 2
	   CALL OPENF(FILNAM(J),LUNA(NMOD),NSAM,NROW,'OLD',NF,NSL2)
  	   IF (NF.EQ.1 .OR. NF.EQ.2) THEN
a148 1
	      CALL ERRT(4,'SLICE',NE)
a166 2
C	   WRITE(4,7777)AVREF,AV1,AV2,DIFF1,DIFF2
C7777	   FORMAT(1X,5F6.3)
a202 1

a220 1

d239 1
a239 1
	CALL SETPRM(LUNO,NSAM,NUMT*2-1,FMAX,FMIN,AVE,F)
@


1.9
log
@CNO_SAVE
@
text
@d33 1
a33 1
CNO_SAVE 
@


1.8
log
@nosave
@
text
@d33 1
d35 1
d40 1
a40 1
     1	              AV,SIG,IHIST
d60 1
a60 1
     $      'FILE PREFIX OR TEMPLATE (EG. PIC****)', IRTFLG)
@


1.7
log
@norm3 used
@
text
@d45 1
a45 1

@


1.6
log
@*** empty log message ***
@
text
@d4 1
a4 2
C $$ SLICE.FOR
C                                         LONGFILENAMES JAN 89 al
d15 1
a15 1
C $$ SLICE:    SLICE THROUGH A STACK OF FILES
d20 1
a20 1
C      CALL SLICE(MAXDIM,LUN1,LUN2,LUNO)
d38 1
a38 1
     1	AV,SIG,IHIST
d58 1
a58 1
     $  'FILE PREFIX OR TEMPLATE (EG. PIC****)', IRTFLG)
d76 3
a78 3
	CALL RDPRMI(NREC,NDUM,NLOOP,ILOOP,'ROW NUMBER OF SLICE$')
	CALL OPENF(FILNAM(1),LUNA(1),NSAM,NROW,'OLD',NF,NDUM)
	CALL NORM(LUNA(1),NSAM,NROW,FMAX,FMIN,AV1)
d80 2
a81 3
C
C THE EXTRA NSAM COMES FROM LABEL INFORMATION IN OPEN.
C
d86 1
a86 1
	IF (NF.EQ.1) THEN
d92 2
a93 2
          CALL ERRT(7,'SLICE',NE)
          RETURN
d96 5
a100 5
C NA1 CORRESPONDS TO THE 1ST OF 3 LINES OF ONE FILE.
C NB1 CORRESPONDS TO THE 1ST OF 3 LINES OF THE SECOND FILE.
C NAOUT CORRESPONDS TO 1 LINE CONTAINING INTERPOLATION BETWEEN THE
C TWO FILES DESCRIBED ABOVE.
C
d106 9
a114 8
	IF(NF.NE.1)GO TO 35
	CALL ERRT(4,'SLICE',NE)
	CLOSE(LUNA(1))
	RETURN
C
C READ IN THE THREE LINES TO BE USED FOR INTERPOLATION.
C
35  	CALL REDLIN(LUNA(1),BUF(NA1),NSAM,NREC-1)
d116 1
a116 1
	B = BUF(NA1+NSAM)
d119 1
a119 1
	AVG = 0.
d121 1
a121 1
          B = BUF(NA1+NSAM+KL1-1)
d123 2
a124 2
          IF(B.GT.AMAX) AMAX=B
          IF(B.LT.AMIN) AMIN=B
d128 8
a135 11
C
C FOR EFFICIENCY, DO THE FOLLOWING CALCULATIONS OUTSIDE
C OF THE LOOP.
C
	CONS1=1./SQRT(2.)
	CONS2=2.+6./SQRT(2.)
	CONS3=2.+8./SQRT(2.)
C
C
C LOOP TO FORM AN INTERPOLATED LINE BETWEEN EACH OF THE NUMT LINES.
C
d137 94
a230 33
	CALL OPENF(FILNAM(J),LUNA(NMOD),NSAM,NROW,'OLD',NF,NDUM)
  	IF (NF.NE.1.AND.NF.NE.2) GO TO 55
	CALL ERRT(4,'SLICE',NE)
	IF(NMOD.EQ.1)GO TO 52
	CLOSE(LUNA(1))
52	CLOSE(LUNA(2))
	CLOSE(LUNO)
	RETURN
55	IF(IMAMI.EQ.0)CALL NORM(LUNA(NMOD),NSAM,NROW,FMAX,FMIN,AV)
	AV2 = AV
C
C READ IN THE THREE LINES TO BE USED FOR INTERPOLATION.
C
    	CALL REDLIN(LUNA(NMOD),BUF(NOFFS2),NSAM,NREC-1)
	CALL REDLIN(LUNA(NMOD),BUF(NOFFS2+NSAM),NSAM,NREC)
	CALL REDLIN(LUNA(NMOD),BUF(NOFFS2+NSAM2),NSAM,NREC+1)
C
C INTERPOLATE BETWEEN EACH OF NSAM POINTS.
C
C NORMALIZE THE FILES
C
	DIFF1 = AVREF-AV1
	DIFF2 = AVREF-AV2
	DIFF = (2*DIFF1)+(2*DIFF2)
C	WRITE(4,7777)AVREF,AV1,AV2,DIFF1,DIFF2
C7777	FORMAT(1X,5F6.3)
C
C NORMALIZE LINE STARTING AT NOFFS2+NSAM SO THAT WHEN WE COPY
C IT INTO THE OUTPUT FILE, IT IS NORMALIZED ALREADY.
C
	DO  K = 1,NSAM
          KN = NOFFS2+NSAM+K-1
          BUF(KN) = BUF(KN)+DIFF2
d232 1
a232 61
C
C FOR FIRST POINT,K=1, INTERPOLATE USING ONLY 3 POINTS.
C NORMALIZE THE VALUES OF NREC-1 AND NREC+1 ONLY.
C
	BUF(NAOUT) = (BUF(NOFFS1+NSAM)+BUF(NOFFS2+NSAM)+
     1    CONS1*(BUF(NOFFS1)+BUF(NOFFS1+NSAM+1)+BUF(NOFFS1+
     2    NSAM2)+BUF(NOFFS2)+BUF(NOFFS2+NSAM+1)+
     3    BUF(NOFFS2+NSAM2)+DIFF))/CONS2
	B = BUF(NAOUT)
	AVG = AVG+B
	IF(B.GT.AMAX) AMAX=B
	IF(B.LT.AMIN) AMIN=B
C
C LOOP TO INTERPOLATE FOR ALL BUT THE ENDPOINTS.
C
	DO  K = 2,NSAM-1
           BUF(NAOUT+K-1) = (BUF(NOFFS1+NSAM+K-1)+BUF(NOFFS2+NSAM+
     1     K-1)+CONS1*(BUF(NOFFS1+K-1)+BUF(NOFFS1+NSAM+K-2)+
     2     BUF(NOFFS1+NSAM+K)+BUF(NOFFS1+NSAM2+K-1)+
     3     BUF(NOFFS2+K-1)+BUF(NOFFS2+NSAM+K-2)+BUF(NOFFS2+
     4     NSAM+K)+BUF(NOFFS2+NSAM2+K-1)+DIFF))/CONS3
	   B = BUF(NAOUT+K-1)
           AVG = AVG+B
           IF(B.GT.AMAX) AMAX=B
           IF(B.LT.AMIN) AMIN=B
	ENDDO
C
C INTERPOLATE THE ENDPOINT.
C
	BUF(NAOUT+NSAM-1) = (BUF(NOFFS1+NSAM2-1)+BUF(NOFFS2+
     1   NSAM2-1)+CONS1*(BUF(NOFFS1+NSAM-1)+BUF(NOFFS1+
     2   NSAM2-2)+BUF(NOFFS1+NSAM3-1)+BUF(NOFFS2+NSAM-1)+
     3   BUF(NOFFS2+NSAM2-2)+BUF(NOFFS2+NSAM3-1)+DIFF))/CONS2
	B = BUF(NAOUT+NSAM-1)
	AVG = AVG+B
	IF(B.GT.AMAX) AMAX=B
	IF(B.LT.AMIN) AMIN=B
	CALL WRTLIN(LUNO,BUF(NAOUT),NSAM,J*2-2)
 	CALL WRTLIN(LUNO,BUF(NOFFS2+NSAM),NSAM,J*2-1)
	DO  KL2 = 1,NSAM
           B = BUF(NOFFS2+NSAM+KL2-1)
           AVG = AVG+B
           IF(B.GT.AMAX) AMAX=B
           IF(B.LT.AMIN) AMIN=B
	ENDDO
C
C CHANGE POINTER, THEN CLOSE OLDEST FILE.
C
	IF(NMOD.EQ.1)GO TO 90
	NOFFS1 = NB1
	NOFFS2 = NA1
	AV1 = AV2
	NMOD = 1
	GO TO 95

90	NOFFS1 = NA1
	NOFFS2 = NB1
	AV1 = AV2
	NMOD = 2
95	CLOSE(LUNA(NMOD))
	ENDDO
d235 1
a235 1
	AVE = AVG/(FLOAT(NSAM)*FLOAT(NUMT*2-1))
@


1.5
log
@*** empty log message ***
@
text
@d63 1
a63 1
200	DO 300 IFIL =1,NUMT
d69 1
a69 1
300     CONTINUE
d121 1
a121 1
	DO 40 KL1 = 1,NSAM
d126 1
a126 1
40	CONTINUE
d140 1
a140 1
	DO 100 J = 2,NUMT
d171 1
a171 1
	DO 60 K = 1,NSAM
d174 1
a174 1
60	CONTINUE
d190 1
a190 1
	DO 70 K = 2,NSAM-1
d200 1
a200 1
70	CONTINUE
d214 1
a214 1
	DO 80 KL2 = 1,NSAM
d219 1
a219 1
80	CONTINUE
d235 1
a235 1
100	CONTINUE
@


1.4
log
@delete an extra common in arg list
@
text
@d43 1
a43 1
        CHARACTER *1  NULL
@


1.3
log
@change filseq to filseqp call
@
text
@d59 1
a59 1
     $  'FILE PREFIX OR TEMPLATE (EG. PIC****)',,IRTFLG)
@


1.2
log
@branch to inner block, statement 15
@
text
@d58 3
a60 1
        CALL FILSEQ(FILPAT,NLET,NREC1,NUMTOT,NUMT,IRTFLG)
@


1.1
log
@Initial revision
@
text
@d70 5
a74 2
        IF (IRTFLG .NE. 0) GOTO 15

@
