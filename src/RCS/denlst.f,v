head	1.13;
access;
symbols
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.11
	pre_fftwrings:1.8
	pre_opfiles:1.8
	src:1.8
	best-code:1.8
	x-named-regs:1.8
	x:1.8
	v13-00:1.8
	pre_GPL:1.7
	prec_CA:1.7
	noindx:1.7
	Bproc:1.7
	oct21:1.7
	last77:1.5;
locks; strict;
comment	@c @;


1.13
date	2010.06.24.13.25.25;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2009.11.05.18.58.55;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2009.06.11.12.49.26;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2009.05.05.18.07.32;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2008.11.26.16.19.06;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.20.59.33;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.08.09.20.36.49;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	99.08.09.19.07.50;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.10.06.17.04.05;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.07.18.17.26.01;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	95.12.13.18.43.29;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.10.11.14.25.23;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.14;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.13
log
@GPL_2010
@
text
@C++*********************************************************************
C
C DENLST.F          REWRITE                      NOV. 08 ARDEAN LEITH
C                   ALLOW VERY SMALL VALUES      MAY  09 ARDEAN LEITH
C                   ADD FILE PROMPT              JUN. 09 ARDEAN LEITH
C                   REWRITE                      JUN. 09 ARDEAN LEITH
C                   FILE FILE TYPO               NOV  09 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   DENLST(LUNDOC,NBR,HIT,ICLASS,ID,IRTFLG)
C
C--*********************************************************************

         SUBROUTINE DENLST(LUNDOC,NBR,HIT,ICLASS,ID,IRTFLG)

         INCLUDE 'CMLIMIT.INC' 

         REAL                   :: HIT(NBR),DLIST(3)
         INTEGER                :: ICLASS(NBR), ID(NBR)
         CHARACTER (LEN=MAXNAM) :: DOCNAM
         LOGICAL                :: NEWFILE
         CHARACTER (LEN=1)      :: NULL

         NULL = CHAR(0)

C        CAN LIST THE DENDORGRAM SHAPE IN DOCUMENT FILE IF DESIRED
         CALL FILERD(DOCNAM,NLET,NULL,'DENDROGRAM DOC.',IRTFLG)

         IF ((NLET .EQ. 1 .AND. DOCNAM(1:1) .EQ. 'Y') .OR.
     &       (NLET .EQ. 1 .AND. DOCNAM(1:1) .EQ. 'y') .OR.
     &       (NLET .EQ. 3 .AND. DOCNAM(1:3) .EQ. 'YES') .OR.
     &       (NLET .EQ. 3 .AND. DOCNAM(1:3) .EQ. 'yes')  ) THEN
C           MUST ASK FOR FILE NAME AGAIN
            CALL FILERD(DOCNAM,NLET,NULL,'DENDROGRAM DOC.',IRTFLG)

         ELSEIF ((NLET .EQ. 1 .AND. DOCNAM(1:1).EQ. 'N') .OR.
     &           (NLET .EQ. 1 .AND. DOCNAM(1:1).EQ. 'n') .OR.
     &           (NLET .EQ. 2 .AND. DOCNAM(1:2).EQ. 'NO') .OR.
     &           (NLET .EQ. 2 .AND. DOCNAM(1:2).EQ. 'no') ) THEN
C           DO NOT WANT OUTPUT FILE
            IRTFLG = 1
         ENDIF
         IF (IRTFLG .NE. 0 .OR. DOCNAM(1:1) .EQ. '*') RETURN

         CALL OPENDOC(DOCNAM,.TRUE.,NLET,LUNDOC,LUNDOCT,.FALSE.,'',
     &               .FALSE.,.FALSE.,.TRUE.,NEWFILE,IRTFLG)
         IF (IRTFLG .NE. 0)RETURN

         CALL LUNDOCPUTCOM(LUNDOCT,
     &              'KEY,    CLASS,      HEIGHT        ID',IRTFLG)

         DO  I = 1,NBR
            DLIST(1) = ICLASS(I)
            DLIST(2) = HIT(I) 
            DLIST(3) = ID(I) 

C           STORE THIS LINE IN DOC FILE
            CALL LUNDOCWRTDAT(LUNDOCT,I,DLIST,3,IRTFLG)
	 ENDDO

         CLOSE(LUNDOCT)
         IRTFLG = 0

         END



@


1.12
log
@file file typo, doc header formatting
@
text
@d9 4
a12 3
C=* This file is part of:                                              * 
C=* SPIDER - Modular Image Processing System.   Author: J. FRANK       *
C=* Copyright 1985-2009  Health Research Inc.,                         *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
@


1.11
log
@rewrite of dendrogram
@
text
@d7 1
a7 1
C
d9 5
a13 7
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
C=*                                                                    *
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
d15 1
a15 1
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
d47 2
a48 1
         CALL FILERD(DOCNAM,NLET,NULL,'DENDROGRAM DOC. FILE',IRTFLG)
d54 2
a55 1
            CALL FILERD(DOCNAM,NLET,NULL,'DENDROGRAM DOC. FILE',IRTFLG)
d70 1
a70 1
     &              'KEY,    CLASS,     HEIGHT       ID',IRTFLG)
@


1.10
log
@allow small values
@
text
@d4 3
a6 1
C                   ALLOW VERY SMALL VALUES      MAY. 09 ARDEAN LEITH
d34 1
a34 1
C   DENLST(NDOC,VMIN,VMAX,NKLA,V,NUM,IRTFLG)
d38 1
a38 1
         SUBROUTINE DENLST(LUNDOC,VMIN,VMAX,NKLA,V,NUM,IRTFLG)
a40 1
         COMMON /UNITS/ LUNC,NIN,NOUT
d42 2
a43 2
         REAL                   :: V(NKLA),DLIST(3)
         INTEGER                :: NUM(NKLA)
d46 1
d48 15
a62 3
         IF (VMAX .EQ. VMIN) THEN
C           PREVENT DIVISION BY ZERO
            CALL ERRT(101, 'DENLST ABORTED TO AVOID DIVISION BY 0',NE)
a63 1
            RETURN
d65 1
d67 1
a67 2
         CALL OPENDOC(DOCNAM,.TRUE.,NLET,LUNDOC,LUNDOCT,.TRUE.,
     &               'DENDROGRAM OUTPUT DOC',
d71 2
a72 8
         CALL LUNDOCPUTCOM(LUNDOCT,'KEY, CLASS NUMBER,   HEIGHT',
     &                     IRTFLG)

C        NORMALIZATION FACTOR
         FACT = 1.0 / (VMAX - VMIN)

         DO  I = 1,NKLA
            DLIST(1) = NUM(I)
d74 4
a77 2
C           NORMALIZE THE V VALUES FROM 0...1.0
            DLIST(2) = (V(I) - VMIN) * FACT
a78 3
C           CONVERT TO ZERO IF ALMOST ZERO
C  removed 5/5/09   IF (DLIST(2) .LT. 0.04) DLIST(2) = 0.0
 
d80 1
a80 1
            CALL LUNDOCWRTDAT(LUNDOCT,I,DLIST,2,IRTFLG)
d87 3
@


1.9
log
@used lundoc..
@
text
@d4 1
a4 1
C
d8 1
a8 1
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d71 1
a71 1
            IF (DLIST(2) .LT. 0.04) DLIST(2) = 0.0
@


1.8
log
@GPL License fixed
@
text
@d3 2
a4 1
C $$ DENLST.FOR
d8 1
a8 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d32 1
a32 1
C
a34 4
C
C $$ DENLST.FOR
C
         SUBROUTINE DENLST(NDOC,VMIN,VMAX,NKLA,V,NUM,IRTFLG)
d36 3
d41 4
a44 1
         DIMENSION V(NKLA),DLIST(3),NUM(NKLA)
a45 1
C
d47 4
a50 4
C        PREVENT DIVISION BY ZERO
          WRITE(NOUT,*) 'DENLST ABORTED TO AVOID DIVISION BY 0'
          IRTFLG = 1
          RETURN
d53 9
d65 1
a65 2
          DLIST(1) = I
          DLIST(2) = NUM(I)
d67 2
a68 2
C        NORMALIZE THE V VALUES FROM 0...1.0
          DLIST(3) = (V(I) - VMIN) * FACT
d70 5
a74 2
C        STORE THIS LINE IN DOC FILE
          CALL SAVD(NDOC,DLIST,3,IRTFLG)
d76 2
a77 2
         CALL  SAVDC
         CLOSE(NDOC)
d79 1
@


1.7
log
@*** empty log message ***
@
text
@d1 1
a1 1
C++************************************************************************
d5 25
a29 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
C **************************************************************************
d33 1
a33 1
C--************************************************************************
@


1.6
log
@*** empty log message ***
@
text
@a26 3
         INTEGER      NUMT
         CHARACTER *4 CNUM
         EQUIVALENCE  (CNUM,NUMT)
d30 3
a32 3
         WRITE(NOUT,*) 'DENLST ABORTED TO AVOID DIVISION BY 0'
         IRTFLG = 1
         RETURN
d38 2
a40 12
C        FOR SOME REASON NUM IS STORED AS CHAR. IN INTEGER VARIABLES
         NUMT = NUM(I)
c this is temporary - the problem is for N>9999
         READ(CNUM,8000,ERR=21) N
8000     FORMAT(I4)
	GOTO 22
21	N=I
22	CONTINUE

         DLIST(1) = I
         DLIST(2) = N

d42 1
a42 1
         DLIST(3) = (V(I) - VMIN) * FACT
d45 1
a45 1
         CALL SAVD(NDOC,DLIST,3,IRTFLG)
@


1.5
log
@*** empty log message ***
@
text
@d30 1
a30 1
CNO_SAVE
@


1.4
log
@corrected dlist(3)
@
text
@d40 1
a40 1
         DO 10 I = 1,NKLA
d59 1
a59 1
10       CONTINUE
@


1.3
log
@temporary fix. I4 num variable creates a problem.
@
text
@d25 1
a25 1
         DIMENSION V(NKLA),DLIST(2),NUM(NKLA)
@


1.2
log
@nosave
@
text
@d44 2
a45 1
         READ(CNUM,8000) N
d47 3
@


1.1
log
@Initial revision
@
text
@d30 1
a30 1

@
