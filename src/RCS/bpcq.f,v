head	1.13;
access;
symbols
	pre_mrcs:1.13
	healthdept_2018:1.13
	pre_getangas:1.12
	GPL2010:1.12
	pre_GPL2010:1.11
	pre_var_equation:1.11
	pre_fftwrings:1.11
	pre_opfiles:1.11
	src:1.11
	best-code:1.11
	x-named-regs:1.11
	x:1.11
	v13-00:1.11
	pre_GPL:1.9
	prec_CA:1.9
	noindx:1.9
	Bproc:1.8
	oct21:1.6
	last77:1.5;
locks; strict;
comment	@c @;


1.13
date	2018.10.03.14.33.56;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.24.13.25.09;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.19.53.02;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.17.50.13;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.02.18.03.34;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.12.07.15.15.26;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.11.10.23.09.09;	author yuchen;	state Exp;
branches;
next	1.6;

1.6
date	99.06.03.20.50.46;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.10.01.21.06.42;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.02.07.18.52.20;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	95.10.03.13.01.46;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	95.02.01.22.05.59;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.07.11.19.34.03;	author pawel;	state Exp;
branches;
next	;


desc
@@


1.13
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C  BPCQ.F                                                                   *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  BPCQ(B,NNNN,NSAM,NROW,CUBE,NX3D,NY3D,NZC,DM)                        *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE BPCQ(B,NNNN,NSAM,NROW,CUBE,NX3D,NY3D,NZC,DM)

        DIMENSION    B(NNNN,NROW),CUBE(NX3D,NY3D,NZC)
        DIMENSION    DM(9)
        COMMON /PAR/ LDPX,LDPY,LDPZ,LDPNMX,LDPNMY,NZ1

c$omp   parallel do private(k,j,i,kz,iqx,iqy,dipx,dipy,xb,yb,xbb,ybb)
        DO K=1,NZC
           KZ=K-1+NZ1
           DO J=1,NY3D
              XBB = (1-LDPX)*DM(1)+(J-LDPY)*DM(2)+(KZ-LDPZ)*DM(3)
              YBB = (1-LDPX)*DM(4)+(J-LDPY)*DM(5)+(KZ-LDPZ)*DM(6)
              DO I=1,NX3D
                 XB  = (I-1)*DM(1)+XBB
                 IQX = IFIX(XB+FLOAT(LDPNMX))
                 IF (IQX.LT.1 .OR. IQX.GE.NSAM)  GOTO  101
                 YB   = (I-1)*DM(4)+YBB
                 IQY  = IFIX(YB+FLOAT(LDPNMY))
                 IF (IQY.LT.1 .OR. IQY.GE.NROW)  GOTO  101
                 DIPX = XB+LDPNMX-IQX
                 DIPY = YB+LDPNMY-IQY

C FASTER VERSION :
                 CUBE(I,J,K) = CUBE(I,J,K)
     &             +B(IQX,IQY)+DIPY*(B(IQX,IQY+1)-B(IQX,IQY))
     &             +DIPX*(B(IQX+1,IQY)-B(IQX,IQY)
     &             +DIPY*(B(IQX+1,IQY+1)-B(IQX+1,IQY)
     &             -B(IQX,IQY+1)+B(IQX,IQY)))

C ORIG VERSION :
C                CUBE(I,J,K) = CUBE(I,J,K)
C     &                 +(1.0-DIPX)*(1.0-DIPY)*B(MAP(IQX,IQY))
C     &                 +     DIPX *(1.0-DIPY)*B(MAP(IQX+1,IQY))
C     &                 +(1.0-DIPX)*     DIPY *B(MAP(IQX,IQY+1))
C     &                 +     DIPX *     DIPY *B(MAP(IQX+1,IQY+1))

101           CONTINUE
	      ENDDO
	   ENDDO
	ENDDO

        END
@


1.12
log
@GPL_2010
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.11
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.10
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.9
log
@finpat
@
text
@d8 24
@


1.8
log
@header
@
text
@d4 1
a5 1
C                                                                      *
d15 1
a15 1
C                                                                      *
a20 1
C        0         2         3         4         5         6         7 *
d24 28
a51 30
        SUBROUTINE  BPCQ(B,NNNN,NSAM,NROW,CUBE,NX3D,NY3D,NZC,DM)
        DIMENSION  B(NNNN,NROW),CUBE(NX3D,NY3D,NZC)
        DIMENSION  DM(9)
        COMMON /PAR/  LDPX,LDPY,LDPZ,LDPNMX,LDPNMY,NZ1

c$omp parallel do private(k,j,i,kz,iqx,iqy,dipx,dipy,xb,yb,xbb,ybb)
        DO    K=1,NZC
        KZ=K-1+NZ1
        DO    J=1,NY3D
        XBB=(1-LDPX)*DM(1)+(J-LDPY)*DM(2)+(KZ-LDPZ)*DM(3)
        YBB=(1-LDPX)*DM(4)+(J-LDPY)*DM(5)+(KZ-LDPZ)*DM(6)
        DO    I=1,NX3D
        XB=(I-1)*DM(1)+XBB
        IQX=IFIX(XB+FLOAT(LDPNMX))
        IF(IQX.LT.1 .OR. IQX.GE.NSAM)  GOTO  101
        YB=(I-1)*DM(4)+YBB
        IQY=IFIX(YB+FLOAT(LDPNMY))
        IF(IQY.LT.1 .OR. IQY.GE.NROW)  GOTO  101
        DIPX=XB+LDPNMX-IQX
        DIPY=YB+LDPNMY-IQY
        CUBE(I,J,K)=CUBE(I,J,K)
c     1                 +(1.0-DIPX)*(1.0-DIPY)*B(MAP(IQX,IQY))
c     2                 +     DIPX *(1.0-DIPY)*B(MAP(IQX+1,IQY))
c     3                 +(1.0-DIPX)*     DIPY *B(MAP(IQX,IQY+1))
c     4                 +     DIPX *     DIPY *B(MAP(IQX+1,IQY+1))
C faster version :
     1     +B(IQX,IQY)+DIPY*(B(IQX,IQY+1)-B(IQX,IQY))
     2     +DIPX*(B(IQX+1,IQY)-B(IQX,IQY)
     3          +DIPY*(B(IQX+1,IQY+1)-B(IQX+1,IQY)
     4          -B(IQX,IQY+1)+B(IQX,IQY)))
d53 10
a62 1
101     CONTINUE
d64 1
a64 5
	ENDDO
	ENDDO
c1       CONTINUE
C101    XB=XB+DM(1)
C1      YB=YB+DM(4)
@


1.7
log
@a
@
text
@d1 24
@


1.6
log
@OpenMP
@
text
@d5 1
a5 1
CNO_SAVE
@


1.5
log
@*** empty log message ***
@
text
@d6 1
a6 1
c$doacross local(k,j,i,kz,iqx,iqy,dipx,dipy,xb,yb,xbb,ybb)
@


1.4
log
@new version
@
text
@d7 1
a7 1
        DO  1  K=1,NZC
d9 1
a9 1
        DO  1  J=1,NY3D
d12 1
a12 1
        DO  1  I=1,NX3D
d33 4
a36 1
1       CONTINUE
@


1.3
log
@removed unused variables
@
text
@d1 4
a4 6

	SUBROUTINE  BPCQ(B,NSAM,NROW,CUBE,NX3D,NY3D,NZC,DM)

	DIMENSION  B(NSAM,NROW),CUBE(NX3D,NY3D,NZC)
 	DIMENSION  DM(9)
	COMMON /PAR/  LDPX,LDPY,LDPZ,LDPNMX,LDPNMY,NZ1
a5 1

d7 15
a21 17
	DO  1  K=1,NZC
	KZ=K-1+NZ1
	DO  1  J=1,NY3D
	XBB=(1-LDPX)*DM(1)+(J-LDPY)*DM(2)+(KZ-LDPZ)*DM(3)
	YBB=(1-LDPX)*DM(4)+(J-LDPY)*DM(5)+(KZ-LDPZ)*DM(6)
	DO  1  I=1,NX3D

	XB=(I-1)*DM(1)+XBB
	IQX=IFIX(XB+FLOAT(LDPNMX))
	IF(IQX.LT.1 .OR. IQX.GE.NSAM)  GOTO  101
	YB=(I-1)*DM(4)+YBB
	IQY=IFIX(YB+FLOAT(LDPNMY))
	IF(IQY.LT.1 .OR. IQY.GE.NROW)  GOTO  101
	DIPX=XB+LDPNMX-IQX
	DIPY=YB+LDPNMY-IQY

	CUBE(I,J,K)=CUBE(I,J,K)
d27 4
a30 4
     1	   +B(IQX,IQY)+DIPY*(B(IQX,IQY+1)-B(IQX,IQY))
     2	   +DIPX*(B(IQX+1,IQY)-B(IQX,IQY)
     3		+DIPY*(B(IQX+1,IQY+1)-B(IQX+1,IQY)
     4		-B(IQX,IQY+1)+B(IQX,IQY)))
d34 3
a36 3
C101	XB=XB+DM(1)
C1	YB=YB+DM(4)
	END
@


1.2
log
@nosave mp
@
text
@d1 1
d3 1
a4 1
	DOUBLE PRECISION  CPHI,SPHI,CTHE,STHE,CPSI,SPSI
d8 1
a8 1
C
d16 1
a16 1
C
d36 1
a36 1
C
@


1.1
log
@Initial revision
@
text
@d6 1
d8 1
d12 2
a13 2
	XB=(1-LDPX)*DM(1)+(J-LDPY)*DM(2)+(KZ-LDPZ)*DM(3)
	YB=(1-LDPX)*DM(4)+(J-LDPY)*DM(5)+(KZ-LDPZ)*DM(6)
d16 1
d19 1
d36 4
a39 2
101	XB=XB+DM(1)
1	YB=YB+DM(4)
@
