head	1.16;
access;
symbols
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.14
	pre_opfiles:1.14
	src:1.14
	best-code:1.14
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.12
	prec_CA:1.4
	noindx:1.4
	Bproc:1.3
	oct21:1.2
	last77:1.2;
locks; strict;
comment	@c @;


1.16
date	2010.06.24.13.25.49;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2009.06.22.14.47.39;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.20.18.41;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.18.11.39;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2004.05.05.19.54.47;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.03.18.21.18;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.23.17.17.16;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.14.20.35.17;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.10.20.02.16;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.09.19.14.33;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.08.16.23.14;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.16.16.43.42;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.12.18.04.08;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.11.10.23.09.20;	author yuchen;	state Exp;
branches;
next	1.2;

1.2
date	99.02.04.15.24.14;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.49.16;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.16
log
@GPL_2010
@
text
@
C **********************************************************************
C  GETCOO 
C                         REWRITTEN         SEP 2003 ARDEAN LEITH
C                         AVERAGE WEIGHTP   MAY 2004 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  GETCOOT(NFAC,NPIX,NUMIM,INUMBR,USE_PCA,
C          EVECTS,EVALS,WEIGHTI,WEIGHTP,SUMW,CO, BLU, BLW, 
C          LUNS, LUNI, LUNP)
C
C  PURPOSE: GET COORDINATES FOR NON-TRANSPOSED DATA
C
C  PARAMETERS:           
C	NFAC 	  NUMBER OF EIGENVECTORS REQUESTED              (INPUT)
C	NPIX      NUMBER OF PIXELS PER IMAGE                    (INPUT)
C       NUMIM	  NUMBER OF IMAGES                              (INPUT)
C       INUMBR()  IMAGE NUMBER LIST                             (INPUT)
C	USE_PCA   CORAN VS PCA FLAG                             (INPUT)
C       EVECTS()  EIGENVECTORS (COLUMN)  OF X'X AND             (INPUT)
C                 X(I,*)= BLU() J=1,JTOT W/ I=1,ITOT
C       EVALS()   EIGENVALUE ARRAY                           (INPUT/OUTPUT)
C	WEIGHTI() SUM OF PIXEL VALUES FOR THIS IMAGE            (INPUT)
C	WEIGHTP() SUM OF PIXEL VALUES AT THIS PIXEL             (INPUT)
C       CO()      WORKING ARRAY  
C	SUMW      SUM OF ALL THE PIXEL VALUES IN ALL IMAGES     (INPUT)
C       BLU()     WORKING ARRAY FOR INPUTS
C       BLW()     WORKING ARRAY FOR OUTPUTS
C	LUNS	  SEQUENTIAL IMAGE I/O UNIT ( FOR INPUT)        (INPUT)
C	LUNI      IMAGE COORDINATE I/O UNIT (FOR OUTPUT)        (INPUT)
C	LUNP      PIXEL COORDINATE I/O UNIT (FOR OUTPUT)        (INPUT)
C
C	S(,) HAS THE EIGENVECTORS (COLUMN)  OF X'X AND D() HAS THE
C       EIGENVALUES. X(I,*)= U() J=1,JTOT W/ I=1,ITOT
C
C  NOTE: FOR CORAN WEIGHTP IS RETURNED UNCHANGED
C        FOR CORAN WEIGHTI IS RETURNED DIVIDED BY SUMW
C        FOR CORAN _PIX    IS WEIGHTP  UNCHANGED
C        FOR CORAN _IMC    IS WEIGHTI  DIVIDED BY SUMW
C
C        FOR PCA   WEIGHTP IS RETURNED UNCHANGED
C        FOR PCA   WEIGHTI IS RETURNED UNCHANGED
C        FOR PCA   _PIX    IS WEIGHTP  UNCHANGED
C        FOR PCA   _IMC    IS WEIGHTI  UNCHANGED
C
C **********************************************************************
      
        SUBROUTINE GETCOO(NFAC,NPIX,NUMIM,INUMBR,USE_PCA,
     &             EVECTS,EVALS,WEIGHTI,WEIGHTP,SUMW,CO, BLU, BLW, 
     &             LUNS, LUNI, LUNP)

        REAL    :: EVECTS(NPIX,NPIX), EVALS(NPIX)
        REAL    :: CO(NPIX), BLU(NPIX), BLW(NFAC)
        INTEGER :: INUMBR(NUMIM)
        REAL    :: WEIGHTP(NPIX)
        REAL    :: WEIGHTI(NUMIM)
        LOGICAL :: USE_PCA

C       POSITION _SEQ, _IMC, & _PIX FILES
        CALL REW(LUNS,  1)

        REWIND(LUNI)
        READ(LUNI,*)  IDUM, IDUM, IDUM, IDUM, IDUM, IDUM

        REWIND(LUNP)
        READ(LUNP,*) IDUM, IDUM, IDUM, IDUM, IDUM
        
C       INITIALIZE ARRAYS  
        CO     =  0.0

        IF (USE_PCA) THEN
           DOR = 0.0
           PI  = 0.0       
        ELSE
C          WHOLE ARRAY
           WEIGHTP =  WEIGHTP / SUMW 
        ENDIF      
        ACT = 1.0

C       WRITE _IMC  DATA

        DO I  =  1, NUMIM
C         READ THE WHOLE IMAGE  IN BLU ARRAY FROM _SEQ FILE.
          READ(LUNS,IOSTAT=IERR) BLU,FIM

C         COORDINATES  TO ORIGIN FOR THE ROWS
C         [W] = [X -<X>].[EIGENVECTORS]   MATIX NOTATION. 
C         <XI> AVERAGE VALUE OF PIXELS = SUM (XIJ), J=1,NUMIM
 
          PIA = WEIGHTI(I)

          DO  K=1,NFAC                                                   
             BLW(K) = 0.0 

             IF (USE_PCA) THEN
                DO J=1,NPIX
                   BLW(K) = BLW(K) + (BLU(J) - WEIGHTP(J) / NUMIM) * 
     &                      EVECTS(J, K)
                ENDDO
             ELSE
                DO J=1,NPIX
                   BLW(K) = BLW(K) + (BLU(J) * EVECTS(J, K)) / PIA
                ENDDO
             ENDIF
          ENDDO

C         DISTANCES TO ORIGIN FOR THE ROWS                    
          DOR  =  0.0 
          FIM =  INUMBR(I)
          IF (USE_PCA) THEN
             DO J=1, NPIX
                DOR =  DOR + (BLU(J) - WEIGHTP(J))**2
             ENDDO

             WRITE(LUNI,90) (BLW(K),K=1,NFAC), PIA, DOR, FIM, ACT
          ELSE
             DO J=1,NPIX
                DOR = DOR + (BLU(J)/PIA - WEIGHTP(J))**2 / WEIGHTP(J)
             ENDDO

             PI = PIA / SUMW   
             DO J=1,NPIX
                CO(J) = CO(J) + (BLU(J)/(SUMW * WEIGHTP(J)) - PI)**2/PI
             ENDDO

             WRITE(LUNI,90) (BLW(K), K = 1, NFAC), PI, DOR, FIM, ACT
          ENDIF
        ENDDO

C       WRITE _PIX  DATA

C       COORDINATES  FOR THE COLS

        FDUM = 0.0   ! FOR COMPATIBILITY WITH IMC
        DO J=1,NPIX

          DO K=1,NFAC
C            IF IMAGES HAVE SOME CROSS-CORRELATION (I.E; (PART OF) ONE 
C	     IMAGE IS THE SAME AS (PART OF) ANOTHER), ONE FACTOR
C	     WILL BE 0 (SO A NEGATIVE EIGENVALUE MAY EXIST).

             EVALS(K) = MAX(EVALS(K), 1.0E - 9)
             BLW(K)   = EVECTS(J, K) * SQRT(EVALS(K))            
          ENDDO

C         WRITE  DATA TO PIX*** FILE 
          FPIX = J
          PIAT = WEIGHTP(J) / NPIX
          WRITE(LUNP,90) (BLW(K),K=1,NFAC),PIAT, CO(J), FPIX, FDUM 
90        FORMAT(10(1PG12.5,' '))
        ENDDO

        RETURN
        END
@


1.15
log
@_IMC or _PIX Line length bug
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@GPL License fixed
@
text
@d159 1
d174 1
a174 1
          WRITE(LUNP,90) (BLW(K),K=1,NFAC),PIAT, CO(J), FPIX 
@


1.13
log
@HRI GPL License used
@
text
@a2 1
C***************************************************************************
a7 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a71 1
C **************************************************************************
@


1.12
log
@PIAT
@
text
@d2 1
d10 24
d79 1
@


1.11
log
@AVERAGE WEIGHTP for _PIX
@
text
@a141 1
        PIAT = WEIGHTP(J) 
d143 1
a143 1
          PIAT = WEIGHTP(J) * SUMW / NPIX
d155 1
@


1.10
log
@file formats
@
text
@d4 3
a6 1
C                         REWRITTEN      SEP 2003 ARDEAN LEITH
d16 3
a18 2
C  GETCOOT(NFAC,NPIX,NUMIM,INUMBR,USE_PCA,EVECTS,EVALS,WEIGHTI,WEIGHTP,
C          SUMW,CO, BLU, W, LUNS, LUNI, LUNP)
d142 1
d144 1
d156 1
a156 1
          WRITE(LUNP,90) (BLW(K),K=1,NFAC),WEIGHTP(J), CO(J), FPIX 
@


1.9
log
@CA SR  bug
@
text
@d41 10
d61 1
a61 1
        REAL    :: WEIGHTI(NPIX)
d64 8
a71 2
        CALL REW(LUNI,  1)
        CALL REWF(LUNP, 1)
d83 4
a86 2
      
C       WRITE IMC***  DATA
d88 2
a89 2
C         READ THE WHOLE IMAGE  IN BLU ARRAY.
          READ(LUNS,REC=I,IOSTAT=IERR) BLU
d99 1
d120 1
a120 1
             WRITE(LUNI,90) (BLW(K),K=1,NFAC), WEIGHTP(J), DOR, FIM
d128 1
a128 2
                CO(J) = CO(J) + (BLU(J)/(SUMW * WEIGHTP(J)) - PI)**2 /
     &                  PI
d131 1
a131 1
             WRITE(LUNI,90) (BLW(K), K = 1, NFAC), PI, DOR, FIM
d135 1
a135 1
C       WRITE PIX***  DATA
@


1.8
log
@output format
@
text
@d14 2
a15 2
C  GETCOOT(NFAC,NPIX,NUMIM,INUMBR,USE_PCA, S,D,WEIGHTP,SUMW,CO, U, W, 
C          LUNS, LUNI, LUNP)
d20 17
a36 16
C	NFAC 	 NUMBER OF EIGENVECTORS REQUESTED              (INPUT)
C	NPIX     NUMBER OF PIXELS PER IMAGE                    (INPUT)
C       NUMIM	 NUMBER OF IMAGES                              (INPUT)
C       INUMBR() IMAGE NUMBER LIST                             (INPUT)
C	USE_PCA  CORAN VS PCA FLAG                             (INPUT)
C       S(,)     EIGENVECTORS (COLUMN)  OF X'X AND             (INPUT)
C                X(I,*)= BLU() J=1,JTOT W/ I=1,ITOT
C       D()      EIGENVALUES                                (INPUT/OUTPUT)
C       WEIGHTP() WEIGHT ARRAY                               (INPUT/OUTPUT)
C       CO()     WORKING ARRAY  
C	SUMW      SUM OF ALL THE PIXEL VALUES IN ALL IMAGES     (OUTPUT)
C       U()      WORKING ARRAY FOR INPUTS
C       W()      WORKING ARRAY FOR OUTPUTS
C	LUNS	 SEQUENTIAL IMAGE I/O UNIT ( FOR INPUT)        (INPUT)
C	LUNI     IMAGE COORDINATE I/O UNIT (FOR OUTPUT)        (INPUT)
C	LUNP     PIXEL COORDINATE I/O UNIT (FOR OUTPUT)        (INPUT)
d44 1
a44 1
     &             S,D,WEIGHTP,SUMW,CO, U, W, 
d47 3
a49 2
        REAL    :: S(NPIX,NPIX), D(NPIX), CO(NPIX), U(NPIX), W(NFAC)
        INTEGER :: INUMBR(NPIX)
d51 1
a53 1
        CALL REW(LUNS,  1)
d64 1
d70 2
a71 1
          READ(LUNS) (U(J),J=1,NPIX), PIA
d77 2
d80 1
a80 1
             W(K) = 0.0 
d83 2
a84 1
                   W(K) = W(K) + (U(J) -WEIGHTP(J) / NUMIM) * S(J, K)
d88 1
a88 1
                   W(K) = W(K) + (U(J) * S(J, K)) / (PIA)
d98 1
a98 1
                DOR =  DOR + (U(J) - WEIGHTP(J))**2
d101 1
a101 1
             WRITE(LUNI,90) (W(K),K=1,NFAC), WEIGHTP(J), DOR, FIM
d104 1
a104 1
                DOR = DOR + (U(J)/PIA - WEIGHTP(J))**2 / WEIGHTP(J)
d109 2
a110 1
                CO(J) = CO(J) + (U(J)/(SUMW * WEIGHTP(J)) - PI)**2 / PI
d113 1
a113 1
             WRITE(LUNI,90) (W(K), K = 1, NFAC), PI, DOR, FIM
a125 1
             D(K) = MAX(D(K), 1.0E - 9)
d127 2
a128 1
             W(K) = S(J, K) * SQRT(D(K))            
d133 1
a133 1
          WRITE(LUNP,90) (W(K),K=1,NFAC),WEIGHTP(J), CO(J), FPIX 
@


1.7
log
@terminology
@
text
@d94 1
a94 1
             WRITE(LUNI,91) (W(K),K=1,NFAC), WEIGHTP(J), DOR, FIM
d105 1
a105 1
            WRITE(LUNI,91) (W(K), K = 1, NFAC), PI, DOR, FIM
a106 1
91        FORMAT(100000(1PG12.5,' '))
d125 2
a126 2
          WRITE(LUNP,90) (W(K),K=1,NFAC), WEIGHTP(J), CO(J), FPIX 
90        FORMAT(100000(1PG12.5,' '))
@


1.6
log
@notes wrong
@
text
@d14 1
a14 1
C  GETCOOT(NFAC,NPIX,NUMIM,INUMBR,USE_PCA, S,D,WEIGHT,SOM,CO, U, W, 
d28 1
a28 1
C       WEIGHT() WEIGHT ARRAY                               (INPUT/OUTPUT)
d30 1
a30 1
C	SOM      SUM OF ALL THE PIXEL VALUES IN ALL IMAGES     (OUTPUT)
d43 1
a43 1
     &             S,D,WEIGHT,SOM,CO, U, W, 
d48 1
a48 1
        REAL    :: WEIGHT(NPIX)
d62 1
a62 1
           WEIGHT =  WEIGHT / SOM 
d77 1
a77 1
                   W(K) = W(K) + (U(J) -WEIGHT(J) / NUMIM) * S(J, K)
d91 1
a91 1
                DOR =  DOR + (U(J) - WEIGHT(J))**2
d94 1
a94 1
             WRITE(LUNI,91) (W(K),K=1,NFAC), WEIGHT(J), DOR, FIM
d97 1
a97 1
                DOR = DOR + (U(J)/PIA - WEIGHT(J))**2 / WEIGHT(J)
d100 1
a100 1
             PI = PIA / SOM   
d102 1
a102 1
                CO(J) = CO(J) + (U(J)/(SOM * WEIGHT(J)) - PI)**2 / PI
d126 1
a126 1
          WRITE(LUNP,90) (W(K),K=1,NFAC), WEIGHT(J), CO(J), FPIX 
@


1.5
log
@CA & CL rewrite
@
text
@d3 1
a3 1
C  GETCOOT
d14 2
a15 2
C  GETCOOT(NFAC,NPIX,NUMIM,INUMBR,USE_PCA,S,D,WEIGHT,SOM,CO,U,W, 
C                     LUNS, LUNI, LUNP)
@


1.4
log
@cosmetic
@
text
@d3 2
a4 1
C
d14 4
d19 17
a35 5
C	NFAC 	NUMBER OF EIGENVECTORS REQUESTED
C       NUMIM	NUMBER OF IMAGES
C	NPIX    NUMBER OF PIXELS PER IMAGE
C	LSAV	SEQUENTIAL IMAGE FILE (INPUT)
C	LIMA    IMAGE COORDINATE FILE (OUTPUT)
d42 15
a56 2
        SUBROUTINE GETCOO(NFAC,KB,NPIX,NUMIM,S,D,TRACE,PJ,SOM, 
     &             CO, U, W, LSAV, LIMA, LPIX, LUV, MADAR)
d58 8
a65 15
        DIMENSION S(NPIX,KB), D(NPIX), CO(NPIX), PJ(NPIX),
     &            U(NPIX), W(NFAC)

        INTEGER LUV(NUMIM), MADAR(NPIX)

        CALL REW(LSAV,  1)
        CALL REW(LIMA,  1)
        
        DO  J  =  1, NPIX
          CO(J)  =  0.0
        END DO
        DO  J  =  1, NPIX
          PJ(J)  =  PJ(J) / SOM       
        END DO
        
d67 1
a67 1
          READ(LSAV) (U(J),  J = 1, NPIX),  PIA,  PVAR,  INO
d71 1
a71 1
C         <Xi> AVERAGE VALUE OF PIXELS = SUM (Xij), j=1, numim
d73 12
a84 6
          DO  K  =  1, NFAC                                                   
             W(K)   =  0.0 
             DO J  =  1, NPIX
                W(K)   =  W(K)  +  (U(J) * S(J, K)) / (PIA)
             END DO
          END DO
d87 24
a110 14
          DOR    =  0.0   
          DO J  =  1, NPIX
            DOR  =  DOR  +  (U(J)/PIA - PJ(J))**2 / PJ(J)
          END DO
c         DOR = AMAX1(DOR, 1.0E - 10)

          PI  =  PIA / SOM   
          IF(LUV(I) .NE. 0) THEN
            DO  J  =  1, NPIX
              CO(J) = CO(J) + (U(J)/(SOM * PJ(J)) - PI)**2 / PI
            END DO
          END IF
          WRITE(LIMA) (W(K), K = 1, NFAC), PI, DOR, INO, LUV(I)
        END DO
d114 15
a128 14
        DO J  =  1, NPIX
          DO K  =  1, NFAC
C           IF THE IMAGES HAVE SOME CROSS-CORRELATION (I.E; (PART OF) ONE 
C	    IMAGE IS THE SAME AS (PART OF) ANOTHER), ONE OF THE FACTORS
C	    WILL BE 0 (SO A NEGATIVE EIGENVALUE MAY EXIST).
C
C1	    INCLUDE THE NEXT LINE IN THE WORKING VERSION OF THIS ROUTINE.
C2	    DELETE COMMENT 1 AND 2 (march 2002  !!!?? al)
c           D(K) = AMAX1(D(K), 1.0E - 9)
            W(K) = S(J, K) * SQRT(D(K))            
          END DO

          WRITE(LPIX) (W(K),K=1,NFAC), PJ(J), CO(J), INO, MADAR(J)
        END DO
@


1.3
log
@a
@
text
@d4 10
a13 9
C **************************************************************************
C *  AUTHOR :                                                              *
C *  COPYRIGHT (C)1987 , WADSWORTH CENTER FOR LABORATORIES AND             *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
C **************************************************************************
d25 1
a25 1
        SUBROUTINE GETCOO (NFAC,KB,NPIX,NUMIM,S,D,TRACE,PJ,SOM, 
a27 6

 

C       I DO NOT KNOW IF SAVE IS NEEDED FEB 99 al
        SAVE

d46 3
a48 4

C       COORDINATES  TO ORIGIN FOR THE ROWS
C       [W] = [X -<X>].[EIGENVECTORS]   MATIX NOTATION. 
C       <Xi> AVERAGE VALUE OF PIXELS = SUM (Xij), j=1, numim
d51 4
a54 4
            W(K)   =  0.0 
            DO J  =  1, NPIX
              W(K)   =  W(K)  +  (U(J) * S(J, K)) / (PIA)
            END DO
a57 1
 
d62 1
a62 1
c          DOR = AMAX1(DOR, 1.0E - 10)
d72 1
a72 1
C
d74 1
a74 1
C
d77 3
a79 4
C           if the images have some cross-correlation (i.e; (part of) one 
C	    image is the same as (part of) another), one of the factors
C	    will be 0 (so a negative eigenvalue may exist).
C	    
d81 2
a82 2
C1	    include the next line in the working version of this routine.
C2	    delete comment 1 and 2
d87 1
a87 2
c          WRITE(LPIX) (W(K),  K = 1, NFAC),  PJ(J),  CO(J), MADAR(J)
          WRITE(LPIX) (W(K), K = 1, NFAC), PJ(J), CO(J), INO, MADAR(J)
d89 1
@


1.2
log
@CNO_SAVE
@
text
@d28 1
a28 1
CNO_SAVE 
@


1.1
log
@Initial revision
@
text
@a1 1
C
a3 1
C
a12 5
C
        
        SUBROUTINE GETCOO (NFAC,KB,NPIX,NUMIM,S,D,TRACE,PJ,SOM, 
     &             CO, U, W, LSAV, LIMA, LPIX, LUV, MADAR)

d22 7
d30 3
a32 2
C        INTEGER  LSAV, LIMA, LPIX
C        INTEGER * 4  NFAC, KB, NPIX, NUMIM
d51 1
a51 1
C
d55 1
a55 1
C
d63 1
a63 3
C
C       DISTANCES TO ORIGIN FOR THE ROWS                    
C
@
