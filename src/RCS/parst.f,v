head	1.18;
access;
symbols
	healthdept_2018:1.18
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.13
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.8
	noindx:1.8
	Bproc:1.6
	oct21:1.4
	last77:1.4;
locks; strict;
comment	@c @;


1.18
date	2018.10.03.14.34.12;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2011.11.30.13.51.07;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.26.27;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2009.06.22.14.47.52;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2008.12.05.13.28.49;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2007.12.20.18.34.51;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.18.18.55.04;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.18.14.39.50;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.11.16.31.53;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.16.18.15.34;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.27.16.38.16;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.10.24.19.15.28;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.12.03.20.39.03;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.11.10.23.10.03;	author yuchen;	state Exp;
branches;
next	1.4;

1.4
date	99.02.04.17.28.52;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	97.10.10.18.57.51;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	97.10.02.13.41.04;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.03;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.18
log
@email_health_dept
@
text
@
C **********************************************************************
C                                                                      *
C  PARST                                                               *
C           COSMETIC OUTPUT CHANGES              DEC 2008 ARDEAN LEITH *
C           IMC FILE FDUM                        JUN 2009 ARDEAN LEITH *
C           KV                                   NOV 2011 ARDEAN LEITH *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2011  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *         
C PARST(N2DIM,KDIM,NFAC,NUMIM,KFAC,NBASE,NITER,NCLAS,           
C                  NKLA,KLAS,JW,U,CI,JV,G,KFIN,LUNI,LUNK,IDI) 
C                                                                      *         
C PURPOSE:       
C  CLUSTERING OF NUMIM OBJECTS CHARACTERIZED BY KFAC COORDINATES.               
C  NKLA CLUSTERS ARE DETERMINED.  THE NKLA-1 FIRST CLUSTERS                     
C  CONTAIN THE MOST STABLE OBJECTS AS OBTAINED FROM THE NBASE                   
C  BASIC PARTITIONS.  EACH BASIC PARTITION IS GENERATED BY NITER                
C  ITERATIONS AROUND NCLAS SEED-OBJECTS RANDOMLY DRAWN.  THE                    
C  SEED OBJECTS ARE REPLACED AFTER THE FIRST ITERATION BY THE                   
C  GRAVITY CENTERS OF THE GENERATED CLASSES.                           
C                                                                      *         
C  PARAMETERS:                                                         
C  INPUT  ..... DATA IN _IMC FILE ON: LUNI (FORMATTED)                          
C             NUMIM     = NUMBER OF OBJECTS TO BE CLUSTERED                     
C             KFAC      = NUMBER PF COORDINATES FOR THE OBJECTS                 
C             NBASE     = NUMBER OF BASIC PARTITIONS                            
C             NITER     = NUMBER OF ITERATIONS FOR EACH BASIC PARTITION         
C             NCLAS     = NUMBER OF CLASSES FOR EACH BASIC PARTITION            
C             NKLA      = FINAL NUMBER OF CLUSTERS THE FIRST NKLA-1             
C                         CONTAIN THE STABLES                                   
C             N2DIM     = MAJORANT DE  2*NCLAS                                  
C             KDIM      = MAJORANT DE  MAX (NUMIM , NCLAS ** NBASE)   
C                                                                      *         
C   OUTPUT   ..... NUMBER AND COORDINATES OF SEED-OBJECTS                       
C             KLAS(NUMIM)= CLASS NUMBER OF EACH OBJECT                          
C             KFIN       = NUMBER OF NON-EMPTY FINAL CLUSTERS                   
C             JV(KFIN)   = SIZES RANKED IN DESCENDING ORDER OF         
C                          STABLE CLUSTERS                                      
C             CI(KFAC)   = WORKING ARRAY                                        
C             JW(KDIM)   = WORKING ARRAY                                         
C             G(N2DIM,KFAC) = WORKING ARRAY                                      
C                                                                      *         
C  CALL TREE:   SCLASSI - NOYAU - PARST  - RETIR                       *
C                  |        |            - CLAST                       *
C                  |        |            - STABK - SHELK               *
C                  |        |                                          *
C                  |      NOYAU - DEUCL                                * 
C                  |      NOYAU - CHAVA                                *
C                  |      NOYAU - DENDRO - DENLST                      * 
C                  |      NOYAU - COUPE                                *
C                  |                                                   *
C               SCLASSI - RGRI                                         *    
C                                                                      *         
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

      SUBROUTINE PARST(N2DIM,KDIM,NFAC,NUMIM,KFAC,NBASE,NITER,NCLAS,           
     &                  NKLA,KLAS,JW,U,CI,JV,G,KFIN,LUNI,LUNK,IDI,KV)        

      INTEGER   :: KLAS(NUMIM)                              
      REAL      :: CI(NFAC), G(N2DIM,KFAC)                              
      REAL      :: U(KDIM)  
      INTEGER   :: JV(KDIM), JW(KDIM), IDI(NUMIM)
  
      INTEGER   :: KV(KFAC)  
      REAL      :: CI_KV(KFAC)  
                                   
      COMMON /UNITS/LUN,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT
                                                 
      NSTAB = NKLA - 1                                                          
      WRITE(NDAT,1000)  NUMIM,KFAC                                            
 1000 FORMAT ('  CLUSTERING BY AGGREGATION AROUND MOBILE CENTERS',/,       
     &        '  PARTITION OF:',I7,' OBJECTS CHARACTERIZED BY:',I4,             
     &        '  CARTESIAN COORD.',/)              

      IF (NBASE .GT. 1) WRITE(NDAT,2000) NKLA,NSTAB,NBASE,NITER,NCLAS          
 2000 FORMAT
     &  ('  PARTITION CONTAINS:' ,I5,' CLASSES',/,
     &   '  THE FIRST',I4,' CONTAIN MOST STABLE OBJECTS IN THE:', 
     &           I4,'  BASIC PARTITIONS',/,
     &   '  EACH PARTITION GENERATED BY:',I5,' ITERATIONS',                    
     &   ' AROUND:',I4,' RANDOMLY DRAWN SEED-OBJECTS',/)              

C     EXHAUSTIVE RANDOM DRAWING OF SEED-OBJECTS FOR NBASE PARTITION                                             
      KGERM = NCLAS*NBASE                                                       
      CALL RETIR(NUMIM,KLAS,KGERM,JV)                                     

C     COPY OVER ALL SEED-OBJECTS TO CLUSTER FILE ON: LUNK                                 
      CALL REWF(LUNI, 1)    ! REWIND THE _IMC FILE TO 2'ND RECORD                                                     
      REWIND LUNK           ! REWIND THE CLUSTER FILE TO OVERWRITE
                                                            
      DO I = 1,NUMIM
C        READ THE IMAGE'S FACTOR COORDINATES AND IMAGE NUMBER                                                       
         READ(LUNI,*) (CI(NF), NF=1,NFAC), FDUM,FDUM,FIM,FDUM

C        SAVE IMAGE NUMBER IN IDI
         IDI(I) = FIM

         DO KF = 1,KFAC
            KT        = KV(KF)
            CI_KV(KF) = CI(KT)
         ENDDO

        !write(6,*) 'parst:',I, IDI(I),(CI_KV(KF),KF=1,KFAC)      

C        IF THIS IS SEED-OBJECT IMAGE COPY COORDINATES TO CLUSTER FILE
         DO M = 1,KGERM                                                      
            IF (JV(M) .EQ. I) WRITE(LUNK) I,(CI_KV(KF),KF=1,KFAC)              
         ENDDO 
      ENDDO

C     BIG LOOP OVER THE BASIC PARTITIONS N=1,NBASE                        
      KG1 = 1                                                                 
      DO N = 1,NBASE                                                      
         KG2 = KG1 + NCLAS - 1 
                                                  
         WRITE(NDAT,3000)                                      
 3000    FORMAT('  CONSTRUCTION OF PARTITION WITH SEED-OBJECTS:')
                              
         WRITE(NDAT,3001) (JV(LL), LL=KG1,KG2)
 3001    FORMAT(4X,10I6)                              
 
C        SEED-OBJECTS TABLE FOR PARTITION NUMBER N                           

         REWIND LUNK          ! REWIND CLUSTER FILE
                                                           
         J = 0                                                                 
         DO L = 1,KGERM                                                      
            READ(LUNK) I ,(CI(KF), KF=1,KFAC) ! READ CLUSTER FILE
                                   
            DO LL = KG1,KG2                                                     
               IF (JV(LL) .EQ. I) THEN 
C                 SELECTED FOR SEED-OBJECT                               
                  J     = J + 1                                                             
                  DO KF = 1,KFAC                                                      
                     G(J,KF) = CI(KF)                                                           
                  ENDDO
               ENDIF
            ENDDO
	 ENDDO

C        GENERATION OF PARTITION N BY NITER ITERATIONS.                      

         DO NIT = 1,NITER                                                    
C           DETERMINATION OF CLASSES FROM COORDINATES.  THE DISTANCE              
C           BETWEEN OBJECT I AND THE NCLAS CENTERS IS CALCULATED.             
C           READS _IMC FILE ON: LUNI 
            CALL CLAST(N2DIM,NFAC,NUMIM,KFAC,NCLAS,G,JW,CI,U,KV,LUNI)                   
       	 ENDDO

         WRITE(NDAT,4001) NITER                                                    
 4001    FORMAT('  SIZE OF CLUSTERS AFTER: ',I4,' ITERATIONS')
                
         WRITE(NDAT,5000) (U(J), J=1,NCLAS)                                        
 5000    FORMAT(4X,10F6.0)
                                                  
         IF (N .LE. 1) THEN                                
            DO I = 1,NUMIM                                                      
               KLAS(I)= JW(I)                                                            
            ENDDO

            IF (NBASE .NE. 1) THEN
               KG1 = KG1 + NCLAS 
               CYCLE
            ENDIF
                                                      
            KFIN  = NCLAS                                                             
            NKLA  = NCLAS                                                             
            RETURN 
         ENDIF
                                                         
         DO I = 1,NUMIM                                                      
            KLAS(I)= KLAS(I) + (JW(I) - 1)*NCLAS**(N-1)                               
         ENDDO

C        END OF BASIC PARTITION NUMBER N                                     
         KG1 = KG1 + NCLAS                                                       
       ENDDO

C      GENERATION OF STABLE CLUSTERING WITH NKLA CLUSTERS   
       KTOT  = NCLAS ** NBASE   
                                                 
       CALL STABK(NUMIM,NKLA,KLAS,U,JV,JW,KTOT,KFIN,NIND)
                       
       PCT   = 100.0 * NIND / FLOAT(NUMIM)                                           
       WRITE(NDAT,6000)                                                    
 6000  FORMAT('  SIZE OF CLUSTERS FROM CROSSED-PARTITION ',/,                   
     &        '  FOLLOWED BY THEIR CUMULATIVE PERCENTAGES.')                                        

       WRITE(NDAT,7000) (JV(K),K=1,KFIN)                                       
 7000  FORMAT(1X,12I6)                                                    

       WRITE(NDAT,8000) (U(K),K=1,KFIN)                                        
 8000  FORMAT(2X,12F6.1)                                                  

       WRITE(NDAT,9000) NKLA,NIND,PCT                                         
 9000  FORMAT('  SIZE OF RESIDUAL CLUSTER (NUMBER',I4,')=',I6,
     &           '  PERCENTAGE=',F7.2,/)                 

        END                                                                    
@


1.17
log
@factor list (KV) added
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.16
log
@GPL_2010
@
text
@d3 5
a7 4
C                                                                              
C  PARST                                                                       
C           COSMETIC OUTPUT CHANGES            DEC 2008 ARDEAN LEITH                                                *
C           IMC FILE FDUM                      JUN 2009 ARDEAN LEITH
d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d29 1
a29 1
C                                                                               
d32 1
a32 1
C
d41 1
a41 1
C                                                                      
d53 1
a53 1
C                                                                               
d62 12
a73 5
C   
C  CALL TREE:   SCLASSI - NOYAU - PARST - RETIR    
C                                       - CLAST  
C                                       - STABK - SHELK  
C 
d78 1
a78 1
     &                  NKLA,KLAS,JW,U,CI,JV,G,KFIN,LUNI,LUNK,IDI)        
d80 7
a86 3
      DIMENSION KLAS(NUMIM),CI(NFAC),G(N2DIM,KFAC)                              
      DIMENSION U(KDIM), JV(KDIM), JW(KDIM)  
      DIMENSION IDI(NUMIM)  
d92 1
a92 1
 1000 FORMAT ('  CLUSTERING BY AGGREGATION AROUND MOBILE CENTERS',//,       
d94 1
a94 1
     &        '  CARTESIAN COORDINATES',/)              
d97 3
a99 2
 2000 FORMAT('  PARTITION CONTAINS:' ,I5,' CLASSES',/,
     &   '  THE',I4,' FIRST CONTAINS THE MOST STABLE OBJECTS IN THE:', 
d101 1
a101 1
     &   '  EACH PARTITION IS GENERATED BY:',I5,' ITERATIONS',                    
d114 1
a114 1
         READ(LUNI,*) (CI(KF), KF=1,NFAC), FDUM,FDUM,FIM,FDUM
d119 6
a124 1
C        write(6,*) I, IDI(I),(CI(KF),KF=1,KFAC)      
d128 2
a129 3
            IF (JV(M) .EQ. I) WRITE(LUNK) I,(CI(KF),KF=1,KFAC)              
        ENDDO 

d135 1
a135 1
         KG2   = KG1 + NCLAS - 1 
a141 1
         WRITE(NDAT,*)' '                                      
d149 1
a149 1
            READ(LUNK) I ,(CI(KF), KF=1,KFAC)   ! READ CLUSTER FILE
d168 1
a168 1
            CALL CLAST(N2DIM,NFAC,NUMIM,KFAC,NCLAS,G,JW,CI,U,LUNI)                   
d178 1
a178 1
            DO   I = 1,NUMIM                                                      
d181 6
a186 1
            IF (NBASE .NE. 1) GO TO  100                               
d197 1
a197 2

  100    KG1 = KG1 + NCLAS                                                       
d207 2
a208 2
 6000  FORMAT(/,'  SIZE OF THE CLUSTERS FROM THE CROSSED-PARTITION ',/,                   
     &          '  FOLLOWED BY THEIR CUMULATIVE PERCENTAGES.')                                        
d211 1
a211 1
 7000  FORMAT(/,1X,12I6)                                                    
d217 2
a218 2
 9000  FORMAT(/, '  SIZE OF RESIDUAL CLUSTER (NUMBER',I4,')=',I6,//,
     &           '  PERCENTAGE=',F9.2, /,2X,70('-')/)                 
a219 1
        RETURN                                                                 
@


1.15
log
@_IMC or _PIX Line length bug
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@refactor
@
text
@d5 2
a6 1
C               COSMETIC OUTPUT CHANGES          DEC 2008 ARDEAN LEITH                                                *
d9 1
a9 1
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d105 1
a105 1
         READ(LUNI,*) (CI(KF), KF=1,NFAC), FDUM,FDUM,FIM
@


1.13
log
@NFAC,KFAC,READ BUG & REFORMATTING
@
text
@d3 4
d8 1
a8 1
C=* Copyright (C) 1985-2007  Health Research Inc.                      *
d31 1
a31 1
C                                                                      *         
d36 35
a70 28
C  CLUSTERING OF NUMIM OBJECTS CHARACTERIZED BY KFAC COORDINATES.      *         
C  NKLA CLUSTERS ARE DETERMINED.  THE NKLA-1 FIRST CLUSTERS            *         
C  CONTAIN THE MOST STABLE OBJECTS AS OBTAINED FROM THE NBASE          *         
C  BASIC PARTITIONS.  EACH BASIC PARTITION IS GENERATED BY NITER       *         
C  ITERATIONS AROUND NCLAS SEED-OBJECTS RANDOMLY DRAWN.  THE           *         
C  SEED OBJECTS ARE REPLACED AFTER THE FIRST ITERATION BY THE          *         
C  GRAVITY CENTERS OF THE GENERATED CLASSES.                           *
C                                                                      *         
C     INPUT  ..... DATA IN _IMC FILE ON: LUNI (FORMATTED)                           *         
C  NUMIM     = NUMBER OF OBJECTS TO BE CLUSTERED                       *         
C  KFAC      = NUMBER PF COORDINATES FOR THE OBJECTS                   *         
C  NBASE     = NUMBER OF BASIC PARTITIONS                              *         
C  NITER     = NUMBER OF ITERATIONS FOR EACH BASIC PARTITION           *         
C  NCLAS     = NUMBER OF CLASSES FOR EACH BASIC PARTITION              *         
C  NKLA      = FINAL NUMBER OF CLUSTERS  ... LES NKLA-1 PREMIERES      *         
C              CONTIENDRONT  LES INDIVIDUS LES PLUS STABLES            *         
C  N2DIM     = MAJORANT DE  2*NCLAS                                    *         
C  KDIM      = MAJORANT DE  MAX (NUMIM , NCLAS ** NBASE)               *         
C     OUTPUT   ..... NUMBER AND COORDINATES OF SEED-OBJECTS            *         
C  KLAS(NUMIM)= CLASS NUMBER OF EACH OBJECT                            *         
C     AND, IF NBASE.GT.1                                               *         
C  KFIN       = NUMBER OF FINAL CLUSTERS NOT EMPTY                     *         
C  JV(KFIN)   = SIZES RANKED IN DESCENDING ORDER OF STABLE CLUSTERS    *         
C  CI(KFAC)   = WORKING ARRAY                                          *         
C  JW(KDIM)   = WORKING ARRAY                                          *         
C  G(N2DIM,KFAC) = WORKING ARRAY                                       *         
C                                                                      *
C*---------------------------------------------------------------------*         
d83 2
a84 2
 1000 FORMAT (2X,'CLUSTERING BY AGGREGATION AROUND MOBILE CENTERS',//,       
     &        2X,'PARTITION OF:' ,I7,' OBJECTS CHARACTERIZED BY:',I4,             
d88 5
a92 5
 2000 FORMAT(2X,'PARTITION CONTAINS:' ,I5,' CLASSES',/,
     &   2X,'THE',I4,' FIRST CONTAINS THE MOST STABLE OBJECTS IN THE:', 
     &            I4,'  BASIC PARTITIONS',/,
     &   2X,'EACH PARTITION IS GENERATED BY:',I5,' ITERATIONS',                    
     &      ' AROUND:',I4,' SEED-OBJECTS DRAWN AT RANDOM',/)              
d119 1
a119 1
      KG1   = 1                                                                 
d124 2
a125 1
 3000    FORMAT(2X,'CONSTRUCTION OF PARTITION WITH SEED-OBJECTS:')                              
d159 1
a159 1
 4001    FORMAT(2X,'SIZE OF CLUSTERS AFTER: ',I4,' ITERATIONS')
a162 1
         WRITE(NDAT,*) ' '                                                    
d183 3
a185 2
C      GENERATION OF THE STABLE CLUSTERING WITH NKLA CLUSTERS              
       KTOT  = NCLAS ** NBASE                                                    
d190 2
a191 2
 6000  FORMAT(/,2X,'SIZE OF THE CLUSTERS FROM THE CROSSED-PARTITION ',                   
     &     'FOLLOWED BY THEIR CUMULATIVE PERCENTAGES.')                                        
d200 2
a201 3
 9000  FORMAT(/,2X,'SIZE OF RESIDUAL CLUSTER (NUMBER',I4,')=',I6,
     &        //,2X,'PERCENTAGE=',F9.2,
     &         /,2X,70('-')/)                 
@


1.12
log
@GPL
@
text
@d4 1
a4 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d27 33
a59 29
C*--------------------------------------------------------------------*         
C*                                                                    *         
C     CLUSTERING OF NUMIM OBJECTS CHARACTERIZED BY KFAC COORDINATES.  *         
C NKLA CLUSTERS ARE DETERMINED.  THE NKLA-1 FIRST CLUSTERS            *         
C CONTAIN THE MOST STABLE OBJECTS AS OBTAINED FROM THE NBASE          *         
C BASIC PARTITIONS.  EACH BASIC PARTITION IS GENERATED BY NITER       *         
C ITERATIONS AROUND NCLAS SEED-OBJECTS RANDOMLY DRAWN.  THE           *         
C SEED OBJECTS ARE REPLACED AFTER THE FIRST ITERATION BY THE          *         
C GRAVITY CENTERS OF THE GENERATED CLASSES.                           *         
C    INPUT  ..... DATA IN (LUNI) UNFORMATTED                          *         
C NUMIM     = NUMBER OF OBJECTS TO BE CLUSTERED                       *         
C KFAC      = NUMBER PF COORDINATES FOR THE OBJECTS                   *         
C NBASE     = NUMBER OF BASIC PARTITIONS                              *         
C NITER     = NUMBER OF ITERATIONS FOR EACH BASIC PARTITION           *         
C NCLAS     = NUMBER OF CLASSES FOR EACH BASIC PARTITION              *         
C NKLA      = FINAL NUMBER OF CLUSTERS  ... LES NKLA-1 PREMIERES      *         
C             CONTIENDRONT  LES INDIVIDUS LES PLUS STABLES            *         
C N2DIM     = MAJORANT DE  2*NCLAS                                    *         
C KDIM      = MAJORANT DE  MAX (NUMIM , NCLAS ** NBASE)               *         
C    OUTPUT   ..... NUMBER AND COORDINATES OF SEED-OBJECTS            *         
C KLAS(NUMIM)= CLASS NUMBER OF EACH OBJECT                            *         
C    AND, IF NBASE.GT.1                                               *         
C KFIN       = NUMBER OF FINAL CLUSTERS NOT EMPTY                     *         
C JV(KFIN)   = SIZES RANKED IN DESCENDING ORDER OF THE                *         
C              STABLE CLUSTERS                                        *         
C     WORKING ARRAYS  CI(KFAC),JW(KDIM),G(N2DIM,KFAC)                 *         
C PROGRAMS CALLED SEN3A, SHELK, RETIR, OUVRE, CLAST, STABK.           *         
C*                                                                    *         
C*--------------------------------------------------------------------*         
d71 4
a74 4
      WRITE(NDAT,1000)  NUMIM , KFAC                                            
 1000 FORMAT (6X,'CLUSTERING BY AGGREGATION AROUND MOBILE CENTERS',///,       
     &        6X,'PARTITION OF:' ,I7,' OBJECTS CHARACTERIZED'  ,             
     &        ' BY:' ,I5,'  CARTESIAN COORDINATES',//)              
d77 5
a81 5
 2000 FORMAT(6X,'PARTITION CONTAINS:' ,I5,' CLASSES',/,
     &   6X,'THE',I5,' FIRST CONTAINS THE MOST STABLE OBJECTS IN THE', 
     &            I5,'  BASIC PARTITIONS',/,
     &   6X,'EACH PARTITION IS GENERATED BY',I5,' ITERATIONS',                    
     &      ' AROUND',I5,' SEED-OBJECTS DRAWN AT RANDOM',/)              
d83 11
a93 2
C     EXHAUSTIVE RANDOM DRAWING OF THE SEED-OBJECTS                       
C     FOR THE NBASE PARTITION                                             
d95 4
a98 2
      KGERM = NCLAS*NBASE                                                       
      CALL RETIR(NUMIM, KLAS, KGERM, JV)                                     
d100 1
a100 6
C     COPY OVER ALL SEED-OBJECTS ON LUNK                                 
      CALL REWF(LUNI, 1)                                                         
      REWIND LUNK                                                              
      DO I = 1,NUMIM                                                      
         READ(LUNI,*) (CI(KF), KF=1,KFAC), FDUM,FDUM,FIM
         IDI(I) = FIM                                         
d102 3
a104 2
            IF (JV(M) .EQ. I) WRITE(LUNK) I, (CI(KF),KF=1,KFAC)              
        ENDDO      
d109 3
a111 2
      DO 100 N = 1,NBASE                                                      
         KG2   = KG1 + NCLAS - 1                                                   
d113 4
a116 4
 3000    FORMAT(/,6X,'CONSTRUCTION OF PARTITION WITH SEED-OBJECTS:')                              

         WRITE(NDAT,3001)  (JV(LL), LL=KG1,KG2)
 3001    FORMAT(/' ',6X,10I6)                              
a117 2
         J = 0                                                                 

d120 15
a134 10
         REWIND LUNK                                                              
         DO   L = 1,KGERM                                                      
            READ(LUNK) I , (CI(KF), KF=1,KFAC)                                     
            DO 40  LL = KG1,KG2                                                     
               IF (JV(LL) .NE. I) GO TO  40                                
               J     = J + 1                                                             
               DO KF = 1,KFAC                                                      
                  G(J,KF)= CI(KF)                                                           
               ENDDO
   40       CONTINUE                                                                
d138 1
a138 1
C        UPDATE CENTERS AND CLASS NUMBERS OF OBJECTS.                        
d140 3
d144 1
a144 1
       	ENDDO
d146 2
a147 2
        WRITE(NDAT,4001) NITER                                                    
 4001   FORMAT(6X,'SIZE OF CLUSTERS AFTER: ',I4,' ITERATIONS')
d149 3
a151 2
        WRITE(NDAT,5000) (U(J), J=1,NCLAS)                                        
 5000   FORMAT(6X,10F6.0 )
d153 22
a174 21
        IF (N .GT. 1) GO TO  80                                
        DO   I = 1,NUMIM                                                      
           KLAS(I)= JW(I)                                                            
        ENDDO
        IF (NBASE .NE. 1) GO TO  100                               
        KFIN  = NCLAS                                                             
        NKLA  = NCLAS                                                             
        RETURN 
                                                                
   80   CONTINUE                                                                
        DOI = 1,NUMIM                                                      
           KLAS(I)= KLAS(I) + (JW(I) - 1)*NCLAS**(N-1)                               
      	ENDDO

C       END OF BASIC PARTITION NUMBER N                                     

  100   KG1= KG1 + NCLAS                                                       

C       GENERATION OF THE STABLE CLUSTERING WITH NKLA CLUSTERS              
        KTOT  = NCLAS ** NBASE                                                    
        CALL STABK(NUMIM,NKLA,KLAS,U,JV,JW,KTOT,KFIN,NIND)
d176 15
a190 19
        PCT   = 100.0*NIND/FLOAT(NUMIM)                                           
        WRITE(NDAT,6000)  KTOT                                                    
 6000   FORMAT (/,6X,'SIZE OF THE:',I8,' CLUSTERS FROM THE',                   
     &               ' CROSSED-PARTITION',/,
     &            6X,'FOLLOWED BY THE CUMULATIVE PERCENTAGES.')                                        

        WRITE(NDAT,7000) (JV(K),K=1,KFIN)                                       
 7000   FORMAT(//,' ',12I6)                                                    

        WRITE(NDAT,8000) (U(K),K=1,KFIN)                                        
 8000   FORMAT(//,' ',12F6.1)                                                  

        WRITE(NDAT,9000)  NKLA,NIND,PCT                                         
 9000   FORMAT(//,6X,'SIZE OF RESIDUAL CLUSTER (NUMBER',I4,')=',I6,///,
     &            6X,'PERCENTAGE=',F9.2,/,
     &            ' ',72('-')/)                 

         RETURN                                                                 
         END                                                                    
d192 2
@


1.11
log
@GPL License added
@
text
@d1 175
@


1.10
log
@formatting
@
text
@a0 149
C*--------------------------------------------------------------------*         
C*                                                                    *         
C     CLUSTERING OF NUMIM OBJECTS CHARACTERIZED BY KFAC COORDINATES.  *         
C NKLA CLUSTERS ARE DETERMINED.  THE NKLA-1 FIRST CLUSTERS            *         
C CONTAIN THE MOST STABLE OBJECTS AS OBTAINED FROM THE NBASE          *         
C BASIC PARTITIONS.  EACH BASIC PARTITION IS GENERATED BY NITER       *         
C ITERATIONS AROUND NCLAS SEED-OBJECTS RANDOMLY DRAWN.  THE           *         
C SEED OBJECTS ARE REPLACED AFTER THE FIRST ITERATION BY THE          *         
C GRAVITY CENTERS OF THE GENERATED CLASSES.                           *         
C    INPUT  ..... DATA IN (LUNI) UNFORMATTED                          *         
C NUMIM     = NUMBER OF OBJECTS TO BE CLUSTERED                       *         
C KFAC      = NUMBER PF COORDINATES FOR THE OBJECTS                   *         
C NBASE     = NUMBER OF BASIC PARTITIONS                              *         
C NITER     = NUMBER OF ITERATIONS FOR EACH BASIC PARTITION           *         
C NCLAS     = NUMBER OF CLASSES FOR EACH BASIC PARTITION              *         
C NKLA      = FINAL NUMBER OF CLUSTERS  ... LES NKLA-1 PREMIERES      *         
C             CONTIENDRONT  LES INDIVIDUS LES PLUS STABLES            *         
C N2DIM     = MAJORANT DE  2*NCLAS                                    *         
C KDIM      = MAJORANT DE  MAX (NUMIM , NCLAS ** NBASE)               *         
C    OUTPUT   ..... NUMBER AND COORDINATES OF SEED-OBJECTS            *         
C KLAS(NUMIM)= CLASS NUMBER OF EACH OBJECT                            *         
C    AND, IF NBASE.GT.1                                               *         
C KFIN       = NUMBER OF FINAL CLUSTERS NOT EMPTY                     *         
C JV(KFIN)   = SIZES RANKED IN DESCENDING ORDER OF THE                *         
C              STABLE CLUSTERS                                        *         
C     WORKING ARRAYS  CI(KFAC),JW(KDIM),G(N2DIM,KFAC)                 *         
C PROGRAMS CALLED SEN3A, SHELK, RETIR, OUVRE, CLAST, STABK.           *         
C*                                                                    *         
C*--------------------------------------------------------------------*         

      SUBROUTINE PARST(N2DIM,KDIM,NFAC,NUMIM,KFAC,NBASE,NITER,NCLAS,           
     &                  NKLA,KLAS,JW,U,CI,JV,G,KFIN,LUNI,LUNK,IDI)        

      DIMENSION KLAS(NUMIM),CI(NFAC),G(N2DIM,KFAC)                              
      DIMENSION U(KDIM), JV(KDIM), JW(KDIM)  
      DIMENSION IDI(NUMIM)  
                                   
      COMMON /UNITS/LUN,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT
                                                 
      NSTAB = NKLA - 1                                                          
      WRITE(NDAT,1000)  NUMIM , KFAC                                            
 1000 FORMAT (6X,'CLUSTERING BY AGGREGATION AROUND MOBILE CENTERS',///,       
     &        6X,'PARTITION OF:' ,I7,' OBJECTS CHARACTERIZED'  ,             
     &        ' BY:' ,I5,'  CARTESIAN COORDINATES',//)              

      IF (NBASE .GT. 1) WRITE(NDAT,2000) NKLA,NSTAB,NBASE,NITER,NCLAS          
 2000 FORMAT(6X,'PARTITION CONTAINS:' ,I5,' CLASSES',/,
     &   6X,'THE',I5,' FIRST CONTAINS THE MOST STABLE OBJECTS IN THE', 
     &            I5,'  BASIC PARTITIONS',/,
     &   6X,'EACH PARTITION IS GENERATED BY',I5,' ITERATIONS',                    
     &      ' AROUND',I5,' SEED-OBJECTS DRAWN AT RANDOM',/)              

C     EXHAUSTIVE RANDOM DRAWING OF THE SEED-OBJECTS                       
C     FOR THE NBASE PARTITION                                             

      KGERM = NCLAS*NBASE                                                       
      CALL RETIR(NUMIM, KLAS, KGERM, JV)                                     

C     COPY OVER ALL SEED-OBJECTS ON LUNK                                 
      CALL REWF(LUNI, 1)                                                         
      REWIND LUNK                                                              
      DO I = 1,NUMIM                                                      
         READ(LUNI,*) (CI(KF), KF=1,KFAC), FDUM,FDUM,FIM
         IDI(I) = FIM                                         
         DO M = 1,KGERM                                                      
            IF (JV(M) .EQ. I) WRITE(LUNK) I, (CI(KF),KF=1,KFAC)              
        ENDDO      
      ENDDO

C     BIG LOOP OVER THE BASIC PARTITIONS N=1,NBASE                        
      KG1   = 1                                                                 
      DO 100 N = 1,NBASE                                                      
         KG2   = KG1 + NCLAS - 1                                                   
         WRITE(NDAT,3000)                                      
 3000    FORMAT(/,6X,'CONSTRUCTION OF PARTITION WITH SEED-OBJECTS:')                              

         WRITE(NDAT,3001)  (JV(LL), LL=KG1,KG2)
 3001    FORMAT(/' ',6X,10I6)                              
 
         J = 0                                                                 

C        SEED-OBJECTS TABLE FOR PARTITION NUMBER N                           

         REWIND LUNK                                                              
         DO   L = 1,KGERM                                                      
            READ(LUNK) I , (CI(KF), KF=1,KFAC)                                     
            DO 40  LL = KG1,KG2                                                     
               IF (JV(LL) .NE. I) GO TO  40                                
               J     = J + 1                                                             
               DO KF = 1,KFAC                                                      
                  G(J,KF)= CI(KF)                                                           
               ENDDO
   40       CONTINUE                                                                
	 ENDDO

C        GENERATION OF PARTITION N BY NITER ITERATIONS.                      
C        UPDATE CENTERS AND CLASS NUMBERS OF OBJECTS.                        
         DO NIT = 1,NITER                                                    
            CALL CLAST(N2DIM,NFAC,NUMIM,KFAC,NCLAS,G,JW,CI,U,LUNI)                   
       	ENDDO

        WRITE(NDAT,4001) NITER                                                    
 4001   FORMAT(6X,'SIZE OF CLUSTERS AFTER: ',I4,' ITERATIONS')
                
        WRITE(NDAT,5000) (U(J), J=1,NCLAS)                                        
 5000   FORMAT(6X,10F6.0 )
                                                  
        IF (N .GT. 1) GO TO  80                                
        DO   I = 1,NUMIM                                                      
           KLAS(I)= JW(I)                                                            
        ENDDO
        IF (NBASE .NE. 1) GO TO  100                               
        KFIN  = NCLAS                                                             
        NKLA  = NCLAS                                                             
        RETURN 
                                                                
   80   CONTINUE                                                                
        DOI = 1,NUMIM                                                      
           KLAS(I)= KLAS(I) + (JW(I) - 1)*NCLAS**(N-1)                               
      	ENDDO

C       END OF BASIC PARTITION NUMBER N                                     

  100   KG1= KG1 + NCLAS                                                       

C       GENERATION OF THE STABLE CLUSTERING WITH NKLA CLUSTERS              
        KTOT  = NCLAS ** NBASE                                                    
        CALL STABK(NUMIM,NKLA,KLAS,U,JV,JW,KTOT,KFIN,NIND)
                       
        PCT   = 100.0*NIND/FLOAT(NUMIM)                                           
        WRITE(NDAT,6000)  KTOT                                                    
 6000   FORMAT (/,6X,'SIZE OF THE:',I8,' CLUSTERS FROM THE',                   
     &               ' CROSSED-PARTITION',/,
     &            6X,'FOLLOWED BY THE CUMULATIVE PERCENTAGES.')                                        

        WRITE(NDAT,7000) (JV(K),K=1,KFIN)                                       
 7000   FORMAT(//,' ',12I6)                                                    

        WRITE(NDAT,8000) (U(K),K=1,KFIN)                                        
 8000   FORMAT(//,' ',12F6.1)                                                  

        WRITE(NDAT,9000)  NKLA,NIND,PCT                                         
 9000   FORMAT(//,6X,'SIZE OF RESIDUAL CLUSTER (NUMBER',I4,')=',I6,///,
     &            6X,'PERCENTAGE=',F9.2,/,
     &            ' ',72('-')/)                 

         RETURN                                                                 
         END                                                                    

@


1.9
log
@CA rewrite
@
text
@d132 1
a132 1
 6000   FORMAT (/,6X,'SIZE OF THE:',I6,' CLUSTERS FROM THE',                   
@


1.8
log
@improved
formatting
@
text
@a0 14
C *NAME* = PARST.F                     31-JAN-86      13:23:09                  
C----------------------------------=*=----------------------------------        
C           COPYRIGHT 1986 - JEAN-PIERRE BRETAUDIERE                            
C THE UNIVERSITY OF TEXAS HEALTH SCIENCE CENTER AT HOUSTON                      
C MEDICAL SCHOOL - DEPARTMENT OF PATHOLOGY AND LABORATORY MEDICINE              
C P.O. BOX 20708, HOUSTON, TX 77225.                                            
C DISCLAIMER: NO GUARANTEES OF PERFORMANCE ACCOMPANY THIS SOFTWARE,             
C NOR IS ANY RESPONSIBILITY ASSUMED ON THE PART OF THE AUTHOR                   
C OR THE INSTITUTION.  ALL THE SOFTWARE HAS BEEN TESTED EXTENSIVELY             
C AND EVERY EFFORT HAS BEEN MADE TO INSURE ITS RELIABILITY.                     
C THE FOLLOWING SOFTWARE MAY NOT BE COMMUNICATED TO A THIRD PARTY               
C UNDER ANY FORM WITHOUT WRITTEN PERMISSION OF THE AUTHOR.                      
C PLEASE REPORT ANY BUG(S) TO JPB AT (713) 792 52 00.                           
C OR THRU ARPANET AT  ......!rice!ots!ut-path!suprim                            
d3 1
a3 1
C     CLUSTERING OF ICARD OBJECTS CHARACTERIZED BY KFAC COORDINATES.  *         
d10 2
a11 2
C    INPUT  ..... DATA IN (NGUS) UNFORMATTED                          *         
C ICARD     = NUMBER OF OBJECTS TO BE CLUSTERED                       *         
d19 1
a19 1
C KDIM      = MAJORANT DE  MAX (ICARD , NCLAS ** NBASE)               *         
d21 1
a21 1
C KLAS(ICARD)= CLASS NUMBER OF EACH OBJECT                            *         
a28 2
C==01.14.81                                                           *         
C==01.12.81                                                           *         
d31 2
a32 2
      SUBROUTINE PARST(N2DIM,KDIM,NFAC,ICARD,KFAC,NBASE,NITER,NCLAS,           
     &                  NKLA,KLAS,JW,U,CI,JV, G, KFIN ,NGUS,NBAND)        
d34 4
a37 2
      DIMENSION KLAS(ICARD),CI(NFAC),G(N2DIM,KFAC)                              
      DIMENSION U(KDIM), JV(KDIM), JW(KDIM)                                     
d41 1
a41 1
      WRITE(NDAT,1000)  ICARD , KFAC                                            
d44 1
a44 2
     &        ' BY:' ,I5,'  CARTESIAN COORDINATES',/,
     &        ' ',72('-') //)              
d46 1
a46 1
      IF (NBASE .GT. 1) WRITE (NDAT,2000) NKLA,NSTAB,NBASE,NITER,NCLAS          
d57 1
a57 1
      CALL RETIR(ICARD, KLAS, KGERM, JV )                                     
d59 6
a64 5
C     COPY OVER ALL SEED-OBJECTS ON NBAND                                 
      CALL REW(NGUS, 0)                                                         
      REWIND NBAND                                                              
      DO   I = 1,ICARD                                                      
         READ (NGUS)  (CI(KF), KF=1,KFAC)                                          
d66 1
a66 1
            IF (JV(M) .EQ. I) WRITE(NBAND) I, (CI(KF),KF=1,KFAC)              
d74 1
a74 1
         WRITE (NDAT,3000)                                      
d77 1
a77 1
         WRITE (NDAT,3001)  (JV(LL), LL=KG1,KG2)
d84 1
a84 1
         REWIND NBAND                                                              
d86 1
a86 1
            READ (NBAND)  I , (CI(KF), KF=1,KFAC)                                     
d99 1
a99 1
            CALL CLAST(N2DIM,NFAC,ICARD,KFAC,NCLAS,G,JW,CI,U,NGUS)                   
d102 1
a102 1
        WRITE (NDAT,4001) NITER                                                    
d105 1
a105 1
        WRITE (NDAT,5000) (U(J), J=1,NCLAS)                                        
d109 1
a109 1
        DO   I = 1,ICARD                                                      
d118 1
a118 1
        DOI = 1,ICARD                                                      
a126 1

d128 1
a128 1
        CALL STABK(ICARD,NKLA,KLAS,U,JV,JW,KTOT,KFIN,NIND)
d130 2
a131 2
        PCT   = 100.0*NIND/FLOAT(ICARD)                                           
        WRITE (NDAT,6000)  KTOT                                                    
d142 1
a142 1
        WRITE (NDAT,9000)  NKLA,NIND,PCT                                         
d149 1
@


1.7
log
@cosmetic & IDK bug
@
text
@d1 1
a1 1
C *NAME* = PARST.FOR                   31-JAN-86      13:23:09                  
d47 2
a48 2
      SUBROUTINE PARST (N2DIM,KDIM,NFAC,ICARD,KFAC,NBASE,NITER,NCLAS,           
     &                        NKLA,KLAS,JW,U,CI,JV, G, KFIN ,NGUS,NBAND)        
d52 1
a52 1
      COMMON / ENSOR / LEC,IMP 
d55 12
a66 11
      WRITE (IMP,1000)  ICARD , KFAC                                            
 1000 FORMAT (6X,'CLUSTERING BY AGGREGATION AROUND MOBILE CENTERS',/       
     &        //,5X,'PARTITION OF' ,I7,' OBJECTS CHARACTERIZED'  ,             
     &    ' BY' ,I5,'  CARTESIAN COORDINATES'    /' ',120('-') //)              

      IF (NBASE .GT. 1)  WRITE (IMP,2000) NKLA,NSTAB,NBASE,NITER,NCLAS          
 2000 FORMAT(5X,'PARTITION CONTAINS' ,I5,' CLASSES',/,6X,             
     &   'THE',I5,' FIRST CONTAINS THE MOST STABLE OBJECTS IN THE',             
     &   I5,'  BASIC PARTITIONS',/,6X,                                     
     &   'EACH PARTITION IS GENERATED BY',I5,' ITERATIONS',                    
     &   ' AROUND',I5,' SEED-OBJECTS DRAWN AT RANDOM',/)              
d72 1
a72 1
      CALL RETIR ( ICARD, KLAS, KGERM, JV )                                     
d79 1
a79 1
         DO   M = 1,KGERM                                                      
d88 1
a88 1
         WRITE (IMP,3000)                                      
d91 2
a92 2
         WRITE (IMP,3001)  (JV(LL), LL=KG1,KG2)
 3001    FORMAT(/' ',5X,'',10I6)                              
d104 1
a104 1
               DO   KF = 1,KFAC                                                      
d112 1
a112 1
         DO   NIT = 1,NITER                                                    
d116 2
a117 2
        WRITE (IMP,4001) NITER                                                    
 4001   FORMAT (' ',5X,'SIZE OF CLUSTERS AFTER',I4,' ITERATIONS')
d119 2
a120 2
        WRITE (IMP,5000) (U(J), J=1,NCLAS)                                        
 5000   FORMAT (' ',5X,10F6.0 )
d132 1
a132 1
        DO   I = 1,ICARD                                                      
d138 1
a138 1
  100   KG1   = KG1 + NCLAS                                                       
d143 1
a143 1
        CALL STABK (ICARD,NKLA,KLAS,U,JV,JW,KTOT,KFIN,NIND)
d146 15
a160 15
        WRITE (IMP,6000)  KTOT                                                    
 6000   FORMAT (/,4X,'SIZE OF THE',I6,' CLUSTERS FROM THE',                   
     &          ' CROSSED-PARTITION',/,5X,'FOLLOWED BY THE',                    
     &          ' CUMULATIVE PERCENTAGES.')                                        

        WRITE(IMP,7000) (JV(K), K=1,KFIN)                                       
 7000   FORMAT(' ',/' ',12I6)                                                    

        WRITE(IMP,8000) (U(K), K=1,KFIN)                                        
 8000   FORMAT(' ',/' ',12F6.1)                                                  

        WRITE (IMP,9000)  NKLA, NIND, PCT                                         
 9000   FORMAT(//,5X,'SIZE OF RESIDUAL CLUSTER (NUMBER',I4,')=',I6,///,
     &            5X,'PERCENTAGE =',F9.2,/,
     &            ' ',120('-')/)                 
@


1.6
log
@# continue char fails on NT f90
@
text
@a49 5
 

C     I DO NOT KNOW IF SAVE IS NEEDED FEB 99 al
      SAVE

d52 2
a53 1
      COMMON / ENSOR / LEC,IMP                                                  
d56 4
d61 9
a69 4
C                                                                               
C.......... EXHAUSTIVE RANDOM DRAWING OF THE SEED-OBJECTS                       
C           FOR THE NBASE PARTITION                                             
C                                                                               
d72 2
a73 3
C                                                                               
C.......... COPY OVER ALL SEED-OBJECTS ON NBAND                                 
C                                                                               
d76 4
a79 4
        DO   I = 1,ICARD                                                      
      READ (NGUS)  (CI(KF), KF=1,KFAC)                                          
        DO   M = 1,KGERM                                                      
      IF (JV(M) .EQ. I)        WRITE (NBAND) I, (CI(KF),KF=1,KFAC)              
d81 3
a83 4
	ENDDO
C                                                                               
C.......... BIG LOOP OVER THE BASIC PARTITIONS N=1,NBASE                        
C                                                                               
d85 37
a121 28
        DO 100 N = 1,NBASE                                                      
      KG2   = KG1 + NCLAS - 1                                                   
      WRITE (IMP,3000)  (JV(LL), LL=KG1,KG2)                                    
      J     = 0                                                                 
C                                                                               
C.......... SEED-OBJECTS TABLE FOR PARTITION NUMBER N                           
C                                                                               
      REWIND NBAND                                                              
        DO   L = 1,KGERM                                                      
      READ (NBAND)  I , (CI(KF), KF=1,KFAC)                                     
        DO 40  LL = KG1,KG2                                                     
        IF (JV(LL) .NE. I)             GO TO  40                                
      J     = J + 1                                                             
        DO   KF = 1,KFAC                                                      
          G(J,KF)= CI(KF)                                                           
	ENDDO
   40   CONTINUE                                                                
	ENDDO
C                                                                               
C.......... GENERATION OF PARTITION N BY NITER ITERATIONS.                      
C           UPDATE CENTERS AND CLASS NUMBERS OF OBJECTS.                        
C                                                                               
        DO   NIT = 1,NITER                                                    
      CALL CLAST (N2DIM,NFAC,ICARD,KFAC,NCLAS,G,JW,CI,U,NGUS)                   
      	ENDDO
      WRITE (IMP,4000) NITER                                                    
      WRITE (IMP,5000) (U(J), J=1,NCLAS)                                        
        IF (N .GT. 1)                  GO TO  80                                
d123 1
a123 1
      KLAS(I)= JW(I)                                                            
d125 5
a129 4
        IF (NBASE .NE. 1)              GO TO  100                               
      KFIN  = NCLAS                                                             
      NKLA  = NCLAS                                                             
         RETURN                                                                 
d132 1
a132 1
      KLAS(I)= KLAS(I) + (JW(I) - 1)*NCLAS**(N-1)                               
d134 27
a160 34
C                                                                               
C.......... END OF BASIC PARTITION NUMBER N                                     
C                                                                               
  100 KG1   = KG1 + NCLAS                                                       
C                                                                               
C.......... GENERATION OF THE STABLE CLUSTERING WITH NKLA CLUSTERS              
C                                                                               
      KTOT  = NCLAS ** NBASE                                                    
      CALL STABK (ICARD,NKLA,KLAS,U,JV,JW,KTOT,KFIN,NIND)                       
      PCT   = 100.0*NIND/FLOAT(ICARD)                                           
      WRITE (IMP,6000)  KTOT                                                    
      WRITE (IMP,7000)  (JV(K), K=1,KFIN)                                       
      WRITE (IMP,8000)  (U(K), K=1,KFIN)                                        
      WRITE (IMP,9000)  NKLA, NIND, PCT                                         
 1000 FORMAT ('1',25X,'CLUSTERING BY AGGREGATION AROUND MOBILE CENTERS',/       
     &        //,25X,'PARTITION OF' ,I7,'  OBJECT CHARACTERIZED'  ,             
     &    ' BY' ,I5,'  CARTESIAN COORDINATES'    /' ',132('-') //)              
 2000 FORMAT (                                                                  
     &   ' ',10X,'   PARTITION CONTAINS'  ,I5,'  CLASSES' /' ',10X,             
     &   'THE',I5,' FIRST CONTAINS THE MOST STABLE OBJECTS IN THE',             
     &   I5,'  BASIC PARTITIONS'  /' ',10X,                                     
     &   'EACH PARTITION IS GENERATED BY',I5,'  ITERATIONS',                    
     &  ' AROUND'    ,I5,'  SEED-OBJECTS DRAWN AT RANDOM'    /// )              
 3000 FORMAT (/' ',10X,'CONSTRUCTION OF A PARTITION',                           
     &                  ' WITH SEED-OBJECTS',10I6)                              
 4000 FORMAT (' ',20X,'SIZE OF CLUSTERS AFTER',I4,' ITERATIONS')                
 5000 FORMAT (' ',71X,10F6.0 )                                                  
 6000 FORMAT (//' ',10X,'SIZE OF THE',I6,' CLUSTERS FROM THE',                   
     &        ' CROSSED-PARTITION',/,10X,'FOLLOWED BY THE',                    
     &        'CUMULATIVE PERCENTAGES.')                                        
 7000 FORMAT (' ',/' ',20I6)                                                    
 8000 FORMAT (' ',/' ',20F6.1)                                                  
 9000 FORMAT (//,10X,'SIZE OF RESIDUAL CLUSTER   (NUMBER',I4,                   
     & ' )=',I6,///,47X,'PERCENTENTAGE =',F9.2,//' ',132('-')/)                 
@


1.5
log
@a
@
text
@d48 1
a48 1
     #                        NKLA,KLAS,JW,U,CI,JV, G, KFIN ,NGUS,NBAND)        
d136 2
a137 2
     #        //,25X,'PARTITION OF' ,I7,'  OBJECT CHARACTERIZED'  ,             
     #    ' BY' ,I5,'  CARTESIAN COORDINATES'    /' ',132('-') //)              
d139 5
a143 5
     #   ' ',10X,'   PARTITION CONTAINS'  ,I5,'  CLASSES' /' ',10X,             
     #   'THE',I5,' FIRST CONTAINS THE MOST STABLE OBJECTS IN THE',             
     #   I5,'  BASIC PARTITIONS'  /' ',10X,                                     
     #   'EACH PARTITION IS GENERATED BY',I5,'  ITERATIONS',                    
     #  ' AROUND'    ,I5,'  SEED-OBJECTS DRAWN AT RANDOM'    /// )              
d145 1
a145 1
     #                  ' WITH SEED-OBJECTS',10I6)                              
d149 2
a150 2
     #        ' CROSSED-PARTITION',/,10X,'FOLLOWED BY THE',                    
     #        'CUMULATIVE PERCENTAGES.')                                        
d154 1
a154 1
     # ' )=',I6,///,47X,'PERCENTENTAGE =',F9.2,//' ',132('-')/)                 
@


1.4
log
@CNO_SAVE
@
text
@d50 1
a50 1
CNO_SAVE 
@


1.3
log
@*** empty log message ***
@
text
@d46 1
d49 6
a54 1
C                                                                               
@


1.2
log
@*** empty log message ***
@
text
@d66 1
a66 1
        DO 20  I = 1,ICARD                                                      
d68 4
a71 3
        DO 10  M = 1,KGERM                                                      
   10 IF (JV(M) .EQ. I)        WRITE (NBAND) I, (CI(KF),KF=1,KFAC)              
   20   CONTINUE                                                                
d84 1
a84 1
        DO 50  L = 1,KGERM                                                      
d89 3
a91 2
        DO 30  KF = 1,KFAC                                                      
   30 G(J,KF)= CI(KF)                                                           
d93 1
a93 1
   50   CONTINUE                                                                
d98 3
a100 2
        DO 60  NIT = 1,NITER                                                    
   60 CALL CLAST (N2DIM,NFAC,ICARD,KFAC,NCLAS,G,JW,CI,U,NGUS)                   
d104 3
a106 2
        DO 70  I = 1,ICARD                                                      
   70 KLAS(I)= JW(I)                                                            
d112 3
a114 2
        DO 90  I = 1,ICARD                                                      
   90 KLAS(I)= KLAS(I) + (JW(I) - 1)*NCLAS**(N-1)                               
@


1.1
log
@Initial revision
@
text
@d137 2
a138 2
 6000 FORMAT (//' ',10X,'SIZE OF THE',I6,' CLUSTERS FROM THE'                   
     #        ' CROSSED-PARTITION',/,10X,'FOLLOWED BY THE' ,                    
@
