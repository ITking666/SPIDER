head	1.11;
access;
symbols
	healthdept_2018:1.11
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.8
	prec_CA:1.8
	noindx:1.8
	Bproc:1.7
	oct21:1.3
	last77:1.3;
locks; strict;
comment	@c @;


1.11
date	2018.10.03.14.34.09;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.24.13.26.09;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.21.00.58;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2001.03.15.14.49.54;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.24.15.21.31;	author bimal;	state Exp;
branches;
next	1.6;

1.6
date	99.12.27.16.16.30;	author bimal;	state Exp;
branches;
next	1.5;

1.5
date	99.12.06.18.50.13;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.09.37;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	97.10.10.17.47.24;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.01.16.16.02.57;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.03;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.11
log
@email_health_dept
@
text
@C ++********************************************************************
C                                                                      *
C  MD3                                                                 *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  MD3(X,NSAM,NROW,NSLICE,L,K,MODE,LUNO)                                                                  *
C                                                                      *
C  PURPOSE:  MEDIAN FILTER ON VOLUME                                                          *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C  IMAGE_PROCESSING_ROUTINE                                             *                                                                     *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE  MD3(X,NSAM,NROW,NSLICE,L,K,MODE,LUNO)

        REAL,    DIMENSION(NSAM,NROW,NSLICE) :: X
C       AUTOMATIC ARRAYS
        REAL,    DIMENSION(NSAM)             :: Y
        REAL,    DIMENSION(K)                :: A
        CHARACTER(LEN=1)                     :: MODE

        LH  = L / 2
        K21 = K / 2 + 1

        DO N=1,NSLICE                    
           DO J=1,NROW                      
              IF (MODE .EQ. 'C')  THEN
                 DO I=1,NSAM
                    LB = 0
                    DO M=-LH,LH
                      LB = LB + 1
                      IF (M .NE. 0)  THEN
                          A(LB) = X(I,MOD(J+M+NROW-1,NROW)+1,N)

                          LB    = LB + 1
                          A(LB) = X(MOD(I+M+NSAM-1,NSAM)+1,J,N)

                          LB    = LB + 1
                          A(LB) = X(I,J,MOD(N+M+NSLICE-1,NSLICE)+1)
                       ELSE
                          A(LB) = X(I,J,N)
                       ENDIF
                    ENDDO

                    CALL FSORT(A,K)
                    Y(I) = A(K21)
                 ENDDO
              ELSE
                 DO I=1,NSAM
                    LB = 0
                    DO MN=-LH,LH
                       MNM = MOD(N+MN+NSLICE-1,NSLICE)+1
                       DO MJ=-LH,LH
                          MJM = MOD(J+MJ+NROW-1,NROW)+1
                          DO MI=-LH,LH
                             LB    = LB+1
                             A(LB) = X(MOD(I+MI+NSAM-1,NSAM)+1,MJM,MNM)
                          ENDDO
                       ENDDO
                    ENDDO
                    CALL FSORT(A,K)
                    Y(I) = A(K21)
                 ENDDO
              ENDIF
              CALL WRTLIN(LUNO,Y,NSAM,J+(N-1)*NROW)
           ENDDO
        ENDDO
        END  


@


1.10
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.9
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@removed arithmetic if
@
text
@d6 23
a28 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.7
log
@cosmetic
@
text
@d14 1
a14 1
C MD3                                                                  *
d16 1
a16 1
C  PURPOSE:                                                            *
d20 1
a20 1
C IMAGE_PROCESSING_ROUTINE                                             *                                                                     *
a21 1
C        0         2         3         4         5         6         7 *
d27 5
a31 2
        DIMENSION   X(NSAM,NROW,NSLICE),Y(NSAM),A(K)
        CHARACTER*1  MODE
d33 25
a57 21
        LH=L/2
        K21=K/2+1
        DO    N=1,NSLICE                    
           DO    J=1,NROW                      
              IF(MODE.EQ.'C')  THEN
                 DO    I=1,NSAM
                    LB=0
                    DO  102  M=-LH,LH
                       IF(M)  103,104,103
103                    LB=LB+1
                       A(LB)=X(I,MOD(J+M+NROW-1,NROW)+1,N)
                       LB=LB+1
                       A(LB)=X(MOD(I+M+NSAM-1,NSAM)+1,J,N)
                       LB=LB+1
                       A(LB)=X(I,J,MOD(N+M+NSLICE-1,NSLICE)+1)
                       GOTO  102
104                    LB=LB+1
                       A(LB)=X(I,J,N)
102                 CONTINUE
                    CALL   FSORT(A,K)
                    Y(I)=A(K21)
d60 9
a68 9
                 DO    I=1,NSAM
                    LB=0
                    DO    MN=-LH,LH
                       MNM=MOD(N+MN+NSLICE-1,NSLICE)+1
                       DO    MJ=-LH,LH
                          MJM=MOD(J+MJ+NROW-1,NROW)+1
                          DO    MI=-LH,LH
                             LB=LB+1
                             A(LB)=X(MOD(I+MI+NSAM-1,NSAM)+1,MJM,MNM)
d72 2
a73 2
                    CALL   FSORT(A,K)
                    Y(I)=A(K21)
d76 1
a76 1
              CALL  WRTLIN(LUNO,Y,NSAM,J+(N-1)*NROW)
@


1.6
log
@adapted for dynamical memory allocation
@
text
@d34 38
a71 38
        DO    J=1,NROW                      
        IF(MODE.EQ.'C')  THEN
        DO    I=1,NSAM
        LB=0
        DO  102  M=-LH,LH
        IF(M)  103,104,103
103     LB=LB+1
        A(LB)=X(I,MOD(J+M+NROW-1,NROW)+1,N)
        LB=LB+1
        A(LB)=X(MOD(I+M+NSAM-1,NSAM)+1,J,N)
        LB=LB+1
        A(LB)=X(I,J,MOD(N+M+NSLICE-1,NSLICE)+1)
        GOTO  102
104     LB=LB+1
        A(LB)=X(I,J,N)
102     CONTINUE
        CALL   FSORT(A,K)
        Y(I)=A(K21)
        ENDDO
        ELSE
        DO    I=1,NSAM
        LB=0
        DO    MN=-LH,LH
        MNM=MOD(N+MN+NSLICE-1,NSLICE)+1
        DO    MJ=-LH,LH
        MJM=MOD(J+MJ+NROW-1,NROW)+1
        DO    MI=-LH,LH
        LB=LB+1
        A(LB)=X(MOD(I+MI+NSAM-1,NSAM)+1,MJM,MNM)
        ENDDO
        ENDDO
        ENDDO
        CALL   FSORT(A,K)
        Y(I)=A(K21)
        ENDDO
        ENDIF
        CALL  WRTLIN(LUNO,Y,NSAM,J+(N-1)*NROW)
        ENDDO
@


1.5
log
@header
@
text
@d3 1
a3 1
C  MD3                                                               *
d14 1
a14 1
C MD3                                                                 *
d20 2
d26 48
a73 1
	SUBROUTINE  MD3(X,Y,NSAM,NROW,NSLICE,L,A,K,MODE,LUNO)
a74 2
	DIMENSION   X(NSAM,NROW,NSLICE),Y(NSAM),A(K)
	CHARACTER*1  MODE
a75 43
	LH=L/2
	K21=K/2+1
	DO    N=1,NSLICE                    
	DO    J=1,NROW                      
	IF(MODE.EQ.'C')  THEN
	DO    I=1,NSAM
	LB=0
	DO  102  M=-LH,LH
	IF(M)  103,104,103
103	LB=LB+1
	A(LB)=X(I,MOD(J+M+NROW-1,NROW)+1,N)
	LB=LB+1
	A(LB)=X(MOD(I+M+NSAM-1,NSAM)+1,J,N)
	LB=LB+1
	A(LB)=X(I,J,MOD(N+M+NSLICE-1,NSLICE)+1)
	GOTO  102
104	LB=LB+1
	A(LB)=X(I,J,N)
102	CONTINUE
	CALL   FSORT(A,K)
	Y(I)=A(K21)
	ENDDO
	ELSE
	DO    I=1,NSAM
	LB=0
	DO    MN=-LH,LH
	MNM=MOD(N+MN+NSLICE-1,NSLICE)+1
	DO    MJ=-LH,LH
	MJM=MOD(J+MJ+NROW-1,NROW)+1
	DO    MI=-LH,LH
	LB=LB+1
	A(LB)=X(MOD(I+MI+NSAM-1,NSAM)+1,MJM,MNM)
	ENDDO
	ENDDO
	ENDDO
	CALL   FSORT(A,K)
	Y(I)=A(K21)
	ENDDO
	ENDIF
	CALL  WRTLIN(LUNO,Y,NSAM,J+(N-1)*NROW)
	ENDDO
	ENDDO
	END	
@


1.4
log
@a
@
text
@d1 23
d25 1
@


1.3
log
@*** empty log message ***
@
text
@d4 1
a4 1
CNO_SAVE
@


1.2
log
@nosave
@
text
@d7 2
a8 2
	DO  100  N=1,NSLICE                    
	DO  100  J=1,NROW                      
d10 1
a10 1
	DO  101  I=1,NSAM
d25 2
a26 1
101	Y(I)=A(K21)
d28 1
a28 1
	DO  201  I=1,NSAM
d30 1
a30 1
	DO  202  MN=-LH,LH
d32 1
a32 1
	DO  202  MJ=-LH,LH
d34 1
a34 1
	DO  202  MI=-LH,LH
d36 4
a39 1
202	A(LB)=X(MOD(I+MI+NSAM-1,NSAM)+1,MJM,MNM)
d41 2
a42 1
201	Y(I)=A(K21)
d44 3
a46 1
100	CALL  WRTLIN(LUNO,Y,NSAM,J+(N-1)*NROW)
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
C
@
