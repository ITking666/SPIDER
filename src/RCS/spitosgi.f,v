head	1.16;
access;
symbols
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.14
	prec_CA:1.13
	noindx:1.13
	Bproc:1.13
	oct21:1.13
	last77:1.12;
locks; strict;
comment	@c @;


1.16
date	2009.05.22.13.49.44;	author leith;	state dead;
branches;
next	1.15;

1.15
date	2005.10.17.20.57.37;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.05.14.48.06;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	99.09.08.16.58.29;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	99.02.23.20.55.18;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.02.05.16.32.35;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	98.01.16.18.57.31;	author liy;	state Exp;
branches;
next	1.9;

1.9
date	98.01.08.21.46.56;	author hedget;	state Exp;
branches;
next	1.8;

1.8
date	97.12.23.19.08.57;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.10.31.22.06.21;	author liy;	state Exp;
branches;
next	1.6;

1.6
date	97.10.31.20.07.59;	author hedget;	state Exp;
branches;
next	1.5;

1.5
date	97.10.22.18.36.32;	author liy;	state Exp;
branches;
next	1.4;

1.4
date	97.09.23.17.34.14;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	97.07.17.15.01.46;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	97.07.16.13.50.09;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	97.07.14.16.52.57;	author leith;	state Exp;
branches;
next	;


desc
@new
@


1.16
log
@obsolete
@
text
@
C++*********************************************************************
C
C  SPITOSGI.F  -- CREATED JUL 97                      ARDEAN LEITH
C                 MODIFIED FOR F90	    10/22/97  yl 	
C                 USED OPAUXFILE            FEB 99    ARDERAN LEITH
C
C **********************************************************************
C *  AUTHOR: A. LEITH                                                      *
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
C=*                                                                    *
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* This program is distributed in the hope that it will be useful,    *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
C=* General Public License for more details.                           *
C=*                                                                    *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
C=*                                                                    *
C **********************************************************************
C
C   SPITOSGI(LUNO,LUNN,NSAM,NROW,NSLICE,MODEOUT,IRTFLG)
C
C   PURPOSE:      CONVERT SPIDER IMAGE FILE TO SGI OR TARGA FORMAT
C
C   PARAMETERS:   MODEOUT       0 = SGI OUTPUT
C                               1 = TARGA OUTPUT
C
C   CALLED BY:    COPY1
C
C--*********************************************************************

	SUBROUTINE SPITOSGI(LUNO,LUNN,NSAM,NROW,NSLICE,MODEOUT,IRTFLG)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        COMMON /IOBUF/   BUFO(NBUFSIZ)

        INTEGER*1        LBUF
        CHARACTER *160   COMLIN
        CHARACTER *81    FILNEW
        COMMON/COMMUN/   FILNEW,COMLIN

        CHARACTER * 1    NULL

        DATA IDELAY/3/

        NULL   = CHAR(0)

        IF (NSLICE .NE. 1) THEN
           WRITE(NOUT,*)'WARNING: CONVERTER NOT TESTED FOR VOLUMES:'
        ENDIF
        IF (IMAMI .EQ. 0) THEN
C          NORMALIZE INPUT IMAGE FIRST
           CALL NORM3(LUNO,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
        ENDIF
        
        FN    = (255 - 0) / (FMAX - FMIN)
        FNCON = 0 - FN * FMIN

C       ALLOW EXTENSION ~9
        IF (MODEOUT .EQ. 0) THEN
           CALL FILERD(FILNEW,NLET,'sgi','ENTER SGI OUTPUT~9',IRTFLG)
        ELSE
           CALL FILERD(FILNEW,NLET,'targa',
     &                 'ENTER TARGA OUTPUT~9',IRTFLG)
        ENDIF
        IF (IRTFLG .NE. 0) RETURN

        LENREC = 1
        CALL OPAUXFILE(.FALSE.,'JUNK_RAW_RAW',NULL,LUNN,LENREC,'N',
     &                       ' ',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        IPIX = 0
        DO  I = NROW,1,-1
C          READ EACH RECORD OF 32 BIT UNIX SPIDER INPUT FILE   
           CALL REDLIN(LUNO,BUFO,NSAM,I)

C          CONVERT FLOATING POINT NUMBERS TO -128...127 LOGICAL *1
           DO J=1,NSAM
             I2VAL = BUFO(J) * FN + FNCON
             LBUF  = I2VAL
             IPIX  = IPIX + 1
             CALL WRTLIN8(LUNN,LBUF,1,IPIX)
           ENDDO
        ENDDO 

        CLOSE(LUNN)

        IF (MODEOUT .EQ. 0) THEN
C          SGI OUTPUT
           WRITE(COMLIN,8005) FILNEW(1:NLET),NSAM,NROW
8005       FORMAT('frombin JUNK_RAW_RAW ',A,' ',I6,' ',I6)
        ELSE
C          TARGA OUTPUT
           WRITE(COMLIN,8006) NSAM,NROW
8006       FORMAT('frombin JUNK_RAW_RAW JUNK_SGI_SGI',I6,' ',I6)
        ENDIF
       CALL CSVMS(COMLIN,IERR)

C       FROMBIN FORKS PROCESSES WITHOUT WAITING SO I ADD
C       A DELAY HERE. (KLUDGY)
        CALL sleep(IDELAY)

C       REMOVE TEMPORARY 8 BIT RAW FILE
        COMLIN = '\rm JUNK_RAW_RAW ' // NULL 
        CALL CSVMS(COMLIN,IERR)

        IF (MODEOUT .EQ. 1) THEN

C          CONVERT TO TARGA IMAGE FILE
C                         123456789 123456789 123456789 1234567
           COMLIN = 'totarga  JUNK_SGI_SGI ' // FILNEW(1:NLET) // NULL
           CALL CSVMS(COMLIN,IERR)

C          A SECOND DELAY HERE. (KLUDGY)
           CALL sleep(IDELAY)

C          REMOVE TEMPORARY 8 BIT RAW FILE
           COMLIN = '\rm JUNK_SGI_SGI ' // NULL 
           CALL CSVMS(COMLIN,IERR)
        ENDIF
     
        RETURN
        END
@


1.15
log
@GPL License fixed
@
text
@@


1.14
log
@~9 for allowing extension
@
text
@d2 1
a2 1
C++************************************************************************
d8 1
a8 1
C **************************************************************************
d10 24
a33 7
C *  COPYRIGHT (C)1989 , WADSWORTH CENTER FOR LABORATORIES AND RESEARCH    *
C *    NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.              *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d44 1
a44 1
C--*************************************************************************
@


1.13
log
@CMLIMIT.INC
@
text
@d58 1
a58 2
C       ALLOW EXTENSION
        IRTFLG = 9
d60 1
a60 1
           CALL FILERD(FILNEW,NLET,'sgi','ENTER SGI OUTPUT',IRTFLG)
d62 2
a63 1
           CALL FILERD(FILNEW,NLET,'targa','ENTER TARGA OUTPUT',IRTFLG)
@


1.12
log
@f90 fixes
@
text
@d32 1
a33 1
        PARAMETER        (NBUFSIZ = 17008)
@


1.11
log
@ removed VMS specific code
@
text
@a1 2


d4 3
a6 1
C  SPITOSGI.F  -- CREATED JUL 97
a7 2
C   Modified for F90	--- yl 	10/22/97
C
a26 2
C   CALLS:        
C          
a30 1
CNO_SAVE
d33 2
a34 3
        REAL             BUFO(32000)
        INTEGER*1        LBUF(1024)
	COMMON           LBUF,BUFO
d36 1
d38 4
a41 2
        CHARACTER *81    EXTEN,FILNEW
        COMMON/COMMUN/   EXTEN,FILNEW,COMLIN
a42 1
        CHARACTER * 1    NULL,ANS
a59 1
        EXTEN  = NULL
d61 1
a61 1
           CALL FILERD(FILNEW,NLET,EXTEN,'ENTER SGI OUTPUT',IRTFLG)
d63 1
a63 1
           CALL FILERD(FILNEW,NLET,EXTEN,'ENTER TARGA OUTPUT',IRTFLG)
a65 4
        IF (EXTEN .EQ. NULL) THEN
           CALL FILCAN(FILNEW,NLET,NULL,NULL,FILNEW,DATEXC,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
        ENDIF
d67 4
a70 9
C       OPEN TEMPORARY 8 BIT OUTPUT FILE
C        OPEN(LUNN,FILE='JUNK_RAW_RAW',ACCESS='SEQUENTIAL',IOSTAT=IER,
C     &      STATUS='UNKNOWN',FORM='FORMATTED',CARRIAGECONTROL='NONE')
        OPEN(LUNN,FILE='JUNK_RAW_RAW',ACCESS='DIRECT',IOSTAT=IER,
     &      RECL=1,STATUS='UNKNOWN',FORM='UNFORMATTED')
        IF (IER .NE. 0) THEN
           WRITE(NOUT,*) ' *** ERROR OPENING TEMP FILE: JUNK_RAW_RAW'
           RETURN
        ENDIF
d72 1
a72 1
        K      = 0
d79 4
a82 4
             I2VAL   = BUFO(J) * FN + FNCON
             LBUF(1) = I2VAL
             CALL WRTSEQ8(LUNN,LBUF,1,IRTFLG)
             IF (IRTFLG .NE. 0) RETURN
d95 1
a95 1
8006       FORMAT('frombin JUNK_RAW_RAW JUNK_SGI_SGI ',I6,' ',I6)
d104 1
a104 1
        COMLIN = '\\rm JUNK_RAW_RAW ' // NULL 
d118 1
a118 1
           COMLIN = '\\rm JUNK_SGI_SGI ' // NULL 
@


1.10
log
@brought back the one for f90
@
text
@a1 1
#ifdef SP_VMS
a2 1
      SUBROUTINE SPITOSGI(LUNO,LUNN,IRTFLG)
a3 9
      INCLUDE 'CMBLOCK.INC'

      WRITE(NOUT,*) '*** ROUTINE NOT AVAILABLE ON VAX/VMS'
      CALL ERRT(100,'SPITOSGI',NE)
      RETURN
      END

#else

a137 1
#endif
@


1.9
log
@added missing single quote
@
text
@a13 11
#ifdef SP_F90
C   FAILS ON F90????
 
       SUBROUTINE SPITOSGI
 
       COMMON /UNITS/LUNC,NIN,NOUT
 
       WRITE(NOUT,*) 'DUMMY CALL: SPITOSGI'
       RETURN
       END
#else 
d19 2
d50 1
a50 1
        BYTE             LBUF(1024)
d88 4
a91 2
        OPEN(LUNN,FILE='JUNK_RAW_RAW',ACCESS='SEQUENTIAL',IOSTAT=IER,
     &      STATUS='UNKNOWN',FORM='FORMATTED',CARRIAGECONTROL='NONE')
a103 1
             K       = K + 1
d105 3
a107 7
             LBUF(K) = I2VAL
             IF (K .EQ. 1024) THEN
C               BUFFER IS FULL, PUT IT OUT TO FILE
                CALL WRTSEQ8(LUNN,LBUF,K,IRTFLG)
                IF (IRTFLG .NE. 0) RETURN
                K = 0
             ENDIF
a110 5
        IF (K .GT. 0) THEN
C          BUFFER STILL HAS PIXELS IN IT, PUT THEM OUT TO FILE
           CALL WRTSEQ8(LUNN,LBUF,K,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
        ENDIF
a148 1
#endif
@


1.8
log
@recovered earlier working version
@
text
@d21 1
a21 1
       WRITE(NOUT,*) 'DUMMY CALL: SPITOSGI
@


1.7
log
@new for f90
@
text
@d14 11
a29 2
C   Modified for F90	--- yl 	10/22/97
C
d59 1
a59 1
        INTEGER*1        LBUF(1024)
d97 2
a98 4
C        OPEN(LUNN,FILE='JUNK_RAW_RAW',ACCESS='SEQUENTIAL',IOSTAT=IER,
C     &      STATUS='UNKNOWN',FORM='FORMATTED',CARRIAGECONTROL='NONE')
        OPEN(LUNN,FILE='JUNK_RAW_RAW',ACCESS='DIRECT',IOSTAT=IER,
     &      RECL=1,STATUS='UNKNOWN',FORM='UNFORMATTED')
d111 1
d113 7
a119 3
             LBUF(1) = I2VAL
             CALL WRTSEQ8(LUNN,LBUF,1,IRTFLG)
             IF (IRTFLG .NE. 0) RETURN
d123 5
d166 1
@


1.6
log
@added ifdef to compile under f90
@
text
@a0 1
#ifdef SP_F90
a1 9
       SUBROUTINE SPITOSGI

       COMMON /UNITS/LUNC,NIN,NOUT

       WRITE(NOUT,*) 'DUMMY CALL: spitosgi'
       RETURN
       END
#else

d91 1
a91 1
     &      RECL=1,STATUS='UNKNOWN',FORM='FORMATTED')
a103 1
             K       = K + 1
d105 3
a107 7
             LBUF(K) = I2VAL
             IF (K .EQ. 1024) THEN
C               BUFFER IS FULL, PUT IT OUT TO FILE
                CALL WRTSEQ8(LUNN,LBUF,K,IRTFLG)
                IF (IRTFLG .NE. 0) RETURN
                K = 0
             ENDIF
a110 5
        IF (K .GT. 0) THEN
C          BUFFER STILL HAS PIXELS IN IT, PUT THEM OUT TO FILE
           CALL WRTSEQ8(LUNN,LBUF,K,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
        ENDIF
a148 1
#endif
@


1.5
log
@Remove CARRIAGECONTROL for F90
@
text
@d1 1
d3 9
d169 1
@


1.4
log
@bad VMS stuff
@
text
@d19 2
d50 1
a50 1
        BYTE             LBUF(1024)
d88 4
a91 2
        OPEN(LUNN,FILE='JUNK_RAW_RAW',ACCESS='SEQUENTIAL',IOSTAT=IER,
     &      STATUS='UNKNOWN',FORM='FORMATTED',CARRIAGECONTROL='NONE')
@


1.3
log
@added targa stuff inside
@
text
@d9 1
a9 1
      CALL ERRT(100,'SPITOSGI',NE0
@


1.2
log
@CNO_SAVE
@
text
@d29 1
a29 1
C   SPITOSGI(LUNO,LUNN)
d31 1
a31 1
C   PURPOSE:      CONVERT SPIDER IMAGE FILE TO SGI FORMAT
d33 2
a34 1
C   CALLED BY:    copyu
d36 2
d42 1
a42 1
	SUBROUTINE SPITOSGI(LUNO,LUNN,NSAM,NROW,NSLICE,IRTFLG)
d56 1
d74 5
a78 1
        CALL FILERD(FILNEW,NLET,EXTEN,'ENTER SGI OUTPUT',IRTFLG)
d119 10
a128 3
        WRITE(COMLIN,8005) FILNEW(1:NLET),NSAM,NROW
8005    FORMAT('frombin JUNK_RAW_RAW ',A,' ',I6,' ',I6)
        CALL CSVMS(COMLIN,IERR)
d132 1
a132 1
        CALL sleep(DELAY)
d138 15
@


1.1
log
@Initial revision
@
text
@d41 1
@
