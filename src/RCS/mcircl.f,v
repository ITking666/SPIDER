head	1.17;
access;
symbols
	healthdept_2018:1.17
	pre_getangas:1.12
	GPL2010:1.12
	pre_GPL2010:1.11
	pre_var_equation:1.11
	pre_fftwrings:1.11
	pre_opfiles:1.11
	src:1.11
	best-code:1.11
	x-named-regs:1.11
	x:1.11
	v13-00:1.11
	pre_GPL:1.9
	prec_CA:1.9
	noindx:1.9
	Bproc:1.7
	oct21:1.6
	last77:1.6;
locks; strict;
comment	@c @;


1.17
date	2018.10.03.14.34.09;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2014.02.26.15.32.44;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2014.01.12.19.28.57;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2012.03.06.20.27.24;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2012.01.25.16.47.18;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.24.13.26.08;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.20.08.33;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.18.03.11;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.11.14.29.20;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.11.14.07.58;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.11.10.23.09.36;	author yuchen;	state Exp;
branches;
next	1.6;

1.6
date	99.02.04.16.50.27;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.10.10.17.47.24;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.04.21.19.31.14;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.09.12.14.26.42;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	95.09.07.17.47.29;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.02;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.17
log
@email_health_dept
@
text
@C ++********************************************************************
C
C           INTENSITY ADDED                      FEB 2014 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C MCIRCL(LUN,NX,NY,RP,IDIM)
C
C PURPOSE: MAKES A CIRCLE WITHIN A FILE
C
C PARAMETERS:
C       LUN :   LOGICAL UNIT NUMBER
C       NX,NY : FILE DIMENSIONS
C       RP :    VALUE TO BE CORRECTED
C       IDIM :  1 = CIRCLE LINE
C               2 = FILLED CIRCLE 
C               IDIM < 0 : USES COOS OF 3 POINTS TO DETERMINE CIRCLE
C               IDIM > 0 : USES CENTER COOS AND RADIUS TO DETERMINE CIRCLE
C
C  NOTES: INEFFICIENT CODING al
C
C **********************************************************************

        SUBROUTINE MCIRCL(LUN,NX,NY,RP,IDIM)

        INCLUDE 'CMBLOCK.INC'

        INTEGER :: LUN,NX,NY,IDIM
        REAL    :: RP
        REAL    :: BUF(NX)

        IF (IDIM < 0) THEN
C          ENTER 3 POINTS TO DETERMINE CIRCLE

           IDIM = IABS(IDIM)
           CALL RDPRMI(IX1,IY1,NOT_USED,'COOS OF FIRST  POINT')
           CALL RDPRMI(IX2,IY2,NOT_USED,'COOS OF SECOND POINT')
           CALL RDPRMI(IX3,IY3,NOT_USED,'COOS OF THIRD  POINT')

           IF (IY1 == IY2 .AND. IY2 == IY3) GOTO 9000
           
           X1  = FLOAT(IX2-IX1)
           Y1  = FLOAT(IY2-IY1)
           X2  = FLOAT(IX3-IX1)
           Y2  = FLOAT(IY3-IY1)

           XM1 = FLOAT(IX1)+X1/2.
           YM1 = FLOAT(IY1)+Y1/2.
           XM2 = FLOAT(IX1)+X2/2.
           YM2 = FLOAT(IY1)+Y2/2.

           WRITE(NOUT,9999) XM1,YM1,XM2,YM2
9999       FORMAT(5X,'(',F5.1,',',F5.1,')',5X,'(',F5.1,',',F5.1,')')

           IF (IY1 == IY2) THEN
111           AM22 = -X2/Y2
              X    = XM1
              Y    = AM22*(X-XM2)+YM2

           ELSEIF (IY1 == IY3) THEN
112           X    = XM2
              AM11 = -X1/Y1
              Y    = AM11*(X-XM1)+YM1
           ELSE

              AM11 = -X1/Y1
              AM22 = -X2/Y2
              WRITE(NOUT,9998) AM11,AM22
9998          FORMAT(' AM11= ',F6.2,5X,' AM22= ',F6.2)

              IF (AM11 == AM22) GOTO 9000

              X = (YM2-YM1+AM11*XM1-AM22*XM2) / (AM11-AM22)
              Y = AM11 * (X-XM1)+YM1
           ENDIF

           IX = IFIX(X+.5)
           IY = IFIX(Y+.5)

           WRITE(NOUT,9997) X,Y,IX,IY
9997       FORMAT(1X,' X= ',F5.1,2X,' Y= ',F5.1,2X,' (',I2,',',I2,')')

           R = SQRT( (X-FLOAT(IX1))**2 + (Y-FLOAT(IY1))**2 )

           WRITE(NOUT,9996) R
9996       FORMAT(' RADIUS: ',F12.2)

        ELSE
           CALL RDPRM3S(X,Y,RP,NOT_USED,
     &        'CENTER COORDINATES (NX,NY) & OPTIONAL INTENSITY',IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

           IX = NINT(X)
           IY = NINT(Y)

           CALL RDPRM1S(R,NOT_USED,'RADIUS',IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

           IF (R <= 0.0) GOTO 9000
        ENDIF


9       IR     = IFIX(R+0.5)
        I0     = IY-IR
        I1     = IY+IR
        IYSTRT = MAX(1,I0)
        IYEND  = MIN(NY,I1)
        IF (IYSTRT > NY .OR. IYEND <= 0) GOTO 9000

        I0     = IX-IR
        I1     = IX+IR
        IXSTRT = MAX(1,I0)
        IXEND  = MIN(NX,I1)
        IF (IXSTRT > NX .OR. IXEND <= 0) GOTO 9000

        DO  I=IYSTRT,IYEND
           CALL REDLIN(LUN,BUF,NX,I)

           DO J=IXSTRT,IXEND
              T  = FLOAT(J-IX)**2 + FLOAT(I-IY)**2
              IT = IFIX(SQRT(T))
              IF (IDIM == 2 .AND. IT <= IR) BUF(J) = RP
              IF (IDIM == 1 .AND. IT == IR) BUF(J) = RP
           ENDDO
           CALL WRTLIN(LUN,BUF,NX,I)
        ENDDO

        RETURN

9000    CALL ERRT(101,'INCONSISTENT INPUT PARAMETERS',NF)
        
        END
@


1.16
log
@intensity possible
@
text
@d10 1
a10 1
C=* Email: spider@@wadsworth.org                                        *
@


1.15
log
@enter
@
text
@d3 1
d8 1
a8 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
a25 2
C SUBROUTINE MAKES A CIRCLE WITHIN A FILE
C
d28 1
a28 5
C	LUN :	LOGICAL UNIT NUMBER
C
C	NX,NY : FILE DIMENSIONS
C
C	RP :	VALUE TO BE CORRECTED
d30 8
a37 4
C	IDIM :	1 = CIRCLE LINE
C		2 = FILLED CIRCLE 
C		IDIM < 0 : ENTER COOS OF 3 POINTS TO DETERMINE CIRCLE
C		IDIM > 0 : ENTER CENTER COOS AND RADIUS TO DETERMINE CIRCLE
d39 1
a39 1
C      NOTES: INEFFECIENT CODING al
d43 1
a43 1
	SUBROUTINE MCIRCL(LUN,NX,NY,RP,IDIM)
d49 1
a49 1
	REAL    :: BUF(NX)
d51 1
a51 1
	IF (IDIM < 0) THEN
d54 24
a77 24
	   IDIM=IABS(IDIM)
	   CALL RDPRMI(IX1,IY1,NOT_USED,'COOS OF FIRST  POINT')
	   CALL RDPRMI(IX2,IY2,NOT_USED,'COOS OF SECOND POINT')
	   CALL RDPRMI(IX3,IY3,NOT_USED,'COOS OF THIRD  POINT')

	   IF (IY1 == IY2.AND.IY2 == IY3) GOTO 9000
	   
	   X1  = FLOAT(IX2-IX1)
	   Y1  = FLOAT(IY2-IY1)
	   X2  = FLOAT(IX3-IX1)
	   Y2  = FLOAT(IY3-IY1)

	   XM1 = FLOAT(IX1)+X1/2.
	   YM1 = FLOAT(IY1)+Y1/2.
	   XM2 = FLOAT(IX1)+X2/2.
	   YM2 = FLOAT(IY1)+Y2/2.

	   WRITE(NOUT,9999) XM1,YM1,XM2,YM2
9999	   FORMAT(5X,'(',F5.1,',',F5.1,')',5X,'(',F5.1,',',F5.1,')')

	   IF (IY1 == IY2) THEN
111	      AM22 = -X2/Y2
	      X    = XM1
	      Y    = AM22*(X-XM2)+YM2
d79 1
a79 1
	   ELSEIF (IY1 == IY3) THEN
d81 2
a82 2
	      AM11 = -X1/Y1
	      Y    = AM11*(X-XM1)+YM1
d85 3
a87 3
	      AM11 = -X1/Y1
	      AM22 = -X2/Y2
	      WRITE(NOUT,9998) AM11,AM22
d90 1
a90 1
	      IF (AM11 == AM22) GOTO 9000
d92 2
a93 2
	      X = (YM2-YM1+AM11*XM1-AM22*XM2) / (AM11-AM22)
	      Y = AM11 * (X-XM1)+YM1
d96 2
a97 2
	   IX = IFIX(X+.5)
	   IY = IFIX(Y+.5)
d99 2
a100 2
	   WRITE(NOUT,9997) X,Y,IX,IY
9997	   FORMAT(1X,' X= ',F5.1,2X,' Y= ',F5.1,2X,' (',I2,',',I2,')')
d102 1
a102 1
	   R = SQRT( (X-FLOAT(IX1))**2 + (Y-FLOAT(IY1))**2 )
d104 2
a105 2
	   WRITE(NOUT,9996) R
9996	   FORMAT(' RADIUS: ',F12.2)
d108 26
a133 2
	   CALL RDPRI2S(IX,IY,NOT_USED,
     &                  'CENTER COORDINATES',IRTFLG)
d135 2
a136 20
	   CALL RDPRM1S(R,NOT_USED,'RADIUS',IRTFLG)
	   IF (R <= 0.0) GOTO 9000
	ENDIF


9	IR     = IFIX(R+0.5)
	I0     = IY-IR
	I1     = IY+IR
	IYSTRT = MAX(1,I0)
	IYEND  = MIN(NY,I1)
	IF (IYSTRT > NY .OR. IYEND <= 0) GOTO 9000

	I0     = IX-IR
	I1     = IX+IR
	IXSTRT = MAX(1,I0)
	IXEND  = MIN(NX,I1)
	IF (IXSTRT > NX .OR. IXEND <= 0) GOTO 9000

	DO  I=IYSTRT,IYEND
	   CALL REDLIN(LUN,BUF,NX,I)
d144 2
a145 4
	   CALL WRTLIN(LUN,BUF,NX,I)
	ENDDO

	RETURN
d147 1
d149 3
a151 3
9000	CALL ERRT(14,'MCIRCL',NF)
	RETURN
	END
@


1.14
log
@bad == typo shud be <= not filled cir
@
text
@d56 3
a58 3
	   CALL RDPRMI(IX1,IY1,NOT_USED,'ENTER COOS OF FIRST  POINT')
	   CALL RDPRMI(IX2,IY2,NOT_USED,'ENTER COOS OF SECOND POINT')
	   CALL RDPRMI(IX3,IY3,NOT_USED,'ENTER COOS OF THIRD  POINT')
d110 1
a110 1
     &                  'ENTER CENTER COORDINATES',IRTFLG)
d112 1
a112 1
	   CALL RDPRM1S(R,NOT_USED,'ENTER RADIUS',IRTFLG)
@


1.13
log
@updated
@
text
@d136 1
a136 1
              IF (IDIM == 2 .AND. IT == IR) BUF(J) = RP
@


1.12
log
@GPL_2010
@
text
@d27 1
a27 1
C MCIRCL(LUN,NSAM,NROW,RP,IDIM)
d31 1
a31 1
C	NSAM,NROW : FILE DIMENSIONS
d36 1
a36 1
C		2 = CIRCLE AREA
d40 2
d44 3
a46 1
	SUBROUTINE MCIRCL(LUN,NSAM,NROW,RP,IDIM)
d48 3
a50 2
	COMMON ADUM(80),BUF(1)
	COMMON /UNITS/LUNC,NIN,NOUT
d52 1
a52 1
	IF (IDIM .LT .0)THEN
d56 5
a60 4
	   CALL RDPRMI(IX1,IY1,NOT_USED,'ENTER COOS OF 1. POINT')
	   CALL RDPRMI(IX2,IY2,NOT_USED,'ENTER COOS OF 2. POINT')
	   CALL RDPRMI(IX3,IY3,NOT_USED,'ENTER COOS OF 3. POINT')
	   IF(IY1.EQ.IY2.AND.IY2.EQ.IY3) GOTO 9000
d62 9
a70 9
	   X1=FLOAT(IX2-IX1)
	   Y1=FLOAT(IY2-IY1)
	   X2=FLOAT(IX3-IX1)
	   Y2=FLOAT(IY3-IY1)

	   XM1=FLOAT(IX1)+X1/2.
	   YM1=FLOAT(IY1)+Y1/2.
	   XM2=FLOAT(IX1)+X2/2.
	   YM2=FLOAT(IY1)+Y2/2.
a73 2
	   IF(IY1.EQ.IY2) GOTO 111
	   IF(IY1.EQ.IY3) GOTO 112
d75 25
a99 20
	   AM11=-X1/Y1
	   AM22=-X2/Y2
	   WRITE(NOUT,9998) AM11,AM22
9998       FORMAT(' AM11 = ',F6.2,5X,' AM22 = ',F6.2)
	   IF(AM11.EQ.AM22) GOTO 9000

	   X=(YM2-YM1+AM11*XM1-AM22*XM2)/(AM11-AM22)
	   Y=AM11*(X-XM1)+YM1
	   GOTO 113

111	   AM22=-X2/Y2
	   X=XM1
	   Y=AM22*(X-XM2)+YM2
	   GOTO 113

112        X=XM2
	   AM11=-X1/Y1
	   Y=AM11*(X-XM1)+YM1
113	   IX=IFIX(X+.5)
	   IY=IFIX(Y+.5)
d101 4
a104 2
9997	   FORMAT(1X,' X = ',F5.1,2X,' Y = ',F5.1,2X,' (',I2,',',I2,')')
	   R=SQRT((X-FLOAT(IX1))**2.+(Y-FLOAT(IY1))**2.)
d106 1
a106 1
9996	   FORMAT(' RADIUS = ',F12.2)
d109 5
a113 3
	   CALL RDPRMI(IX,IY,NOT_USED,'ENTER CENTER COORDINATES')
	   CALL RDPRM(R,NOT_USED,'ENTER RADIUS')
	   IF (R .LE. 0.) GOTO 9000
d117 12
a128 13
9	CONTINUE
	IR=IFIX(R+0.5)
	I0=IY-IR
	I1=IY+IR
	IYSTRT=MAX0(1,I0)
	IYEND=MIN0(NROW,I1)
	IF(IYSTRT.GT.NROW.OR.IYEND.LE.0) GOTO 9000

	I0=IX-IR
	I1=IX+IR
	IXSTRT=MAX0(1,I0)
	IXEND=MIN0(NSAM,I1)
	IF(IXSTRT.GT.NSAM.OR.IXEND.LE.0) GOTO 9000
d131 9
a139 8
	CALL REDLIN(LUN,BUF,NSAM,I)
	DO  J=IXSTRT,IXEND
	 T=FLOAT(J-IX)**2+FLOAT(I-IY)**2
	 IT=IFIX(SQRT(T))
	 IF(IDIM.EQ.2.AND.IT.LE.IR) BUF(J)=RP
	 IF(IDIM.EQ.1.AND.IT.EQ.IR) BUF(J)=RP
	ENDDO
	CALL WRTLIN(LUN,BUF,NSAM,I)
d141 1
d143 1
@


1.11
log
@GPL License fixed
@
text
@a3 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d5 5
a9 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d11 1
a11 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d16 1
a16 1
C=* This program is distributed in the hope that it will be useful,    *
d18 1
a18 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a19 1
C=*                                                                    *
d21 1
a21 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.10
log
@HRI GPL License used
@
text
@a3 2
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      **
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
d7 1
a7 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a26 6

C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
a44 1
C****************************************************************************
@


1.9
log
@removed nloop
@
text
@d4 1
d6 24
d52 1
@


1.8
log
@nloop,iloop_removed
@
text
@a30 2
 

a32 1
        COMMON    /BATCH/IBCNT,NLOOP,IABSLP,ILOOP
@


1.7
log
@a
@
text
@d41 3
a43 3
	   CALL RDPRMI(IX1,IY1,NLOOP,ILOOP,'ENTER COOS OF 1. POINT')
	   CALL RDPRMI(IX2,IY2,NLOOP,ILOOP,'ENTER COOS OF 2. POINT')
	   CALL RDPRMI(IX3,IY3,NLOOP,ILOOP,'ENTER COOS OF 3. POINT')
d88 2
a89 2
	   CALL RDPRMI(IX,IY,NLOOP,ILOOP,'ENTER CENTER COORDINATES')
	   CALL RDPRM(R,NLOOP,ILOOP,'ENTER RADIUS')
@


1.6
log
@CNO_SAVE
@
text
@d31 1
a31 1
CNO_SAVE 
@


1.5
log
@*** empty log message ***
@
text
@d31 2
@


1.4
log
@changed prompts
@
text
@d106 1
a106 1
	DO 10 I=IYSTRT,IYEND
d108 6
a113 6
	DO 11 J=IXSTRT,IXEND
	T=FLOAT(J-IX)**2+FLOAT(I-IY)**2
	IT=IFIX(SQRT(T))
	IF(IDIM.EQ.2.AND.IT.LE.IR) BUF(J)=RP
	IF(IDIM.EQ.1.AND.IT.EQ.IR) BUF(J)=RP
11	CONTINUE
d115 1
a115 1
10	CONTINUE
@


1.3
log
@ added common block for nloop,iloop
@
text
@d1 1
d3 8
a10 1
C SUBROUTINE MCIRCL TO CORRECT A CIRCLE WITHIN A FILE
d12 1
a12 1
C	CALL MCIRCL(LUN,NSAM,NROW,RP,IDIM)
d14 2
d28 1
a28 1
C
d30 1
a30 1
C
d34 34
a67 1
        INTEGER          IBCNT,NLOOP,IABSLP,ILOOP
d69 23
a91 54
	IF(IDIM.LT.0) GOTO 100
	CALL RDPRMI(IX,IY,NLOOP,ILOOP,'ENTER CENTER COOS')
	CALL RDPRM(R,NLOOP,ILOOP,'ENTER RADIUS')
	IF(R.LE.0.) GOTO 9000
	GOTO 9
C
C ENTER 3 POINTS TO DETERMINE CIRCLE
C
100	CONTINUE
	IDIM=IABS(IDIM)
	CALL RDPRMI(IX1,IY1,NLOOP,ILOOP,'ENTER COOS OF 1. POINT')
	CALL RDPRMI(IX2,IY2,NLOOP,ILOOP,'ENTER COOS OF 2. POINT')
	CALL RDPRMI(IX3,IY3,NLOOP,ILOOP,'ENTER COOS OF 3. POINT')
	IF(IY1.EQ.IY2.AND.IY2.EQ.IY3) GOTO 9000
C
	X1=FLOAT(IX2-IX1)
	Y1=FLOAT(IY2-IY1)
	X2=FLOAT(IX3-IX1)
	Y2=FLOAT(IY3-IY1)
C
	XM1=FLOAT(IX1)+X1/2.
	YM1=FLOAT(IY1)+Y1/2.
	XM2=FLOAT(IX1)+X2/2.
	YM2=FLOAT(IY1)+Y2/2.
C
	WRITE(NOUT,9999) XM1,YM1,XM2,YM2
9999	FORMAT(5X,'(',F5.1,',',F5.1,')',5X,'(',F5.1,',',F5.1,')')
	IF(IY1.EQ.IY2) GOTO 111
	IF(IY1.EQ.IY3) GOTO 112
C
	AM11=-X1/Y1
	AM22=-X2/Y2
	WRITE(NOUT,9998) AM11,AM22
9998	FORMAT(' AM11 = ',F6.2,5X,' AM22 = ',F6.2)
	IF(AM11.EQ.AM22) GOTO 9000
C
	X=(YM2-YM1+AM11*XM1-AM22*XM2)/(AM11-AM22)
	Y=AM11*(X-XM1)+YM1
	GOTO 113
111	AM22=-X2/Y2
	X=XM1
	Y=AM22*(X-XM2)+YM2
	GOTO 113
112	X=XM2
	AM11=-X1/Y1
	Y=AM11*(X-XM1)+YM1
113	IX=IFIX(X+.5)
	IY=IFIX(Y+.5)
	WRITE(NOUT,9997) X,Y,IX,IY
9997	FORMAT(1X,' X = ',F5.1,2X,' Y = ',F5.1,2X,' (',I2,',',I2,')')
	R=SQRT((X-FLOAT(IX1))**2.+(Y-FLOAT(IY1))**2.)
	WRITE(NOUT,9996) R
9996	FORMAT(' RADIUS = ',F12.2)
C
d99 1
a99 1
C
d105 1
a105 1
C
d117 2
a118 2
9000	IER=14
	CALL ERRT(IER,'MCIRCL',NF)
@


1.2
log
@change 1,1 to nloop,iloop in dpr* calls
@
text
@d23 3
a25 1
C
@


1.1
log
@Initial revision
@
text
@d25 2
a26 2
	CALL RDPRMI(IX,IY,1,1,'ENTER CENTER COOS$')
	CALL RDPRM(R,1,1,'ENTER RADIUS$')
d34 3
a36 3
	CALL RDPRMI(IX1,IY1,1,1,'ENTER COOS OF 1. POINT$')
	CALL RDPRMI(IX2,IY2,1,1,'ENTER COOS OF 2. POINT$')
	CALL RDPRMI(IX3,IY3,1,1,'ENTER COOS OF 3. POINT$')
@
