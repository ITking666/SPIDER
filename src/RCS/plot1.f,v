head	1.18;
access;
symbols
	pre_mrcs:1.18
	healthdept_2018:1.18
	pre_getangas:1.15
	GPL2010:1.15
	pre_GPL2010:1.14
	pre_var_equation:1.14
	pre_fftwrings:1.14
	pre_opfiles:1.14
	src:1.14
	best-code:1.14
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.13
	prec_CA:1.13
	noindx:1.12
	Bproc:1.11
	oct21:1.11
	last77:1.11;
locks; strict;
comment	@c @;


1.18
date	2018.10.03.14.34.12;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2014.12.09.16.47.05;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2014.07.30.14.04.17;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.24.13.26.29;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.21.09.27;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.20.20.13.18;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.19.12.36.47;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.03.23.15.37.49;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.03.15.19.00.49;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.03.12.18.42.56;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.03.12.18.30.07;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.03.01.19.50.43;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.02.05.14.26.40;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.02.04.17.31.37;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	98.01.27.16.03.48;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.03.14.15.12.30;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.08.55;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.22;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.18
log
@email_health_dept
@
text
@
C++**************************************************** 6/23/80  2/5/81  VAX
C
C    PLOT1.FOR           CNINT.FOR CALLS ADDED    JAN 86 ARDEAN LEITH
C                        CS DRIVERS ALTERED       NOV 86 ARDEAN LEITH
C                        PROFILE PGMS ALTERED     JAN 86 ARDEAN LEITH
C                        VERSATEC CALLS REMOVED   MAR 90 ARDEAN LEITH
C                        CONVERTED TO SUBROUTINE  JUL 87 ARDEAN LEITH
C                        FILENAME CONVERSION      NOV 88 ARDEAN LEITH
C                        CHANGED 4/30/93           MAHIEDDINE LADJADJ     
C                        REMOVED CNTERM          2/05/99 ARDEAN LEITH
C                        MOST OUTPUT NOW POSTSCRIPT 2/99 ARDEAN LEITH
C                        OPFILEC                  FEB 03 ARDEAN LEITH
C                        MAXNAM                   JUL 14 ARDEAN LEITH
C                        DPROFF_GPL ADDED, CASE   DEC 14 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C       PLOT1(MAXDIM)
C
C       COMMANDS:
C       CO              CONTOURS A IMAGE TO POSTSCRIPT 
C       CO S            CONTOURS A IMAGE FILE INTO STERECON INPUT FILES
C       PF              PROFILES A IMAGE TO POSTSCRIPT 
C       PL              PLOTS CONTENTS OF DOC FILE TO POSTSCRIPT
C       PL G            PLOTS CONTENTS OF DOC FILE TO GNUPLOT SCRIPT
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

      SUBROUTINE PLOT1(MAXDIM)

      PARAMETER (MAXREG = 7)
      PARAMETER (MAXKEY = 5000)
      PARAMETER (NSIZE  = 2000)

      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'

C     DATA IS IN BLANK COMMON FOR USE IN DPROFD ??? al 2014
      COMMON DATA(3,NSIZE),DBUF(MAXREG,MAXKEY)

C     COMMON /COMMUN/ IS USED IN CNINT3!

      REAL                  :: PLIST(7)
      CHARACTER(LEN=MAXNAM) :: IMFILE,DOFILE,POSFILE
      CHARACTER * 1         :: ANSW
      CHARACTER * 1         :: NULL = CHAR(0)
      LOGICAL               :: DOCIT

      INTEGER, PARAMETER    :: LUNIM   = 18
      INTEGER, PARAMETER    :: LUNDOC  = 81
      INTEGER, PARAMETER    :: LUNPOST = 70

C     IFUNCS:   CO  PF   PL 

      SELECT CASE(FCHAR(1:2))

      CASE ('CO')    !  --------- IMAGE CONTOURING --------------- 'CO'

C       TRACE CONTOURS INTO POSTSCRIPT FILE
C       OPEN SPIDER IMAGE TYPE FILE AS INPUT

1       MAXIM = 0
        CALL OPFILEC(0,.TRUE.,IMFILE,LUNIM,'O',ITYPE,NX,NY,NZ,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       ESTABLISH FMIN AND FMAX IF NOT IN COMMON YET
        IF (IMAMI .NE. 1) 
     &       CALL NORM3(LUNIM,NX,NY,NZ,FMAX,FMIN,AV)

        CALL CNINT3(LUNIM,LUNPOST,NX,NY,NZ,FMIN,FMAX,MAXDIM)


      CASE ('PF')    !  --------- PROFILE ACROSS IMAGE------------'PF'

C       OPEN A SPIDER IMAGE TYPE FILE AS INPUT
2       MAXIM = 0
        CALL OPFILEC(0,.TRUE.,IMFILE,LUNIM,'O',IFORM,
     &               NX,NY,NZ,
     &               MAXIM,'IMAGE',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

        SELECT CASE(FCHAR(4:4))

        CASE ('G')  

C          GET NAME FOR GNUPLOT FILE & OPEN AS SEQUENTIAL FORMATTED
           CALL OPAUXFILE(.TRUE.,POSFILE,'gpl',LUNPOST,0,'N',
     &                 'GNUPLOT OUTPUT',.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000

           NLETC = LNBLNKN(POSFILE)
           NLETI = LNBLNKN(IMFILE)

           CALL DPROFL_G(IMFILE,NLETI,POSFILE,NLETC,LUNIM,LUNPOST,NX,NY)

         CASE DEFAULT

C          GET NAME OF POSTSCRIPT FILE & OPEN AS SEQUENTIAL FORMATTED
           CALL OPAUXFILE(.TRUE.,POSFILE,'ps',LUNPOST,0,'N',
     &                    'POSTSCRIPT OUTPUT',.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000

           NLETC = LNBLNKN(POSFILE)
           NLETI = LNBLNKN(IMFILE)

           CALL DPROFL(IMFILE,NLETI,POSFILE,NLETC,LUNIM,LUNPOST,NX,NY)

           CALL POPRINT(POSFILE)
        END SELECT


      CASE ('PL')    !  ---------  PL OPTIONS ------------------'PL --'

         SELECT CASE(FCHAR(4:5))

         CASE ('HI')    !  HISTOGRAM OF DOC FILE -------------- 'PL HI'

            CALL DCHIST(LUNDOC,LUNIM)


         CASE ('F')    !   FIT CURVE TO DOC FILE (NO PLOT!) --- 'PL FIT'

C          OPEN DOC FILE FOR INPUT
           CALL FILERD(DOFILE,NLETD,DATEXC,'DOCUMENT',IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000
           IOP = 0
           CALL UNSDAL(DOFILE,IOP,LUNDOC,1,PLIST,1,DBUF,
     &                 MAXKEY,MAXREG, NKEY,LER)
           CLOSE(LUNDOC)

           CALL POLLSQ(DBUF,MAXREG,MAXKEY,LUNDOC)


         CASE ('G')       ! GNUPLOT REGISTER CONTENTS  ---------- 'PL G'

           CALL DPROFD_GPL(LUNDOC,LUNPOST)


         CASE DEFAULT     ! PS PLOT REGISTER CONTENTS  ---------- 'PL'

           CALL DPROFD(LUNDOC,LUNPOST)

         END SELECT 

       CASE DEFAULT

       END SELECT 


9000   CLOSE(LUNIM)
       CLOSE(LUNPOST)

       END
@


1.17
log
@'PL G' for gnuplot, case, nx
@
text
@d23 1
a23 1
C=* Email: spider@@wadsworth.org                                        *
d105 20
a124 4
C       GET NAME OF POSTSCRIPT FILE & OPEN AS SEQUENTIAL FORMATTED
        CALL OPAUXFILE(.TRUE.,POSFILE,'ps',LUNPOST,0,'N',
     &                 'POSTSCRIPT OUTPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000
d126 2
a127 2
        NLETC = LNBLNKN(POSFILE)
        NLETI = LNBLNKN(IMFILE)
d129 1
a129 1
        CALL DPROFL(IMFILE,NLETI,POSFILE,NLETC,LUNIM,LUNPOST,NX,NY)
d131 2
a132 1
        CALL POPRINT(POSFILE)
@


1.16
log
@LEN=MAXNAM) :: IMFILE,DOFILE,POSFILE
@
text
@d10 1
a10 1
C	                 CHANGED 4/30/93           MAHIEDDINE LADJADJ     
d15 1
d46 1
a52 1
      PARAMETER (NFUNC  = 3)
d65 1
a65 2
      DIMENSION                PLIST(7)
      CHARACTER * 2            FUNC(NFUNC)
d67 3
a69 2
      CHARACTER * 1            NULL,ANSW
      LOGICAL                  DOCIT
d71 3
a73 2
      DATA FUNC/'CO', 'PF', 'PL'/
      DATA LUNIM/8/, LUNDOC/91/, LUNPOST/90/
d75 1
a75 12
        NULL  = CHAR(0)
        
C       IFUNCS:   CO  PF   PL 

C       FIND THE FUNCTION NUMBER
7	DO IFUNC = 1, NFUNC
          IF (FCHAR(1:2) .EQ. FUNC(IFUNC)) THEN
            GOTO (1, 2, 3), IFUNC
          END IF
        ENDDO
C       FUNCTION NOT IN PLOT1
        RETURN
d77 3
a79 1
C ----------------------- IMAGE CONTOURING -------------------------'CO'
d85 1
a85 1
        CALL OPFILEC(0,.TRUE.,IMFILE,LUNIM,'O',ITYPE,NSAM,NROW,NSLICE,
d91 3
a93 1
     &       CALL NORM3(LUNIM,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
a94 2
        CALL CNINT3(LUNIM,LUNPOST,NSAM,NROW,NSLICE,FMIN,FMAX,MAXDIM)
        GOTO 9000
d96 1
a96 1
C      ----------------- PROFILE ACROSS IMAGE-----------------------'PF'
d100 3
a102 2
        CALL OPFILEC(0,.TRUE.,IMFILE,LUNIM,'O',IFORM,NSAM,NROW,NSLICE,
     &             MAXIM,'IMAGE',.FALSE.,IRTFLG)
d105 1
a105 1
C       GET NAME OF POSTSCRIPT FILE AND OPEN AS SEQUENTIAL FORMATTED
d107 1
a107 1
     &                       'POSTSCRIPT OUTPUT',.TRUE.,IRTFLG)
d112 2
a113 1
        CALL DPROFL(IMFILE,NLETI,POSFILE,NLETC,LUNIM,LUNPOST,NSAM,NROW)
a115 1
        GOTO 9000
a116 1
C      ----------------- PL OPTIONS --------------------------------'PL'
d118 8
a125 3
3       IF (FCHAR(4:5) .EQ. 'HI') THEN
C          HISTOGRAM OF DOC FILE ------------------------------- 'PL HI'
           CALL DCHIST(LUNDOC,LUNIM)
d127 1
a127 2
        ELSEIF (FCHAR(4:4) .EQ. 'F') THEN
C          FIT CURVE TO DOC FILE (NO PLOT!) ------------------- 'PL FIT'
d133 2
a134 2
           CALL UNSDAL(DOFILE,IOP,LUNDOC,1,PLIST,1,DBUF,MAXKEY,MAXREG,
     &               NKEY,LER)
d136 1
a138 1
        ELSE
d140 7
a146 1
C          PLOT OF DOC REGISTER CONTENTS VS DOC REGISTER ------- 'PL  '
d149 3
a151 2
       ENDIF
       GOTO 9000                      
d153 1
a153 1
C      -------------- SHOW CONTOOR PLOT --------------------------  'CS'
d156 2
a157 2
9000	CLOSE(LUNIM)
        CLOSE(LUNPOST)
d159 1
a159 2
        RETURN
	END
@


1.15
log
@GPL_2010
@
text
@d4 6
a9 6
C    PLOT1.FOR           CNINT.FOR CALLS ADDED JAN 86    ARDEAN LEITH
C                        CS DRIVERS ALTERED NOV 86       ARDEAN LEITH
C                        PROFILE PGMS ALTERED JAN 86     ARDEAN LEITH
C                        VERSATEC CALLS REMOVED MAR 90   ARDEAN LEITH
C                        CONVERTED TO SUBROUTINE JULY 87 ARDEAN LEITH
C                        FILENAME CONVERSION NOV 88      ARDEAN LEITH
d11 1
a11 1
C                        REMOVED CNTERM 2/05/99          ARDEAN LEITH
d14 1
d20 1
a20 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d57 1
d59 1
a59 1
C     DATA IS IN BLANK COMMON FOR USE IN DPROFD
d64 5
a68 5
      DIMENSION      PLIST(7)
      CHARACTER * 2  FUNC(NFUNC)
      CHARACTER * 81 IMFILE,DOFILE,POSFILE
      CHARACTER * 1  NULL,ANSW
      LOGICAL        DOCIT
@


1.14
log
@GPL License fixed
@
text
@a15 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d17 5
a21 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d23 1
a23 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d28 1
a28 1
C=* This program is distributed in the hope that it will be useful,    *
d30 1
a30 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a31 1
C=*                                                                    *
d33 1
a33 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.13
log
@opfilec
@
text
@d16 23
a38 7
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999.  HEALTH RESEARCH INCORPORATED,            *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
@


1.12
log
@pl menu did not work (called pl fit!)
@
text
@d12 2
a13 1
C                        MOST OUTPUT NOW POSTSCRITP 2/99 ARDEAN LEITH
d78 1
a78 1
        CALL OPFILE(.TRUE.,IMFILE,LUNIM,'O',ITYPE,NSAM,NROW,NSLICE,
d93 1
a93 1
        CALL OPFILE(.TRUE.,IMFILE,LUNIM,'O',IFORM,NSAM,NROW,NSLICE,
@


1.11
log
@removed print qery fro CO operation.
@
text
@d114 1
a114 6
        ELSEIF (FCHAR(4:5) .EQ. 'CS') THEN

C          PLOT OF DOC REGISTER CONTENTS VS DOC REGISTER ------- 'PL CS'
           CALL DPROFD(LUNDOC,LUNPOST)

        ELSE
d125 6
@


1.10
log
@changed cnint3 parameters
@
text
@a85 5

        IF (FCHAR(4:4) .NE. 'S') THEN
C          GIVE IMMEDIATE POSTSCRIPT PLOT (IF DESIRED)
           CALL POPRINT(POSFILE)
        ENDIF
@


1.9
log
@reactivated cnint4.f
@
text
@d74 1
a74 2
1       IF (FCHAR(4:4) .EQ. 'S') THEN
           CALL CNINT4(EXTEN,UNUSED,MAXDIM)
d76 4
a79 2
        ELSE
           CALL CNINT3(LUNIM,LUNPOST,MAXDIM)
d81 7
@


1.8
log
@used postscript
@
text
@d74 2
a75 1
1       CALL CNINT3(LUNIM,LUNPOST,MAXDIM)
d77 6
a82 2
C       GIVE IMMEDIATE POSTSCRIPT PLOT (IF DESIRED)
        CALL POPRINT(POSFILE)
@


1.7
log
@for postscript
@
text
@d27 4
a30 9
C       CO              CONTOURS A SPIDER IMAGE FILE IN CNT FILE 
C       CO S            CONTOURS A SPIDER IMAGE FILE INTO STERECON FILES
C       PF              PROFILES A SPIDER IMAGE FILE IN CNT FILE 
C       PL              PLOTS CONTENTS OF DOC FILE   IN CNT FILE 
C       CS DI GD        PLOTS CNT FILE ON GOULD PLOTTER
C       CS DI PL        TRANSLATES CNT FILE TO HPGL AND PLACES IN FILE
C       CS DI P0        TRANSLATES CNT FILE TO POSTSCRIPT AND PLACES IN FILE
C       CS MV           TRANSFERS CONTOURS TO A MOVIE.BYU MOSAIC FILE FROM SLICE
C       CS TH           THINS NUMBER OF POINTS IN A CNT FILE
a31 1
C        0         2         3         4         5         6         7
d37 1
a37 1
      PARAMETER (NFUNC  = 4)
a42 1
      INCLUDE 'CONSTG.INC'
a46 3
C     COMMON FOR CONTOUR PLOTS
      COMMON /CONT/SCLFAC

a49 1
      LOGICAL        DISPL8
d51 1
a51 2
      CHARACTER * 81 CSFILE,IMFILE,DOFILE,POSFILE
      CHARACTER * 8  DISP
d53 1
d55 2
a56 2
      DATA FUNC/'CO',  'PF',   'PL',  'CS'/
      DATA LUNCS /92/, LUN1/8/, LUNDOC/91/, LUNPOST/90/
d58 1
a58 1
        NULL = CHAR(0)
d60 1
a60 8
C       SET ICSPR TO AVOID FILE OPENING DETAILS PRINTOUT
        ICSPR  = -2

C       SET NON-SERIAL SECTION FLAG
        SERSEC = .FALSE.
        LABAH  = .TRUE.

        MAXIM = 0
a61 2
C       IFUNCS:   CO  PF   PL  CS

d65 1
a65 1
            GOTO (1, 2, 3, 4), IFUNC
d73 2
a74 26
C       THE NEW CONTOURING PGMS MUST OPEN THEIR OWN FILES
1       IF (FCHAR(4:4) .EQ. 'S') THEN

C         STERECON 3-D FILE READING CONTOURING PGM. (NOT DISTRIBUTED)
          DISPL8 = .FALSE.
          CALL CNINT4(DATEXC,DISPL8,MAXDIM)
          GOTO 9000
	ENDIF

C       CONTOUR A SPIDER IMAGE INTO A CNT CONTOUR FILE. DIPLAY OPTIONAL
        DISPL8  = .FALSE.
        IF (INDEX(FCHAR,'V') .GT. 0) DISPL8 = .TRUE. 

C       SKIP TITLE QUESTION
        ITFLG   = 0

C       ASK FOR NUMBER OF CONTOURS
        MAXCNT  = 0
        DISP    = 'UNK'
        ICNTFMT = 0
        CALL CNFILE(CSFILE,NLETC,'NEW CONTOUR',
     &                DISP,DATEXC,LUNCS,IRTFLG)
        IF ( IRTFLG .EQ. -1) GOTO 9700

C       TRACE CONTOURS INTO CNT FILE
        CALL CNINT3(LUNCS,DISPL8,MAXDIM)
d77 1
a77 5
        CALL RDPRMC(ANSW,NA,.TRUE.,
     &       'SHOW POSTSCRIPT MENU NOW? (Y/N)',NULL,IRTFLG)
        IF (ANSW .NE. 'N' .AND. ANSW .NE. 'n') THEN
           CALL CNDISP(CSFILE,NULL,.TRUE.,.FALSE.,LUNCS,LUNPOST,IRTFLG)
        ENDIF
d83 2
a84 1
2       CALL OPFILE(.TRUE.,IMFILE,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
d95 1
a95 1
        CALL DPROFL(IMFILE,NLETI,POSFILE,NLETC,LUN1,LUNPOST,NSAM,NROW)
d104 1
a104 1
           CALL DCHIST(LUNDOC,LUN1)
d116 1
a116 1
           IF (IRTFLG .NE. 0) GOTO 9700
a126 52
4       IF (FCHAR(7:8). EQ. 'PO') THEN
C          USE POSTSCRIPT INTERFACE TO OPEN FILE
           GOTO 609
        ENDIF

C       OPEN AN EXISTING CNT FILE AS INPUT
        ISEL   = 1
        CALL CNFILE(CSFILE,NLETC,'CONTOUR','OLD',DATEXC,LUNCS,IRTFLG)
        IF ( IRTFLG .EQ. -1) GOTO 9700

        CALL CHKINPQ('MV,MVVT,DI',FCHAR(4:),NCALL)
        GOTO    (599,501,502,600) NCALL


C       CONVERT A CNT CONTURE FILE TO A MOVIE.BYU FILE
C       DO NOT PLOT CONTOURS DURING CONVERSION
501     DISPL8 = .FALSE.
        CALL CNMOV(LUNCS,DISPL8)
        GOTO 9000

C       PLOT CONTOURS ON VT125 DURING CONVERSION
502     DISPL8 = .TRUE.
        CALL CNMOV(LUNCS,DISPL8)
        GOTO 9000

C       UNKNOWN COMMAND
599     WRITE(NOUT,*) '*** UNKNOWN OPERATION IN PLOT1.'
        GOTO 9700

C       FIND DISPLAY DEVICE
600     CALL CHKINPQ('VT, GD,VTH, PL, PO$',FCHAR(7:),NCALL)
        GOTO    (601,601,602,604,607,609),NCALL

C       DISPLAY ON DEC TERMINAL
601     WRITE(NOUT,*) '*** OPERATION NO LONGER SUPPORTED.'
        GOTO 9700

C       DISPLAY ON HPGL PLOTTER
602     CALL CNGOUL(NULL,DATEXC,LUNCS,ISEL,.FALSE.,.FALSE.,IRTFLG)
        GOTO 9700

C       DISPLAY ON DEC TERMINAL WITH HARDCOPY
604     WRITE(NOUT,*) '*** OPERATION NO LONGER SUPPORTED.'
        GOTO 9700

C       GOULD (HPGL) PLOTTER
607     CALL CNGOUL(NULL,DATEXC,LUNCS,ISEL,.FALSE.,.TRUE.,IRTFLG)
        GOTO 9700

C       POSTSCRIPT PLOTTER INTERFACE
609     CALL CNDISP(NULL,NULL,.FALSE.,.FALSE.,LUNCS,LUNPOST,IRTFLG)
        GOTO 9700
d128 1
a128 2
9700    CLOSE(LUNCS)
9000	CLOSE(LUN1)
@


1.6
log
@removed cnterm
@
text
@d4 19
a22 8
C    PLOT1.FOR                CNINT.FOR CALLS ADDED JAN 86 al
C                             CS DRIVERS ALTERED NOV 86 al
C                             PROFILE PGMS ALTERED JAN 86 al
C                             VERSATEC CALLS REMOVED MAR 90 al
C                             CONVERTED TO SUBROUTINE JULY 87 al
C                             FILENAME CONVERSION NOV 88 al
C	                      CHANGED BY MAHIEDDINE LADJADJ     4/30/93
C                             REMOVED CNTERM        2/05/99 ArDean Leith
a23 10
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
C
a27 1
C       CO CSVT         CONTOURS A SPIDER IMAGE FILE IN CNT FILE AND DISPLAYS
a30 3
C       CS DI, CS DI VT PLOTS CNT FILE ON VT125 OR VT240 TERM
C       CS VTH          PLOTS CNT FILE ON DEC VT TERM. AND GIVES HARD COPY
C       CS DI LX        PLOTS CNT FILE ON LEXIDATA TERM
a31 2
C       CS DI TX        PLOTS CNT FILE ON TEKTRONIX PLOTTER
C       CS DI RA        PLOTS CNT FILE ON RASTER TECH TERM
a34 2
C       CS MVVT         TRANSFERS TO MOVIE.BYU FILE AND DISPLAYS ON VT
C       CS PLA          CONVERTS MOVIE.BYU FILE TO A PLATE TYPE MOVIE.BYU FILE
a36 7
C       CALLS:          FILERD   OPENF    ERRT    CNFILE    CHKINPQ   CNINT
C                       RDPRMI   CNINT3   DPROFL  UNSDAL    DPROFD    DCHIST
C                       CNMOV    CNTERM   CNGOUL  CNTEKT    TMHARD
C                       TMEND    CNLEXI   CNRAST  SSPLAT
C
C       CALLED BY:      DRIVER
C
a42 2
CNO_SAVE 

d62 1
a62 1
      CHARACTER * 81 CSFILE,IMFILE,DOFILE
d67 1
a67 2
      DATA MININT/-32768/, MAXINT/32767/
      DATA LUNCS /20/, LUN1/8/, LUNDOC/11/, LUNPOST/12/
d78 2
d130 13
a142 22
2      IF (FCHAR(4:4) .EQ. 'D') THEN
         WRITE(NOUT,*) '*** OPERATION CHANGED TO "PL" OR "PL V".'
         GOTO 9700
       ENDIF

C      OPEN A SPIDER IMAGE TYPE FILE AS INPUT
10     CALL OPFIL(.TRUE.,IMFILE,LUN1,'O',NSAM1,NROW1,NSLICE1,IFORM,
     &             'IMAGE',.FALSE.,IRTFLG)
       IF (IRTFLG .NE. 0) GOTO 9700

       IF (NSAM1 .GT. MAXDIM) THEN
         CALL ERRT(9,'PLOT1',NE)
         GOTO 9700 
       ENDIF

C       PLACE A PROFILE ACROSS AN IMAGE FILE IN A CNT FILE
        MAXCNT  = 2000
        DISP    = 'NEW'
        ICNTFMT = 1
        CALL CNFILE(CSFILE,NLETC,'CONTOUR',DISP,DATEXC,LUNCS,IRTFLG)
        IF ( IRTFLG .EQ. -1) GOTO 9700
        CALL DPROFL(IMFILE,NLETI,CSFILE,NLETC,LUN1,LUNCS,NSAM1,NROW1)
d144 1
a144 5
C       GIVE IMMEDIATE POSTSCRIPT PLOT (IF DESIRED)
        CALL RDPRMC(ANSW,NA,.TRUE.,'PRINT NOW? (Y/N)',NULL,IRTFLG)
        IF (ANSW .NE. 'N' .AND. ANSW .NE. 'n') THEN
           CALL CNDISP(CSFILE,NULL,.TRUE.,.TRUE.,LUNCS,LUNPOST,IRTFLG)
        ENDIF
d147 1
a147 17
C      ----------------- DOC. FILE PLOT --------------------------  'PL'

C       OPEN A DOCUMENT FILE AS INPUT
3       CALL FILERD(DOFILE,NLETD,NULL,'DOCUMENT',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9700

C       ADD EXTENSION TO FILE NAME
        CALL FILCAN(DOFILE,NLETD,NULL,NULL,DOFILE,DATEXC,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9700

C       PLOTS CREATED FROM DOCUMENT FILES:
        CALL CHKINPQ('CS,HI,FIT$',FCHAR(4:),KCALL)
        GOTO (401,401,404,406) KCALL

401     DISP    = 'NEW'
        MAXCNT  = 2000
        ICNTFMT = 1
d149 3
a151 3
C       PLACE PLOT OF DOC REGISTER CONTENTS VS DOC REGISTER IN A CNT FILE
        CALL CNFILE(CSFILE,NLETC,'CONTOUR ',DISP,DATEXC,LUNCS,IRTFLG)
        IF ( IRTFLG .EQ. -1) GOTO 9700
d153 1
a153 11
C       OPEN DOC FILE FOR INPUT
        IOP = 0
        CALL UNSDAL(DOFILE,IOP,LUNDOC,1,PLIST,1,DBUF,
     &              MAXKEY,MAXREG,NKEY,LER)
        CALL DPROFD(DOFILE,NLETD,CSFILE,NLETC,DBUF,
     &              MAXREG,MAXKEY,NKEY,LUNCS,IRTFLG)
        CLOSE(LUNDOC)
        IF (IRTFLG .EQ. -1) THEN
           CLOSE(LUNCS)
           GOTO 401
        ENDIF
d155 2
a156 6
C       GIVE IMMEDIATE POSTSCRIPT PLOT (IF DESIRED)
        CALL RDPRMC(ANSW,NA,.TRUE.,'PRINT NOW? (Y/N)',NULL,IRTFLG)
        IF (ANSW .NE. 'N' .AND. ANSW .NE. 'n') THEN
          CALL CNDISP(CSFILE,NULL,.TRUE.,.TRUE.,LUNCS,LUNPOST,IRTFLG)
        ENDIF
        GOTO 9000
d158 2
a159 3
404     ICNTFMT = 1
        CALL DCHIST(DOFILE,LUN1)
        GOTO 9000
d161 5
a165 4
406     CONTINUE
C       OPEN DOC FILE FOR INPUT
        IOP = 0
        CALL UNSDAL(DOFILE,IOP,LUNDOC,1,PLIST,1,DBUF,MAXKEY,MAXREG,
d167 4
a170 3
        CLOSE(LUNDOC)
        CALL POLLSQ(DBUF,MAXREG,MAXKEY,LUNDOC)
        GOTO 9000                      
@


1.5
log
@CNO_SAVE
@
text
@d4 8
a11 6
C    PLOT1.FOR                          CNINT.FOR CALLS ADDED JAN 86 al
C                                       CS DRIVERS ALTERED NOV 86 al
C                                       PROFILE PGMS ALTERED JAN 86 al
C                                       VERSATEC CALLS REMOVED MAR 90 al
C                                       CONVERTED TO SUBROUTINE JULY 87 al
C                                       FILENAME CONVERSION NOV 88 al
a12 3
C	CHANGED BY MAHIEDDINE LADJADJ     4/30/93
C
C
d265 1
a265 1
601     CALL CNTERM(NULL,DATEXC,LUNCS,ISEL,IRTFLG)
d273 1
a273 3
604     CALL CNTERM(NULL,DATEXC,LUNCS,ISEL,IRTFLG)
        CALL TMHARD(NOUT)
        CALL TMEND(NOUT)
@


1.4
log
@removed "CS TH" & "CS DI TX"
@
text
@d58 2
@


1.3
log
@fixed crash due to luncs on cndisp call
@
text
@a62 1
#ifdef SP_UNIX
a64 4
#else
      INCLUDE 'COMMON1:CMBLOCK.INC'
      INCLUDE 'COMMON1:CONSTG.INC'
#endif
d240 2
a241 2
        CALL CHKINPQ('MV,MVVT,DI,TH,PL$',FCHAR(4:),NCALL)
        GOTO (599,501,502,600,700,800) NCALL
d260 2
a261 2
600     CALL CHKINPQ('VT,GD,TX,VTH,LX,PL,PO$',FCHAR(7:),NCALL)
        GOTO (601,601,602,603,604,605,607,609),NCALL
a270 4
C       DISPLAY ON TEKTONIX PLOTTER
603     CALL CNTEKT(NULL,DATEXC,LUNCS,ISEL,.FALSE.,IRTFLG)
        GOTO 9700

a276 4
605     WRITE(NOUT,*) '*** LEXIDATA ROUTINES NOT LINKED'
C*LEXI  CALL CNLEXI(NULL,DATEXC,LUNCS,ISEL,IRTFLG)
        GOTO 9700

a283 10

C       THIN CONTOURS IN A CONTOUR FILE
700     CALL CNTHIN(DATEXC,LUNCS)
        GOTO 9000

C       MAKE A NEW MOVIE.BYU PLATE TYPE FILE FROM A REGULAR
C       MOVIE.BYU MOSAIC INPUT FILE.  KEEPS OLD FILE TOO.
800     CALL SSPLAT(DATEXC)
        GOTO 9000

@


1.2
log
@cpp_lines_added
@
text
@d65 1
a67 4
#endif
#ifdef SP_UNIX
      INCLUDE 'CONSTG.INC'
#else
d88 1
a88 1
      DATA LUNCS /20/, LUN1/8/, LUNDOC/11/
d143 1
a143 1
            CALL CNDISP(CSFILE,NULL,.TRUE.,.FALSE.,10,11,IRTFLG)
d175 1
a175 1
          CALL CNDISP(CSFILE,NULL,.TRUE.,.TRUE.,10,11,IRTFLG)
d216 1
a216 1
          CALL CNDISP(CSFILE,NULL,.TRUE.,.TRUE.,10,11,IRTFLG)
d265 2
a266 2
600     CALL CHKINPQ('VT,GD,TX,VTH,LX,RA,PL,WK,PO$',FCHAR(7:),NCALL)
        GOTO (601,601,602,603,604,605,606,607,608,609),NCALL
d290 1
a290 3
606     WRITE(NOUT,*) '*** RASTER TECH. ROUTINES NOT LINKED'
        GOTO 9700

a293 7

608     CONTINUE
        CALL CNWIND(LUNCS,MAXDIM,IRTFLG)
C*UIS   CALL CNWORK(LUNCS,IRTFLG)
C       ONE OF THE ABOVE IS COMMENTED OUT FOR UIS VS DEC-WINDOWS 
        GOTO 9700

d295 1
a295 1
609     CALL CNDISP(NULL,NULL,.FALSE.,.FALSE.,10,11,IRTFLG)
d310 1
a310 3

C       NEEDED TO GET OPERATION IN DRIVER
        FCHAR(:1) = ';'
@


1.1
log
@Initial revision
@
text
@d63 3
d67 4
d72 1
@
