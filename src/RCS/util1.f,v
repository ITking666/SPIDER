head	1.155;
access;
symbols
	pre_mrcs:1.154
	healthdept_2018:1.154
	pre_getangas:1.122
	GPL2010:1.115
	pre_GPL2010:1.114
	pre_var_equation:1.114
	pre_fftwrings:1.113
	pre_opfiles:1.112
	src:1.112
	best-code:1.109
	named-reg:1.108
	x-named-regs:1.108
	x:1.108
	v13-00:1.108
	pre_GPL:1.105
	prec_CA:1.86
	noindx:1.78
	Bproc:1.63
	oct21:1.57
	last77:1.46;
locks; strict;
comment	@c @;


1.155
date	2019.11.04.17.35.09;	author leith;	state Exp;
branches;
next	1.154;

1.154
date	2018.10.03.14.51.08;	author leith;	state Exp;
branches;
next	1.153;

1.153
date	2016.11.18.17.30.15;	author leith;	state Exp;
branches;
next	1.152;

1.152
date	2016.02.04.15.54.54;	author leith;	state Exp;
branches;
next	1.151;

1.151
date	2015.11.19.15.32.40;	author leith;	state Exp;
branches;
next	1.150;

1.150
date	2015.11.12.19.38.29;	author leith;	state Exp;
branches;
next	1.149;

1.149
date	2014.12.11.17.24.28;	author leith;	state Exp;
branches;
next	1.148;

1.148
date	2014.12.11.17.04.09;	author leith;	state Exp;
branches;
next	1.147;

1.147
date	2014.12.03.18.50.53;	author leith;	state Exp;
branches;
next	1.146;

1.146
date	2014.11.05.17.01.41;	author leith;	state Exp;
branches;
next	1.145;

1.145
date	2014.09.17.14.13.53;	author leith;	state Exp;
branches;
next	1.144;

1.144
date	2014.08.25.12.28.42;	author leith;	state Exp;
branches;
next	1.143;

1.143
date	2014.08.21.15.16.33;	author leith;	state Exp;
branches;
next	1.142;

1.142
date	2014.08.18.15.18.36;	author leith;	state Exp;
branches;
next	1.141;

1.141
date	2014.02.27.15.34.02;	author leith;	state Exp;
branches;
next	1.140;

1.140
date	2014.01.23.13.45.23;	author leith;	state Exp;
branches;
next	1.139;

1.139
date	2014.01.12.19.08.26;	author leith;	state Exp;
branches;
next	1.138;

1.138
date	2014.01.09.17.00.21;	author leith;	state Exp;
branches;
next	1.137;

1.137
date	2013.12.31.19.25.11;	author leith;	state Exp;
branches;
next	1.136;

1.136
date	2013.08.12.14.09.08;	author leith;	state Exp;
branches;
next	1.135;

1.135
date	2013.06.12.14.30.56;	author leith;	state Exp;
branches;
next	1.134;

1.134
date	2013.02.12.13.03.12;	author leith;	state Exp;
branches;
next	1.133;

1.133
date	2013.01.29.19.46.53;	author leith;	state Exp;
branches;
next	1.132;

1.132
date	2013.01.29.19.28.26;	author leith;	state Exp;
branches;
next	1.131;

1.131
date	2013.01.29.17.14.48;	author leith;	state Exp;
branches;
next	1.130;

1.130
date	2013.01.29.14.50.51;	author leith;	state Exp;
branches;
next	1.129;

1.129
date	2013.01.29.14.45.29;	author leith;	state Exp;
branches;
next	1.128;

1.128
date	2012.06.25.18.32.59;	author leith;	state Exp;
branches;
next	1.127;

1.127
date	2012.06.25.18.15.13;	author leith;	state Exp;
branches;
next	1.126;

1.126
date	2012.05.21.15.24.49;	author leith;	state Exp;
branches;
next	1.125;

1.125
date	2012.05.21.13.50.04;	author leith;	state Exp;
branches;
next	1.124;

1.124
date	2012.03.27.15.40.56;	author leith;	state Exp;
branches;
next	1.123;

1.123
date	2012.01.23.16.33.43;	author leith;	state Exp;
branches;
next	1.122;

1.122
date	2011.01.12.18.35.44;	author leith;	state Exp;
branches;
next	1.121;

1.121
date	2011.01.03.16.35.53;	author leith;	state Exp;
branches;
next	1.120;

1.120
date	2010.11.26.18.41.56;	author leith;	state Exp;
branches;
next	1.119;

1.119
date	2010.11.03.18.45.35;	author leith;	state Exp;
branches;
next	1.118;

1.118
date	2010.11.03.17.04.16;	author leith;	state Exp;
branches;
next	1.117;

1.117
date	2010.11.02.18.18.22;	author leith;	state Exp;
branches;
next	1.116;

1.116
date	2010.10.21.17.41.08;	author leith;	state Exp;
branches;
next	1.115;

1.115
date	2010.06.24.13.27.12;	author leith;	state Exp;
branches;
next	1.114;

1.114
date	2009.05.15.14.19.16;	author leith;	state Exp;
branches;
next	1.113;

1.113
date	2007.12.20.18.34.54;	author leith;	state Exp;
branches;
next	1.112;

1.112
date	2006.10.02.19.10.39;	author leith;	state Exp;
branches;
next	1.111;

1.111
date	2006.06.02.01.46.49;	author leith;	state Exp;
branches;
next	1.110;

1.110
date	2006.03.28.21.47.35;	author pawel;	state Exp;
branches;
next	1.109;

1.109
date	2006.01.12.20.18.51;	author leith;	state Exp;
branches;
next	1.108;

1.108
date	2005.11.07.21.28.39;	author bimal;	state Exp;
branches;
next	1.107;

1.107
date	2005.10.17.20.50.54;	author leith;	state Exp;
branches;
next	1.106;

1.106
date	2005.10.17.18.41.18;	author leith;	state Exp;
branches;
next	1.105;

1.105
date	2004.11.19.22.24.44;	author cyang;	state Exp;
branches;
next	1.104;

1.104
date	2004.11.02.15.17.11;	author leith;	state Exp;
branches;
next	1.103;

1.103
date	2004.07.13.15.30.01;	author leith;	state Exp;
branches;
next	1.102;

1.102
date	2004.04.05.14.52.11;	author leith;	state Exp;
branches;
next	1.101;

1.101
date	2004.03.19.18.31.12;	author leith;	state Exp;
branches;
next	1.100;

1.100
date	2004.03.08.20.20.02;	author leith;	state Exp;
branches;
next	1.99;

1.99
date	2004.03.01.21.25.11;	author leith;	state Exp;
branches;
next	1.98;

1.98
date	2004.03.01.21.22.13;	author leith;	state Exp;
branches;
next	1.97;

1.97
date	2004.02.13.21.03.25;	author leith;	state Exp;
branches;
next	1.96;

1.96
date	2004.02.12.16.16.17;	author pawel;	state Exp;
branches;
next	1.95;

1.95
date	2004.02.12.16.06.35;	author pawel;	state Exp;
branches;
next	1.94;

1.94
date	2004.01.23.20.02.54;	author leith;	state Exp;
branches;
next	1.93;

1.93
date	2004.01.23.19.57.04;	author leith;	state Exp;
branches;
next	1.92;

1.92
date	2003.11.19.14.47.25;	author leith;	state Exp;
branches;
next	1.91;

1.91
date	2003.11.17.22.13.00;	author pawel;	state Exp;
branches;
next	1.90;

1.90
date	2003.11.17.14.18.49;	author leith;	state Exp;
branches;
next	1.89;

1.89
date	2003.10.31.15.55.01;	author leith;	state Exp;
branches;
next	1.88;

1.88
date	2003.10.24.19.47.56;	author leith;	state Exp;
branches;
next	1.87;

1.87
date	2003.10.16.16.45.51;	author leith;	state Exp;
branches;
next	1.86;

1.86
date	2003.04.10.19.09.31;	author leith;	state Exp;
branches;
next	1.85;

1.85
date	2003.03.25.14.44.07;	author bimal;	state Exp;
branches;
next	1.84;

1.84
date	2003.03.24.17.35.34;	author leith;	state Exp;
branches;
next	1.83;

1.83
date	2003.03.21.20.26.34;	author bimal;	state Exp;
branches;
next	1.82;

1.82
date	2003.02.20.17.54.36;	author leith;	state Exp;
branches;
next	1.81;

1.81
date	2003.02.18.17.11.35;	author leith;	state Exp;
branches;
next	1.80;

1.80
date	2003.02.04.20.28.29;	author leith;	state Exp;
branches;
next	1.79;

1.79
date	2003.01.28.18.56.51;	author leith;	state Exp;
branches;
next	1.78;

1.78
date	2002.09.12.13.32.08;	author leith;	state Exp;
branches;
next	1.77;

1.77
date	2002.06.21.20.01.23;	author bbaxter;	state Exp;
branches;
next	1.76;

1.76
date	2002.05.10.19.17.04;	author pawel;	state Exp;
branches;
next	1.75;

1.75
date	2002.03.11.14.08.44;	author leith;	state Exp;
branches;
next	1.74;

1.74
date	2001.08.09.16.14.54;	author pawel;	state Exp;
branches;
next	1.73;

1.73
date	2001.07.31.23.21.07;	author pawel;	state Exp;
branches;
next	1.72;

1.72
date	2001.06.01.17.33.24;	author leith;	state Exp;
branches;
next	1.71;

1.71
date	2001.02.20.15.32.38;	author leith;	state Exp;
branches;
next	1.70;

1.70
date	2001.01.11.23.57.00;	author pawel;	state Exp;
branches;
next	1.69;

1.69
date	2001.01.04.18.20.41;	author leith;	state Exp;
branches;
next	1.68;

1.68
date	2000.11.30.20.56.07;	author hxgao;	state Exp;
branches;
next	1.67;

1.67
date	2000.11.28.15.41.01;	author hxgao;	state Exp;
branches;
next	1.66;

1.66
date	2000.10.12.18.28.59;	author leith;	state Exp;
branches;
next	1.65;

1.65
date	2000.09.19.19.59.37;	author leith;	state Exp;
branches;
next	1.64;

1.64
date	2000.09.18.18.39.25;	author leith;	state Exp;
branches;
next	1.63;

1.63
date	2000.09.15.13.39.47;	author leith;	state Exp;
branches;
next	1.62;

1.62
date	2000.08.10.17.52.10;	author leith;	state Exp;
branches;
next	1.61;

1.61
date	2000.08.10.16.19.31;	author leith;	state Exp;
branches;
next	1.60;

1.60
date	99.12.28.20.01.27;	author bimal;	state Exp;
branches;
next	1.59;

1.59
date	99.12.27.18.10.21;	author bimal;	state Exp;
branches;
next	1.58;

1.58
date	99.10.28.14.34.39;	author bimal;	state Exp;
branches;
next	1.57;

1.57
date	99.10.05.18.42.39;	author pawel;	state Exp;
branches;
next	1.56;

1.56
date	99.10.05.13.06.44;	author pawel;	state Exp;
branches;
next	1.55;

1.55
date	99.08.25.16.02.55;	author pawel;	state Exp;
branches;
next	1.54;

1.54
date	99.08.13.14.46.11;	author leith;	state Exp;
branches;
next	1.53;

1.53
date	99.07.21.17.12.40;	author leith;	state Exp;
branches;
next	1.52;

1.52
date	99.06.04.12.37.25;	author leith;	state Exp;
branches;
next	1.51;

1.51
date	99.06.03.19.29.23;	author leith;	state Exp;
branches;
next	1.50;

1.50
date	99.06.02.18.29.07;	author pawel;	state Exp;
branches;
next	1.49;

1.49
date	99.05.25.17.12.29;	author leith;	state Exp;
branches;
next	1.48;

1.48
date	99.05.25.15.52.44;	author pawel;	state Exp;
branches;
next	1.47;

1.47
date	99.05.24.18.53.04;	author pawel;	state Exp;
branches;
next	1.46;

1.46
date	99.03.19.14.55.54;	author leith;	state Exp;
branches;
next	1.45;

1.45
date	99.02.19.16.59.03;	author leith;	state Exp;
branches;
next	1.44;

1.44
date	99.02.05.15.36.51;	author leith;	state Exp;
branches;
next	1.43;

1.43
date	98.09.29.15.25.22;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	98.08.24.15.57.18;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	98.08.10.19.10.38;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	98.03.09.16.39.21;	author pawel;	state Exp;
branches;
next	1.39;

1.39
date	98.03.06.16.52.36;	author pawel;	state Exp;
branches;
next	1.38;

1.38
date	98.02.17.18.46.27;	author pawel;	state Exp;
branches;
next	1.37;

1.37
date	98.01.26.22.17.55;	author pawel;	state Exp;
branches;
next	1.36;

1.36
date	98.01.23.16.36.45;	author pawel;	state Exp;
branches;
next	1.35;

1.35
date	98.01.21.17.59.19;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	98.01.13.19.01.10;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	98.01.05.20.24.03;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	97.12.11.19.28.40;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	97.10.02.17.01.34;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	97.09.17.19.26.14;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	97.07.10.17.50.12;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	97.06.26.15.15.50;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	97.06.26.13.53.25;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	97.04.18.13.49.22;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	97.03.19.18.26.20;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	97.03.18.19.54.40;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	96.12.11.21.14.18;	author mladjadj;	state Exp;
branches;
next	1.22;

1.22
date	96.09.30.15.43.21;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	96.09.26.16.15.45;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	96.09.16.14.14.42;	author mladjadj;	state Exp;
branches;
next	1.19;

1.19
date	96.09.04.14.17.25;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	96.09.03.14.07.18;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	96.08.29.20.50.07;	author pawel;	state Exp;
branches;
next	1.16;

1.16
date	96.08.29.20.45.33;	author pawel;	state Exp;
branches;
next	1.15;

1.15
date	96.08.21.13.37.04;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	96.07.11.19.33.42;	author mladjadj;	state Exp;
branches;
next	1.13;

1.13
date	96.05.02.16.10.11;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	96.05.01.18.08.21;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	96.04.29.19.24.48;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	96.04.26.14.18.50;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	96.02.27.17.26.08;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	96.02.22.19.46.37;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.02.08.16.59.41;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	95.04.25.20.09.33;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	95.02.07.16.36.03;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	94.08.09.10.33.44;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.07.08.13.44.22;	author michael;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.12.19;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.38;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.155
log
@mrc_support
@
text
@C
C++*********************************************************************
C
C    UTIL1.F   TITLE PROCESSING MODIFIED          NOV  87 ArDean Leith
C              LONG FILE NAMES ADDED              DEC  88 ArDean Leith
C	       ALTERED                            4/21/93 Mahieddine Ladjadj
C	       ALTERED                            8/25/93 Jing Su
C	       LI COMMAND REWRITTEN               8/30/96 ArDean Leith
C	       TT COMMAND REWRITTEN               6/28/97 ArDean Leith
C              ST PARAMETERS ALTERED              SEP  98 ArDean Leith
C              'TT COP' ADDED                     JUN  99 ArDean Leith
C              'CA SM' ALTERED                    AUG  99 ArDean Leith
C              'TF CTS' ALTERED                   NOV  00 Haixiao Gao
C              'TF CTF' REMOVED                   JAN  01 ArDean Leith
C              'TF CRF' ADDED                     JAN  11 Paul Penczek
C              'TF ECTF' ADDED                    JUL  31 Paul Penczek
C              'TF ECTF' --> 'TF ED'              JUN  02 Bill Baxter
C              'HI E' ADDED                       FEB  03 ArDean Leith
C              OPFILEC                            FEB  03 ArDean Leith
C              'HI J' ADDED                       MAR  03 ArDean Leith
C              'PK DR' ADDED                      MAR  03 Bimal Rath
C              'CA' REWRITE                       SEP  03 ArDean Leith
C              'TF EA' REMOVED                    NOV  03 Paul Penczek
C              'TF ED' REPLACED                   NOV  03 Paul Penczek
C              'CA SMI' ADDED                     JAN  04 ArDean Leith
C              'HI J' VMIN, VMAX                  FEB  04 ArDean Leith
C               TRAFC & TRAFCT MERGED             MAR  04 ArDean Leith
C               ~7 REPLACES IRTFLG                APR  04 ArDean Leith
C               'PK 3R'                           NOV  04 ArDean Leith
C               'TF SIM' ADDED                    NOV  07 Bimal  Rath 
C               'TF LM4'ADDED                     MAR  06 Zhong  Huang 
C               'HI DOC' DUPLICATES HI D          MAR  06 ArDean Leith 
C               'FI H' ON STACK HEADER            OCT  10 ArDean Leith 
C               'TF COR'                          NOV  10 ArDean Leith 
C               'FI H' INQUIREHEAD ARGS           NOV  10 ArDean Leith 
C               'ST H'                            NOV  10 ArDean Leith 
C	        'FI H' NO FILE BUG                JAN  11 ArDean Leith
C	        CASE                              JAN  11 ArDean Leith
C	        'CTF FIND'                        MAY  12 ArDean Leith
C	        'CTF ED'                          JUN  12 ArDean Leith
C	        'CA EIGPCT'                       JAN  13 ArDean Leith
C	        'FI' PROMPT SHORTENED             JUN  13 ArDean Leith
C               'TF RCTF' REMOVED                 JAN  14 ArDean Leith
C               'LI T x' ADDED                    AUG  14 ArDean Leith
C               'ST H' KLUDGE FOR BAD EM2EM STACK AUG  14 ArDean Leith
C               CALL NOISE PARAMETERS             NOV  14 ArDean Leith
C	        'FI CEN' ADDED                    DEC  14 ArDean Leith
C	        'TF C?' MERGERS                   NOV  15 ArDean Leith
C	        'FI H' CAN OPEN STACK WITHOUT @@   FEB  16 ArDean Leith
C	        'TT' NOT IN MRC FILE              JUL  19 ArDean Leith
C	         MRC FILE SUPPORT                 OCT  19 ArDean Leith
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2019  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   UTIL1(MAXDIM,IRTRET)
C
C   PURPOSE:    ORIGINALLY, DRIVER FOR ROUTINES REQUIRING A SINGLE FILE
C
C   PARAMETERS: MAXDIM     MAX LENGTH OF COMMON BUFFER
C               IRTRET     ERROR RETURN FLAG
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

        SUBROUTINE UTIL1(MAXDIM,IRTRET)

	INCLUDE 'CMBLOCK.INC' 
	INCLUDE 'CMLIMIT.INC' 

        INTEGER                    :: MAXDIM,IRTRET

        LOGICAL                    :: IS_MRC
        INTEGER                    :: MAXIM,MAXIM2,IDUM

        INTEGER                    :: ICOMM,MYPID,MPIERR 
	INTEGER, PARAMETER         :: NFUNC = 19
        CHARACTER(LEN=2)           :: FUNC(NFUNC)

        LOGICAL                    :: DOCPRNT,TERMPRNT
        CHARACTER(LEN=MAXNAM)      :: FILNAM,CLINE
        CHARACTER(LEN=1)           :: NULL = CHAR(0)
        CHARACTER(LEN=1)           :: DISP

        INTEGER                    :: NX,NY,NZ,NSEL_USED
        INTEGER                    :: IXC,IYC,IZC

 	INTEGER, PARAMETER         :: LUN1   = 8
	INTEGER, PARAMETER         :: LUN2   = 12
	INTEGER, PARAMETER         :: LUN3   = 7
	INTEGER, PARAMETER         :: LUN4   = 9
	INTEGER, PARAMETER         :: LUN5   = 13
	INTEGER, PARAMETER         :: LUNDOC = 80
	INTEGER, PARAMETER         :: LUNXM  = 81
       
C       DATA FUNC/'DE', 'DU', 'FI', 'HI', 'LI', 
C     &           'MO', 'PK', 'RA', 'RN', 'TT', 
C     &           'ST', 'TF', 'FS', 'CA', 'GR', 
C     &           'CG', 'CV', 'CL', 'HD'/

      IRTRET  = 0
      IRTFLG  = 0

      MAXIM   = 0
      MAXIM2  = 0

      CALL SET_MPI(ICOMM,MYPID,MPIERR)  ! SET MYPID

C     NUMBER OF COMMAND LINE REGISTERS
      CALL REG_GET_USED(NSEL_USED)


      SELECT CASE(FCHAR(1:2))

      CASE ('20') ! ---------------------------------------------- 'HIS'
        CALL HISTOG()
        RETURN


      CASE ('DE') ! ----------------------------------------------- 'DE'
        CALL DELETF(FILNAM,LUN1)
        RETURN
C       DO NOT USE GOTO 9000 HERE AS IT CAUSES DOUBLE CLOSING ERROR

      CASE ('DU') ! ----------------------------------------------  'DU'

C       OPEN INPUT FILE, NO FOURIER INPUT ALLOWED 
 	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &             NX,NY,NZ,
     &             MAXIM,'OVERWRITES INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

C       DETERMINE HSIG & HMODE
        CALL HIST(LUN1,0,0,NX,NY,NZ,HMIN,HMAX,HSIG,HMODE)

C       REMOVE OUT-LIERS
        CALL DUST(LUN1,NX,NY,NZ,HSIG,HMODE,IRTFLG)

	GOTO 9000

      CASE ('FI') ! ----------- FILE INFO ------------------------ 'FI'
                                       
        IF (FCHAR(4:4) == 'A') THEN

C	   FILE INFO FOR MULTIPLE FILES
           CALL FILERD(FILNAM,NLETI,NULL,'INPUT',IRTFLG)
           IF (IRTFLG == -1) GOTO 9000
           CALL FILGEN(FILNAM,NLETI,LUN1)

        ELSEIF (FCHAR(4:4) == 'C') THEN ! -------------------- 'FI CEN'

C	   FIND CENTER OF FILE 
C          OPEN INPUT FILE, NO FOURIER INPUT ALLOWED 
 	   CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &                  NX,NY,NZ,
     &                  MAXIM,'INPUT',.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000

           CALL FINDFILCEN(ITYPE,NX,NY,NZ, IXC,IYC,IZC,IRTFLG)

           IF (ITYPE == 1) THEN
              WRITE(NOUT,'(A,I0,A,I0,A)'),
     &                   '  IMAGE CENTER: (',IXC,',',IYC,')'
           ELSEIF (ITYPE == 3) THEN
              WRITE(NOUT,'(A,I0,A,I0,A,I0,A)'),
     &                   ' VOLUME CENTER: (',IXC,',',IYC,',',IZC,')'
           ENDIF

           IF (NSEL_USED > 0) THEN
C              OUTPUT TO SPIDER'S REGISTERS
               CALL REG_SET_NSEL(1,3, 
     &            FLOAT(IXC),FLOAT(IYC),FLOAT(IZC),0,0,IRTFLG)
           ENDIF

        ELSEIF (FCHAR(4:4) == 'H')  THEN ! --------------------- 'FI H'
C          RETRIEVE HEADER VARIABLE CONTENTS FROM SINGLE FILE 
           MAXIM = 2   ! ALLOWS QUERY ON STACK HEADER
C          USE ~7 TO ALLOW STACK HEADER ACCESS
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &         NX,NY,NZ,
     &         MAXIM,'INPUT~7',.TRUE.,IRTFLG)

          IF (IRTFLG .NE. 0) THEN
C             FILE NOT FOUND
              CALL ERRT(101,'OPENING FILE',IDUM)
              GOTO 9000 
          ENDIF
          CALL INQUIREHEAD(LUN1,NX,NY,NZ,IRTFLG)

        ELSEIF (FCHAR(4:4) == 'N') THEN !  --------------------- 'FI N'

C	   FILE INFO FOR SINGLE FILE, NO ERROR STOP IF NOT FOUND
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'Z',ITYPE,
     &             NX,NY,NZ,
     &             MAXIM,'INPUT',.TRUE.,IRTFLG)

           IF (IRTFLG .NE. 0) THEN
C             FILE NOT FOUND, ZERO REG. FOR NX, NY ...
              CALL REG_SET(1,0.0,NULL,IRTFLG)
              CALL REG_SET(2,0.0,NULL,IRTFLG)
              CALL REG_SET(3,0.0,NULL,IRTFLG)
              CALL REG_SET(4,0.0,NULL,IRTFLG)
              CALL REG_SET(7,0.0,NULL,IRTFLG)
           ENDIF

           CALL LUNGETIS_MRC(LUN1,IS_MRC,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000
           IF (IS_MRC) THEN
             CALL FILDAT_MRC(LUN1,NX)
           ELSE
             CALL FILDAT(LUN1,NX)
           ENDIF
 
        ELSEIF (FCHAR(4:4) == 'T') THEN !  --------------------- 'FI T'
C          TEST OF FILENAME SUBSTITUTION MECHANISM

           CALL FILERD(FILNAM,NLET1,NULL,'TEST FILE NAME',IRTFLG)
           IF (IRTFLG == -1) RETURN

           IRTFLG = -999
           CALL RDPRMC(CLINE,NLET2,.TRUE.,'CORRECT NAME',
     &                 NULL,IRTFLG)
           IF (IRTFLG == 0 .AND. 
     &        FILNAM(1:NLET1) .NE. CLINE(1:NLET2)) THEN
              WRITE(NOUT,*) '*** ERROR IN FILENAME FORMATION!!!'
              WRITE(NOUT,9065) FILNAM(1:NLET1),CLINE(1:NLET2)
9065          FORMAT( '*** GOT: ',A,' -- SHOULD BE: ',A/)
              CALL ERRT(100,'UTIL1',NE)
           ENDIF

        ELSE !  -------------------------------------------------- 'FI'

C	   FILE INFO FOR SINGLE FILE, ERROR IF NOT FOUND
           CALL FILERD(FILNAM,NLETI,NULL,'INPUT',IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000
           IF (FILNAM(1:1) == '?') THEN
C             OLD FASHIONED "FR" SETTING
              WRITE(NOUT,*) 
     &          '*** OBSOLETE: PLEASE USE OPERATION <FR> NOW'
              IRTRET = 1
              BACKSPACE(NIN)
              IBCNT = IBCNT - 1
              RETURN
           ENDIF
           ILOCAT = INDEX(FILNAM,'@@') 
           IF (FCHAR(4:4) == '[' .AND. ILOCAT == NLETI) THEN
C             NEED HEADER LOCATION
              MAXIM = 2
           ENDIF
           IF (FCHAR(4:4) == 'X' .AND. ILOCAT == NLETI) THEN
C             NEED HEADER LOCATION
              MAXIM = 2
           ENDIF
           CALL OPFILEC(0,.FALSE.,FILNAM,LUN1,'O',ITYPE,
     &                 NX,NY,NZ,MAXIM,' ',.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000

           CALL LUNGETIS_MRC(LUN1,IS_MRC,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000
           IF (IS_MRC) THEN
             CALL FILDAT_MRC(LUN1,NX)
           ELSE
             CALL FILDAT(LUN1,NX)
           ENDIF
        ENDIF
        GOTO 9000

      CASE ('HI') ! -------------- HISTOGRAM --------------------- 'HI'

        IF (FCHAR(4:6) == 'DOC')  THEN
          CALL ERRT(101,"USE OPERATION: 'HD'",IDUM)
          GOTO  9000
        ENDIF


C       OPEN INPUT FILE, FOURIER NOT ALLOWED 
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE1,
     &             NX1,NY1,NZ,
     &             MAXIM,'INPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

        IF (FCHAR(4:4) == 'E') THEN
C          ENTROPY HISTOGRAM
           CALL ENTROP(LUN1,NX1,NY1,NZ,ENTROPY,IRTFLG)

        ELSEIF (FCHAR(4:4) == 'J') THEN
C          JOINT HISTOGRAM FOR MUTUAL SHARED INFORMATION

C          MAKE SURE STATISTICS ARE CURRENT
           FMIN1 = FMIN
           FMAX1 = FMAX
           IF (IMAMI .NE. 1 .AND. ITYPE1 >= 0) 
     &        CALL NORM3(LUN1,NX1,NY1,NZ,FMAX1,FMIN1,AV)

C          OPEN SECOND INPUT FILE, FOURIER ALLOWED 
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'O',ITYPE2,
     &           NX2,NY2,NZ2, 
     &           MAXIM2,'SECOND INPUT',.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 8999

           CALL SIZCHK(UNUSED,NX1,NY1,NZ, 0,
     &                        NX2,NY2,NZ2,0,IRTFLG) 
           IF (IRTFLG .NE. 0) GOTO 8999 

C          MAKE SURE STATISTICS ARE CURRENT
           FMIN2 = FMIN
           FMAX2 = FMAX
           IF (IMAMI .NE. 1.AND. ITYPE1 >= 0) 
     &        CALL NORM3(LUN2,NX2,NY2,NZ2,FMAX2,FMIN2,AV)

           IF (ITYPE1 >= 0) THEN
C             NOT FOURIER
              CALL RDPRI1S(NBINS,NOT_USED,
     &           'NUMBER OF BINS IN HISTOGRAM',IRTFLG)
              IF (NBINS < 1) THEN
                  CALL ERRT(1,'UTIL1',IDUM)
                  GOTO 8999 
              ENDIF

              WRITE(NOUT,*)' FIRST IMAGE RANGE:  ',FMIN1,'.....',FMAX1
              WRITE(NOUT,*)' SECOND IMAGE RANGE: ',FMIN2,'.....',FMAX2
              VMIN = MIN(FMIN1,FMIN2)
              VMAX = MAX(FMAX1,FMAX2)
              CALL RDPRM2S(VMIN,VMAX,NOT_USED,
     &                     'HISTOGRAM RANGE',IRTFLG)
              IF (IRTFLG .NE. 0) RETURN

              CALL JOHIST(LUN1,LUN2,NX1,NY1,NZ,NBINS,
     &                   FMIN1,FMAX1,FMIN2,FMAX2,VMIN,VMAX,IRTFLG)
           ELSE
C             FOURIER
              NBINSA = 128
              NBINSP = 360
              CALL RDPRIS(NBINSA,NBINSP,NOT_USED,
     &           'NUMBER OF AMPLITUDE & PHASE BINS IN HISTOGRAM',
     &            IRTFLG)
              IF (NBINSA < 1 .OR. NBINSP < 1) THEN
                  CALL ERRT(1,'UTIL1',IDUM)
                  GOTO 8999 
              ENDIF

              CALL JOHISTF(LUN1,LUN2,NX1,NY1,NZ,
     &                     NBINSA,NBINSP,IRTFLG)
           ENDIF
           GOTO 8999

        ELSEIF (FCHAR(4:4) .NE. 'M') THEN
C          NORMAL HISTOGRAM
           CALL HIST(LUN1,0,LUN2,NX1,NY1,NZ,HMIN,HMAX,
     &               HSIG,HMODE)
        ELSE
C          HISTOGRAM UNDER MASK --------------------------------- 'HI M'
           IFORM1 = IFORM
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'O',ITYPE,
     &                  NX2,NY2,NZ2,MAXIM2,
     &                 'MASK',.FALSE.,IRTFLG)
           IFORM2 = IFORM
           IF (IRTFLG .NE. 0) GOTO 9000

C          IMAGES NUST HAVE SAME DIMENSIONS
           CALL SIZCHK(UNUSED,NX1,NY1,NZ, IFORM1,
     &                        NX2,NY2,NZ2,IFORM2,IRTFLG) 
           IF (IRTFLG .NE. 0) GOTO 9000 

           CALL HIST(LUN1,LUN2,LUN3,NX1,NY1,NZ,HMIN,HMAX,
     &               HSIG,HMODE)
           CLOSE(LUN2)
        ENDIF
	GOTO 9000
    
      CASE ('HD') ! --- HISTOGRAM OF A DOCUMENT FILE COLUMN ------ 'HD'

20      CALL HISD(LUN3)
        CLOSE(LUN3)
	GOTO 9000
    
      CASE ('LI') ! ---------------------------------------------  'LI'

C       CHECK FOR 'LI R' WHICH DOES NOT USE INPUT FILE JUST REGISTERS
5       IF (FCHAR(4:4) == 'R') THEN
C          FOR 'LI R', 'LI RT',  'LI RD' (listregs.f)
           CALL ERRT(101,'OBSOLETE OPERATION',NE)
           GOTO 9000

        ELSEIF (FCHAR (4:5) == '2D') THEN
C          UNDOCUMENTED COMMAND 'LI 2D' CALLED LISTIM
           CALL ERRT(101,'OBSOLETE OPERATION',NE)
           GOTO 9000
         ENDIF

C       NEED INPUT FILE, USE ~7 TO ALLOW STACK HEADER ACCESS
        DISP = 'O'
        IF (FCHAR(4:4) == 'T') DISP = 'Z'
 
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,DISP,ITYPE,
     &              NX,NY,NZ,
     &              MAXIM,'INPUT~7',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        DOCPRNT  = (FCHAR(4:4) == 'D') 
        TERMPRNT = (FCHAR(4:4) == 'T') 
 
        IF (NSEL_USED > 0 .AND. .NOT. TERMPRNT .AND. .NOT. DOCPRNT) THEN
C          SINGLE NUMBER (REGISTER) OPTION:
           CALL LISTITR(FILNAM,LUN1,NX,NY,NZ)
        ELSE
           CALL LISTIT(FILNAM,LUN1,NX,NY,NZ,DOCPRNT,TERMPRNT)
        ENDIF

        GOTO 9000

      CASE ('MO') ! ---------------- MODEL ----------------------- 'MO'
6	NX2  = 0
	NY2  = 0
	NZ = 1
	IFORM  = 1
	IF (FCHAR(4:4) == '3') THEN
	   NZ = 0
	   IFORM  = 3
	ENDIF
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'U',IFORM,
     &             NX2,NY2,NZ,
     &             MAXIM,'OUTPUT',.TRUE.,IRTFLG)

	IF (IRTFLG .NE. 0 .AND. FILNAM(1:1) .NE. '*') GOTO 9000

	IF (FCHAR(4:4) == '3') THEN
           IF (FCHAR(5:5) == 'H') THEN 
               CALL ERRT(101,'OBSOLETE OPERATION',IDUM)
               GOTO 9000 
           ELSE
C             FOR 'MO 3'
              CALL MODEL3(LUN1,LUN2,FILNAM,NX2,NY2,NZ)
              CLOSE(LUN2)
           ENDIF
        ELSE
C          FOR 'MO'
           !!write(3,*) ' in util1,   irtflg!!!!!!:',irtflg
           CALL MODEL(LUN1,NX2,NY2)
	ENDIF
        GOTO 9000
           
      CASE ('PK') ! ---------------- PEAK SEARCH ----------------- 'PK'

 	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &               NX1,NY1,NZ1,
     &              MAXIM,'INPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        FMAX1 = FMAX
	IF (FCHAR(4:4) == 'M') THEN
           IF (IMAMI.NE.1)
     &     CALL NORM3(LUN1,NX1,NY1,NZ1,FMAX1,FMIN1,AVR1)

           CALL SPEAKM(LUN1,NX1,NY1,NZ1,FMAX1)

        ELSEIF (FCHAR(4:4) == '3') THEN
           CALL SPEAK3(LUN1,NX1,NY1,NZ1,FCHAR(5:5),LUNDOC)
	
        ELSE
            CALL RDPRMI(ML,NOR,NOT_USED,
     &        'NUMBER OF PEAKS, CENTER ORIGIN OVERRIDE (0/1)')
           IF (ML < 1)   ML = 1

           IF (FCHAR(4:4) == 'C' .OR. FCHAR(5:5) == 'C') THEN
             CALL SPEAKC(FILNAM,LUN1,NX1,NY1,MAXDIM,FCHAR(4:4),
     &                   LUNDOC,ML,NOR)
     
           ELSEIF ( FCHAR(5:5) == 'R') THEN
             CALL SPEAKR(FILNAM,LUN1,NX1,NY1,MAXDIM,FCHAR(4:4),
     &                   LUNDOC,ML,NOR)  
             
           ELSE
             CALL SPEAK(FILNAM,LUN1,NX1,NY1,MAXDIM,FCHAR(4:4),
     &                   LUNDOC,ML,NOR)
           ENDIF
        ENDIF
        GOTO 9000
     

      CASE ('RA') ! ------------- RAMP --------------------------- 'RA'

        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &              NX,NY,NZ,
     &              MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        IF (ITYPE  .NE. 1) THEN
   	   CALL ERRT(101,'OPERATION ONLY WORKS ON IMAGES',NE)
           GOTO 9001
        ENDIF 

        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,
     &              NX,NY,NZ,
     &              MAXIM2,'OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

        CALL  RAMP_P(LUN1,LUN2,NX,NY,NOUT)
	GOTO 8999
            
      CASE ('RN') ! ---------------- RENAME ---------------------- 'RN'

        CALL ERRT(101,'OBSOLETE OPERATION',NE)
	GOTO 9001


      CASE ('TT') !   -----------CHANGE TITLE--------------------- 'TT'


        IF (FCHAR(4:4) == 'C') THEN
C          OPEN THE FILE THAT CONTAINS DESIRED TITLE
	   CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &                  NX1,NY1,NZ1,
     &                  MAXIM,'TITLE SOURCE',.TRUE.,IRTFLG)
	   IF (IRTFLG .NE. 0) GOTO 9001
        ENDIF

C       OPEN THE FILE THAT RECEIVES TITLE 
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'O',ITYPE,
     &               NX1,NY1,NZ1,
     &               MAXIM,'OUTPUT',.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 9000

        CALL LUNGETIS_MRC(LUN2,IS_MRC,IRTFLG)
        IF (IS_MRC) THEN
          CALL ERRT(101,'NO TITLE IN MRC FILES',IDUM)
          IRTRET = 1
          RETURN
        ENDIF

C       GET NEW TITLE HERE 
        IF (FCHAR(4:4) == 'C') THEN
           CALL LUNGETTITLE(LUN1,CTIT,LENTIT,IRTFLG)
        ELSE
           CALL RDPRMC(CTIT,LENTIT,.FALSE.,'NEW TITLE',NULL,IRTFLG)
        ENDIF
	IF (IRTFLG .NE. 0) GOTO 9000

C	TITLE ALTERATION CAN PROCEED NOW
        CALL TITLE(LUN2,CTIT,LENTIT,.TRUE.,IRTFLG)
        CLOSE(LUN2)
	GOTO 9000

      CASE ('ST') !  ------ SET BUFFER LOCATIONS ----------------- 'ST'

C       DISP OF "Z" ALLOWS  CORRECTING STACK ERROR

        IF (FCHAR(4:4) == 'H')  THEN  
C          SET HEADER VARIABLES IN FILE, SELECT BY NAME

           MAXIM = 2   ! ALLOWS OPENING OVERALL STACK HEADER
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'Z',ITYPE,
     &             NX,NY,NZ,
     &             MAXIM,'SET HEADER VALUES IN',.TRUE.,IRTFLG)


C          SET HEADER VARIABLES IN FILE, IRTFLG==5 IS TO ALLOW IMGNUM CHANGE 

           IF (IRTFLG == 0 .OR. IRTFLG == 5) THEN
              CALL SETHEAD(LUN1,NX,NY,NZ,IRTFLG)    ! MRC OK
           ENDIF

        ELSEIF (FCHAR(4:4) == 'E')  THEN  
C          CORRECT BAD EM2EM HEADER VARIABLES IN FILE
           MAXIM = 2   ! ALLOWS OPENING OVERALL STACK HEADER
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'Z',ITYPE,
     &             NX,NY,NZ,
     &             MAXIM,'FIX STACKED IMAGE HEADER VALUES IN',
     &            .TRUE.,IRTFLG)

           CALL LUNGETIS_MRC(LUN1,IS_MRC,IRTFLG)
           IF (IS_MRC) THEN
             CALL ERRT(101,'NOT RELEVENT FOR MRC FILES',IDUM)
             IRTRET = 1
             RETURN
           ENDIF

C          CORRECT BAD EM2EM HEADER VARIABLES IN FILE
           CALL SETHEADEM2(LUN1,NY,IRTFLG)    ! MRC WAS ERRT

        ELSE
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'Z',ITYPE,
     &               NX,NY,NZ, 
     &               MAXIM,'INPUT~7',.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

C  	   SET LABEL VALUES TO SOLICITED INPUT
           CALL SETVAL(LUN1,NX,NY,NZ)    ! MRC OK
        ENDIF
        GOTO 9000

      CASE ('18') ! ------------DETERMINE DEFOCUS --------------- 'CTF'

        LENF     = LNBLNK(FCHAR(4:))
        LENCOMMA = INDEX(FCHAR(4:4+LENF-1),',')
        IF (LENCOMMA > 1) LENF = LENCOMMA-1
        LENBLANK = INDEX(FCHAR(4:4+LENF-1),' ')
        IF (LENBLANK > 1) LENF = LENBLANK-1

        SELECT CASE(FCHAR(4:4+LENF-1))

          CASE ('F','FI','FIN','FIND')
             CALL CTFFIND3()
	     	     
          CASE ('E','ED')
             CALL CTFED()

          CASE DEFAULT
             CALL ERRT(101,'UNIDENTIFIED OPERATION',IDUM)
        END SELECT
        GOTO 9000


      CASE ('TF') ! ------------TRANSFER FUNCTION ---------------- 'TF'

        LENF     = LNBLNK(FCHAR(4:))
        LENCOMMA = INDEX(FCHAR(4:4+LENF-1),',')
        IF (LENCOMMA > 1) LENF = LENCOMMA-1
        LENBLANK = INDEX(FCHAR(4:4+LENF-1),' ')
        IF (LENBLANK > 1) LENF = LENBLANK-1

        SELECT CASE(FCHAR(4:4+LENF-1))

          CASE ('D')
             CALL TRAFD(LUN1)

          CASE ('C3')
             !write(6,*) ' calling: TRAFC3  C  '
             CALL TRAFC3(LUN1,.FALSE.)

          CASE ('COR','CO')
             CALL RCTFONE(LUN1) 

          CASE ('CRF','CR')
             CALL TFCRF

          CASE ('CT3')
             !write(6,*) ' Calling: TRAFC3  CT '
             CALL TRAFC3(LUN1,.TRUE.)

          CASE ('CTS')
             CALL RCTFSS(LUN1,LUN2)  
	  	   
          CASE ('CT')
             !write(6,*) ' Calling: TRAFC  CT'
             CALL TRAFC(LUN1,.TRUE.)

          CASE ('C')
             !write(6,*) ' Calling: TRAFC  C'
             CALL TRAFC(LUN1,.FALSE.)

          CASE ('DDF','DD')
             CALL DEFOCUS(IRTFLG)

          CASE ('DEV','DE')
             CALL ENVELOPE(IRTFLG)

          CASE ('DNS','DN')
             CALL NOISE(LUN1,LUN2)

          CASE ('ED')
             CALL TFED

          CASE ('F','FI','FIN','FIND')
             CALL CTFFIND3()
	     	     
          CASE ('L','LIS')
             CALL TRAFL
          
         CASE ('LM4','LM')
             CALL TFLM4
	        
          CASE ('RCTF','R','RC','RCT')
             CALL ERRT(101,'UNDOCUMENTED OPERATION REMOVED 2014',NE)

          CASE ('SIM','SI')
	     CALL TRAFSIM(LUN1)   
   
          CASE ('SNR','SN')
            CALL TFSNR

          CASE DEFAULT
             CALL TRAF(LUN1)
        END SELECT
        GOTO 9000

      CASE ('FS') ! ------------- FILE STATISTICS ---------------- 'FS'


        SELECT CASE(FCHAR(4:4))

          CASE ('V')
            CALL FINDMINSORMAXS(LUN1,LUNDOC)

          CASE ('L')
            CALL QSTATLOC(LUN1,LUNDOC,LUNXM)

          CASE DEFAULT
            !write(6,*) ' In util1 - lun1,lun2:',lun1,lun2
            CALL QSTAT(LUN1,LUN2,LUNDOC,LUNXM)
            CLOSE(LUN2)

        END SELECT
	GOTO 9000

      CASE ('CA') !  ------------ CLUSTER ANALYSIS   ------------- 'CA'

        IENDOP2 = INDEX(FCHAR(4:),' ') - 1 + 4

        SELECT CASE(FCHAR(4:IENDOP2))

          CASE ('S')
C            FACTOR MAP CALCULATION
 	     CALL JPMSK1()

          CASE ('SM','SME')
C            FACTOR MAP PLOT
             CALL SGRAF(LUN1,LUN2,LUN3,LUN4)
             CLOSE(LUN2)

          CASE ('SMI')
C            INACTIVE FACTOR MAP PLOT
             CALL JPMSK3(LUN1,LUN2,LUN3,LUN4,LUN5)

          CASE ('SR', 'SRD', 'SRI', 'SRA', 'SRE')
C            IMAGE RECONSTITUTION
 	     CALL JPMSK2(LUN1,LUN2,LUN3,LUN4,LUN5)
             CLOSE(LUN3)
             CLOSE(LUN4)
             CLOSE(LUN5)

          CASE ('EIGPCT','NOISE','NOIS','EIG','NOI','NO','N')
C            COPY EIG % TO DOC FILE
 	     CALL EIGPERCENT()

          CASE ('VIS')
C            VISUAL MAP CREATION
             CALL VISMAP(LUN1,LUN2,LUN3,LUN4)

          CASE DEFAULT
C            'CA E', 'CA ES', removed PAP 10/05/99
             CALL ERRT(101,'UNIDENTIFIED OPERATION',IDUM)

        END SELECT
        GOTO 8999

      CASE ('GR') ! --------- GRAPH A ROW IN RESULTS FILE  -------- 'GR'

16      CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
     &         NX1,NY1,NZ, MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000 

	CALL GRAPHP(LUN1,NX1,NY1)
	GOTO 9000

      CASE ('CG') ! ------------ CENTER OF GRAVITY ---------------- 'CG'

C       3-D CENTER OF GRAVITY AND RADIUS OF GYRATION

17	IF (FCHAR(4:4) == 'S' .OR. FCHAR(4:5) == 'PH') THEN
          CALL FINDCENT()
	  GOTO 9001
        ENDIF

	CALL CENGR3(LUN1)
	GOTO 9000      

      CASE ('CV') ! ---------------------------------------------- 'CV'

C       POCS PROGRAMS (06/05/90), MODULAR POCS PROGRAMS: (12/5/91) M.R.

        IF (FCHAR(4:8) == 'REPL2') THEN 
C          tdfrepl uses old Fourier format and was disabled
           CALL ERRT(101,'OBSOLETE OPERATION',NE)
C	   CALL TDFREPL(LUN1,LUN2,LUN3)
        ELSE
           CALL MRREPLACE(LUN1,LUN2)
        ENDIF
        GOTO 9000


      CASE ('CL') ! ---------------------------------------------- 'CL'

        SELECT CASE (FCHAR(4:5))

           CASE('KM')      ! KMEANS CLUSTERING 
           CALL SUBKMNS(LUN1,LUN2)

           CASE('HC')      ! HIERARCHICAL CLUSTERING 
           CALL HCLS(LUN1,LUN2,LUN3)

           CASE('HD')      ! HIERARCHICAL CLUSTERING, CALCULATE CLASSES 
   	   CALL HDLS(LUN1,LUN2)

           CASE('HE')      ! HIERARCHICAL CLUSTERING, CREATE DOC FILE
           CALL HELS(LUN1,LUN2)

           CASE('CL')      ! HIERARCHICAL CLUSTERING 
           CALL SCLASSI(LUN1,LUN2,LUN3)

           CLOSE(LUN3)

        END SELECT
        RETURN

      END SELECT

C       -------------------------------------------------------- END
8999  CLOSE(LUN2)
9000  CLOSE(LUN1)
9001  CONTINUE

      END
@


1.154
log
@email_health_dept
@
text
@d4 48
a51 46
C    UTIL1.F   TITLE PROCESSING MODIFIED          NOV  87 ARDEAN LEITH
C              LONG FILE NAMES ADDED              DEC  88 ARDEAN LEITH
C	       ALTERED                            4/21/93 MAHIEDDINE LADJADJ
C	       ALTERED                            8/25/93 JING SU
C	       LI COMMAND REWRITTEN               8/30/96 ARDEAN LEITH
C	       TT COMMAND REWRITTEN               6/28/97 ARDEAN LEITH
C              ST PARAMETERS ALTERED              SEP  98 ARDEAN LEITH
C              'TT COP' ADDED                     JUN  99 ARDEAN LEITH
C              'CA SM' ALTERED                    AUG  99 ARDEAN LEITH
C              'TF CTS' ALTERED                   NOV  00 HAIXIAO GAO
C              'TF CTF' REMOVED                   JAN  01 ARDEAN LEITH
C              'TF CRF' ADDED                     JAN  11 PAUL PENCZEK
C              'TF ECTF' ADDED                    JUL  31 PAUL PENCZEK
C              'TF ECTF' --> 'TF ED'              JUN  02 BILL BAXTER
C              'HI E' ADDED                       FEB  03 ARDEAN LEITH
C              OPFILEC                            FEB  03 ARDEAN LEITH
C              'HI J' ADDED                       MAR  03 ARDEAN LEITH
C              'PK DR' ADDED                      MAR  03 BIMAL RATH
C              'CA' REWRITE                       SEP  03 ARDEAN LEITH
C              'TF EA' REMOVED                    NOV  03 PAUL PENCZEK
C              'TF ED' REPLACED                   NOV  03 PAUL PENCZEK
C              'CA SMI' ADDED                     JAN  04 ARDEAN LEITH
C              'HI J' VMIN, VMAX                  FEB  04 ARDEAN LEITH
C               TRAFC & TRAFCT MERGED             MAR  04 ARDEAN LEITH
C               ~7 REPLACES IRTFLG                APR  04 ARDEAN LEITH
C               'PK 3R'                           NOV  04 ARDEAN LEITH
C               'TF SIM' ADDED                    NOV  07 BIMAL RATH 
C               'TF LM4'ADDED                     MAR  06 ZHONG  HUANG 
C               'HI DOC' DUPLICATES HI D          MAR  06 ARDEAN LEITH 
C               'FI H' ON STACK HEADER            OCT  10 ARDEAN LEITH 
C               'TF COR'                          NOV  10 ARDEAN LEITH 
C               'FI H' INQUIREHEAD ARGS           NOV  10 ARDEAN LEITH 
C               'ST H'                            NOV  10 ARDEAN LEITH 
C	        'FI H' NO FILE BUG                JAN  11 ARDEAN LEITH
C	        CASE                              JAN  11 ARDEAN LEITH
C	        'CTF FIND'                        MAY  12 ARDEAN LEITH
C	        'CTF ED'                          JUN  12 ARDEAN LEITH
C	        'CA EIGPCT'                       JAN  13 ARDEAN LEITH
C	        'FI' PROMPT SHORTENED             JUN  13 ARDEAN LEITH
C               'TF RCTF' REMOVED                 JAN  14 ARDEAN LEITH
C               'LI T x' ADDED                    AUG  14 ARDEAN LEITH
C               'ST H' KLUDGE FOR BAD EM2EM STACK AUG  14 ARDEAN LEITH
C               CALL NOISE PARAMETERS             NOV  14 ARDEAN LEITH
C	        'FI CEN' ADDED                    DEC  14 ARDEAN LEITH
C	        'TF C?' MERGERS                   NOV  15 ARDEAN LEITH
C	        'FI H' CAN OPEN STACK WITHOUT @@   FEB  16 ARDEAN LEITH
d55 2
a56 2
C=* SPIDER System Authors:  Joachim Frank & ARDEAN LEITH               *
C=* Copyright 1985-2016  Health Research Inc.,                         *
d79 1
d89 6
d125 1
a125 1
      CALL SET_MPI(icomm,mypid,mpierr)  ! SET MYPID
d127 1
d215 1
a215 4
           IF (IRTFLG == 0) THEN
C             FILE FOUND
              CALL FILDAT(LUN1,NX)
           ELSE
d224 8
d274 9
a282 1
           IF (IRTFLG == 0) CALL FILDAT(LUN1,NX)
d442 1
d456 1
d518 1
a518 1
      CASE ('RN') ! ----------------- RENAME ---------------------- 'RN'
d526 1
d537 2
a538 2
     &              NX1,NY1,NZ1,
     &             MAXIM,'OUTPUT',.TRUE.,IRTFLG)
d541 7
d566 2
d573 1
d577 1
a577 1
              CALL SETHEAD(LUN1,NX,NY,NZ,IRTFLG)
d581 1
d588 7
d596 1
a596 1
           CALL SETHEADEM2(LUN1,NY,IRTFLG)
d605 1
a605 1
           CALL SETVAL(LUN1,NX,NY,NZ)
d716 1
@


1.153
log
@CALL REG_GET_USED at top
@
text
@d56 1
a56 1
C=* Email: spider@@wadsworth.org                                        *
@


1.152
log
@'FI H' CAN OPEN STACK WITHOUT @@
@
text
@d94 1
a94 1
        INTEGER                    :: NX,NY,NZ
d118 1
a397 1
        CALL REG_GET_USED(NSEL_USED)
@


1.151
log
@logic for selecting 'TF LIS' fixed
@
text
@d49 1
d54 1
a54 1
C=* Copyright 1985-2015  Health Research Inc.,                         *
d185 1
d188 1
a188 1
     &         MAXIM,'INPUT',.TRUE.,IRTFLG)
@


1.150
log
@merged trafc3.f and trafct3.f
@
text
@d638 1
a638 1
          CASE ('L')
@


1.149
log
@fi cen output added
@
text
@d48 1
d53 1
a53 1
C=* Copyright 1985-2014  Health Research Inc.,                         *
a597 3
          CASE ('C')
             CALL TRAFC(LUN1,.FALSE.)

d599 2
a600 1
             CALL TRAFC3(LUN1)
a607 3
          CASE ('CT')
             CALL TRAFC(LUN1,.TRUE.)

d609 2
a610 1
             CALL TRAFCT3(LUN1)
d615 8
@


1.148
log
@added 'FI CEN'
@
text
@d155 1
a155 1
        ELSEIF (FCHAR(4:4) == 'C') THEN
d165 8
@


1.147
log
@added findminsormaxs call for 'FS V'
@
text
@d47 1
d93 1
d148 1
a148 1
3       IF (FCHAR(4:4) == 'A') THEN
d154 17
@


1.146
log
@noise parameters
@
text
@d631 3
@


1.145
log
@added 'FS LOC' op
@
text
@d46 1
d598 1
a598 1
             CALL NOISE(IRTFLG)
@


1.144
log
@SETHEADEM2 added
@
text
@d627 11
a637 2
        CALL QSTAT(LUN1,LUN2,LUNDOC,LUNXM)
        CLOSE(LUN2)
@


1.143
log
@'ST H' KLUDGE FOR BAD EM2EM STACK.
@
text
@d82 1
a82 1
	INTEGER, PARAMETER         :: NFUNC=19
d84 2
a86 1
        LOGICAL                    :: DOCPRNT,TERMPRNT
d88 1
d202 1
a202 1
        ELSE !  ------------------------------------------------- 'FI'
d283 2
a284 2
              WRITE(NOUT,*) ' FIRST IMAGE RANGE:  ',FMIN1,'.....',FMAX1
              WRITE(NOUT,*) ' SECOND IMAGE RANGE: ',FMIN2,'.....',FMAX2
d287 2
a288 1
              CALL RDPRM2S(VMIN,VMAX,NOT_USED,'HISTOGRAM RANGE',IRTFLG)
d347 6
a352 1
        ENDIF
d355 4
a358 1
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
d363 7
a369 4
        IF (FCHAR (4:5) == '2D') THEN
C          UNDOCUMENTED COMMAND 'LI 2D' CALLED LISTIM
           CALL ERRT(101,'OBSOLETE OPERATION',NE)

d371 1
a371 11
           DOCPRNT  = (FCHAR(4:4) == 'D') 
           TERMPRNT = (FCHAR(4:4) == 'T') 
 
           CALL REG_GET_USED(NSEL_USED)
           IF (NSEL_USED > 0 .AND.
     &         .NOT. TERMPRNT .AND. .NOT. DOCPRNT) THEN
C             SINGLE NUMBER (REGISTER) OPTION:
              CALL LISTITR(FILNAM,LUN1,NX,NY,NZ)
           ELSE
              CALL LISTIT(FILNAM,LUN1,NX,NY,NZ,DOCPRNT,TERMPRNT)
           ENDIF
d373 1
d500 1
d513 11
a523 1
       ELSE
@


1.142
log
@nx, == ,  'LI T' selection logic
@
text
@d45 1
d501 5
a505 3
C          SET HEADER VARIABLES IN FILE 
           IF (IRTFLG == 0) 
     &         CALL SETHEAD(LUN1,NX,NY,NZ,IRTFLG)
@


1.141
log
@hi doc
@
text
@d44 1
d69 1
a69 1
C   PURPOSE:    ORIGINALLY A DRIVER FOR ROUTINES REQUIRING ONLY ONE FILE
d87 2
d128 1
a128 1
     &             NSAM,NROW,NSLICE,
d133 1
a133 1
        CALL HIST(LUN1,0,0,NSAM,NROW,NSLICE,HMIN,HMAX,HSIG,HMODE)
d136 1
a136 1
        CALL DUST(LUN1,NSAM,NROW,NSLICE,HSIG,HMODE,IRTFLG)
d149 1
a149 1
        ELSEIF (FCHAR(4:4) == 'H')  THEN ! -------------------- 'FI H'
d153 1
a153 1
     &         NSAM,NROW,NSLICE,
d161 1
a161 1
          CALL INQUIREHEAD(LUN1,NSAM,NROW,NSLICE,IRTFLG)
d163 1
a163 1
        ELSEIF (FCHAR(4:4) == 'N') THEN !  -------------------- 'FI N'
d167 1
a167 1
     &             NSAM,NROW,NSLICE,
d172 1
a172 1
              CALL FILDAT(LUN1,NSAM)
d174 1
a174 1
C             FILE NOT FOUND, ZERO REG. FOR NSAM, NROW ...
d182 1
a182 1
        ELSEIF (FCHAR(4:4) == 'T') THEN !  -------------------- 'FI T'
d223 2
a224 2
     &                 NSAM,NROW,NSLICE,MAXIM,' ',.TRUE.,IRTFLG)
           IF (IRTFLG == 0) CALL FILDAT(LUN1,NSAM)
d238 1
a238 1
     &             NSAM1,NROW1,NSLICE,
d244 1
a244 1
           CALL ENTROP(LUN1,NSAM1,NROW1,NSLICE,ENTROPY,IRTFLG)
d253 1
a253 1
     &        CALL NORM3(LUN1,NSAM1,NROW1,NSLICE,FMAX1,FMIN1,AV)
d257 1
a257 1
     &           NSAM2,NROW2,NSLICE2, 
d261 2
a262 2
           CALL SIZCHK(UNUSED,NSAM1,NROW1,NSLICE, 0,
     &                        NSAM2,NROW2,NSLICE2,0,IRTFLG) 
d269 1
a269 1
     &        CALL NORM3(LUN2,NSAM2,NROW2,NSLICE2,FMAX2,FMIN2,AV)
d275 1
a275 1
              IF (NBINS .LT. 1) THEN
d287 1
a287 1
              CALL JOHIST(LUN1,LUN2,NSAM1,NROW1,NSLICE,NBINS,
d296 1
a296 1
              IF (NBINSA .LT. 1 .OR. NBINSP .LT. 1) THEN
d301 1
a301 1
              CALL JOHISTF(LUN1,LUN2,NSAM1,NROW1,NSLICE,
d308 1
a308 1
           CALL HIST(LUN1,0,LUN2,NSAM1,NROW1,NSLICE,HMIN,HMAX,
d314 1
a314 1
     &                  NSAM2,NROW2,NSLICE2,MAXIM2,
d320 2
a321 2
           CALL SIZCHK(UNUSED,NSAM1,NROW1,NSLICE, IFORM1,
     &                        NSAM2,NROW2,NSLICE2,IFORM2,IRTFLG) 
d324 1
a324 1
           CALL HIST(LUN1,LUN2,LUN3,NSAM1,NROW1,NSLICE,HMIN,HMAX,
d341 1
a341 1
           CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',NE)
d347 1
a347 1
     &              NSAM,NROW,NSLICE,
d353 1
a353 1
           CALL ERRT(101,'THIS OPERATION NO LONGER SUPPORTED',NE)
d356 2
a357 4
           DOCPRNT = .FALSE.
           IF (FCHAR(4:4) == 'D') DOCPRNT = .TRUE. 
           TERMPRNT = .FALSE.
           IF (FCHAR(4:4) == 'T') TERMPRNT = .TRUE.
d360 2
a361 1
           IF (NSEL_USED .GT. 0) THEN
d363 1
a363 1
              CALL LISTITR(FILNAM,LUN1,NSAM,NROW,NSLICE)
d365 1
a365 1
              CALL LISTIT(FILNAM,LUN1,NSAM,NROW,NSLICE,DOCPRNT,TERMPRNT)
d370 4
a373 4
      CASE ('MO') ! ---------------- MODEL ------------------------ 'MO'
6	NSAM2  = 0
	NROW2  = 0
	NSLICE = 1
d376 1
a376 1
	   NSLICE = 0
d380 1
a380 1
     &             NSAM2,NROW2,NSLICE,
d386 1
a386 1
               CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)
d390 1
a390 1
              CALL MODEL3(LUN1,LUN2,FILNAM,NSAM2,NROW2,NSLICE)
d395 1
a395 1
           CALL MODEL(LUN1,NSAM2,NROW2)
d402 1
a402 1
     &               NSAM1,NROW1,NSLICE1,
d409 1
a409 1
     &     CALL NORM3(LUN1,NSAM1,NROW1,NSLICE1,FMAX1,FMIN1,AVR1)
d411 1
a411 1
           CALL SPEAKM(LUN1,NSAM1,NROW1,NSLICE1,FMAX1)
d414 1
a414 1
           CALL SPEAK3(LUN1,NSAM1,NROW1,NSLICE1,FCHAR(5:5),LUNDOC)
d419 1
a419 1
           IF (ML .LT. 1)   ML = 1
d421 2
a422 2
           IF (FCHAR(4:4)== 'C' .OR. FCHAR(5:5)=='C') THEN
             CALL SPEAKC(FILNAM,LUN1,NSAM1,NROW1,MAXDIM,FCHAR(4:4),
d425 2
a426 2
           ELSEIF ( FCHAR(5:5)=='R') THEN
             CALL SPEAKR(FILNAM,LUN1,NSAM1,NROW1,MAXDIM,FCHAR(4:4),
d430 1
a430 1
             CALL SPEAK(FILNAM,LUN1,NSAM1,NROW1,MAXDIM,FCHAR(4:4),
d440 1
a440 1
     &              NSAM,NROW,NSLICE,
d443 2
a444 2
        IF (ITYPE .NE. 1)  THEN
   	   CALL ERRT(2,'RAMP',NE)
d449 1
a449 1
     &              NSAM,NROW,NSLICE,
d453 1
a453 1
        CALL  RAMP_P(LUN1,LUN2,NSAM,NROW,NOUT)
d458 1
a458 1
        CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',NE)
d462 1
a462 1
      CASE ('TT') !   -----------CHANGE TITLE---------------------- 'TT'
d467 1
a467 1
     &                  NSAM1,NROW1,NSLICE1,
d474 1
a474 1
     &              NSAM1,NROW1,NSLICE1,
d491 1
a491 1
      CASE ('ST') !  ------ SET BUFFER LOCATIONS ------------------ 'ST'
d497 1
a497 1
     &             NSAM,NROW,NSLICE,
d502 1
a502 1
     &         CALL SETHEAD(LUN1,NSAM,NROW,NSLICE,IRTFLG)
d506 1
a506 1
     &               NSAM,NROW,NSLICE, 
d511 1
a511 1
           CALL SETVAL(LUN1,NSAM,NROW,NSLICE)
d656 1
a656 1
     &         NSAM1,NROW1,NSLICE, MAXIM,'INPUT',.FALSE.,IRTFLG)
d659 1
a659 1
	CALL GRAPHP(LUN1,NSAM1,NROW1)
d680 1
a680 1
	   CALL  ERRT(41,'CV REPL2',NE)
@


1.140
log
@removed rctf.f (undocumented) 'TF RCTF'
@
text
@d228 1
a228 1
          CALL ERRT(101,"USE OPERATION: 'HD D'",IDUM)
@


1.139
log
@center
@
text
@d43 1
d48 1
a48 1
C=* Copyright 1985-2013  Health Research Inc.,                         *
d591 1
a591 1
             CALL RCTF
@


1.138
log
@driv1 --> util1
@
text
@d270 1
a270 1
     &           'ENTER NUMBER OF BINS IN HISTOGRAM',IRTFLG)
d290 1
a290 1
     &           'ENTER NUMBER OF AMPLITUDE & PHASE BINS IN HISTOGRAM',
d415 1
a415 1
     &        'ENTER NUMBER OF PEAKS, CENTER ORIGIN OVERRIDE (0/1)')
@


1.137
log
@overwrites input for du
@
text
@d192 1
a192 1
              CALL ERRT(100,'DRIV1',NE)
@


1.136
log
@for histog
@
text
@d125 1
a125 1
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
@


1.135
log
@fi prompt shortened
@
text
@d83 1
a83 1
        CHARACTER(LEN=1)           :: NULL
d85 12
a96 4
C        DATA FUNC/'DE', 'DU', 'FI', 'HI', 'LI', 
C     &            'MO', 'PK', 'RA', 'RN', 'TT', 
C     &            'ST', 'TF', 'FS', 'CA', 'GR', 
C     &            'CG', 'CV', 'CL', 'HD'/
a97 1
      NULL    = CHAR(0)
a100 9
      LUN1    = 8
      LUN2    = 12
      LUN3    = 7
      LUN4    = 9
      LUN5    = 13

      LUNDOC  = 80
      LUNXM   = 81

d107 1
d110 5
d116 1
a116 1
1       CALL DELETF(FILNAM,LUN1)
d123 1
a123 1
2	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,
d226 1
a226 1
4       IF (FCHAR(4:6) == 'DOC')  THEN
d248 1
a248 1
           IF (IMAMI .NE. 1 .AND. ITYPE1 .GE. 0) 
d264 1
a264 1
           IF (IMAMI .NE. 1.AND. ITYPE1 .GE. 0) 
d267 1
a267 1
           IF (ITYPE1 .GE. 0) THEN
d313 1
a313 6
           IF (IRTFLG == -1) THEN
              CLOSE(LUN1)
              GOTO 4
           ELSEIF (IRTFLG .NE. 0) THEN
              GOTO 9000
           ENDIF
@


1.134
log
@*** empty log message ***
@
text
@d4 2
a5 2
C    UTIL1.F   TITLE PROCESSING MODIFIED          NOV 87 ARDEAN LEITH
C              LONG FILE NAMES ADDED              DEC 88 ARDEAN LEITH
d10 2
a11 2
C              ST PARAMETERS ALTERED              SEPT 98 ARDEAN LEITH
C              'TT COP' ADDED                     JUNE 99 ARDEAN LEITH
d15 3
a17 3
C              'TF CRF' ADDED                     JAN  11 Paul Penczek
C              'TF ECTF' ADDED                    JUL  31 Paul Penczek
C              'TF ECTF' --> 'TF ED'              JUN  02 Bill Baxter
d26 2
a27 2
C              'HI J' VMIN, VMAX                  FEB  04 ArDean Leith
C               TRAFC & TRAFCT MERGED             MAR  04 ArDean Leith
d42 1
d46 1
a46 1
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
d134 1
a134 1
3       IF (FCHAR(4:4) .EQ. 'A') THEN
d137 2
a138 2
           CALL FILERD(FILNAM,NLETI,NULL,'FILE INFO. ON',IRTFLG)
           IF (IRTFLG .EQ. -1) GOTO 9000
d141 1
a141 1
        ELSEIF (FCHAR(4:4) .EQ. 'H')  THEN ! -------------------- 'FI H'
d146 1
a146 1
     &         MAXIM,'RETRIEVE HEADER VALUES FROM',.TRUE.,IRTFLG)
d155 1
a155 1
        ELSEIF (FCHAR(4:4) .EQ. 'N') THEN !  -------------------- 'FI N'
d160 1
a160 1
     &             MAXIM,'FILE INFO. ON',.TRUE.,IRTFLG)
d162 1
a162 1
           IF (IRTFLG .EQ. 0) THEN
d174 1
a174 1
        ELSEIF (FCHAR(4:4) .EQ. 'T') THEN !  -------------------- 'FI T'
d178 1
a178 1
           IF (IRTFLG .EQ. -1) RETURN
d183 1
a183 1
           IF (IRTFLG .EQ. 0 .AND. 
d191 1
a191 1
        ELSE !  --------------------------------------------------- 'FI'
d194 1
a194 1
           CALL FILERD(FILNAM,NLETI,NULL,'FILE INFO. ON',IRTFLG)
d196 1
a196 1
           IF (FILNAM(1:1) .EQ. '?') THEN
d206 1
a206 1
           IF (FCHAR(4:4) .EQ. '[' .AND. ILOCAT .EQ. NLETI) THEN
d210 1
a210 1
           IF (FCHAR(4:4) .EQ. 'X' .AND. ILOCAT .EQ. NLETI) THEN
d216 1
a216 1
           IF (IRTFLG .EQ. 0) CALL FILDAT(LUN1,NSAM)
d222 1
a222 1
4       IF (FCHAR(4:6) .EQ. 'DOC')  THEN
d234 1
a234 1
        IF (FCHAR(4:4) .EQ. 'E') THEN
d238 1
a238 1
        ELSEIF (FCHAR(4:4) .EQ. 'J') THEN
d309 1
a309 1
           IF (IRTFLG .EQ. -1) THEN
d333 1
a333 1
      CASE ('LI') ! ----------------------------------------------  'LI'
d336 1
a336 1
5       IF (FCHAR(4:4) .EQ. 'R') THEN
d348 1
a348 1
        IF (FCHAR (4:5) .EQ. '2D') THEN
d354 1
a354 1
           IF (FCHAR(4:4) .EQ. 'D') DOCPRNT = .TRUE. 
d356 1
a356 1
           IF (FCHAR(4:4) .EQ. 'T') TERMPRNT = .TRUE.
d373 1
a373 1
	IF (FCHAR(4:4) .EQ. '3') THEN
d382 2
a383 2
	IF (FCHAR(4:4) .EQ. '3') THEN
           IF (FCHAR(5:5) .EQ. 'H') THEN 
d405 1
a405 1
	IF (FCHAR(4:4) .EQ. 'M') THEN
d411 1
a411 1
        ELSEIF (FCHAR(4:4) .EQ. '3') THEN
d419 1
a419 1
           IF (FCHAR(4:4).EQ. 'C' .OR. FCHAR(5:5).EQ.'C') THEN
d423 1
a423 1
           ELSEIF ( FCHAR(5:5).EQ.'R') THEN
d462 1
a462 1
        IF (FCHAR(4:4) .EQ. 'C') THEN
d477 1
a477 1
        IF (FCHAR(4:4) .EQ. 'C') THEN
d492 1
a492 1
        IF (FCHAR(4:4) .EQ. 'H')  THEN  
d499 1
a499 1
           IF (IRTFLG .EQ. 0) 
d676 1
a676 1
        IF (FCHAR(4:8) .EQ. 'REPL2') THEN 
@


1.133
log
@*** empty log message ***
@
text
@d635 1
a635 1
          CASE ('EIGPCT','EIGPC','EIGP','EIG','EI','E')
@


1.132
log
@*** empty log message ***
@
text
@d611 3
a613 1
        SELECT CASE(FCHAR(4:))
@


1.131
log
@*** empty log message ***
@
text
@d41 1
a41 1
C	        'CA EIGDOC'                       JAN  13 ARDEAN LEITH
@


1.130
log
@*** empty log message ***
@
text
@d633 1
a633 1
          CASE ('EIGPER','EIGPE','EIGP','EIG','EI','E')
@


1.129
log
@CA EIGDOC call
@
text
@d633 1
a633 1
          CASE ('E')
@


1.128
log
@f18 is CTF
@
text
@d41 1
d46 1
a46 1
C=* Copyright 1985-2012  Health Research Inc.,                         *
d632 4
@


1.127
log
@added 'ctf' op
@
text
@d511 1
a511 1
      CASE ('CTF') ! ------------DETERMINE DEFOCUS --------------- 'CTF'
@


1.126
log
@typos
@
text
@d39 2
a40 1
C	        'TF FIND'                         MAY  12 ARDEAN LEITH
d511 21
d537 1
a537 1
        IF (LENCOMMA .GT. 1) LENF = LENCOMMA-1
d539 1
a539 1
        IF (LENBLANK .GT. 1) LENF = LENBLANK-1
@


1.125
log
@added 'TF FIND'
@
text
@d566 1
a566 1
          CASE ('RCTF','R','RC','RCT',)
d572 1
a572 1
          CASE ('SNR','SN',)
@


1.124
log
@renamed cent.f findcent.f
@
text
@d39 1
d44 1
a44 1
C=* Copyright 1985-2011  Health Research Inc.,                         *
d530 2
a531 2
          CASE ('DDF')
             CALL DEFOCUS(IRTFLG)
d533 2
a534 5
          CASE ('DNS')
             CALL NOISE(IRTFLG)

          CASE ('DEV')
             CALL ENVELOPE(IRTFLG)
d545 8
a552 5
          CASE ('SIM')
	     CALL TRAFSIM(LUN1)   
   
          CASE ('CRF')
             CALL TFCRF
d556 3
d563 1
a563 1
         CASE ('LM4')
d566 1
a566 1
          CASE ('RCTF')
d569 4
a572 4
          CASE ('COR')
             CALL RCTFONE(LUN1) 

          CASE ('SNR')
@


1.123
log
@added 'CD S' support
@
text
@d631 1
a631 1
          CALL CENT
@


1.122
log
@case , sizck,  FI bug with non-existent file
@
text
@d629 2
a630 1
17	IF (FCHAR(4:5) .EQ. 'PH') THEN
@


1.121
log
@parameters changed on qstat call
@
text
@d37 2
a38 1
C	
d43 1
a43 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d81 22
a102 29
        DATA FUNC/'DE', 'DU', 'FI', 'HI', 'LI', 
     &            'MO', 'PK', 'RA', 'RN', 'TT', 
     &            'ST', 'TF', 'FS', 'CA', 'GR', 
     &            'CG', 'CV', 'CL', 'HD'/

        NULL    = CHAR(0)
        IRTRET  = 0
        IRTFLG  = 0

	LUN1    = 8
	LUN2    = 12
	LUN3    = 7
	LUN4    = 9
	LUN5    = 13

	LUNDOC  = 80
	LUNXM   = 81

        MAXIM   = 0
        MAXIM2  = 0

        DO  IFUNC = 1,NFUNC
          IF (FCHAR(1:2) .EQ. FUNC(IFUNC)(1:2)) THEN
            GOTO ( 1, 2, 3, 4, 5, 
     &             6, 7, 9,10,11,
     &            12,13,14,15,16,
     &            17,18,19,20), (IFUNC)
          ENDIF
        ENDDO
a103 2
C       OPERATION NOT IN UTIL1, RETURN TO CALLER
        RETURN 
d105 1
d107 1
a107 1
C	OPERATION ------------------------------------------------ 'DE'
d112 1
a112 1
C	OPERATION -----------------------------------------------  'DU'
d115 2
a116 1
2	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
d128 1
a128 1
C 	OPERATION   ----------- FILE INFO ------------------------ 'FI'
d140 10
a149 7
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'Z',ITYPE,NSAM,NROW,NSLICE,
     &             MAXIM,'RETRIEVE HEADER VALUES FROM',.TRUE.,IRTFLG)

           IF (IRTFLG .EQ. 0) THEN
C             FILE FOUND
              CALL INQUIREHEAD(LUN1,NSAM,NROW,NSLICE,IRTFLG)
           ENDIF
d154 2
a155 1
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'Z',ITYPE,NSAM,NROW,NSLICE,
d162 1
a162 1
C             FILE NOT FOUND, SET REGISTER FOR NSAM, NROW, NSLICE TO ZERO
d177 2
a178 1
           CALL RDPRMC(CLINE,NLET2,.TRUE.,'CORRECT NAME',NULL,IRTFLG)
d194 2
a195 1
              WRITE(NOUT,*) '*** OBSOLETE: PLEASE USE OPERATION FR NOW!'
d216 1
a216 1
C       OPERATION -------------- HISTOGRAM ----------------------- 'HI'
d219 1
a219 1
          WRITE(NOUT,*) ' *** USE OPERATION: HD D'
d223 1
d225 2
a226 1
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE1,NSAM1,NROW1,NSLICE,
d245 2
a246 1
     &       NSAM2,NROW2,NSLICE2, MAXIM2,'SECOND INPUT',.TRUE.,IRTFLG)
d248 4
a251 4
           IF(NSAM2.NE.NSAM1.OR.NROW2.NE.NROW1.OR.NSLICE2.NE.NSLICE)THEN
               CALL ERRT(1,'UTIL1',IDUM)
               GOTO 8999 
           ENDIF
d302 2
a303 1
     &             NSAM2,NROW2,NSLICE2,MAXIM2,'MASK',.FALSE.,IRTFLG)
a309 6
           ELSEIF (NSAM1 .NE. NSAM2 .OR. NROW1 .NE. NROW2. OR.
     &             NSLICE .NE. NSLICE2 .OR. IFORM1 .NE. IFORM2) THEN
C             IMAGES NUST HAVE SAME DIMENSIONS
              CALL ERRT(1,'UTIL1',NE)
              CLOSE(LUN2)
              GOTO 9000           
d311 6
d323 1
a323 1
C       OPERATION --- HISTOGRAM OF A DOCUMENT FILE COLUMN---------- 'HD'
d329 1
a329 1
C	OPERATION   ----------------------------------------------  'LI'
d339 2
a340 1
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
d364 1
a364 1
C 	OPERATION ---------------- MODEL ------------------------- 'MO'
d373 2
a374 1
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'U',IFORM,NSAM2,NROW2,NSLICE,
d393 1
a393 1
C 	OPERATION ---------------- PEAK SEARCH ------------------- 'PK'
d395 3
a397 3
C	PEAK SEARCH
7	CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLICE1,
     &             MAXIM,'INPUT',.TRUE.,IRTFLG)
d431 1
a431 1
C	OPERATION ------------- RAMP ----------------------------- 'RA'
d433 2
a434 1
9       CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
d442 2
a443 1
        CALL OPFILEC(LUN1,.TRUE.,FILNAM,LUN2,'U',ITYPE,NSAM,NROW,NSLICE,
d450 1
a450 1
C       OPERATION  ----------------- RENAME ---------------------- 'RN'
d452 1
a452 1
10      WRITE(NOUT,*) '*** RENAME OPERATION NO LONGER SUPPORTED'
d456 1
a456 1
C       OPERATION   ------------CHANGE TITLE---------------------- 'TT'
d458 1
a458 1
11      IF (FCHAR(4:4) .EQ. 'C') THEN
d467 2
a468 1
	CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'O',ITYPE,NSAM1,NROW1,NSLICE1,
d485 1
a485 3
C 	OPERATION  ------ SET BUFFER LOCATIONS ------------------- 'ST'

12      CONTINUE
d490 2
a491 1
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'Z',ITYPE,NSAM,NROW,NSLICE,
d495 2
a496 1
           IF (IRTFLG .EQ. 0) CALL SETHEAD(LUN1,NSAM,NROW,NSLICE,IRTFLG)
d500 2
a501 1
     &               NSAM,NROW,NSLICE, MAXIM,'INPUT~7',.TRUE.,IRTFLG)
d510 1
a510 1
C 	OPERATION  ------------TRANSFER FUNCTION ----------------- 'TF'
d512 1
a512 1
13      LENF     = LNBLNK(FCHAR(4:))
d576 1
a576 1
C 	------------------------- FILE STATISTICS ---------------- 'FS'
d578 1
a578 2
C       FIND STATISTICS
14      CALL QSTAT(LUN1,LUN2,LUNDOC,LUNXM)
d582 1
a582 1
C       ---------------------CLUSTER ANALYSIS   ------------------ 'CA'
d584 1
a584 1
15      SELECT CASE(FCHAR(4:))
d617 1
a617 1
C 	GRAPH A ROW IN RESULTS FILE ------------------------------ 'GR'
d620 1
a620 1
     &             NSAM1,NROW1,NSLICE, MAXIM,'INPUT',.FALSE.,IRTFLG)
d626 1
a626 1
C       ------------------ CENTER OF GRAVITY --------------------- 'CG'
d637 1
a637 1
C       ---------------------------------------------------------- 'CV'
d639 1
a639 2
C       POCS PROGRAMS (06/05/90)
C       MODULAR POCS PROGRAMS: (12/5/91) M.R.
d641 1
a641 1
18      IF (FCHAR(4:8) .EQ. 'REPL2') THEN 
d651 1
a651 1
C       ---------------------------------------------------------- 'CL'
d653 1
a653 1
19      SELECT CASE (FCHAR(4:5))
d669 1
d673 3
a675 1
        GOTO 9001
d678 3
a680 3
8999    CLOSE(LUN2)
9000	CLOSE(LUN1)
9001    CONTINUE
d682 1
a682 2
	RETURN
	END
@


1.120
log
@'ST H' added
@
text
@d94 4
a97 1
	LUNDOC  = LUN2
a567 5
14      NSTACK = -1
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM,NROW,NSLICE,
     &             NSTACK,'INPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

d569 1
a569 1
        CALL QSTAT(FILNAM,LUN1,LUN2,NSAM,NROW,NSLICE,NSTACK)
@


1.119
log
@inquirehead args. changed & cosmetic
@
text
@d36 1
a474 2
C       DISP OF "Z" WILL ALLOW CORRECTING STACK ERROR
C       PROMPT ENDING ~7 WILL ALLOW OPENING STACK WITHOUT @@
d476 12
a487 1
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'Z',ITYPE,
d489 1
a489 1
        IF (IRTFLG .NE. 0) RETURN
d491 3
a493 2
C  	SET LABEL VALUES TO SOLICITED INPUT
        CALL SETVAL(LUN1,NSAM,NROW,NSLICE)
d495 1
@


1.118
log
@rctfone call replaces rctfss(false) call
@
text
@d34 2
a35 1
C               'TF CTSS'                         NOV  10 ARDEAN LEITH 
d74 4
a77 4
        CHARACTER(LEN=2)           ::  FUNC(NFUNC)
        CHARACTER(LEN=MAXNAM)      ::  FILNAM,CLINE
        LOGICAL                    ::  DOCPRNT,TERMPRNT
        CHARACTER(LEN=1)           ::  NULL
d139 1
a139 1
        ELSEIF (FCHAR(4:4) .EQ. 'H')  THEN
d147 1
a147 1
              CALL INQUIREHEAD(LUN1,NSAM,IRTFLG)
d150 1
a150 1
        ELSEIF (FCHAR(4:4) .EQ. 'N') THEN
d168 1
a168 1
        ELSEIF (FCHAR(4:4) .EQ. 'T') THEN
d184 1
a184 1
        ELSE
d325 1
a325 1
C          FOR 'LI R', 'LI RT',  'LI RD'
a326 1
ccc        CALL LISTREGS()
d551 1
a551 1
C 	OPERATION  -------------- FILE STATISTICS ---------------- 'FS'
d563 1
a563 1
C	 OPERATION  ---------CLUSTER ANALYSIS   ------------------ 'CA'
d607 1
a607 1
C       OPERATION  ------- CENTER OF GRAVITY --------------------- 'CG'
d610 1
a610 1
17	IF(FCHAR(4:5).EQ.'PH') THEN
d618 1
a618 1
C       OPERATION ----------------------------------------------- 'CV'
d633 1
a633 1
C       OPERATION ------------------------------------------------ 'CL'
@


1.117
log
@added 'TF CTSS'
@
text
@d520 1
a520 1
             CALL RCTFSS(.TRUE.)  
d540 2
a541 2
          CASE ('CTSS')
             CALL RCTFSS(.FALSE.) 
@


1.116
log
@'fi h' ALLOWS QUERY ON STACK HEADER for maxim
@
text
@d34 1
d520 1
a520 1
             CALL RCTFSS  
d522 1
a522 1
	  CASE ('SIM')
d534 1
a534 1
          CASE ('LM4')
d540 3
d544 1
a544 1
             CALL TFSNR
@


1.115
log
@GPL_2010
@
text
@d4 30
a33 29
C    UTIL1.F   TITLE PROCESSING MODIFIED NOV 87 ARDEAN LEITH
C              LONG FILE NAMES ADDED     DEC 88 ARDEAN LEITH
C	       ALTERED                   4/21/93 MAHIEDDINE LADJADJ
C	       ALTERED                   8/25/93 JING SU
C	       LI COMMAND REWRITTEN      8/30/96 ARDEAN LEITH
C	       TT COMMAND REWRITTEN      6/28/97 ARDEAN LEITH
C              ST PARAMETERS ALTERED     SEPT 98 ARDEAN LEITH
C              'TT COP' ADDED            JUNE 99 ARDEAN LEITH
C              'CA SM' ALTERED           AUG  99 ARDEAN LEITH
C              'TF CTS' ALTERED          NOV  00 HAIXIAO GAO
C              'TF CTF' REMOVED          JAN  01 ARDEAN LEITH
C              'TF CRF' ADDED            JAN  11 Paul Penczek
C              'TF ECTF' ADDED           JUL  31 Paul Penczek
C              'TF ECTF' --> 'TF ED'     JUN  02 Bill Baxter
C              'HI E' ADDED              FEB  03 ARDEAN LEITH
C              OPFILEC                   FEB  03 ARDEAN LEITH
C              'HI J' ADDED              MAR  03 ARDEAN LEITH
C              'PK DR' ADDED             MAR  03 BIMAL RATH
C              'CA' REWRITE              SEP  03 ARDEAN LEITH
C              'TF EA' REMOVED           NOV  03 PAUL PENCZEK
C              'TF ED' REPLACED          NOV  03 PAUL PENCZEK
C              'CA SMI' ADDED            JAN  04 ARDEAN LEITH
C              'HI J' VMIN, VMAX         FEB  04 ArDean Leith
C               TRAFC & TRAFCT MERGED    MAR  04 ArDean Leith
C               ~7 REPLACES IRTFLG       APR  04 ARDEAN LEITH
C               'PK 3R'                  NOV  04 ARDEAN LEITH
C               'TF SIM' ADDED           NOV  07 BIMAL RATH 
C               'TF LM4'ADDED            MAR  06 ZHONG  HUANG 
C               'HI DOC' DUPLICATES HI D MAR  06 ARDEAN LEITH 
d71 5
a75 5
	PARAMETER      (NFUNC=19)
        CHARACTER(LEN=2), DIMENSION(NFUNC) ::  FUNC(NFUNC)
        CHARACTER(LEN=MAXNAM)              ::  FILNAM,CLINE
        LOGICAL                            ::  DOCPRNT,TERMPRNT
        CHARACTER(LEN=1)                   ::  NULL
d139 1
@


1.114
log
@added FI H
@
text
@a34 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d36 5
a40 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d42 1
a42 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d47 1
a47 1
C=* This program is distributed in the hope that it will be useful,    *
d49 1
a49 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a50 1
C=*                                                                    *
d52 1
a52 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.113
log
@NFAC,KFAC,READ BUG & REFORMATTING
@
text
@d140 10
d635 1
a635 2
           CASE('KM')
C          KMEANS CLUSTERING 
d638 1
a638 2
           CASE('HC')
C          HIERARCHICAL CLUSTERING 
d641 1
a641 2
           CASE('HD')
C          HIERARCHICAL CLUSTERING, CALCULATE CLASSES 
d644 1
a644 2
           CASE('HE')
C          HIERARCHICAL CLUSTERING, CREATE DOC FILE
d647 1
a647 2
           CASE('CL')
C          HIERARCHICAL CLUSTERING 
@


1.112
log
@removed duplicate subroutine hi_1d
@
text
@d643 2
a644 1
           CALL SCLASSI(LUN1,LUN2)
@


1.111
log
@FI X
@
text
@d6 27
a32 26
C	       ALTERED                  4/21/93 MAHIEDDINE LADJADJ
C	       ALTERED                  8/25/93 JING SU
C	       LI COMMAND REWRITTEN     8/30/96 ARDEAN LEITH
C	       TT COMMAND REWRITTEN     6/28/97 ARDEAN LEITH
C              ST PARAMETERS ALTERED    SEPT 98 ARDEAN LEITH
C              'TT COP' ADDED           JUNE 99 ARDEAN LEITH
C              'CA SM' ALTERED          AUG  99 ARDEAN LEITH
C              'TF CTS' ALTERED         NOV  00 HAIXIAO GAO
C              'TF CTF' REMOVED         JAN  01 ARDEAN LEITH
C              'TF CRF' ADDED           JAN  11 Paul Penczek
C              'TF ECTF' ADDED          JUL  31 Paul Penczek
C              'TF ECTF' --> 'TF ED'    JUN  02 Bill Baxter
C              'HI E' ADDED             FEB  03 ARDEAN LEITH
C              OPFILEC                  FEB  03 ARDEAN LEITH
C              'HI J' ADDED             MAR  03 ARDEAN LEITH
C              'PK DR' ADDED            MAR  03 BIMAL RATH
C              'CA' REWRITE             SEP  03 ARDEAN LEITH
C              'TF EA' REMOVED          NOV  03 PAUL PENCZEK
C              'TF ED' REPLACED         NOV  03 PAUL PENCZEK
C              'CA SMI' ADDED           JAN  04 ARDEAN LEITH
C              'HI J' VMIN, VMAX        FEB  04 ArDean Leith
C               TRAFC & TRAFCT MERGED   MAR  04 ArDean Leith
C               ~7 REPLACES IRTFLG      APR  04 ARDEAN LEITH
C               'PK 3R'                 NOV  04 ARDEAN LEITH
C               'TF SIM' ADDED          NOV  07 BIMAL RATH 
C                'TF LM4'ADDED         MAR  06 ZHONG  HUANG 
d204 5
a209 4
4       IF(FCHAR(4:6).EQ.'DOC')  THEN
          CALL  HI_1D
          GOTO  9001
        ENDIF
d312 1
@


1.110
log
@----------------------------------------------------------------------
@
text
@d187 4
@


1.109
log
@CALL REG_SET(7,0.0,.TRUE.
@
text
@d31 2
a32 1
C
d514 1
a514 1

d517 4
a520 1

@


1.108
log
@added command TF SIM
@
text
@d149 5
a153 5
              CALL REG_SET(1,0.0,.TRUE.,IRTFLG)
              CALL REG_SET(2,0.0,.TRUE.,IRTFLG)
              CALL REG_SET(3,0.0,.TRUE.,IRTFLG)
              CALL REG_SET(4,0.0,.TRUE.,IRTFLG)
              CALL REG_SET(7,0.0,.TRUE.,IRTFLG)
d163 1
a163 1
           CALL RDPRMC(CLINE,NLET2,.FALSE.,'CORRECT NAME',NULL,IRTFLG)
d308 2
a309 1
           CALL LISTREGS()
@


1.107
log
@GPL License fixed
@
text
@d30 1
d502 5
a506 2
             CALL RCTFSS

@


1.106
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a31 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d35 1
a35 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a54 6

C * COPYRIGHT (C)1985, 2004. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.105
log
@Removed MPI
@
text
@d2 1
d34 24
@


1.104
log
@PK 3R
@
text
@a64 9
#ifdef USE_MPI   
        include 'mpif.h'     
        INTEGER  MYPID, COMM, IERR
        COMM = MPI_COMM_WORLD
        CALL MPI_COMM_RANK(COMM, MYPID, IERR)
#else
        MYPID = -1
#endif 

a440 13
#ifdef USE_MPI
        CALL FILERD(FILNAM,NLETI,NULL,'INPUT~7',IRTFLG)
        IF (MYPID .EQ. 0 .or. FILNAM(1:1) .EQ. '_' ) THEN
           CALL OPFILEC(0,.FALSE.,FILNAM,LUN1,'Z',ITYPE,
     &                  NSAM,NROW,NSLICE, MAXIM,'INPUT',.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

C  	   SET LABEL VALUES TO SOLICITED INPUT
           CALL SETVAL(LUN1,NSAM,NROW,NSLICE)
           CALL FLUSHFILE(LUN1)
        ENDIF
        CALL MPI_BCAST(IBCNT, 1, MPI_INTEGER, 0, COMM, IERR)
#else
a446 1
#endif
a618 3
#ifdef USE_MPI
        CALL MPI_BARRIER(COMM, IERR)
#endif
@


1.103
log
@sgraf has 4 parameters
@
text
@d28 2
a29 1
C               ~7 REPLACES IRRTFLG     APR  04 ARDEAN LEITH
d33 1
a33 1
C * COPYRIGHT (C)1985, 2003. HEALTH RESEARCH INCORPORATED (HRI),       *
d371 1
a371 2
           CALL SPEAK3(FILNAM,LUN1,NSAM1,NROW1,NSLICE1,MAXDIM,
     &                FCHAR(5:5),LUNDOC)
d375 1
a375 1
     &        'ENTER # OF PEAKS, CENTER ORIGIN OVERRIDE (0/1)')
@


1.102
log
@~7 replaces irtflg = 87
@
text
@d551 1
a551 1
             CALL SGRAF(LUN1,LUN2,LUN3)
@


1.101
log
@ca sra & ca sre
@
text
@d28 1
d302 1
a302 2
C       NEED INPUT FILE, USE IRTFLG = 87 TO ALLOW STACK HEADER ACCESS
        IRTFLG = 87
d304 1
a304 1
     &              MAXIM,'INPUT',.TRUE.,IRTFLG)
d448 2
a449 2
C       IRTFLG OF 87 WILL ALLOW OPENING STACK WITHOUT @@
12      IRTFLG = 87
d451 1
a451 1
        CALL FILERD(FILNAM,NLETI,NULL,'INPUT',IRTFLG)
d464 1
a464 1
     &               NSAM,NROW,NSLICE, MAXIM,'INPUT',.TRUE.,IRTFLG)
@


1.100
log
@bad case if x11 after op!
..
@
text
@d558 1
a558 1
          CASE ('SR', 'SRD', 'SRI', 'SRP')
@


1.99
log
@typo in GRAFC call
@
text
@d474 8
a481 1
13      SELECT CASE(FCHAR(4:))
@


1.98
log
@merged trafc.f trafct.f
@
text
@d479 1
a479 1
             CALL TRAFC(LUN1.,.FALSE.)
@


1.97
log
@hi jo   vmin,vmax
@
text
@d27 1
a469 1

d474 3
a476 8
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CT,CT3,CTS,CRF,ED,L,'//
     &		    'RCTF,SNR$',
     &                FCHAR(4:),ICALLTF)
        GOTO (1801,1802,1803,1804,1805,1806,1807,1809,
     &		1810,1811,1812,1813,1814,1815,1816) ICALLTF

1801    CALL TRAF(LUN1)
	GOTO 9000
d478 2
a479 2
1802    CALL TRAFD(LUN1)
        GOTO 9000
d481 2
a482 2
1803    CALL TRAFC(LUN1)
        GOTO 9000
d484 2
a485 2
1804    CALL TRAFC3(LUN1)
        GOTO 9000
d487 2
a488 2
1805    CALL DEFOCUS(IRTFLG)
        GOTO 9000
d490 2
a491 2
1806    CALL NOISE(IRTFLG)
        GOTO 9000
d493 2
a494 2
1807    CALL ENVELOPE(IRTFLG)
        GOTO 9000
d496 2
a497 2
1809    CALL TRAFCT(LUN1)
        GOTO 9000
d499 2
a500 2
1810    CALL TRAFCT3(LUN1)
        GOTO 9000
d502 2
a503 2
1811    CALL RCTFSS
        GOTO 9000
d505 2
a506 2
1812	CALL TFCRF
	GOTO 9000
d508 2
a509 2
1813    CALL TFED
        GOTO 9000
d511 2
a512 2
1814    CALL TRAFL
	GOTO 9000
d514 2
a515 2
1815    CALL RCTF
        GOTO 9000
d517 3
a519 1
1816    CALL TFSNR
@


1.96
log
@*** empty log message ***
@
text
@d26 1
d232 7
d240 1
a240 1
     &                 FMIN1,FMAX1,FMIN2,FMAX2,IRTFLG)
@


1.95
log
@HI D
@
text
@d186 1
a186 1
4       IF(FCHAR(4:4).EQ.'D')  THEN
@


1.94
log
@lun5 on jpmsk3
@
text
@d186 5
a190 1
4       CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE1,NSAM1,NROW1,NSLICE,
@


1.93
log
@jpmsk3 from 'CA SMI'
@
text
@d540 1
a540 1
             CALL JPMSK3(LUN1,LUN2,LUN3)
@


1.92
log
@close lun5
@
text
@d25 1
d537 4
@


1.91
log
@tf ea removed; tf ed replaced by the new version.
@
text
@a539 1
             CLOSE(LUN2)
d541 2
d553 1
a553 1
        GOTO 9000
@


1.90
log
@rep util1.f
st fileopening bug from mpi add
@
text
@d23 2
d462 1
a462 1
     &		    'EA,RCTF,SNR$',
d465 1
a465 1
     &		1810,1811,1812,1813,1814,1815,1816,1817) ICALLTF
d506 1
a506 1
1815    CALL TFEA
d509 1
a509 4
1816    CALL RCTF
        GOTO 9000

1817    CALL TFSNR
@


1.89
log
@mpi
@
text
@d447 1
a447 1
        CALL OPFILEC(0,.FALSE.,FILNAM,LUN1,'Z',ITYPE,
@


1.88
log
@irtflg set to 0
@
text
@d58 9
d434 15
a448 2
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'Z',ITYPE,NSAM,NROW,NSLICE,
     &             MAXIM,'INPUT',.TRUE.,IRTFLG)
d451 1
a451 1
C	SET LABEL VALUES TO SOLICITED INPUT
d453 2
d621 3
@


1.87
log
@CA & CL rewrite
@
text
@d60 1
@


1.86
log
@added johistf
@
text
@d22 1
d33 1
a33 1
C   UTIL1(MAXDIM)
d58 2
a59 9
        NULL   = CHAR(0)
        IRTRET = 0
	LUN1   = 8
	LUN2   = 12
	LUN3   = 7
	LUN4   = 9
	NDOC   = LUN2
        MAXIM  = 0
        MAXIM2 = 0
d61 9
d76 2
a77 2
          END IF
        END DO
d83 1
a83 1
C	OPERATION ------------------------------------------------- 'DE'
d88 1
a88 1
C	OPERATION ------------------------------------------------  'DU'
d103 1
a103 1
C 	OPERATION   ----------- FILE INFO ------------------------- 'FI'
d170 1
a170 1
C       OPERATION -------------- HISTOGRAM ------------------------ 'HI'
d195 1
a195 1
               CALL ERRT(1,'uTIL1',IDUM)
d301 1
a301 1
C 	OPERATION ---------------- MODEL -------------------------- 'MO'
d329 1
a329 1
C 	OPERATION ---------------- PEAK SEARCH -------------------- 'PK'
d345 1
a345 1
     &                FCHAR(5:5),NDOC)
d354 1
a354 1
     &                   NDOC,ML,NOR)
d358 1
a358 1
     &                   NDOC,ML,NOR)  
d362 1
a362 1
     &                   NDOC,ML,NOR)
d368 1
a368 1
C	OPERATION ------------- RAMP ------------------------------ 'RA'
a382 1
 
d419 1
a419 1
C 	OPERATION  ------ SET BUFFER LOCATIONS -------------------- 'ST'
d432 1
a432 1
C 	OPERATION  ------------TRANSFER FUNCTION ------------------ 'TF'
d488 1
a488 1
C 	OPERATION  -------------- FILE STATISTICS ----------------- 'FS'
d500 1
a500 36
C	 OPERATION  ---------CLUSTER ANALYSIS   ------------------- 'CA'

15      IF (FCHAR(4:4) .EQ. 'S') THEN
         CALL CHKINPQ(
     &   'SR,SRD,SRI,SRP,SR/C,SRD/C,SRI/C,S,SI,SI+,SIB,SIB+,SM,SME$'
     &   ,FCHAR(4:),ICALL)
           GOTO (2003, 2010, 2010, 2010, 2010, 2010, 2010, 2010,   
     &           2009, 2009, 2009, 2009, 2009, 2011, 2011),   
     &           ICALL
        ELSE
           CALL CHKINPQ(
     &        'CLA,HC,HD,HE,KM,VIS$'
     &        ,FCHAR(4:),ICALL)
           GOTO (2003, 2013, 20333, 20334, 20335, 
     &           20344, 20555 ), ICALL
        ENDIF


C       CA S, CA E, CA ES, removed PAP 10/05/99
2003	GOTO 9000

C       CA S, CA SI, CA SF (UNDOCUMENTED) 
2009	CALL JPMSK1(MAXDIM)
	GOTO 9000

C       CA SR, CA SRD, CA SRI, CA SRP, CA SR/C, CA SRD/C, CA SRI/C
2010	CALL JPMSK2(LUN1,LUN2,LUN3,MAXDIM)
        CLOSE(LUN2)
        CLOSE(LUN3)
	GOTO 9000

C       CA SM, CA SME
C       FACTOR MAP PREPARATION
2011	CALL SGRAF(LUN1,LUN2,LUN3)
        CLOSE(LUN2)
	GOTO 9000
d502 1
a502 3
C       CA CLA
2013    WRITE(NOUT,*) 'NOTICE: use CL CLA instead'
        GOTO 9000
d504 3
a506 4
C       CA HC
C       H. CLUSTERING
20333   WRITE(NOUT,*) 'NOTICE: use CL HC instead'
	GOTO 9001
d508 4
d513 5
a517 4
C       CA HD
C       H. CLUSTERING
20334   WRITE(NOUT,*) 'NOTICE: use CL HD instead'
	GOTO 9001
d519 3
a521 4
C       CA HE
C       H. CLUSTERING
20335   WRITE(NOUT,*) 'NOTICE: use CL HE instead'
	GOTO 9001
d523 3
a525 4
C       CA KM
C       K-means
20344   WRITE(NOUT,*) 'NOTICE: use CL KM instead'
        GOTO  9001
d527 1
a527 3
C       CA VIS
C       VISUAL MAP:
20555   CALL VISMAP(LUN1,LUN2,LUN3,LUN4)
d530 1
a530 1
C 	GRAPH A ROW IN RESULTS FILE ----------------------------- 'GR'
d534 1
a534 1
         IF (IRTFLG .NE. 0) GOTO 9000 
d539 1
a539 1
C       OPERATION  ------- CENTER OF GRAVITY ---------------------- 'CG'
d542 1
a542 1
17	IF (FCHAR(4:5).EQ.'PH') THEN
d545 1
a545 1
        END IF
d550 1
a550 1
C       OPERATION ------------------------------------------------- 'CV'
d555 7
a561 4
18      CALL CHKINPQ('REPL,REPL2$',FCHAR(4:),ICALL9)
        GOTO (9000,181,182) ICALL9
 
181     CALL MRREPLACE(LUN1,LUN2)
d564 2
a565 5
182     CONTINUE
	CALL  ERRT(41,'CV REPL2',NE)
C       tdfrepl uses old Fourier format and was disabled
C	CALL TDFREPL(LUN1,LUN2,LUN3)
        GOTO 9000
d567 1
a567 1
C       OPERATION ------------------------------------------------- 'CL'
d569 3
a571 2
19      CALL CHKINPQ('KM,HC,HD,HE,CLA$',FCHAR(4:),ICALL9)
        GOTO (9000,191,192,193,194,195) ICALL9
d573 3
a575 3
C       KMEANS (CL KM)
191     CALL SUBKMNS(MAXDIM)
        GOTO 9000
d577 3
a579 3
C       H. CLUSTERING (CL HC)
192     CALL  HCLS(MAXDIM)
	GOTO 9001
d581 3
a583 3
C       H. CLUSTERING (CL HD)
193	CALL  HDLS(MAXDIM)
	GOTO 9001
d585 3
a587 3
C       H. CLUSTERING (CL HE)
194	CALL  HELS(MAXDIM)
	GOTO 9001
d589 2
a590 3
C       (CL CLA)
195     CALL SCLASSI(MAXDIM)
        GOTO 9000
@


1.85
log
@added 'pk dr'
@
text
@d170 2
a171 2
4       CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',ITYPE,NSAM1,NROW1,NSLICE,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
d184 1
a184 1
           IF (IMAMI .NE. 1) 
d187 3
a189 3
C          OPEN INPUT FILE, FOURIER NOT ALLOWED 
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN2,'O',ITYPE,
     &       NSAM2,NROW2,NSLICE2, MAXIM2,'SECOND INPUT',.FALSE.,IRTFLG)
d199 1
a199 1
           IF (IMAMI .NE. 1) 
d202 8
a209 6
           CALL RDPRI1S(NBINS,NOT_USED,
     &        'ENTER NUMBER OF BINS IN HISTOGRAM',IRTFLG)
           IF (NBINS .LT. 1) THEN
               CALL ERRT(1,'UTIL1',IDUM)
               GOTO 8999 
           ENDIF
d211 1
a211 1
           CALL JOHIST(LUN1,LUN2,NSAM1,NROW1,NSLICE,NBINS,
d213 15
@


1.84
log
@johist.f added
@
text
@d21 1
d335 5
@


1.83
log
@added pk dr
@
text
@d20 1
d177 35
a333 5
     
           ELSEIF ( FCHAR(5:5).EQ.'R') THEN
             CALL SPEAKR(FILNAM,LUN1,NSAM1,NROW1,MAXDIM,FCHAR(4:4),
     &                   NDOC,ML,NOR)  
        
@


1.82
log
@parameters
@
text
@d298 5
@


1.81
log
@opfilec
@
text
@a60 1
        LUNE   = 34
d308 15
a322 2
9       CALL RAMP
	GOTO 9001
d327 1
a327 1
	GOTO 9000
d337 1
a337 1
	   IF (IRTFLG .NE. 0) GOTO 9000
d472 1
a472 1
2011	CALL SGRAF(LUN1,LUN2,LUNE)
d506 1
a506 1
C 	GRATPH A ROW IN RESULTS FILE ----------------------------- 'GR'
d539 1
a539 1
C tdfrepl uses old Fourier format and was disabled
d569 1
a569 1

@


1.80
log
@added HI E operation
@
text
@d19 1
d23 1
a23 1
C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
d87 1
a87 1
2	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
d95 1
a95 1
        CALL  DUST(LUN1,NSAM,NROW,NSLICE,HSIG,HMODE,IRTFLG)
d111 1
a111 1
           CALL OPFIL(.TRUE.,FILNAM,LUN1,'Z',NSAM,NROW,NSLICE,
d160 2
a161 2
           CALL OPFIL(.FALSE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
     &                MAXIM,' ',.TRUE.,IRTFLG)
d169 1
a169 1
4       CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
d184 2
a185 2
           CALL OPFIL(.TRUE.,FILNAM,LUN2,'O',NSAM2,NROW2,NSLICE2,
     &             MAXIM2,'MASK',.FALSE.,IRTFLG)
d221 1
a221 1
        CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
d254 1
a254 1
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'U',NSAM2,NROW2,NSLICE,
d276 1
a276 1
7	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE1,
d322 3
a324 2
	   CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE1,
     &             MAXIM,'TITLE SOURCE',.TRUE.,IRTFLG)
d329 1
a329 1
	CALL OPFIL(.TRUE.,FILNAM,LUN2,'O',NSAM1,NROW1,NSLICE1,
d351 1
a351 1
        CALL OPFIL(.TRUE.,FILNAM,LUN1,'Z',NSAM,NROW,NSLICE,
d418 1
a418 1
        CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
d494 1
a494 1
C 	OPERATION  ------------------------------------------------ 'GR'
d496 2
a497 2
16      CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
@


1.79
log
@FI can do whole stack X11 query
@
text
@d17 2
a18 1
C         'TF ECTF' CHANGED to 'TF ED'  JUN  02 Bill Baxter
d21 6
a26 6
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
d41 1
d44 4
a47 4
        CHARACTER *2   FUNC(NFUNC)
        CHARACTER *81  FILNAM,CLINE
        LOGICAL        DOCPRNT,TERMPRNT
        CHARACTER *1   NULL
d172 5
a176 1
        IF (FCHAR(4:4) .NE. 'M') THEN
d181 1
a181 1
C          HISTOGRAM UNDER MASK
@


1.78
log
@error trap for 'FI' needed
@
text
@d152 5
@


1.77
log
@renamed actf.f, ectf.f, wctf.f to tfea.f, tfed.f, tfsnr.f
@
text
@d143 1
@


1.76
log
@*** empty log message ***
@
text
@d17 1
d347 2
a348 2
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CT,CT3,CTS,CRF,ECTF,L,'//
     &		    'ACTF,RCTF,WCTF$',
d386 1
a386 1
1813    CALL ECTF
d392 1
a392 1
1815    CALL ACTF
d398 1
a398 1
1817    CALL WCTF
@


1.75
log
@nloop,iloop_removed
@
text
@d346 2
a347 1
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CT,CT3,CTS,CRF,ECTF,L$',
d350 1
a350 1
     &		1810,1811,1812,1813,1814) ICALLTF
d385 1
a385 1
1813    CALL BACKCTF5
d390 9
@


1.74
log
@TF L added
@
text
@d278 1
a278 1
            CALL RDPRMI(ML,NOR,NLOOP,ILOOP,
@


1.73
log
@TF ECTF added
@
text
@d346 1
a346 1
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CT,CT3,CTS,CRF,ECTF$',
d349 1
a349 1
     &		1810,1811,1812,1813) ICALLTF
d386 3
@


1.72
log
@added 'PK M' call
@
text
@d16 1
d346 2
a347 2
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CT,CT3,CTS,CRF$',FCHAR(4:)
     &               ,ICALLTF)
d349 1
a349 1
     &		1810,1811,1812) ICALLTF
d383 3
@


1.71
log
@changed call for speak & speakc
@
text
@d265 12
a276 1
	IF (FCHAR(4:4) .NE. '3') THEN
a287 3
        ELSE
           CALL SPEAK3(FILNAM,LUN1,NSAM1,NROW1,NSLICE1,MAXDIM,
     &                FCHAR(5:5),NDOC)
@


1.70
log
@tfcrf added
@
text
@d264 13
a276 6
	IF (FCHAR(4:4).NE.'3') THEN
          IF (FCHAR(4:4).EQ. 'C' .OR. FCHAR(5:5).EQ.'C') THEN
            CALL SPEAKC(FILNAM,LUN1,NSAM1,NROW1,MAXDIM,FCHAR(4:4),NDOC)
          ELSE
            CALL SPEAK(FILNAM,LUN1,NSAM1,NROW1,MAXDIM,FCHAR(4:4),NDOC)
          ENDIF
d278 1
a278 1
            CALL SPEAK3(FILNAM,LUN1,NSAM1,NROW1,NSLICE1,MAXDIM,
@


1.69
log
@removed tfctf
@
text
@d15 1
d330 1
a330 1
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CT,CT3,CTS$',FCHAR(4:)
d333 1
a333 1
     &		1810,1811) ICALLTF
d364 3
@


1.68
log
@remove TF CTS2, combine 2D operation into TF CTS
@
text
@d14 1
d329 1
a329 1
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CTF,CT,CT3,CTS$',FCHAR(4:)
d331 1
a331 1
        GOTO (1801,1802,1803,1804,1805,1806,1807,1808,1809,
a354 3
1808    CALL RCTFS(MAXDIM)
        GOTO 9000

d378 1
a378 1
15      IF(FCHAR(4:4) .EQ. 'S') THEN
d508 1
a508 1
9001    FCHAR(1:1) = ';'
@


1.67
log
@TF CTS2 added
@
text
@d13 1
a13 1
C              'TF CTS2' ADDED          NOV  00 HAIXIAO GAO
d328 1
a328 1
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CTF,CT,CT3,CTS2,CTS$',FCHAR(4:)
d331 1
a331 1
     &		1810,1812,1811) ICALLTF
a363 3
        GOTO 9000

1812    CALL RCTF2
@


1.66
log
@no procX file changes
@
text
@d13 1
d328 2
a329 2
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CTF,CT,CT3,CTS$',FCHAR(4:),
     &               ICALLTF)
d331 1
a331 1
     &		1810,1811) ICALLTF
d364 3
@


1.65
log
@reverted to pre procX version
@
text
@d32 1
a32 1
        SUBROUTINE UTIL1(MAXDIM)
d48 1
a48 1
	NF     = 0
d133 1
d137 11
a147 2
           CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
     &                MAXIM,'FILE INFO. ON',.TRUE.,IRTFLG)
@


1.64
log
@Bproc RR & FR changes
@
text
@d32 1
a32 1
        SUBROUTINE UTIL1(MAXDIM,IRTRET)
d48 1
a48 1
        IRTRET = 0
a132 1

d136 2
a137 11
           CALL FILERD(FILNAM,NLETI,NULL,'FILE INFO. ON',IRTFLG)
           IF (FILNAM(1:1) .EQ. '?') THEN
C             OLD FASHIONED "FR" SETTING
              WRITE(NOUT,*) '*** OBSOLETE: PLEASE USE OPERATION FR NOW!'
              IRTRET = 1
              BACKSPACE(NIN)
              IBCNT = IBCNT - 1
              RETURN
           ENDIF
           CALL OPFIL(.FALSE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
     &                MAXIM,' ',.TRUE.,IRTFLG)
@


1.63
log
@FR T --> FI T
@
text
@d32 1
a32 1
        SUBROUTINE UTIL1(MAXDIM)
d48 1
a48 1
	NF     = 0
d133 1
d137 11
a147 2
           CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM,NROW,NSLICE,
     &                MAXIM,'FILE INFO. ON',.TRUE.,IRTFLG)
@


1.62
log
@removed NSEL() reference
@
text
@d38 1
a38 1
        CHARACTER *81  FILNAM
d116 16
@


1.61
log
@used reg_set
@
text
@d189 4
a192 3
           IF (FCHAR(4:4) .EQ. 'T') TERMPRNT = .TRUE. 

           IF (NSEL(1) .NE. 0) THEN
@


1.60
log
@CG
@
text
@d111 5
a115 5
              PARAM(2) = 0
              PARAM(3) = 0
              PARAM(4) = 0
              PARAM(5) = 0
              PARAM(8) = 0
@


1.59
log
@no argument for subroutine cent
@
text
@d429 1
a429 5
17	IF (FCHAR(4:4).EQ.'3') THEN
          CALL CENGR3(LUN1)
	  GOTO 9000

	ELSEIF (FCHAR(4:5).EQ.'PH') THEN
d434 2
a435 6
        CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
         IF (IRTFLG .NE. 0) GOTO 9000

        CALL CENGRA(LUN1,NSAM1,NROW1)
	GOTO 9000
@


1.58
log
@adapted to ramp
@
text
@d434 1
a434 1
          CALL CENT(MAXDIM)
@


1.57
log
@*** empty log message ***
@
text
@d249 2
a250 6
9       CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

          CALL RAMP(LUN1,NSAM1,NROW1)
	GOTO 9000
@


1.56
log
@ca cleaned up
@
text
@d468 2
a469 2
19      CALL CHKINPQ('KM,HC,HD,HE,CLA,CLAF$',FCHAR(4:),ICALL9)
        GOTO (9000,191,192,193,194,195,196) ICALL9
a489 6

C       (CL CLAF)
196     continue
cCALL SCLASF
        GOTO 9000

@


1.55
log
@rctfss
@
text
@a252 3
        IF (FCHAR(4:5) .EQ. 'GN') THEN
          CALL MRGNORM(LUN1,NSAM1,NROW1)
        ELSE
a253 1
        END IF
d365 1
a365 1
     &        'E,P,3,MAP,M,MT,ES,C,CT,VAR,CLA,CLAF,HC,HD,HE,KM,VIS$'
d367 1
a367 2
           GOTO (2003,  2003, 2004, 2005, 2006, 2007,  2007,  2003,
     &	         2007,  2007, 2012, 2013, 2015, 20333, 20334, 20335, 
d372 2
a373 26
C       CA S, CA E, CA ES, 
2003	CALL JPMSK(LUN1,LUN2,LUN3,LUN4,MAXDIM,FCHAR(4:))
        CLOSE(LUN2)
        CLOSE(LUN3)
        CLOSE(LUN4)
	GOTO 9000

C       CA P, 
C       CALL CAPART(LUN1,LUN2,LUN3)
2004	WRITE(NOUT,*) '*** CAPART SUBROUTINE DOES NOT COMPILE!!!'
        CLOSE(LUN2)
        CLOSE(LUN3)
	GOTO 9000

C       CA 3, 
2005	CALL CA3D(LUN1,LUN2)
        CLOSE(LUN2)
	GOTO 9000

C       CA MAP, 
2006    CALL ERRT(101,'NO LONGER SUPPORTED',IDUM)
        GOTO 9000

C       CA M, CA MT, CA C, CA CT, 
2007	CALL CAMAP(LUN1,FCHAR(4:))
	GOTO 9000
a390 4
C       CA VAR, 
2012    CALL MRVARI(MAXDIM)
        GOTO 9000

a394 4
C       CA CLAF
2015    WRITE(NOUT,*) 'NOTICE: use CL CLAF instead'
        GOTO 9000

d492 2
a493 1
196     CALL SCLASF
@


1.54
log
@sgraf parameters changed
@
text
@d343 1
a343 1
1811    CALL RCTFSS(MAXDIM)
@


1.53
log
@comments
@
text
@d4 9
a12 8
C    UTIL1.F        TITLE PROCESSING MODIFIED NOV 87 ArDean Leith
C                   LONG FILE NAMES ADDED     DEC 88 ArDean Leith
C	            MAHIEDDINE LADJADJ       4/21/93
C	            JING SU                  8/25/93
C	            LI COMMAND REWRITTEN     8/30/96 ArDean Leith
C	            TT COMMAND REWRITTEN     6/28/97 ArDean Leith
C                   ST PARAMETERS ALTERED    SEPT 98 ArDean Leith
C                   'TT COP' ADDED           JUNE 99 ArDean Leith
d416 1
a416 1
2011	CALL SGRAF(LUN1,LUN2,.FALSE.,LUNE)
a424 1
C2013    CALL SCLASSI(MAXDIM)
a428 1
C2015    CALL SCLASF
a433 1
c20333	CALL  HCLS(MAXDIM)
a439 1
C20334	CALL  HDLS(MAXDIM)
a444 1
C20335	CALL  HELS(MAXDIM)
a449 1
c20344   CALL  KMNS(MAXDIM)
@


1.52
log
@comments
@
text
@d403 1
a403 1
C       CA S, CA SI, CA SI+, CA SIB, CA SIB+ 
@


1.51
log
@changed title and added tt cop operation
@
text
@d11 1
d24 1
a24 1
C   PURPOSE:   A MAIN DRIVER FOR ROUTINES REQUIRING ONLY ONE FILE
a421 1

@


1.50
log
@TF goto fixed
@
text
@a50 1
	LUN5   = 10
d266 10
a275 4
11      CONTINUE
C       OPEN THE FILE 
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE1,
     &             MAXIM,'INPUT',.TRUE.,IRTFLG)
d279 6
a284 2
        CALL RDPRMC(CTIT,NLET,.FALSE.,'NEW TITLE',NULL,IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 9000
d287 2
a288 3
        NLET          = MIN(NLET,159)
        CTIT(NLET+1:) = CHAR(0)
        CALL TITLE(LUN1,NSAM1)
@


1.49
log
@overlength line fixed
@
text
@d300 2
a301 1
        GOTO (1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811) ICALLTF
@


1.48
log
@*** empty log message ***
@
text
@d298 2
a299 1
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CTF,CT,CT3,CTS$',FCHAR(4:),ICALLTF)
@


1.47
log
@RFCTFSS
@
text
@d331 1
a331 1
1808    CALL RCTFSS(MAXDIM)
@


1.46
log
@removed 'mo 3' operation (modelh)
@
text
@d298 2
a299 2
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CTF,CT,CT3$',FCHAR(4:),ICALLTF)
        GOTO (1801,1802,1803,1804,1805,1806,1807,1808,1809,1810) ICALLTF
d329 3
@


1.45
log
@lunsethdr used
@
text
@a32 1
CNO_SAVE
d211 1
d213 11
a223 9
          IF (FCHAR(5:5) .EQ. 'H') THEN 
             LUNM = LUN1
             IF (FILNAM(1:1). EQ. '*') LUNM = 0
             CALL MODELH(LUNM,NSAM2,NROW2,NSLICE)
             GOTO 9000                  
          ENDIF
          CALL MODEL3(LUN1,LUN2,FILNAM,NSAM2,NROW2,NSLICE)
          CLOSE(LUN2)
          GOTO 9000
a224 1
        CALL MODEL(LUN1,NSAM2,NROW2)
@


1.44
log
@mrnlstrt removed
@
text
@d175 2
a176 2
C       NEED INPUT FILE, USE IRTFLG = 88 TO ALLOW MALFORMED STACKS
        IRTFLG = 88
d285 2
a286 2
C       IRTFLG OF 88 WILL ALLOW OPENING STACK WITHOUT @@
12      IRTFLG = 88
d381 1
a381 2
C2006   CALL MRNLSTRT(MAXDIM,10)
2006  	WRITE(NOUT,*) '*** MRNLSTRT SUBROUTINE NEVER WORKED ON UNIX !'
@


1.43
log
@changd setval parameters
@
text
@d381 2
a382 1
2006    CALL MRNLSTRT(MAXDIM,10)
@


1.42
log
@removed "pr"
@
text
@d4 7
a10 6
C    UTIL1.FOR            CHANGED: TITLE PROCESSING MODIFIED NOV 87 al
C                                  LONG FILE NAMES ADDED     DEC 88 al
C	                           MAHIEDDINE LADJADJ       4/21/93
C	                           JING SU                  8/25/93
C	                           LI COMMAND REWRITTEN     8/30/96 al
C	                           TT COMMAND REWRITTEN     6/28/97 al
d284 6
a289 2
12      CALL FILERD(FILNAM,NLETI,NULL,'INPUT',IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 9000
d291 2
a292 2
C	SET LABEL VALUES TO SOLICTED INPUT
        CALL SETVAL(FILNAM,LUN1)
@


1.41
log
@changed hisd & hist parameters
@
text
@d34 1
a34 1
	PARAMETER      (NFUNC=20)
d40 4
a43 3
        DATA FUNC/'DE', 'DU', 'FI', 'HI', 'LI', 'MO', 'PK', 
     &            'PR', 'RA', 'RN', 'TT', 'ST', 'TF', 'FS', 
     &            'CA', 'GR', 'CG', 'CV', 'CL', 'HD'/
d59 4
a62 2
            GOTO ( 1, 2, 3, 4, 5, 6, 7, 8, 9,10,
     &            11,12,13,14,15,16,17,18,19,20), (IFUNC)
a242 8
C       OPERATION   ------------ GREY SCALE ----------------------- 'PR'
8       CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

 	CALL OPRINT(FILNAM,LUN1,NSAM1,NROW1,NSLICE,FCHAR(4:))
   	GOTO 9000

@


1.40
log
@HD added
@
text
@d75 1
a75 1
2	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
d79 6
a84 2
	IDUST = 1
   	CALL HIST(LUN1,NSAM1,NROW1,NSLICE,IDUST,LUN2)
d131 2
a132 2
	   IDUST = 0
   	   CALL HIST(LUN1,NSAM1,NROW1,NSLICE,IDUST,LUN2)
d148 1
d151 3
a153 2

   	   CALL HISTM(LUN1,LUN2,LUN3,NSAM1,NROW1,NSLICE)
d159 2
a160 1
20      CALL HISD
@


1.39
log
@*** empty log message ***
@
text
@d34 1
a34 1
	PARAMETER      (NFUNC=19)
d42 1
a42 1
     &            'CA', 'GR', 'CG', 'CV', 'CL'/
d59 1
a59 1
     &            11,12,13,14,15,16,17,18,19), (IFUNC)
d149 5
@


1.38
log
@cengca removed
@
text
@d80 1
a80 1
   	CALL HIST(LUN1,NSAM1,NROW1,NSLICE,IDUST,LUN2,.FALSE.)
d128 1
a128 1
   	   CALL HIST(LUN1,NSAM1,NROW1,NSLICE,IDUST,LUN2,.TRUE.)
@


1.37
log
@model fixed
@
text
@a452 4
	ELSEIF (FCHAR(4:4).EQ.'C') THEN
          CALL CENGCA(LUN1,LUN2)
	  GOTO 9000

@


1.36
log
@PK 3S removed
@
text
@d207 1
a207 1
        CALL MODEL(LUN1,FILNAM,NSAM2,NROW2)
@


1.35
log
@used opfil
@
text
@a211 7
C       3-D PEAK STATISTICS BASED ON DOCUMENT FILE
7	IF (FCHAR(4:4).EQ.'3' .AND.
     &     (FCHAR(5:5).EQ.'S'.OR.FCHAR(6:6).EQ.'S')) THEN
           CALL DIST3(LUN1)
           GOTO 9000
        END IF

d213 1
a213 1
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE1,
@


1.34
log
@changed qstat call
@
text
@d53 2
d76 1
a76 1
     &             FORM,'INPUT',.FALSE.,IRTFLG)
d85 1
a85 3
3       CALL FILERD(FILNAM,NLETI,NULL,'FILE INFO. ON',IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 9000
        IF (FCHAR(4:4) .EQ. 'A' .OR. NLETI .EQ. 3) THEN
d88 2
d95 4
a98 2
           CALL OPENF(FILNAM,LUN1,NSAM1,NROW1,'ZOLD',NF,NSLICE)
           IF (NF .EQ. 2) THEN
d100 1
a100 1
              CALL FILDAT(LUN1,NSAM1)
d111 4
a114 3
C	   FILE INFO FOR SINGLE FILE
           CALL OPENF(FILNAM,LUN1,NSAM1,NROW1,'OLD',NF,NSLICE)
           IF (NF.EQ.2) CALL FILDAT(LUN1,NSAM1)
d122 1
a122 1
     &             IDUM,'INPUT',.FALSE.,IRTFLG)
d133 1
a133 1
     &             IDUM,'MASK',.FALSE.,IRTFLG)
d162 1
a162 1
     &              IDUM,'INPUT',.TRUE.,IRTFLG)
d194 1
a194 1
     &             IDUM,'OUTPUT',.TRUE.,IRTFLG)
d221 1
a221 1
     &             IDUM,'INPUT',.TRUE.,IRTFLG)
d237 1
a237 1
     &             IDUM,'INPUT',.FALSE.,IRTFLG)
d247 1
a247 1
     &             IDUM,'INPUT',.FALSE.,IRTFLG)
d268 1
a268 1
     &             IDUM,'INPUT',.TRUE.,IRTFLG)
d447 1
a447 1
     &             IDUM,'INPUT',.FALSE.,IRTFLG)
d470 1
a470 1
     &             IDUM,'INPUT',.FALSE.,IRTFLG)
@


1.33
log
@added nslice parameter to oprint call
@
text
@d322 3
a324 2
14      CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
     &             IDUM,'INPUT',.TRUE.,IRTFLG)
d328 1
a328 1
        CALL QSTAT(LUN1,LUN2,NSAM1,NROW1,NSLICE)
@


1.32
log
@added irtflg=88 to listiti
@
text
@d235 1
a235 1
 	CALL OPRINT(FILNAM,LUN1,NSAM1,NROW1,FCHAR(4:))
@


1.31
log
@removed listim call
@
text
@d11 8
a18 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d154 2
a155 1
C       NEED INPUT FILE
@


1.30
log
@used return after deletf
@
text
@d161 2
a162 2
C          UNDOCUMENTED COMMAND 'LI 2D'
           CALL LISTIM(LUN1,NSAM1,NROW1,NSLICE)
@


1.29
log
@added fi n operation
@
text
@d68 2
a69 1
	GOTO 9000
@


1.28
log
@*** empty log message ***
@
text
@d89 16
@


1.27
log
@changed tt operation questions
@
text
@a36 1
        CHARACTER *160 CTITT
a39 1
	COMMON A0(4)
d250 1
a250 1
        CALL RDPRMC(CTITT,NLET,.FALSE.,'NEW TITLE',NULL,IRTFLG)
d254 2
a255 2
        CTIT   = CTITT
        IFOUND = -1
@


1.26
log
@changed INPUT1 prompts
@
text
@d9 1
d245 1
a245 6
11      IFOUND = -1
C       USE FILERD TO GET NEW TITLE HERE (CAN NOT DO IT IN OPFIL!)
        CALL FILERD(FILNAM,NLET,NULL,'FILENAME|NEW TITLE',IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 9000
C	RECORD NEW TITLE FOR LATER USE.
        CTITT  = CTIT
d247 1
a247 1
	CALL OPFIL(.FALSE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE1,
d251 4
d256 2
a257 1
        CTIT = CTITT
@


1.25
log
@bad lun in listitr call shud be lun1
@
text
@d226 1
a226 1
     &             IDUM,'INPUT1',.FALSE.,IRTFLG)
d262 1
a262 1
12      CALL FILERD(FILNAM,NLETI,NULL,'INPUT1',IRTFLG)
d307 1
a307 1
     &             IDUM,'INPUT1',.TRUE.,IRTFLG)
d425 1
a425 1
     &             IDUM,'INPUT1',.FALSE.,IRTFLG)
d448 1
a448 1
     &             IDUM,'INPUT1',.FALSE.,IRTFLG)
@


1.24
log
@listitr call was bad
@
text
@d156 1
a156 1
              CALL LISTITR(FILNAM,LUN,NSAM,NROW,NSLICE)
@


1.23
log
@arguments for chkinpq of ca commands: removed sf, correct goto number for claf
@
text
@d156 1
a156 1
              CALL LISTITR(FILNAM,LUN,NSAM,NROW,NSLICE,TERMPRNT)
@


1.22
log
@removed unused subroutines
@
text
@d319 1
a319 1
     &   'SR,SRD,SRI,SRP,SR/C,SRD/C,SRI/C,S,SI,SI+,SIB,SIB+,SM,SME,SF$'
d321 3
a323 2
           GOTO (2003,2010, 2010, 2010, 2010, 2010, 2010,2010,   
     &           2009, 2009, 2009, 2009, 2009,2011,2011, 2015), ICALL
d326 5
a330 5
     &     'E,P,3,MAP,M,MT,ES,C,CT,VAR,CLA,CLAF,HC,HD,HE,KM,VIS$'
     &     ,FCHAR(4:),ICALL)
           GOTO (2003,2003, 2004, 2005, 2006, 2007, 2007, 2003, 2007, 
     &           2007,2012, 2013, 2009, 20333,20334, 20335,
     &           20344, 20555), ICALL
a332 9
CCCCCCCCCCCCCCCCCCCCC
C15      CALL CHKINPQ('SR,SRD,SRI,SRP,SR/C,SRD/C,SRI/C,E,P,3,MAP,M,MT,ES,
C     $  C,CT,S,SI,SI+,SIB,SIB+,SM,SME,VAR,CLA,CLAF,SF,HC,HD,HE,KM,VIS$',
C     $  FCHAR(4:),ICALL)
C        GOTO (2003,2010,2010,2010,2010,2010,2010,2010,2003,2004,2005,
C     $   2006,2007,2007,2003,2007,2007,2009,2009,2009,2009,2009,2011,
C     $   2011,2012,2013,2015,2009,
C     $   20333,20334,20335,20344,20555), ICALL
CCCCCCCCCCCCCCCCCCCCC
d334 1
a334 4

2007	CALL CAMAP(LUN1,FCHAR(4:))
	GOTO 9000

d341 2
a343 1
C       CALL CAPART(LUN1,LUN2,LUN3)
d348 1
d353 1
d357 5
d365 1
d371 1
d377 16
d398 2
d405 1
d411 1
d417 1
a419 11
        GOTO 9000

2012    CALL MRVARI(MAXDIM)
        GOTO 9000

C2013    CALL SCLASSI(MAXDIM)
2013    WRITE(NOUT,*) 'NOTICE: use CL CLA instead'
        GOTO 9000

C2015    CALL SCLASF
2015    WRITE(NOUT,*) 'NOTICE: use CL CLAF instead'
@


1.21
log
@chaned deletf parameters
@
text
@d352 2
a353 1
2004	CALL CAPART(LUN1,LUN2,LUN3)
@


1.20
log
@added tf ct, tf ct3 for J. zhu
@
text
@d68 1
a68 1
1       CALL DELETF(FCHAR,FILNAM,LUN1,DATEXC)
@


1.19
log
@added NO_SAVE
@
text
@d271 2
a272 2
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV,CTF$',FCHAR(4:),ICALLTF)
        GOTO (1801,1802,1803,1804,1805,1806,1807,1808) ICALLTF
d296 6
@


1.18
log
@altered 'li' calls
@
text
@d32 1
@


1.17
log
@CV REPL2 disabled
@
text
@d8 1
d37 1
d62 1
a62 1
C       OPERATION NOT IN UTIL1, RETURN TO DRIVER
d101 1
a101 1
     &             IFORM1,'INPUT',.FALSE.,IRTFLG)
d110 1
d112 2
a113 1
     &             IFORM2,'MASK',.FALSE.,IRTFLG)
d132 5
a136 6
5       IF (FCHAR(4:4) .NE. 'R') THEN
C         NEED INPUT FILE
          CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
     &              IFORM,'INPUT',.TRUE.,IRTFLG)
          IF (IRTFLG .NE. 0) GOTO 9000
        END IF
d138 8
a145 2
        CALL CHKINPQ('3,3D,2D$',FCHAR(4:),ICALL1)
        GOTO (501,502,502,503) ICALL1
d147 13
a159 3
501     CONTINUE
C       FOR 'LI', 'LI R', 'LI T', & 'LI D'
        CALL OPNPIC(FILNAM,LUN1,NSAM1,NROW1,NSLICE)
a161 10
502     CONTINUE
C       FOR 'LI 3' or 'LI 3D'
        CALL OPNPC3(FILNAM,LUN1,NSAM1,NROW1,NSLICE)
        GOTO 9000

503     CONTINUE
C       UNDOCUMENTED COMMAND 'LI 2D'
        CALL LISTIM(LUN1,NSAM1,NROW1,NSLICE)
   	GOTO 9000

d172 1
a172 1
     &             IFORM,'OUTPUT',.TRUE.,IRTFLG)
d199 1
a199 1
     &             IFORM,'INPUT',.TRUE.,IRTFLG)
d215 1
a215 1
     &             IFORM,'INPUT',.FALSE.,IRTFLG)
d224 3
a226 3
9        CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
     &             IFORM,'INPUT1',.FALSE.,IRTFLG)
         IF (IRTFLG .NE. 0) GOTO 9000
d251 1
a251 1
     &             IFORM,'INPUT',.TRUE.,IRTFLG)
d300 1
a300 1
     &             IFORM,'INPUT1',.TRUE.,IRTFLG)
d408 1
a408 1
     &             IFORM,'INPUT1',.FALSE.,IRTFLG)
d431 1
a431 1
     &             IFORM,'INPUT1',.FALSE.,IRTFLG)
@


1.16
log
@tdfrepl disabled
@
text
@d442 1
a442 1
	CALL TDFREPL(LUN1,LUN2,LUN3)
@


1.15
log
@removed PR V* commands to rejects
@
text
@d439 4
a442 1
182     CALL TDFREPL(LUN1,LUN2,LUN3)
@


1.14
log
@added CT CTF
@
text
@d4 1
a4 1
C    UTIL1.FOR                     TITLE PROCESSING MODIFIED NOV 87 al
d6 1
a6 1
C	                  CHANGED: MAHIEDDINE LADJADJ       4/21/93
d205 1
a205 7
8       CALL CHKINPQ('VM,VTM,VC,VTG,TTM$',FCHAR(4:),ICALL8)
	IF (ICALL8 .EQ. 4) THEN
          CALL GRVT125(FILNAM,LUN1,NSAM1,NROW1,FCHAR(4:))
          GOTO 9000
        END IF

        CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE,
d209 1
a209 3
	GOTO (1105,1110,1110,1110,1109,1110) ICALL8

1105	CALL OPRINT(FILNAM,LUN1,NSAM1,NROW1,FCHAR(4:))
a211 5
1110    CALL GRVT125(FILNAM,LUN1,NSAM1,NROW1,FCHAR(4:))
	GOTO 9000

1109	CALL GRGREY(FILNAM,LUN1,NSAM1,NROW1,FCHAR(4:))
	GOTO 9000
d314 1
a314 1
        END IF
@


1.13
log
@bad errt call fixex
@
text
@d274 2
a275 2
13      CALL CHKINPQ('D,C,C3,DDF,DNS,DEV$',FCHAR(4:),ICALLTF)
        GOTO (1801,1802,1803,1804,1805,1806,1807) ICALLTF
d296 3
@


1.12
log
@added hi m stuff
@
text
@d118 1
a118 1
              CALL ERRT(1,UTIL1,NE)
@


1.11
log
@for li 3d need change
@
text
@d99 1
a99 1
     &             IFORM,'INPUT',.FALSE.,IRTFLG)
d102 22
a123 2
	IDUST = 0
   	CALL HIST(LUN1,NSAM1,NROW1,NSLICE,IDUST,LUN2,.TRUE.)
@


1.10
log
@added li d & cosmetic
@
text
@d115 2
a116 2
        CALL CHKINPQ('3,2D$',FCHAR(4:),ICALL1)
        GOTO (501,502,503) ICALL1
d124 1
a124 1
C       FOR 'LI 3'
@


1.9
log
@cosmetic for pr operation.
@
text
@a101 1
C	HISTOGRAM
d107 1
a107 1
C       CHECK FOR 'LI R'
d109 1
a109 1

d111 1
a111 1
     &              IFORM,'INPUT1',.TRUE.,IRTFLG)
a114 1
C 	LIST
d117 4
a120 1
501        CALL OPNPIC(FILNAM,LUN1,NSAM1,NROW1,NSLICE)
d122 4
a125 1
502        CALL OPNPC3(FILNAM,LUN1,NSAM1,NROW1,NSLICE)
d127 4
a130 1
503        CALL LISTIM(LUN1,NSAM1,NROW1,NSLICE)
d139 2
a140 2
	  NSLICE = 0
	  IFORM  = 3
d147 5
a151 5
            LUNM = LUN1
            IF (FILNAM(1:1). EQ. '*') LUNM = 0
            CALL MODELH(LUNM,NSAM2,NROW2,NSLICE)
            GOTO 9000                  
          END IF
d155 1
a155 1
	END IF
d164 2
a165 2
          CALL DIST3(LUN1)
          GOTO 9000
d306 1
a306 3
ccccccccccccccccccccc
C	 OPERATION  ---------CLUSTER ANALYSIS   ------------------- 'CA'
C
a309 1
C
d314 2
a315 1
C
@


1.8
log
@"tt" operation did not work!
@
text
@d185 3
a187 2
     &             IFORM,'INPUT1',.FALSE.,IRTFLG)
         IF (IRTFLG .NE. 0) GOTO 9000
@


1.7
log
@hist parameters changed (to remove radius, etc)
@
text
@d79 1
a79 1
C 	OPERATION   ----------- FILE INFO -------------------------- 'FI'
d126 1
a126 1
C 	OPERATION ---------------- MODEL ---------------------------- 'MO'
d152 1
a152 1
C 	OPERATION ---------------- PEAK SEARCH ----------------------- 'PK'
d177 1
a177 1
C       OPERATION   ------------ GREY SCALE -------------------------- 'PR'
d198 1
a198 1
C	OPERATION ------------- RAMP ------------------------------- 'RA'
d219 4
a223 1
11      IFOUND = -1
d225 2
a226 1
	CALL OPFIL(.TRUE.,FILNAM,LUN1,'O',NSAM1,NROW1,NSLICE1,
d230 1
a230 1
C	TITLE ALTERATION
@


1.6
log
@correct position of sf (ca sf) for the goto call
@
text
@a29 1
#ifdef SP_UNIX
a30 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif
d72 1
a72 1
     &             FORM,'INPUT1',.FALSE.,IRTFLG)
d76 1
a76 1
   	CALL HIST(LUN1,NSAM1,NROW1,NSLICE,IDUST,LUN2)
d95 1
a95 1
C       OPERATION -------------- HISTOGRAM ------------------------- 'HI'
d99 1
a99 1
     &             IFORM,'INPUT1',.FALSE.,IRTFLG)
d103 2
a104 2
	IDUST=0
   	CALL HIST(LUN1,NSAM1,NROW1,NSLICE,IDUST,LUN2)
@


1.5
log
@clean up unused variables and hollerith warnings
@
text
@d284 3
a286 3
           CALL CHKINPQ(
     &     'SR,SRD,SRI,SRP,SR/C,SRD/C,SRI/C,S,SI,SI+,SIB,SIB+,SM,SME$'
     &     ,FCHAR(4:),ICALL)
d288 1
a288 1
     &           2009, 2009, 2009, 2009, 2009,2011,2011), ICALL
d291 1
a291 1
     &     'E,P,3,MAP,M,MT,ES,C,CT,VAR,CLA,CLAF,SF,HC,HD,HE,KM,VIS$'
d294 1
a294 1
     &           2007,2012, 2013, 2015, 2009, 20333,20334, 20335,
@


1.4
log
@undefined irtflg spelling error
@
text
@d127 1
a127 1
503        CALL LISTIM(FILNAM,LUN1,NSAM1,NROW1,NSLICE)
d283 27
a309 8
15      CALL CHKINPQ('SR,SRD,SRI,SRP,SR/C,SRD/C,SRI/C,E,P,3,MAP,M,MT,ES,
     $  C,CT,S,SI,SI+,SIB,SIB+,SM,SME,VAR,CLA,CLAF,SF,HC,HD,HE,KM,VIS$',
     $  FCHAR(4:),ICALL)

        GOTO (2003,2010,2010,2010,2010,2010,2010,2010,2003,2004,2005,
     $   2006,2007,2007,2003,2007,2007,2009,2009,2009,2009,2009,2011,
     $   2011,2012,2013,2015,2009,
     $   20333,20334,20335,20344,20555), ICALL
@


1.3
log
@Zhu Jun's transfer function pgms. added
@
text
@a36 1
	DIMENSION      FARRAY(3)
a39 1
        CHARACTER *4   EXTEN
d189 1
a189 1
     &             IFORM,'INPUT1',.FALSE.,IRTLFG)
@


1.2
log
@cpp_lines_added
@
text
@d248 2
a249 2
13      CALL CHKINPQ('D,C,C3$',FCHAR(4:),ICALLTF)
        GOTO (1801,1802,1803,1804) ICALLTF
d261 9
@


1.1
log
@Initial revision
@
text
@d30 3
d34 1
@
