head	1.22;
access;
symbols
	healthdept_2018:1.22
	pre_getangas:1.21
	GPL2010:1.21
	pre_GPL2010:1.20
	pre_var_equation:1.20
	pre_fftwrings:1.20
	pre_opfiles:1.20
	src:1.20
	best-code:1.20
	x-named-regs:1.20
	x:1.20
	v13-00:1.20
	pre_GPL:1.18
	prec_CA:1.18
	noindx:1.15
	Bproc:1.11
	oct21:1.11
	last77:1.9;
locks; strict;
comment	@c @;


1.22
date	2018.10.03.14.51.08;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2010.06.24.13.27.10;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2005.10.17.20.16.34;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.17.18.09.53;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.28.18.00.22;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.07.25.16.31.52;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.07.08.16.29.28;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2002.09.18.15.20.39;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2001.07.16.19.57.44;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.01.25.13.56.18;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.12.19.19.50.32;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.06.22.19.46.40;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.06.17.19.12.07;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.02.05.14.54.13;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	96.08.01.14.16.06;	author mladjadj;	state Exp;
branches;
next	1.7;

1.7
date	96.07.02.18.44.15;	author mladjadj;	state Exp;
branches;
next	1.6;

1.6
date	94.07.19.13.41.34;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	94.07.19.12.01.30;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	94.07.05.11.11.23;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.07.05.10.55.11;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.12.14;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.35;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.22
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C UNSAV.F              DOCNAM LENGTHENED DEC 9 88 al
C                      REPLACES UNSAVD ArDean Leith
C                      USED LUNDOC JUNE 99 ArDean Leith
C                      OPENDOC PARAMETERS CHANGED DEC 2000 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C PURPOSE: RETRIEVE PARAMETERS FROM A SINGLE SPECIFED KEY FOUND IN
C          A DOC. FILE.  OPENS FILE IF NECESSARY.   
C                
C UNSAV(DOCNAM,NOPENT,NDOC,IKEY,PLIST,NLIST,IRTFLG,NSS)
C
C PARAMETERS:
C	DOCNAM		NAME OF DOC FILE - CHAR. ARRAY           (SENT)
C	NOPENT          SWITCH =<0,  SUPRESSES ERROR MESSAGES    (SENT)
C	                SWITCH = 0,  FIRST TIME - OPEN DOC FILE
C			SWITCH = 1,  DOC FILE ALREADY OPENED
C	NDOC		LUN NUMBER FOR DOC FILE                  (SENT)
C	IKEY		KEY WANTED IN DOC FILE                   (SENT)
C	PLIST  		ARRAY OF RETRIEVED NUMBERS           (RETURNED)
C	NLIST  		NUMBER OF ELEMENTS IN ARRAY              (SENT)
C	IRTFLG	        0 = NO ERRORS IN DOC FILE
C			1 = ERROR IN DOC FILE 
C			2 = DOC FILE NOT FOUND               (RETURNED)
C	NSS		0 = ALL KEYS ARE SEARCHED, THEN REWOUND  (SENT)
C			1 = SEQUENTIAL MODE; FIRST MATCHING
C			    KEY IS USED, DOC IS NOT REWOUND
C			2 = SEQUENTIAL MODE; FIRST MATCHING
C			    KEY IS USED, DOC REWOUND & SEARCHED 
C                           AGAIN IF NOT FOUND ON FIRST PASS
C
C--*********************************************************************
		
        SUBROUTINE UNSAV(DOCNAM,NOPENT,NDOC,IKEY,PLIST,NLIST,IRTFLG,NSS)

	INCLUDE 'CMLIMIT.INC' 
	INCLUDE 'CMBLOCK.INC' 
	
	REAL, DIMENSION(*) ::     PLIST
        CHARACTER(LEN=*) ::       DOCNAM
	LOGICAL    ::             NEWFILE,FLAGER,TILLEND,GOBACK

        SAVE NDOCNIC

C	NSS FLAG = 0, ALL KEYS ARE SEARCHED, AT END DOC IS REWOUND
        TILLEND = (NSS .EQ. 0)

C       SET ERROR RETURN FLAG
	IRTFLG   = 1

        NOPEN  = NOPENT
        FLAGER = .TRUE.
        IF (NOPEN .LT. 0) THEN
C          NEGATIVE NOPEN SUPPRESSES ERROR MESSAGES ON RETRIEVAL
           FLAGER = .FALSE.
           NOPEN  = ABS(NOPEN)
        ENDIF

        IF (NLIST .LE. 0) THEN
	   CALL ERRT(101,'*** REGISTER LIST EMPTY IN UNSAV',IDUM)
	   RETURN

        ELSEIF (NOPEN. EQ. 0) THEN
C          MUST OPEN FILE FIRST
           IF (.NOT. FLAGER) IRTFLG = -9
           CALL OPENDOC(DOCNAM,.TRUE.,NLET,NDOC,NDOCNIC,.FALSE.,' ',
     &                  .TRUE.,.TRUE.,.TRUE.,NEWFILE,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
           CALL  LUNDOCSAYHDR(NDOCNIC,NOUT,IRTFLG)
        ENDIF

C       RETRIEVE IKEY'S VALUES
        GOBACK = (NOPEN .NE. 0) .AND. (NSS .EQ. 2)
        CALL  LUNDOCREDDAT(NDOCNIC,IKEY,PLIST,NLIST,IGOT,
     &                     TILLEND,GOBACK,IRTFLG)

        IF (IRTFLG .EQ. 0) THEN
C          DESIRED KEY WAS FOUND OK
           IF (IGOT .LT. NLIST .AND. FLAGER) THEN
C             DID NOT FIND AS MANY REGISTERS AS WANTED FOR THIS KEY
              WRITE(NOUT,8887) NLIST,IKEY,IGOT
8887	      FORMAT
     &        (' *** WANTED:',I3,' REG. FOR KEY:',I7,' ONLY GOT:',I3)
              IRTFLG = 1
           ENDIF

        ELSE
C          DID NOT EVEN FIND THIS KEY
           IF (FLAGER) THEN
              WRITE(NOUT,8889) IKEY
8889          FORMAT(' *** KEY:',I7,' NOT FOUND')
           ENDIF
           IRTFLG = 1
        ENDIF

	IF (TILLEND .AND. NDOCNIC .GT. 0) REWIND NDOC

	RETURN
	END
@


1.21
log
@GPL_2010
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.20
log
@GPL License fixed
@
text
@a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.19
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a9 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d13 1
a13 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a32 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a33 1
C **************************************************************************
@


1.18
log
@save ndocnic
@
text
@d2 1
d10 1
d12 1
d14 24
d44 1
@


1.17
log
@irtflg -9 if not flagerr
@
text
@d50 1
a50 1
	real, DIMENSION(*) ::     PLIST
d53 2
@


1.16
log
@incore opendoc
@
text
@d74 1
@


1.15
log
@nss=2 parameter added
@
text
@d50 2
a51 2
	DIMENSION                 PLIST(*)
	CHARACTER *(*)            DOCNAM
d74 1
a74 1
           CALL OPENDOC(DOCNAM,.TRUE.,NLET,NDOC,.FALSE.,' ',
d77 1
a77 1
           CALL  LUNDOCSAYHDR(NDOC,NOUT,IRTFLG)
d82 1
a82 1
        CALL  LUNDOCREDDAT(NDOC,IKEY,PLIST,NLIST,IGOT,
d104 1
a104 1
	IF (TILLEND) REWIND NDOC
@


1.14
log
@nopent needed to avode damage to nopen if nopen is constant
@
text
@d31 1
a31 2
C	PLIST  		ARRAY OF FLOATING POINT
C                           NUMBERS RETRIEVED           (SENT/RETURNED)
d33 9
a41 9
C	IRTFLG		(ON INPUT NEGATIVE IRTFLG SUPRESSES
C                            TITLE OUTPUT)
C                       FLAG = 0, NO ERRORS IN DOC FILE
C			FLAG = 1, ERROR IN DOC FILE 
C			FLAG = 2, DOC FILE NOT FOUND   (SENT/RETURNED)
C	NSS		FLAG = 0, ALL KEYS ARE SEARCHED, DOC
C			IS REWOUND
C			FLAG = 1, SEQUENTIAL MODE; FIRST MATCHING
C			KEY IS USED, DOC IS NOT REWOUND          (SENT)
d43 1
a43 1
C--*******************************************************************
d52 1
a52 1
	LOGICAL    ::             NEWFILE,FLAGER,TILLEND,WRTCOM
d54 1
a54 4
C       NEGATIVE VALUE OF IRTFLG SUPPRESSES TERMINAL OUTPUT OF COMMENT
	WRTCOM  = (IRTFLG .GE. 0) 

C	NSS FLAG = 0, ALL KEYS ARE SEARCHED, DOC IS REWOUND
d81 3
a83 1
        CALL  LUNDOCREDDAT(NDOC,IKEY,PLIST,NLIST,IGOT,TILLEND,IRTFLG)
d91 1
a91 1
     &        (' *** WANTED:',I4,' REG. FOR KEY:',I7,' ONLY GOT:',I4)
@


1.13
log
@no save needed
@
text
@d22 1
a22 1
C UNSAV(DOCNAM,NOPEN,NDOC,IKEY,PLIST,NLIST,IRTFLG,NSS)
d26 1
a26 1
C	NOPEN		SWITCH =<0,  SUPRESSES ERROR MESSAGES    (SENT)
d46 1
a46 1
        SUBROUTINE UNSAV(DOCNAM,NOPEN,NDOC,IKEY,PLIST,NLIST,IRTFLG,NSS)
d64 1
@


1.12
log
@opendoc has prompt parameter now
@
text
@d48 1
d51 3
a53 9
        COMMON /DOCLAB/ DOCTIC

C       I DO NOT KNOW IF SAVE IS NEEDED FEB 99 al
        SAVE

	DIMENSION      PLIST(*)
	CHARACTER *(*) DOCNAM
        CHARACTER *80  DOCTIC
	LOGICAL        NEWFILE,FLAGER,TILLEND,WRTCOM
@


1.11
log
@bad NLIST
@
text
@d4 4
a7 3
C UNSAV.FOR                DOCNAM LENGTHENED DEC 9 88 al
C                          REPLACES UNSAVD ArDean Leith
C                          USED LUNDOC JUNE 99 ArDean Leith
d82 1
a82 1
           CALL OPENDOC(DOCNAM,.TRUE.,NLET,NDOC,.FALSE.,
@


1.10
log
@used lundoc
@
text
@d88 1
a88 1
        CALL  LUNDOCREDDAT(NDOC,IKEY,PLIST,NMAX,IGOT,TILLEND,IRTFLG)
@


1.9
log
@CNO_SAVE
@
text
@d5 3
a7 1
C                          REPLACES UNSAVD
d21 1
a21 1
C UNSAV(DOCNAM,NOPEN,NDOC,IKEY,PLIST,NLIST,LERR,NSS)
d33 1
a33 1
C	LERR		(ON INPUT NEGATIVE LERR SUPRESSES
d45 1
a45 3
        SUBROUTINE UNSAV(DOCNAM,NOPEN,NDOC,IKEY,PLIST,NLIST,
     &                     LERR,NSS)

a50 2
CNO_SAVE 

d54 1
a54 2
        PARAMETER      (MAXSAV= 20)
	DIMENSION      PLIST(*),SAV(MAXSAV),DUMSAV(MAXSAV)
d56 2
a57 3
        CHARACTER *80  DOCTIC,RECLIN
        CHARACTER      NULL
	LOGICAL        NEWFILE,COMKEY,GOTKEY,MORE,OLDLEN,FLAGER
d59 2
a60 1
        NULL = CHAR(0)
d62 2
a63 2
C       NEGATIVE VALUE OF LERR SUPPRESSES TERMINAL OUTPUT OF TITLE
	NPR  = LERR
d66 2
a67 1
	LERR   = 1
d76 1
a76 1
	   WRITE(NOUT,*) '*** REGISTER LIST EMPTY IN UNSAV'
a78 4
        ELSEIF (NLIST .GT. MAXSAV) THEN
           WRITE(NOUT,*) '*** TOO MANY REGISTERS WANTED IN UNSAV'
           RETURN

d82 3
a84 25
     &                  .TRUE.,.TRUE.,.TRUE.,NEWFILE,LERR)
           IF (LERR .NE. 0) RETURN
        ENDIF

        MORE   = .FALSE.
        GOTKEY = .FALSE.
        COMKEY = .FALSE.

        IF (IKEY .LT. 0) THEN
C          DESIRE A COMMENTED KEY
           COMKEY = .TRUE.
           IKEY = ABS(IKEY)
        ENDIF


C -----------------------------------------------------

C       READ NEXT LINE FROM DOC FILE
510	READ (NDOC,518,END=595) RECLIN
518	FORMAT(A80)

        IF (RECLIN(5:5) .EQ. ' ') THEN
           OLDLEN = .TRUE.
        ELSE
           OLDLEN = .FALSE.
a85 82
           
511     IF (COMKEY) THEN
C         ARE SEARCHING FOR COMMENT KEYS
          IF (RECLIN(2:2) .EQ. ';') THEN
C           COMMENT LINE FOUND AND ARE SEARCHING FOR COMMENT KEYS
            IF (OLDLEN) THEN
               READ(RECLIN(3:80),519,ERR=510) NDUM,NDUMB2,
     &          (DUMSAV(K),K=1,NDUMB2)
519            FORMAT(2I2,6F12.6)
            ELSE
               READ(RECLIN(3:80),619,ERR=510) NDUM,NDUMB2,
     &          (DUMSAV(K),K=1,NDUMB2)
619            FORMAT(I3,I2,6F12.6)
            ENDIF
            IF (NDUM .EQ. IKEY) THEN
C              DESIRED COMMENT KEY FOUND
               GOTKEY = .TRUE.
               IGOT   = NDUMB2
            ENDIF
          ENDIF

        ELSEIF (RECLIN(2:2) .EQ. ';') THEN
C         COMMENT LINE FOUND AND WE ARE NOT SEARCHING FOR COMMENT KEYS
          DOCTIC = RECLIN
          IF (NFIRST .EQ. 0) THEN
C           FIRST COMMENT ENCOUNTERED, SO WRITE OUT COMMENT
            IF (NPR .GE. 0) WRITE(NOUT,700) RECLIN
700         FORMAT(A80)
            NFIRST=1
          ENDIF
        
        ELSEIF (MORE) THEN
C         WANT A CONTINUATION LINE FOR THE PREVIOUS KEY
          MORE = .FALSE.         
          IF (OLDLEN) THEN
              READ(RECLIN,520,ERR=510) IDUM,NDUMB2,(DUMSAV(J),
     &        J=IGO,IGO+NDUMB2-1)
          ELSE
              READ(RECLIN,620,ERR=510) IDUM,NDUMB2,(DUMSAV(J),
     &        J=IGO,IGO+NDUMB2-1)
          ENDIF

          IF (IDUM .EQ. -99) THEN
C            THIS IS A CONTINUATION LINE FOR THE DESIRED KEY
             IGOT = IGO + NDUMB2 - 1
             IF (IGOT .LT. NLIST) THEN
C               STILL WANT MORE REGISTERS
                IGO = IGOT + 1
                MORE = .TRUE.
             ENDIF
          ENDIF
        ELSE

C         NOT A COMMENT AND WE ARE NOT SEARCHING FOR COMMENT KEYS
          IF (OLDLEN) THEN
             READ(RECLIN,520,ERR=510)NDUM,NDUMB2,(DUMSAV(J),J=1,NDUMB2)
520          FORMAT(I4,I2,6F12.6)
          ELSE
C	     INCREASED KEY NUMBER TO 99999.      ML
             READ(RECLIN,620,ERR=510)NDUM,NDUMB2,(DUMSAV(J),J=1,NDUMB2)
620	     FORMAT(I5,I2,6F12.6)
          ENDIF

	  IF (NDUM .EQ. IKEY) THEN
C            FOUND DESIRED KEY
             IGOT   =  NDUMB2
             GOTKEY = .TRUE.
             IF (IGOT .LT. NLIST) THEN
C               WANT MORE REGISTERS FOR THIS KEY
                MORE = .TRUE.
                IGO  = IGOT + 1
             ENDIF
          ENDIF

        ENDIF

        IF (NDUM .EQ. IKEY .AND. IGOT .GE. NLIST) THEN
C          SAVE THE REGISTER LIST FOR THIS KEY
           DO  I = 1,NLIST
              SAV(I) = DUMSAV(I)
           ENDDO
        ENDIF
d87 2
a88 1
        IF (MORE .OR. .NOT. GOTKEY .OR. NSS .EQ. 0) GOTO 510
d90 3
a92 15
C ---------------------------------------------------------


C       END OF FILE OR FIRST KEY FOUND AND  NSS = 1

595     IF (GOTKEY) THEN
C          DESIRED KEY WAS FOUND
           IF (IGOT .GE. NLIST .OR. .NOT. FLAGER) THEN
C             GOT ALL DESIRED REGISTERS FOR THIS KEY
              LERR = 0
              DO  I = 1,NLIST
                 PLIST(I) = SAV(I)
              ENDDO

           ELSE
d96 2
a97 1
     &        (' *** WANTED:',I5,' REG. FOR KEY:',I5,' ONLY GOT:',I5)
d102 1
a102 5
           IF (COMKEY) THEN
              WRITE(NOUT,8888) IKEY
8888	      FORMAT(' *** COMMENT KEY:',I5,' NOT FOUND')

           ELSEIF (FLAGER) THEN
d104 1
a104 1
8889          FORMAT(' *** KEY:',I5,' NOT FOUND')
d106 1
d109 2
a110 1
	IF (NSS .EQ. 0) REWIND NDOC
@


1.8
log
@bad RECLIN(:2) replaced with RECLIN(2:2)
@
text
@d51 5
@


1.7
log
@make key go to 99999
@
text
@d112 1
a112 1
          IF (RECLIN(:2) .EQ. ';') THEN
d130 1
a130 1
        ELSEIF (RECLIN(:2) .EQ. ';') THEN
@


1.6
log
@fiexed douboe name question
@
text
@d46 1
a46 1
#ifdef SP_UNIX
d48 1
a48 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif
d102 1
a102 1
518	FORMAT(1X,A80)
d104 1
a104 1
        IF (RECLIN(4:4) .EQ. ' ') THEN
d112 1
a112 1
          IF (RECLIN(:1) .EQ. ';') THEN
d115 1
a115 1
               READ(RECLIN(2:80),519,ERR=510) NDUM,NDUMB2,
d119 1
a119 1
               READ(RECLIN(2:80),619,ERR=510) NDUM,NDUMB2,
d130 1
a130 1
        ELSEIF (RECLIN(:1) .EQ. ';') THEN
d136 1
a136 1
700         FORMAT(1X,A80)
d165 1
a165 1
520          FORMAT(I3,I2,6F12.6)
d167 1
d169 1
a169 1
620	     FORMAT(I4,I2,6F12.6)
@


1.5
log
@used opendoc and cosmetic
@
text
@d84 1
a84 1
           CALL OPENDOC(DOCNAM,.TRUE.,NLET,NDOC,.TRUE.,
@


1.4
log
@cosmetic
@
text
@d16 4
a19 3
C     UNSAV:    SUBROUTINE TO UNSAVE PARAMETERS IN DOCUMENT FILE 
C
C    CALL UNSAV(DOCNAM,NOPEN,NDOC,IKEY,PLIST,NLIST,LERR,NSS)
d21 3
a23 3
C    PARAMETERS:
C	DOCNAM		NAME OF DOC FILE - CHAR. ARRAY 
C	NOPEN		SWITCH =<0,  SUPRESSES ERROR MESSAGES 
d26 7
a32 5
C	NDOC		LUN NUMBER FOR DOC FILE
C	IKEY		KEY WANTED IN DOC FILE
C	PLIST  		ARRAY OF FLOATING PT. NUMBERS RETRIEVED
C	NLIST  		NUMBER OF ELEMENTS IN ARRAY
C	LERR		(ON INPUT NEGATIVE LERR SUPRESSES TITLE OUTPUT)
d35 1
a35 1
C			FLAG = 2, DOC FILE NOT FOUND
d39 1
a39 1
C			KEY IS USED, DOC IS NOT REWOUND
d58 1
a58 1
	LOGICAL        EX,COMKEY,GOTKEY,MORE,OLDLEN,FLAGER
d84 3
a86 15
           CALL FILCAN(DOCNAM,NLET,NULL,NULL,DOCNAM,DATEXC,IER)

	   WRITE(NOUT,91) DOCNAM(1:NLET)
91	   FORMAT(' OPENING DOC FILE: ',A)

           INQUIRE(FILE=DOCNAM,EXIST=EX)

           IF (.NOT. EX) THEN
             CALL ERRT(18,'UNSAV',NE)
             LERR = 2
             RETURN
           ENDIF

C          OPEN THE DOC FILE
           OPEN(UNIT=NDOC,FILE=DOCNAM,STATUS='OLD')
d205 4
a208 3
              DO 596 I = 1,NLIST
596           PLIST(I) = SAV(I)
   
@


1.3
log
@undefined null coused bad bug
@
text
@d76 1
a76 1
           WRITE(NOUT,*) '*** TOO MANY REGISTERS REQUESTED IN UNSAV'
d84 1
a84 1
91	   FORMAT(' OPENING DOC FILE:',A)
d88 1
a88 1
          IF (.NOT. EX) THEN
d94 1
d155 1
a155 1
              READ(RECLIN,520,ERR=510)IDUM,NDUMB2,(DUMSAV(J),
d158 1
a158 1
              READ(RECLIN,620,ERR=510)IDUM,NDUMB2,(DUMSAV(J),
d197 3
a199 2
           DO 602 I = 1,NLIST
602        SAV(I) = DUMSAV(I)
@


1.2
log
@cpp_lines_added
@
text
@d4 1
a4 1
C $$ UNSAV.FOR             DOCNAM LENGTHENED DEC 9 88 al
d16 1
a16 1
C  $$ UNSAV:    SUBROUTINE TO UNSAVE PARAMETERS IN DOCUMENT FILE 
d54 1
d57 2
d61 1
d63 1
a63 1
	LERR = 1
d68 1
a68 1
           NOPEN = ABS(NOPEN)
d72 1
a72 1
	   WRITE(NOUT,*) ' *** REGISTER LIST EMPTY'
d76 1
a76 1
           WRITE(NOUT,*) ' *** TOO MANY REGISTERS WANTED'
d83 3
a85 2
	   WRITE(NOUT,1111)(DOCNAM(K:K),K=1,NLET)
1111	   FORMAT(1X,80A1)
d88 1
a88 1
           IF (.NOT. EX) THEN
d90 1
a90 2
             WRITE(NOUT,*) ' *** FILE DOES NOT EXIST'
             LERR=2
d93 1
@


1.1
log
@Initial revision
@
text
@d43 3
d47 1
@
