head	1.10;
access;
symbols
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.7
	prec_CA:1.7
	noindx:1.7
	Bproc:1.3
	oct21:1.2
	last77:1.2;
locks; strict;
comment	@c @;


1.10
date	2010.06.24.13.26.34;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.20.17.22;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.18.10.34;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.06.15.17.23;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.06.15.12.57;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.06.15.09.43;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.05.13.17.05;	author bimal;	state Exp;
branches;
next	1.3;

1.3
date	99.11.10.23.11.15;	author yuchen;	state Exp;
branches;
next	1.2;

1.2
date	97.10.10.18.59.52;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.08.27.14.08.16;	author pawel;	state Exp;
branches;
next	;


desc
@simple 2D PW, on disk
@


1.10
log
@GPL_2010
@
text
@C
C $$ PW2SDR.FOR
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C
C
C IMAGE_PROCESSING_ROUTINE
C
C        1         2         3         4         5         6         7
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************
C
C $$ PW2SDR.FOR
C
        SUBROUTINE  PW2SDR(LUN1,LUN2,NSAM,NROW,MODE)
        DIMENSION   Q(NSAM+2-MOD(NSAM,2)),T(NSAM)
        CHARACTER*1  MODE
        LOGICAL*1 IFND

        NNNN = NSAM+2-MOD(NSAM,2)
        IFND=MOD(NROW,2).EQ.0
        NSC=NSAM/2+1

        DO    J=1,NROW
           CALL  REDLIN(LUN1,Q,NNNN,J)

C  Reaplce F(0,0) for visualization
	IF(J.EQ.1)  THEN
	  Q(1)=Q(3)
	  Q(2)=Q(4)
	ENDIF
C
           SCL=2.0/FLOAT(NSAM)/FLOAT(NROW)
        IF(MODE.EQ.'2')  THEN
           DO    I=NNNN-1,1,-2
              Q(NNNN-1-(NNNN-1-I)/2)=
     &          SCL*SCL*(Q(I+1)*Q(I+1)+Q(I)*Q(I))
           ENDDO
        ELSE
           DO    I=NNNN-1,1,-2
              Q(NNNN-1-(NNNN-1-I)/2)=
     &          SCL*SQRT(Q(I+1)*Q(I+1)+Q(I)*Q(I))
           ENDDO
        ENDIF
           IF(MODE.EQ.'L')  CALL  AL10(Q(NSAM/2),NSAM/2)
C          HAVE TO MOVE THE LAST ELEMENT
           Q(1)=Q(NNNN-1)
           CALL  WRTLIN(LUN2,Q,NSAM,J)
        ENDDO
C       CLOSE(LUN1)

        DO    J=1,NROW/2
           JJ=J+NROW/2+MOD(NROW,2)
           CALL  REDLIN(LUN2,Q,NSAM,J)
           CALL  REDLIN(LUN2,T,NSAM,JJ)
           CALL  WRTLIN(LUN2,Q,NSAM,JJ)
           CALL  WRTLIN(LUN2,T,NSAM,J)
        ENDDO

        IF(.NOT.IFND)  THEN
           CALL  REDLIN(LUN2,T,NSAM,NROW/2+1)
           DO    J=NROW/2+1,NROW-1
              CALL  REDLIN(LUN2,Q,NSAM,J+1)
              CALL  WRTLIN(LUN2,Q,NSAM,J)
           ENDDO
           CALL  WRTLIN(LUN2,T,NSAM,NROW)
        ENDIF   

        NSC=NNNN/2-1
        IF(IFND)  THEN
           JB=2
           CALL  REDLIN(LUN2,Q,NSAM,1)
           DO    I=2,NSC
              II=NNNN-I
              Q(I)=Q(II)
           ENDDO
           CALL  WRTLIN(LUN2,Q,NSAM,1)
        ELSE
           JB=1
        ENDIF
        DO    J=JB,NROW
           JJ=NROW-J+JB
           CALL  REDLIN(LUN2,Q,NSAM,J)
           CALL  REDLIN(LUN2,T,NSAM,JJ)
           Q(1)=T(1)
           DO    I=2,NSC
              II=NNNN-I
              Q(I)=T(II)
           ENDDO
           CALL  WRTLIN(LUN2,Q,NSAM,J)
        ENDDO
C
         END
@


1.9
log
@GPL License fixed
@
text
@a4 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d6 5
a10 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d12 1
a12 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d17 1
a17 1
C=* This program is distributed in the hope that it will be useful,    *
d19 1
a19 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a20 1
C=*                                                                    *
d22 1
a22 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@HRI GPL License used
@
text
@a4 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d8 1
a8 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a27 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a28 1
C **************************************************************************
a36 1
C--************************************************************************
@


1.7
log
@*** empty log message ***
@
text
@d4 1
d6 1
d8 24
d38 1
d47 1
@


1.6
log
@*** empty log message ***
@
text
@d36 6
a100 2
C
        Q(NSAM/2+1,NROW/2+1)=Q(NSAM/2,NROW/2)
@


1.5
log
@option 2 added
@
text
@d37 1
a37 1
	IF(MODE.EQ.'2')  THEN
d41 2
a42 1
	ELSE
d47 1
a47 1
	ENDIF
d96 1
a96 1
	Q(NSAM/2+1,NROW/2+1)=Q(NSAM/2,NROW/2)
@


1.4
log
@adapted to dynamical memory allocation
@
text
@d37 1
d40 4
d46 1
d95 1
a95 1
C         IF(MODE.NE.'L')  Q(NSAM/2+1,NROW/1+1)=0.0
a97 1

@


1.3
log
@a
@
text
@d1 1
d16 4
d24 63
a86 15
	SUBROUTINE  PW2SDR(LUN1,LUN2,T,Q,NNNN,NSAM,NROW,MODE)
	DIMENSION   Q(NNNN),T(NSAM)
	CHARACTER*1  MODE
	LOGICAL*1 IFND

	IFND=MOD(NROW,2).EQ.0
	NSC=NSAM/2+1
C
	DO    J=1,NROW
	CALL  REDLIN(LUN1,Q,NNNN,J)
C
	SCL=2.0/FLOAT(NSAM)/FLOAT(NROW)
	DO    I=NNNN-1,1,-2
	Q(NNNN-1-(NNNN-1-I)/2)=
     &		SCL*SQRT(Q(I+1)*Q(I+1)+Q(I)*Q(I))
a87 47
	IF(MODE.EQ.'L')  CALL  AL10(Q(NSAM/2),NSAM/2)
C HAVE TO MOVE THE LAST ELEMENT
	Q(1)=Q(NNNN-1)
	CALL  WRTLIN(LUN2,Q,NSAM,J)
	ENDDO
C	CLOSE(LUN1)
C
	DO    J=1,NROW/2
	JJ=J+NROW/2+MOD(NROW,2)
	CALL  REDLIN(LUN2,Q,NSAM,J)
	CALL  REDLIN(LUN2,T,NSAM,JJ)
	CALL  WRTLIN(LUN2,Q,NSAM,JJ)
	CALL  WRTLIN(LUN2,T,NSAM,J)
	ENDDO
C
	IF(.NOT.IFND)  THEN
	CALL  REDLIN(LUN2,T,NSAM,NROW/2+1)
	DO    J=NROW/2+1,NROW-1
	CALL  REDLIN(LUN2,Q,NSAM,J+1)
	CALL  WRTLIN(LUN2,Q,NSAM,J)
	ENDDO
	CALL  WRTLIN(LUN2,T,NSAM,NROW)
	ENDIF	
C
	NSC=NNNN/2-1
	IF(IFND)  THEN
	JB=2
	CALL  REDLIN(LUN2,Q,NSAM,1)
	DO    I=2,NSC
	II=NNNN-I
	Q(I)=Q(II)
	ENDDO
	CALL  WRTLIN(LUN2,Q,NSAM,1)
	ELSE
	JB=1
	ENDIF
	DO    J=JB,NROW
	JJ=NROW-J+JB
	CALL  REDLIN(LUN2,Q,NSAM,J)
	CALL  REDLIN(LUN2,T,NSAM,JJ)
	Q(1)=T(1)
	DO    I=2,NSC
	II=NNNN-I
	Q(I)=T(II)
	ENDDO
	CALL  WRTLIN(LUN2,Q,NSAM,J)
	ENDDO
d92 1
@


1.2
log
@*** empty log message ***
@
text
@d23 1
a23 1
CNO_SAVE
@


1.1
log
@Initial revision
@
text
@d27 1
a27 1
	DO  1  J=1,NROW
d31 2
a32 2
	DO  102  I=NNNN-1,1,-2
102	Q(NNNN-1-(NNNN-1-I)/2)=
d34 1
d38 2
a39 1
1	CALL  WRTLIN(LUN2,Q,NSAM,J)
d42 1
a42 1
	DO  100  J=1,NROW/2
d47 2
a48 1
100	CALL  WRTLIN(LUN2,T,NSAM,J)
d52 1
a52 1
	DO  104  J=NROW/2+1,NROW-1
d54 2
a55 1
104	CALL  WRTLIN(LUN2,Q,NSAM,J)
d63 1
a63 1
	DO  106  I=2,NSC
d65 2
a66 1
106	Q(I)=Q(II)
d71 1
a71 1
	DO  107  J=JB,NROW
d76 1
a76 1
	DO  108  I=2,NSC
d78 4
a81 2
108	Q(I)=T(II)
107	CALL  WRTLIN(LUN2,Q,NSAM,J)
@
