head	1.15;
access;
symbols
	pre_mrcs:1.15
	healthdept_2018:1.15
	pre_getangas:1.11
	GPL2010:1.11
	pre_GPL2010:1.10
	pre_var_equation:1.10
	pre_fftwrings:1.10
	pre_opfiles:1.10
	src:1.10
	best-code:1.10
	x-named-regs:1.10
	x:1.10
	v13-00:1.10
	pre_GPL:1.9
	prec_CA:1.8
	noindx:1.8
	Bproc:1.8
	oct21:1.5
	last77:1.4;
locks; strict;
comment	@c @;


1.15
date	2018.10.03.14.34.08;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2012.04.18.13.55.53;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2012.04.18.13.33.54;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2012.03.15.13.58.40;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.24.13.25.55;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.20.56.07;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2004.05.06.20.46.26;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.18.15.45.12;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	2000.02.16.20.47.00;	author bimal;	state Exp;
branches;
next	1.6;

1.6
date	99.12.07.15.52.26;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.06.04.21.02.18;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	99.03.01.14.47.52;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.10.09.14.31.25;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.04.12.14.48.52;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	95.03.17.20.16.06;	author mladjadj;	state Exp;
branches;
next	;


desc
@part of apca command by PP
@


1.15
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C  HKMC.F                                                              *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:                                                         *
C
C        0         2         3         4         5         6         7 *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE  HKMC
     &    (CIRSEED,CIRC,CIRNEW,NK,LCIRC,IP,IQ,ES,EC,E,DIST,ROT,NRING,
     &     TEMP,MAXRIN,JACUP,NUMR,MAXIT,NIMA,MODE,TOTAL,NDUM,MIRROR)

        INCLUDE 'CMBLOCK.INC'

        INTEGER           :: NUMR(3,NRING),MAXRIN
        INTEGER*2         :: IQ(NK),IP(NIMA)
        REAL              :: CIRC(LCIRC,NIMA),CIRSEED(LCIRC,NK)
        REAL              :: CIRNEW(LCIRC)
        REAL              :: DIST(NIMA),ROT(NIMA)
        DOUBLE PRECISION  :: TEMP(MAXRIN,2),
     &                       ENER,PEAK,PEAM,SNEW,EC(NIMA),ES(NK),E(NK)
        DOUBLE PRECISION  :: F,DS,WSS,WSSMAX,TOTAL
        LOGICAL           :: CH_ANG,ZEROGR
        CHARACTER*1       :: MODE
        LOGICAL           :: MIRROR

C       ES  - ENERGY OF A SEED
C       E   - SUM OF SQUARES IN A CLUSTER

        DO J=1,NK
           ES(J) = ENER(CIRSEED(1,J),LCIRC,NRING,NUMR,MODE)
        ENDDO

        WSSMAX = 1.0D30

        DO  ITER=1,MAXIT

C          FIND ASSIGNMENT
           IQ = 0

           DO I=1,NIMA
              F = 1.0D30
              DO  J=1,NK
                 CALL CROSRNG(CIRSEED(1,J),CIRC(1,I),
     &                        LCIRC,NRING,TEMP,TEMP(1,2),
     &                        MAXRIN,JACUP,NUMR,PEAK,TOT,MODE)

	         IF (MIRROR)  THEN
                    CALL CROSRMG(CIRSEED(1,J),CIRC(1,I),
     &                        LCIRC,NRING,TEMP,TEMP(1,2),
     &                        MAXRIN,JACUP,NUMR,PEAM,TMT,MODE)
                    IF (PEAM .GT. PEAK)  THEN
                       DS = ES(J)+EC(I)-2.0*PEAM
C
                       IF (DS .LT. F)  THEN
                          ROT(I) = -TMT
                          F      = DS
                          IR     = J
                       ENDIF
                       GOTO 151
                    ENDIF
                 ENDIF

                 DS=ES(J)+EC(I)-2.0*PEAK
C                WRITE(NOUT,*) 'Object #',I,'  Group #',J,'  Dist.=',DS

                 IF (DS .LT. F)  THEN
                    ROT(I) = TOT
                    F      = DS
                    IR     = J
                 ENDIF
151              CONTINUE
              ENDDO
              IP(I)  = IR
              IQ(IR) = IQ(IR)+1
C             WRITE(NOUT,*)  'Set to group #',IP(I)
           ENDDO

          
           WRITE(NOUT,2020) ITER
2020       FORMAT(/,'  Iteration:',I3,
     &              '  Number of objects in clusters:')
           LK  = NK / 10
           MK  = MOD(NK,10)
           IP1 = 1
           IP2 = 0
           DO J=1,LK+MIN0(MK,1)
              IP2 = MIN0(IP1+9,NK)
              WRITE(NOUT,2092) (I,I=IP1,IP2)
              WRITE(NOUT,2092) (IQ(I),I=IP1,IP2)
              !WRITE(NOUT,2092)
              IP1 = IP1+10
           ENDDO
2092       FORMAT(1X,10I5)

C          WRITE(NOUT,  *,' Assignment'
C          WRITE(NOUT,  2002,IP

C          BUILD NEW CENTERS WITH CORRECTIONS
           DO  201 J=1,NK
              IF (IQ(J) .EQ. 1)  THEN
                 DO I=1,NIMA
                    II = I
                    IF (IP(I) .EQ. J) GOTO 468
                 ENDDO
468              CONTINUE
                 CIRSEED(:,J) = CIRC(:,II)
                 ROT(II)      = 0.0
                 DIST(II)     = 0.0
                 ES(J)        = ENER(CIRSEED(1,J),LCIRC,NRING,NUMR,MODE)
                 E(J)         = 0.0
                 GOTO  201
              ENDIF
              CIRSEED(:,J) = 0.0
C
C             BUILD FIRST AVERAGE
C
              IQ(J) = 0
              DO  203  I=1,NIMA
                 IF (IP(I).NE.J)  GOTO  203
                 IQ(J)=IQ(J)+1
                 TOT  =ROT(I)
                 IMI=IQ(J)
                 IF (TOT.GT.0.0)  THEN
                    CALL UPDTC(CIRSEED(1,J),CIRC(1,I),
     &                   LCIRC,NRING,NUMR,TOT,MAXRIN,IMI)
                 ELSE
                    CALL UPDTM(CIRSEED(1,J),CIRC(1,I),
     &                   LCIRC,NRING,NUMR,-TOT,MAXRIN,IMI)
                 ENDIF
203           CONTINUE

              ES(J) = ENER(CIRSEED(1,J),LCIRC,NRING,NUMR,MODE)
              E(J)  = 0.0

C2001         FORMAT(10(1X,F6.1))

C             ITERATIONS TO GET BETTER APPROXIMATION

              ITR = 0
901           CONTINUE
              ITR    = ITR+1
              CH_ANG = .FALSE.
              SNEW   = 0.0
              IQT    = 0
C 
              IF (MOD(ITR,2) .EQ. 1)  THEN
                 K1 = NIMA
                 K2 = 1
                 K3 = -1
              ELSE
                 K1 = 1
                 K2 = NIMA
                 K3 = 1
              ENDIF
              DO  812  IMI=K1,K2,K3
                 IF (MOD(ITR,2) .EQ. 1) THEN
                    KTN = K1-IMI+1
                 ELSE
                    KTN = IMI
                 ENDIF
                 IF (IP(IMI).NE.J) GOTO  812
                 IQT = IQT+1
                 CALL  CROSRNG
     &             (CIRSEED(1,J),CIRC(1,IMI),LCIRC,NRING,TEMP,TEMP(1,2),
     &                  MAXRIN,JACUP,NUMR,PEAK,TOT,MODE)
	         IF (MIRROR)  THEN
                   CALL  CROSRMG
     &             (CIRSEED(1,J),CIRC(1,IMI),LCIRC,NRING,TEMP,TEMP(1,2),
     &                  MAXRIN,JACUP,NUMR,PEAM,TMT,MODE)
                   IF (PEAM .GT. PEAK)  THEN
                      IF (ROT(IMI) .NE. -TMT)  THEN
                         CH_ANG=.TRUE.
                         ROT(IMI)=-TMT
                      ENDIF
                      F = ES(J)+EC(IMI)-2.0*PEAM
                      CALL UPDTM(CIRNEW,CIRC(1,IMI),LCIRC,NRING,NUMR,
     &                           TMT,MAXRIN,IQT)
                      GOTO 152
                   ENDIF
                 ENDIF

                 IF (ROT(IMI) .NE. TOT)  THEN
                    CH_ANG   = .TRUE.
                    ROT(IMI) = TOT
                 ENDIF

                 F=ES(J)+EC(IMI)-2.0*PEAK
                 CALL UPDTC(CIRNEW,CIRC(1,IMI),LCIRC,NRING,NUMR,
     &                      TOT,MAXRIN,IQT)

152              SNEW      = SNEW+F
                 DIST(IMI) = F
812           CONTINUE

c             WRITE(NOUT,5515)  j,itr,snew,CH_ANG
c5515         format(' Group #',i2,'  Iteration #',i4,' SNEW=',1pe13.6,2x,l1)

              IF ((E(J).EQ.0.0.OR.(SNEW.LE.E(J))).AND.CH_ANG)  THEN
                 CIRSEED(:,J) = CIRNEW
                 ES(J) = ENER(CIRNEW,LCIRC,NRING,NUMR,MODE)
                 E(J)  = SNEW
                 GOTO  901
              ENDIF

              E(J)=SNEW
201        CONTINUE

           ZEROGR = .FALSE.
           DO  I=1,NK
              IF (IQ(I) .EQ. 0)  THEN
                 ZEROGR = .TRUE.
                 DMAX   = -1.E30
                 DO  J=1,NIMA
                    IF (DIST(J) .GT. DMAX)  THEN
                       DMAX    = DIST(J)
                       MAX     = J
                       DIST(J) = -1.E30
                    ENDIF
                 ENDDO
                 CIRSEED(:,I)=CIRC(:,MAX)
                 WRITE(NOUT,5992)  I
5992             FORMAT('  WARNING! EMPTY CLUSTER DETECTED #',I3)

                 WRITE(NOUT,5993) MAX
5993             FORMAT('        NEW SEED CREATED FROM OBJECT #',I5)
              ENDIF
           ENDDO
           IF (.NOT. ZEROGR)  THEN

C             CALCULATE  WITHIN SUM OF SQUARES
              WSS = SUM(E)
              WNK = SUM(E/IQ)

              WRITE(NOUT,2060)WSS
2060          FORMAT('  Within sum of squares:',1PE10.3)
              WRITE(NOUT,2008) E
2008          FORMAT('  Within-group sum of squares:',/,5(2X,1PD10.3))
C             WRITE(NOUT,  2001,(ANG(ROT(J),MODE),J=1,NIMA)
C
C             HALTING RULE
C
              IF (ABS(WSS-WSSMAX) / WSSMAX .LT. 0.001)  EXIT
              WSSMAX = WSS
           ENDIF
        ENDDO     !END OF LOOP OVER ITERATIONS

        IF (ITER .GE. MAXIT)
     &     WRITE(NOUT,*) '  MAXIMUM NUMBER OF ITERATIONS REACHED'

        IF (VERBOSE) WRITE(NOUT,*) '  '
        WRITE(NOUT,*) ' NUMBER OF OBJECTS IN CLUSTERS:'
        LK  = NK / 10
        MK  = MOD(NK,10)
        IP1 = 1
        IP2 = 0
        DO J=1,LK+MIN0(MK,1)
           IP2 = MIN0(IP1+9,NK)
           WRITE(NOUT,2092) (I,I=IP1,IP2)
           WRITE(NOUT,2092) (IQ(I),I=IP1,IP2)
           WRITE(NOUT,2092)
           IP1 = IP1+10
        ENDDO 
        WRITE(NOUT,*)' ASSIGNMENT'
        WRITE(NOUT,2002) IP
2002    FORMAT(1X,20I3)

        WRITE(NOUT,  2003)WSS, TOTAL, TOTAL-WSS
2003    FORMAT('  SUM OF SQUARES:',
     &         '  WITHIN:', 1PD10.3,
     &         '  TOTAL:',  1PD10.3,
     &         '  BETWEEN:',1PD10.3)

        WRITE(NOUT,2004)WSS*(TOTAL-WSS),NK*WSS,WNK
2004    FORMAT('  CRITERIA:  W*B,           K*W,    SUM(WK/NK)',/,
     &         4X,3(5X,1PE10.3))
        IF (VERBOSE) WRITE(NOUT,*) '  '

        END

@


1.14
log
@NOUT --> NDUM in parameters since I used CMBLOCK for verbose
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.13
log
@add: CMBLOCK.INC for verbose
@
text
@d39 1
a39 1
     &     TEMP,MAXRIN,JACUP,NUMR,MAXIT,NIMA,MODE,TOTAL,NOUT,MIRROR)
@


1.12
log
@output formatting, cosmetic
@
text
@d41 2
@


1.11
log
@GPL_2010
@
text
@a28 1
C                                                                      *
a32 2
C IMAGE_PROCESSING_ROUTINE
C                                                                      *
d39 13
a51 1
     &        TEMP,MAXRIN,JACUP,NUMR,MAXIT,NIMA,MODE,TOTAL,NOUT,MIRROR)
d53 5
a57 15
        INTEGER    NUMR(3,NRING),MAXRIN
        INTEGER*2  IQ(NK),IP(NIMA)
        DIMENSION  CIRC(LCIRC,NIMA),CIRSEED(LCIRC,NK),CIRNEW(LCIRC)
        DIMENSION  DIST(NIMA),ROT(NIMA)
        DOUBLE PRECISION  TEMP(MAXRIN,2),
     &          ENER,PEAK,PEAM,SNEW,EC(NIMA),ES(NK),E(NK)
        DOUBLE PRECISION  F,DS,WSS,WSSMAX,TOTAL
        LOGICAL*1  CH_ANG,ZEROGR
        CHARACTER*1  MODE,MIRROR
C
C  ES  - ENERGY OF A SEED
C  E   - SUM OF SQUARES IN A CLUSTER
C
        DO    J=1,NK
           ES(J)=ENER(CIRSEED(1,J),LCIRC,NRING,NUMR,MODE)
d59 3
a61 3
C
        WSSMAX=1.0D30
C
d63 6
a68 8
           WRITE(NOUT,2020)  ITER
2020       FORMAT('  Iteration #',I3)
C
C  FIND ASSIGNMENT
C
           IQ=0
           DO    I=1,NIMA
              F=1.0D30
d70 18
a87 12
                 CALL  CROSRNG(CIRSEED(1,J),CIRC(1,I),
     &  LCIRC,NRING,TEMP,TEMP(1,2),MAXRIN,JACUP,NUMR,PEAK,TOT,MODE)
	   IF(MIRROR.EQ.'M')  THEN
                 CALL  CROSRMG(CIRSEED(1,J),CIRC(1,I),
     &  LCIRC,NRING,TEMP,TEMP(1,2),MAXRIN,JACUP,NUMR,PEAM,TMT,MODE)
            IF(PEAM.GT.PEAK)  THEN
                 DS=ES(J)+EC(I)-2.0*PEAM
C
                 IF(DS.LT.F)  THEN
                    ROT(I)=-TMT
                    F=DS
                    IR=J
d89 1
a89 3
             GOTO 151
            ENDIF
           ENDIF
d91 6
a96 5
C       WRITE(NOUT,*) 'Object #',I,'  Group #',J,'  Dist.=',DS
                 IF(DS.LT.F)  THEN
                    ROT(I)=TOT
                    F=DS
                    IR=J
d98 1
a98 1
151           CONTINUE
d100 2
a101 2
              IP(I)=IR
              IQ(IR)=IQ(IR)+1
d104 11
a114 7
           WRITE(NOUT,*)  ' Number of objects in clusters'
           LK=NK/10
           MK=MOD(NK,10)
           IP1=1
           IP2=0
           DO    J=1,LK+MIN0(MK,1)
              IP2=MIN0(IP1+9,NK)
d117 2
a118 2
              WRITE(NOUT,2092)
              IP1=IP1+10
d121 1
d124 1
a124 1
C
d126 5
a130 6
C
           DO  201  J=1,NK
              IF(IQ(J).EQ.1)  THEN
                 DO    I=1,NIMA
                    II=I
                    IF(IP(I).EQ.J)  GOTO  468
d133 5
a137 5
                 CIRSEED(:,J)=CIRC(:,II)
                 ROT(II)=0.0
                 DIST(II)=0.0
                 ES(J)=ENER(CIRSEED(1,J),LCIRC,NRING,NUMR,MODE)
                 E(J)=0.0
d140 1
a140 1
              CIRSEED(:,J)=0.0
d144 1
a144 1
              IQ(J)=0
d146 1
a146 1
                 IF(IP(I).NE.J)  GOTO  203
d148 1
a148 1
                 TOT=ROT(I)
d150 3
a152 3
                 IF(TOT.GT.0.0)  THEN
                  CALL  UPDTC(CIRSEED(1,J),CIRC(1,I),
     &                 LCIRC,NRING,NUMR,TOT,MAXRIN,IMI)
d154 2
a155 2
                  CALL  UPDTM(CIRSEED(1,J),CIRC(1,I),
     &                 LCIRC,NRING,NUMR,-TOT,MAXRIN,IMI)
d158 4
a161 3
              ES(J)=ENER(CIRSEED(1,J),LCIRC,NRING,NUMR,MODE)
              E(J)=0.0
C
d163 1
a163 1
C
d165 2
a166 2
C
              ITR=0
d168 4
a171 4
              ITR=ITR+1
              CH_ANG=.FALSE.
              SNEW=0.0
              IQT=0
d173 4
a176 4
              IF(MOD(ITR,2).EQ.1)  THEN
                 K1=NIMA
                 K2=1
                 K3=-1
d178 3
a180 3
                 K1=1
                 K2=NIMA
                 K3=1
d183 2
a184 2
                 IF(MOD(ITR,2).EQ.1)  THEN
                    KTN=K1-IMI+1
d186 1
a186 1
                    KTN=IMI
d188 2
a189 2
                 IF(IP(IMI).NE.J)  GOTO  812
                 IQT=IQT+1
d191 1
a191 1
     &           (CIRSEED(1,J),CIRC(1,IMI),LCIRC,NRING,TEMP,TEMP(1,2),
d193 3
a195 3
	         IF(MIRROR.EQ.'M')  THEN
                 CALL  CROSRMG
     &           (CIRSEED(1,J),CIRC(1,IMI),LCIRC,NRING,TEMP,TEMP(1,2),
d197 9
a205 4
                  IF(PEAM.GT.PEAK)  THEN
                   IF(ROT(IMI) .NE. -TMT)  THEN
                    CH_ANG=.TRUE.
                    ROT(IMI)=-TMT
a206 4
                 F=ES(J)+EC(IMI)-2.0*PEAM
        CALL  UPDTM(CIRNEW,CIRC(1,IMI),LCIRC,NRING,NUMR,TMT,MAXRIN,IQT)
                   GOTO 152
                  ENDIF
d209 3
a211 3
                 IF(ROT(IMI).NE.TOT)  THEN
                    CH_ANG=.TRUE.
                    ROT(IMI)=TOT
d213 1
d215 2
a216 1
        CALL  UPDTC(CIRNEW,CIRC(1,IMI),LCIRC,NRING,NUMR,TOT,MAXRIN,IQT)
d218 2
a219 2
152              SNEW=SNEW+F
                 DIST(IMI)=F
d221 1
d223 6
a228 5
c5515   format(' Group #',i2,'  Iteration #',i4,' SNEW=',1pe13.6,2x,l1)
              IF((E(J).EQ.0.0.OR.(SNEW.LE.E(J))).AND.CH_ANG)  THEN
                 CIRSEED(:,J)=CIRNEW
                 ES(J)=ENER(CIRNEW,LCIRC,NRING,NUMR,MODE)
                 E(J)=SNEW
d231 1
d234 2
a235 1
           ZEROGR=.FALSE.
d237 3
a239 3
              IF(IQ(I).EQ.0)  THEN
                 ZEROGR=.TRUE.
                 DMAX=-1.E30
d241 4
a244 4
                    IF(DIST(J).GT.DMAX)  THEN
                       DMAX=DIST(J)
                       MAX=J
                       DIST(J)=-1.E30
d249 4
a252 3
5992    FORMAT('  WARNING! EMPTY CLUSTER DETECTED #',I3)
                 WRITE(NOUT,5993)  MAX
5993    FORMAT('           NEW SEED CREATED FROM OBJECT #',I5)
d255 6
a260 7
           IF(.NOT.ZEROGR)  THEN
C
C  CALCULATE  WITHIN SUM OF SQUARES
C
              WSS=SUM(E)
              WNK=SUM(E/IQ)
C
d262 1
a262 1
2060          FORMAT('  WITHIN SUM OF SQUARES=',1PE10.3)
d264 2
a265 2
2008    FORMAT('  WITHIN-GROUP SUM OF SQUARES:',/,5(2X,1PD10.3))
C       WRITE(NOUT,  2001,(ANG(ROT(J),MODE),J=1,NIMA)
d267 1
a267 1
C  HALTING RULE
d269 2
a270 2
              IF(ABS(WSS-WSSMAX)/WSSMAX.LT.0.001)  EXIT
              WSSMAX=WSS
d272 15
a286 13
C END OF LOOP OVER ITERATIONS
        ENDDO
        IF(ITER.GE.MAXIT)
     &  WRITE(NOUT,*) ' MAXIMUM NUMBER OF ITERATIONS REACHED'
        WRITE(NOUT,*) ' NUMBER OF OBJECTS IN CLUSTERS'
        LK=NK/10
        MK=MOD(NK,10)
        IP1=1
        IP2=0
        DO    J=1,LK+MIN0(MK,1)
           IP2=MIN0(IP1+9,NK)
           WRITE(NOUT,2092)(I,I=IP1,IP2)
           WRITE(NOUT,2092)(IQ(I),I=IP1,IP2)
d288 1
a288 1
           IP1=IP1+10
d291 1
a291 1
        WRITE(NOUT,2002)IP
d293 7
a299 3
        WRITE(NOUT,  2003)WSS,TOTAL,TOTAL-WSS
2003    FORMAT('      SUM OF SQUARES:',/,
     &  '  WITHIN =',1PD10.3,' TOTAL=',1PD10.3,'  BETWEEN=',1PD10.3)
d301 4
a304 2
2004    FORMAT('      CRITERIA:  W*B,           K*W,    SUM(WK/NK)',/,
     &  6X,3(5X,1PE10.3))
@


1.10
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.9
log
@ap cm
@
text
@d7 23
a29 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.8
log
@reduction corrected
@
text
@d29 1
a29 1
     &          TEMP,MAXRIN,JACUP,NUMR,MAXIT,NIMA,MODE,TOTAL,NOUT)
d36 1
a36 1
     &          ENER,PEAK,SNEW,EC(NIMA),ES(NK),E(NK)
d39 1
a39 1
        CHARACTER*1  MODE
a43 1
c$omp parallel do private(j)
d56 1
a56 3
           DO    I=1,NK
              IQ(I)=0
           ENDDO
d62 14
d77 1
a77 1
C       WRITE(NOUT,  *,'Object #',I,'  Group #',J,'  Dist.=',DS
d83 1
d87 1
a87 1
C             WRITE(NOUT,  *,'Set to group #',IP(I)
d114 1
a114 3
                 DO    I=1,LCIRC
                    CIRSEED(I,J)=CIRC(I,II)
                 ENDDO
d121 1
a121 3
              DO    I=1,LCIRC
                 CIRSEED(I,J)=0.0
              ENDDO
d131 2
a132 1
                 CALL  UPDTC(CIRSEED(1,J),CIRC(1,I),
d134 4
d173 15
d193 3
a195 1
                 SNEW=SNEW+F
a196 1
        CALL  UPDTC(CIRNEW,CIRC(1,IMI),LCIRC,NRING,NUMR,TOT,MAXRIN,IQT)
d201 1
a201 3
                 DO    I=1,LCIRC
                    CIRSEED(I,J)=CIRNEW(I)
                 ENDDO
d220 1
a220 3
                 DO    J=1,LCIRC
                    CIRSEED(J,I)=CIRC(J,MAX)
                 ENDDO
d231 2
a232 7
              WSS=0.0
              WNK=0.0
c$omp parallel do private(i),reduction(+:wss,wnk)
              DO    I=1,NK
                 WSS=WSS+E(I)
                 WNK=WNK+E(I)/IQ(I)
              ENDDO
@


1.7
log
@cosmetic
@
text
@d208 1
a208 1
c$omp parallel do private(i),reduction(+:wss),reduction(+:wnk)
@


1.6
log
@header
@
text
@d4 1
a5 1
C                                                                      *
d20 2
d27 3
a29 3
	SUBROUTINE  HKMC
     &	  (CIRSEED,CIRC,CIRNEW,NK,LCIRC,IP,IQ,ES,EC,E,DIST,ROT,NRING,
     &		TEMP,MAXRIN,JACUP,NUMR,MAXIT,NIMA,MODE,TOTAL,NOUT)
d31 9
a39 9
	INTEGER    NUMR(3,NRING),MAXRIN
	INTEGER*2  IQ(NK),IP(NIMA)
	DIMENSION  CIRC(LCIRC,NIMA),CIRSEED(LCIRC,NK),CIRNEW(LCIRC)
	DIMENSION  DIST(NIMA),ROT(NIMA)
	DOUBLE PRECISION  TEMP(MAXRIN,2),
     &		ENER,PEAK,SNEW,EC(NIMA),ES(NK),E(NK)
	DOUBLE PRECISION  F,DS,WSS,WSSMAX,TOTAL
	LOGICAL*1  CH_ANG,ZEROGR
	CHARACTER*1  MODE
d45 9
a53 9
	DO    J=1,NK
	ES(J)=ENER(CIRSEED(1,J),LCIRC,NRING,NUMR,MODE)
	ENDDO
C
	WSSMAX=1.0D30
C
	DO  ITER=1,MAXIT
	WRITE(NOUT,2020)  ITER
2020	FORMAT('  Iteration #',I3)
d57 146
a202 146
	DO    I=1,NK
	IQ(I)=0
	ENDDO
	    DO    I=1,NIMA
	    F=1.0D30
		DO  J=1,NK
		CALL  CROSRNG(CIRSEED(1,J),CIRC(1,I),
     &	LCIRC,NRING,TEMP,TEMP(1,2),MAXRIN,JACUP,NUMR,PEAK,TOT,MODE)
		DS=ES(J)+EC(I)-2.0*PEAK
C	WRITE(NOUT,  *,'Object #',I,'  Group #',J,'  Dist.=',DS
		IF(DS.LT.F)  THEN
		    ROT(I)=TOT
		    F=DS
		    IR=J
		ENDIF
		ENDDO
	     IP(I)=IR
	     IQ(IR)=IQ(IR)+1
C	WRITE(NOUT,  *,'Set to group #',IP(I)
	    ENDDO
	WRITE(NOUT,*)  ' Number of objects in clusters'
	LK=NK/10
	MK=MOD(NK,10)
	IP1=1
	IP2=0
	DO    J=1,LK+MIN0(MK,1)
	IP2=MIN0(IP1+9,NK)
	WRITE(NOUT,2092) (I,I=IP1,IP2)
	WRITE(NOUT,2092) (IQ(I),I=IP1,IP2)
	WRITE(NOUT,2092)
	IP1=IP1+10
	ENDDO
2092	FORMAT(1X,10I5)
C	WRITE(NOUT,  *,' Assignment'
C	WRITE(NOUT,  2002,IP
C
C  BUILD NEW CENTERS WITH CORRECTIONS
C
	DO  201  J=1,NK
	IF(IQ(J).EQ.1)  THEN
		DO    I=1,NIMA
		II=I
		IF(IP(I).EQ.J)  GOTO  468
		ENDDO
468		CONTINUE
		DO    I=1,LCIRC
		  CIRSEED(I,J)=CIRC(I,II)
		ENDDO
		ROT(II)=0.0
		DIST(II)=0.0
 		ES(J)=ENER(CIRSEED(1,J),LCIRC,NRING,NUMR,MODE)
		E(J)=0.0
		GOTO  201
	ENDIF
	    DO    I=1,LCIRC
	       CIRSEED(I,J)=0.0
	    ENDDO
C
C  BUILD FIRST AVERAGE
C
	IQ(J)=0
	DO  203  I=1,NIMA
	IF(IP(I).NE.J)  GOTO  203
	IQ(J)=IQ(J)+1
	TOT=ROT(I)
	IMI=IQ(J)
 	CALL  UPDTC(CIRSEED(1,J),CIRC(1,I),
     &	      LCIRC,NRING,NUMR,TOT,MAXRIN,IMI)
203	CONTINUE
 	ES(J)=ENER(CIRSEED(1,J),LCIRC,NRING,NUMR,MODE)
	E(J)=0.0
C
C2001	FORMAT(10(1X,F6.1))
C
C  Iterations to get better approximation
C
	ITR=0
901	CONTINUE
	ITR=ITR+1
	CH_ANG=.FALSE.
	SNEW=0.0
	IQT=0
C
	IF(MOD(ITR,2).EQ.1)  THEN
	K1=NIMA
	K2=1
	K3=-1
	ELSE
	K1=1
	K2=NIMA
	K3=1
        ENDIF
	DO  812  IMI=K1,K2,K3
	IF(MOD(ITR,2).EQ.1)  THEN
	KTN=K1-IMI+1
	ELSE
	KTN=IMI
	ENDIF
	IF(IP(IMI).NE.J)  GOTO  812
	IQT=IQT+1
	CALL  CROSRNG
     &		(CIRSEED(1,J),CIRC(1,IMI),LCIRC,NRING,TEMP,TEMP(1,2),
     &			MAXRIN,JACUP,NUMR,PEAK,TOT,MODE)
	IF(ROT(IMI).NE.TOT)  THEN
	CH_ANG=.TRUE.
	ROT(IMI)=TOT
	ENDIF
	F=ES(J)+EC(IMI)-2.0*PEAK
	SNEW=SNEW+F
	DIST(IMI)=F
	CALL  UPDTC(CIRNEW,CIRC(1,IMI),LCIRC,NRING,NUMR,TOT,MAXRIN,IQT)
812	CONTINUE
c	WRITE(NOUT,5515)  j,itr,snew,CH_ANG
c5515	format(' Group #',i2,'  Iteration #',i4,' SNEW=',1pe13.6,2x,l1)
	IF((E(J).EQ.0.0.OR.(SNEW.LE.E(J))).AND.CH_ANG)  THEN
	DO    I=1,LCIRC
	  CIRSEED(I,J)=CIRNEW(I)
	ENDDO
	ES(J)=ENER(CIRNEW,LCIRC,NRING,NUMR,MODE)
	E(J)=SNEW
	GOTO  901
	ENDIF
	E(J)=SNEW
201	CONTINUE
	ZEROGR=.FALSE.
	DO  I=1,NK
	IF(IQ(I).EQ.0)  THEN
	ZEROGR=.TRUE.
	DMAX=-1.E30
	DO  J=1,NIMA
	IF(DIST(J).GT.DMAX)  THEN
	DMAX=DIST(J)
	MAX=J
	DIST(J)=-1.E30
	ENDIF
	ENDDO
	DO    J=1,LCIRC
	CIRSEED(J,I)=CIRC(J,MAX)
	ENDDO
	WRITE(NOUT,5992)  I
5992    FORMAT('  Warning! Empty cluster detected #',I3)
	WRITE(NOUT,5993)  MAX
5993    FORMAT('           New seed created from object #',I5)
	ENDIF
	ENDDO
	IF(.NOT.ZEROGR)  THEN
d204 1
a204 1
C  Calculate  Within Sum of Squares
d206 2
a207 2
	WSS=0.0
	WNK=0.0
d209 40
a248 40
	DO    I=1,NK
	WSS=WSS+E(I)
	WNK=WNK+E(I)/IQ(I)
	ENDDO
C
	WRITE(NOUT,2060)WSS
2060	FORMAT('  Within Sum of Squares=',1PE10.3)
	WRITE(NOUT,2008) E
2008	FORMAT('  Within-Group Sum of Squares:',/,5(2X,1PD10.3))
C	WRITE(NOUT,  2001,(ANG(ROT(J),MODE),J=1,NIMA)
C
C  Halting rule
C
	IF(ABS(WSS-WSSMAX)/WSSMAX.LT.0.001)  EXIT
	WSSMAX=WSS
	ENDIF
C End of loop over iterations
	ENDDO
	IF(ITER.GE.MAXIT)
     &	WRITE(NOUT,*) ' MAXIMUM NUMBER OF ITERATIONS REACHED'
	WRITE(NOUT,*) ' Number of objects in clusters'
	LK=NK/10
	MK=MOD(NK,10)
	IP1=1
	IP2=0
	DO    J=1,LK+MIN0(MK,1)
	IP2=MIN0(IP1+9,NK)
	WRITE(NOUT,2092)(I,I=IP1,IP2)
	WRITE(NOUT,2092)(IQ(I),I=IP1,IP2)
	WRITE(NOUT,2092)
	IP1=IP1+10
	ENDDO 
	WRITE(NOUT,*)' Assignment'
	WRITE(NOUT,2002)IP
2002	FORMAT(1X,20I3)
	WRITE(NOUT,  2003)WSS,TOTAL,TOTAL-WSS
2003	FORMAT('      Sum of Squares:',/,
     &	'  Within =',1PD10.3,' Total=',1PD10.3,'  Between=',1PD10.3)
	WRITE(NOUT,2004)WSS*(TOTAL-WSS),NK*WSS,WNK
2004	FORMAT('      CRITERIA:  W*B,           k*W,    SUM(Wk/Nk)',/,
d250 2
a251 1
	END
@


1.5
log
@OpenMP
@
text
@d1 24
d28 1
@


1.4
log
@ff
@
text
@d17 1
a17 1
c$doacross local(j)
d24 1
a24 1
	DO  1  ITER=1,MAXIT
d175 1
a175 1
	IF(ZEROGR)  GOTO  1
d180 2
a181 1
c$doacross local(i),reduction(wss)
a183 4
	ENDDO
	WNK=0.0
c$doacross local(i),reduction(wnk)
	DO    I=1,NK
d186 1
d195 1
a195 1
	IF(ABS(WSS-WSSMAX)/WSSMAX.LT.0.001)  GOTO  501
d197 5
a201 3
1	CONTINUE
	WRITE(NOUT,*) ' MAXIMUM NUMBER OF ITERATIONS REACHED'
501	CONTINUE
d209 3
a211 3
	WRITE(NOUT,  2092)(I,I=IP1,IP2)
	WRITE(NOUT,  2092)(IQ(I),I=IP1,IP2)
	WRITE(NOUT,  2092)
d214 2
a215 2
	WRITE(NOUT,  *)' Assignment'
	WRITE(NOUT,  2002)IP
d220 1
a220 1
	WRITE(NOUT,  2004)WSS*(TOTAL-WSS),NK*WSS,WNK
@


1.3
log
@*** empty log message ***
@
text
@d4 2
a5 2
	INTEGER*2  MAXRIN
	INTEGER*2  NUMR(3,NRING),IQ(NK),IP(NIMA)
a12 1
CNO_SAVE
@


1.2
log
@nosave, mp
@
text
@d19 3
a21 2
	DO  71  J=1,NK
71	ES(J)=ENER(CIRSEED(1,J),LCIRC,NRING,NUMR,MODE)
d31 4
a34 3
	DO  444  I=1,NK
444	IQ(I)=0
	    DO  13  I=1,NIMA
d36 1
a36 1
		DO  12  J=1,NK
d46 1
a46 1
12		CONTINUE
d50 1
a50 1
13	     CONTINUE
d56 1
a56 1
	DO  3090  J=1,LK+MIN0(MK,1)
d62 1
a62 1
3090	CONTINUE
d71 1
a71 1
		DO  467  I=1,NIMA
d74 1
a74 1
467		CONTINUE
d76 3
a78 2
		DO  466  I=1,LCIRC
466		CIRSEED(I,J)=CIRC(I,II)
d85 3
a87 2
	    DO  202  I=1,LCIRC
202	CIRSEED(I,J)=0.0
d146 3
a148 2
	DO  814  I=1,LCIRC
814	CIRSEED(I,J)=CIRNEW(I)
d156 1
a156 1
	DO  401  I=1,NK
d160 1
a160 1
	DO  402  J=1,NIMA
d166 4
a169 3
402	CONTINUE
	DO  403  J=1,LCIRC
403	CIRSEED(J,I)=CIRC(J,MAX)
d175 1
a175 1
401	CONTINUE
d182 3
a184 2
	DO  301  I=1,NK
301	WSS=WSS+E(I)
d187 3
a189 2
	DO  302  I=1,NK
302	WNK=WNK+E(I)/IQ(I)
d208 1
a208 1
	DO  3091  J=1,LK+MIN0(MK,1)
d214 1
a214 1
3091	CONTINUE
@


1.1
log
@Initial revision
@
text
@d13 1
d18 1
d175 1
d179 1
@
