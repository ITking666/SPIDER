head	1.21;
access;
symbols
	pre_getangas:1.18
	GPL2010:1.18
	pre_GPL2010:1.17
	pre_var_equation:1.17
	pre_fftwrings:1.17
	pre_opfiles:1.17
	src:1.17
	best-code:1.17
	x-named-regs:1.17
	x:1.17
	v13-00:1.17
	pre_GPL:1.15
	prec_CA:1.15
	noindx:1.14
	Bproc:1.13
	oct21:1.12
	last77:1.11;
locks; strict;
comment	@c @;


1.21
date	2014.11.14.17.55.33;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2014.11.05.18.38.04;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2014.07.30.13.37.26;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2010.06.24.13.25.24;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.17.20.33.23;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.18.24.06;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.02.20.21.49.24;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2002.03.11.14.08.21;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2000.05.17.18.09.15;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	99.07.14.19.29.09;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	98.01.26.15.40.50;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.10.03.21.11.02;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	96.07.14.21.03.26;	author mladjadj;	state Exp;
branches;
next	1.8;

1.8
date	95.09.18.17.27.18;	author mladjadj;	state Exp;
branches;
next	1.7;

1.7
date	95.09.18.16.55.29;	author mladjadj;	state Exp;
branches;
next	1.6;

1.6
date	95.09.18.14.28.23;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	95.07.06.20.30.40;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	95.02.07.16.20.51;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	94.08.29.12.58.31;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.07.05.12.50.50;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.31.12.26.03;	author michael;	state Exp;
branches;
next	;


desc
@calculate defocus for a series of images.
@


1.21
log
@rewrite and fixed fatal bug
@
text
@C++*********************************************************************
C
C DEFOCUS.F   
C              MAXNAM                              JUL 14 ARDEAN LEITH
C              PROBABLY NEVER WORKED               NOV 14 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   DEFOCUS(IRTFLG)
C
C   PURPOSE:  CALCULATE DEFOCUS AND AMPLITUDE CONTRAST COMPONENT 
C             USING LEAST SQUARES
C
C   VARIABLES:
C      RKFR   ARRAY OF MINIMUM LOCATIONS FOR ONE IMAGE
C      A      AMPLITUDE OF ALL MINIMA      
C      NP     NUMBER OF MINIMUS CHOSEN FOR EACH IMAGE
C      KP     ARRAY OF SP. FREQ. POINTS OF MINIMUS
C      ABB    ARRAY OF ABBERATIONS COORESPONDING TO EACH MINIMUS
C      NUM    NUMBER OF IMAGE IN THE SERIES
C
C--*******************************************************************

        SUBROUTINE DEFOCUS(IRTFLG)

        IMPLICIT NONE

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        REAL   :: BUF
        COMMON /IOBUF/ BUF(NBUFSIZ)   ! FROM CMLIMITS.INC

C       NOTE: DEFO003 PASSES BACK DATA IN BUF BUT
C             IT APPEARS UNUSED HERE, ALTHOUGH NEEDED BY NOISE.F al

        INTEGER               :: IRTFLG
        INTEGER, PARAMETER    :: MAXMINS = 20
        INTEGER, PARAMETER    :: MAXIMGS = 20
        REAL                  :: RKFR(MAXMINS),SFR(MAXMINS),AMP(MAXMINS)
        REAL                  :: KP(MAXIMGS,MAXMINS)
        REAL                  :: ABB(MAXIMGS,MAXMINS)
        INTEGER               :: NP(MAXIMGS)
        INTEGER               :: NUMLIS(MAXIMGS)
        INTEGER               :: IDUM,NUM,NOT_USED,I,MAXIM,ITYPE
        INTEGER               :: NX,NY,NZ,NMIN,NCONSTRAIN,NC,J,NE,NDUM
        REAL                  :: FMINS,SPMAX
        LOGICAL               :: UNDERFOCUS
        CHARACTER(LEN=1)      :: USEUNDER
        CHARACTER(LEN=1)      :: NULL = CHAR(0)

        CHARACTER(LEN=MAXNAM) :: IMFILE
        INTEGER, PARAMETER    :: LUN1 = 18

        IRTFLG = 0

        CALL RDPRI1S(NUM,NOT_USED,
     &              'NUMBER OF IMAGES IN THE SERIES',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        IF (NUM < 1) THEN
           CALL ERRT(102,'INVALID NUMBER OF IMAGES',NUM)
           RETURN
        ENDIF

        IF (NUM == 1) THEN
           CALL RDPRMC(USEUNDER,NC,.TRUE.,'UNDERFOCUS? (Y/N)',
     &                 NULL,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
           UNDERFOCUS =  (USEUNDER .NE. 'N') 
        ELSE
C          USING IMAGE SERIES
           WRITE(NOUT,*)' INPUT IMAGE IN SEQUENCE'
        ENDIF

        DO  I=1,NUM   ! LOOP OVER ALL IMAGES IN SERIES
           IF (NUM > 1) WRITE(NOUT,'(A,I0,A)')'# ',I,' IMAGE'

           MAXIM = 0
           CALL OPFILEC(0,.TRUE.,IMFILE,LUN1,'O',ITYPE,NX,NY,NZ,
     &             MAXIM,'IMAGE', .FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

           WRITE(NOUT,90) NX,NY
90         FORMAT('  IMAGE DIMENSIONS: ', I0,' x ',I0)

C          FIND UP TO 20 MINIMA ALONG CURVE
           CALL DEFO003(I,NMIN,RKFR,SFR,AMP,NX,SPMAX,LUN1,
     &                  BUF,MAXMINS,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9999
           CLOSE(LUN1)

           CALL RDPRI1S(NP(I),NOT_USED,
     &                 'NUMBER OF MINIMA USED FOR CTF',IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9999
           IF (NP(I) < 1 .OR. NP(I) > NMIN) THEN
              CALL ERRT(102,'MINIMA OUTSIDE VALID RANGE',NMIN)
              GOTO 9999
           ENDIF

           DO  J=1,NP(I)           ! LOOP OVER ALL DESIRED MINIMA

              KP(I,J)  = RKFR(J)    ! SPATIAL FREQ OF MINIMA
              ABB(I,J) = J - 1     ! ABBERATIONS IN PI UNITS
  
              IF (UNDERFOCUS) ABB(I,J) = -J   
           ENDDO
        ENDDO

        !write(6,*) np(1),  kp(1,1),kp(1,2),kp(1,3),kp(1,4)
        !write(6,*) abb(1,1),abb(1,2),abb(1,3),abb(1,4)

        CALL FLUSHRESULTS
        IF (NUM > 1) THEN
           WRITE(NOUT,*) ' ENTER CONSTRAINTS: '
           WRITE(NOUT,*) '           (1) SAME AMPLITUDE,'
           WRITE(NOUT,*)
     &     '           (2) SAME AMPLITUDE AND DEFINE DEFOCUS INTERVAL'

           CALL RDPRI1S(NCONSTRAIN, NOT_USED, 
     &                  'CONSTRAINTS: (1 or 2)',IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9999

           IF (NCONSTRAIN < 1 .OR. NCONSTRAIN > 2) THEN
              CALL ERRT(102,'UNDEFINED CONSTRAINT',NCONSTRAIN)
              RETURN

           ELSEIF (NCONSTRAIN == 2) THEN
              CALL DEFO001(NUM,NP,KP,ABB,NX,SPMAX)

           ELSE
              IF (NUM > 11) THEN
                 CALL DEFO2001(NUM,NP,KP,ABB,NX,SPMAX)
              ELSE
                 CALL DEFO1001(NUM,NP,KP,ABB,NX,SPMAX)
              ENDIF
           ENDIF
        ELSE
C          SINGLE INPUT FILE CASE
           CALL DEFO1001(NUM,NP,KP,ABB,NX,SPMAX)
        ENDIF

9999    CLOSE(LUN1)

        END
@


1.20
log
@ATTEMPTED FIX OF UNWORKING CODE
@
text
@d3 3
a5 3
C DEFOCUS.F 
C                   MAXNAM                         JUL 14 ARDEAN LEITH
C                   PROBABLY NEVER WORKED          NOV 14 ARDEAN LEITH
d31 2
a32 2
C   PURPOSE:  CALCULATE THE DEFOCUS AND AMPLITUDE CONTRAST COMPONENT 
C             USING LEAST SQUARES METHOD
d35 6
a40 6
C      KFR : ARRAY OF ALL THE MINIMUM FOR ONE IMAGE
C      A   : AMPLITUDE OF ALL MINIMA      
C      NP  : NUMBER OF MINIMUS CHOSEN FOR EACH IMAGE
C      KP  : ARRAY OF SP. FREQ. POINTS OF MINIMUS
C      NA  : ARRAY OF ABBERATION COORESPONDING TO EACH MINIMUS
C      NUM : NUMBER OF IMAGE IN THE SERIES
d46 2
d51 2
a52 1
        COMMON /IOBUF/  BUF(NBUFSIZ)
d57 14
a70 2
        REAL                  :: KFR(20),A(20), KP(20,20),NA(20,20)
        INTEGER               :: NP(20)
d80 4
d85 9
a93 1
        WRITE(NOUT,*)' INPUT IMAGE IN SEQUENCE'
d95 2
a96 2
        DO  I=1,NUM
           WRITE(NOUT,'(A,I0,A)')'# ',I,' IMAGE'
d99 1
a99 1
           CALL OPFILEC(0,.TRUE.,IMFILE,LUN1,'O',IFORM,NX,NY,NZ,
d103 2
a104 2
           WRITE(NOUT,10)NX,NY
10         FORMAT(' IMAGE DIMENSIONS: ', I0,' x ',I0)
d106 4
a109 3
C          FIND MINIMA ALONG CURVE
           CALL DEFO003(I,N,KFR,A,NX,SPMAX,LUN1,BUF,20,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
d112 9
a120 4
           CALL RDPRI1S(NP(I),NDUM,NOT_USED,
     &            'NUMBER OF MINIMA USED FOR CTF',IRTFLG)
           IF (NUM == 1 .AND. NP(1) == 0) RETURN
           IF (IRTFLG .NE. 0) RETURN
d122 4
a125 6
           DO  J=1,NP(I)
              WRITE(NOUT,8)J
8             FORMAT(' POINT #',I2)
              CALL RDPRM2S(KP(I,J),NA(I,J),NOT_USED,
     &                'SPATIAL FREQ. POINTS & ABBERATION(PI)',IRTFLG)
        
d129 4
d141 1
a141 1
           IF (IRTFLG .NE. 0) RETURN
d143 2
a144 2
           IF (NCONSTRAIN == 3) THEN
              CALL ERRT(102,'UNDEFINED OPTION',NCONSTRAIN)
d148 1
a148 1
              CALL DEFO001(NUM,NP,KP,NA,NX,SPMAX)
d152 1
a152 1
                 CALL DEFO2001(NUM,NP,KP,NA,NX,SPMAX)
d154 1
a154 1
                 CALL DEFO1001(NUM,NP,KP,NA,NX,SPMAX)
d159 1
a159 1
           CALL DEFO1001(NUM,NP,KP,NA,NX,SPMAX)
d161 2
@


1.19
log
@LEN=MAXNAM
@
text
@d5 1
d49 2
d54 2
a55 3
        REAL            KFR,KP,NA
        COMMON /COMMUN/ KFR(20),A(20),NP(20), KP(20,20),NA(20,20)
        COMMON /IOBUF/  BUF(NBUFSIZ)
d58 1
a60 1
        LUN1   = 8
d62 3
a64 2
        CALL RDPRMI(NUM,NDUM,NOT_USED,
     &              'HOW MANY IMAGES IN THE SERIES')
d67 1
d69 1
a69 1
           WRITE(NOUT,*)'# ',I,'   IMAGE'
d72 1
a72 1
	   CALL OPFILEC(0,.TRUE.,IMFILE,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
d74 1
a74 1
	   IF (IRTFLG .NE. 0) RETURN
d76 2
a77 2
	   WRITE(NOUT,10)NSAM,NROW
10	   FORMAT(' FILE DIMENSIONS:', I5,' X',I5)
d79 2
a80 1
           CALL DEFO003(I,N,KFR,A,NSAM,SPMAX,LUN1,BUF,20,IRTFLG)
d82 1
d84 4
a87 3
           CALL RDPRMI(NP(I),NDUM,NOT_USED,
     &            'HOW MANY POINTS DO YOU WANT?')
           IF (NUM .EQ. 1 .AND. NP(1) .EQ. 0) RETURN
d92 2
a93 2
              CALL RDPRM2(KP(I,J),NA(I,J),NOT_USED,
     &                'SP. FREQ. POINTS/ABBERATION(PI)')
d95 2
a96 2
	   ENDDO
	ENDDO
d98 1
a98 1
        IF (NUM .GT. 1) THEN
d102 1
a102 2
     &     '           (2) SAME AMPLITUDE AND DEFINE DEFOCUS INTERVAL,'
           WRITE(NOUT,*) '           (3) SAME DEFOCUS'     
d104 3
a106 2
           CALL RDPRMI(NCONSTRAIN, NDUM,NOT_USED,
     &        'CONSTRAINTS: (1), (2) OR (3)')
d108 2
a109 3
           IF (NCONSTRAIN .EQ. 3) THEN
              WRITE(*,*) '***NO PROGRAM NOW'
              CALL ERRT(100,'DEFOCUS',NE)
d112 2
a113 2
           ELSEIF (NCONSTRAIN .EQ. 2) THEN
              CALL DEFO001(NUM,NP,KP,NA,NSAM,SPMAX)
d116 2
a117 2
              IF (NUM .GT. 11) THEN
                 CALL DEFO2001(NUM,NP,KP,NA,NSAM,SPMAX)
d119 1
a119 1
                 CALL DEFO1001(NUM,NP,KP,NA,NSAM,SPMAX)
d123 2
a124 2
C	   SINGLE INPUT FILE CASE
           CALL DEFO1001(NUM,NP,KP,NA,NSAM,SPMAX)
@


1.18
log
@GPL_2010
@
text
@d1 1
a1 1
C++*******************************************************************
d4 1
d10 1
a10 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d35 4
a38 4
C      A : AMPLITUDE OF ALL MINIMA      
C      NP : NUMBER OF MINIMUS CHOSEN FOR EACH IMAGE
C      KP : ARRAY OF SP. FREQ. POINTS OF MINIMUS
C      NA : ARRAY OF ABBERATION COORESPONDING TO EACH MINIMUS
d55 2
a56 1
        CHARACTER *81   IMFILE
d97 1
d100 1
a120 1
        RETURN
@


1.17
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.16
log
@HRI GPL License used
@
text
@a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
a29 1
C **************************************************************************
@


1.15
log
@opfilec
@
text
@d5 1
d7 1
d9 24
d39 1
@


1.14
log
@nloop,iloop_removed
@
text
@d3 1
a3 1
C DEFOCUS.FOR
d54 1
a54 1
	   CALL OPFILE(.TRUE.,IMFILE,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
@


1.13
log
@fixed buffer overrun in noise.f, changed parameters to noise.f
@
text
@d46 1
a46 1
        CALL RDPRMI(NUM,NDUM,NLOOP,ILOOP,
d64 1
a64 1
           CALL RDPRMI(NP(I),NDUM,NLOOP,ILOOP,
d71 1
a71 1
              CALL RDPRM2(KP(I,J),NA(I,J),NLOOP,ILOOP,
d83 1
a83 1
           CALL RDPRMI(NCONSTRAIN, NDUM,NLOOP,ILOOP,
@


1.12
log
@common bug fixed
@
text
@d20 1
a20 1
C   PARAMETERS:
d33 1
d35 2
a36 2
C       NOTE: DEFO003 PASSES BACK DATA IN UNLABELCED COMMON BUT
C             IT APPEARS UNUSED HERE? ALTHOUGH NEEDED BY NOISE.F al
d38 5
a42 3
        REAL    KFR,KP,NA
        COMMON /COMMUN/KFR(20),A(20),NP(20), KP(20,20),NA(20,20)
 
d45 1
d52 10
a61 1
           CALL DEFO003(I,N,KFR,A,NSAM,SPMAX,LUN1,IRTFLG)
d72 1
a72 1
     &           'SP. FREQ. POINTS/ABBERATION(PI)')
@


1.11
log
@f90 formating, used common blocks
@
text
@a32 1
CNO_SAVE        
d34 3
d40 2
a41 5
        CHARACTER*1 NULL

        NULL=CHAR(0)
        IRTFLG=0
        LUN1=8
d43 1
a43 1
     $            'HOW MANY IMAGES IN THE SERIES')
d50 1
d52 1
a52 1
     $            'HOW MANY POINTS DO YOU WANT?')
d54 1
d63 1
d68 1
a68 1
     $     '           (2) SAME AMPLITUDE AND DEFINE DEFOCUS INTERVAL,'
d71 1
a71 1
     $        'CONSTRAINTS: (1), (2) OR (3)')
d76 1
d79 1
@


1.10
log
@*** empty log message ***
@
text
@d3 1
a3 1
C $$ DEFOCUS.FOR
d15 1
d17 2
a18 2
C $$ DEFOCUS:  CALCULATE THE DEFOCUS AND AMPLITUDE CONTRAST COMPONENT USING
C   LEAST SQUARES METHOD
d20 1
a20 1
C      CALL DEFOCUS(IRFLG)
d27 1
d31 1
a31 2
        
#ifdef SP_UNIX
d33 5
a37 7
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif

        real KFR(20),A(20)
        DIMENSION NP(20)
        real KP(20,20),na(20,20)
d39 1
d45 1
d48 4
a51 4
        WRITE(NOUT,*)'# ',I,'   IMAGE'
        CALL DEFO003(I,N,KFR,A,NSAM,SPMAX,LUN1,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        CAll RDPRMI(NP(I),NDUM,NLOOP,ILOOP,
d53 6
a58 6
        IF(NUM .EQ. 1 .AND. NP(1) .EQ. 0) RETURN
        DO  J=1,NP(I)
        WRITE(NOUT,8)J
8       FORMAT(' POINT #',I2)
        CALL RDPRM2(KP(I,J),na(i,j),NLOOP,ILOOP,
     &        'SP. FREQ. POINTS/ABBERATION(PI)')
d60 1
d62 26
a87 24
	ENDDO
        if(num .gt. 1) then
        write(nout,*) ' Enter constraints: '
        write(nout,*) '           (1) same amplitude,'
        write(nout,*)
     $ '           (2) same amplitude and define defocus interval,'
        write(nout,*) '           (3) same defocus'     
        call rdprmi(nconstrain, ndum,nloop,iloop,
     $     'constraints: (1), (2) or (3)')
        if (nconstrain .eq. 3) then
           write(*,*) 'no program now'
        elseif (nconstrain .eq. 2) then
           call defo001(num,np,kp,na,nsam,spmax)
        else
           if(num .gt. 11) then
              call defo2001(num,np,kp,na,nsam,spmax)
           else
              CALL DEFO1001(NUM,NP,KP,NA,NSAM,SPMAX)
           endif
        endif
        else
c	  single input file case
          call defo1001(num,np,kp,na,nsam,spmax)
        endif
@


1.9
log
@change prompt msg
@
text
@d46 1
a46 1
        DO 20 I=1,NUM
d53 1
a53 1
        DO 25 J=1,NP(I)
d59 2
a60 2
25      CONTINUE
20      CONTINUE
@


1.8
log
@put cpp around CMBLOCK.INC
@
text
@d12 1
a12 1
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
d19 1
a19 1
C    CALL DEFOCUS(IRFLG)
d21 1
a21 1
C      A : AMPLITUDE OF ALL MINIMA	
d28 2
a29 2
	SUBROUTINE DEFOCUS(IRTFLG)
	
d36 8
a43 8
	real KFR(20),A(20)
	DIMENSION NP(20)
	real KP(20,20),na(20,20)
	CHARACTER*1 NULL
	NULL=CHAR(0)
	IRTFLG=0
	LUN1=8
	CALL RDPRMI(NUM,NDUM,NLOOP,ILOOP,
d45 6
a50 6
	WRITE(NOUT,*)' INPUT IMAGE IN SEQUENCE'
	DO 20 I=1,NUM
	WRITE(NOUT,*)'# ',I,'   IMAGE'
	CALL DEFO003(I,N,KFR,A,NSAM,SPMAX,LUN1,IRTFLG)
	IF (IRTFLG .NE. 0) RETURN
	CAll RDPRMI(NP(I),NDUM,NLOOP,ILOOP,
d52 5
a56 5
	IF(NUM .EQ. 1 .AND. NP(1) .EQ. 0) RETURN
	DO 25 J=1,NP(I)
	WRITE(NOUT,8)J
8	FORMAT(' POINT #',I2)
	CALL RDPRM2(KP(I,J),na(i,j),NLOOP,ILOOP,
d58 3
a60 3
	
25	CONTINUE
20	CONTINUE
d62 5
a66 5
	write(nout,*) ' Enter constraints: '
	write(nout,*) '           (1) same amplitude,'
	write(nout,*)
     $ '           (2) same amplitude but define defocus interval,'
	write(nout,*) '           (3) same defocus'	
d70 12
a81 11
	   write(*,*) 'no program now'
	elseif (nconstrain .eq. 2) then
	   call defo001(num,np,kp,na,nsam,spmax)
	else
	   if(num .gt. 11) then
	      call defo2001(num,np,kp,na,nsam,spmax)
	   else
	      CALL DEFO1001(NUM,NP,KP,NA,NSAM,SPMAX)
	   endif
	endif
	else
d85 1
a85 1
	END
@


1.7
log
@closing parenthese added
@
text
@d29 6
a34 2

	INCLUDE 'CMBLOCK.INC'
@


1.6
log
@char or hollerith problem
@
text
@d64 1
a64 1
     $     'constraints: (1), (2) or (3)'
@


1.5
log
@changes done by june Zhu
@
text
@d39 2
a40 1
	CALL RDPRMI(NUM,NDUM,NLOOP,ILOOP,'HOW MANY IMAGES IN THE SERIES$')
d46 2
a47 1
	CAll RDPRMI(NP(I),NDUM,NLOOP,ILOOP,'HOW MANY POINTS DO YOU WANT?$')
d52 2
a53 2
	CALL RDPRM2(KP(I,J),na(i,j),NLOOP,ILOOP,'SP. FREQ. POINTS/
     &  ABBERATION(PI)')
d58 7
a64 3
        call rdprmi(nconstrain, ndum,nloop,iloop,'constrain:(1) 
     &  same amplitude (2) same amplitude and define defocus interviel
     &  (3) same defocus $')
d66 1
a66 1
	write(*,*) 'no program now'
d68 1
a68 1
	call defo001(num,np,kp,na,nsam,spmax)
d70 5
a74 5
	if(num .gt. 11) then
	call defo2001(num,np,kp,na,nsam,spmax)
	else
	CALL DEFO1001(NUM,NP,KP,NA,NSAM,SPMAX)
	endif
d77 1
a77 1
        call defo1001(num,np,kp,na,nsam,spmax)
@


1.4
log
@clean up unused variables and hollerith warnings
@
text
@a0 7
#ifdef SP_DISTRIB
      SUBROUTINE DEFOCUS
      COMMON /UNITS/LUNC,NIN,NOUT
      WRITE(NOUT,*) 'DUMMY CALL: DEFOCUS'
      RETURN
      END
#else
d21 1
a21 1
C      A : AMPLITUDE OF ALL MINIMA
a28 5
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d30 5
a34 3
	DIMENSION KFR(20),A(20)
	DIMENSION NP(10)
	DIMENSION KP(10,10),NA(10,10)
d39 1
a39 2
	CALL RDPRMI(NUM,NDUM,NLOOP,ILOOP,
     &        'HOW MANY IMAGES IN THE SERIES$')
d45 1
a45 2
	CAll RDPRMI(NP(I),NDUM,NLOOP,ILOOP,
     &        'HOW MANY POINTS DO YOU WANT?$')
d50 3
a52 2
	CALL RDPRMI(KP(I,J),NA(I,J),NLOOP,ILOOP,
     &        'SP. FREQ. POINTS/ABBERATION(PI)')
d55 19
a73 2
	CALL DEFO001(NUM,NP,KP,NA,NSAM,SPMAX)
	RETURN
a74 1
#endif
@


1.3
log
@corrections by Jun Zhu from germany
@
text
@d49 2
a50 1
	CALL RDPRMI(NUM,NDUM,NLOOP,ILOOP,'HOW MANY IMAGES IN THE SERIES$')
d56 2
a57 1
	CAll RDPRMI(NP(I),NDUM,NLOOP,ILOOP,'HOW MANY POINTS DO YOU WANT?$')
d62 2
a63 2
	CALL RDPRMI(KP(I,J),NA(I,J),NLOOP,ILOOP,'SP. FREQ. POINTS/
     &  ABBERATION(PI)')
@


1.2
log
@col wrong on distrib
@
text
@d28 1
a28 1
C      A : AMPLITUDE OF ALL MINIMA	
d39 1
a39 1
	INCLUDE 'COMMON1:CMBLOCK.INC'
d41 1
d45 1
a45 1
	CHARACTER NULL
d47 1
a47 1
	IRFLG=0
d56 1
@


1.1
log
@Initial revision
@
text
@d2 5
a6 5
     SUBROUTINE DEFOCUS
     COMMON /UNITS/LUNC,NIN,NOUT
     WRITE(NOUT,*) 'DUMMY CALL: DEFOCUS'
     RETURN
     END
@
