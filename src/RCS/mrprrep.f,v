head	1.17;
access;
symbols
	healthdept_2018:1.17
	pre_getangas:1.14
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.13
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.9
	Bproc:1.7
	oct21:1.5
	last77:1.5;
locks; strict;
comment	@c @;


1.17
date	2018.10.03.14.34.10;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2014.07.30.15.06.09;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2014.07.30.15.05.12;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.24.13.26.15;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2009.03.23.11.17.53;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.23.07;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.18.15.23;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.20.20.13.24;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.11.14.08.11;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.03.21.20.45;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.12.07.16.30.55;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.11.10.23.09.39;	author yuchen;	state Exp;
branches;
next	1.5;

1.5
date	99.02.04.17.04.49;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	98.01.28.20.06.27;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	97.10.10.17.48.04;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.07.44;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.28;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.17
log
@email_health_dept
@
text
@
C ++********************************************************************
C 
C  MRPRREP                                                                     *
C                  LONG FILE NAMES                 JAN 89 al
C                  MAXNAM                          JUL 14 ARDEAN LEITH
C                                              
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014 Health Research Inc.,                          *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      
C  MRPRREP(LUN3,LUNP,MAXDIM,IER)                              
C                                                                      
C  PURPOSE:                                                            
C       COMPUTES THE PROJECTION OF A 3-D ARRAY IN ARBITRARY
C       DIRECTION, WITH PARTIAL EXPONENTIAL ATTENUATION. 
C       M.R. 5/87 
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE MRPRREP(LUN3,LUNP,MAXDIM,IER)

	INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

	COMMON  ADUM(256),BUF(1)

	REAL    DPO(3),DP(3),XP(2),X(3),DM(3,3)
	INTEGER IROW,INDP,MAXDIM,MA,IMA

        CHARACTER(LEN=MAXNAM) :: FILNAM
        CHARACTER *1          :: NULL

	DATA PI/3.14159265/

        NULL = CHAR(0)

        MAXIM  = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUN3,'O',IFORM,NSAM,NROW,NSLICE,
     &                   MAXIM,'THREED',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
	IF (IFORM .NE. 3) GOTO 9100

	CALL RDPRMI(NSAMP,NDUM,NOT_USED,'PROJECTION SAMPLE DIM.')
	NROWP=NSAMP*(FLOAT(NROW)/FLOAT(NSAM))
	IF (NSAMP .EQ. 0) GOTO 9200
	MA=FLOAT(NSAMP)*FLOAT(NROWP)+0.5
C       INITIALIZE BUFFER WITH 1.
	DO  IMA = 1, MA
          BUF(IMA) = 1.
	ENDDO

        MAXIM  = 0
        IFORM  = 1
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNP,'O',IFORM,NSAMP,NROWP,1,
     &                   MAXIM,'OUTPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9300

	IER = 0
	CALL RDPRM(PHI,NOT_USED,'AZIMUTH ANGLE (PHI)')
	CALL RDPRM(THETA,NOT_USED,'TILT ANGLE (THETA)')
	PHIR=PHI*PI/180.
	THETAR=THETA*PI/180.
        CALL RDPRM2(FFF,GGG,NOT_USED,'SCALE FACTS IN EXP,SUM')
        CALL RDPRM2(THRESH,SCON,NOT_USED,
     &       'THRESHOLD VALUE (BELOW),ADD. CONST.')

C       FOLLOWING ARE INCREMENTS THAT WERE IN THE ORIGINAL PROGRAM
C       ON THE SCALE OF THE OBJECT.
	DX=1.
	DY=1.
	DZ=1.
	DXP=1.
	DYP=1.

	DP(1)=FLOAT(NSAMP)/2.
	DP(2)=FLOAT(NROWP)/2.
	DPO(1)=FLOAT(NSAM)/2.
	DPO(2)=FLOAT(NROW)/2.
	DPO(3)=FLOAT(NSLICE)/2.

C CALCULATE THE DIRECTION OF PROJECTION AND PROJECTION PLANE.

	CPHI=COS(PHIR)
	SPHI=SIN(PHIR)
	CTHE=COS(THETAR)
	STHE=SIN(THETAR)

	DM(1,1)=CPHI*CTHE
	DM(2,1)=SPHI*CTHE
	DM(3,1)=-STHE
	DM(1,2)=-SPHI
	DM(2,2)=CPHI
	DM(3,2)=0.0
	DM(1,3)=CPHI*STHE
	DM(2,3)=SPHI*STHE
	DM(3,3)=CTHE
	WRITE(NOUT,200)(DM(I,3),I=1,3)
  200	FORMAT(' ** DIRECTION OF PROJECTION : ',3F8.3)

C COMPUTATION OF THE PROJECTION POINT

        IROW = 0                                 
	X(3) =-DZ
	DO  I1= 1, NSLICE
	X(3)=X(3)+DZ
	X(2)=-DY

	DO   I2 = 1, NROW
	X(2)=X(2)+DY
	X(1)=-DX
C	IROW=FLOAT(I1-1)*FLOAT(NROW)+I2+0.5
        IROW = IROW + 1                             
	CALL REDLIN(LUN3, BUF, NSAM, IROW)          
C	READ(LUN3'IROW+1)(BUF(K),K=1,NSAM)

	DO 400 I3 = 1, NSAM
	X(1) = X(1)+DX
	XP(1)=0.0
	XP(2)=0.0

	DO  I4 = 1, 3
	XP(1)=XP(1)+(X(I4)-DPO(I4))*DM(I4,1)
  	XP(2)=XP(2)+(X(I4)-DPO(I4))*DM(I4,2)
	ENDDO
	XP(1)=XP(1)+DP(1)
	XP(2)=XP(2)+DP(2)

	IF (XP(1) .LT. 0.0  .OR.  XP(1) .GT. NSAMP-DXP  .OR.
     &      XP(2) .LT. 0.0  .OR.  XP(2) .GT. NROWP-DYP)  GO TO 400

	ZWX =XP(1)
C	ZWX =XP(1)/DXP
	ZWY =XP(2)
C	ZWY =XP(2)/DYP
	IPX =IFIX(ZWX)
	IPY =IFIX(ZWY)
	DIPX=ZWX-FLOAT(IPX)
	DIPY=ZWY-FLOAT(IPY)

	W=BUF(I3)
C THRESHOLD 3D
        IF(W.LE.THRESH) GOTO 400
C ADD CONSTANT
        W=W+SCON
        INDP = NSAMP
        INDP = INDP*IPY + IPX + NSAM + 1
        AAA=EXP(-(1.0-DIPX)*(1.0-DIPY)*W*FFF)
        BBB=+(1.0-DIPX)*(1.0-DIPY)*W*GGG
	BUF(INDP)=BUF(INDP)*AAA+BBB 
        AAA=EXP(-DIPX*(1.0-DIPY)*W*FFF)
        BBB=+DIPX*(1.0-DIPY)*W*GGG
	BUF(INDP+1)=BUF(INDP+1)*AAA+BBB
	INDP=INDP+NSAMP
        AAA=EXP(-(1.0-DIPX)*DIPY*W*FFF)
        BBB=+(1.0-DIPX)*DIPY*W*GGG
	BUF(INDP)=BUF(INDP)*AAA+BBB
        AAA=EXP(-DIPX*DIPY*W*FFF)
        BBB=+DIPX*DIPY*W*GGG
	BUF(INDP+1)=BUF(INDP+1)*AAA+BBB
  400	CONTINUE
  	ENDDO
	ENDDO

C NOW STORE PROJECTION ARRAY INTO FILE
	DO  I = 1, NROWP
        INDP = NSAMP
        INDP = INDP*(I-1) + NSAM + 1
	CALL WRTLIN(LUNP, BUF(INDP), NSAMP, I)
	ENDDO

	CLOSE(UNIT=LUN3)
	CLOSE(UNIT=LUNP)
	RETURN

9100	CALL ERRT(2,'PROJ3 ',NE)
	RETURN

9200	CALL ERRT(31,'PROJ3 ',NE)
	RETURN

9300	CALL ERRT(4,'PROJ3 ',NE)
	RETURN
	END
@


1.16
log
@cosmetic
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.15
log
@LEN=MAXNAM) :: FILNAM
@
text
@d7 1
a7 1
C                                                                      
d29 4
a32 4
C                                                                      *
C  MRPRREP(LUN3,LUNP,MAXDIM,IER)                                                                    *
C                                                                      *
C  PURPOSE:                                                            *
@


1.14
log
@GPL_2010
@
text
@a2 1
C                                                                      *
d4 4
a7 2
C                               LONG FILE NAMES JAN 89 al
C                                                                      *
d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
a32 3
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
d43 1
d45 1
a45 2
	COMMON ADUM(256),BUF(1)
        COMMON /COMMUN/ FILNAM
d47 1
a47 1
	REAL DPO(3),DP(3),XP(2),X(3),DM(3,3)
d49 3
a51 2
        CHARACTER *81 FILNAM
        CHARACTER *1  NULL
d54 2
a55 1
        NULL=CHAR(0)
@


1.13
log
@removed _nondistrb...
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.12
log
@GPL License fixed
@
text
@a0 14
#ifdef SP_DISTRIB 
 
C   THIS ROUTINE SPECIFIC TO WADSWORTH LABS AND IS NOT 
C       DISTRIBUTED TO OUTSIDE SITES
 
       SUBROUTINE mrprrep(LUN3,LUNP,MAXDIM,IER)
 
       COMMON /UNITS/LUNC,NIN,NOUT
 
       WRITE(NOUT,*) 'DUMMY CALL: mrprrep'
       RETURN
       END
 
#else
a207 3
 
#endif
 
@


1.11
log
@HRI GPL License used
@
text
@a21 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d25 1
a25 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a44 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.10
log
@opfilec
@
text
@d23 24
@


1.9
log
@nloop,iloop_removed
@
text
@d59 1
a59 1
        CALL OPFILE(.TRUE.,FILNAM,LUN3,'O',IFORM,NSAM,NROW,NSLICE,
d75 1
a75 1
        CALL OPFILE(.TRUE.,FILNAM,LUNP,'O',IFORM,NSAMP,NROWP,1,
@


1.8
log
@used opfile
@
text
@d64 1
a64 1
	CALL RDPRMI(NSAMP,NDUM,NLOOP,ILOOP,'PROJECTION SAMPLE DIM.')
d80 2
a81 2
	CALL RDPRM(PHI,NLOOP,ILOOP,'AZIMUTH ANGLE (PHI)')
	CALL RDPRM(THETA,NLOOP,ILOOP,'TILT ANGLE (THETA)')
d84 2
a85 2
        CALL RDPRM2(FFF,GGG,NLOOP,ILOOP,'SCALE FACTS IN EXP,SUM')
        CALL RDPRM2(THRESH,SCON,NLOOP,ILOOP,
@


1.7
log
@header
@
text
@d1 14
d18 2
a20 1
C                                                                      *
d30 1
a30 1
C                                                                      *
d36 4
a39 1
C        0         2         3         4         5         6         7 *
a42 20

#ifdef SP_DISTRIB 
 
C   THIS ROUTINE SPECIFIC TO WADSWORTH LABS AND IS NOT 
C       DISTRIBUTED TO OUTSIDE SITES
 
       SUBROUTINE mrprrep(LUN3,LUNP,MAXDIM,IER)
 
       COMMON /UNITS/LUNC,NIN,NOUT
 
       WRITE(NOUT,*) 'DUMMY CALL: mrprrep'
       RETURN
       END
 
#else
 

C                               LONG FILE NAMES JAN 89 al


a44 6
 

C COMPUTES THE PROJECTION OF A 3-D ARRAY IN ARBITRARY
C DIRECTION, WITH PARTIAL EXPONENTIAL ATTENUATION. 
C M.R. 5/87 

d58 4
a61 5
	IER=1
	CALL FILERD(FILNAM,NLET,NULL,'THREED',IRTFLG)
	IF(IRTFLG .NE. 0) RETURN
	CALL OPENF(FILNAM,LUN3,NSAM,NROW,'OLD',NF,NSLICE)
	IF (NF .NE. 2) GOTO 9300
d68 1
a68 1
C INITIALIZE BUFFER WITH 1.
d73 5
a77 5
	CALL FILERD(FILNAM,NLET,NULL,'OUTPUT',IRTFLG)
	IF (FILNAM(1:1) .EQ. '*') RETURN
	IFORM = 1
	CALL OPENF(FILNAM,LUNP,NSAMP,NROWP,'UNKNOWN',NF,1)
	IF (NF .NE. 2) GOTO 9300
d80 2
a81 2
	CALL RDPRM(PHI,NLOOP,ILOOP,'AZIMUTH ANGLE (PHI)$')
	CALL RDPRM(THETA,NLOOP,ILOOP,'TILT ANGLE (THETA)$')
d84 1
a84 1
        CALL RDPRM2(FFF,GGG,NLOOP,ILOOP,'SCALE FACTS IN EXP,SUM$')
d86 1
a86 1
     $  'THRESHOLD VALUE (BELOW),ADD. CONST.$')
d88 2
a89 2
C FOLLOWING ARE INCREMENTS THAT WERE IN THE ORIGINAL PROGRAM
C ON THE SCALE OF THE OBJECT.
d150 1
a150 1
     1      XP(2) .LT. 0.0  .OR.  XP(2) .GT. NROWP-DYP)  GO TO 400
@


1.6
log
@a
@
text
@d2 24
@


1.5
log
@CNO_SAVE
@
text
@d23 1
a23 1
CNO_SAVE 
@


1.4
log
@added parameters to dummy call or fixed call paramters
@
text
@d1 1
d23 2
a28 1
#ifdef SP_UNIX
a29 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
@


1.3
log
@*** empty log message ***
@
text
@d6 1
a6 1
       SUBROUTINE mrprrep
@


1.2
log
@cpp_lines_added
@
text
@d55 1
a55 1
	DO 100 IMA = 1, MA
d57 1
a57 1
  100   CONTINUE
d111 1
a111 1
	DO 600 I1= 1, NSLICE
d115 1
a115 1
	DO 500 I2 = 1, NROW
d128 1
a128 1
	DO 300 I4 = 1, 3
d130 2
a131 1
  300	XP(2)=XP(2)+(X(I4)-DPO(I4))*DM(I4,2)
d168 2
a169 2
  500	CONTINUE
  600	CONTINUE
d172 1
a172 1
	DO 700 I = 1, NROWP
d176 1
a176 1
  700   CONTINUE
@


1.1
log
@Initial revision
@
text
@d1 15
d26 3
d30 1
d190 3
@
