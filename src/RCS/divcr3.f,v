head	1.10;
access;
symbols
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.7
	prec_CA:1.7
	noindx:1.7
	Bproc:1.7
	oct21:1.6
	last77:1.5;
locks; strict;
comment	@c @;


1.10
date	2010.06.24.13.25.27;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.20.21.42;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.18.14.12;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.12.06.18.11.00;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.08.24.16.11.40;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.10.06.17.04.39;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.08.29.15.00.53;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.07.26.15.30.22;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.07.19.20.35.03;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.07.19.20.13.16;	author pawel;	state Exp;
branches;
next	;


desc
@part of TF CTF
@


1.10
log
@GPL_2010
@
text
@C++*********************************************************************
C
C DIVCR3.FOR                        
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C  DIVCR3
C  DIVIDE COMPLEX BY REAL (+CONST)
C
C        1         2         3         4         5         6         7
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE DIVCR3(A1,OUT,H2,S,NN2,NROW,NSLICE)

        COMPLEX  A1(NN2,NROW,NSLICE),OUT(NN2,NROW,NSLICE)
        COMPLEX  H2(NN2,NROW,NSLICE)

        DO    K=1,NSLICE
          DO    J=1,NROW
	     DO    I=1,NN2
	        OUT(I,J,K)=A1(I,J,K)/(REAL(H2(I,J,K))+S)
	     ENDDO
	  ENDDO
	ENDDO

	END
@


1.9
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@HRI GPL License used
@
text
@a1 1
C++*************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
a29 1
C **************************************************************************
@


1.7
log
@cosmetic & header
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
@


1.6
log
@*** empty log message ***
@
text
@d14 2
a16 2
C  Divide complex by real (+const)
C
d20 1
a20 1
C
d22 1
d25 1
a25 1
C
d27 4
a30 3
         DO    J=1,NROW
	  DO    I=1,NN2
	   OUT(I,J,K)=A1(I,J,K)/(REAL(H2(I,J,K))+S)
a31 1
	 ENDDO
d33 1
@


1.5
log
@*** empty log message ***
@
text
@a23 1
CNO_SAVE
d26 5
a30 5
        DO    J=1,NROW
	DO    I=1,NN2
	OUT(I,J,K)=A1(I,J,K)/(REAL(H2(I,J,K))+S)
	ENDDO
	ENDDO
@


1.4
log
@new version
@
text
@d26 7
a32 4
        DO  1  K=1,NSLICE
        DO  1  J=1,NROW
	DO  1  I=1,NN2
1	OUT(I,J,K)=A1(I,J,K)/(REAL(H2(I,J,K))+S)
@


1.3
log
@should be OK
@
text
@d21 3
a23 5
        SUBROUTINE DIVCR3(A1,OUT,H2,S,NSAM,NROW,NSLICE)
        DIMENSION  A1(NSAM,NROW,NSLICE),OUT(NSAM,NROW,NSLICE)
        DIMENSION  H2(NSAM,NROW,NSLICE)
        COMPLEX  QT
	LOGICAL*1 IFND,IFNS,IFNR
d26 4
a29 107
        IFND=MOD(NSAM,2).EQ.0
        IFNR=MOD(NROW,2).EQ.0
        IFNS=MOD(NSLICE,2).EQ.0
	IF(IFND)  THEN
	LBD=2
	ELSE
	LBD=1
	ENDIF
	IF(IFNR)  THEN
	LBR=2
	ELSE
	LBR=1
	ENDIF
	IF(IFNS)  THEN
	LBS=2
	ELSE
	LBS=1
	ENDIF
c
	LNS=(NSAM-2)/2
C
        DO  1  K=1,LBS
        DO  1  J=1,LBR
	DO  2  I=1,LBD
        OUT(I,J,K)=A1(I,J,K)/(H2(I,J,K)+S)
2	CONTINUE
        CALL  DVCR(A1(3,J,K),H2(3,J,K),OUT(3,J,K),LNS,S)
	IF(.NOT.IFND)  THEN
 	OUT(NSAM,J,K)=A1(NSAM,J,K)/(H2(NSAM,J,K)+S)
        OUT(2,J,K)=A1(2,J,K)/(H2(NSAM,J,K)+S)
	ENDIF
1       CONTINUE
C
C	DO  3  J=1,LBR
	J=1
C	DO  4  K=3,NSLICE-1,2
3	K=3
4	NR1=J+(K-1)*NROW
	NR2=J+K*NROW
C  FOR (J,K) and (J,K+1)
	JN=J
	KN=K+1
	ASSIGN  501  TO LABA   
	GOTO  1955
501	CONTINUE
	K=K+2
	IF(K.LE.NSLICE-1)  GOTO  4
C4       CONTINUE
	IF(.NOT.IFNS)  THEN
	NR1=J+(NSLICE-1)*NROW
	NR2=J+NROW
C  FOR (J,K) and (J,1)
	JN=J
	KN=2
	ASSIGN  502  TO LABA
	GOTO  1955
502	CONTINUE
	ENDIF
	J=J+1
	IF(J.LE.LBR) GOTO 3
C3	CONTINUE
C In what follows can't use do-loops because indexes are lost
c  after jump to 1955, so explicit do-loops are used instead.
C	DO  7  K=1,NSLICE
	K=1
C	DO  8  J=3,NROW-1,2
7	J=3
8	NR1=J+(K-1)*NROW
	NR2=J+1+(K-1)*NROW
C For (J,K) and (J+1,K)
	JN=J+1
	KN=K
	ASSIGN  503  TO LABA
	GOTO  1955
503     CONTINUE
C8       CONTINUE
	J=J+2
	IF(J.LE.NROW-1)  GOTO  8
	IF(.NOT.IFNR)  THEN
	NR1=NROW+(K-1)*NROW
	NR2=2+(K-1)*NROW
C For (J,K) and (J+1,K)
	JN=2
	KN=K
	ASSIGN  504  TO LABA
	GOTO  1955
504	CONTINUE
	ENDIF
	K=K+1
	IF(K.LE.NSLICE)  GOTO  7
C7       CONTINUE
	RETURN
C
1955	CONTINUE
	DO  5  I=1,LBD
 	OUT(I,J,K)=A1(I,J,K)/(H2(I,J,K)+S)
5       OUT(I,JN,KN)=A1(I,JN,KN)/(H2(I,J,K)+S)
	CALL  DVCR(A1(3,J,K),H2(3,J,K),OUT(3,J,K),LNS,S)
        CALL  DVCR(A1(3,JN,KN),H2(3,JN,KN),OUT(3,JN,KN),LNS,S)
	IF(.NOT.IFND)  THEN
 	OUT(NSAM,J,K)=A1(NSAM,J,K)/(H2(NSAM,J,K)+S)
        OUT(2,J,K)=A1(2,J,K)/(H2(NSAM,J,K)+S)
 	OUT(NSAM,JN,KN)=A1(NSAM,JN,KN)/(H2(NSAM,JN,KN)+S)
        OUT(2,JN,KN)=A1(2,JN,KN)/(H2(NSAM,JN,KN)+S)
	ENDIF
	GOTO  LABA
C
@


1.2
log
@corrected
@
text
@d124 1
a124 1
5       OUT(I,JN,KN)=A1(I,JN,KN)/(H2(I,JN,KN)+S)
@


1.1
log
@Initial revision
@
text
@d123 2
a124 2
 	OUT(I,J,K)=A1(I,J,K)/(B1(I,J,K)+S)
5       OUT(I,JN,KN)=A1(I,JN,KN)/(B1(I,JN,KN)+S)
@
