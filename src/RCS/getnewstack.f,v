head	1.15;
access;
symbols
	pre_mrcs:1.13
	healthdept_2018:1.13
	pre_getangas:1.12
	GPL2010:1.11
	pre_GPL2010:1.10
	pre_var_equation:1.10
	pre_fftwrings:1.10
	pre_opfiles:1.10
	src:1.10
	best-code:1.10
	x-named-regs:1.10
	x:1.10
	v13-00:1.10
	pre_GPL:1.8
	prec_CA:1.7
	noindx:1.6
	Bproc:1.6
	oct21:1.6
	last77:1.4;
locks; strict;
comment	@c @;


1.15
date	2020.01.10.18.19.05;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2019.11.04.17.36.06;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2018.10.03.14.34.07;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2010.10.22.16.54.35;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.24.13.25.50;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.20.45.16;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.18.35.42;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2004.11.05.15.43.44;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.01.23.15.51.31;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.10.15.13.09.28;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.04.09.16.52.44;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.03.25.16.47.20;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.02.19.17.00.55;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	99.02.17.19.35.31;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	99.01.12.17.23.29;	author leith;	state Exp;
branches;
next	;


desc
@@


1.15
log
@locat mrc bug
@
text
@
C++*********************************************************************
C
C GETNEWSTACK.F  NEW                         7 JAN   99   ArDean Leith
C                SET INUSE                     OCT   99   ArDean Leith
C                INDEXED STACK                 JAN 2003   ArDean Leith
C                HEADER COPY                   FEB 2003   ArDean Leith
C                COPYSTAT PARAM                OCT 2010   ArDean Leith
C                MRC SUPPORT                   SEP 2019   ArDean Leith
C                LOCAT BUG IN MRC              JAN 2020   ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2020  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  GETNEWSTACK(LUN_CP,LUNOUT,COPYSTAT,NX,IMGNUM,IRTFLG)
C
C  PURPOSE:       OPEN A NEW IMAGE WITHIN STACK AND TIE TO LUNOUT
C
C  PARAMETERS:
C      LUN_CP     UNIT TO COPY HEADER VALUES FROM               (SENT)
C      LUNOUT     LOGICAL UNIT NUMBER FOR FILE.                 (SENT)
C      COPYSTAT   COPY FMIN.. FROM INPUT FILE                   (SENT)
C      NX         IMAGE X DIMENSION                             (SENT) 
C      IMGNUM     IMAGE NUMBER WANTED                           (SENT) 
C      IRTFLG     ERROR RETURN FLAG.                            (RET.)
C                 IRTFLG =  1    ERROR, REDHED FAILED
C                 IRTFLG =  0    NORMAL RETURN, IMAGE IS STACKED
C                 IRTFLG = -1    OK, BUT FILE REQUESTED IS NOT STACK
C
C  NOTE:      THE THREE SUBROUTINES: GETSTACK, GETOLDSTACK, AND
C             GETNEWSTACK WERE WRITTEN TO HANDLE WHOLE BARE 
D             STACK (@@STACK) OPERATIONS. THEY ARE ONLY USED IN 
D              THE OPERATIONS:
C             'AF' (NO DOCS), 'CP TO STK','DE','CE AD','AR SCA', 
C             'CE' (MANY?),
C             'AD D2', 'AD DF', 'AD DR', 'AD F', 'AD R', 'DIV 2', 
C             'MUL 2', 'MUL O', 'MU O', & 'SU B2'.
C             I DECIDED THAT BARE WHOLE STACK OPERATION SUPPORT 
C             WAS LESS IMPORTANT THAN SUPPORTING OPERATIONS ON 
C             SELECTED STACKED IMAGES SO I STOPPED CONVERTING 
C             OPERATIONS TO HANDLING WHOLE STACKS WITHOUT SELECTED 
C             STACK SUPPORT. THE NEW PARADIGM USES OPFILES AND 
C             NEXTFILE WHICH HANDLES BOTH SELECTED AND WHOLE STACKS 
C             BUT I HAVE NOT IMPLEMENTED IT YET IN MOST OPERATIONS AND
C             AM RUNNING OUT OF TIME TO EVER FINISH IMPLEMENTING 
C             ANYTHING MORE 
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

	SUBROUTINE GETNEWSTACK(LUN_CP,LUNOUT,COPYSTAT,NX,IMGNUM,IRTFLG)

        IMPLICIT NONE
        INCLUDE 'CMLIMIT.INC'     ! FOR: MAXNAM
       
        INTEGER                :: LUN_CP,LUNOUT,NX,IMGNUM,IRTFLG
        LOGICAL                :: COPYSTAT

        CHARACTER (LEN=MAXNAM) :: FILNAM
        CHARACTER (LEN=1)      :: DSP

        INTEGER                :: NY,NZ,ITYPE,ISTACK,MAXIM,LENAT,NLET
        INTEGER                :: IMAMI
        REAL                   :: FMIN,FMAX,AV,SIG
        INTEGER                :: IRTFLGT
        LOGICAL                :: ISBARET,IS_MRC

C       SE IF WHOLE STACK OPERATION
        CALL LUNGETISBARE(LUNOUT,ISBARET,IRTFLG)    ! MRC OK
        IF (.NOT. ISBARET) THEN
C          INPUT IMAGE IS SIMPLE OR A SPECIFIC STACKED IMAGE
           IRTFLG = -1
           RETURN
        ENDIF

C       DETERMINE IF MRC OR SPIDER STACK FILE
        CALL LUNGETIS_MRC(LUNOUT,IS_MRC,IRTFLG)

        IF (IS_MRC) THEN
C          MRC STACK
	   CALL GETNEWSTACK_MRC(LUNOUT,COPYSTAT,IMGNUM,IRTFLG)
           RETURN
        ENDIF

C       MAKE A NEW IMAGE WITHIN EXISTING INLINE OR REGULAR STACK 

C       GET OVERALL HEADER FROM THE STACK FILE
        CALL LUNREDHED(LUNOUT,NX,0,.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) THEN
           IRTFLG = 1
           RETURN
        ENDIF

C       RETRIEVE CURRENT MAXIMUM IMAGE NUMBER FROM OVERALL HEADER
        CALL LUNGETMAXIM(LUNOUT,MAXIM,IRTFLG)

        IF (IMGNUM > MAXIM) THEN
C          MUST UPDATE OVERALL HEADER WITH MAXIMUM IMAGE NUMBER
           CALL LUNSETMAXIM(LUNOUT, IMGNUM,IRTFLG)
           CALL LUNSETMAXALL(LUNOUT,IMGNUM,IRTFLG)
        ENDIF

C       NEED SOME VALUES TO PUT IN STACKED IMAGE HEADER OBJECT
        CALL LUNGETSIZE(LUNOUT,NX,NY,NZ,IRTFLG)
        CALL LUNGETTYPE(LUNOUT,ITYPE,IRTFLGT)
        CALL LUNCOPYSTK(LUNOUT,ISTACK,IRTFLGT)

        IF (ISTACK < 0) THEN
C          MAKING A NEW INDEXED STACKED FILE, UPDATE INDX LOCATION
           CALL LUNWRTINDX(LUNOUT,IMGNUM,NX,IRTFLGT)
           IF (IRTFLGT .NE. 0) RETURN
        ENDIF

        IF (IMGNUM > MAXIM .OR. ISTACK > 2) THEN
C          SAVE OVERALL HEADER NOW TO PRESERVE MAXIM & LASTINDX
           CALL LUNWRTHED(LUNOUT,NX,0,IRTFLGT)
        ENDIF

C       GET FILENAM FROM CURRENT HEADER OBJECT
        CALL LUNGETFILE(LUNOUT,FILNAM,NLET,DSP,IRTFLG)

C       APPEND CURRENT STACKED IMAGE NUMBER TO STACK FILE NAME
C       (INTTOCHAR ALSO RETURNS NEW VALUE FOR NLET) 
        LENAT = INDEX(FILNAM,'@@')
        CALL INTTOCHAR(IMGNUM,FILNAM(LENAT+1:),NLET,0)
        NLET = NLET + LENAT

C       INITIALIZE HEADER OBJECT FOR NEW STACKED IMAGE FROM LUN_CP
C         (I THINK THIS COULD BE MOSTLY SKIPPED??)
        CALL LUNSETHDR(LUN_CP,LUNOUT,NX,NY,NZ,
     &                 ITYPE,ISTACK,IRTFLG)

        IF (COPYSTAT) THEN
C          COPY STATISTICS FROM INPUT FILE
           CALL LUNGETSTAT(LUN_CP,IMAMI,FMIN,FMAX,AV,SIG,IRTFLG)
           CALL LUNSETSTAT(LUNOUT,IMAMI,FMIN,FMAX,AV,SIG,IRTFLG)
        ENDIF

C       PUT IMAGE INUSE IN HEADER OBJECT
        CALL LUNSETINUSE( LUNOUT,IMGNUM,IRTFLG)
        CALL LUNSETISTACK(LUNOUT,0,IRTFLG)

C       PUT COMMON VALUES INTO COMMON AREA (NOT NEEDED IN FUTURE?)
        CALL LUNSETCOMMON(LUNOUT,IRTFLG)

C       PUSH HEADER OBJECT INFO INTO NEW STACKED FILE
        CALL LUNWRTHED(LUNOUT,NX,IMGNUM,IRTFLG)

C       SET OFFSETS FOR REDLIN/WRTLIN ON THIS LUN
        CALL LUNSETIMGOFF(LUNOUT,IMGNUM,NX,IRTFLGT)

C       WRITE OUT FILE OPENING INFO TO SCREEN
        CALL LUNSAYINFO(LUNOUT,IRTFLG)

C       SET FLAG FOR NORMAL RETURN	
        IRTFLG = 0
 	END


C       ---------------------- GETNEWSTACK_MRC ------------------------  

	SUBROUTINE GETNEWSTACK_MRC(LUN,COPYSTAT,IMGNUM,IRTFLG)

        IMPLICIT NONE
        INCLUDE 'CMLIMIT.INC'    ! NEED: MAXNAM
       
        INTEGER                :: LUN,IMGNUM,IRTFLG
        LOGICAL                :: COPYSTAT     !   UNUSED

        CHARACTER (LEN=MAXNAM) :: FILNAM,FIL_AT
        CHARACTER (LEN=1)      :: DSP
        CHARACTER (LEN=10)     :: CNUM

        INTEGER                :: NX,NY,NZ,ITYPE,ISTACK,NLET,IDUM
        INTEGER                :: MZ,NSTACK,LOCAT,LOCSLASH,IGO,LENU

        INTEGER                :: lnblnkn ! function

C       MAKE A NEW IMAGE WITHIN EXISTING MRC STACK 

C       RETRIEVE CURRENT MAXIMUM IMAGE NUMBER FROM MRC HEADER
        CALL LUNGETNSTACK_MRC(LUN, NX,NY,NZ,MZ,NSTACK,IRTFLG)

        !write(6,*) 'In getnewstack_mrc- nz,mz,nstack:',nz,mz,nstack

        IF (IMGNUM > NSTACK) THEN
C          MUST UPDATE OVERALL HEADER WITH MAXIMUM IMAGE NUMBER
           NSTACK = IMGNUM
           CALL LUNSETNSTACK_MRC(LUN, NZ,NSTACK,IRTFLG)
        ENDIF

C       GET FILENAM FROM HEADER OBJECT FOR EARLIER FILE IN SERIES
        CALL LUNGETFILE_MRC(LUN,FILNAM,NLET,DSP,IRTFLG)

        !write(6,*) 'In getnewstack_mrc - filnam1:',filnam(:nlet)

C       SUBSTITUTE @@ IN NAME WITH  CURRENT STACKED IMAGE NUMBER AND @@
C       TO STACK FILE NAME

C       CONVERT IMGNUM TO CHARACTER STRING
        CALL INTTOCHAR(IMGNUM,CNUM,NLET,1)

        LOCAT  = INDEX(FILNAM,'@@')
        FIL_AT = CNUM(1:NLET) // '@@' // FILNAM(LOCAT+1:)
        FILNAM = FIL_AT

        LOCAT  = INDEX(FILNAM,'@@')
        !write(6,*)' In getnewstack_mrc - imgnum,locat:',imgnum,locat

        IF (LOCAT == 0) THEN
C          HANDLES: 'stk'
           CALL ERRT(101,'NO @@ IN FILENAME',IDUM)
           IRTFLG = 1
           RETURN

        ELSEIF (LOCAT == 1)  THEN
C          HANDLES: '@@stk'
           FILNAM = FIL_AT

        ELSEIF (FILNAM(LOCAT-1:LOCAT-1) == '/')  THEN
C          HANDLES: '/@@stk'
           FILNAM = FILNAM(:LOCAT-1) // FIL_AT

        ELSE 
C          HANDLES: 'nnn@@stk' AND '/nnn@@stk'
           LOCSLASH = INDEX(FIL_AT(1:LOCAT),'/',BACK=.TRUE.)
           IF (LOCSLASH == 0) THEN
              FILNAM = FIL_AT
           ELSE
              FILNAM = FILNAM(:LOCSLASH-1) // FIL_AT
           ENDIF
        ENDIF
        NLET = LNBLNKN(FILNAM)

        !call subchar(cnum(1:nlet+1),filnam,locslash,lenu,irtflg)
        !write(6,*)' In getnewstack_mrc - nlet,cnum:',nlet,cnum

C       SET FILENAME IN HEADER OBJECT
        CALL LUNSETFILE_MRC(LUN,FILNAM(1:NLET),'N',IRTFLG)  
        
C       SET OFFSETS FOR REDLIN/WRTLIN ON THIS LUN
        CALL LUNSETPOS_MRC(LUN,IMGNUM,IRTFLG)

C       PUSH HEADER OBJECT INFO INTO OVERALL STACK HEADER IN FILE
        CALL LUNWRTHED_MRC(LUN,IRTFLG)

C       WRITE OUT FILE OPENING INFO TO SCREEN
        CALL LUNSAYINFO_MRC(LUN,.TRUE.,IRTFLG)

C       PUT COMMON VALUES INTO COMMON AREA (NOT NEEDED IN FUTURE?)
        CALL LUNSETCOMMON_MRC(LUN,IRTFLG)

C       SET FLAG FOR NORMAL RETURN	
        IRTFLG = 0
 	END





@


1.14
log
@mrc_support
@
text
@d10 1
d16 1
a16 1
C=* Copyright 1985-2019  Health Research Inc.,                         *
d224 3
@


1.13
log
@email_health_dept
@
text
@d4 6
a9 5
C GETNEWSTACK.F  NEW                            7 JAN 99   ARDEAN LEITH
C                SET INUSE                        OCT 99   ARDEAN LEITH
C                INDEXED STACK                    JAN 03   ARDEAN LEITH
C                HEADER COPY                      FEB 03   ARDEAN LEITH
C                COPYSTAT PARAM                   OCT 2010 ARDEAN LEITH
d15 1
a15 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d33 1
a33 1
C    GETNEWSTACK(LUNIN,LUNOUT,COPYSTAT,IMGNUM,IRTFLG)
d35 1
a35 1
C    PURPOSE:       TO OPEN A NEW IMAGE WITHIN STACK AND TIE TO LUNOUT
d37 28
a64 9
C    PARAMETERS:
C        LUNIN      UNIT TO COPY HEADER VALUES FROM               (SENT)
C        LUNOUT     LOGICAL UNIT NUMBER FOR FILE.                 (SENT)
C        COPYSTAT   COPY FMIN.. FROM INPUT FILE                   (SENT)
C        IMGNUM     IMAGE NUMBER WANTED                           (SENT) 
C        IRTFLG     ERROR RETURN FLAG.                            (RET.)
C                   IRTFLG =  1    ERROR, REDHED FAILED
C                   IRTFLG =  0    NORMAL RETURN, IMAGE IS STACKED
C                   IRTFLG = -1    OK, BUT FILE REQUESTED IS NOT STACK
d69 1
a69 7
	SUBROUTINE GETNEWSTACK(LUNIN,LUNOUT,COPYSTAT,NSAM,IMGNUM,IRTFLG)

        INTEGER            :: LUNIN,LUNOUT,NSAM,IMGNUM,IRTFLG
        LOGICAL            :: COPYSTAT

        CHARACTER (LEN=71) :: FILNAM
        CHARACTER (LEN=1)  :: DSP
d71 14
a84 1
        LOGICAL            :: ISBARET
d86 2
a87 1
        CALL LUNGETISBARE(LUNOUT,ISBARET,IRTFLG)
d94 10
a103 2
C       ONLY FOR INLINE OR REGULAR IMAGE STACK NOW -------------V
C       MAKE A NEW IMAGE WITHIN EXISTING STACK 
d106 1
a106 1
        CALL LUNREDHED(LUNOUT,NSAM,0,.TRUE.,IRTFLG)
d115 1
a115 1
        IF (IMGNUM .GT. MAXIM) THEN
d117 1
a117 1
           CALL LUNSETMAXIM(LUNOUT,IMGNUM,IRTFLG)
d122 1
a122 1
        CALL LUNGETSIZE(LUNOUT,NSAM,NROW,NSLICE,IRTFLG)
d126 1
a126 1
        IF (ISTACK .LT. 0) THEN
d128 1
a128 1
           CALL LUNWRTINDX(LUNOUT,IMGNUM,NSAM,IRTFLGT)
d132 1
a132 1
        IF (IMGNUM .GT. MAXIM .OR. ISTACK .GT. 2) THEN
d134 1
a134 1
           CALL LUNWRTHED(LUNOUT,NSAM,0,IRTFLGT)
d146 1
a146 1
C       INITIALIZE HEADER OBJECT FOR NEW STACKED IMAGE FROM LUNIN
d148 1
a148 1
        CALL LUNSETHDR(LUNIN,LUNOUT,NSAM,NROW,NSLICE,
d153 1
a153 1
           CALL LUNGETSTAT(LUNIN, IMAMI,FMIN,FMAX,AV,SIG,IRTFLG)
d165 1
a165 1
        CALL LUNWRTHED(LUNOUT,NSAM,IMGNUM,IRTFLG)
d168 1
a168 1
        CALL LUNSETIMGOFF(LUNOUT,IMGNUM,NSAM,IRTFLGT)
d175 99
a273 3
 
        RETURN
	END
@


1.12
log
@COPYSTAT PARAM
@
text
@d16 1
a16 1
C=* Email: spider@@wadsworth.org                                        *
@


1.11
log
@GPL_2010
@
text
@d4 5
a8 4
C GETNEWSTACK.F   -- NEW                        7 JAN 99   ARDEAN LEITH
C                    SET INUSE                    OCT 99   ARDEAN LEITH
C                    INDEXED STACK                JAN 03   ARDEAN LEITH
C                    HEADER COPY                  FEB 03   ARDEAN LEITH
d32 1
a32 1
C    GETNEWSTACK(LUNT,LUN,IMGNUM,IRTFLG)
d34 1
a34 1
C    PURPOSE:       TO OPEN A NEW IMAGE WITHIN STACK AND TIE TO LUN
d37 3
a39 2
C        LUNT       UNIT TO COPY HEADER VALUES FROM               (SENT)
C        LUN        LOGICAL UNIT NUMBER FOR FILE.                 (SENT)
d49 1
a49 1
	SUBROUTINE GETNEWSTACK(LUNT,LUN,NSAM,IMGNUM,IRTFLG)
d51 2
a52 2
        CHARACTER *71 FILNAM
        CHARACTER *1  DSP
d54 2
a55 1
        LOGICAL ISBARET
d57 3
a59 1
        CALL LUNGETISBARE(LUN,ISBARET,IRTFLG)
d70 1
a70 1
        CALL LUNREDHED(LUN,NSAM,0,.TRUE.,IRTFLG)
d77 1
a77 1
        CALL LUNGETMAXIM(LUN,MAXIM,IRTFLG)
d81 2
a82 2
           CALL LUNSETMAXIM(LUN,IMGNUM,IRTFLG)
           CALL LUNSETMAXALL(LUN,IMGNUM,IRTFLG)
d86 3
a88 3
        CALL LUNGETSIZE(LUN,NSAM,NROW,NSLICE,IRTFLG)
        CALL LUNGETTYPE(LUN,ITYPE,IRTFLGT)
        CALL LUNCOPYSTK(LUN,ISTACK,IRTFLGT)
d92 1
a92 1
           CALL LUNWRTINDX(LUN,IMGNUM,NSAM,IRTFLGT)
d98 1
a98 1
           CALL LUNWRTHED(LUN,NSAM,0,IRTFLGT)
d102 1
a102 1
        CALL LUNGETFILE(LUN,FILNAM,NLET,DSP,IRTFLG)
d110 1
a110 1
C       INITIALIZE HEADER OBJECT FOR NEW STACKED IMAGE 
d112 8
a119 1
        CALL LUNSETHDR(LUNT,LUN,NSAM,NROW,NSLICE,ITYPE,ISTACK,IRTFLG)
d122 2
a123 2
        CALL LUNSETINUSE(LUN,IMGNUM,IRTFLG)
        CALL LUNSETISTACK(LUN,0,IRTFLG)
d126 1
a126 1
        CALL LUNSETCOMMON(LUN,IRTFLG)
d129 1
a129 1
        CALL LUNWRTHED(LUN,NSAM,IMGNUM,IRTFLG)
d132 1
a132 1
        CALL LUNSETIMGOFF(LUN,IMGNUM,NSAM,IRTFLGT)
d135 1
a135 1
        CALL LUNSAYINFO(LUN,IRTFLG)
@


1.10
log
@GPL License fixed
@
text
@a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.9
log
@HRI GPL License used
@
text
@a9 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d13 1
a13 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a32 6

C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.8
log
@lastest was not in cvs
@
text
@d11 24
@


1.7
log
@indexed stacks
@
text
@d7 1
d18 1
a18 1
C    GETNEWSTACK(LUN,IMGNUM,IRTFLG)
d23 1
d34 1
a34 1
	SUBROUTINE GETNEWSTACK(LUN,NSAM,IMGNUM,IRTFLG)
d94 1
a94 1
        CALL LUNSETHDR(LUN,NSAM,NROW,NSLICE,ITYPE,ISTACK,IRTFLG)
@


1.6
log
@inuse not set
@
text
@d4 3
a6 2
C GETNEWSTACK.F   -- NEW 7 Jan 99 ArDean Leith
C                    SET INUSE OCT 99 ARDEAN LEITH
d9 6
a14 6
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
d50 1
a50 1
        CALL LUNREDHED(LUN,NSAM,.TRUE.,IRTFLG)
d62 1
a62 1
           CALL LUNWRTHED(LUN,0,IRTFLG)
d65 15
a79 3
C       NEED SOME VALUES TO PUT IN HEADER OBJECT
        CALL LUNGETSIZE(LUN,NSAM,NROW,NSLICE,ISTACK,IRTFLG)
        CALL LUNGETTYPE(LUN,ITYPE,ISTACK,IRTFLG)
d90 2
a91 1
C       INITIALIZE HEADER OBJECT FOR NEW IMAGE 
a93 3
C       PUT IMAGE NUMBER IN HEADER OBJECT
        CALL LUNSETIMGNUM(LUN,IMGNUM,IRTFLG)

d95 2
a96 1
        CALL LUNSETINUSE(LUN,1,IRTFLG)
d102 1
a102 1
        CALL LUNWRTHED(LUN,IMGNUM,IRTFLG)
d105 1
a105 2
        CALL LUNSETOFFSET(LUN,IRTFLGT)
        IF (IRTFLGT .NE. 0) RETURN
@


1.5
log
@did not update maxim in overall header
@
text
@d5 1
a32 1
CNO_SAVE
d82 3
@


1.4
log
@set imgoffset in lunara etc
@
text
@d61 1
a61 2

           CALL LUNWRTHED(LUN,IMGNUM,IRTFLG)
@


1.3
log
@used lunsethdr
@
text
@d90 4
@


1.2
log
@need nsam as parameter
@
text
@d4 1
a4 1
C GETNEWSTACK.F   -- NEW 7 Jan 99 al
d15 1
a15 1
C    GETNEWSTACK(FILNAM,LUN,IMGNUM,IRTFLG)
d20 2
a21 3
C        FILNAM     FILENAME                                      (SENT)
C        LUN        LOGICAL UNIT NUMBER FOR FILNAM.               (SENT)
C        IMGNUM     IMAGE NUMBER WANTED AND FOUND                 (SENT) 
a22 2
C                   IRTFLG =  3    ERROR, END OF FILE BEFORE IMGNUM
C                   IRTFLG =  2    ERROR, MUSTGET BUT IMGNUM UNUSED
d25 1
a25 2
C                   IRTFLG = -1    NOT A STACK
C                   IRTFLG = -2    IMAGE NOT IN USE, MUSTGET IS FALSE
d30 1
a30 1
	SUBROUTINE GETNEWSTACK(FILNAM,LUN,NSAM,IMGNUM,IRTFLG)
d32 3
a34 2
        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'LABLOCK.INC'
d36 1
a36 1
        LOGICAL ISBARE
d38 2
a39 8
        COMMON /LUNARA/  LUNARA(100),LUNSTK(100)

        PARAMETER        (NBUFSIZ = 17008)
        COMMON /IOBUF/   BUF(NBUFSIZ)

        CHARACTER *(*)   FILNAM

        IF (.NOT. ISBARE(FILNAM)) THEN
d48 2
a49 6
C       MAKE SURE THE CURRENT STACK OFFSET IS ZEROED
        LUNSTK(LUN) = 0

C       RECOVER OVERALL HEADER FROM THE STACK FILE
        NOSTOP = 0
        CALL REDHED(LUN,BUF,NBUFSIZ,NSAM,NOSTOP,IRTFLG)
d55 2
a56 4
C       GET IRECF & LABRECF FROM STACK FILE HEADER
C       ALL STACKED IMAGES HAVE SAME IRECF AS STACK HEADER.
        CALL OPENGETHDR(BUF,NSAM,NROW,NSLICE,NSTACK,IFORM,
     &                  IRECF,LABRECF,LABBYT,LENBYT,IMUSED,LENTIT)
d58 1
a58 1
        IF (IMGNUM .GT. BUF(26)) THEN
d60 3
a62 2
           BUF(26) = IMGNUM
           CALL WRTHED(LUN,BUF,NSAM,IRTFLG)
d65 27
a91 22
C       SET IMAGE SPECIFIC LOCATIONS IN NEW IMAGE HEADER
        IMAMI   = 0
        BUF(6)  = IMAMI
        IANGLE  = 0
        BUF(14) = IANGLE
        KANGLE  = 0
        BUF(30) = KANGLE
        BUF(24) = 2 
       
        IMUSED  = 1
        BUF(25) = IMUSED         

C       PUT CURRENT DATE AND TIME INTO BUF FOR THIS NEW IMAGE
        CALL DATTIMTIT(BUF,.FALSE.,.TRUE.,LENTIT,IRTFLG)

C       PLACE THIS IMAGE HEADER INTO PROPER STACK LOCATION
        LUNSTK(LUN) = (IMGNUM-1) * IRECF + LABRECF
        CALL WRTHED(LUN,BUF,NSAM,IRTFLG)

C       WRITE OUT FILE OPENING INFO
        CALL OPENINFO(FILNAM,NDUM,NSAM,NROW,NSLICE,IMGNUM,
     &                -2,LENTIT,'N',LABBYT,IRTFLG)
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
	SUBROUTINE GETNEWSTACK(FILNAM,LUN,IMGNUM,IRTFLG)
a37 1
CNO_SAVE
@
