head	1.14;
access;
symbols
	healthdept_2018:1.14
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.10
	Bproc:1.10
	oct21:1.7
	last77:1.7;
locks; strict;
comment	@c @;


1.14
date	2018.10.03.14.51.08;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.27.13;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.13.41;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.18.07.31;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.06.20.15.31.42;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2000.06.20.14.59.22;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.24.19.10.40;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.02.11.18.58.11;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.02.05.14.54.14;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.11.07.22.03.55;	author hedget;	state Exp;
branches;
next	1.4;

1.4
date	97.10.24.17.30.05;	author hedget;	state Exp;
branches;
next	1.3;

1.3
date	97.10.24.17.02.10;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.10.05.18.27.15;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.14.12.24;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.14
log
@email_health_dept
@
text
@ 
 
#ifdef SP_SUN4 
 
C   THIS ROUTINE NOT AVAILABLE AT SUN SITES
 
       SUBROUTINE vax32u
 
       COMMON /UNITS/LUNC,NIN,NOUT
 
       WRITE(NOUT,*) 'DUMMY CALL: vax32u'
       RETURN
       END
#else
 
C++*********************************************************************
C
C  VAX32U.FOR  --  JUL 93 al
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    VAX32U(FVAL)
C
C    PURPOSE:  QUICKLY CONVERT A VAX FLOATING POINT NUMBER TO A UNIX 
C              FLOATING POINT NUMBER.  THIS SUBROUTINE IS MEANT TO BE
C              RUN ON A UNIX SYSTEM (NOT ON A VAX!)
C
C    PARAMETERS:   IVAL       FLOATING POINT NUMBER!!!
C
C    NOTES:        IVALIN     --  --  --  --
C                  LVALIN      1   2   3   4
C                             IN1 IN2 IN3 IN4
C
C
C                  IVALOUT    --  --  --  --
C                  LVALOUT     1   2   3   4
C                  I2         -----1
C
C **********************************************************************

      SUBROUTINE VAX32U(IVAL)

      LOGICAL * 1  IO1,IO2,IO3,IO4,IN1,IN2,IN3,IN4,LVALIN(4),LVALOUT(4)

      INTEGER * 2  I2

      INTEGER * 4  IVALIN,IVAL,IVALOUT
      EQUIVALENCE                 (LVALIN,IVALIN),(LVALOUT,IVALOUT)
      
      EQUIVALENCE  (IN1,LVALIN(1)), (IN2,LVALIN(2)), (IN3,LVALIN(3)),
     &             (IN4,LVALIN(4))
      EQUIVALENCE  (IO1,LVALOUT(1)),(IO2,LVALOUT(2)),(IO3,LVALOUT(3)),
     &             (IO4,LVALOUT(4))

#ifdef __osf__
      EQUIVALENCE  (I2,LVALOUT(3))
#else
      EQUIVALENCE  (I2,IVALOUT)
#endif
    
      INTEGER * 2  P32640
      P32640 = 32640

      IVALIN = IVAL

C     CHANGE THE EXPONENT TO EXCESS 127 NOTATION FOR UNIX

C     FLIP THE BYTES IN EACH OF THE WORDS
#ifndef __osf__
      IO1 = IN2
      IO2 = IN1
      IO3 = IN4
      IO4 = IN3
#else
      IO1 = IN3
      IO2 = IN4
      IO3 = IN1
      IO4 = IN2
#endif

C     32640 = 0111 1111 1000 0000
C     256 = 0000 0001 0000 0000

      IF (IAND(I2,P32640) .NE. 0)  I2 = I2 - 256

      IVAL =  IVALOUT

      RETURN
      END
   
#endif
@


1.13
log
@GPL_2010
@
text
@d26 1
a26 1
C=* Email: spider@@wadsworth.org                                        *
@


1.12
log
@GPL License fixed
@
text
@a20 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d22 5
a26 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d28 1
a28 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d33 1
a33 1
C=* This program is distributed in the hope that it will be useful,    *
d35 1
a35 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a36 1
C=*                                                                    *
d38 1
a38 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@HRI GPL License used
@
text
@a16 1
C++************************************************************************
a20 1
C **************************************************************************
d24 1
a24 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a43 7

C *  COPYRIGHT (C)1989       WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a44 1
C **************************************************************************
a63 1
C **************************************************************************
@


1.10
log
@for vax use now
@
text
@d16 1
d21 1
d23 24
d53 1
d73 1
@


1.9
log
@works on dec unix now
@
text
@d61 4
d66 2
a67 1
     
d86 1
a86 1
#ENDIF
@


1.8
log
@SP_F90 removed
@
text
@d71 1
d76 6
@


1.7
log
@for f90
@
text
@a62 1
#ifdef SP_F90
a64 1
#endif
a78 1
#ifdef SP_F90
a79 4

#else
      IF (IAND(I2,32640) .NE. 0)  I2 = I2 - 256
#endif
@


1.6
log
@CNO_SAVE
@
text
@a0 10
#ifdef SP_F90

       SUBROUTINE VAX32U

       COMMON /UNITS/LUNC,NIN,NOUT

       WRITE(NOUT,*) 'DUMMY CALL: vax32u'
       RETURN
       END
#else
a49 1
CNO_SAVE 
d63 5
d81 4
d86 1
a92 1
#endif
@


1.5
log
@changed hexadecimal constant to decimal to compile under f90
@
text
@a12 14
#ifdef SP_VMS 
 
C   THIS ROUTINE SPECIFIC TO UNIX SPIDER AND IS NOT 
C       USED AT VAX SITES
 
       SUBROUTINE vax32u
 
       COMMON /UNITS/LUNC,NIN,NOUT
 
       WRITE(NOUT,*) 'DUMMY CALL: vax32u'
       RETURN
       END
 
#else
d60 1
a93 1
#endif 
@


1.4
log
@*** empty log message ***
@
text
@d97 4
a100 1
      IF (IAND(I2,'7F80'X) .NE. 0)  I2 = I2 - '0100'X
@


1.3
log
@added ifdef for f90
@
text
@d1 1
a1 1
ifdef SP_F90
d3 1
a3 1
       SUBROUTINE vaxtounix
d7 1
a7 1
       WRITE(NOUT,*) 'DUMMY CALL: vaxtounix'
@


1.2
log
@not available on sun
@
text
@d1 10
d106 1
a106 1
 
@


1.1
log
@cpp_lines_added
@
text
@d17 1
d19 11
d94 1
a94 1
 
@
