head	1.23;
access;
symbols
	pre_getangas:1.23
	GPL2010:1.23
	pre_GPL2010:1.22
	pre_var_equation:1.22
	pre_fftwrings:1.22
	pre_opfiles:1.22
	src:1.22
	best-code:1.22
	x-named-regs:1.22
	x:1.22
	v13-00:1.22
	pre_GPL:1.20
	prec_CA:1.20
	noindx:1.16
	Bproc:1.10
	oct21:1.10
	last77:1.8;
locks; strict;
comment	@c @;


1.23
date	2010.06.24.13.26.51;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2005.10.17.20.28.13;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2005.10.17.18.19.42;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2003.07.28.13.44.25;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2003.07.25.14.07.15;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.08.15.34.30;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.07.07.20.02.04;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2002.11.20.15.54.37;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.19.15.04.01;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.03.17.36.34;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.01.29.21.14.34;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2001.01.29.21.05.55;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.12.19.19.50.26;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.07.15.14.40.47;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.04.05.19.05.03;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.02.05.13.54.32;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.08.26.14.52.02;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.07.02.18.39.31;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	96.04.25.20.24.58;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.04.25.20.15.57;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.08.15.12.20.09;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.07.19.12.01.13;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.36;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.23
log
@GPL_2010
@
text
@
C++*********************************************************************
C
C SAVDN1.F  
C                             LONG FILENAMES      JAN   89 al
C                             OPENDOC PARAMETERS  DEC 2000 ARDEAN LEITH
C                             INCORE OPENDOC      JUL 2003 ARDEAN LEITH
C                             IRTFLG = 9          JUL 2003 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    SAVDN1(NDOC,DOCNAM,DLIST,NLISTT,NRUN,IAP)
C
C    PURPOSE:    SUBROUTINE TO SAVE PARAMETERS IN DOCUMENT FILE WHICH
C                MAY BE ALREADY OPENED, CALLED INSIDE A PROGRAM
C
C    PARAMETERS:   NDOCT   LUN NUMBER OF FILE TO SAVE REGISTERS   (SENT)
C                  DOCNAM  NAME FOR DOC FILE 
C                              (SPIDER EXTENSION NOT NECESSARY)   (SENT)
C                  DLIST   ARRAY CONTAINING FLOATING PT. NUMBERS  (SENT)
C                                 TO BE SAVED.
C                              (FIRST NUMBER IS KEY)
C	           NLISTT  NUMBER OF ELEMENTS IN ARRAY            (SENT)
C	                     (<0 IS FLAG TO NOT ECHO OPEN INFO)
C                  NRUN    0 IF FIRST CALL (OPENS FILE), ELSE 1   (SENT)
C                  IAP     1 IF OPEN/APPEND, 0 IF OPEN/REWIND     (SENT)
C
C--*******************************************************************

	SUBROUTINE SAVDN1(NDOCT,DOCNAM,DLIST,NLISTT,NRUN,IAP)

        INCLUDE 'CMBLOCK.INC'

	REAL,DIMENSION(*) :: DLIST
	CHARACTER(LEN=*)  :: DOCNAM
	LOGICAL           :: ADDEXT,APPEND,NEWFILE                

        SAVE NDOC

	IF (NRUN .LE. 0) THEN
C         FIRST CALL OF THIS ROUTINE, OPEN DOC FILE NOW

          ADDEXT = .TRUE.
          IDOT   = INDEX(DOCNAM,'.',.TRUE.) 
          IF ((IDOT .GT. 0)  .AND.  
     &        (INDEX(DOCNAM(IDOT:),'/') .LE. 0) .AND.
     &        (INDEX(DOCNAM(IDOT:),CHAR(92)) .LE. 0)) ADDEXT = .FALSE.
   
          APPEND = (IAP .NE. 0) 
C         IF UNWANTED, DO NOT ECHO FILE OPENING INFO
          IF (NLISTT .LT. 0)  IRTFLG = -9
          CALL OPENDOC(DOCNAM,ADDEXT,NLET,NDOCT,NDOC,.FALSE.,' ',
     &                 .FALSE.,APPEND,.TRUE.,NEWFILE,IRTFLG)
          IF (IRTFLG .NE. 0) RETURN
        ENDIF

C       PUT REGISTERS IN DOC FILE
        NLIST  = ABS(NLISTT) - 1
        IF (NLIST .LE. 0) RETURN

        IKEY = DLIST(1)

        CALL LUNDOCWRTDAT(NDOC,IKEY,DLIST(2),NLIST,IRTFLG)

        RETURN
	END

@


1.22
log
@GPL License fixed
@
text
@a10 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d12 5
a16 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d18 1
a18 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d23 1
a23 1
C=* This program is distributed in the hope that it will be useful,    *
d25 1
a25 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a26 1
C=*                                                                    *
d28 1
a28 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.21
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a10 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d14 1
a14 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a33 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a34 1
C **************************************************************************
@


1.20
log
@cosmetic
@
text
@d2 1
d11 1
d13 1
d15 24
d45 1
@


1.19
log
@nlistt added capability
@
text
@d58 2
a59 4
          IF (NLISTT .LT. 0) THEN
C            DO NOT ECHO FILE OPENING INFO
             IRTFLG = -9
          ENDIF
@


1.18
log
@opendoc incore paramete
@
text
@d8 2
d20 1
a20 1
C    SAVDN1(NDOC,DOCNAM,DLIST,NLIST,NRUN,IAP)
d31 2
a32 1
C	           NLIST   NUMBER OF ELEMENTS IN ARRAY            (SENT)
d38 1
a38 1
	SUBROUTINE SAVDN1(NDOCT,DOCNAM,DLIST,NLIST,NRUN,IAP)
d58 4
a61 1

d68 2
a69 3

        NLISTT = NLIST - 1
        IF (NLISTT .LE. 0) RETURN
d73 1
a73 1
        CALL LUNDOCWRTDAT(NDOC,IKEY,DLIST(2),NLISTT,IRTFLG)
@


1.17
log
@incore opendoc
@
text
@d39 3
a41 3
	DIMENSION      DLIST(*)
	CHARACTER *(*) DOCNAM
	LOGICAL  ::  ADDEXT,APPEND,NEWFILE                
d56 1
a56 2
          NDOC   = NDOCT
          CALL OPENDOC(DOCNAM,ADDEXT,NLET,NDOC,.FALSE.,' ',
@


1.16
log
@comment
@
text
@d7 1
d23 1
a23 1
C    PARAMETERS:   NDOC    LUN NUMBER OF FILE TO SAVE REGISTERS   (SENT)
d35 1
a35 1
	SUBROUTINE SAVDN1(NDOC,DOCNAM,DLIST,NLIST,NRUN,IAP)
d41 1
a41 1
	LOGICAL        ADDEXT,APPEND,NEWFILE                
d43 2
d56 1
d67 1
a67 1
        IKEY   = DLIST(1)
@


1.15
log
@\' not accepted on ibm
@
text
@d27 1
@


1.14
log
@. ext not after /
@
text
@d48 1
a48 1
     &        (INDEX(DOCNAM(IDOT:),'\') .LE. 0)) ADDEXT = .FALSE.
@


1.13
log
@changed order of nlist test to avoid NaN
@
text
@d44 6
a49 1
          ADDEXT = (INDEX(DOCNAM,'.') .EQ. 0)  
@


1.12
log
@trap for nlist ==0 return
@
text
@a53 1
        IKEY   = DLIST(1)
d56 2
@


1.11
log
@opendoc has prompt parameter now
@
text
@d42 1
a42 1
C         FIRST CALL OF THIS ROUTINE
a49 1

a52 1
C       CALL SAVDN(NDOC,DLIST,NLIST,IRTFLG)
d56 2
@


1.10
log
@replaced savdn call with lundocwrtdat call
@
text
@d4 3
a6 2
C SAVDN1.FOR
C                                              LONG FILENAMES JAN 89 al
d47 1
a47 1
          CALL OPENDOC(DOCNAM,ADDEXT,NLET,NDOC,.FALSE.,
@


1.9
log
@used savdn.f call
@
text
@d53 5
a57 1
        CALL SAVDN(NDOC,DLIST,NLIST,IRTFLG)
@


1.8
log
@CNO_SAVE
@
text
@d34 1
a34 1
CNO_SAVE 
d36 1
a36 8
C       I DO NOT KNOW IF SAVE IS NEEDED FEB 99 al
        SAVE

	COMMON /UNITS/LUN,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT
	COMMON /MASTER/NSAM,NROW,IREC,NLABEL,IFORM,IMAMI,FMAX,FMIN,
     &                 AV,SIG,IHIST

	DIMENSION      DLIST(1)
a37 1
	CHARACTER *1   NULL
a39 2
        NULL = CHAR(0)

d43 2
a44 5
          ADDEXT = .TRUE.
          IF (INDEX(DOCNAM,'.') .NE. 0)  ADDEXT = .FALSE.

          APPEND = .TRUE.
          IF (IAP .EQ. 0) APPEND = .FALSE.
d52 2
a53 43

        IKEY = DLIST(1)+.5

C       CAN OPEN FILE WITHOUT PUTTING DATA IN YET IF NLIST == 0
        IF (NLIST .EQ. 0) RETURN

        IF (NLIST .LE. 7) THEN
           ICOUNT = NLIST-1

C          IKEY IS THE KEY NUMBER.
C          ICOUNT IS THE NUMBER OF NUMBERS IN THAT LINE.

           WRITE(NDOC,1462)IKEY,ICOUNT,(DLIST(K),K=2,NLIST)
1462       FORMAT(I5,' ',I1,6G12.5)
           RETURN
        ENDIF

C       WRITE FIRST LINE INTO DOC FILE
        ICOUNT = 6
        WRITE(NDOC,1462) IKEY,ICOUNT,(DLIST(K),K=2,7)

C       FIND OUT IF THERE ARE MORE LINES
        K2 = NLIST-6
        IF (K2 .LT. 6) THEN
C          THIS IS A PARTIAL CONTINUATION LINE
           ICOUNT = K2-1
           WRITE(NDOC,1468)ICOUNT,(DLIST(J),J=NLIST-K2+2,NLIST)
           RETURN
        ENDIF

        DO  K=8,NLIST,6
C          WRITE NEXT FULL CONTINUATION LINE INTO DOC FILE
           WRITE(NDOC,1468) ICOUNT,(DLIST(NSIX),NSIX=K,K+5)
1468	   FORMAT('   -99',' ',I1,6G12.5)
           K2 = NLIST-K-5
           IF (K2 .LE. 0) RETURN
           IF (K2 .LT. 6) THEN
C            WRITE PARTIAL CONTINUATION LINE INTO DOC FILE
             ICOUNT = K2-1
             WRITE(NDOC,1468) ICOUNT,(DLIST(J),J=NLIST-K2+2,NLIST)
             RETURN
           ENDIF
        ENDDO
@


1.7
log
@improved comment
@
text
@d34 5
@


1.6
log
@make key go to 99999
@
text
@d18 2
a19 2
C    PURPOSE:    SUBROUTINE TO SAVE PARAMETERS IN DOCUMENT FILE 
C                ALREADY OPENED, CALLED INSIDE A PROGRAM
@


1.5
log
@changed to nlist == 0
@
text
@d73 1
a73 1
1462       FORMAT(1X,I4,' ',I1,6G12.5)
@


1.4
log
@added trap for ikey == 0
@
text
@d63 2
a64 2
C       CAN OPEN FILE WITHOUT PUTTING DATA IN YET IF IKEY == 0
        IF (IKEY .EQ. 0) RETURN
@


1.3
log
@bug if extension not present logic
@
text
@d63 3
@


1.2
log
@used opendoc and cosmetic
@
text
@d22 2
a23 1
C                  DOCNAM  NAME FOR DOC FILE (WITHOUT EXTENSION!) (SENT)
d49 1
a49 1
          IF (INDEX(DOCNAM,'.') .EQ. 0)  ADDEXT = .FALSE.
a56 2

	  NUMFIL = NUMFIL+1
@


1.1
log
@Initial revision
@
text
@d18 2
a19 1
C    PURPOSE:    SUBROUTINE TO SAVE PARAMETERS IN DOCUMENT FILE ALREADY OPENED
d21 7
a27 6
C    PARAMETERS:   NDOC    LUN NUMBER OF FILE TO SAVE REGISTERS
C                  DOCNAM  NAME FOR DOC FILE (WITHOUT EXTENSION!)
C                  DLIST   ARRAY CONTAINING FLOATING PT. NUMBERS TO BE SAVED.
C	           NLIST   NUMBER OF ELEMENTS IN ARRAY
C                  NRUN    0 IF FIRST CALL (OPENS FILE), ELSE 1
C                  IAP     1 IF OPEN/APPEND, 0 IF OPEN/REWIND
a36 6
        COMMON /MASTER1/ DATEXC,PRJEXC,CDAT,CTIM,CTIT
        CHARACTER *4     DATEXC,PRJEXC
        CHARACTER *10    CDAT
        CHARACTER *8     CTIM
        CHARACTER *160   CTIT

d40 1
a40 3
        CHARACTER *10  CDATE
        CHARACTER *8   CTIME
	LOGICAL        EX                  
d42 1
a42 1
        NULL=CHAR(0)
a45 6
          IF (INDEX(DOCNAM,'.') .EQ. 0) THEN
            CALL FILCAN(DOCNAM,NLET,NULL,NULL,DOCNAM,DATEXC,IER)
          ELSE
C           IF FILENAME IS ALREADY CONSTRUCTED, THEN NLET IS NEEDED:
            NLET=INDEX(DOCNAM,'.')+3
          ENDIF
d47 2
a48 1
          INQUIRE(FILE=DOCNAM,EXIST=EX)
d50 2
a51 7
          IF (EX) THEN
C           FILE EXISTS. OPEN WITH APPEND
            IF (IAP .EQ. 1) THEN
               OPEN(NDOC,FILE=DOCNAM,STATUS='OLD',ACCESS='APPEND')
            ELSEIF (IAP .EQ. 0) THEN
               OPEN(NDOC,FILE=DOCNAM,STATUS='OLD',ACCESS='SEQUENTIAL')
            ENDIF
d53 3
a55 4
          ELSE
C           CREATE NEW FILE
	    OPEN(NDOC,FILE=DOCNAM,STATUS='UNKNOWN')
          ENDIF
a56 7
          CALL DATE(CDATE)
          CALL TIME(CTIME)

	  WRITE(NDOC,1463) PRJEXC(:3),DATEXC(:3),
     &      CDATE,CTIME,DOCNAM(:NLET)
1463	  FORMAT(' ; ',A3,'/',A3,3X,A9,' AT ',A8,3X,A40)

d88 1
a88 1
        DO 1475 K=8,NLIST,6
d91 1
a91 1
1468	   FORMAT(1X,'  -99',' ',I1,6G12.5)
d100 1
a100 1
1475	CONTINUE
@
