head	1.11;
access;
symbols
	healthdept_2018:1.11
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.7
	prec_CA:1.7
	noindx:1.7;
locks; strict;
comment	@c @;


1.11
date	2018.10.03.14.34.15;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.24.13.26.50;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.20.13.35;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.18.07.26;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2002.07.08.15.14.09;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.07.18.18.18;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.02.22.22.51;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.30.12.45.49;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.26.19.28.24;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.10.19.39.44;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.09.16.06.49;	author leith;	state Exp;
branches;
next	;


desc
@'RT 3DQ'
@


1.11
log
@email_health_dept
@
text
@C++*********************************************************************
C
C ROTS3Q.F                                 NEW APRIL 4 2002 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  ROTS3Q(LUN2,Q1,KLX,KNX,KLY,KNY,KLZ,KNZ,PSI,THETA,PHI)
C 
C  PURPOSE:        3D ROTATION USING EULER ANGLES OF VOLUME. 
C                  TRI-QUADRATIC INTERPOLATION
C                  VOLUME TRUNCATED AT ORIGINAL BORDERS
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

         SUBROUTINE ROTS3Q(LUN2,Q1,KLX,KNX,KLY,KNY,KLZ,KNZ,
     &                     PSI,THETA,PHI)

         DIMENSION  Q1(KLX:KNX,KLY:KNY,KLZ:KNZ), Q2(KLX:KNX)
         DOUBLE     PRECISION  QR(3),RM(3,3),DX,DY,DZ

         INTEGER, PARAMETER :: NSIZE = 27

         INTEGER, DIMENSION(27) :: X,Y,Z
         REAL, DIMENSION(27) :: F

C        SET THE KNOWN COORDINATE GRID
C  Replaced by loops below, data does not agree with openmp.
c         DATA X/  
c     &          -1, 0, 1, -1, 0, 1, -1, 0, 1, 
c     &          -1, 0, 1, -1, 0, 1, -1, 0, 1, 
c     &          -1, 0, 1, -1, 0, 1, -1, 0, 1/ 

c         DATA Y/ 
c     &          -1,-1,-1,  0, 0, 0,  1, 1, 1, 
c     &          -1,-1,-1,  0, 0, 0,  1, 1, 1, 
c     &          -1,-1,-1,  0, 0, 0,  1, 1, 1/ 
 
c         DATA Z/  
c     &          -1,-1,-1, -1,-1,-1, -1,-1,-1, 
c     &           0, 0, 0,  0, 0, 0,  0, 0, 0,
c     &           1, 1, 1,  1, 1, 1,  1, 1, 1/
 

C        SET THE KNOWN COORDINATE GRID
	 DO  L=1,NSIZE,3
	  X(L)=-1
	  X(L+1)=0
	  X(L+2)=1
	  Y(L)=MOD(L/3,3)-1
	  Y(L+1)=MOD(L/3,3)-1
	  Y(L+2)=MOD(L/3,3)-1
	 ENDDO
	 DO  L=1,NSIZE
	  Z(L)=(L-1)/9-1
	 ENDDO
C
         CALL BLDR(RM,PSI,THETA,PHI)
         NSAM  = KNX - KLX + 1
         IREC  = 0

         DO IZ=KLZ,KNZ
           DO IY=KLY,KNY

              QR(1) = RM(1,1)*KLX+RM(2,1)*IY+RM(3,1)*IZ
              QR(2) = RM(1,2)*KLX+RM(2,2)*IY+RM(3,2)*IZ
              QR(3) = RM(1,3)*KLX+RM(2,3)*IY+RM(3,3)*IZ

              DO IX=KLX,KNX

C                IOX..  INTEGER LOCATION IN -NSAM/2...NSAM/2 ARRAY
                 IOX = FLOOR(QR(1))   
                 IOY = FLOOR(QR(2))   
                 IOZ = FLOOR(QR(3))   

C                DX.. OFFSET FROM INTEGER ARRAY
                 DX  = QR(1) - IOX
                 DY  = QR(2) - IOY
                 DZ  = QR(3) - IOZ

                 IF ((IOX.GT.KLX .AND. IOX.LT.(KNX)) .AND.
     &               (IOY.GT.KLY .AND. IOY.LT.(KNY)) .AND.
     &               (IOZ.GT.KLZ .AND. IOZ.LT.(KNZ))) THEN
C                   ROTATED POSITION IS INSIDE OF VOLUME

C                   FIND INTENSITIES ON 3x3x3 COORDINATE GRID
                    DO L = 1,NSIZE
                       I    = IOX + X(L)
                       J    = IOY + Y(L)
                       K    = IOZ + Z(L)
                       F(L) = Q1(I,J,K)
                    ENDDO

c             write(6,*) 'iox,ioy,ioz:',iox,ioy,ioz
c             write(6,*) 'qr:',qr
c             write(6,*) 'dx,dy,dz:',dx,dy,dz
c            write(6,*) 'dx,dy,dz:',dx,dy,dz
c             write(6,*) 'iox,ioy,ioz:',iox,ioy,ioz
c             stop

C                   EVALUATE INTENSITY AT PX,PY,PZ
                    Q2(IX) = TRIQUAD(DX,DY,DZ,F)

                 ELSE
C                   ROTATED POSITION IS OUTSIDE VOLUME
                    Q2(IX) = Q1(IX,IY,IZ)
                 ENDIF

                 QR(1) = QR(1) + RM(1,1)
                 QR(2) = QR(2) + RM(1,2)
                 QR(3) = QR(3) + RM(1,3)
              ENDDO

              IREC = IREC + 1
              CALL WRTLIN(LUN2,Q2,NSAM,IREC)
           ENDDO
        ENDDO
        END

@


1.10
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.9
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a38 1
C--************************************************************************
@


1.7
log
@0 0 0 bug
@
text
@d1 1
d8 24
d46 1
@


1.6
log
@removed triquad to own file
@
text
@d51 1
a51 6
         IF (THETA.EQ.0.0 .AND .PHI.EQ.0.0 .AND. PSI.EQ.0.0)  THEN
C           NO ROTATION NEEDED
            CALL WRTVOL(LUN2,NSAM,NROW,NSLICE,Q1,IRTFLG)
            RETURN
         ENDIF
C
@


1.5
log
@minor correction of integer and data statements removed.
@
text
@a131 57

      REAL FUNCTION TRIQUAD(R,S,T,F)

      DOUBLE PRECISION  R,S,T
      REAL, DIMENSION(27),INTENT(IN) :: F

      REAL, PARAMETER :: c2 = 1.0 / 2.0
      REAL, PARAMETER :: c4 = 1.0 / 4.0
      REAL, PARAMETER :: c8 = 1.0 / 8.0

      rs   = r * s
      st   = s * t
      rt   = r * t
      rst  = r * st

      rsq  = 1-r**2
      ssq  = 1-s**2
      tsq  = 1-t**2

      rm1  = (1-r)
      sm1  = (1-s)
      tm1  = (1-t)

      rp1  = (1+r)
      sp1  = (1+s)
      tp1  = (1+t)

      triquad = 
     &  (-c8) * rs  * rm1  * sm1  * tm1 * f( 1) + 
     &  ( c4) * st  * rsq  * sm1  * tm1 * f( 2) + 
     &  ( c8) * rst * rp1  * sm1  * tm1 * f( 3) + 
     &  ( c4) * rt  * rm1  * ssq  * tm1 * f( 4) + 
     &  (-c2) * t   * rsq  * ssq  * tm1 * f( 5) + 
     &  (-c4) * rt  * rp1  * ssq  * tm1 * f( 6) + 
     &  ( c8) * rst * rm1  * sp1  * tm1 * f( 7) + 
     &  (-c4) * st  * rsq  * sp1  * tm1 * f( 8) + 
     &  (-c8) * rst * rp1  * sp1  * tm1 * f( 9) + 
     &  ( c4) * rs  * rm1  * sm1  * tsq * f(10) + 
     &  (-c2) * s   * rsq  * sm1  * tsq * f(11) + 
     &  (-c4) * rs  * rp1  * sm1  * tsq * f(12) + 
     &  (-c2) * r   * rm1  * ssq  * tsq * f(13) + 
     &                rsq  * ssq  * tsq * f(14) + 
     &  ( c2) * r   * rp1  * ssq  * tsq * f(15) + 
     &  (-c4) * rs  * rm1  * sp1  * tsq * f(16) + 
     &  ( c2) * s   * rsq  * sp1  * tsq * f(17) + 
     &  ( c4) * rs  * rp1  * sp1  * tsq * f(18) + 
     &  ( c8) * rst * rm1  * sm1  * tp1 * f(19) + 
     &  (-c4) * st  * rsq  * sm1  * tp1 * f(20) + 
     &  (-c8) * rst * rp1  * sm1  * tp1 * f(21) + 
     &  (-c4) * rt  * rm1  * ssq  * tp1 * f(22) + 
     &  ( c2) * t   * rsq  * ssq  * tp1 * f(23) + 
     &  ( c4) * rt  * rp1  * ssq  * tp1 * f(24) + 
     &  (-c8) * rst * rm1  * sp1  * tp1 * f(25) + 
     &  ( c4) * st  * rsq  * sp1  * tp1 * f(26) + 
     &  ( c8) * rst * rp1  * sp1  * tp1 * f(27)  

         end
@


1.4
log
@x --> integer
@
text
@a0 1
 
d27 1
a27 1
         DOUBLE     PRECISION  QR(3),RM(3,3),DX,DY,Dz
d31 2
a32 1
         INTEGER, DIMENSION(27) :: X,Y,Z,F
d35 10
a44 9
         DATA X/  
     &          -1, 0, 1, -1, 0, 1, -1, 0, 1, 
     &          -1, 0, 1, -1, 0, 1, -1, 0, 1, 
     &          -1, 0, 1, -1, 0, 1, -1, 0, 1/ 

         DATA Y/ 
     &          -1,-1,-1,  0, 0, 0,  1, 1, 1, 
     &          -1,-1,-1,  0, 0, 0,  1, 1, 1, 
     &          -1,-1,-1,  0, 0, 0,  1, 1, 1/ 
d46 4
a49 4
         DATA Z/  
     &          -1,-1,-1, -1,-1,-1, -1,-1,-1, 
     &           0, 0, 0,  0, 0, 0,  0, 0, 0,
     &           1, 1, 1,  1, 1, 1,  1, 1, 1/ 
d56 14
a69 1

d84 1
a84 1
                 IOx = FLOOR(QR(1))   
d86 1
a86 1
                 IOz = FLOOR(QR(3))   
d105 7
@


1.3
log
@simplified speed-up
@
text
@d32 1
a32 1
         REAL, DIMENSION(27) :: X,Y,Z,F
a90 7

c             write(6,*) 'iox,ioy,ioz:',iox,ioy,ioz
c             write(6,*) 'qr:',qr
c             write(6,*) 'dx,dy,dz:',dx,dy,dz
c            write(6,*) 'dx,dy,dz:',dx,dy,dz
c             write(6,*) 'iox,ioy,ioz:',iox,ioy,ioz
c             stop
@


1.2
log
@speedup
@
text
@d1 1
a1 1

d4 1
a4 1
C ROTS3Q.F                              NEW APRIL 4 2002 ArDean Leith
a20 1
C
d28 1
a28 1
         DOUBLE     PRECISION  RM(3,3),QR(3)
d30 1
a30 4
         INTEGER    LCELL(3,3,3), LNEXT(64)
         REAL       X(64),Y(64),Z(64),F(64),RSQ(64),A(9,64)
         REAL       XYZMIN(3), XYZDEL(3)
         LOGICAL    FIRST
d32 1
a32 1
         DATA N/64/, NQ/17/, NW/32/, NR/3/
d34 16
a55 14
C        SET THE KNOWN COORDINATE GRID
         L = 0
         DO K = -1,2
            DO J = -1,2
               DO I = -1,2
                  L    = L + 1
                  X(L) = I
                  Y(L) = J
                  Z(L) = K
               ENDDO
            ENDDO
         ENDDO
         FIRST = .TRUE.

d57 2
a58 2
         NSAM = KNX - KLX + 1
         IREC = 0
d70 3
a72 3
                 IOX = QR(1)
                 IOY = QR(2)
                 IOZ = QR(3)
d75 7
a81 7
                 DX  = FRACTION(QR(1))
                 DY  = FRACTION(QR(2))
                 DZ  = FRACTION(QR(3))

                 IF ((IOX.GT.KLX .AND. IOX.LE.(KNX-2)) .AND.
     &               (IOY.GT.KLY .AND. IOY.LE.(KNY-2)) .AND.
     &               (IOZ.GT.KLZ .AND. IOZ.LE.(KNZ-2))) THEN
d85 5
a89 8
                    L = 0
                    DO K = IOZ-1,IOZ+2
                       DO J = IOY-1,IOY+2
                          DO I = IOX-1,IOX+2
                             L    = L + 1
                             F(L) = Q1(I,J,K)
                          ENDDO
                       ENDDO
d92 6
a97 3
C                   FIND PARAMETERS DEFINING INTERPOLANT
                    CALL QSHEP3(64,X,Y,Z,F,17,32,3,LCELL,LNEXT,XYZMIN,
     &		                XYZDEL,RMAX,RSQ,A,FIRST,IER)
d100 2
a101 2
                    Q2(IX) = QS3VAL(DX,DY,DZ,64,X,Y,Z,F,3,LCELL,
     &                              LNEXT,XYZMIN,XYZDEL,RMAX,RSQ,A)
d119 4
d124 49
d174 1
@


1.1
log
@Initial revision
@
text
@d34 1
d56 1
d99 1
a99 1
     &		                XYZDEL,RMAX,RSQ,A,IER)
@
