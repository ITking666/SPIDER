head	1.21;
access;
symbols
	healthdept_2018:1.21
	pre_getangas:1.19
	GPL2010:1.19
	pre_GPL2010:1.18
	pre_var_equation:1.18
	pre_fftwrings:1.17
	pre_opfiles:1.17
	src:1.17
	best-code:1.17
	x-named-regs:1.17
	x:1.17
	v13-00:1.17
	pre_GPL:1.15
	prec_CA:1.15
	noindx:1.15
	Bproc:1.11
	oct21:1.10
	last77:1.10;
locks; strict;
comment	@c @;


1.21
date	2018.10.03.14.34.05;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2011.03.21.13.26.21;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2010.06.24.13.25.31;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2009.05.22.10.57.00;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.17.20.00.58;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.17.56.47;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2002.11.19.15.33.14;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2002.04.09.14.59.29;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2002.04.03.20.46.51;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.11.14.07.49;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.11.10.23.09.15;	author yuchen;	state Exp;
branches;
next	1.10;

1.10
date	98.10.07.18.59.21;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	98.08.10.19.13.16;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	98.03.04.15.07.33;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	98.02.04.18.57.41;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	98.01.05.20.17.18;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.10.06.19.28.48;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.08.13.18.55.45;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	96.02.08.17.00.29;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.04.42;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.30;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.21
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C  ENHANC.F    FIXED UNDEFINED BOTTOM BUG            APR 02 ARDEAN LEITH
C              REMOVED 'CE L" (BUGGY FOR 16 YRS)            ARDEAN LEITH
C              SETPRMB PARAMETERS                    MAY 09 ARDEAN LEITH
C              NBINS, AUTO ? BUG, FORMAT             MAR 11 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2011  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    ENHANC(FILNAM,LUNI,LUNO,NSAM,NROW)
C
C    PURPOSE: IMAGE ENHANCEMENT ROUTINE.  CALLS OTHER ROUTINES FOR
C             HISTOGRAM BASED ENHANCEMENTS AND DOES THRESHOLDING.
C
C    PARAMETERS:
C         FILNAM     NAME OF FILE
C         LUNI       LOGICAL UNIT NUMBER OF INPUT FILE
C         LUNO       LOGICAL UNIT NUMBER OF OUTPUT FILE
C         NSAM,NROW  DIMENSIONS OF FILE
C
C--*******************************************************************

      SUBROUTINE ENHANC(FILNAM,LUNI,LUNO,NSAM,NROW,NSLICE)

      COMMON BUF(1)

      INCLUDE 'CMBLOCK.INC'

      REAL             :: VAL(4)
      CHARACTER(LEN=*) :: FILNAM
      CHARACTER(LEN=1) :: ANS
      CHARACTER(LEN=1) :: NULL 
      CHARACTER(LEN=1) :: IRESH = 'N'

      EQUIVALENCE(B1,VAL(1)),(T1,VAL(2)),(B2,VAL(3)),(T2,VAL(4))

      INTEGER          :: NBINS = 128

      NULL = CHAR(0)

      MAPA = NSAM + 128

      CALL RDPRMC(ANS,NC,.TRUE.,
     &  '(S)INGLE, (A)UTOMATIC OR (D)OUBLE MAPPING? (S/A/D)',NULL,IRT)
      IF (IRT .EQ. -1) RETURN

      IF (ANS .EQ. 'A') THEN
         CALL RDPRM(PERC,NOT_USED,'INTEGRAL THRESHOLD PERCENT')

         CALL RDPRMC(IRESH,NC,.TRUE.,'PLOT RESULT HISTOGRAM? (Y/N)',
     &               NULL,IRT)
      ENDIF

      IF (ANS .EQ. 'S') THEN
         BOTTOM = 0        ! ARBITRARY USELESS
         CALL RDPRM1S(BOTTOM,NOT_USED,'BOTTOM DENSITY VALUE',IRTFLG)

         TOP    = 255      ! ARBITRARY USELESS
         CALL RDPRM1S(TOP,   NOT_USED,'TOP DENSITY VALUE',IRTFLG)

         IF (BOTTOM .GE. TOP) GOTO 650
      ENDIF

C     DETERMINE HISTOGRAM FROM IMAGE 
      CALL HIST(LUNI,0,0,NSAM,NROW,NSLICE,HMIN,HMAX,HSIG,HMODE)

      HINCO = (HMAX - HMIN) / FLOAT(NBINS - 1)

      WRITE(NOUT,1111) HMIN,HMAX
1111  FORMAT('  HISTOGRAM MINIMUM =',1PG13.5,
     &       '  HISTOGRAM MAXIMUM =',1PG13.5)

      IF (ANS .EQ. 'D') THEN  ! ----------------------------------- D
C        NON-UNIQUE MAPPING WITH DOUBLE LINEAR MAPPING FUNCTION
100      CALL RDPRM(B1,NOT_USED,'BOTTOM1')
         CALL RDPRM(T1,NOT_USED,'TOP1   ')
         CALL RDPRM(B2,NOT_USED,'BOTTOM2')
         CALL RDPRM(T2,NOT_USED,'TOP2   ')

         IF (B1 .LT. FMIN) B1 = FMIN
         IF (T2 .GT. FMAX) T2 = FMAX

C        CHECK IF B1,T1,B2,T2 ARE ORDERED ACCORDING TO INCREASING VALUE
         A = VAL(1)
         DO I = 1,4
           A = MAX(A,VAL(I))
           IF (A .NE. VAL(I)) GOTO 650
	 ENDDO

         IF (B1 .NE. T1) THEN
            IF (B2 .NE. T2) GOTO 130
            BOTTOM = B1
            TOP    = T1
         ELSE
            BOTTOM = B2
            TOP    = T2
         ENDIF
         GOTO 30


130      NB1 = (B1-HMIN) / HINCO + 1.5
         NT1 = (T1-HMIN) / HINCO + 1.5

C        NEW DENSITY INCREMENT ON LEFT HAND SIDE
         HINCN1 = 2.0 / FLOAT(NT1-NB1)
         NB2    = (B2-FMIN) / HINCO+1.5
         NT2    = (T2-FMIN) / HINCO+1.5
C        NEW DENSITY INCREMENT ON RIGHT HAND SIDE
         HINCN2 = 2.0 / FLOAT(NT2-NB2)

         IF (NB1 .GE. 2) THEN
           DO  K = 1,NB1-1
              BUF(MAPA+K) = 0.
	   ENDDO
         ENDIF
         DO  K = NB1,NT1
            BUF(MAPA+K) = FLOAT(K-NB1)* HINCN1
	 ENDDO
         IF (NT1 .NE. NB2) THEN
             DO  K = NT1+1,NB2-1
                BUF(MAPA+K) = 2.
	     ENDDO
         ENDIF
         DO  K = NB2,NT2
            BUF(MAPA+K) = FLOAT(K-NB2)*HINCN2      
	 ENDDO
         IF (NT2 .NE. NBINS) THEN
            DO K = NT2+1,NBINS
               BUF(MAPA+K) = 2.
	    ENDDO
         ENDIF
         GOTO 500

      ELSEIF (ANS .EQ. 'A') THEN ! ----------------------------- A
        P     = PERC*FLOAT(NSAM)*FLOAT(NROW)*FLOAT(NSLICE)/100.
        ADD   = 0.0

        DO   I = 1,NBINS
           IM  = I
           ADD = ADD + BUF(NSAM+I)
           WRITE(NDAT,2222)I,P,ADD,BUF(NSAM+I)
2222       FORMAT(1X,I3,3F10.5)
           IF (ADD .GT. P) EXIT
	ENDDO

        BOTTOM = FLOAT(IM) * HINCO + HMIN
        ADD    = 0.
        DO  I = NBINS,IM,-1
           IC  = I
           ADD = ADD+BUF(NSAM+I)
           IF (ADD .GT. P) EXIT
	ENDDO

        TOP = FLOAT(IC) * HINCO + HMIN
      ENDIF


      ! ------------------------------------------------------- S & A

30    IF (BOTTOM .LT. FMIN) BOTTOM = FMIN
      IF (TOP    .GT. FMAX) TOP    = FMAX
      IF (BOTTOM .EQ. FMIN .AND. TOP .EQ. FMAX) RETURN

      NB = (BOTTOM-HMIN) / HINCO+1.5
      NT = (TOP   -HMIN) / HINCO+1.5
      WRITE(NOUT,31)BOTTOM,TOP
31    FORMAT('  BOTTOM DENSITY ',1PG10.2,' , TOP DENSITY ',1PG10.2)
      HINCN = 2./FLOAT(NT-NB)

      IF (NB .GE. 2) THEN
         DO  K = 1,NB-1
           BUF(MAPA+K) = 0.
	 ENDDO
      ENDIF

70    DO  K = NB,NT
         BUF(MAPA+K) = FLOAT(K-NB) * HINCN
      ENDDO
      IF (NT .NE. NBINS) THEN
          DO  K = NT+1,NBINS
             BUF(MAPA+K) = 2.
	  ENDDO
      ENDIF

C     APPLY MAPPING FUNCTION TO DATA.
C     RESULT IS NORMALIZED BETWEEN 0. AND 2.

500   CALL GRAPHS(NDAT,BUF(MAPA+1),NBINS,1,0,1.0,IRTFLG)

      AV = 0.0
      DO  I = 1,NROW*NSLICE
         CALL REDLIN(LUNI,BUF,NSAM,I)
         DO  K     = 1,NSAM
            MAP    = (BUF(K)-HMIN)/HINCO+1.5
            T      = BUF(MAPA+MAP)
            AV     = AV + T
            BUF(K) = T
	 ENDDO
         CALL WRTLIN(LUNO,BUF,NSAM,I)
      ENDDO

      FMAX  = 0.0
      FMIN  = 0.0
      CALL SETPRMB(LUNO, 0.0,0.0, 0.0,0.0)

      IF (IRESH .EQ. 'Y') 
     &    CALL HIST(LUNO,0,0,NSAM,NROW,NSLICE,HMIN,HMAX,HSIG,HMODE)

      RETURN


650   CALL ERRT(14,'ENHANC',NE)

      END
@


1.20
log
@nbins capable (not used), 'A' query bug, formatting
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.19
log
@GPL_2010
@
text
@d4 4
a7 3
C  ENHANC.F       FIXED UNDEFINED BOTTOM BUG         APR 02 ARDEAN LEITH
C                 REMOVED 'CE L" (HAS NOT WORKED IN 16 YRS) ARDEAN LEITH
C                 SETPRMB PARAMETERS                 MAY 09 ARDEAN LEITH
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d50 1
a50 1
      DIMENSION      VAL(4)
d52 3
a54 1
      CHARACTER(LEN=1) :: NULL,IRESH,ANS
d58 2
d62 1
a62 1
      MAPA = NSAM+128
d70 1
d75 7
a81 3
      IF (ANS .EQ. 'S' .OR. ANS .EQ. 'A') THEN
         CALL RDPRM(BOTTOM,NOT_USED,'BOTTOM DENSITY VALUE')
         CALL RDPRM(TOP,   NOT_USED,'TOP DENSITY VALUE')
d88 2
a89 1
94    HINCO = (HMAX - HMIN) / 127.0
d91 2
a92 2
1111  FORMAT('  HISTOGRAM MINIMUM =',F10.5,
     &       '  HISTOGRAM MAXIMUM =',F10.5)
d94 1
a94 1
      IF (ANS .EQ. 'D') THEN
d97 3
d102 1
a102 3
         CALL RDPRM(T1,NOT_USED,'TOP1')
         CALL RDPRM(B2,NOT_USED,'BOTTOM2')
         CALL RDPRM(T2,NOT_USED,'TOP2')
a103 1
         IF (T2 .GT. FMAX) T2 = FMAX
d107 1
a107 1
           A = AMAX1(A,VAL(I))
d114 1
a114 1
            TOP = T1
d117 1
a117 1
            TOP = T2
d148 2
a149 2
         IF (NT2 .NE. 128) THEN
            DO K = NT2+1,128
d155 1
a155 1
      ELSEIF (ANS .EQ. 'A') THEN
d158 2
a159 1
        DO  I = 1,128
d164 1
a164 1
           IF (ADD .GT. P) GOTO 97
d167 4
a170 4
97      BOTTOM = FLOAT(IM)*HINCO+HMIN
        ADD = 0.
        DO  I = 128,IM,-1
           IC = I
d172 1
a172 1
           IF (ADD .GT. P) GOTO 99
d175 1
a175 1
99      TOP = FLOAT(IC)*HINCO+HMIN
d179 1
d182 1
a182 1
      IF (TOP    .GT. FMAX) TOP = FMAX
d185 2
a186 2
      NB = (BOTTOM-HMIN)/HINCO+1.5
      NT = (TOP-HMIN)/HINCO+1.5
d188 1
a188 1
31    FORMAT(' BOTTOM DENSITY ',G10.2,' , TOP DENSITY ',G10.2)
d198 1
a198 1
         BUF(MAPA+K) = FLOAT(K-NB)*HINCN
d200 2
a201 2
      IF (NT .NE. 128) THEN
          DO  K = NT+1,128
d209 1
a209 1
500   CALL GRAPHS(NDAT,BUF(MAPA+1),128,1,0,1.0,IRTFLG)
d211 1
a211 1
      AV = 0.
d214 5
a218 5
         DO  K = 1,NSAM
            MAP = (BUF(K)-HMIN)/HINCO+1.5
            T   = BUF(MAPA+MAP)
            AV  = AV +T
         BUF(K) = T
d220 1
a220 1
      CALL WRTLIN(LUNO,BUF,NSAM,I)
d232 1
a233 1
      RETURN
@


1.18
log
@rdprmb parameters
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.17
log
@GPL License fixed
@
text
@d6 1
d10 1
a10 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d90 1
d95 1
d124 1
d127 1
a127 1
           BUF(MAPA+K) = 0.
d152 5
a156 5
          IM  = I
          ADD = ADD + BUF(NSAM+I)
          WRITE(NDAT,2222)I,P,ADD,BUF(NSAM+I)
2222      FORMAT(1X,I3,3F10.5)
          IF (ADD .GT. P) GOTO 97
d162 3
a164 3
          IC = I
          ADD = ADD+BUF(NSAM+I)
          IF (ADD .GT. P) GOTO 99
d181 1
d183 3
a185 3
        DO  K = 1,NB-1
         BUF(MAPA+K) = 0.
	ENDDO
d187 1
d189 1
a189 1
       BUF(MAPA+K) = FLOAT(K-NB)*HINCN
d192 3
a194 3
        DO  K = NT+1,128
         BUF(MAPA+K) = 2.
	ENDDO
d197 1
a197 1
C     NOW APPLY MAPPING FUNCTION TO DATA.
d214 3
a216 3
      FMAX  = 0.
      FMIN  = 0.
      CALL SETPRMB(BUF,LUNO,NSAM,NROW,FMAX,FMIN,AV,'U')
@


1.16
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a7 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.15
log
@split out histogram (CE HI)
@
text
@d2 1
d10 24
@


1.14
log
@volumes correct now
@
text
@d4 2
a5 1
C    ENHANC.F         FIXED UNDEFINED BOTTOM BUG APR 02 ARDEAN LEITH
d9 1
a9 1
C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
d36 2
a37 2
      CHARACTER *(*) FILNAM
      CHARACTER      NULL,MODE,IRESH,ANS
a43 19
 4    CALL RDPRMC(MODE,NC,.TRUE.,
     &  '(S)TRETCH, (H)ISTOGRAM EQUALIZE OR (L)OCAL? (S/H/L)',
     &     NULL,IRT)
      IF (IRT .NE. 0) RETURN

      IF (MODE .EQ. 'H') THEN
C       HISTOGRAM EQUALIZATION
        CALL EHIST(FILNAM,LUNI,LUNO,NSAM,NROW,NSLICE)
        RETURN

      ELSEIF (MODE .EQ. 'L') THEN
C       ADAPTIVE HISTOGRAMING
        CALL LOCAL(LUNI,LUNO,NSAM,NROW,NSLICE)
        RETURN

      ELSEIF (MODE .NE. 'S') THEN
        CALL ERRT(15,'ENHANC ',NE)
        RETURN
      ENDIF
d47 1
a47 1
      IF (IRT .EQ. -1) GOTO 4
d191 1
a191 3
      AV    = AV/(FLOAT(NSAM)*FLOAT(NROW)*FLOAT(NSLICE))
      SIG   = -1.
      FMAX  = 2.
d194 1
d197 1
@


1.13
log
@ans bug
@
text
@d146 1
a146 1
        P     = PERC*FLOAT(NSAM)*FLOAT(NROW)/100.
a194 1
C500   CALL GRAPHS(BUF(MAPA+1),128,1)
d198 1
a198 1
      DO  I = 1,NROW
d209 1
a209 1
      AV    = AV/(FLOAT(NSAM)*FLOAT(NROW))
@


1.12
log
@nloop,iloop_removed
@
text
@d4 1
a4 1
C    ENHANC.FOR
d6 8
a13 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d17 2
a18 2
C    PURPOSE:  MAIN IMAGE ENHANCEMENT ROUTINE.  CALLS OTHER ROUTINES FOR
C              HISTOGRAM BASED ENHANCEMENTS AND DOES THRESHOLDING.
a33 1

d36 1
a36 2
      CHARACTER *3   ANS
      CHARACTER      NULL,MODE,IRESH
d75 1
a75 1
         CALL RDPRM(TOP,NOT_USED,'TOP DENSITY VALUE')
d128 1
a128 1
          BUF(MAPA+K) = FLOAT(K-NB1)* HINCN1
d131 3
a133 3
           DO  K = NT1+1,NB2-1
            BUF(MAPA+K) = 2.
	   ENDDO
d136 1
a136 1
          BUF(MAPA+K) = FLOAT(K-NB2)*HINCN2      
d139 3
a141 3
           DO K = NT2+1,128
            BUF(MAPA+K) = 2.
	   ENDDO
d146 1
a146 1
        P = PERC*FLOAT(NSAM)*FLOAT(NROW)/100.
@


1.11
log
@a
@
text
@d71 1
a71 1
         CALL RDPRM(PERC,NLOOP,ILOOP,'INTEGRAL THRESHOLD PERCENT')
d77 2
a78 2
         CALL RDPRM(BOTTOM,NLOOP,ILOOP,'BOTTOM DENSITY VALUE')
         CALL RDPRM(TOP,NLOOP,ILOOP,'TOP DENSITY VALUE')
d92 1
a92 1
100      CALL RDPRM(B1,NLOOP,ILOOP,'BOTTOM1')
d94 3
a96 3
         CALL RDPRM(T1,NLOOP,ILOOP,'TOP1')
         CALL RDPRM(B2,NLOOP,ILOOP,'BOTTOM2')
         CALL RDPRM(T2,NLOOP,ILOOP,'TOP2')
@


1.10
log
@graphs parameters wrong
@
text
@d34 1
a34 1
CNO_SAVE
@


1.9
log
@changed graphs parameters
@
text
@d198 2
a199 1
500   CALL GRAPHS(BUF(MAPA+1),128,1)
@


1.8
log
@removed IHIST variable (unused)
@
text
@d31 1
a31 2
C     BE CAREFUL ALTERING ULABELED COMMON, IT IS USED TO COMMUNICATE HISTOGRAM
      COMMON IPLOT(128),BUF(1)
d34 1
d42 1
a42 1
CNO_SAVE
d67 1
a67 1
     & '(S)INGLE, (A)UTOMATIC OR (D)OUBLE MAPPING? (S/A/D)',NULL,IRT)
d77 2
a78 2
         CALL RDPRM(BOTTOM,NLOOP,ILOOP,'BOTTOM DENSITY VALUE$')
         CALL RDPRM(TOP,NLOOP,ILOOP,'TOP DENSITY VALUE$')
d82 2
a83 2
C     DETERMINE HISTOGRAM FROM IMAGE AND STORE IN HISTOGRAM RECORDS OF FILE
      CALL HIST(LUNI,NSAM,NROW,NSLICE,0,0,.FALSE.)
d85 4
a88 5
94    HINCO = BUF(NSAM+130) / 127.
      HMIN  = BUF(NSAM+129)
      WRITE(NOUT,1111) HMIN,BUF(NSAM+130)
1111  FORMAT(' $$$ HISTOGRAM MINIMUM =',F10.5,
     &       '  HISTOGRAM RANGE=',F10.5)
d199 1
d216 3
a218 2
      CALL SETPRM(LUNO,NSAM,NROW,FMAX,FMIN,AV,'U')
      IF (IRESH .EQ. 'Y') CALL HIST(LUNO,NSAM,NROW,NSLICE,0,0,.FALSE.)
@


1.7
log
@nosave
@
text
@a213 1
      IHIST = 0
@


1.6
log
@added nslice parameter to local call
@
text
@d42 1
a42 1

@


1.5
log
@*** empty log message ***
@
text
@d58 1
a58 1
        CALL LOCAL(LUNI,LUNO,NSAM,NROW)
@


1.4
log
@removed rhist & whist
@
text
@d101 1
a101 1
         DO 110 I = 1,4
d104 1
a104 1
110      CONTINUE
d127 3
a129 2
           DO 140 K = 1,NB1-1
140        BUF(MAPA+K) = 0.
d131 3
a133 2
         DO 170 K = NB1,NT1
170      BUF(MAPA+K) = FLOAT(K-NB1)* HINCN1
d135 3
a137 2
           DO 180 K = NT1+1,NB2-1
180        BUF(MAPA+K) = 2.
d139 3
a141 2
         DO 210 K = NB2,NT2
210      BUF(MAPA+K) = FLOAT(K-NB2)*HINCN2      
d143 3
a145 2
           DO 220 K = NT2+1,128
220        BUF(MAPA+K) = 2.
d152 1
a152 1
        DO 96 I = 1,128
d158 1
a158 1
96      CONTINUE
d162 1
a162 1
        DO 98 I = 128,IM,-1
d166 1
a166 1
98      CONTINUE
d183 3
a185 2
        DO 50 K = 1,NB-1
50      BUF(MAPA+K) = 0.
d187 3
a189 2
70    DO 80 K = NB,NT
80    BUF(MAPA+K) = FLOAT(K-NB)*HINCN
d191 3
a193 2
        DO 90 K = NT+1,128
90      BUF(MAPA+K) = 2.
d201 1
a201 1
      DO 600 I = 1,NROW
d203 1
a203 1
         DO 550 K = 1,NSAM
d207 4
a210 2
550      BUF(K) = T
600   CALL WRTLIN(LUNO,BUF,NSAM,I)
@


1.3
log
@hist parameters changed (to remove radius, etc)
>> .
@
text
@d82 2
a83 7
      IF (IHIST .LE. 0) THEN
C       DETERMINE HISTOGRAM FROM IMAGE AND STORE IN HISTOGRAM RECORDS OF FILE
        CALL HIST(LUNI,NSAM,NROW,NSLICE,0,0,.FALSE.)
      ELSE
C       RECOVER HISTOGRAM FROM HISTOGRAM RECORDS OF THE FILE
        CALL RHIST(LUNI,BUF(NSAM+1),NSAM,NROW,NSLICE,IER)
      ENDIF
@


1.2
log
@cpp_lines_added
@
text
@d4 1
a4 1
C $$ ENHANC.FOR
d16 1
a16 1
C $$ ENHANC(FILNAM,LUNI,LUNO,NSAM,NROW)
d33 1
a33 1
#ifdef SP_UNIX
a34 3
#else
      INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d43 1
a43 1
      NULL=CHAR(0)
d84 1
a84 1
        CALL HIST(LUNI,NSAM,NROW,NSLICE,0)
d98 1
a98 1
100      CALL RDPRM(B1,NLOOP,ILOOP,'BOTTOM1$')
d100 3
a102 3
         CALL RDPRM(T1,NLOOP,ILOOP,'TOP1$')
         CALL RDPRM(B2,NLOOP,ILOOP,'BOTTOM2$')
         CALL RDPRM(T2,NLOOP,ILOOP,'TOP2$')
d213 1
a213 1
      IF (IRESH .EQ. 'Y') CALL HIST(LUNO,NSAM,NROW,NSLICE,0)
@


1.1
log
@Initial revision
@
text
@d33 3
d37 1
@
