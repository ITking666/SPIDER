head	1.19;
access;
symbols
	pre_mrcs:1.19
	healthdept_2018:1.19
	pre_getangas:1.12
	GPL2010:1.11
	pre_GPL2010:1.10
	pre_var_equation:1.10
	pre_fftwrings:1.10
	pre_opfiles:1.10
	src:1.10
	best-code:1.10
	x-named-regs:1.10
	x:1.10
	v13-00:1.10
	pre_GPL:1.8
	prec_CA:1.8
	noindx:1.8
	Bproc:1.8
	oct21:1.4
	last77:1.4;
locks; strict;
comment	@c @;


1.19
date	2018.10.03.14.34.12;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2011.12.20.13.13.46;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2011.12.16.13.42.00;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2011.11.09.16.53.05;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2011.11.08.16.22.16;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2011.11.07.20.07.19;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2011.06.20.18.00.06;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2011.01.03.14.03.37;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.24.13.26.31;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.20.30.12;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.18.21.24;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2000.01.12.18.38.43;	author bimal;	state Exp;
branches;
next	1.7;

1.7
date	2000.01.06.16.56.08;	author bimal;	state Exp;
branches;
next	1.6;

1.6
date	99.12.07.19.14.10;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.11.10.23.10.04;	author yuchen;	state Exp;
branches;
next	1.4;

1.4
date	97.10.10.18.59.07;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.02.07.21.00.06;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.01.16.16.14.50;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.29;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.19
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C  PREPCUB_S.F          COMMON PAR REMOVED       DEC 2010 ARDEAN LEITH *                                                                  *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  PREPCUB_S(N,NN,IPCUBE,RI,MD,LDP)                                    *
C                                                                      *
C  PURPOSE: MAKES A LIST OF VOXEL LOCATIONS ON EACH LINE IN THE        *
C           VOLUME WHICH ARE WITHIN A SPECIFED RADIUS SPHERE IN        *
C           VOLUME.  IF (MD= FALSE) JUST RETURNS NUMBER OF LINES IN    *
C           VOLUME WHICH NEED A VOXEL LIST. VOLUME IS A CUBE!          *
C                                                                      *
C  PARAMETERS:   N         VOLUME DIMENSION                       SENT *
C                NN        NO. OF ROWS IN VOXEL LIST       SENT OR RET *
C                IPCUBE    VOXEL LIST                              RET *
C                RI        RADIUS                                 SENT *
C                MD        IF FALSE = ONLY WANT NN RETURN         SENT *
C                LDP       CENTER OF VOLUME                       SENT *
C                                                                      *
C  VARIABLES:                                                          *
C     IPCUBE:    1 - BEGINNING VOXEL ON LINE                           *
C                2 - ENDING VOXEL ON LINE                              *
C                3 - IX FOR VOXEL                                      *
C                4 - IY FOR VOXEL                                      *
C                5 - IZ FOR VOXEL                                      *
C                                                                      *
C NOT SAME AS PREPCUB!!!! al                                           *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE PREPCUB_S(N,NN,IPCUBE,RI,MD,LDP)

        IMPLICIT NONE

        INTEGER  :: N,NN
        INTEGER  :: IPCUBE(5,NN)
        REAL     :: RI
        LOGICAL  :: MD
        INTEGER  :: LDP

        LOGICAL  :: FIRST
        REAL     :: R,T,XX,YY,RC
        INTEGER  :: NMAT,I1,I2,I3

        R    = RI * RI
        NMAT = 0
        NN   = 0

        DO I1=1,N
           T  = I1 - LDP
           XX = T * T

           DO I2=1,N
              T     = I2 - LDP
              YY    = T * T + XX
              FIRST = .TRUE.

              DO I3=1,N
                 NMAT = NMAT + 1
                 T    = I3 - LDP
                 RC   = T * T + YY

                 IF (FIRST)  THEN
C                   FIRST PIXEL ON THIS LINE,
                    IF (RC > R)  CYCLE

                    FIRST = .FALSE.
                    NN    = NN + 1

                    IF (MD) THEN
                       IPCUBE(1,NN) = NMAT
                       IPCUBE(2,NN) = NMAT
                       IPCUBE(3,NN) = I3
                       IPCUBE(4,NN) = I2
                       IPCUBE(5,NN) = I1 
                   ENDIF

                 ELSEIF (MD .AND. RC <= R) THEN 
                    IPCUBE(2,NN) = NMAT
                 ENDIF
              ENDDO
           ENDDO
        ENDDO

        END



@


1.18
log
@comment
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.17
log
@comments
@
text
@d30 2
a31 2
C  PURPOSE: MAKES A RUN LENGTH LIST OF VOXELS ON EACH LINE IN THE      *
C           VOLUME  WHICH ARE WITHIN A SPECIFED RADIUS SPHERE IN       *
d33 1
a33 2
C           VOLUME WHICH NEED A VOXEL LIST. VOLUME IS A CUBE           *
C                                                                      *
@


1.16
log
@IF (RC > R)  CYCLE, ELSEIF (MD .AND. RC <= R) THEN
@
text
@d28 1
a28 1
C  PREPCUB_S(N,NN,IPCUBE,RI,MD,LDP)                                 *
d43 1
a43 1
C  VARIABLES:                                                              *
d45 1
a45 1
C                2 - LENGTH OF RUN                                     *
d50 1
a50 1
C NOT SAME AS PREPCUB!!!! al
@


1.15
log
@passed ldp as parameter
@
text
@d28 1
a28 1
C  PREPCUB_S   (N,NN,IPCUBE,RI,MD,LDP)                                 *
d43 1
a43 2
C  NOTES:                                                              *
C                                                                      *
d50 1
a50 1
C NOT SAME AS PREPCUB! al
d57 3
d61 7
a67 1
        LOGICAL  :: FIRST,MD
d69 1
a69 2
        R    = RI*RI
C
d72 1
a72 1
C
d75 2
a76 1
           XX = T*T
d79 1
a79 1
              YY    = T*T + XX
d81 1
d85 2
a86 1
                 RC   = T*T + YY
d88 4
a91 2
                    IF (RC - R)  80,80,14
80                  FIRST = .FALSE.
d93 1
d102 2
a103 6
                 ELSE

                    IF (MD) THEN
                       IF (RC .LE. R) IPCUBE(2,NN)=NMAT
                    ENDIF

a104 1
14               CONTINUE
a105 1
16         CONTINUE
d110 3
@


1.14
log
@comments
@
text
@d4 1
a4 2
C  PREPCUB_S.F                                                                   *
C                       COMMON PAR REMOVED       DEC 2010 ARDEAN LEITH *                                                                  *
d28 1
a28 2
C  PREPCUB_S_N (N,NN,IPCUBE,RI,MD,LDP)                                 *
C  PREPCUB_S   (N,NN,IPCUBE,RI,MD)                                        *
d32 2
a33 2
C           VOLUME.  IF (MD= FALSE) JUST RETURNS NUMBER OF LINES IN 
C           VOLUME WHICH NEED A VOXEL LIST. VOLUME IS A CUBE                                  *
d51 1
a51 1
C MAY BE SAME AS PREPCUB_Q_N??? al
d56 1
a56 1
        SUBROUTINE PREPCUB_S_N(N,NN,IPCUBE,RI,MD,LDP)
d61 2
a62 1
        R    = RI * RI
d65 1
a65 1

d68 1
a68 2
           XX = T * T

d71 1
a71 1
              YY    = T * T + XX
a72 1

d76 1
a76 2
                 RC   = T * T + YY

d78 2
a79 4
C                   FIRST PIXEL ON THIS LINE,
                    IF (RC > R)  CYCLE

                    FIRST = .FALSE.
a80 1

a88 45
                 ELSEIF (MD .AND. RC <= R) THEN 
                    IPCUBE(2,NN) = NMAT
                 ENDIF
              ENDDO
           ENDDO
        ENDDO

        END

C *********************************** PREPCUB_S ***********************

        SUBROUTINE  PREPCUB_S(N,NN,IPCUBE,RI,MD)

        INTEGER  IPCUBE(5,NN)
        LOGICAL  FIRST,MD
        COMMON /PAR/  LDP,NM,LDPNM

        R=RI*RI
C
        NMAT=0
        NN=0
C
        DO    I1=1,N
           T=I1-LDP
           XX=T*T
           DO    I2=1,N
              T=I2-LDP
              YY=T*T+XX
              FIRST=.TRUE.
              DO    I3=1,N
                 NMAT=NMAT+1
                 T=I3-LDP
                 RC=T*T+YY
                 IF(FIRST)  THEN
                    IF(RC-R)  80  ,80,14
80                  FIRST=.FALSE.
                    NN=NN+1
                    IF (MD) THEN
                       IPCUBE(1,NN)=NMAT
                       IPCUBE(2,NN)=NMAT
                       IPCUBE(3,NN)=I3
                       IPCUBE(4,NN)=I2
                       IPCUBE(5,NN)=I1 
                   ENDIF

d92 1
a92 1
                       IF(RC.LE.R)  IPCUBE(2,NN)=NMAT
d96 1
a96 1
14                  CONTINUE
d98 1
a98 1
16      CONTINUE
d101 1
@


1.13
log
@comments, purpose
@
text
@d30 1
a30 2
C  PREPCUB_S(N,NN,IPCUBE,RI,MD)                                        *
C                                                                      *
d34 2
a35 1
C           VOLUME.  VOLUME IS A CUBE                                  *
d38 6
a43 6
C  PARAMETERS:   N             VOLUME DIMENSION                  SENT  *
C                NN            NO. OF ROWS                SENT OR RET  *
C                IPCUBE        VOXEL LIST                         RET  *
C                RI            RADIUS                            SENT  *
C                MD            IF FALSE = ONLY WANT NN           SENT  *
C                LDP           CENTER OF VOLUME                  SENT  *
d47 5
a51 5
C     IPCUBE:    1 - BEGINNING VOXEL                                   *
C                2 - LENGTH    OF RUN                                  *
C                3 - IX                                                *
C                4 - IY                                                *
C                5 - IZ                                                *
@


1.12
log
@PREPCUB_S_N without common
@
text
@d30 1
a31 1
C  PURPOSE:                                                            *
d33 12
a44 7
C  PARAMETERS:   BCKE          VOLUME                             RET.
C                NN            NO. OF ROWS                        RET.
C                IPCUBE                                           RET.
C                RI            RADIUS                             SENT
C                MD            IF FALSE = ONLY WANT NN           SENT
C                LDP                                              SENT
C
d46 7
a52 7
C           
C     IPCUBE:    1 - BEGINNING ? why same?
C                2 - LENGTH    ? why same?
C                3 - IX
C                4 - IY
C                5 - IZ
C
d54 1
a54 1
C
a139 1

@


1.11
log
@GPL_2010
@
text
@d5 1
d29 1
a29 1
C                                                                      *
d33 14
a46 1
C  PARAMETERS:                                                         *
d48 1
a48 1
C IMAGE_PROCESSING_ROUTINE                                             *
a49 1
C        0         2         3         4         5         6         7 *
d53 49
a107 7
C
C IPCUBE: 1 - beginning
C         2 - length
C         3 - ix
C         4 - iy
C         5 - iz
C
@


1.10
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.9
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.8
log
@*** empty log message ***
@
text
@d8 24
@


1.7
log
@added mode
@
text
@d4 1
a5 1
C                                                                      *
d65 1
a65 1
	               IPCUBE(5,NN)=I1 
@


1.6
log
@header
@
text
@d20 3
a22 1
C                                                                      *
d27 1
a27 1
	SUBROUTINE  PREPCUB_S(N,NN,IPCUBE,RI)
d29 3
a31 3
	INTEGER  IPCUBE(5,*)
	LOGICAL  FIRST
	COMMON /PAR/  LDP,NM,LDPNM
d40 1
a40 1
	R=RI*RI
d42 2
a43 2
	NMAT=0
	NN=0
d45 37
a81 29
	DO    I1=1,N
	T=I1-LDP
	XX=T*T
	DO    I2=1,N
	T=I2-LDP
	YY=T*T+XX
	FIRST=.TRUE.
	DO    I3=1,N
	NMAT=NMAT+1
	T=I3-LDP
        RC=T*T+YY
	IF(FIRST)  THEN
	IF(RC-R)  80  ,80,14
80	FIRST=.FALSE.
	NN=NN+1
	IPCUBE(1,NN)=NMAT
	IPCUBE(2,NN)=NMAT
	IPCUBE(3,NN)=I3
	IPCUBE(4,NN)=I2
	IPCUBE(5,NN)=I1	
	ELSE
	IF(RC.LE.R)  IPCUBE(2,NN)=NMAT
	ENDIF
14	CONTINUE
	ENDDO
16	CONTINUE
	ENDDO
	ENDDO
	END
@


1.5
log
@a
@
text
@d1 24
d26 1
@


1.4
log
@*** empty log message ***
@
text
@d5 1
a5 1
CNO_SAVE
@


1.3
log
@changed to uppercase
@
text
@d18 1
a18 1
	DO  25  I1=1,N
d21 1
a21 1
	DO  20  I2=1,N
d25 1
a25 1
	DO  15  I3=1,N
d42 1
a42 1
15	CONTINUE
d44 2
a45 2
20	CONTINUE
25	CONTINUE
@


1.2
log
@nosave
@
text
@d1 1
a1 1
	SUBROUTINE  PREPCUB_s(N,NN,IPCUBE,RI)
d39 1
a39 1
	IF(RC.le.R)  IPCUBE(2,NN)=NMAT
@


1.1
log
@Initial revision
@
text
@d5 1
@
