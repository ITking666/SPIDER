head	1.16;
access;
symbols
	pre_mrcs:1.16
	healthdept_2018:1.16
	pre_getangas:1.14
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.13
	pre_fftwrings:1.13
	pre_opfiles:1.13
	src:1.13
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.11
	prec_CA:1.11
	noindx:1.11
	Bproc:1.10
	oct21:1.3
	last77:1.3;
locks; strict;
comment	@c @;


1.16
date	2018.10.03.14.34.10;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2014.02.19.13.49.46;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.24.13.26.14;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.20.23.01;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.18.15.18;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.10.17.13.25.35;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.12.14.14.50.10;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.12.07.16.13.48;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.11.24.21.59.24;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	99.11.24.21.47.44;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	99.11.24.21.43.50;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	99.11.24.14.37.00;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.09.39;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	97.10.10.17.47.54;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.10.20.14.21.32;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.20;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.16
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                     
C  MRERROR
C          PROMPTS & DOC FILE HEADERS IMPROVED   FEB 2014 ARDEAN LEITH                                                                *
C                                                                    
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      
C MRERROR(P3DREF,P3D1,ERRORP,NTPT,PHI,THETA,PSI,SHIFT,SCAL,ERG,NOUT)   
C                                                                      
C PURPOSE: MARKER BASED ALIGNMENT - DOUBLE TILTED IMAGES   
C 
C INPUT:
C     P3DREF(3,NTPT)= POINTS IN REFERENCE IMAGE
C     P3D1(3,NTPT)  = POINTS IN VIEWS TO BE ALIGNED, on output
C                     aligned points and the errors
C     ERRORP(NTPT)  = error per point (output)
C     PHI           = ANGLE TO ROTATE VIEW ABOUT Z (IN PLANE)
C     THETA         = TILT ANGLE OF VIEW (ABOUT Y AXIS)
C     PSI           = ANGLE TO TURN ABOUT NEW Z AXIS
C     SCAL          = MULTIPLICATIVE SCALING FACTOR
C  PARAMETERS:                                                         
C                                                                      
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

      SUBROUTINE MRERROR (P3DREF,P3D1,ERRORP,NTPT,
     &                    PHI,THETA,PSI,SHIFT,SCAL,ERG,NOUT)

      REAL       :: P3DREF(3,NTPT),P3D1(3,NTPT),ERRORP(NTPT)
      REAL       :: SHIFT(3),CNEW(3)

      CZ  = COS(PHI)
      SZ  = SIN(PHI)
      CY  = COS(THETA)
      SY  = SIN(THETA)
      CNZ = COS(PSI)
      SNZ = SIN(PSI)

      WRITE(NOUT,*)  ' '
      WRITE(NOUT,*)  ' REFERENCE POINT COORDINATES:'
      WRITE(NOUT,401)  (M,(P3DREF(I,M),I=1,3),M=1,NTPT)
401   FORMAT(1X,I5,2X,3F12.3)

      WRITE(NOUT,*)  ' '
      WRITE(NOUT,*)  ' ALIGNED POINT COORDINATES AND THE ERRORS:'

      ERG = 0.0
      DO M=1,NTPT
         CNEW(1) = SCAL*((CNZ*CZ*CY - SZ*SNZ)*P3D1(1,M)
     &    + (SZ*CY*CNZ + SNZ*CZ)*P3D1(2,M) - CNZ*SY*P3D1(3,M))

         CNEW(2) = SCAL*(-(SZ*CNZ + CZ*SNZ*CY)*P3D1(1,M)
     &    + (CZ*CNZ - SNZ*CY*SZ)*P3D1(2,M) +SNZ*SY*P3D1(3,M))

         CNEW(3) =
     &     SCAL*(SY*CZ*P3D1(1,M) + SY*SZ*P3D1(2,M) + CY*P3D1(3,M))

         ERT = 0.0

         DO J=1,3
            ERT = ERT+(CNEW(J)-P3DREF(J,M))**2

C           OVERWRITE INPUT POINTS WITH ALIGNED POINTS
            P3D1(J,M) = CNEW(J)
         ENDDO

         ERRORP(M) = SQRT(ERT)

         WRITE(NOUT,402) M, CNEW, ERRORP(M)
402      FORMAT(1X,I5,2X,4F12.3)

         ERG = ERG + ERT
      ENDDO

      ERG = SQRT(ERG/NTPT)

      WRITE(NOUT,*)  ' '
      WRITE(NOUT,*)  ' TOTAL ERROR:',ERG
      WRITE(NOUT,*)  ' '

      END
@


1.15
log
@PROMPTS & DOC FILE HEADERS & lundoc
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.14
log
@GPL_2010
@
text
@d3 4
a6 3
C                                                                      *
C                                                                      *
C                                                                      *
d11 1
a11 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d28 5
a32 5
C                                                                      *
C                                                                      *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
d35 9
a43 10
C     P3D1(3,NTPT)= POINTS IN VIEWS TO BE ALIGNED, on output
C                   aligned points and the errors
C     ERRORP(NTPT) - error per point (output)
C     PHI= ANGLE TO ROTATE VIEW ABOUT Z (IN PLANE)
C     THETA= TILT ANGLE OF VIEW (ABOUT Y AXIS)
C     PSI= ANGLE TO TURN ABOUT NEW Z AXIS
C     SCAL= MULTIPLICATIVE SCALING FACTOR
C  PARAMETERS:                                                         *
C                                                                      *
C        0         2         3         4         5         6         7 *
d47 2
a48 2
      SUBROUTINE MRERROR
     &	(P3DREF,P3D1,ERRORP,NTPT,PHI,THETA,PSI,SHIFT,SCAL,ERG,NOUT)
d50 2
a51 2
      DIMENSION  P3DREF(3,NTPT),P3D1(3,NTPT),ERRORP(NTPT)
      DIMENSION  SHIFT(3),CNEW(3)
d53 6
a58 6
      CZ=COS(PHI)
      SZ=SIN(PHI)
      CY=COS(THETA)
      SY=SIN(THETA)
      CNZ=COS(PSI)
      SNZ=SIN(PSI)
d60 2
a61 1
      WRITE(NOUT,*)  '  Reference point coordinates'
d64 4
a67 1
      WRITE(NOUT,*)  '  Aligned point coordinates and the errors'
d70 1
a70 2
         CNEW(1) =
     &    SCAL*((CNZ*CZ*CY - SZ*SNZ)*P3D1(1,M)
d73 1
a73 2
         CNEW(2) =
     &    SCAL*(-(SZ*CNZ + CZ*SNZ*CY)*P3D1(1,M)
d80 1
d82 2
a83 1
            ERT=ERT+(CNEW(J)-P3DREF(J,M))**2
d85 1
a85 1
            P3D1(J,M)=CNEW(J)
d87 4
a90 2
         ERRORP(M)=SQRT(ERT)
         WRITE(NOUT,402)  M,CNEW,ERRORP(M)
d92 2
a93 1
         ERG=ERG+ERT
d95 5
a99 2
      ERG=SQRT(ERG/NTPT)
      WRITE(NOUT,*)  '  Total error=',ERG
@


1.13
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.12
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.11
log
@cosmetic
@
text
@d8 24
@


1.10
log
@*** empty log message ***
@
text
@a18 12
C  PARAMETERS:                                                         *
C                                                                      *
C        0         2         3         4         5         6         7 *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

      SUBROUTINE MRERROR
     &	(P3DREF,P3D1,ERRORP,NTPT,PHI,THETA,PSI,SHIFT,SCAL,ERG,NOUT)
C
C
C ***********************************************************
C
d28 5
d34 2
d39 1
a39 1
C
d46 33
a78 31
C
	WRITE(NOUT,*)  '  Reference points coordinates'
	WRITE(NOUT,401)  (M,(P3DREF(i,M),i=1,3),m=1,NTPT)
401	format(1x,i5,2x,3f12.3)
	WRITE(NOUT,*)  '  Aligned points coordinates and the errors'
	ERG=0.0
	DO    m=1,NTPT
       CNEW(1) =
     &    SCAL*((CNZ*CZ*CY - SZ*SNZ)*P3D1(1,m)
     &    + (SZ*CY*CNZ + SNZ*CZ)*P3D1(2,m) - CNZ*SY*P3D1(3,m))

       CNEW(2) =
     &    SCAL*(-(SZ*CNZ + CZ*SNZ*CY)*P3D1(1,m)
     &    + (CZ*CNZ - SNZ*CY*SZ)*P3D1(2,m) +SNZ*SY*P3D1(3,m))

       CNEW(3) =
     &     SCAL*(SY*CZ*P3D1(1,m) + SY*SZ*P3D1(2,m) + CY*P3D1(3,m))
c
	ert=0.0
	do    j=1,3
	 ert=ert+(CNEW(j)-P3DREF(j,m))**2
C  Overwrite input points with aligned points
	 P3D1(J,M)=CNEW(J)
	enddo
	ERRORP(M)=SQRT(ert)
	WRITE(NOUT,402)  m,CNEW,ERRORP(M)
402	format(1x,i5,2x,4f12.3)
	ERG=ERG+ert
	ENDDO
	ERG=sqrt(ERG/NTPT)
	WRITE(NOUT,*)  '  Total error=',ERG
@


1.9
log
@header
@
text
@d72 1
a72 1
C  OverWRITE input points with aligned points
@


1.8
log
@*** empty log message ***
@
text
@d1 24
@


1.7
log
@*** empty log message ***
@
text
@d51 2
a52 2
	ERRORP(M)=ert
	WRITE(NOUT,402)  m,CNEW,sqrt(ert)
@


1.6
log
@return errors per point
@
text
@d18 2
a19 1
      DIMENSION   SHIFT(3),P3DREF(3,NTPT),P3D1(3,NTPT),CNEW(3)
@


1.5
log
@format changed
@
text
@d2 1
a2 1
     &	(p3dref,p3d1,ntpt,PHI,THETA,PSI,SHIFT,SCAL,nout)
d8 4
a11 2
C     p3dref(3,NTPT)= POINTS IN REFERENCE IMAGE
C     P3D1(3,NTPT)= POINTS IN VIEWS TO BE ALIGNED
d18 1
a18 1
      DIMENSION   SHIFT(3),p3dref(3,NTPT),P3D1(3,NTPT),CNEW(3)
d27 2
a28 2
	write(nout,*)  '  Reference points coordinates'
	write(nout,401)  (m,(p3dref(i,m),i=1,3),m=1,ntpt)
d30 3
a32 3
	write(nout,*)  '  Aligned points coordinates and the errors'
	erg=0.0
	do    m=1,ntpt
d46 3
a48 1
	ert=ert+(cnew(j)-p3dref(j,m))**2
d50 2
a51 2
	ert=sqrt(ert)
	write(nout,402)  m,CNEW,ert
d53 4
a56 3
	erg=erg+ert
	enddo
	write(nout,*)  '  Total error=',erg/ntpt
@


1.4
log
@a
@
text
@d17 1
a17 4
	REAL  SCAL
	data   cnv/57.29578/


d24 1
a24 1

d27 1
a27 1
401	format(2x,i2,3f12.3)
d48 1
a48 1
402	format(2x,i2,4f12.3)
@


1.3
log
@*** empty log message ***
@
text
@d19 1
a19 1
CNO_SAVE
@


1.2
log
@nosave
@
text
@d33 1
a33 1
	do  1  m=1,ntpt
d46 3
a48 2
	do  2  j=1,3
2	ert=ert+(cnew(j)-p3dref(j,m))**2
d53 1
a53 1
1	continue
@


1.1
log
@Initial revision
@
text
@d19 1
@
