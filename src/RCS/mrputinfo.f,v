head	1.19;
access;
symbols
	pre_mrcs:1.19
	healthdept_2018:1.19
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.14
	pre_opfiles:1.14
	src:1.14
	best-code:1.14
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.12
	prec_CA:1.11
	noindx:1.11
	Bproc:1.10
	oct21:1.7
	last77:1.7;
locks; strict;
comment	@c @;


1.19
date	2018.10.03.14.34.10;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2014.02.19.15.18.25;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2014.01.12.19.22.41;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.26.16;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2008.12.02.19.44.23;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.20.49.12;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.18.39.36;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2004.03.11.14.16.26;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2001.07.31.12.40.40;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.12.30.21.42.54;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.12.14.15.35.30;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	99.12.07.16.30.57;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.03.19.19.50.02;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	98.02.24.16.02.46;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.10.10.17.48.04;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	95.10.10.15.47.38;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	94.07.22.20.30.22;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.07.45;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.29;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.19
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      
C  MRPUTINFO                                                           
C          PROMPTS IMPROVED                       FEB 2014 ARDEAN LEITH
C                                                                      
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  MRPUTINFO(XYPTS,PRJ,ANGLE,P3D,NUMBER,SHIFT,SCALE,ERVW,ERPT,FULL)    *
C                                                                      *
C  PURPOSE:  RECORDS CALCULATED VALUES TO A FILE                       *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

      SUBROUTINE MRPUTINFO(XYPTS,PRJ,ANGLE,P3D,NUMBER,SHIFT,SCALE,ERVW,
     &            ERPT,FULL,PTACTIVE,NTVW,NTPT,CIR)

      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'

      PARAMETER (LV=300)
      PARAMETER (LS=256)
      PARAMETER (NLIST=6)

      LOGICAL*1         FULL
      LOGICAL           PTACTIVE(LS,LV) 
      REAL              CIR(2)

      DIMENSION         XYPTS(2,LS,LV),PRJ(2,LS,LV),SHIFT(2,LV)
      DIMENSION         ANGLE(3,LV),P3D(3,LS)
      DIMENSION         SCALE(LV),ERVW(LV),ERPT(LS)
      INTEGER           NUMBER(LV)
      DIMENSION         DLIST(NLIST)

      CHARACTER(LEN=MAXNAM) :: XYIN1,XYIN2

      DATA  NDOC/55/
      DATA PI/3.141592654/
      DATA DTOR/0.017453292/

      IF (FULL)  THEN
c        WILL PUT ALL OBSERVATIONS INTO .DAT FILE.
         WRITE(NOUT,*)' VIEW POINTS:'

         DO  I=1,NTVW
           DTHETA = ANGLE(2,I)*180.0/PI
           DPSI   = ANGLE(1,I)*180.0/PI

           WRITE(NOUT,720)NUMBER(I),DTHETA,DPSI,SHIFT(1,I),SHIFT(2,I),
     &                    SCALE(I),ERVW(I)
 720       FORMAT('  VIEW:',I3,'  TILT=',F6.1,'  PSI=',F5.1,
     &            '  SHFT(',F5.1,1X,F5.1,')  SCL:',F5.3,'  ER:',E10.4)

           WRITE(NOUT,721)
721        FORMAT
     & ('  PT#        XYPTS                     PROJ            ERROR')

           WRITE(NOUT,*) ' ',('-',J=1,60)

           DO  J=1,NTPT
             WRITE(NOUT,740)J,XYPTS(1,J,I)+CIR(1),XYPTS(2,J,I)+CIR(2),
     &                      PRJ(1,J,I)+CIR(1),PRJ(2,J,I)+CIR(2)
     &  ,SQRT((XYPTS(1,J,I)-PRJ(1,J,I))**2+(XYPTS(2,J,I)-PRJ(2,J,I))**2)
 740         FORMAT(2X,I2,5(2X,1PE10.3))
	   ENDDO
           WRITE(NOUT,*)
         ENDDO
      ENDIF

      WRITE(NOUT,*)'  ANALYSIS PER POINT:'
      WRITE(NOUT,*)'  PT#      X      Y      Z     ERR OF POINT'

      DO  I=1,NTPT
         WRITE(NOUT,710)I,P3D(1,I),P3D(2,I),P3D(3,I),ERPT(I)
 710     FORMAT(2X,I2,5X,F6.1,1X,F6.1,1X,F6.1,1X,F10.6)
      ENDDO
      WRITE(NOUT,*)

      IF (FULL) THEN
C        FILES WITH PREDICTED MARKER POSITIONS ...
         NA   = 80
         NMAX = 0
         CALL  FILSEQP(XYIN1,NA,NUMBER,NMAX,NVW,
     &	    'PREFIX OF X,Y PREDICTED COORD OUTPUT FILES',IRTFLG)

         DO  IVIEWT=1,NTVW
C          GO THROUGH AND PUT ALL X,Y COORDS INTO DOC FILES
           NLETP = NA
           CALL FILGET(XYIN1,XYIN2,NLETP,NUMBER(IVIEWT),IRT2)
           IF (IRT2 .NE. 0) CYCLE

	   IAP  = 0
	   NRUN = 0
	   DO J=1,NTPT
	      IF (PTACTIVE(J,IVIEWT))  THEN
	         DLIST(1) = J
	         DLIST(2) = XYPTS(1,J,IVIEWT)+ CIR(1)
	         DLIST(3) = XYPTS(2,J,IVIEWT)+ CIR(2)
	         DLIST(4) = PRJ(1,J,IVIEWT)  + CIR(1)
	         DLIST(5) = PRJ(2,J,IVIEWT)  + CIR(2)
	         DLIST(6) =
     &             SQRT((XYPTS(1,J,IVIEWT) - PRJ(1,J,IVIEWT))**2 +
     &             (XYPTS(2,J,IVIEWT)-PRJ(2,J,IVIEWT))**2)

	         CALL  SAVDN1(NDOC,XYIN2,DLIST,NLIST,NRUN,IAP)
	         NRUN = 1
	      ENDIF
	   ENDDO

C          STORE ANGLES
           DO J=1,3
              DLIST(J+1) = ANGLE(J,IVIEWT) / DTOR
           ENDDO

           DLIST(1) = -1.0
           NLST     = 4
           CALL SAVDN1(NDOC,XYIN2,DLIST,NLST,NRUN,IAP)
           CLOSE(NDOC)
        ENDDO

      ENDIF

      END
@


1.18
log
@prompts improved & cosmetic
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.17
log
@enter
@
text
@d3 4
a6 3
C                                                                      *
C  MRPUTINFO                                                           *
C                                                                      *
d11 1
a11 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d29 1
a29 1
C  MRPUTINFO(XYPTS,PRJ,ANGLE,P3D,NUMBER,SHIFT,SCALE,ERVW,ERPT,FULL)                                                                   *
d31 1
a31 1
C  PURPOSE:  RECORDS CALCULATED VALUES TO A FILE                                                          *
d66 1
a66 1
         WRITE(NOUT,*)'                 VIEW POINTS'
d74 1
a74 1
 720       FORMAT(' VIEW:',I3,'  TILT=',F6.1,'  PSI=',F5.1,
d79 1
a79 1
     &  (' PT#        XYPTS                     PROJ            ERROR')
d81 1
a81 1
           WRITE(NOUT,*)('-',J=1,60)
d87 1
a87 1
 740         FORMAT(1X,I2,5(2X,1PE10.3))
d93 2
a94 2
      WRITE(NOUT,*)'     Analysis per point'
      WRITE(NOUT,*)' PT#       X      Y      Z     ERR OF POINT'
d98 1
a98 1
 710     FORMAT(1X,I2,6X,F6.1,1X,F6.1,1X,F6.1,1X,F10.6)
d120 4
a123 4
	         DLIST(2) = XYPTS(1,J,IVIEWT)+CIR(1)
	         DLIST(3) = XYPTS(2,J,IVIEWT)+CIR(2)
	         DLIST(4) = PRJ(1,J,IVIEWT)+CIR(1)
	         DLIST(5) = PRJ(2,J,IVIEWT)+CIR(2)
d125 2
a126 2
     &             SQRT((XYPTS(1,J,IVIEWT) - PRJ(1,J,IVIEWT))**2
     &             + (XYPTS(2,J,IVIEWT)-PRJ(2,J,IVIEWT))**2)
@


1.16
log
@GPL_2010
@
text
@d106 1
a106 1
     &	    'ENTER PREFIX OF X,Y PREDICTED COORD OUTPUT FILES',IRTFLG)
@


1.15
log
@mk xypts in 2 parameters mralign bug
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@GPL License fixed
@
text
@d4 1
a4 1
C                                                                      *
d34 1
a34 1
C  PURPOSE:  RECORDS THE CALCULATED VALUES TO A FILE                                                          *
d42 4
a45 1
     &            ERPT,FULL)
a49 2
      INCLUDE     'CMBLOCK.INC'
      INCLUDE     'CMLIMIT.INC'
d51 3
a53 2
      LOGICAL*1   PTACTIVE(LS,LV),PARAMQ(4),FULL
      COMMON /GENERAL/PTACTIVE,NUMPTS(LV),NTVW,NTPT,CIR(2),PARAMQ
a57 1
      CHARACTER(LEN=MAXNAM) :: XYIN1,XYIN2
d61 2
d70 1
d72 3
a74 2
           DTHETA=ANGLE(2,I)*180.0/PI
           DPSI=ANGLE(1,I)*180.0/PI
d79 1
d83 1
d85 1
d88 1
a88 1
     &       PRJ(1,J,I)+CIR(1),PRJ(2,J,I)+CIR(2)
d98 1
d105 1
a105 1
      IF (FULL)  THEN
d107 2
a108 2
         NA=80
         NMAX=0
d111 2
a112 1
         DO 503 IVIEWT=1,NTVW
d116 1
a116 2
C          IRT2=0 MEANS ALL OKAY
           IF (IRT2 .NE. 0) GOTO 503
d122 9
a130 8
	         DLIST(1)=J
	         DLIST(2)=XYPTS(1,J,IVIEWT)+CIR(1)
	         DLIST(3)=XYPTS(2,J,IVIEWT)+CIR(2)
	         DLIST(4)=PRJ(1,J,IVIEWT)+CIR(1)
	         DLIST(5)=PRJ(2,J,IVIEWT)+CIR(2)
	         DLIST(6)=
     &             SQRT((XYPTS(1,J,IVIEWT)-PRJ(1,J,IVIEWT))**2
     &             +(XYPTS(2,J,IVIEWT)-PRJ(2,J,IVIEWT))**2)
d132 1
a132 1
	         NRUN=1
d135 1
d138 1
a138 1
              DLIST(J+1)=ANGLE(J,IVIEWT)/DTOR
d144 6
a149 3
503        CLOSE(NDOC)
	ENDIF
	END
@


1.13
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.12
log
@ls-->256
@
text
@d8 24
@


1.11
log
@doc files updated for missing markers
@
text
@d28 1
a28 1
      PARAMETER (LS=100)
@


1.10
log
@*** empty log message ***
@
text
@d15 1
d17 1
a18 2
C  PURPOSE:                                                            *
C                                                                      *
a20 1
C        0         2         3         4         5         6         7 *
d27 5
a32 13
C ************************************************************
C RECORDS THE CALCUTED VALUES TO A FILE
C

        PARAMETER (LV=300)
        PARAMETER (LS=100)
        PARAMETER (MAXREG=7)
        PARAMETER (MAXKEY=100)
        PARAMETER (MAXLOOP=999)
        REAL MAXPER
        PARAMETER (MAXPER=1.0e-6)
        PARAMETER (NLIST=6)
      INCLUDE     'CMBLOCK.INC'
d35 1
a35 1
C
d39 1
a39 1
      CHARACTER * 81    XYIN1,XYIN2
d42 1
a42 1
C
d46 13
a58 14
C
      IF(FULL)  THEN
C
C           WILL PUT ALL OBSERVATIONS INTO .DAT FILE.
       WRITE(NOUT,*)'                 VIEW POINTS'
       DO  I=1,NTVW
        DTHETA=ANGLE(2,I)*180.0/PI
        DPSI=ANGLE(1,I)*180.0/PI
        WRITE(NOUT,720)NUMBER(I),DTHETA,DPSI,SHIFT(1,I),SHIFT(2,I),
     &      SCALE(I),ERVW(I)
 720    FORMAT(' VIEW:',I3,'  TILT=',F6.1,'  PSI=',F5.1,
     &      '  SHFT(',F5.1,1X,F5.1,')  SCL:',F5.3,'  ER:',E10.4)
        WRITE(NOUT,721)
721     FORMAT
d60 4
a63 4
        WRITE(NOUT,*)('-',J=1,60)
        DO  J=1,NTPT
          WRITE(NOUT,740)J,XYPTS(1,J,I)+CIR(1),XYPTS(2,J,I)+CIR(2),
     &      PRJ(1,J,I)+CIR(1),PRJ(2,J,I)+CIR(2)
d65 4
a68 4
 740      FORMAT(1X,I2,5(2X,1PE10.3))
	ENDDO
        WRITE(NOUT,*)
       ENDDO
d70 1
a70 1
C
d74 2
a75 2
        WRITE(NOUT,710)I,P3D(1,I),P3D(2,I),P3D(3,I),ERPT(I)
 710    FORMAT(1X,I2,6X,F6.1,1X,F6.1,1X,F6.1,1X,F10.6)
d78 39
a116 40
C
	IF(FULL)  THEN
C
C  Files with predicted marker positions ...
C
      NA=80
      NMAX=0
      CALL  FILSEQP(XYIN1,NA,NUMBER,NMAX,NVW,
     &	  'ENTER PREFIX OF X,Y PREDICTED COORD OUTPUT FILES',IRTFLG)
      DO 503 IVIEWT=1,NTVW
C           GO THROUGH AND PUT ALL X,Y COORDS INTO DOC FILES
        NLETP=NA
        CALL FILGET(XYIN1,XYIN2,NLETP,NUMBER(IVIEWT),IRT2)
C           IRT2=0 MEANS ALL OKAY
        IF(IRT2 .NE. 0) GOTO 503
c
	IAP=0
	NRUN=0
	DO    J=1,NTPT
	 IF(PTACTIVE(J,IVIEWT))  THEN
	  DLIST(1)=J
	  DLIST(2)=XYPTS(1,J,IVIEWT)+CIR(1)
	  DLIST(3)=XYPTS(2,J,IVIEWT)+CIR(2)
	  DLIST(4)=PRJ(1,J,IVIEWT)+CIR(1)
	  DLIST(5)=PRJ(2,J,IVIEWT)+CIR(2)
	  DLIST(6)=
     &	  SQRT((XYPTS(1,J,IVIEWT)-PRJ(1,J,IVIEWT))**2
     &        +(XYPTS(2,J,IVIEWT)-PRJ(2,J,IVIEWT))**2)
          CALL  SAVDN1(NDOC,XYIN2,DLIST,NLIST,NRUN,IAP)
	  NRUN=1
	 ENDIF
	ENDDO
c Store angles
	DO  J=1,3
	 DLIST(J+1)=ANGLE(J,IVIEWT)/DTOR
	ENDDO
	DLIST(1)=-1.0
	NLST=4
        CALL  SAVDN1(NDOC,XYIN2,DLIST,NLST,NRUN,IAP)
503	CLOSE(NDOC)
@


1.9
log
@*** empty log message ***
@
text
@a48 1
	CHARACTER*1  NULL
d50 1
a50 1
	DIMENSION DLIST(NLIST)
d52 1
a52 1
	DATA  NDOC/55/
d56 1
a56 1
	IF(FULL)  THEN
d59 2
a60 2
      WRITE(NOUT,*)'                 VIEW POINTS'
      DO  I=1,NTVW
a74 1
c     &  ,XYPTS(1,J,I)-PRJ(1,J,I)
d78 2
a79 2
      ENDDO
	ENDIF
d81 1
a81 1
      WRITE(NOUT,*)'     3D POINTS'
d94 2
a95 2
	NMAX=0
 	CALL  FILSEQP(XYIN1,NA,NUMBER,NMAX,NVW,
a98 2
C           NULL IS RESET EACH TIME BECAUSE CORRUPTION HAPPENS
        NULL=CHAR(0)
d127 1
a127 1
503    CLOSE(NDOC)
d129 1
a129 1
      END
@


1.8
log
@header
@
text
@d98 1
a98 1
     &	  'ENTER PREFIX OF X,Y PREDICTED COORD FILES',IRTFLG)
a104 1
        XYIN2(NLETP+1:NLETP+1)=CHAR(0)
d111 12
a122 12
	IF(PTACTIVE(J,IVIEWT))  THEN
	DLIST(1)=J
	DLIST(2)=XYPTS(1,J,IVIEWT)+CIR(1)
	DLIST(3)=XYPTS(2,J,IVIEWT)+CIR(2)
	DLIST(4)=PRJ(1,J,IVIEWT)+CIR(1)
	DLIST(5)=PRJ(2,J,IVIEWT)+CIR(2)
	DLIST(6)=
     &	SQRT((XYPTS(1,J,IVIEWT)-PRJ(1,J,IVIEWT))**2
     &      +(XYPTS(2,J,IVIEWT)-PRJ(2,J,IVIEWT))**2)
        CALL  SAVDN1(NDOC,XYIN2,DLIST,NLIST,NRUN,IAP)
	NRUN=1
	ENDIF
d126 1
a126 1
	DLIST(J+1)=ANGLE(J,IVIEWT)/DTOR
@


1.7
log
@*** empty log message ***
@
text
@d1 24
d27 2
@


1.6
log
@format corrected
@
text
@d30 1
a30 2
CNO_SAVE
c
@


1.5
log
@*** empty log message ***
@
text
@a14 1
#ifdef SP_UNIX
a15 3
#else
      INCLUDE     'COMMON1:CMBLOCK.INC'
#endif
d41 1
a41 1
 720    FORMAT(' VIEW:',I2,'  TILT=',F6.1,'  PSI=',F5.1,
d86 1
a86 1
	do    J=1,NTPT
d96 1
a96 1
        call  SAVDN1(NDOC,XYIN2,DLIST,NLIST,NRUN,IAP)
d99 8
a106 7
	enddo
c  this doesn't work in Spider yet ...
c	DO  505  J=1,3
c505	DLIST(J+1)=ANGLE(J,IVIEWT)/DTOR
c	DLIST(1)=-1.0
c	NLST=4
c        call  SAVDN1(NDOC,XYIN2,DLIST,NLST,NRUN,IAP)
@


1.4
log
@nosave
@
text
@d40 1
a40 1
      DO 110 I=1,NTVW
d51 1
a51 1
        DO 120 J=1,NTPT
d57 1
a57 1
 120    CONTINUE
d59 1
a59 1
 110  CONTINUE
d64 1
a64 1
      DO 100 I=1,NTPT
d67 1
a67 1
 100  CONTINUE
d90 1
a90 1
	do  504  J=1,NTPT
d103 1
a103 1
504	CONTINUE
@


1.3
log
@LV set to 300 (number of projections)
@
text
@d34 1
@


1.2
log
@cpp_lines_added
@
text
@d7 1
a7 1
        PARAMETER (LV=100)
@


1.1
log
@Initial revision
@
text
@d15 3
d19 1
@
