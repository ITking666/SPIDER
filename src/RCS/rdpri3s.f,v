head	1.10;
access;
symbols
	healthdept_2018:1.10
	pre_getangas:1.9
	GPL2010:1.9
	pre_GPL2010:1.8
	pre_var_equation:1.8
	pre_fftwrings:1.8
	pre_opfiles:1.8
	src:1.8
	best-code:1.8
	x-named-regs:1.8
	x:1.8
	v13-00:1.8
	pre_GPL:1.6
	prec_CA:1.6
	noindx:1.6
	Bproc:1.4
	oct21:1.4
	last77:1.4;
locks; strict;
comment	@c @;


1.10
date	2018.10.03.14.34.14;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2010.06.24.13.26.40;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.18.14.04.08;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.17.21.02.44;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.11.14.26.09;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.06.13.01.34;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.03.03.16.04.57;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	97.01.06.18.37.32;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	96.07.08.15.06.52;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	96.07.02.13.40.57;	author leith;	state Exp;
branches;
next	;


desc
@new
@


1.10
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C   RDPRIS3.F         FROM RDPRIS              JULY 96     ARDEAN LEITH
C                     USED RDPRINC             MAR 99      ARDEAN LEITH    
C      
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   RDPRI3S(I1,I2,I3,NOT_USED,STRING,IRTFLG)
C
C   PURPOSE:    READ THREE INTEGERS
C
C   PARAMETERS:
C        I1       FIRST INTEGER ENTERED                       (RETURNED)
C        I2       SECOND INTEGER ENTERED                      (RETURNED)
C        I3       THIRD INTEGER ENTERED                       (RETURNED)
C        NOT_USED                                                 (SENT)
C        STRING   SOLICITATION MESSAGE                            (SENT)
C        IRTFLG   RETURN FLAG (0 IS NORMAL,                   (RETURNED)
C                             -1 IS GOTO PREVIOUS QUESTION,
C                             -3 IS NULL ANSWER ACCEPTED)
C
C  NOTE:     DOES NOT ALTER RECEIVED VALUE OF I1... IF
C            IT RECEIVES NULL INPUT.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

      SUBROUTINE RDPRI3S(I1,I2,I3,NOT_USED,PROMPT,IRTFLG)

      INCLUDE        'CMBLOCK.INC' 

      CHARACTER *(*)  PROMPT

C     DO NOT ZERO THE RETURNED VALUES (DIFFERENT FROM NORMAL SPIDER METHOD)

      VAL1 = I1
      VAL2 = I2
      VAL3 = I3

      CALL RDPRINC(PROMPT,3,.TRUE.,NOT_USED, VAL1,VAL2,VAL3,IRTFLG)
      IF (IRTFLG .EQ. -1) RETURN

      I1     = VAL1
      I2     = VAL2
      I3     = VAL3

      RETURN
      END



@


1.9
log
@GPL_2010
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.8
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.7
log
@GPL License fixed
@
text
@a30 1
C *    APPROVAL OF HEALTH RESEARCH INC.                                *
@


1.6
log
@nloop removed
@
text
@d2 1
a2 1
C++************************************************************************ 
d8 23
a30 5
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        *
C *  COPYRIGHT (C)1985, 1996. HEALTH RESEARCH INCORPORATED, ALBANY, NY *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH         *
C *    RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS             *
C *    OR USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN        *
@


1.5
log
@NECHO --> NOUT
@
text
@d16 1
a16 1
C   RDPRI3S(I1,I2,I3,NLOOPD,ILOOPD,STRING,IRTFLG)
d24 1
a24 2
C        NLOOPD   NLOOP (USED IN BATCH)                           (SENT)
C        ILOOPD   ILOOP (USED IN BATCH)                           (SENT)
d36 1
a36 1
      SUBROUTINE RDPRI3S(I1,I2,I3,NLOOPD,ILOOPD,PROMPT,IRTFLG)
d48 1
a48 1
      CALL RDPRINC(PROMPT,3,.TRUE.,NLOOPD,ILOOPD, VAL1,VAL2,VAL3,IRTFLG)
@


1.4
log
@used rdprinc
@
text
@a55 4
      IF (NECHO .NE .0) WRITE(NECHO,90) I1,I2,I3
      IF (NPROC .NE. 0) WRITE(NPROC,90) I1,I2,I3
 90   FORMAT(5X,3(1X,I7))

@


1.3
log
@ used rdpr for ; handling
@
text
@d4 2
a5 1
C   RDPRIS3.F                FROM RDPRIS JULY 96 al
d18 1
a18 1
C   PURPOSE:    READ INTEGER(S)
d21 9
a29 8
C        I1       FIRST INTEGER ENTERED (RETURNED TO CALLING PROGRAM)
C        I2       SECOND INTEGER ENTERED (RETURNED TO CALLING PROGRAM)
C        I3       THIRD INTEGER ENTERED (RETURNED TO CALLING PROGRAM)
C        NLOOPD   NLOOP (USED IN BATCH)
C        ILOOPD   ILOOP (USED IN BATCH)
C        STRING   SOLICITATION MESSAGE
C        IRTFLG   RETURN FLAG (0 IS NORMAL,  -1 IS GOTO PREVIOUS QUESTION)
C                             (1 IS ABNORMAL, 3 IS NULL ANSWER ACCEPTED)
d31 2
a32 1
C  CALLS:         CHKSTRQ     ERRT   EXPRESSQ
a33 4
C  NOTE:          RDPRIS DOES NOT ALTER RECEIVED VALUE OF I1 OR I2 IF
C                 IT RECEIVES NULL INPUT.
C
C        0         2         3         4         5         6         7
a38 1
CNO_SAVE
a41 6
      CHARACTER *80   ANSW
      LOGICAL         EXPRESS3Q
      PARAMETER       (MAXB = 80)
      DIMENSION       IBUF(MAXB)

      SAVE            IBUF
d45 14
a58 55
      NOFF = 1

 1400 CALL RDPR(PROMPT,NCHAR,ANSW,.TRUE.,.TRUE.,IRTFLG)

      IF (ANSW(1:1) .EQ. '^' .OR. ANSW(2:2) .EQ. '^') THEN
C        RETURN FLAG FOR GOING BACK TO PREVIOUS QUESTION
         IRTFLG = -1
         RETURN

      ELSEIF (NCHAR .LE. 0 .OR. ANSW(:1) .EQ. '$') THEN
C        NULL ANSWER RECEIVED, LEAVE INPUTS UNALTERED
         IRTFLG = 3
         GOTO 2300
      ENDIF
      IRTFLG = 0

      IF (EXPRESS3Q(ANSW,NCHAR,VAL1,VAL2,VAL3)) THEN
C        INPUT CONTAINS A REGISTER EXPRESSION
         I1 = VAL1 + 0.5
         IF (VAL1 .LT. 0.) I1 = VAL1 - 0.5
         I2 = VAL2 + 0.5
         IF (VAL2 .LT. 0.) I2 = VAL2 - 0.5
         I3 = VAL3 + 0.5
         IF (VAL3 .LT. 0.) I3 = VAL3 - 0.5

      ELSE
C        NO REGISTERS IN INPUT 
         CALL CHKSTRQ(ANSW,NCHAR,'I',IBUF(NOFF),DUM,INUM,IER)
         IF (IER .NE. 0) THEN
            CALL ERRT(16,'    ',NE)
            GOTO 1400
         ENDIF

         IF ((INUM .EQ. 1 .AND. NOFF .EQ. 1).OR.ANSW(1:1) .EQ. '(') THEN
            I1 = IBUF(1)
            IF (INUM .NE. 1) I2 = IBUF(2)
            IF (INUM .NE. 2) I3 = IBUF(3)

         ELSE
            NOFF  = NOFF + INUM
            IF (NOFF-1 .LT. NLOOPD*2)  GOTO 1400

C           ERROR OUTPUT ADDED 11/30/94 al
            IF ((3*ILOOPD) .GT. MAXB) THEN
               CALL ERRT(101,'PGM ERROR: 3*ILOOPD > MAXB IN RDPRI3S',NE)
            ENDIF
            I1    = IBUF(2*ILOOPD - 1)
            I2    = IBUF(2*ILOOPD)
            I3    = IBUF(2*ILOOPD + 1)
         ENDIF
      ENDIF

 2300 IF (NECHO .NE .0) WRITE(NECHO,2400) I1,I2,I3
      IF (NPROC .NE. 0) WRITE(NPROC,2400) I1,I2,I3
 2400 FORMAT(5X,3(1X,I7))
@


1.2
log
@change expressq to express3q
@
text
@d4 1
a4 1
C   RDPRIS3.FOR               FROM RDPRIS JULY 96 al
d40 1
a42 2
      PARAMETER       (MAXB = 80)

d46 1
d49 2
a52 6
      IDOL = INDEX(PROMPT,'$') - 1
      IF (IDOL .LE. 0) IDOL = LEN(PROMPT)
 
      WRITE(NOUT,1200) PROMPT(1:IDOL)
 1200 FORMAT($,' .',A,': ')

d55 1
a55 1
 1400 CALL READCH(PROMPT(:IDOL),NIN,NCHAR,ANSW,.TRUE.,IRTFLG)
a92 1
            IBCNT = IBCNT + 1
a101 1
            IBCNT = IBCNT - 1
d105 1
a105 3
 2300 IBCNT = IBCNT + 1

      IF (NECHO .NE .0) WRITE(NECHO,2400) I1,I2,I3
@


1.1
log
@Initial revision
@
text
@d46 1
a46 1
      LOGICAL         EXPRESSQ
@
