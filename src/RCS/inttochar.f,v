head	1.8;
access;
symbols
	healthdept_2018:1.8
	pre_getangas:1.7
	GPL2010:1.7
	pre_GPL2010:1.6
	pre_var_equation:1.6
	pre_fftwrings:1.6
	pre_opfiles:1.6
	src:1.6
	best-code:1.6
	x-named-regs:1.6
	x:1.6
	v13-00:1.6
	pre_GPL:1.5
	prec_CA:1.5
	noindx:1.5
	Bproc:1.3
	oct21:1.3
	last77:1.2;
locks; strict;
comment	@c @;


1.8
date	2018.10.03.14.34.08;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.24.13.25.59;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.21.06.35;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.13.20.29.26;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2002.08.12.18.47.47;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.07.30.16.25.37;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	99.02.04.16.13.37;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	99.01.12.17.23.26;	author leith;	state Exp;
branches;
next	;


desc
@@


1.8
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C INTTOCHAR.F   -- NEW 7 Jan 99 ArDean Leith
CC                 AVOIDS SGI'S MEMORY LEAK aug 02 ArDean Leith

C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    INTTOCHAR(NUMBER,STRING,NLET,MINLEN)
C
C    PURPOSE:       CONVERT INTEGER TO A CHARACTER STRING
C
C    PARAMETERS:
C        NUMBER     INTEGER NUMBER                                (SENT)
C        STRING     OUTPUT STRING                                 (SENT) 
C        NLET       NUMBER OF CHARAcTERS IN OUTPUT STRING         (RET.)
C                   (<0 INDICATES ERROR)
C        MINLEN     MINIMUM LENGTH OF OUTPUT STRING               (SENT)
C
C     NOTES: MINLEN AND NLET MUST BE NO MORE THAN 10 DIGITS OR
C            NEGATIVE NLET WILL BE RETURNED 
C            THIS IMPLEMENTATION AVOIDS SGI'S MEMORY LEAK aug 02
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

        SUBROUTINE INTTOCHAR(NUMBER,STRING,NLET,MINLEN)

        CHARACTER (LEN=*) ::       STRING
        INTEGER, PARAMETER::       MAXSTR = 10
        CHARACTER (LEN=MAXSTR) ::  CTEMP,CZEROS

        DATA CZEROS/'0000000000'/

C       FIND NUMBER OF DIGITS TO BE WRITTEN INTO STRING
        NLET = NUMDIG(NUMBER,0)

C       FIND NUMBER OF LEADING ZEROS (IF ANY)
        NZ   = MAX(NLET,MINLEN) - NLET

        IGO  = (MAXSTR-NLET+1)
        NLET = NLET + NZ

C       CHECK FOR OVERFLOW OF STRING
        IF (NLET .GT. LEN(STRING) .OR. NLET .GT. MAXSTR) GOTO 999

C       I10 MUST BE SAME AS MAXSTR!!
        WRITE(CTEMP,'(I10)',ERR=999) NUMBER

        IF (NZ .GT. 0) THEN
C          MUST PREFIX ZERO'S
           STRING = CZEROS(1:NZ) // CTEMP(IGO:MAXSTR) 
        ELSE
           STRING = CTEMP(IGO:MAXSTR) 
        ENDIF

        RETURN

C       ERROR RETURN
999     NLET   = -1
        STRING = CHAR(0)
        RETURN

        END
@


1.7
log
@GPL_2010
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.6
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.5
log
@debug stuff removed (buggy)
@
text
@d8 23
a30 7
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND     *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.  *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS *
C *    OR USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN        *
C *    APPROVAL OF THE CENTER FOR LABORATORIES AND RESEARCH            *
@


1.4
log
@avoid sgi memory leak
@
text
@a42 3
        NUMBER = 12345
        MINLEN = 0

@


1.3
log
@bug if padding with zeroes.
@
text
@d5 2
a6 1
C
d24 2
a25 1
C        NLET       NUMBER OF CHARATERS IN OUTPUT STRING          (RET.)
d28 3
a30 1
C     CALLS:
d37 5
a41 2
        CHARACTER *(*)   STRING
        CHARACTER *8     FMT
d43 2
a44 1
        DATA FMT    /'(I  .  )'/
a47 2
        IF (NUMBER .LT. 0)    NLET = NLET + 1
        IF (NLET .LT. MINLEN) NLET = MINLEN
d49 2
a50 12
C       CREATE FORMAT STATEMENT
        WRITE(FMT(3:4),8000,ERR=999) NLET
8000    FORMAT(I2.2)

        FMT(5:7) = '   '

        IF (MINLEN .GT. 0) THEN
C          MUST WRITE SOME LEADING ZEROES
           NLET = MAX(NLET,MINLEN)
           FMT(5:5) = '.'
           WRITE(FMT(6:7),8000,ERR=999) NLET
        ENDIF           
d52 3
d56 11
a66 1
        IF (NLET .GT. LEN(STRING)) GOTO 999
a67 1
        WRITE(STRING,FMT,ERR=999) NUMBER
d70 3
a72 1
999     NLET = 0
@


1.2
log
@CNO_SAVE
@
text
@a32 2
CNO_SAVE 

d38 1
d40 2
a41 1
        IF (NUMBER .LT. 0) NLET = NLET + 1
d43 1
d48 1
d50 1
d56 1
d58 1
@


1.1
log
@Initial revision
@
text
@d33 2
@
