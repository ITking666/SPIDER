head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2013.05.01.16.19.22;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2013.05.01.15.37.07;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.01.16.52.37;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.23.15.28.42;	author leith;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@# 
# PURPOSE:  MAKEFILE FOR GNU/Linux SPIDER using FFTW3 using multiple processors. Compiled with gfortran
#
# USING:    Gnu Fortran compiler!!
# TARGET:   Same machine as compiled on  
# IMAGES:   Optimal SPIDER image byte order:    native to machine 
# USAGE:    To create executable: make -f Makefile_linux_mp.gfort
#
# NOTE:     Uses FFTW3 configured with: --enable-float --enable-openmp
# NOTE:     You may ignore any undefined QFFLAGS, QLFLAGS & SUFFIX
#
# NOTE:     SINCE .MOD FILES ARE NOT COMPATIBLE WITH THOSE PREPARED BY
#           OTHER COMPILERS BE SURE AND COMPILE IN A CLEAN DIRECTORY!!!
#
# Some Gfort Compile/link flags
# -fopenmp             : Invokes multi processor support 
# -Ofast               : Selects fast set of flags for this architecture usually including: 
# -fwrapv              : Wrapping of underflow/overflow  (needed for correct results in: bpcg.f)
# -fno-strict-aliasing :
# -Wall                : Report possible errors

SHELL    = /bin/sh

AFLAGS   = r

# Location of Fortran compiler
COMP     = /usr/bin/gfortran

PGM      = spider_linux_mp_gfort

LIB      = $(PGM).a

EXE      = ../../bin/$(PGM)

#FFLAGS  = -cpp -Ofast -fopenmp -funroll-loops -finline-limit=600 -DSP_MP -DSP_LIBFFTW3 -DSP_GFORTRAN -Wall -fno-strict-aliasing  -fwrapv -fbounds-check -c  
FFLAGS   = -cpp -Ofast -fopenmp -funroll-loops -finline-limit=600 -DSP_MP -DSP_LIBFFTW3 -DSP_GFORTRAN -Wall -fno-strict-aliasing  -fwrapv -c   

LF       = -fopenmp $(QLFLAGS)  

# Static link with static FFTW3 libraries 
FFTWLIBDIR = ../../fftw/fftw3-opt64-gfort/lib
LINKLIBS   = -L$(FFTWLIBDIR) -lfftw3f -lfftw3f_threads

.PRECIOUS :  $(EXE) $(LIB) 

include Makefile.inc

#include Makebody.inc  can not use: hardwired bin dir!

$(EXE) : $(LIB)
	$(COMP) $(LF)  $(LIB) $(LINKLIBS) -o $(EXE)
	@@echo "Created: $(EXE)"
	@@echo " "

$(LIB) : $(ELEMENTS)
	@@echo "        linking $(EXE) now ----"
.f.a:
	$(COMP) $(FFLAGS) $<
	$(AR) $(AFLAGS) $(LIB) $*.o
	@@\rm $*.o


#SRCS = $(patsubst %.f, %.o, $(filter-out $(EXCLUDE), $(wildcard *.f)))


@


1.3
log
@*** empty log message ***
@
text
@d12 4
a15 1
# Gfort Compile/link flags
d29 1
a29 1
PGM      = spider
d31 1
a31 1
EXE      = $(PGM)_linux_mp_gfort
d33 1
a33 1
LIB      = $(EXE).a
d44 1
a44 1
.PRECIOUS : ../bin/$(EXE) $(LIB) 
d50 3
a52 3
../../bin/$(EXE)$(DEST) : $(LIB)
	$(COMP) $(LF)  $(LIB) $(LINKLIBS) -o ../../bin/$(EXE)$(DEST)
	@@echo "Created: ../../bin/$(EXE)$(DEST)"
d56 1
a56 1
	@@echo "        linking $(EXE)$(DEST) now ----"
a60 1

@


1.2
log
@*** empty log message ***
@
text
@d1 63
a63 83
SHELL		= /bin/sh
INSTALL		= install -c
INSTALL_PROGRAM	= $(INSTALL)

# Common prefix for installation directories.
# NOTE: This directory must exist when you start the install.
prefix		= /usr/local
exec_prefix	= $(prefix)
bindir		= $(exec_prefix)/bin


SRCS = $(patsubst %.f, %.o, $(filter-out $(EXCLUDE), $(wildcard *.f)))

all:

build: fftw3.o lundoc.o $(SRCS)
	$(FC) $(FLFLAGS) -o $(PROGRAM) $^

spider:
	$(MAKE) FC='/usr/bin/gfortran' \
		FCFLAGS='-cpp -DSP_GFORTRAN -DSP_LIBFFTW3 -DSP_LINUX -Ofast -funroll-loops -finline-limit=600' \
		FLFLAGS='-lfftw3f -lm' \
		PROGRAM='spider' \
		build

spider-openmp:
	$(MAKE) FC='/usr/bin/gfortran' \
		FCFLAGS='-cpp -DSP_GFORTRAN -DSP_LIBFFTW3 -DSP_LINUX -Ofast -funroll-loops -finline-limit=600 -DSP_MP -fopenmp' \
		FLFLAGS='-lfftw3f -lm -fopenmp -lfftw3f_threads' \
		PROGRAM='spider-openmp' \
		build

spider-openmpi:
	$(MAKE) FC='/usr/bin/mpif90.openmpi' \
		FCFLAGS='-cpp -DSP_GFORTRAN -DSP_LIBFFTW3 -DSP_LINUX -Ofast -funroll-loops -finline-limit=600 -DUSE_MPI -I/usr/include/openmpi' \
		FLFLAGS='-lfftw3f -lm -lmpi' \
		PROGRAM='spider-openmpi' \
		build

spider-mpich2:
	$(MAKE) FC='/usr/bin/mpif90.mpich2' \
		FCFLAGS='-cpp -DSP_GFORTRAN -DSP_LIBFFTW3 -DSP_LINUX -Ofast -funroll-loops -finline-limit=600 -DUSE_MPI -I/usr/include/mpich2' \
		FLFLAGS='-lfftw3f -lm -lmpi' \
		PROGRAM='spider-mpich2' \
		build

spider-pgi:
	$(MAKE) FC='/usr/local/pgi/linux86-64/12.3/bin/pgf95' \
		FCFLAGS='-tp x64 -fast -O2 -Mpreprocess -Kieee -Minfo -byteswapio -DHAS_IEEE -DSP_LIBFFTW3' \
		FLFLAGS='-Bstatic_pgi -tp x64 -lfftw3f -lm' \
		PROGRAM='spider-pgi' \
		build

spider-pgi-openmp:
	$(MAKE) FC='/usr/local/pgi/linux86-64/12.3/bin/pgf95' \
		FCFLAGS='-tp x64 -mcmodel=medium -fastsse -Mipa=fast -mp=nonuma -O2 -Mpreprocess -Kieee -Minfo -byteswapio -DHAS_IEEE -DSP_MP -DSP_LIBFFTW3' \
		FLFLAGS='-Bstatic_pgi -tp x64 -mcmodel=medium -fastsse -Mipa=fast -mp=nonuma -lfftw3f -lfftw3f_threads -mp -lm' \
		PROGRAM='spider-pgi-openmp' \
		build

%.o: %.f
	$(FC) $(FCFLAGS) -c $< -o $@@

clean:
	-rm -f *.o *.mod

distclean: clean
	-rm -f spider spider-openmp spider-openmpi spider-mpich2

install: spider spider_mp spider_mpi
	$(INSTALL_PROGRAM) spider $(DESTDIR)$(bindir)/spider
	$(INSTALL_PROGRAM) spider-openmp  $(DESTDIR)$(bindir)/spider-openmp
	$(INSTALL_PROGRAM) spider-openmpi $(DESTDIR)$(bindir)/spider-openmpi
	$(INSTALL_PROGRAM) spider-mpich2  $(DESTDIR)$(bindir)/spider-mpich2

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' install

uninstall:
	-rm -f $(DESTDIR)$(bindir)/spider
	-rm -f $(DESTDIR)$(bindir)/spider-openmp
	-rm -f $(DESTDIR)$(bindir)/spider-openmpi
	-rm -f $(DESTDIR)$(bindir)/spider-mpich2
@


1.1
log
@Initial revision
@
text
@a10 16
EXCLUDE = \
	alrq_ms_new.f \
	extractline.f \
	extractplane.f \
	fitplane.f jnk.f \
	lookup.f mrali_p.f \
	outim.f \
	paged.f \
	pagedhdr.f \
	prntxx.f \
	putline3.f \
	quadri_c.f \
	radcomplete.f \
	reversegrid32.f \
	rots3_n.f \
	test.f
d72 1
a72 1
	$(INSTALL_PROGRAM) spider-openmp $(DESTDIR)$(bindir)/spider-openmp
d74 1
a74 1
	$(INSTALL_PROGRAM) spider-mpich2 $(DESTDIR)$(bindir)/spider-mpich2
@
