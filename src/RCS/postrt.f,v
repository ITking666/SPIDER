head	1.17;
access;
symbols
	healthdept_2018:1.17
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.9
	noindx:1.9
	Bproc:1.9
	oct21:1.9
	last77:1.9;
locks; strict;
comment	@c @;


1.17
date	2018.10.03.14.34.12;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2014.07.30.15.30.46;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2013.08.30.14.04.02;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2011.09.19.13.43.30;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.26.31;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.31.42;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.18.22.40;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2004.09.30.16.17.21;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.03.12.18.29.58;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.03.08.19.55.45;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.03.01.19.51.02;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.02.24.20.08.00;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.02.23.19.56.41;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.02.05.14.55.59;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	97.03.13.20.31.10;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	97.01.13.20.20.41;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.25;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.17
log
@email_health_dept
@
text
@
C***********************************************************************
C
C  POSTRT.FOR        CREATED                     AUG 88  ARDEAN LEITH
C                    UPDATED                     JUL 92 ARDEAN LEITH
C                    UPDATED                     MAR 99   ARDEAN LEITH
C                    LINEWIDTH BUG               SEP 11   ARDEAN LEITH
C                    MAXNAM                      JUL 14 ARDEAN LEITH
C
C***********************************************************************
C * AUTHOR:   ARDEAN LEITH
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  POSTRT
C
C       PURPOSE: CONTAINS PLOTTING COMMANDS FOR POSTSCRIPT OUTPUT
C
C       ENTRY POINTS ARE:
C
C             POSTRT(LUNPOS)
C                  START PLOT OUPTUT ON UNIT NO. LUNPOS
C    
C             POMOVE(LUNPOS,X,Y)
C                  MOVE PEN TO (X,Y) WITHOUT DRAWING
C
C             PODRAW(LUNPOS,X,Y)
C                  DRAW A LINE FROM CURRENT PEN POSITION TO (X,Y)
C
C             POEND(LUNPOS)
C                  TO END A PLOTTING SEQUENCE
C  
C             POFONT(LUNPOS,IFONT)
C                  TO CHANGE CHARACTER FONTS
C
C             POLINE(LUNPOS,INTEN,IPEN,LINTYP)
C                  TO CHANGE LINE TYPE, LINTYP IS LINE TYPE (1-10)
C                  USED FOR BOTH TEXT AND LINES
C
C             POSEG(LUNPOS,X1,Y1,X2,Y2)
C                  DRAW A LINE. 
C
C             POARAY(LUNPOS,IDATA,NDATA,CLOSD,FILLED)
C                  DRAW A POLYGON. (USE POPATH TO START IT)
C
C             POARAYF(LUNPOS,DATA,NDATA,CLOSD,FILLED)
C                  DRAW A POLYGON. (NO POPATH NEEDED)
C
C             POTEX(LUNPOS,TXLINE,NCHAR,X,Y,ITSIZE,ITANGL,JUST)
C                  PRINTS TEXT AT (X,Y) WITH SIZE=ITSIZE, ANGLE=ITANGL,
C                  AND JUSTIFICATION CODE=JUST
C
C             POTEXT(LUNPOS,TEXT)
C                  PRINTS TEXT
C
C             POSIZE(LUNPOS,ITSIZE)
C                  SET TEXT SIZE,  DEFAULT SIZE IS 12 POINT
C
C             POWIND(LUNPOS,WXMIN,WYMIN,WXMAX,WYMAX)
C                   SETS OUTPUT CLIPPING WINDOW
C
C             POPATH(LUNPOS,X,Y)
C                   START NEW PATH. MOVE PEN TO (X,Y) 
C
C      VARIABLES:   LASSIZ IS LAST TEXT SIZE IN POINTS
C                   
C      NOTE:        THIS DRIVER USES THE SAME SCALING AS USED FOR THE 
C                   RASTER TECH. TERMINAL. ORIGIN (0,0) IS CENTER OF SCREEN.
C                   X INCREASES TO RIGHT,  Y INCREASES UP THE SCREEN
C                   SCREEN IS 1280 X 1024 (-640..639,-512..511)
C               
C                   (-640,511)......................(639,511)
C                        :                              :
C                        :                              :
C                        :                              :
C                        :                              :
C                   (-640,-512)......................(639,-512)
C
C
C      NOTE:        SETGREY WILL NOT WORK IN POSTSCRIPT. IT MUST BE
C                   SPELLED SETGRAY!
C
C--*********************************************************************

        SUBROUTINE POSTRT(LUNPOS)

C       SUBROUTINE TO INITIALIZE POSTSCRIPT DISPLAY

C       SAVE IS NEEDED FEB 99 al
        SAVE

        CHARACTER * 80  TXLINE
        CHARACTER * 18  FONT(0:9)
        CHARACTER * 7   LINT(0:9)
        CHARACTER * 1   NULL,YN
        LOGICAL         CLOSD,FILLED

        PARAMETER       (NSIZE=2000)
        INTEGER         IDATA(2*NSIZE)
        DIMENSION       DATA(3,NSIZE)
        INTEGER         LINWID(0:9)
         
        DATA LINT/'[] 0   ','[2] 0  ','[4] 0  ','[4 1] 0','[6 2] 0',
     &            '[] 0   ','[2] 0  ','[] 0   ','[2] 0  ','[] 0   '/

        DATA LINWID/1,1,1,1,1,2,2,3,3,4/

        DATA FONT(0) /'/Times-Roman      '/
        DATA FONT(1) /'/Times-Bold       '/
        DATA FONT(2) /'/Times-Italic     '/
        DATA FONT(3) /'/Helvetica        '/
        DATA FONT(4) /'/Helvetica-Bold   '/
        DATA FONT(5) /'/Helvetica-Oblique'/
        DATA FONT(6) /'/Courier          '/
        DATA FONT(8) /'/Courier-Bold     '/
        DATA FONT(9) /'/Times-Roman      '/

        DATA SCALEK / 0.333333 /

C         CAN HANDLE NEW NON-RASTER TECH SCALING IF LUNPOST IS < 0
          LUNPOST = LUNPOS
          IF (LUNPOS .LE. 0) LUNPOST = -LUNPOS

          LASANG      = 0
          LASTYP      = 0
          LASTEN      = -1
C         SETS DEFAULT CHARACTER FONTS TO SIZE 12 POINTS
          LASSIZ      = 12
C         SETS DEFAULT FONT TO HELVETICA
          LASFON      = 3

          SCALED      = 1.0

          WRITE(LUNPOST,333) 
333       FORMAT(T1,'%!PS-Adobe-1.0')

C         CONVERT RASTER TECH UNITS TO POSTSCRIPT UNITS (1/72 INCH)
C         XCENT = 4.25 * 72  , YCENT = 5.5 * 72,  SCALE = 72.0 / 128.0

C         SET CURRENT FONT AND FONT SIZE
          FLASSIZ = LASSIZ
          WRITE(LUNPOST,98) FONT(LASFON),FLASSIZ

          IF (LUNPOS .GT. 0) THEN 
C            SET ORIGIN AT CENTER, LANDSCAPE ORIENTATION
             WRITE(LUNPOST,*) ' 306 396 translate 90 rotate'
C            SCALE UNITS SO SAME AS RASTER TECH
             WRITE(LUNPOST,*) ' .5625 .5625 scale'
             SCALED = SCALE / 0.5625

C            RESCALE TEXT
             WRITE(LUNPOS,89) SCALED
          ENDIF

          RETURN

        ENTRY POGETSCALE(LUNPOS,SCALET,SCALEDT)
C         GETS SCALING ------------------------------------- POGETSCALE

          SCALET  = SCALE
          SCALEDT = SCALED

          RETURN

 
        ENTRY POSCALE(LUNPOS,XMARGIN,YMARGIN, XMINS,YMINS, XMAXS,YMAXS)
C         SETS SCALING ---------------------------------------- POSCALE

          XSCALE  = (( 8.5 - (2 * XMARGIN)) * 72)  / (XMAXS - XMINS)
          YSCALE  = ((11.0 - (2 * YMARGIN)) * 72)  / (YMAXS - YMINS)

          SCALE   = MIN(XSCALE,YSCALE)

          WRITE(LUNPOST,334) 
334       FORMAT(/,T1,'% -- scale and center output -(unit=1/72 in.)--')
        
C         SET ORIGIN AT LOWER LEFT, PORTRAIT ORIENTATION
C         TRANSLATE SO OUTPUT IS CENTERED

          XT = 0.5 * ((8.5 * 72) - SCALE * (XMAXS - XMINS)) -
     &         0.5 * SCALE * XMINS

          YT = 0.5 * ((11 * 72)  - SCALE * (YMAXS - YMINS)) - 
     &         0.5 * SCALE * YMINS

          WRITE(LUNPOS,394) XT,YT
394       FORMAT(1X,F7.2,1X,F7.2,' translate ')

C         SCALE UNITS TO FIT MARGIN
          WRITE(LUNPOS,399) SCALE,SCALE
399       FORMAT(F8.2,1X,F8.2,' scale')

          WRITE(LUNPOST,335) 
335       FORMAT(T1,'% ------------------------',/)

C         RESCALE TEXT
          WRITE(LUNPOS,89) 1.0 / SCALE
          SCALED = SCALED / SCALE

C         RESCALE LINE WIDTH
          SLINWID = LINWID(LASTYP) * SCALED
          WRITE(LUNPOS,393) SLINWID
393       FORMAT(2X,F7.3,' setlinewidth ')

          RETURN


        ENTRY POWIND(LUNPOS,WXMIN,WYMIN,WXMAX,WYMAX)
C         SETS OUTPUT WINDOW ----------------------------------- POWIND
          WRITE(LUNPOS,90) WXMIN,WYMIN,WXMIN,WYMAX,
     &                    WXMAX,WYMAX,WXMAX,WYMIN
90        FORMAT( '  initclip newpath ',
     &               F8.2,1X,F8.2,' moveto ',
     &               F8.2,1X,F8.2,' lineto ',/,
     &            2X,F8.2,1X,F8.2,' lineto ',
     &               F8.2,1X,F8.2,' lineto closepath clip')
        RETURN


        ENTRY POMOVE(LUNPOS,X,Y)
C..       MOVE PEN TO (X,Y) ------------------------------------ POMOVE
          WRITE(LUNPOS,92)X,Y
92        FORMAT(2X,F8.2,1X,F8.2,' moveto')
        RETURN


        ENTRY POPATH(LUNPOS,X,Y)
C         START NEW PATH. MOVE PEN TO (X,Y) -------------------- POPATH
          WRITE(LUNPOS,97) X,Y
97        FORMAT('  newpath ',F8.2,1X,F8.2,' moveto')
        RETURN


        ENTRY PODRAW(LUNPOS,X,Y)
C         DRAW LINE TO (X,Y) ----------------------------------- PODRAW
          WRITE(LUNPOS,91)X,Y
91        FORMAT(2X,F8.2,1X,F8.2,' lineto')
        RETURN


        ENTRY POSEG(LUNPOS,X1,Y1,X2,Y2)
C         DRAW LINE --------------------------------------------- POSEG
          WRITE(LUNPOS,997) X1,Y1,X2,Y2
997       FORMAT(' newpath ',F8.2,1X,F8.2,' moveto ',F8.2,1X,F8.2,
     &           ' lineto stroke')
        RETURN


        ENTRY POSHOW(LUNPOS,CLOSD,FILLED)
C         FINISH OFF A LINE AND DISPLAY IT --------------------- POSHOW
          IF (CLOSD .OR. FILLED) THEN
             WRITE(LUNPOS,*) ' closepath'
             IF (FILLED) THEN
                 WRITE(LUNPOS,*) ' gsave fill grestore 1.0 setgray'
                 LASTEN = -1
             ENDIF
          ENDIF
          WRITE(LUNPOS,*) ' stroke'
        RETURN


        ENTRY POLINE(LUNPOS,INTEN,IPEN,LINTYP)
C..       SELECT LINE TYPE AND WIDTH --------------------------- POLINE
          IF (LASTYP .NE. LINTYP) THEN

C******************888DEBUG
            IF (LINTYP .LT. 0 .OR. LINTYP .GT. 9) THEN
               WRITE(6,*) 'LINTYP:',LINTYP
               STOP
            ENDIF
C**************************

C           RESCALE LINE WIDTH
            !SLINWID = LINWID(LASTYP) * SCALE sept 2011 al
            SLINWID = LINWID(LASTYP) 

            !WRITE(LUNPOS,93) LINT(LINTYP)(1:7),SLINWIDsept 2011 al
            WRITE(LUNPOS,93) LINT(LINTYP)(1:7)
93          FORMAT(2X,A7,' setdash ')
!93          FORMAT(2X,A7,' setdash ',F8.3,' setlinewidth ')
            LASTYP = LINTYP
          ENDIF
          IF (LASTEN .NE. INTEN) THEN
            IF (INTEN .GE. 0) THEN
              GRAY = 1.0 - ((INTEN + 1) / 10.0)
            ELSE
              GRAY = 1.0 - (-INTEN / 256.0)
            ENDIF
            GRAY = MIN(1.0,GRAY)
            WRITE(LUNPOS,100) GRAY
100         FORMAT(2X,F5.2,' setgray')
            LASTEN = INTEN
          ENDIF
          RETURN


        ENTRY POARAY(LUNPOS,IDATA,NDATA,CLOSD,FILLED)
C..       DRAW A POLYGON --------------------------------------- POARAY

          NDATA2 = NDATA * 2
          ISTOP = 1

C         USE BATCHES OF 400 COORDINATES TO AVOID PS OVERFLOW
7334      IGO   = ISTOP + 399 
          IF (IGO .GT. NDATA2) IGO = NDATA2
          NOWD2 = (IGO - ISTOP + 1) / 2
          WRITE(LUNPOS,95) (IDATA(I),I= IGO,ISTOP,-1)
95        FORMAT(7(I5,1X,I5,1X))
          WRITE(LUNPOS,94) NOWD2
94        FORMAT(2X,I4,' {lineto} repeat')
          IF (IGO .LT. NDATA2) THEN
C            ANOTHER BATCH NEEDED
             ISTOP = IGO + 1
             GOTO 7334
          ENDIF

          IF (CLOSD .OR. FILLED) THEN
             WRITE(LUNPOS,*) ' closepath'
             IF (FILLED) THEN
                 WRITE(LUNPOS,*) ' gsave fill grestore 1.0 setgray'
                 LASTEN = -1
             ENDIF
          ENDIF

          WRITE(LUNPOS,*) ' stroke'
          RETURN

        ENTRY POARAYF(LUNPOS,DATA,NDATA,CLOSD,FILLED)
C         DRAW A POLYGON -------------------------------------- POARAYF

C         START NEW PATH. MOVE PEN TO (X,Y) 
          WRITE(LUNPOS,697) DATA(1,1),DATA(2,1)
697       FORMAT('  newpath ',F8.2,1X,F8.2,' moveto')
c          CALL SETMINMAX(DATA(1,I),DATA(2,I),XMIN,XMAX,YMIN,YMAX)

C         USE BATCHES OF 200 COORDINATES TO AVOID PS OVERFLOW
          ISTOP = 2

6334      IGO   = ISTOP + 200 - 1 
          IF (IGO .GT. NDATA) IGO = NDATA

          WRITE(LUNPOS,695) (DATA(1,I),DATA(2,I),I= IGO,ISTOP,-1)
695       FORMAT(4(F7.2,1X,F7.2,1X))

C         NOWD2 IS NUMBER OF VALUES IN EACH BATCH
          NOWD2 = (IGO - ISTOP + 1) 
          WRITE(LUNPOS,694) NOWD2
694       FORMAT(2X,I4,' {lineto} repeat')

          IF (IGO .LT. NDATA) THEN
C            ANOTHER BATCH NEEDED
             ISTOP = IGO + 1
             GOTO 6334
          ENDIF

          IF (CLOSD .OR. FILLED) THEN
             WRITE(LUNPOS,*) ' closepath'
             IF (FILLED) THEN
                 WRITE(LUNPOS,*) ' gsave fill grestore 1.0 setgray'
                 LASTEN = -1
             ENDIF
          ENDIF

          WRITE(LUNPOS,*) ' stroke'
          RETURN

#ifdef NEVER
          DO I = 2,NDATA
             WRITE(LUNPOS,695) DATA(1,I),DATA(2,I)
695          FORMAT(2X,F8.2,1X,F8.2,' lineto')
c             CALL SETMINMAX(DATA(1,I),DATA(2,I),XMIN,XMAX,YMIN,YMAX)
          ENDDO
#endif

        ENTRY POTEX(LUNPOS,TXLINE,NCHAR,X,Y,ITSIZE,ITANGL,JUST)
C         PRINT TEXT AT (X,Y) ----------------------------------- POTEX

          IPOINT = ITSIZE

          IF (LASSIZ .EQ. 0) THEN
C            ADDING TO OLD FILE
C            SETS DEFAULT CHARACTER FONTS TO SIZE 12 POINTS
             LASSIZ  = 12
             LASFON  = 3
             FITSIZE = ITSIZE
             WRITE(LUNPOS,98) FONT(LASFON),FITSIZE

          ELSEIF (IPOINT .NE. LASSIZ) THEN
            RELSIZ = FLOAT(ITSIZE) / LASSIZ
            LASSIZ = ITSIZE
            WRITE(LUNPOS,89) RELSIZ
89          FORMAT('  currentfont ',F7.3,' scalefont setfont')
          ENDIF

C         MOVE TO UNJUSTIFIED LOCATION 
          WRITE(LUNPOS,96) X,Y
96        FORMAT(2X,F8.2,1X,F8.2,' moveto')

          IF (ITANGL .NE. LASANG) THEN
C            SET TEXT ANGLE
             WRITE(LUNPOS,88) ITANGL
88           FORMAT('  gsave ',I4,' rotate')
          ENDIF

C         PUT TEXT ON STACK
          WRITE(LUNPOS,80) TXLINE(1:NCHAR)
80        FORMAT(1X,'(',A,')')

C         FIND RELATIVE LOCATION FOR JUSTIFICATION
          YR =  -ITSIZE * SCALEK / SCALE 

          IF (JUST .EQ. 0) THEN
C            LEFT JUSTIFIED TEXT CENTERED ON Y
             WRITE(LUNPOS,103) YR
103          FORMAT(' 0 ',F8.2,' rmoveto show')

          ELSE IF (JUST .EQ. 1) THEN
C            CENTERED IN X AND Y TEXT
             WRITE(LUNPOS,101) YR
101         FORMAT(' dup stringwidth pop 2 div neg ',F8.2,
     &             ' rmoveto show')

          ELSEIF (JUST .EQ. 2) THEN
C            RIGHT JUSTIFIED TEXT CENTERED ON Y
             WRITE(LUNPOS,102) YR
102          FORMAT(' dup stringwidth pop neg ',F8.2,' rmoveto show')

          ELSE
C            ??? JUSTIFIED TEXT 
             WRITE(LUNPOS,104)
104          FORMAT(' show')

          ENDIF

#ifdef NEVER
c*******************new stuff
          WRITE(LUNPOS,*) '  currentpoint exch pop dup dup '
          WRITE(LUNPOS,*) '  ymin lt {dup /ymin exch def} if'
          WRITE(LUNPOS,*) '  ymax gt {    /ymax exch def} {pop} ifelse'
          WRITE(LUNPOS,*) '  currentpoint pop dup dup '
          WRITE(LUNPOS,*) '  xmin lt {dup /xmin exch def} if'
          WRITE(LUNPOS,*) '  xmax gt {    /xmax exch def} {pop} ifelse'
C*************************************
#endif

          IF (ITANGL .NE. LASANG) THEN
             WRITE(LUNPOS,*) '  grestore'
             LASANG = ITANGL
          ENDIF

1011      RETURN



        ENTRY POTEXT(LUNPOS,TXLINE,NCHAR)
C         PUT TEXT ON STACK ------------------------------------ POTEXT
          WRITE(LUNPOS,81) TXLINE(1:NCHAR)
81        FORMAT(1X,'(',A,')  show')
          RETURN


        ENTRY POSIZE(LUNPOS,ITSIZE)
C         SET TEXT SIZE,  DEFAULT SIZE IS 12 POINT ------------- POSIZE

          IF (LASSIZ .EQ. 0) THEN
C            ADDING TO OLD FILE
C            SETS DEFAULT CHARACTER FONTS TO SIZE 12 POINTS
             LASSIZ  = 12
             LASFON  = 3
             FITSIZE = ITSIZE
             WRITE(LUNPOS,98) FONT(LASFON),FITSIZE

          ELSEIF (ITSIZE .NE. LASSIZ) THEN
C           CAHNGE SIZE
            RELSIZ = SCALED * FLOAT(ITSIZE) / FLOAT(LASSIZ)
            LASSIZ = ITSIZE
            WRITE(LUNPOS,89) RELSIZ
          ENDIF
          RETURN



        ENTRY POFONT(LUNPOS,IFONT)
C         SETS CHARACTER FONTS --------------------------------- POFONT
          IF (LASSIZ .EQ. 0) THEN
C            ADDING TO OLD FILE,SETS DEFAULT FONT TO SIZE 12 POINTS
             LASSIZ = 12
          ENDIF

          LASFON     = IFONT
          SCALEDSIZE = LASSIZ * SCALED
          WRITE(LUNPOS,98) FONT(LASFON),SCALEDSIZE
98        FORMAT(2X,A13,' findfont ',F8.3,' scalefont setfont')
          RETURN


        ENTRY POEND(LUNPOS)
C         END PLOTTER USE --------------------------------------- POEND
          WRITE(LUNPOS,99) 
99        FORMAT('  showpage')
          RETURN

        ENTRY POZERO(LUNPOS)
C         INITIALIZE THE TEXT EXTENT RECORDING VARIABLES ------- POZERO
          WRITE(LUNPOS,*) '  /xmax -20000 def'
          WRITE(LUNPOS,*) '  /ymax -20000 def'
          WRITE(LUNPOS,*) '  /xmin  20000 def'
          WRITE(LUNPOS,*) '  /ymin  20000 def'
          RETURN

        ENTRY POUL(LUNPOS)
C         GOTO UPPER LEFT OF TEXT EXTENTS ------------------------ POUL
          WRITE(LUNPOS,*) '  xmin ymax moveto'
          RETURN

        ENTRY POLL(LUNPOS) 
C         GOTO LOWER LEFT OF TEXT EXTENTS ------------------------ POLL
          WRITE(LUNPOS,*) '  xmin ymin moveto'
          RETURN

        END

        SUBROUTINE SETMINMAX(X,Y,XMIN,XMAX,YMIN,YMAX)

        XMIN = MIN(XMIN,X)
        XMAX = MAX(XMAX,X)
        YMIN = MIN(YMIN,Y)
        YMAX = MAX(YMAX,Y)
        RETURN
        END

C       PRINT THE POSTSCRIPT FILE  ----------------------------- POPRINT

        SUBROUTINE POPRINT(FILENAME) 

        INCLUDE 'CMBLOCK.INC'

        CHARACTER(LEN=*):: FILENAME
        CHARACTER * 90     LINE
        CHARACTER *1       YN,NULL

        NULL = CHAR(0)

        CALL RDPRMC(YN,NA,.TRUE.,'PRINT NOW? (Y/N)',NULL,IRTFLG)

        IF (YN .NE. 'N' .AND. YN .NE. 'n') THEN
C          THIS WILL HAVE TO BE ALTERED AT DIFFERENT SITES!!!! 

           WRITE(NOUT,*) ' WARNING: SITE SPECIFIC COMMAND IN POSTRT'
           LINE = 'lp ' // FILENAME // NULL
           CALL CSVMS(LINE,.TRUE.,IERR)
           WRITE(NOUT,*) ' '
        ENDIF

        END

#ifdef NEVER

  /Plot {
.
.
.
  } def

  Plotit
  showpage
#endif
#ifdef NEVER
C         INITIALIZE THE TEXT EXTENT RECORDING VARIABLES
          WRITE(LUNPOST,*) '  /xmax -20000 def'
          WRITE(LUNPOST,*) '  /ymax -20000 def'
          WRITE(LUNPOST,*) '  /xmin  20000 def'
          WRITE(LUNPOST,*) '  /ymin  20000 def'

C         SET NEW SCALING VARIABLES
          XMIN = 10E10
          YMIN = XMIN
          XMAX = -XMIN
          YMAX = -YMIN
#endif
@


1.16
log
@CHARACTER(LEN=*):: FILENAME
@
text
@d17 1
a17 1
C=* Email: spider@@wadsworth.org                                        *
d35 1
a35 1
C       PURPOSE:   CONTAINS PLOTTING COMMANDS FOR POSTSCRIPT OUTPUT
@


1.15
log
@CSVMS(LINE,.TRUE.,IERR)
@
text
@d8 1
d15 1
a15 1
C=* Copyright 1985-2013  Health Research Inc.,                         *
d556 3
a558 3
        CHARACTER *81   FILENAME
        CHARACTER * 90  LINE
        CHARACTER *1    YN,NULL
@


1.14
log
@had line width bug when used with 'PF'
@
text
@d14 1
a14 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d549 1
a549 1
C       PRINT THE POSTSCRIOPT FILE  ----------------------------- POPRINT
d568 1
a568 1
           CALL CSVMS(LINE,IERR)
d571 1
a571 1
        RETURN
@


1.13
log
@GPL_2010
@
text
@d4 4
a7 3
C  POSTRT.FOR        CREATED AUG 88  ARDEAN LEITH
C                    UPDATED JULY 92 ARDEAN LEITH
C                    UPDATED MAR 99   ARDEAN LEITH
d291 2
a292 1
            SLINWID = LINWID(LASTYP) * SCALE
d294 4
a297 2
            WRITE(LUNPOS,93) LINT(LINTYP)(1:7),SLINWID
93          FORMAT(2X,A7,' setdash ',F8.3,' setlinewidth ')
@


1.12
log
@GPL License fixed
@
text
@a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@HRI GPL License used
@
text
@a9 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d13 1
a13 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a32 6

C * COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY.  *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
a103 1
C--*************************************************************************
@


1.10
log
@, missing in format
@
text
@d11 24
d110 1
@


1.9
log
@used postscript
@
text
@d407 1
a407 1
80        FORMAT(1X'(',A,')')
@


1.8
log
@uses postscript now
@
text
@a96 1
        CHARACTER * 15  FMT
a105 1
        DATA FMT/'(3H  (,A  ,1H))'/
d121 1
a121 1
        DATA SCALET / 0.333333 /
d160 2
d163 6
d176 3
d181 8
a188 2
          XT = XMARGIN * 72 - (XMINS * SCALE)
          YT = YMARGIN * 72 - (YMINS * SCALE)
d196 3
d389 1
a389 1
            RELSIZ = FLOAT(ITSIZE) * SCALED
d406 2
a407 3
          WRITE(FMT(9:10),8000,ERR=1011) NCHAR
8000      FORMAT(I2)
          WRITE(LUNPOS,FMT) TXLINE(1:NCHAR)
d410 1
a410 1
          YR =  -ITSIZE * SCALET / SCALE 
d457 2
a458 3
          WRITE(FMT(9:10),8000,ERR=1011) NCHAR
          WRITE(LUNPOS,FMT) TXLINE(1:NCHAR)
          WRITE(LUNPOS,*) ' show'
@


1.7
log
@new poaxis
@
text
@d4 3
a6 2
C  POSTRT.FOR        CREATED AUG 88
C                    UPDATED JULY 92 al
d9 8
a16 4
C      AUTHOR:   ARDEAN LEITH
C      COPYRIGHT (C) 1988, WADSWORTH CENTER FOR LABORATORIES AND 
C      RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY, 12201
C***********************************************************************
d43 3
d49 4
a52 1
C             POTEX(LUNPOS,TXLINE,ICHAR,X,Y,ITSIZE,ITANGL,JUST)
d129 7
a135 5
          LASANG = 0
          LASTYP = 0
          LASTEN = -1
          LASFON =  0
          SCALE  = 1
d137 2
d145 4
d154 4
a159 19
C..       SETS DEFAULT CHARACTER FONTS TO SIZE 12 POINTS
          LASSIZ = 12
          LASFON = 3
          WRITE(LUNPOST,98) FONT(LASFON),LASSIZ

#ifdef NEVER
C         INITIALIZE THE TEXT EXTENT RECORDING VARIABLES
          WRITE(LUNPOST,*) '  /xmax -20000 def'
          WRITE(LUNPOST,*) '  /ymax -20000 def'
          WRITE(LUNPOST,*) '  /xmin  20000 def'
          WRITE(LUNPOST,*) '  /ymin  20000 def'

C         SET NEW SCALING VARIABLES
          XMIN = 10E10
          YMIN = XMIN
          XMAX = -XMIN
          YMAX = -YMIN
#endif

d181 3
a183 4
C..       SETS DEFAULT CHARACTER FONTS TO SIZE 12 POINTS
          SCALEDSIZE = LASSIZ / SCALE
          WRITE(LUNPOS,398) FONT(LASFON),SCALEDSIZE
398       FORMAT(2X,A13,' findfont ',F8.3,' scalefont setfont')
d185 2
a186 1
          SLINWID = LINWID(LASTYP) / SCALE
d213 1
a213 1
C..       START NEW PATH. MOVE PEN TO (X,Y) -------------------- POPATH
d220 1
a220 1
C..       DRAW LINE TO (X,Y) ----------------------------------- PODRAW
d225 1
d227 1
a227 1
C..       DRAW LINE --------------------------------------------- POSEG
a230 5
          
c          WRITE(LUNPOS,991)X2,Y2
c991       FORMAT(2X,F8.2,1X,F8.2,' lineto stroke')
c          CALL SETMINMAX(X1,Y1,XMIN,XMAX,YMIN,YMAX)

d258 5
a262 2
            WRITE(LUNPOS,93) LINT(LINTYP)(1:7),LINWID(LINTYP)
93          FORMAT(2X,A7,' setdash ',I1,' setlinewidth ')
d357 1
a357 1
        ENTRY POTEX(LUNPOS,TXLINE,ICHAR,X,Y,ITSIZE,ITANGL,JUST)
d360 1
a360 1
          IPOINT = MAX((ITSIZE / 2),1)
d365 4
a368 3
             LASSIZ = 12
             LASFON = 3
             WRITE(LUNPOS,98) FONT(LASFON),IPOINT
d371 2
a372 2
            RELSIZ = FLOAT(IPOINT) / FLOAT(LASSIZ)
            LASSIZ = IPOINT
d377 1
a377 1
C..       MOVE TO UNJUSTIFIED LOCATION 
d388 1
a388 1
          WRITE(FMT(9:10),8000,ERR=1011) ICHAR
d390 1
a390 1
          WRITE(LUNPOS,FMT) TXLINE(1:ICHAR)
d393 1
a393 1
          YR =  -IPOINT * SCALET / SCALE 
d438 1
a438 1
        ENTRY POTEXT(LUNPOS,TXLINE,ICHAR)
d440 2
a441 2
          WRITE(FMT(9:10),8000,ERR=1011) ICHAR
          WRITE(LUNPOS,FMT) TXLINE(1:ICHAR)
d447 1
a447 1
C..       SET TEXT SIZE,  DEFAULT SIZE IS 12 POINT ------------- POSIZE
a448 2
          IPOINT = MAX((ITSIZE / 2),1)

d452 9
a460 7
             LASSIZ = 12
             LASFON = 3
             WRITE(LUNPOS,98) FONT(LASFON),IPOINT

          ELSEIF (IPOINT .NE. LASSIZ) THEN
            RELSIZ = FLOAT(IPOINT) / FLOAT(LASSIZ)
            LASSIZ = IPOINT
d468 1
a468 1
C..       SETS CHARACTER FONTS --------------------------------- POFONT
d470 1
a470 2
C            ADDING TO OLD FILE
C            SETS DEFAULT CHARACTER FONTS TO SIZE 12 POINTS
d474 4
a477 4
          IPOINT = LASSIZ
          LASFON = IFONT
          WRITE(LUNPOS,98) FONT(LASFON),IPOINT
98        FORMAT(2X,A13,' findfont ',I3,' scalefont setfont')
d482 1
a482 1
C..       END PLOTTER USE --------------------------------------- POEND
d551 13
@


1.6
log
@poprint cmblock
@
text
@d15 1
a15 2
C       PURPOSE:   CONTAINS THE PLOTTING COMMANDS FOR POSTSCRIPT
C                  PLOTTER.  
d19 2
a20 2
C             POSTRT(IPLUN)
C                  START PLOT OUPTUT ON UNIT NO. IPLUN
d22 1
a22 1
C             POMOVE(IPLUN,X,Y)
d25 1
a25 1
C             PODRAW(IPLUN,X,Y)
d28 1
a28 1
C             POEND(IPLUN)
d31 1
a31 1
C             POFONT(IPLUN,IFONT)
d34 1
a34 1
C             POLINE(IPLUN,LINTYP)
d38 1
a38 1
C             POARAY(IPLUN,IDATA,NDATA,CLOSD,FILLED)
d41 1
a41 1
C             POTEX(IPLUN,TXLINE,ICHAR,X,Y,ITSIZE,ITANGL,JUST)
d45 1
a45 1
C             POTEXT(IPLUN,TEXT)
d48 1
a48 1
C             POSIZE(IPLUN,ITSIZE)
d51 1
a51 1
C             POWIND(IPLUN,WXMIN,WYMIN,WXMAX,WYMAX)
d54 1
a54 1
C             POPATH(IPLUN,X,Y)
a58 5
C
C      CALLED BY:   SSPOST         CNPOST
C 
C      CALLS:       nil
C 
d77 1
a77 1
        SUBROUTINE POSTRT(IPLUN)
d79 1
a79 1
CNO_SAVE 
d81 1
a81 1
C       I DO NOT KNOW IF SAVE IS NEEDED FEB 99 al
a83 3

C       SUBROUTINE TO INITIALIZE POSTSCRIPT DISPLAY

d88 1
a88 1
        CHARACTER * 1   NULL
d93 1
d95 1
a95 1
          
d114 4
d119 1
a119 1
          LASTYP = -1
d122 1
d124 1
a124 1
          WRITE(IPLUN,333) 
d130 6
a135 4
C         SET ORIGIN AT CENTER, LANDSCAPE ORIENTATION
          WRITE(IPLUN,*) ' 306 396 translate 90 rotate'
C         SCALE UNITS SO SAME AS RASTER TECH
          WRITE(IPLUN,*) ' .5625 .5625 scale'
d140 1
a140 1
          WRITE(IPLUN,98) FONT(LASFON),LASSIZ
d142 1
d144 17
a160 4
          WRITE(IPLUN,*) '  /xmax -20000 def'
          WRITE(IPLUN,*) '  /ymax -20000 def'
          WRITE(IPLUN,*) '  /xmin  20000 def'
          WRITE(IPLUN,*) '  /ymin  20000 def'
d162 24
d189 3
a191 3
        ENTRY POWIND(IPLUN,WXMIN,WYMIN,WXMAX,WYMAX)
C         SETS OUTPUT WINDOW
          WRITE(IPLUN,90) WXMIN,WYMIN,WXMIN,WYMAX,
d201 3
a203 3
        ENTRY POMOVE(IPLUN,X,Y)
C..       MOVE PEN TO (X,Y)
          WRITE(IPLUN,92)X,Y
d208 3
a210 3
        ENTRY POPATH(IPLUN,X,Y)
C..       START NEW PATH. MOVE PEN TO (X,Y) 
          WRITE(IPLUN,97) X,Y
d215 3
a217 3
        ENTRY PODRAW(IPLUN,X,Y)
C..       DRAW LINE TO (X,Y)
          WRITE(IPLUN,91)X,Y
d221 12
d234 2
a235 2
        ENTRY POSHOW(IPLUN,CLOSD,FILLED)
C         FINISH OFF A LINE AND DISPLAY IT
d237 1
a237 1
             WRITE(IPLUN,*) ' closepath'
d239 1
a239 1
                 WRITE(IPLUN,*) ' gsave fill grestore 1.0 setgray'
d243 1
a243 1
          WRITE(IPLUN,*) ' stroke'
d247 2
a248 2
        ENTRY POLINE(IPLUN,INTEN,IPEN,LINTYP)
C..       SELECT LINE TYPE AND WIDTH
d258 1
a258 1
            WRITE(IPLUN,93) LINT(LINTYP)(1:7),LINWID(LINTYP)
d269 1
a269 1
            WRITE(IPLUN,100) GRAY
d276 2
a277 2
        ENTRY POARAY(IPLUN,IDATA,NDATA,CLOSD,FILLED)
C..       DRAW A POLYGON
d281 3
a283 1
7333      IGO   = ISTOP + 399 
d286 1
a286 1
          WRITE(IPLUN,95) (IDATA(I),I= IGO,ISTOP,-1)
d288 1
a288 1
          WRITE(IPLUN,94) NOWD2
d291 40
d332 5
a336 3
             GOTO 7333
          ELSEIF (CLOSD .OR. FILLED) THEN
             WRITE(IPLUN,*) ' closepath'
d338 1
a338 1
                 WRITE(IPLUN,*) ' gsave fill grestore 1.0 setgray'
d342 2
a343 1
          WRITE(IPLUN,*) ' stroke'
d346 7
d354 2
a355 2
        ENTRY POTEX(IPLUN,TXLINE,ICHAR,X,Y,ITSIZE,ITANGL,JUST)
C         PRINT TEXT AT (X,Y)
d364 1
a364 1
             WRITE(IPLUN,98) FONT(LASFON),IPOINT
d369 1
a369 1
            WRITE(IPLUN,89) RELSIZ
d374 1
a374 1
          WRITE(IPLUN,96) X,Y
d379 1
a379 1
             WRITE(IPLUN,88) ITANGL
d386 1
a386 1
          WRITE(IPLUN,FMT) TXLINE(1:ICHAR)
d389 1
a389 1
          YR =  -IPOINT * SCALET
d393 2
a394 2
             WRITE(IPLUN,103) YR
103          FORMAT('  0 ',F8.2,' rmoveto')
d398 3
a400 2
             WRITE(IPLUN,101) YR
101         FORMAT('  dup stringwidth pop 2 div neg ',F8.2,' rmoveto')
d404 7
a410 2
             WRITE(IPLUN,102) YR
102          FORMAT('  dup stringwidth pop neg ',F8.2,' rmoveto')
d414 1
d416 6
a421 6
          WRITE(IPLUN,*) '  currentpoint exch pop dup dup '
          WRITE(IPLUN,*) '  ymin lt {dup /ymin exch def} if'
          WRITE(IPLUN,*) '  ymax gt {    /ymax exch def} {pop} ifelse'
          WRITE(IPLUN,*) '  currentpoint pop dup dup '
          WRITE(IPLUN,*) '  xmin lt {dup /xmin exch def} if'
          WRITE(IPLUN,*) '  xmax gt {    /xmax exch def} {pop} ifelse'
d423 1
a424 2
          WRITE(IPLUN,*) '  show'

d426 1
a426 1
             WRITE(IPLUN,*) '  grestore'
d434 2
a435 2
        ENTRY POTEXT(IPLUN,TXLINE,ICHAR)
C         PUT TEXT ON STACK
d437 2
a438 2
          WRITE(IPLUN,FMT) TXLINE(1:ICHAR)
          WRITE(IPLUN,*) ' show'
d442 2
a443 2
        ENTRY POSIZE(IPLUN,ITSIZE)
C..       SET TEXT SIZE,  DEFAULT SIZE IS 12 POINT
d452 1
a452 1
             WRITE(IPLUN,98) FONT(LASFON),IPOINT
d457 1
a457 1
            WRITE(IPLUN,89) RELSIZ
d463 2
a464 2
        ENTRY POFONT(IPLUN,IFONT)
C..       SETS CHARACTER FONTS
d473 1
a473 1
          WRITE(IPLUN,98) FONT(LASFON),IPOINT
d478 3
a480 3
        ENTRY POEND(IPLUN)
C..       END PLOTTER USE
          WRITE(IPLUN,99) 
d484 6
a489 6
        ENTRY POZERO(IPLUN)
C         INITIALIZE THE TEXT EXTENT RECORDING VARIABLES
          WRITE(IPLUN,*) '  /xmax -20000 def'
          WRITE(IPLUN,*) '  /ymax -20000 def'
          WRITE(IPLUN,*) '  /xmin  20000 def'
          WRITE(IPLUN,*) '  /ymin  20000 def'
d492 3
a494 3
        ENTRY POUL(IPLUN)
C         GOTO UPPER LEFT OF TEXT EXTENTS
          WRITE(IPLUN,*) '  xmin ymax moveto'
d497 3
a499 3
        ENTRY POLL(IPLUN)
C         GOTO LOWER LEFT OF TEXT EXTENTS
          WRITE(IPLUN,*) '  xmin ymin moveto'
d502 3
d506 5
d513 1
a513 1
C       PRINT A POSTSCRIPT FILE  ------------------------------ POPRINT
d537 12
@


1.5
log
@added poprint
@
text
@d402 2
@


1.4
log
@cnosave
@
text
@d398 22
@


1.3
log
@set %! to first col.
@
text
@d85 6
@


1.2
log
@added postscript tag at start
@
text
@d121 2
a122 1
          WRITE(IPLUN,*) '%!PS-Adobe-1.0'
@


1.1
log
@Initial revision
@
text
@d121 2
@
