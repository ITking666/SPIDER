head	1.10;
access;
symbols
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.7
	prec_CA:1.6
	noindx:1.6
	Bproc:1.6
	oct21:1.5
	last77:1.4;
locks; strict;
comment	@c @;


1.10
date	2010.06.24.13.25.20;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.18.18.54.31;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.18.14.54.32;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.16.18.16.08;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.12.03.20.26.27;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.08.09.20.41.10;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	99.02.09.20.59.19;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	99.02.04.15.34.28;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	97.10.03.21.08.10;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.58;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.10
log
@GPL_2010
@
text
@
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************

C*--------------------------------------------------------------------*         
C*                                                                    *         
C*                                                                    *         
C*      INITIAL DENDROGRAM CHARACTERIZED BY NKLA SUMMITS IS TRUN-     *         
C*      CATED INTO KPART FINAL CLASSES.  OBJECTS ARE ASSIGNED         *         
C*      TO THE NEW CLASSES.                                           *         
C*                                                                    *         
C*   INPUT:                                                           *         
C*      NUMIM,NKLA,KPART,PK(NKLA),LA(NKLA),LB(NKLA) (CF,CHAVA)        *         
C*                                                                    *         
C*   OUTPUT:                                                          *         
C*      KLAS(NUMIM)      = NEW CLASSIFICATION CONTAINING KPART CLASSES*         
C*      IV(NKLA)         = ASSIGNMENT OF OLD CLASSES TO NEW CLASSES   *         
C*      NT(NKLA)         = SIZES OF THE KPART CLASSES                 *         
C*                                                                    *         
C*   WORKING ARRAY ... IW(NKLA)                                       *         
C*                                                                    *         
C*--------------------------------------------------------------------*         

      SUBROUTINE COUPE(NUMIM,NKLA,KPART, PK,LA,LB,IV,KLAS,NT, IW) 
             
      DIMENSION IV(NKLA),LA(NKLA),LB(NKLA),KLAS(NUMIM),PK(NKLA),                
     &          NT(NKLA),IW(NKLA)                                               

      JDEB  = NKLA + 1                                                          
      JFIN  = 2*NKLA - 1                                                        
                                                                              
C     INDICATOR IV(NKLA) OF THE AGGREGATION IN KPART CLASSES               
                                                                               
      DO   L = 1,NKLA                                                       
         IV(L) = 0 
      ENDDO 
                                                               
      DO   J = JDEB,JFIN                                                    
         NT(1) = J                                                                 
         KPT   = 0                                                                 
         JI    = 1 
                                                                
   20    IF (NT(JI) .LE. NKLA) THEN                                
            K       = NT(JI)                                                            
            KPT     = KPT + 1                                                           
            IW(KPT) = K                                                                
            JI      = JI - 1                                                            
         ELSE 
                               
            IJ      = JI + 1                                                            
            NI      = NT(JI) - JDEB + 1                                                 
            NT(IJ)  = LA(NI)                                                            
            NT(JI)  = LB(NI)                                                            
            JI      = JI + 1 
         ENDIF                                                           
         IF (JI .NE. 0) GO TO  20
                                
         IF (J .LE. JFIN-KPART+1) THEN                                
            DO   KK = 1,KPT                                                       
               JPP     = IW(KK)                                                            
               IV(JPP) = J                                                                
	    ENDDO
         ENDIF
         I1    = IW(1)                                                             
         I2    = IW(KPT)                                                           
      ENDDO

      KKK   = 1                                                                 
      NKLA1 = NKLA - 1                                                          
      DO  IL1 = 1,NKLA1                                                   
         IF(IV(IL1) .NE. 0) THEN                                
            IF (IV(IL1) .LT. KKK) CYCLE                               
            IV1     = IV(IL1)                                                           
            IV(IL1) = KKK                                                              
            IL3     = IL1 + 1
                                                           
            DO IL2 = IL3,NKLA                                                   
               IF (IV(IL2) .NE. IV1) CYCLE                                
               IV(IL2) = IV(IL1)                                                          
            ENDDO                                                                
         ELSE 
            IV(IL1 )= KKK 
         ENDIF                                                             
         KKK   = KKK + 1
      ENDDO
                                                               
      IF (IV(NKLA) .EQ. 0) IV(NKLA) = KKK 
                          
      END                                                                    
@


1.9
log
@GPL
@
text
@a2 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d4 5
a8 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d10 1
a10 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d15 1
a15 1
C=* This program is distributed in the hope that it will be useful,    *
d17 1
a17 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a18 1
C=*                                                                    *
d20 1
a20 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@GPL License added
@
text
@d1 112
@


1.7
log
@CA rewrite
@
text
@a0 86

C*--------------------------------------------------------------------*         
C*                                                                    *         
C*                                                                    *         
C*      INITIAL DENDROGRAM CHARACTERIZED BY NKLA SUMMITS IS TRUN-     *         
C*      CATED INTO KPART FINAL CLASSES.  OBJECTS ARE ASSIGNED         *         
C*      TO THE NEW CLASSES.                                           *         
C*                                                                    *         
C*   INPUT:                                                           *         
C*      NUMIM,NKLA,KPART,PK(NKLA),LA(NKLA),LB(NKLA) (CF,CHAVA)        *         
C*                                                                    *         
C*   OUTPUT:                                                          *         
C*      KLAS(NUMIM)      = NEW CLASSIFICATION CONTAINING KPART CLASSES*         
C*      IV(NKLA)         = ASSIGNMENT OF OLD CLASSES TO NEW CLASSES   *         
C*      NT(NKLA)         = SIZES OF THE KPART CLASSES                 *         
C*                                                                    *         
C*   WORKING ARRAY ... IW(NKLA)                                       *         
C*                                                                    *         
C*--------------------------------------------------------------------*         

      SUBROUTINE COUPE(NUMIM,NKLA,KPART, PK,LA,LB,IV,KLAS,NT, IW) 
             
      DIMENSION IV(NKLA),LA(NKLA),LB(NKLA),KLAS(NUMIM),PK(NKLA),                
     &          NT(NKLA),IW(NKLA)                                               

      JDEB  = NKLA + 1                                                          
      JFIN  = 2*NKLA - 1                                                        
                                                                              
C     INDICATOR IV(NKLA) OF THE AGGREGATION IN KPART CLASSES               
                                                                               
      DO   L = 1,NKLA                                                       
         IV(L) = 0 
      ENDDO 
                                                               
      DO   J = JDEB,JFIN                                                    
         NT(1) = J                                                                 
         KPT   = 0                                                                 
         JI    = 1 
                                                                
   20    IF (NT(JI) .LE. NKLA) THEN                                
            K       = NT(JI)                                                            
            KPT     = KPT + 1                                                           
            IW(KPT) = K                                                                
            JI      = JI - 1                                                            
         ELSE 
                               
            IJ      = JI + 1                                                            
            NI      = NT(JI) - JDEB + 1                                                 
            NT(IJ)  = LA(NI)                                                            
            NT(JI)  = LB(NI)                                                            
            JI      = JI + 1 
         ENDIF                                                           
         IF (JI .NE. 0) GO TO  20
                                
         IF (J .LE. JFIN-KPART+1) THEN                                
            DO   KK = 1,KPT                                                       
               JPP     = IW(KK)                                                            
               IV(JPP) = J                                                                
	    ENDDO
         ENDIF
         I1    = IW(1)                                                             
         I2    = IW(KPT)                                                           
      ENDDO

      KKK   = 1                                                                 
      NKLA1 = NKLA - 1                                                          
      DO  IL1 = 1,NKLA1                                                   
         IF(IV(IL1) .NE. 0) THEN                                
            IF (IV(IL1) .LT. KKK) CYCLE                               
            IV1     = IV(IL1)                                                           
            IV(IL1) = KKK                                                              
            IL3     = IL1 + 1
                                                           
            DO IL2 = IL3,NKLA                                                   
               IF (IV(IL2) .NE. IV1) CYCLE                                
               IV(IL2) = IV(IL1)                                                          
            ENDDO                                                                
         ELSE 
            IV(IL1 )= KKK 
         ENDIF                                                             
         KKK   = KKK + 1
      ENDDO
                                                               
      IF (IV(NKLA) .EQ. 0) IV(NKLA) = KKK 
                          
      END                                                                    
@


1.6
log
@# continue char fails on NT f90
@
text
@d1 1
a1 14
C *NAME* = COUPE.FOR                   31-JAN-86      13:23:05                  
C----------------------------------=*=----------------------------------        
C           COPYRIGHT 1986 - JEAN-PIERRE BRETAUDIERE                            
C THE UNIVERSITY OF TEXAS HEALTH SCIENCE CENTER AT HOUSTON                      
C MEDICAL SCHOOL - DEPARTMENT OF PATHOLOGY AND LABORATORY MEDICINE              
C P.O. BOX 20708, HOUSTON, TX 77225.                                            
C DISCLAIMER: NO GUARANTEES OF PERFORMANCE ACCOMPANY THIS SOFTWARE,             
C NOR IS ANY RESPONSIBILITY ASSUMED ON THE PART OF THE AUTHOR                   
C OR THE INSTITUTION.  ALL THE SOFTWARE HAS BEEN TESTED EXTENSIVELY             
C AND EVERY EFFORT HAS BEEN MADE TO INSURE ITS RELIABILITY.                     
C THE FOLLOWING SOFTWARE MAY NOT BE COMMUNICATED TO A THIRD PARTY               
C UNDER ANY FORM WITHOUT WRITTEN PERMISSION OF THE AUTHOR.                      
C PLEASE REPORT ANY BUG(S) TO JPB AT (713) 792 52 00.                           
C OR THRU ARPANET AT  ......!rice!ots!ut-path!suprim                            
d9 2
a10 3
C*      INPUT:                                                        *         
C*                                                                    *         
C*      ICARD,NKLA,KPART,PK(NKLA),LA(NKLA),LB(NKLA) (CF,CHAVA)        *         
d12 2
a13 2
C*      OUTPUT:                                                       *         
C*      KLAS(ICARD)      = NEW CLASSIFICATION CONTAINING KPART CLASSES*         
d17 1
a17 1
C*      WORKING ARRAY ... IW(NKLA)                                    *         
a18 2
C==10.16.80                                                           *         
C==01.13.86                                                           *         
d21 3
a23 2
      SUBROUTINE COUPE (ICARD,NKLA,KPART, PK,LA,LB,IV,KLAS,NT, IW)              
      DIMENSION IV(NKLA),LA(NKLA),LB(NKLA),KLAS(ICARD),PK(NKLA),                
d38 8
a45 7
         JI    = 1                                                                 
   20    IF (NT(JI) .GT. NKLA) GO TO  30                                
         K     = NT(JI)                                                            
         KPT   = KPT + 1                                                           
         IW(KPT)= K                                                                
         JI    = JI - 1                                                            
         GO TO  40 
d47 15
a61 12
   30    IJ    = JI + 1                                                            
         NI    = NT(JI) - JDEB + 1                                                 
         NT(IJ)= LA(NI)                                                            
         NT(JI)= LB(NI)                                                            
         JI    = JI + 1                                                            
   40    IF (JI .NE. 0) GO TO  20                                
         IF (J .GT. JFIN-KPART+1) GO TO  60                                
         DO   KK = 1,KPT                                                       
            JPP   = IW(KK)                                                            
            IV(JPP)= J                                                                
	 ENDDO
   60    I1    = IW(1)                                                             
d67 6
a72 14
      DO 110  IL1 = 1,NKLA1                                                   
         IF (IV(IL1) .EQ. 0) GO TO  90                                
         IF (IV(IL1) .LT. KKK) GO TO  110                               
         IV1   = IV(IL1)                                                           
         IV(IL1)= KKK                                                              
         IL3   = IL1 + 1                                                           
         DO 80  IL2 = IL3,NKLA                                                   
            IF (IV(IL2) .NE. IV1) GO TO  80                                
            IV(IL2)= IV(IL1)                                                          
   80    CONTINUE                                                                
         GO TO  100 
                              
   90    IV(IL1)= KKK                                                              
  100 KKK   = KKK + 1
d74 10
a83 1
  110 CONTINUE                                                                
@


1.5
log
@*** empty log message ***
@
text
@d39 1
a39 1
     #          NT(NKLA),IW(NKLA)                                               
@


1.4
log
@nosave
@
text
@a95 1
      RETURN                                                                 
@


1.3
log
@CNO_SAVE
@
text
@a37 6

CNO_SAVE 

C     I DO NOT KNOW IF SAVE IS NEEDED FEB 99 al
      SAVE
                                                                              
@


1.2
log
@*** empty log message ***
@
text
@d36 1
d38 6
a43 1
C                                                                               
d46 1
d49 33
a81 30
C                                                                               
C......... INDICATOR IV(NKLA) OF THE AGGREGATION IN KPART CLASSES               
C                                                                               
        DO   L = 1,NKLA                                                       
      IV(L) = 0 
	ENDDO                                                                
        DO   J = JDEB,JFIN                                                    
      NT(1) = J                                                                 
      KPT   = 0                                                                 
      JI    = 1                                                                 
   20   IF (NT(JI) .GT. NKLA)          GO TO  30                                
      K     = NT(JI)                                                            
      KPT   = KPT + 1                                                           
      IW(KPT)= K                                                                
      JI    = JI - 1                                                            
                                       GO TO  40                                
   30 IJ    = JI + 1                                                            
      NI    = NT(JI) - JDEB + 1                                                 
      NT(IJ)= LA(NI)                                                            
      NT(JI)= LB(NI)                                                            
      JI    = JI + 1                                                            
   40   IF (JI .NE. 0)                 GO TO  20                                
        IF (J .GT. JFIN-KPART+1)       GO TO  60                                
        DO   KK = 1,KPT                                                       
      JPP   = IW(KK)                                                            
      IV(JPP)= J                                                                
	ENDDO
   60 I1    = IW(1)                                                             
      I2    = IW(KPT)                                                           
   	ENDDO
d84 20
a103 17
        DO 110  IL1 = 1,NKLA1                                                   
        IF (IV(IL1) .EQ. 0)            GO TO  90                                
        IF (IV(IL1) .LT. KKK)          GO TO  110                               
      IV1   = IV(IL1)                                                           
      IV(IL1)= KKK                                                              
      IL3   = IL1 + 1                                                           
        DO 80  IL2 = IL3,NKLA                                                   
        IF (IV(IL2) .NE. IV1)          GO TO  80                                
      IV(IL2)= IV(IL1)                                                          
   80   CONTINUE                                                                
                                       GO TO  100                               
   90 IV(IL1)= KKK                                                              
  100 KKK   = KKK + 1                                                           
  110   CONTINUE                                                                
        IF (IV(NKLA) .EQ. 0)           IV(NKLA) = KKK                           
         RETURN                                                                 
         END                                                                    
@


1.1
log
@Initial revision
@
text
@d45 4
a48 3
        DO 10  L = 1,NKLA                                                       
   10 IV(L) = 0                                                                 
        DO 70  J = JDEB,JFIN                                                    
d65 1
a65 1
        DO 50  KK = 1,KPT                                                       
d67 2
a68 1
   50 IV(JPP)= J                                                                
d71 1
a71 1
   70   CONTINUE                                                                
@
