head	1.9;
access;
symbols
	pre_mrcs:1.9
	healthdept_2018:1.9
	pre_getangas:1.8
	GPL2010:1.8
	pre_GPL2010:1.7
	pre_var_equation:1.7
	pre_fftwrings:1.7
	pre_opfiles:1.7
	src:1.7
	best-code:1.7
	x-named-regs:1.7
	x:1.7
	v13-00:1.7
	pre_GPL:1.5
	prec_CA:1.5
	noindx:1.5
	Bproc:1.5
	oct21:1.4
	last77:1.4;
locks; strict;
comment	@c @;


1.9
date	2018.10.03.14.34.16;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2010.06.24.13.26.56;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.17.20.41.16;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.18.31.39;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.11.10.23.11.20;	author yuchen;	state Exp;
branches;
next	1.4;

1.4
date	97.10.15.14.29.03;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.09.03.15.41.24;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.10.05.16.10.26;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.51;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.9
log
@email_health_dept
@
text
@
C++*******************************************************************
C SHIFTR.FOR
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   SHIFTR:    SHIFT A TWO-DIMENSIONAL  PICTURE  9/26/81 NON-INTEGER SHIFT
C
C       THIS SUBROUTINE WILL SHIFT A TWO-DIMENSIONAL ARRAY OR PICTURE
C       STORED ON LUN1 CIRCULARLY BY SAMS,ROWS;  OUTPUT TO BE FOUND 
C       ON LUN2.
C
C       CALL SHIFTR(LUN1,LUN2,BUF,NSAM,NROW,NNROWS,NNROWE,NNROWK,SAMS,ROWS)
C         LUN1           LOGICAL UNIT NUMBER OF INPUT IMAGE
C         LUN2           LOGICAL UNIT NUMBER OF OUTPUT IMAGE
C         BUF            REAL BUFFER OF SIZE NSAM
C         NSAM,NROW      DIMENSIONS OF IMAGE
C         NNROWS,NNROWE
C         NNROWK         STARTING ROW, ENDING, AND SKIPING FACTOR
C         SAMS,ROWS      SHIFT VECTOR COMPONENTS IN SAMPLE AND ROW DIR.
C
C  JMC, 1/1/87, THIS SUBROUTINE HAS BEEN CHANGED IN ORDER TO ACCEPT
C               A GENERAL VALUE FOR THE STARTING AND ENDING ROWS, AS
C               WELL AS A SKIPPING FACTOR. THIS CHANGES ARE DONE
C               FOR ITS USE IN THE 3-D CASE   
C
C--*******************************************************************

      SUBROUTINE SHIFTR(LUN1,LUN2,NSAM,NROW,NNROWS,NNROWE,NNROWK,
     1                  SAMS,ROWS)
      COMMON BUF(1)

	NSAMS=SAMS
	NROWS=ROWS
	DX=SAMS-NSAMS
	IF(SAMS.LT.0.)DX= 1+DX
	DY=ROWS-NROWS
	IF(ROWS.LT.0.)DY= 1+DY

	C1 = (1-DX) * (1-DY)
	C2 = DX * (1-DY)
	C3 = DY * (1-DX)
	C4 = DX * DY
C	WRITE(5,999)DX,DY,C1,C2,C3,C4
C999	FORMAT(6F10.4)
 
        NS = MOD(NSAMS,NSAM)+1
        NR = MOD(NROWS,NROW)+1
	IF(SAMS.LT.0.)NS=NS-1
	IF(ROWS.LT.0.)NR=NR-1

C ADDRESSES USED
        NA = NSAM+1
C NA = INPUT BUFFER I OFFSET +1
	NA3 = 3*NSAM+1
C NA3= INPUT BUFFER II OFFSET +1
	NA5 = 5*NSAM
C NA5=OUTPUT BUFFER OFFSET
	NA1= 2*NSAM+1
        NA2 = 3*NSAM
        IF(NR.LT.0) NR = NR+NROW
C NA6=OUTPUT BUFFER FOR A THREE-DIMENSIONAL SHIFT
        NA6=6*NSAM 

C INITIALIZE FIRST BUFFER LINE
        CALL REDLIN(LUN1,BUF(NA),NSAM,NNROWE)
	CALL REDLIN(LUN1,BUF(1),NSAM,NNROWE)
	CALL REDLIN(LUN1,BUF(NA+NSAM),NSAM,NNROWE)

	I=0
        NNNROW=NNROWS-NNROWK
80	I=I+1
        NNNROW=NNNROW+NNROWK
	NOFF1=NA
	NOFF2=NA3
	IF(MOD(I,2).EQ.0) NOFF2=NA
	IF(MOD(I,2).EQ.0) NOFF1=NA3
	NO1 = NOFF1-NS
	NO2 = NOFF2-NS

C NOFF1  POSITION OF FIRST ELEMENT OF OLD LINE
C NOFF2  POSITION OF FIRST ELEMENT OF NEW LINE
	CALL REDLIN(LUN1,BUF(NOFF2),NSAM,NNNROW)
C FOR NS=0, TWO NEIGHBORS ON EITHER END OF BUFFER ARE NEEDED
	BUF(NOFF2+NSAM)=BUF(NOFF2)
	BUF(NOFF2-1)=BUF(NOFF2+NSAM-1)

        I1 = I+NR-1
        IF(I1.GT.NROW) I1=I1-NROW
        IF(I1.LT.1)I1=I1+NROW
        NNROI1=NNROWS+(I1-1)*NNROWK
        IF(NS)100,145,130
100     NS1 = -NS
        DO  K = 1,NS1+1
	BUF(NOFF2+NSAM+K-1) = BUF(NOFF2+K-1)
	ENDDO
        GOTO 145

130     NS1 = NS
        DO  K = 1,NS1+1
        BUF(NOFF2-K) = BUF(NOFF2+NSAM-K)
	ENDDO
145	DO  K=1,NSAM
        BUF(NA5+K) = BUF(NO2+K-1)*C2 + BUF(NO2+K)*C1 + BUF(NO1+K-1)*C4
     1               +  BUF(NO1+K)*C3
        ENDDO
        CALL WRTLIN(LUN2,BUF(NA5+1),NSAM,NNROI1)
C	IF(I.LT.5) WRITE(3,201)(BUF(K),K=1,6*NSAM)
C201	FORMAT(16F7.3)
	IF(I.LT.NROW)GOTO 80
	END
@


1.8
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.7
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.6
log
@HRI GPL License used
@
text
@a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a29 1
C **************************************************************************
@


1.5
log
@a
@
text
@d5 1
d7 1
d9 24
d39 1
@


1.4
log
@*** empty log message ***
@
text
@d40 1
a40 1
CNO_SAVE
@


1.3
log
@nosave
@
text
@d102 3
a104 2
        DO 110 K = 1,NS1+1
110	BUF(NOFF2+NSAM+K-1) = BUF(NOFF2+K-1)
d108 5
a112 4
        DO 140 K = 1,NS1+1
140     BUF(NOFF2-K) = BUF(NOFF2+NSAM-K)
145	DO 150 K=1,NSAM
150     BUF(NA5+K) = BUF(NO2+K-1)*C2 + BUF(NO2+K)*C1 + BUF(NO1+K-1)*C4
d114 1
@


1.2
log
@non f77 continuation fixed
@
text
@a38 1

d40 1
a40 1

d114 1
a114 2
201	FORMAT(16F7.3)

a115 2

        RETURN
@


1.1
log
@Initial revision
@
text
@d1 1
d3 1
a3 1
C $$ SHIFTR.FOR
d15 1
a15 1
C $$ SHIFTR:    SHIFT A TWO-DIMENSIONAL  PICTURE  9/26/81 NON-INTEGER SHIFT
d36 1
a36 2
C
C
d39 1
d41 1
a41 3
C
C
C
d48 1
a48 1
C
d55 3
a57 3
C 
      NS = MOD(NSAMS,NSAM)+1
      NR = MOD(NROWS,NROW)+1
d60 1
a60 1
C
d62 1
a62 1
      NA = NSAM+1
d69 2
a70 2
      NA2 = 3*NSAM
      IF(NR.LT.0) NR = NR+NROW
d73 1
a73 1
C
d75 1
a75 1
      CALL REDLIN(LUN1,BUF(NA),NSAM,NNROWE)
d78 1
a78 1
C
d89 1
a89 1
C
d96 8
a103 8
C
      I1 = I+NR-1
      IF(I1.GT.NROW) I1=I1-NROW
	IF(I1.LT.1)I1=I1+NROW
      NNROI1=NNROWS+(I1-1)*NNROWK
      IF(NS)100,145,130
100   NS1 = -NS
      DO 110 K = 1,NS1+1
d105 5
a109 4
      GOTO 145
130   NS1 = NS
      DO 140 K = 1,NS1+1
140   BUF(NOFF2-K) = BUF(NOFF2+NSAM-K)
d111 2
a112 2
150   BUF(NA5+K) = BUF(NO2+K-1)*C2 + BUF(NO2+K)*C1 + BUF(NO1+K-1)*C4
	1 + BUF(NO1+K)*C3
d114 1
a114 2
C	IF(I.LT.5)
C	1WRITE(3,201)(BUF(K),K=1,6*NSAM)
d116 1
d118 2
@
