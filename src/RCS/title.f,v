head	1.16;
access;
symbols
	healthdept_2018:1.16
	pre_getangas:1.14
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.13
	pre_fftwrings:1.13
	pre_opfiles:1.13
	src:1.13
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.11
	prec_CA:1.11
	noindx:1.11
	Bproc:1.11
	oct21:1.11
	last77:1.10;
locks; strict;
comment	@c @;


1.16
date	2018.10.03.14.34.24;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2013.09.03.16.42.48;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.24.13.27.07;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.20.28.42;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.18.20.07;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.06.03.19.29.37;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.12.12.17.40.44;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	97.07.16.13.50.15;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	97.06.26.15.15.52;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.08.20.18.01.32;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.08.13.18.54.52;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	94.11.17.17.22.34;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	94.11.17.15.33.46;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	94.11.09.20.08.28;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.11.49;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.20;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.16
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C TITLE.F  -- CREATED NOV 9 1987     ARDEAN LEITH
C             LONG FILE NAMES FEB 89 ARDEAN LEITH
C             REWRITTEN JUNE 1999    ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2013  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C     TITLE(LUN,CTITLE,LENTIT,SAYIT,IRTFLG)
C
C     PURPOSE:   ALTER TITLE IN HEADER OF SPIDER FILE
C
C     PARAMETERS: LUN       LOGICAL UNIT NUMBER OF TITLE FILE
C                 CTITLE    NEW TITLE
C                 LENTIT    NEW TITLE LENGTH
C                 SAYIT     LOGICAL FLAG TO ECHO NEW TITLE
C                 IRTFLG    UNUSED
C
C--*******************************************************************

        SUBROUTINE TITLE(LUN,CTITLE,LENTIT,SAYIT,IRTFLG)

	INCLUDE 'CMBLOCK.INC' 

        CHARACTER *(*) CTITLE
        LOGICAL        SAYIT

C       PUT NEW TITLE IN CURRENT HEADER OBJECT
        CALL LUNSETTITLE(LUN,CTITLE,IRTFLG)

C       REPLACE CURRENT HEADER OBJECT BACK IN THE CURRENT FILE
        CALL LUNWRTCURHED(LUN,IRTFLG)

        IF (SAYIT) THEN
           LENT = MIN(LENTIT,40)
           WRITE(NOUT,90) CTITLE(1:LENT)
90         FORMAT('  NEW TITLE: ',A)

           IF (LENTIT > 40) THEN
C             WRITE NEXT 60 CHAR OF TITLE
              LENT = MIN(LENTIT-40,60)
              WRITE(NOUT,91) CTITLE(40:40+LENT)
91            FORMAT('            ',A)

              IF (LENTIT > 100) THEN
C                WRITE LAST 60 CHAR OF TITLE
                 LENT = MIN(LENTIT-100,60)
                 WRITE(NOUT,91) CTITLE(100:100+LENT)
              ENDIF
           ENDIF
        ENDIF

        END

@


1.15
log
@output formatting
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.14
log
@GPL_2010
@
text
@d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d58 1
a58 1
90         FORMAT(' NEW TITLE: ',A)
d60 1
a60 1
           IF (LENTIT .GT. 40) THEN
d66 1
a66 1
              IF (LENTIT .GT. 100) THEN
a73 1
        RETURN
@


1.13
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.12
log
@HRI GPL License used
@
text
@a2 1
C++*************************************************************************
a8 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.11
log
@rewritten with lunset
@
text
@d2 1
d11 24
@


1.10
log
@added NOSTOP parameter to redhed call
@
text
@d4 3
a6 1
C TITLE.FOR -- CREATED NOV 9 1987            LONG FILE NAMES FEB 89 al
d8 8
a15 10
C **************************************************************************
C *  AUTHOR:  ARDEAN LEITH                                                 *
C *  PART OF SPIDER - MODULAR IMAGE PROCESSING SYSTEM.                     *
C *  COPYRIGHT (C)1987 , WADSWORTH CENTER FOR LABORATORIES AND             *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d17 1
a17 1
C     TITLE(LUN,NSAM)
d19 1
a19 1
C     PURPOSE:   ALTER TITLE OF SPIDER FILE
d21 5
a25 2
C     PARAMETERS:     LUN       LOGICAL UNIT NUMBER OF OPENED FILE
C                     NSAM      FILE RECORD LENGTH 
d29 1
a29 1
        SUBROUTINE TITLE(LUN,NSAM)
a31 1
CNO_SAVE
d33 2
a34 5
        COMMON BUF(17000)
 
C       THE 160 CHAR. TITLE NEEDS 40 FLOATING POINT VARIABLES IN BUF
        CHARACTER *160 LLINE
        EQUIVALENCE    (BUF(217),LLINE)
d36 2
a37 2
C       READ HEADER INTO BUF
        CALL REDHED(LUN,BUF,17000,NSAM,0,IRTFLG)
d39 2
a40 1
C       THE TITLE IS READ INTO CTIT BY A PREVIOUS SEQUENCE
d42 18
a59 20

#if defined(__osf__) && defined(osf_ieee)
C       ALPHA OSF (UNIX)
C       NOTE:  ALPHA NUMERICAL DATA (ABCD) WILL BE WRITTEN (DCBA)
        CALL FLIPBYTES(CTIT,160,IRTFLG)
#endif

C       COPY CTIT INTO CORRECT LOCATION OF HEADER BUFFER
        DO  I = 1,160
           LLINE(I:I) = CTIT(I:I)
        ENDDO

C       REPLACE THE HEADER BACK IN THE FILE
        CALL WRTHED(LUN,BUF,NSAM,IRTFLG)

c       LENTIT = lnblnk(LLINE)
c       IF (LENTIT .LE. 0) LENTIT = LEN(LLINE)

c       WRITE(NOUT,90)(LLINE(I:I),I=1,LENTIT)
90      FORMAT(' NEW TITLE: ',40A1,:,/,1X,80A1,:,/,1X,40A1,/)
@


1.9
log
@CNO_SAVE
@
text
@d38 1
a38 1
        CALL REDHED(LUN,BUF,17000,NSAM,IRTFLG)
@


1.8
log
@*** empty log message ***
@
text
@d29 1
@


1.7
log
@used flipbytes
@
text
@d32 1
d34 1
a34 5
        EQUIVALENCE (BUF(217),LLINE)

        CHARACTER      NULL

        NULL = CHAR(0)
d39 1
a39 3
C       THE TITLE IS READ INTO ITIT BY THE PREVIOUS FILERD SEQUENCE
        LENTIT = INDEX(CTIT,NULL)
        IF (LENTIT .LE. 0) LENTIT = LEN(CTIT)
a40 1
C       THE 160 CHAR. TITLE NEEDS 40 FLOATING POINT VARIABLES IN BUF
d48 1
d53 1
a53 1
C       REPLACE THE LABEL BACK IN THE FILE
d56 4
a59 1
        WRITE(NOUT,90)(CTIT(I:I),I=1,LENTIT)
@


1.6
log
@used wrthed & redhed, removed short label capabilties
@
text
@d4 2
a5 2
C TITLE.FOR -- CREATED NOV 9 1987
C                                    LONG FILE NAMES FEB 89 al
d35 1
a35 1
        CHARACTER      NULL, TDAT
d51 1
a51 9
     
        DO K = 1, 160, 4
           TDAT = CTIT(K:K)
           CTIT(K:K) = CTIT(K+3:K+3)
           CTIT(K+3:K+3) = TDAT
           TDAT = CTIT(K+1:K+1)
           CTIT(K+1:K+1) = CTIT(K+2:K+2)
           CTIT(K+2:K+2) = TDAT
        ENDDO
@


1.5
log
@added if defined(__osf__) && defined()
@
text
@a19 2
C                CAN ALSO PUT TILT ANGLES INTO TITLE OF OLD FORMAT
C                SPIDER FILES
a27 1
#ifdef SP_UNIX
d29 1
a29 4
#else
	INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif
        COMMON /LUNARA/ LUNARA(100)
a30 1
        COMMON /IOERR/IERR
a31 3
        LOGICAL*2 L2TIT(20)
        EQUIVALENCE (CTIT,L2TIT)

d39 6
a44 2
        LABREC      = LUNARA(LUN)
        LUNARA(LUN) = 1
d46 2
a47 26
        IERR = 0
        CALL REDLIN(LUN,BUF,NSAM,0)
        IF (IERR .NE. 0) THEN
          WRITE(NOUT,*) ' *** ERROR READING FILE'
          LUNARA(LUN) = LABREC
          RETURN
        ENDIF
                 
        IF (BUF(1) .LT. 0.0) THEN
C         NEW FORMAT LABEL, READ IN REST OF LABEL
          ILOC = NSAM + 1
          DO 300 I = 1,LABREC-1
            CALL REDLIN(LUN,BUF(ILOC),NSAM,I)
            ILOC = ILOC + NSAM
300       CONTINUE

C         THE TITLE IS READ INTO ITIT BY THE PREVIOUS FILERD SEQUENCE
          LENTIT = INDEX(CTIT,NULL)
          IF (LENTIT .LE. 0) LENTIT = LEN(CTIT)

C         THE 160 CHAR. TITLE NEEEDS 40 FLOATING POINT VARIABLES IN BUF

c     alpha osf (unix)
c
c     note that the alpha numerical data (abcd) will be written (dcba)
c     
d49 11
a59 8
          DO K = 1, 160, 4
            TDAT = CTIT(K:K)
            CTIT(K:K) = CTIT(K+3:K+3)
            CTIT(K+3:K+3) = TDAT
            TDAT = CTIT(K+1:K+1)
            CTIT(K+1:K+1) = CTIT(K+2:K+2)
            CTIT(K+2:K+2) = TDAT
          END DO
d62 3
a64 37
          DO 1020 I = 1,160
             LLINE(I:I) = CTIT(I:I)
1020      CONTINUE

C         REPLACE THE LABEL BACK IN THE FILE
          ILOC = 1
          DO 1200 I =0,LABREC-1
            CALL WRTLIN(LUN,BUF(ILOC),NSAM,I)
            ILOC = ILOC + NSAM
1200      CONTINUE
          LUNARA(LUN) = LABREC

        ELSE

C         CHANGE OLD FILE LABEL FORMAT TITLE

          IF (NSAM .LE. 20) THEN
            WRITE(NOUT,*) ' *** FILE TOO SMALL FOR TITLE'
            RETURN

	  ELSE
C           NOTE: TITLE LENGTH IS LIMTED TO:  NSAM - 20
            IF (NSEL(1) .NE. 0) THEN
C             REGISTERS SHOULD BE ENCODED INTO THE TITLE
              X2 = 0.0
              X1 = PARAM(NSEL(1))
              IF (NSEL(2) .NE. 0) X2=PARAM(NSEL(2))

              WRITE(CTIT(8:),1503) X1,X2
1503          FORMAT(1X ,'(',F7.2,',',F7.2,')')
            ENDIF
          ENDIF

          DO 3218 I=1,20
3218      BUF(20+I)=L2TIT(I)

          LENTIT = 40
d66 2
a67 2
          CALL WRTLIN(LUN,BUF,NSAM,0)
        ENDIF
@


1.4
log
@fixed ifdef for cpp
@
text
@d78 1
a78 1
#ifdef __osf__ && osf_ieee
@


1.3
log
@add __osf__ cpp option to port spider to DEC/OSF1(unix) machine
@
text
@d78 1
a78 1
#if __osf__ && osf_ieee
@


1.2
log
@cpp_lines_added
@
text
@d45 1
a45 1
        CHARACTER      NULL
d73 15
@


1.1
log
@Initial revision
@
text
@d30 3
d34 1
@
