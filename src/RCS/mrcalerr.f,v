head	1.13;
access;
symbols
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.11
	pre_opfiles:1.11
	src:1.11
	best-code:1.11
	x-named-regs:1.11
	x:1.11
	v13-00:1.11
	pre_GPL:1.10
	prec_CA:1.8
	noindx:1.8
	Bproc:1.8
	oct21:1.6
	last77:1.6;
locks; strict;
comment	@c @;


1.13
date	2010.06.24.13.26.13;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2008.12.02.19.44.19;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.20.55.02;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2004.03.11.16.21.09;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2004.03.11.14.16.13;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.12.30.21.42.39;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	99.12.07.16.13.31;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.03.19.19.50.24;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.10.10.17.47.41;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.09.02.15.05.44;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	95.10.10.16.04.54;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.07.22.20.29.50;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.15;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.13
log
@GPL_2010
@
text
@
C ++********************************************************************
C                                                                      *
C  MRCALERR                                                                    *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  MRCALERR(XYPTS,RFPTS,ERTOT,ERVW,ERPT,PTACTIVE,NUMPTS,NTVW,NTPT)                                                                  *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE MRCALERR(XYPTS,RFPTS,ERTOT,ERVW,ERPT,
     &                 PTACTIVE,NUMPTS,NTVW,NTPT)

C       CALCULATE ALL POSSIBLE ERRORS

        PARAMETER (LV=300)
        PARAMETER (LS=256)

        LOGICAL           PTACTIVE(LS,LV)
        INTEGER           NUMPTS(LV)
        DIMENSION         XYPTS(2,LS,LV),RFPTS(2,LS,LV)
        DIMENSION         ERVW(LV),ERPT(LS),NERPT(LS)
	DOUBLE PRECISION  ERTVR,ERTOT

       ERTOT = 0.0D0
C      ERTVR = 0.0D0

      NTE = 0
      DO IPT=1,NTPT
         ERPT(IPT)  = 0.0
         NERPT(IPT) = 0
      ENDDO

      DO IVIEW=1,NTVW
          ERVW(IVIEW) = 0.0

          DO IPT=1,NTPT
            IF (PTACTIVE(IPT,IVIEW)) THEN
              ERNOW = (XYPTS(1,IPT,IVIEW) - RFPTS(1,IPT,IVIEW))**2 +
     &                (XYPTS(2,IPT,IVIEW) - RFPTS(2,IPT,IVIEW))**2
              ERVW(IVIEW) = ERVW(IVIEW) + ERNOW
              ERPT(IPT)   = ERPT(IPT)   + ERNOW
              NERPT(IPT)  = NERPT(IPT)  + 1
              ERTOT       = ERTOT + ERNOW
C             ERTVR       = ERTVR + ERNOW * ERNOW
              NTE         = NTE   + 1
            ENDIF
         ENDDO
         ERVW(IVIEW) = SQRT(ERVW(IVIEW) / NUMPTS(IVIEW))
      ENDDO

      DO  IPT=1,NTPT
         ERPT(IPT) = SQRT(ERPT(IPT) / NERPT(IPT))
      ENDDO

      ERTOT = SQRT(ERTOT/NTE)

      END

C     UNUSED BELOW -------------------------------------------
C     ERTVR=DSQRT((ERTVR-ERTOT*ERTOT*NTE)/(NTE-1))
C     PRINT *,'  AVERAGE AND SIGMA OF ERROR PER POINT ',ERTOT,ERTVR
C     DETECT POINTS WITH ERROR OVER 3*SIGMA
C      DO 700 IVIEW=1,NTVW
C          DO 700 IPT=1,NTPT
C            IF(PTACTIVE(IPT,IVIEW)) THEN
C              ERNOW= SQRT(
C     &               (XYPTS(1,IPT,IVIEW)-RFPTS(1,IPT,IVIEW))**2 +
C     &               (XYPTS(2,IPT,IVIEW)-RFPTS(2,IPT,IVIEW))**2    )
C		IF(ERNOW.GT.3*ERTVR)  THEN
C		PRINT *,' POINT #',IPT,' VIEW #',IVIEW,' ERROR=',ERNOW
C		ENDIF
C	    ENDIF
C700	CONTINUE

@


1.12
log
@mk xypts in 2 parameters mralign bug
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@GPL License fixed
@
text
@d4 1
a4 1
C                                                                      *
d32 1
a32 1
C                                                                      *
a37 1
C        0         2         3         4         5         6         7 *
d41 2
a42 1
        SUBROUTINE MRCALERR(XYPTS,RFPTS,ERTOT,ERVW,ERPT)
d48 3
a50 2
        LOGICAL*1   PTACTIVE(LS,LV),PARAMQ(4)
        COMMON /GENERAL/PTACTIVE,NUMPTS(LV),NTVW,NTPT,CIR(2),PARAMQ
d55 2
a56 2
       ERTOT=0.0D0
C      ERTVR=0.0D0
d58 2
a59 2
      NTE=0
      DO  IPT=1,NTPT
d64 3
a66 2
      DO  IVIEW=1,NTVW
        ERVW(IVIEW)=0.0
d68 9
a76 9
            IF(PTACTIVE(IPT,IVIEW)) THEN
              ERNOW= (XYPTS(1,IPT,IVIEW)-RFPTS(1,IPT,IVIEW))**2 +
     &               (XYPTS(2,IPT,IVIEW)-RFPTS(2,IPT,IVIEW))**2
              ERVW(IVIEW)=ERVW(IVIEW)+ERNOW
              ERPT(IPT)=ERPT(IPT)+ERNOW
              NERPT(IPT)=NERPT(IPT)+1
              ERTOT=ERTOT+ERNOW
C             ERTVR=ERTVR+ERNOW*ERNOW
              NTE=NTE+1
d78 2
a79 2
      ENDDO
      ERVW(IVIEW)=SQRT(ERVW(IVIEW)/NUMPTS(IVIEW))
d83 1
a83 1
         ERPT(IPT)=SQRT(ERPT(IPT)/NERPT(IPT))
d86 1
a86 1
      ERTOT=SQRT(ERTOT/NTE)
d88 1
a88 2
C     ERTVR=DSQRT((ertvr-ertot*ertot*nte)/(nte-1))
c     print *,'  Average and sigma of error per point ',ertot,ertvr
d90 15
a104 1
cc    detect points with error over 3*sigma
a105 13
c      DO 700 IVIEW=1,NTVW
c          DO 700 IPT=1,NTPT
c            IF(PTACTIVE(IPT,IVIEW)) THEN
c              ERNOW= SQRT(
c     &               (XYPTS(1,IPT,IVIEW)-RFPTS(1,IPT,IVIEW))**2 +
c     &               (XYPTS(2,IPT,IVIEW)-RFPTS(2,IPT,IVIEW))**2    )
c		if(ernow.gt.3*ertvr)  then
c		print *,' point #',ipt,' view #',iview,' error=',ernow
c		endif
c	    endif
c700	continue

      END
@


1.10
log
@MAXKEY, cosmetic
@
text
@d7 23
a29 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.9
log
@ls-->256
@
text
@d25 1
a25 1
      SUBROUTINE MRCALERR(XYPTS,RFPTS,ERTOT,ERVW,ERPT)
d27 1
a27 1
c calculate all possible errors
d31 4
a34 9
        PARAMETER (MAXREG=7)
        PARAMETER (MAXKEY=100)
        PARAMETER (MAXLOOP=999)
        REAL MAXPER
        PARAMETER (MAXPER=1.0e-6)
      LOGICAL*1   PTACTIVE(LS,LV),PARAMQ(4)
      COMMON /GENERAL/PTACTIVE,NUMPTS(LV),NTVW,NTPT,CIR(2),PARAMQ
      DIMENSION         XYPTS(2,LS,LV),RFPTS(2,LS,LV)
      DIMENSION         ERVW(LV),ERPT(LS),NERPT(LS)
d36 2
a37 2
c
      ERTOT=0.0D0
d39 1
d42 2
a43 2
        ERPT(IPT)=0.0
        NERPT(IPT)=0
d48 1
a48 1
          DO  IPT=1,NTPT
d56 1
a56 1
C              ERTVR=ERTVR+ERNOW*ERNOW
d62 1
d64 1
a64 1
       ERPT(IPT)=SQRT(ERPT(IPT)/NERPT(IPT))
d66 1
d68 6
a73 5
C	ERTVR=DSQRT((ertvr-ertot*ertot*nte)/(nte-1))
c	print *,'  Average and sigma of error per point ',ertot,ertvr
cc
cc detect points with error over 3*sigma
cc
d85 1
@


1.8
log
@*** empty log message ***
@
text
@d30 1
a30 1
        PARAMETER (LS=100)
@


1.7
log
@header
@
text
@d54 2
a55 3
              ERNOW= SQRT(
     &               (XYPTS(1,IPT,IVIEW)-RFPTS(1,IPT,IVIEW))**2 +
     &               (XYPTS(2,IPT,IVIEW)-RFPTS(2,IPT,IVIEW))**2    )
d64 1
a64 1
      ERVW(IVIEW)=ERVW(IVIEW)/NUMPTS(IVIEW)
d67 1
a67 1
       ERPT(IPT)=ERPT(IPT)/NERPT(IPT)
d69 1
a69 1
	ERTOT=ERTOT/NTE
@


1.6
log
@*** empty log message ***
@
text
@d1 24
d26 1
@


1.5
log
@*** empty log message ***
@
text
@d2 1
a2 1
c calculate all the possible errors
a15 1
CNO_SAVE
@


1.4
log
@ERTOT in DP
@
text
@d21 1
a21 1
      DO 5 IPT=1,NTPT
d23 2
a24 1
5       NERPT(IPT)=0
d26 1
a26 1
      DO 100 IVIEW=1,NTVW
d28 1
a28 1
          DO 105 IPT=1,NTPT
d40 1
a40 1
 105      CONTINUE
d42 4
a45 3
 100  CONTINUE
      DO 205 IPT=1,NTPT
 205  ERPT(IPT)=ERPT(IPT)/NERPT(IPT)
@


1.3
log
@nosave
@
text
@d15 1
d18 2
a19 2
      ERTOT=0.0
      ERTVR=0.0
d36 1
a36 1
              ERTVR=ERTVR+ERNOW*ERNOW
d44 2
a45 2
      ERTOT=ERTOT/NTE
	ERTVR=sqrt((ertvr-ertot*ertot*nte)/(nte-1))
@


1.2
log
@LV set to 300 (number of projections)
@
text
@d15 1
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
        PARAMETER (LV=100)
@
