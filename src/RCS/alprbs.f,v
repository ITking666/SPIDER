head	1.16;
access;
symbols
	pre_getangas:1.15
	GPL2010:1.15
	pre_GPL2010:1.14
	pre_var_equation:1.14
	pre_fftwrings:1.14
	pre_opfiles:1.14
	src:1.14
	best-code:1.14
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.12
	prec_CA:1.12
	noindx:1.12
	Bproc:1.11
	oct21:1.5
	last77:1.4;
locks; strict;
comment	@c @;


1.16
date	2013.01.10.15.31.46;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.24.13.25.01;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.20.08.27;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.18.03.06;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2001.03.28.15.06.42;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.04.20.37.21;	author bimal;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.03.21.06.03;	author bimal;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.03.15.28.04;	author bimal;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.15.20.33.00;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	2000.01.18.20.45.54;	author bimal;	state Exp;
branches;
next	1.6;

1.6
date	99.12.07.15.14.50;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.07.30.15.12.41;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	99.02.26.21.58.46;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.10.01.20.16.38;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.01.31.16.12.33;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.13;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.16
log
@FOR USE WITH SPIDER (e.g. NOT!! FFTW3) FFT
comments and cosmetic only
@
text
@C ++********************************************************************
C                                                                      *
C   ALPRBS.F                                                           *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                       
C  ALPRBS(NUMR,NRING,LCIRC,MODE)                                                                     *
C                                                                       
C  PURPOSE: APPEARS TO EXTRACT CIRCULAR RINGS AND POSTITION
C           IN A LINEAR ARRAY THAT HOLDS RINGS CONCATENATED TOGETHER.
C           OUTPUT IS DEPENDENT ON NUMBER OF RINGS 
C           FOR USE WITH SPIDER (e.g. NOT!! FFTW3) FFT.
C                                                                       
C  PARAMETERS: NUMR(1,I) - RING NUMBER                      (SENT)
C              NUMR(2,I) - BEGINNING IN CIRC                (RET.)
C              NUMR(3,I) - LENGTH IN CIRC                   (RET.)
C              NRING                                        (SENT)
C              LCIRC - TOTAL LENGTH OF CIRC.                (RET.)
C
C***********************************************************************

        SUBROUTINE  ALPRBS(NUMR,NRING,LCIRC,MODE)

        INCLUDE 'CMLIMIT.INC'

        INTEGER      NUMR(3,NRING)
        REAL*8       PI
        CHARACTER*1  MODE

C       PREPARATION OF PARAMETERS

        PI = 4.0*DATAN(1.0D0)
        IF (MODE.EQ.'F')  PI=2*PI

        LCIRC = 0

        DO I=1,NRING
           JP = PI*NUMR(1,I)
           IP = 2**LOG2(JP)

C          IF CLOSE TO BOUNDARY OF POWER OF TWO, GOTO NEXT POWER
           IF (I.LT.NRING .AND. JP.GT.IP+IP/2)  IP=MIN0(MAXFFT,2*IP)

C          LAST RING OVERSAMPLED TO ALLOW HIGHER ACCURACY
C          OF PEAK LOCATION (?).
           IF (I.EQ.NRING .AND. JP.GT.IP+IP/5)  IP=MIN0(MAXFFT,2*IP)

C          ALL THE RINGS ARE POWER-OF-TWO.
           NUMR(3,I) = IP

           IF (I .EQ. 1)  THEN
              NUMR(2,1) = 1
           ELSE
              NUMR(2,I) = NUMR(2,I-1)+NUMR(3,I-1)
           ENDIF

           LCIRC = LCIRC + IP
        ENDDO 

        END
@


1.15
log
@GPL_2010
@
text
@d26 1
a26 1
C                                                                      *
d28 2
a29 2
C                                                                      *
C  PURPOSE: APPEARS TO CIRCULAR RINGS, POSTITIONED
d32 7
a38 8
C                                                                      *
C  PARAMETERS:   NUMR(1,I) - RING NUMBER                      (SENT)
C                NUMR(2,I) - BEGINNING IN CIRC                (RET.)
C                NUMR(3,I) - LENGTH IN CIRC                   (RET.)
C                NRING                                        (SENT)
C                LCIRC - TOTAL LENGTH OF CIRC.                (RET.)
C
C IMAGE_PROCESSING_ROUTINE
d51 1
d56 1
d60 2
d63 2
a64 1
C          LAST RING SHOULD BE OVERSAMPLED TO ALLOW HIGHER ACCURACY
d67 2
d70 2
a71 1
           IF (I.EQ.1)  THEN
d76 1
d79 1
@


1.14
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.13
log
@HRI GPL License used
@
text
@a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.12
log
@comments added
@
text
@d7 24
@


1.11
log
@replaced log2_p with log2
@
text
@d14 1
d16 3
d20 5
a24 7
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:                                                         *
C  NUMR(1,I) - ring number
C  NUMR(2,I) - beginning in CIRC
C  NUMR(3,I) - length in CIRC
C  LCIRC - total length of CIRC
a27 1
C        1         2         3         4         5         6         7
d33 3
a35 2
        INTEGER  NUMR(3,NRING)
        REAL*8  PI
d37 6
a42 4
C  PREPARATION OF PARAMETERS
        PI=4.0*DATAN(1.0D0)
        IF(MODE.EQ.'F')  PI=2*PI
        LCIRC=0
d44 9
a52 9
           JP=PI*NUMR(1,I)
           IP=2**LOG2(JP)
           IF(I.LT.NRING.AND.JP.GT.IP+IP/2)  IP=MIN0(MAXFFT,2*IP)
C  Last ring should be oversampled to allow higher accuracy
C  of peak location (?).
           IF(I.EQ.NRING.AND.JP.GT.IP+IP/5)  IP=MIN0(MAXFFT,2*IP)
           NUMR(3,I)=IP
           IF(I.EQ.1)  THEN
              NUMR(2,1)=1
d54 1
a54 1
              NUMR(2,I)=NUMR(2,I-1)+NUMR(3,I-1)
d56 1
a56 1
           LCIRC=LCIRC+IP
@


1.10
log
@used maxfft
@
text
@d41 1
a41 1
           IP=2**LOG2_P(JP)
@


1.9
log
@1-D FFT size increased
@
text
@d31 1
d42 1
a42 1
           IF(I.LT.NRING.AND.JP.GT.IP+IP/2)  IP=MIN0(32768,2*IP)
d45 1
a45 1
           IF(I.EQ.NRING.AND.JP.GT.IP+IP/5)  IP=MIN0(32768,2*IP)
@


1.8
log
@*** empty log message ***
@
text
@d41 1
a41 1
           IF(I.LT.NRING.AND.JP.GT.IP+IP/2)  IP=MIN0(8192,2*IP)
d44 1
a44 1
           IF(I.EQ.NRING.AND.JP.GT.IP+IP/5)  IP=MIN0(8192,2*IP)
@


1.7
log
@cosmetic
@
text
@a33 1

a34 1

a41 1

a43 1

@


1.6
log
@header
@
text
@a0 1

d3 1
a3 1
C                                                                      *
d24 3
d29 1
a29 1
	SUBROUTINE  ALPRBS(NUMR,NRING,LCIRC,MODE)
d31 3
a33 3
	INTEGER  NUMR(3,NRING)
	REAL*8  PI
	CHARACTER*1  MODE
d37 7
a43 7
	PI=4.0*DATAN(1.0D0)
	IF(MODE.EQ.'F')  PI=2*PI
	LCIRC=0
	DO I=1,NRING
	 JP=PI*NUMR(1,I)
	 IP=2**LOG2_P(JP)
	 IF(I.LT.NRING.AND.JP.GT.IP+IP/2)  IP=MIN0(8192,2*IP)
d48 10
a57 10
	 IF(I.EQ.NRING.AND.JP.GT.IP+IP/5)  IP=MIN0(8192,2*IP)
	 NUMR(3,I)=IP
	 IF(I.EQ.1)  THEN
	  NUMR(2,1)=1
	 ELSE
	  NUMR(2,I)=NUMR(2,I-1)+NUMR(3,I-1)
	 ENDIF
	 LCIRC=LCIRC+IP
	ENDDO 
	END
@


1.5
log
@*** empty log message ***
@
text
@d1 19
a19 2
	SUBROUTINE  ALPRBS(NUMR,NRING,LCIRC,MODE)
C
d25 4
d32 1
a32 1
C
d34 1
a34 1
C
d42 1
a42 1
C
d45 1
a45 1
C
@


1.4
log
@ff
,.
@
text
@a10 1
CNO_SAVE
d18 3
a20 3
	JP=PI*NUMR(1,I)
	IP=2**LOG2_P(JP)
	IF(I.LT.NRING.AND.JP.GT.IP+IP/2)  IP=MIN0(8192,2*IP)
d25 8
a32 8
	IF(I.EQ.NRING.AND.JP.GT.IP+IP/5)  IP=MIN0(8192,2*IP)
	NUMR(3,I)=IP
	IF(I.EQ.1)  THEN
	NUMR(2,1)=1
	ELSE
	NUMR(2,I)=NUMR(2,I-1)+NUMR(3,I-1)
	ENDIF
	LCIRC=LCIRC+IP
a33 1
c 1	CONTINUE
@


1.3
log
@*** empty log message ***
@
text
@d8 1
a8 1
	INTEGER*2  NUMR(3,NRING)
d21 1
a21 1
	IF(I.LT.NRING.AND.JP.GT.IP+IP/2)  IP=MIN0(1024,2*IP)
d26 1
a26 1
	IF(I.EQ.NRING.AND.JP.GT.IP+IP/5)  IP=MIN0(1024,2*IP)
@


1.2
log
@nosave
@
text
@d18 1
a18 1
	DO  1  I=1,NRING
d34 2
a35 1
 1	CONTINUE
@


1.1
log
@Initial revision
@
text
@d11 1
d21 1
a21 1
	IF(I.LT.NRING.AND.JP.GT.IP+IP/2)  IP=MIN0(512,2*IP)
d24 1
a24 1
C  of peak Location (?).
d26 1
a26 1
	IF(I.EQ.NRING.AND.JP.GT.IP+IP/5)  IP=MIN0(512,2*IP)
@
