head	1.37;
access;
symbols
	pre_mrcs:1.37
	healthdept_2018:1.37
	pre_getangas:1.32
	GPL2010:1.31
	pre_GPL2010:1.30
	pre_var_equation:1.29
	pre_fftwrings:1.27
	pre_opfiles:1.23
	src:1.23
	best-code:1.23
	x-named-regs:1.23
	x:1.23
	v13-00:1.23
	pre_GPL:1.22
	prec_CA:1.19
	noindx:1.15
	Bproc:1.14
	oct21:1.13
	last77:1.12;
locks; strict;
comment	@c @;


1.37
date	2018.10.03.14.34.05;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2015.07.22.13.07.50;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2013.05.15.16.53.07;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2013.04.03.15.01.24;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2011.11.02.18.59.09;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2010.10.27.12.47.04;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2010.06.24.13.25.29;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2010.02.10.13.12.56;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2009.05.29.12.48.00;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2008.06.04.13.12.43;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2007.02.27.15.33.13;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2007.02.27.15.16.41;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2007.02.27.14.21.27;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2007.02.26.18.46.50;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2005.10.17.20.53.12;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2005.05.02.16.59.17;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2004.11.19.18.27.55;	author cyang;	state Exp;
branches;
next	1.20;

1.20
date	2003.10.30.19.59.16;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2003.07.16.14.31.39;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.14.17.25.05;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.03.13.16.26.27;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.03.10.16.53.14;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2002.09.18.15.22.41;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2000.07.03.13.42.45;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	99.06.17.19.11.30;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	99.02.09.14.54.33;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	98.01.26.22.24.14;	author pawel;	state Exp;
branches;
next	1.10;

1.10
date	97.03.21.14.55.23;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	97.02.19.17.17.07;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	96.10.01.15.31.17;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.09.19.18.27.26;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.09.10.15.48.03;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	95.05.23.16.20.44;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	95.05.18.12.53.06;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	94.11.01.21.30.29;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.04.31;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.24;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.37
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C    DRIV3                  CHANGED NDOC        JULY  2000 ArDean Leith
C                           ADDED 'SY DOC'      APRIL 2005 J. LEBARRON       
C                           ADDED 'UD NEXT'     FEB   2007 ArDean Leith       
C                           ADDED 'UD FIND'     JUN   2008 ArDean Leith       
C                           ADDED 'UD MAX'      MAY   2009 ArDean Leith       
C                           ADDED 'UD MAX'      MAY   2009 ArDean Leith       
C                           ADDED 'SD H'        FEB   2010 ArDean Leith       
C                           REMOVED 'SD S'      OCT   2010 ArDean Leith       
C                           ADDED 'SY' GROEL    NOV   2011 ArDean Leith       
C                           REMOVED 'LD *'      MAY   2013 ArDean Leith       
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2015  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   DRIV3(MAXDIM)
C
C   PURPOSE:   MAIN DRIVER FOR ROUTINES REMOVED FROM DRIVER IN MAR 93
C              CONTAINS ROUTINES ACCESSING DOC FILES 
C
C  PARAMETERS: MAXDIM     MAX LENGTH OF COMMON BUFFER
C
C  HANDLES:   'SD', 'UD', 'LD', 'SY'
c
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

        SUBROUTINE DRIV3(MAXDIM)
          
	INCLUDE 'CMLIMIT.INC' 
	INCLUDE 'CMBLOCK.INC' 

        CHARACTER(LEN=MAXNAM)         :: DOCNAM
        CHARACTER(LEN=2)              :: CSYM
        CHARACTER(LEN=1)              :: NULL = CHAR(0)
        LOGICAL                       :: SDNEW,SDCOPY,ENDIT
        LOGICAL                       :: NEWFILE,HEADER

C       SINCE "UD" LEAVES DOC FILE OPEN DO NOT USE NDOC FOR OTHER USES!
        INTEGER, PARAMETER            :: NDOC    = 4
        INTEGER, PARAMETER            :: NDOC2   = 70
        INTEGER, PARAMETER            :: NDOCOUT = 72

C       CARRY OUT THE OPERATION
        SELECT CASE(FCHAR(1:2))

        CASE('SD')
C          SAVE DOC --------------------------------------------- SD **

100  	   IF (FCHAR(4:5) == 'SH') THEN
C             RANDOMLY SHUFFLE LINES IN DOCFILE ------------ SD SHUFFLE
              CALL SHUFFLEDOC(MAXDIM)

           ELSEIF (FCHAR(4:4) == 'S') THEN
C             SORT DOC FILE -------------------------------------- SD S
              !!CALL SORTDOC(MAXDIM)
              CALL ERRT(101,
     &          'OPERATION OBSOLETE, USE <DOC SORT> INSTEAD',IDUM)

           ELSEIF (FCHAR(4:4) == 'C') THEN
C             SAVE DOC CLUSTER FILE ------------------------------ SD C
C             TRANSFER COORDINATES FROM CLUSTER FILE TO DOCUMENT
              CALL RDCLUS

           ELSEIF (FCHAR(4:4) == 'N') THEN
C             SAVE DOC NONLINEAR MAPPING ----------------------- SD NLM
C             TRANSFER COORDINATES FROM NLM 2D FILE TO DOCUMENT
              CALL ERRT(101,'OPERATION NO LONGER SUPPORTED',IDUM)

           ELSEIF (FCHAR(4:5) == 'IC') THEN
C             SAVE TO INCORE DOC FILE -------------------------- SD IC *
              SDNEW  = (FCHAR(7:7) == 'N') 
              SDCOPY = (FCHAR(7:7) == 'C')  
              ENDIT  = (FCHAR(6:6) == 'E' .OR. 
     &                  FCHAR(7:7) == 'E') 
	      IF (ENDIT) THEN
                  CALL UDOCIC(NDUM,ENDIT)
              ELSE
                 CALL SDOCIC(SDNEW,SDCOPY) 
              ENDIF

           ELSE
C             SAVE REGISTERS TO DOC FILE -------------------------- SD
              CALL FILERD(DOCNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 5000
              HEADER = (FCHAR(4:4) .NE. 'H')
              CALL SAVDOCQ(DOCNAM(1:NLETD),NLETT,HEADER,IRTFLG) 
           ENDIF


        CASE('UD')
C          UNSAVE DOCUMENT ------------------------------------- UD ???

200	   IF (FCHAR(4:4) == 'I') THEN
C             UNSAVE DOCUMENT - IN CORE ------------------------ UD IC?
              ENDIT  = (FCHAR(6:6) == 'E' .OR. FCHAR(7:7) == 'E') 
	      CALL UDOCIC(NDOC2,ENDIT)

  	   ELSEIF (FCHAR(4:6) == 'F E'   .OR. 
     &             FCHAR(4:5) == 'FE'    .OR.
     &             FCHAR(4:8) == 'FINDE'  .OR.
     &             FCHAR(4:9) == 'FIND E') THEN
C             UNSAVE DOCUMENT FIND - END USE ---------------- UD FIND E
	      CALL UDOCIC(NDOC2,.TRUE.)

  	   ELSEIF (FCHAR(4:7) == 'NXTE'   .OR. 
     &             FCHAR(4:8) == 'NEXTE'  .OR.
     &             FCHAR(4:8) == 'NXT E'  .OR.
     &             FCHAR(4:9) == 'NEXT E') THEN
C             UNSAVE DOCUMENT SERIAL - END USE -------------- UD NEXT E
	      CALL UDOCIC(NDOC2,.TRUE.)

  	   ELSEIF (FCHAR(4:4) == 'F') THEN
C             UNSAVE DOCUMENT FIND - IN CORE ------------------ UD FIND
	      CALL UDOCIC(NDOC2,.FALSE.)

  	   ELSEIF (FCHAR(4:7) == 'NEXT' .OR.
     &             FCHAR(4:6) == 'NXT') THEN
C             UNSAVE DOCUMENT SELECT - IN CORE ---------------- UD NEXT
	      CALL UDOCIC(NDOC2,.FALSE.)

           ELSEIF (FCHAR(4:4) == 'N') THEN
C             UNSAVE DOCUMENT KEYCOUNT -------------------------- UD N 
	      CALL FILERD(DOCNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 5000
	      CALL RDDOCN(DOCNAM(1:NLETD),NDOC2,.FALSE.)

           ELSEIF (FCHAR(4:4) == 'M') THEN
C             UNSAVE MAX/MIN IN REG COL -------------------------- UD M 
	      CALL FILERD(DOCNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 5000
	      CALL RDDOCN(DOCNAM(1:NLETD),NDOC2,.TRUE.)

           ELSE
C             UNSAVE DOCUMENT - REGULAR --------------------------- UD
              CALL UDOC(FCHAR,NDOC)
           ENDIF


        CASE('LD')
C          LIST DOCUMENT FILE ------------------------------------- LD
           CALL ERRT(101,'OBSOLETE BUGGY OPERATION',NDUM)
           GOTO 5000

C          CALL FILERD(DOCNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
C	   IF (IRTFLG .NE. 0) GOTO 5000
C	   LATER TO BE SWITCHED BY COPT
C	   ISEQ = 0  
C	   CALL LISTDC(FCHAR,DOCNAM(1:NLETD),NFIL,NDOC2,ISEQ)


        CASE('SY') 
C          SYMMETRY DOCUMENT FILE --------------------------------- SY
           CALL FILERD(DOCNAM,NLET,NULL,'SYMMETRY DOCUMENT',
     &                 IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 5000

           CALL OPENDOC(DOCNAM,.TRUE.,NLET,NDOCOUT,NICDOCOUT,.FALSE.,
     &                  ' ',.FALSE.,.FALSE.,.TRUE.,NEWFILE,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 5000

           CALL RDPRMC(CSYM,NLET,.TRUE.,
     &               'SYMMETRY TYPE? (C/CI/T/O/I/G)',NULL,IRTFLG)
           IF (IRTFLG .NE. 0) THEN
              CLOSE(NDOCOUT)
              GOTO 5000
           ENDIF

           IF (CSYM(1:1) == 'C') THEN
              CALL RDPRI1S(IFOLD,NOT_USED,
     &                     'ROTATIONAL SYMMETRY FOLDNESS',IRTFLG)
              IF (IRTFLG .NE. 0)  GOTO 5000
           ENDIF

           CALL SYMANG(CSYM,IFOLD,NICDOCOUT,IRTFLG)
           CLOSE(NDOCOUT)

        END SELECT

5000    RETURN
	END

@


1.36
log
@FCHAR(4:5) == 'FE'
@
text
@d20 1
a20 1
C=* Email: spider@@wadsworth.org                                        *
@


1.35
log
@removed 'ld *' ops (buggy and not standard op line)
@
text
@d18 1
a18 1
C=* Copyright 1985-2013  Health Research Inc.,                         *
d88 1
a88 1
              CALL ERRT(101,'THIS OPERATION NO LONGER SUPPORTED',IDUM)
d120 1
a120 1
     &             FCHAR(4:4) == 'FE'    .OR.
@


1.34
log
@==
@
text
@d13 1
d18 1
a18 1
C=* Copyright 1985-2011  Health Research Inc.,                         *
d53 5
a57 5
        CHARACTER(LEN=MAXNAM)             :: DOCNAM
        CHARACTER(LEN=2)                  :: CSYM
        CHARACTER(LEN=1)                  :: NULL
        LOGICAL                           :: SDNEW,SDCOPY,ENDIT
        LOGICAL                           :: NEWFILE,HEADER
d60 3
a62 5
        INTEGER, PARAMETER                :: NDOC    = 4
        INTEGER, PARAMETER                :: NDOC2   = 70
        INTEGER, PARAMETER                :: NDOCOUT = 72

        NULL = CHAR(0)
d162 5
a166 3
300        CALL FILERD(DOCNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
	   IF (IRTFLG .NE. 0) GOTO 5000
  
d168 2
a169 2
	   ISEQ = 0  
	   CALL LISTDC(FCHAR,DOCNAM(1:NLETD),NFIL,NDOC2,ISEQ)
@


1.33
log
@groel g for sy
@
text
@d71 1
a71 1
100  	   IF (FCHAR(4:5) .EQ. 'SH') THEN
d75 1
a75 1
           ELSEIF (FCHAR(4:4) .EQ. 'S') THEN
d81 1
a81 1
           ELSEIF (FCHAR(4:4) .EQ. 'C') THEN
d86 1
a86 1
           ELSEIF (FCHAR(4:4) .EQ. 'N') THEN
d91 1
a91 1
           ELSEIF (FCHAR(4:5) .EQ. 'IC') THEN
d93 4
a96 3
              SDNEW  = (FCHAR(7:7) .EQ. 'N') 
              SDCOPY = (FCHAR(7:7) .EQ. 'C')  
              ENDIT  = (FCHAR(6:6) .EQ. 'E' .OR. FCHAR(7:7) .EQ. 'E') 
d115 1
a115 1
200	   IF (FCHAR(4:4) .EQ. 'I') THEN
d117 1
a117 1
              ENDIT  = (FCHAR(6:6) .EQ. 'E' .OR. FCHAR(7:7) .EQ. 'E') 
d120 4
a123 4
  	   ELSEIF (FCHAR(4:6) .EQ. 'F E'   .OR. 
     &             FCHAR(4:4) .EQ. 'FE'    .OR.
     &             FCHAR(4:8) .EQ. 'FINDE'  .OR.
     &             FCHAR(4:9) .EQ. 'FIND E') THEN
d127 4
a130 4
  	   ELSEIF (FCHAR(4:7) .EQ. 'NXTE'   .OR. 
     &             FCHAR(4:8) .EQ. 'NEXTE'  .OR.
     &             FCHAR(4:8) .EQ. 'NXT E'  .OR.
     &             FCHAR(4:9) .EQ. 'NEXT E') THEN
d134 1
a134 1
  	   ELSEIF (FCHAR(4:4) .EQ. 'F') THEN
d138 2
a139 2
  	   ELSEIF (FCHAR(4:7) .EQ. 'NEXT' .OR.
     &             FCHAR(4:6) .EQ. 'NXT') THEN
d143 1
a143 1
           ELSEIF (FCHAR(4:4) .EQ. 'N') THEN
d149 1
a149 1
           ELSEIF (FCHAR(4:4) .EQ. 'M') THEN
d188 1
a188 1
           IF (CSYM(1:1) .EQ. 'C') THEN
@


1.32
log
@REMOVED 'SD S'
@
text
@d12 1
d17 1
a17 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d172 1
a172 1
           CALL FILERD(DOCNAM,NLET,NULL,'OUTPUT SYMMETRY DOCUMENT',
d181 1
a181 1
     &               'SYMMETRY TYPE? (C / CI / T / O / I)',NULL,IRTFLG)
@


1.31
log
@GPL_2010
@
text
@d11 1
d76 3
a78 1
              CALL SORTDOC(MAXDIM)
@


1.30
log
@HEADER  'SD H'
@
text
@d12 3
a14 2
C=* This file is part of:                                              * 
C=* SPIDER - Modular Image Processing System.   Author: J. FRANK       *
d26 1
a26 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a27 1
C=*                                                                    *
@


1.29
log
@UD MAX
@
text
@d9 2
d12 5
a16 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d18 1
a18 6
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d23 1
a23 1
C=* This program is distributed in the hope that it will be useful,    *
d29 1
a29 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
d54 1
a54 1
        LOGICAL                           :: NEWFILE
d102 2
a103 1
              CALL SAVDOCQ(DOCNAM(1:NLETD),NLETT,IRTFLG) 
@


1.28
log
@UD FIND
@
text
@d8 1
d11 1
a11 1
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d37 1
a37 1
C   PURPOSE:   A MAIN DRIVER FOR ROUTINES REMOVED FROM DRIVER IN MAR 93
d52 1
a52 1
        CHARACTER(LEN=MAXNAM)             :: FILNAM
d102 1
a102 1
              CALL FILERD(FILNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
d104 1
a104 1
              CALL SAVDOCQ(FILNAM(1:NLETD),NLETT,IRTFLG) 
d141 1
a141 1
	      CALL FILERD(FILNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
d143 7
a150 1
	      CALL RDDOCN(FILNAM(1:NLETD),NDOC2)
d159 1
a159 1
300        CALL FILERD(FILNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
d164 1
a164 1
	   CALL LISTDC(FCHAR,FILNAM(1:NLETD),NFIL,NDOC2,ISEQ)
d169 1
a169 1
           CALL FILERD(FILNAM,NLET,NULL,'OUTPUT SYMMETRY DOCUMENT',
d173 1
a173 1
           CALL OPENDOC(FILNAM,.TRUE.,NLET,NDOCOUT,NICDOCOUT,.FALSE.,
@


1.27
log
@typo
@
text
@d7 1
d10 1
a10 1
C=* Copyright (C) 1985-2007  Health Research Inc.                      *
d115 7
d126 1
a126 1
C             UNSAVE DOCUMENT SELECT - END USE -------------- UD NEXT E
d129 4
@


1.26
log
@renamed UD SEL to UD NEXT
@
text
@d121 2
a122 2
  	   ELSEIF ((FCHAR(4:7) .EQ. 'NEXT') .OR.
     &             (FCHAR(4:6) .EQ. 'NXT') THEN
d148 2
a149 1
        CASE('SY') ------------------------------------------------ SY
@


1.25
log
@ud sel e
@
text
@d4 3
a6 3
C    DRIV3                       CHANGED NDOC   JULY  2000 ArDean Leith
C                                ADDED 'SY DOC' APRIL 2005 J. LEBARRON       
C                                ADDED 'UD SEL' FEB   2007 ArDean Leith       
d40 1
a40 1
C  HANDLES: 'SD','UD','LD','SY'
d114 10
a123 2
  	   ELSEIF (FCHAR(4:6) .EQ. 'SEL') THEN
C             UNSAVE DOCUMENT SELECT - IN CORE ----------------- UD SEL
a125 5
  	   ELSEIF (FCHAR(4:7) .EQ. 'SELE' .OR. 
     &             FCHAR(4:8) .EQ. 'SEL E') THEN
C             UNSAVE DOCUMENT SELECT - END USE ---------------- UD SELE
	      CALL UDOCIC(NDOC2,.TRUE.)

d127 1
a127 1
C             UNSAVE DOCUMENT KEYCOUNT -------------------------- UD N?
d148 1
a148 1
        CASE('SY')
@


1.24
log
@UD SEL support
@
text
@d118 5
@


1.23
log
@GPL License fixed
@
text
@d6 1
d9 1
a9 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d36 1
a36 1
C              CONTAINS ROUTINES ACCESSING DOC FILES ONLY
d113 5
@


1.22
log
@sy doc added & cosmetic & case
@
text
@d2 1
a2 1
C++************************************************************************
d6 25
a30 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1993, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
@


1.21
log
@Removed MPI macros
@
text
@d4 2
a5 2
C    DRIV3                          CHANGED NDOC JULY 2000 ArDean Leith
C                                   
d21 1
a21 1
C   PARAMETERS: MAXDIM     MAX LENGTH OF COMMON BUFFER
d23 2
d34 1
a34 2
        INTEGER, PARAMETER                :: NMENU=3
        CHARACTER(LEN=2),DIMENSION(NMENU) :: MENU
d37 1
a37 2

        DATA  MENU/'SD','UD','LD'/
d40 3
a42 1
        DATA  NDOC/4/,NDOC2/70/
d47 55
a101 34
        IFUNC = 0
        DO I = 1,NMENU
           IF (MENU(I) .EQ. FCHAR(1:2)) IFUNC = I
        ENDDO
        IF (IFUNC .LE. 0) RETURN
        GOTO (100, 200, 300), IFUNC

C       SAVE DOC ------------------------------------------------ SD **

100  	IF (FCHAR(4:5) .EQ. 'SH') THEN
C          RANDOMLY SHUFFLE LINES IN DOCFILE --------------- SD SHUFFLE
           CALL SHUFFLEDOC(MAXDIM)

        ELSEIF (FCHAR(4:4) .EQ. 'S') THEN
C          SORT DOC FILE ----------------------------------------- SD S
           CALL SORTDOC(MAXDIM)

        ELSEIF (FCHAR(4:4) .EQ. 'C') THEN
C          SAVE DOC CLUSTER FILE --------------------------------- SD C
C          TRANSFER COORDINATES FROM CLUSTER FILE TO DOCUMENT
           CALL RDCLUS

        ELSEIF (FCHAR(4:4) .EQ. 'N') THEN
C          SAVE DOC NONLINEAR MAPPING -------------------------- SD NLM
C          TRANSFER COORDINATES FROM NLM 2D FILE TO DOCUMENT
           CALL ERRT(101,'THIS OPERATION NO LONGER SUPPORTED',IDUM)

        ELSEIF (FCHAR(4:5) .EQ. 'IC') THEN
C          SAVE TO INCORE DOC FILE ----------------------------- SD IC *
           SDNEW  = (FCHAR(7:7) .EQ. 'N') 
           SDCOPY = (FCHAR(7:7) .EQ. 'C')  
           ENDIT  = (FCHAR(6:6) .EQ. 'E' .OR. FCHAR(7:7) .EQ. 'E') 
	   IF (ENDIT) THEN
               CALL UDOCIC(NDUM,ENDIT)
d103 2
a104 1
              CALL SDOCIC(SDNEW,SDCOPY) 
d107 14
a120 3
        ELSE
C          SAVE REGISTERS TO DOC FILE ----------------------------- SD
	   CALL FILERD(FILNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
a121 3
           CALL SAVDOCQ(FILNAM(1:NLETD),NLETT,IRTFLG) 
        ENDIF
        GOTO 5000
d123 3
d127 6
a132 10
C       UNSAVE DOCUMENT ---------------------------------------- UD ???

200	IF (FCHAR(4:4) .EQ. 'I') THEN
C          UNSAVE DOCUMENT - IN CORE --------------------------- UD IC?
           ENDIT  = (FCHAR(6:6) .EQ. 'E' .OR. FCHAR(7:7) .EQ. 'E') 
	   CALL UDOCIC(NDOC2,ENDIT)
        ELSEIF (FCHAR(4:4) .EQ. 'N') THEN
C          UNSAVE DOCUMENT KEYCOUNT ----------------------------- UD N?
	   CALL FILERD(FILNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 5000
d134 5
a138 6
	   CALL RDDOCN(FILNAM(1:NLETD),NDOC2)
        ELSE
C          UNSAVE DOCUMENT - REGULAR ------------------------------ UD
           CALL UDOC(FCHAR,NDOC)
        ENDIF
	GOTO 5000
d140 2
d143 1
a143 8
C       LIST DOCUMENT FILE ---------------------------------------- LD
300     CALL FILERD(FILNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
	IF (IRTFLG .NE. 0) GOTO 5000
  
C	LATER TO BE SWITCHED BY COPT
	ISEQ = 0  
	CALL LISTDC(FCHAR,FILNAM(1:NLETD),NFIL,NDOC2,ISEQ)
	GOTO 5000
@


1.20
log
@mpi
@
text
@a41 9
#ifdef USE_MPI
        include 'mpif.h'
        INTEGER  MYPID, COMM, IERR
        COMM = MPI_COMM_WORLD
        CALL MPI_COMM_RANK(COMM, MYPID, IERR)
#else
        MYPID = -1
#endif

a86 9
#ifdef USE_MPI
           IF ( FCHAR(4:4) .EQ. 'E' ) THEN
              CALL SAVDOCQ(FILNAM(1:NLETD),NLETT,IRTFLG) 
           ELSE
              IF ( MYPID .EQ. 0) THEN
                 CALL SAVDOCQ(FILNAM(1:NLETD),NLETT,IRTFLG) 
              ENDIF
           ENDIF
#else
a87 1
#endif
@


1.19
log
@sdocic
@
text
@d42 9
d96 9
a104 1

d106 1
a116 1

@


1.18
log
@sd ic related changes
@
text
@d72 1
a72 1
        ELSEIF (FCHAR(4:4) .EQ. 'IC') THEN
a73 5
           IRTFLG = -999
	   CALL RDPRMC(FILNAM,NLETD,.TRUE.,
     &               'INCORE DOCUMENT ARRAY',NULL,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 5000

d76 6
a81 1
           CALL SDOCIC(FILNAM(1:NLETD),SDNEW,SDCOPY) 
@


1.17
log
@filnam (nlet) bug fixed
@
text
@d5 1
a5 1
C
d28 1
d31 5
a35 4
        PARAMETER      (NMENU=3)
        CHARACTER *2   MENU(NMENU)
        CHARACTER *81  FILNAM
        CHARACTER *1   NULL
d40 1
a40 1
        DATA  NDOC/4/,NDOC2/33/
a43 3
C       MAKE SURE ALL OF FCHAR IS UPPERCASE
        CALL SSUPCAS(FCHAR)

d70 8
a77 2
           WRITE(NOUT,*) '*** NO LONGER SUPPORTED'
           CALL ERRT(100,'DRIV3',IDUM)
d79 4
d84 1
a84 2
C          SAVE DOC ------------------------------------------------ SD
C          GET DOC FILENAME
d97 2
a98 4
	   CALL FILERD(FILNAM,NLETD,DATEXC,'DOCUMENT',IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 5000

	   CALL RDDOCA2Q(FILNAM(1:NLETD),NDOC2)
d108 1
a108 1
           CALL RDDOCQ(FCHAR,NDOC)
@


1.16
log
@filcan removed
@
text
@d80 1
a80 1
           CALL SAVDOCQ(FILNAM(1:NLETT),NLETT,IRTFLG) 
d92 1
a92 1
	   CALL RDDOCA2Q(FILNAM,NDOC2)
d99 1
a99 1
	   CALL RDDOCN(FILNAM,NDOC2)
d113 1
a113 1
	CALL LISTDC(FCHAR,FILNAM,NFIL,NDOC2,ISEQ)
@


1.15
log
@filnam(1:NLETT)
@
text
@d77 2
a78 2
	   CALL FILERD(FILNAM,NLETD,NULL,'DOCUMENT',IRTFLG)
           IF (IRTFLG .EQ. -1) GOTO 5000
a79 3
C          MERGE FILNAM WITH DATEXC
           CALL FILCAN(FILNAM,NLETT,NULL,NULL,FILNAM,DATEXC,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 5000
d89 1
a89 5
	   CALL FILERD(FILNAM,NLETD,NULL,'DOCUMENT',IRTFLG)
           IF (IRTFLG .EQ. -1) GOTO 5000

C          MERGE FILNAM WITH DATEXC
           CALL FILCAN(FILNAM,NLETT,NULL,NULL,FILNAM,DATEXC,IRTFLG)
d96 1
a96 5
	   CALL FILERD(FILNAM,NLETD,NULL,'DOCUMENT',IRTFLG)
           IF (IRTFLG .EQ. -1) GOTO 5000

C          MERGE FILNAM WITH DATEXC
           CALL FILCAN(FILNAM,NLETT,NULL,NULL,FILNAM,DATEXC,IRTFLG)
d108 1
a108 1
300     CALL FILERD(FILNAM,NLETD,NULL,'DOCUMENT',IRTFLG)
a109 1
	CALL FILCAN(FILNAM,NFIL,NULL,NULL,FILNAM,DATEXC,IER)
@


1.14
log
@changed nodoc assignment
@
text
@d83 1
a83 1
           CALL SAVDOCQ(FILNAM,NLETT,IRTFLG) 
@


1.13
log
@used lundoc
@
text
@d4 1
a4 1
C    DRIV3
d36 2
d99 1
a99 1
	   CALL RDDOCA2Q(FILNAM,NDOC)
d110 1
a110 1
	   CALL RDDOCN(FILNAM,NDOC)
d113 1
a113 1
           CALL RDDOCQ(FCHAR,NDOC2)
d125 1
a125 1
	CALL LISTDC(FCHAR,FILNAM,NFIL,NDOC,ISEQ)
@


1.12
log
@removed nlmconv
@
text
@a28 1
CNO_SAVE
d58 1
a58 1
C          SORT DOC FILE ---------------------------------------- SD S
d62 1
a62 1
C          SAVE DOC CLUSTER FILE -------------------------------- SD C
d73 1
a73 1
C          SAVE DOC -------------------------------------------- SD
d100 1
a100 1
C          UNSAVE DOCUMENT KEYCOUNT --------------------------- UD N?
d110 2
a111 2
C          UNSAVE DOCUMENT - REGULAR ---------------------------- UD
           CALL RDDOCQ(FCHAR,NDOC2,NULL)
d116 1
a116 1
C       LIST DOCUMENT FILE --------------------------------------- LD
@


1.11
log
@rddocq fixed
@
text
@d70 2
a71 1
           CALL NLMCONV(11,12)
@


1.10
log
@nlet in savdocq bad (but unused anyway)
@
text
@d111 1
a111 1
           CALL RDDOCQ(FCHAR,NDOC2,0)
@


1.9
log
@added ud n function
@
text
@d81 1
a81 1
           CALL SAVDOCQ(FILNAM,NLET,IRTFLG) 
@


1.8
log
@shuffle did not get accessed
@
text
@d98 11
@


1.7
log
@savdocq call changed
@
text
@d16 1
a16 1
C   DRIV(MAXDIM)
d36 2
a37 2
        DATA MENU/'SD','UD','LD'/
        DATA NDOC/4/,NDOC2/33/
d53 6
a58 1
100  	IF (FCHAR(4:4) .EQ. 'S') THEN
d64 1
a64 1
C          TRANSFER COORDINATES FROM (MAY '85) CLUSTER FILE TO DOCUMENT
a70 4
        ELSEIF (FCHAR(4:5) .EQ. 'SH') THEN
C          SHUFFLE DOC ------------------------------------- SD SHUFFLE
C          RANDOMLY SHUFFLE LINES IN DOCFILE
           CALL SHUFFLEDOC(MAXDIM)
@


1.6
log
@removed unsdal2 replaced with unsdal
@
text
@d37 1
a37 1
        DATA NDOC/4/,NDOC2/33/,NUMFIL/0/
d41 3
d50 1
a50 1
        GOTO  (  10000,  10600, 11600), IFUNC
d53 17
a69 2
10000   CALL CHKINPQ('S,C,NLM,SHUFFLE$',FCHAR(4:),ICALL2)
        GOTO (10420, 10460, 10480, 10490, 10491),ICALL2
d71 5
a75 3
C       SAVE DOC ------------------------------------------------- SD
10420   CALL SAVDOCQ(FCHAR,NDOC,81,NUMFIL) 
	GOTO 5000
d77 5
a81 2
C       SORT DOC FILE -------------------------------------------- SD S
10460   CALL SORTDOC(MAXDIM)
a83 4
C       SAVE DOC CLUSTER FILE ----------------------------------- SD C
C       TRANSFER COORDINATES FROM (NEW MAY '85) CLUSTER FILE TO DOCUMENT
10480	CALL RDCLUS
        GOTO 5000
d85 1
a85 4
C       SAVE DOC NONLINEAR MAPPING ---------------------------- SD NLM
C       TRANSFER COORDINATES FROM NONLINEAR MAPPING 2D FILE TO DOCUMENT
10490	CALL NLMCONV(11,12)
        GOTO 5000
d87 1
a87 9
C       SHUFFLE DOC ---------------------------------------- SD SHUFFLE
C       RANDOMLY SHUFFLE LINES IN DOCFILE
10491   CALL SHUFFLEDOC(MAXDIM)
        GOTO 5000


C       UNSAVE DOCUMENT ---------------------------------------- UD ???
C       UNSAVE DOCUMENT ('UD')
10600	IF (FCHAR(4:4) .EQ. 'I') THEN
a88 1
           CALL SSUPCAS(FCHAR)
d96 1
a96 1
	   CALL RDDOCA2Q(FILNAM,FCHAR,NALPH,NDOC)
d98 1
a98 2
C          UNSAVE DOCUMENT - REGULAR --------------------------- UD
           CALL SSUPCAS(FCHAR)
d104 2
a105 2
C       LIST DOCUMENT FILE ----------------------------------------- LD
11600	CALL FILERD(FILNAM,NLETD,NULL,'DOCUMENT',IRTFLG)
@


1.5
log
@change fchar(4:nalph) to fchar(4:)
@
text
@a27 1
#ifdef SP_UNIX
d29 1
a29 7
#else
	INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif

        COMMON /DOC_DIMS/MAXKEY1,MAXREG1,NKEY,NREG
C       ACTUAL DBUF(MAXREGA,MAXKEYA,2) = BUFFER FOR DOCUMENT CORE IMAGE
        COMMON /DOC_BUF/ DBUF(1)
a53 1
C10420   CALL SAVDOCQ(FCHAR,NDOC,81,NULL,DCFILE,NUMFIL,NDOCFL1) 
d61 1
a61 1
C       SAVE DOC ------------------------------------------------- SD C
d66 1
a66 1
C       SAVE DOC ----------------------------------------------- SD NLM
d77 1
a77 1
C       UNSAVE DOCUMENT ----------------------------------------- UD **
d79 16
a94 7
10600	CALL CHKINPQ('IC,ICE$',FCHAR(4:),ICALL8)
	GOTO (10660, 10640, 10640), ICALL8 

C       UNSAVE DOCUMENT ----------------------------------------- UD IC
C       UNSAVE DOCUMENT - IN CORE ('UD IC)
10640   CALL SSUPCAS(FCHAR)
	CALL RDDOCA2Q(FCHAR,NALPH,NDOC,DBUF,MAXKEY1,MAXREG1)
a96 4
C       UNSAVE DOCUMENT - REGULAR ---------------------------------- UD
10660   CALL SSUPCAS(FCHAR)
	CALL RDDOCQ(FCHAR,NDOC2,0)
	GOTO 5000
d101 3
a103 2
	CALL FILCAN(FILNAM,NFIL,NULL,NULL,FILNAM,DATEXC,IER)  
C	later to be switched by COPT
@


1.4
log
@add sd shuffle command by MR
@
text
@d57 1
a57 1
10000   CALL CHKINPQ('S,C,NLM,SHUFFLE$',FCHAR(4:NALPH),ICALL2)
d87 1
a87 1
10600	CALL CHKINPQ('IC,ICE$',FCHAR(4:NALPH),ICALL8)
@


1.3
log
@fixed common block dcfile(20)
@
text
@d57 2
a58 2
10000   CALL CHKINPQ('S,C,NLM$',FCHAR(4:NALPH),ICALL2)
        GOTO (10420, 10460, 10480, 10490),ICALL2
d77 5
@


1.2
log
@cpp_lines_added
@
text
@d34 1
a34 1
        COMMON /DOC_DIMS/MAXKEY1,MAXREG1,NKEY,NREG,NDOCFL1
a36 3
C       ACTUAL DCFILE(NDOCFL1) = DOC FILE NAMES
        CHARACTER *81 DCFILE
        COMMON /DOC_DCF/ DCFILE(1)
d46 2
d61 2
a62 1
10420   CALL SAVDOCQ(FCHAR,NDOC,81,0,DCFILE,NUMFIL,NDOCFL1) 
@


1.1
log
@Initial revision
@
text
@d28 3
d32 1
@
