head	1.19;
access;
symbols
	healthdept_2018:1.19
	pre_getangas:1.17
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.14
	prec_CA:1.13
	noindx:1.12
	Bproc:1.11
	oct21:1.10
	last77:1.10;
locks; strict;
comment	@c @;


1.19
date	2018.10.03.14.34.16;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2013.11.08.16.39.29;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.11.26.18.28.36;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.26.53;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.20.58.12;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.11.10.15.24.28;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.03.04.14.37.32;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2001.07.11.15.46.26;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.11.10.23.11.19;	author yuchen;	state Exp;
branches;
next	1.10;

1.10
date	99.02.05.14.00.36;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	97.12.12.17.40.36;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	96.08.21.18.19.44;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	96.08.14.13.31.58;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	95.08.11.17.41.03;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	95.05.04.18.01.55;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	95.04.17.19.08.02;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	95.04.17.13.31.45;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.11.14.10.51.59;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.43;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.19
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C SETLAB.F      CREATED                           NOV 87  ArDean Leith
C               LUNRED                            FEB 03  ARDEAN LEITH
C               1PG FORMAT                        NOV 10  ARDEAN LEITH
C               LINE FORMAT, MPISET               NOV 13  ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2013  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    SETLAB(LUN,BUF,IGO,NBUF,VALUE,TYPE,IRTFLG)
C
C    PURPOSE:    THIS SUBROUTINE SETS HEADER PARAMETERS BY BUFFER NUMBER
C                WRITES THE HEADER INTO THE FILE.
C
C    PARAMETERS:
C         
C             LUN          LOGICAL UNIT NUMBER OF FILE 
C             BUF          WORK SPACE FOR READ/WRITE BUFFER
C             IGO          FIRST BUFFER POSITION TO BE SET
C             NBUF         NUMBER OF BUFFER POSITIONS TO BE SET
C             VALUES       ARRAY FOR BUFFER VALUES TO BE SET
C             TYPE         CHARACTER VARIABLE CONTAINING FLAG FOR IFORM
C			   TYPE SYMBOL	DATA TYPE	        IFORM
C                           R     2-D REAL                       +1
C                           R3    3-D REAL                       +3
C                           P     2-D POLAR                      +2
C                           D     NON-IMAGE DATA                  0
C                           F     2-D FOURIER                    -1
C                           F3    3-D FOURIER                    -3
C                           U     UNCHANGED	 UNCHANGED	
C                           O2    2-D FOURIER, MIXED RADIX ODD   -11  
C                           E2    2-D FOURIER, MIXED RADIX EVEN  -12
C                           O3    3-D FOURIER, MIXED RADIX ODD   -21
C                           E3    3-D FOURIER, MIXED RADIX EVEN  -22
C
C             IRTFLG       ERROR FLAG  (-1 ON ENTRY SUPRESSES PRINT-OUT)
C
C 
C       NOTE:   THE HEADER RECORD(S) OF THE FILE CONTAIN THE FOLLOWING 
C               BUFFER POSITIONS WHICH CAN BE ALTERED (AMONG OTHERS):
C               POSITION   1  NSLICE = NUMBER OF SLICES (PLANES) IN VOLUME
C                                (=1 FOR AN IMAGE)  ON VAX  LONG HEADER
C                                FORMAT FILES THE VALUE OF NSLICE STORED IN
C                                THE FILE IS NEGATIVE.
C                          2  NROW   = NUMBER OF ROWS PER SLICE
C                          3  IREC   = (UNUSED)
C                          4  NHISTREC = (UNUSED)
C                          5  FLAG INDICATING DATA TYPE (=IFORM)
C                          6  IMAMI = FLAG INDICATING IF THE IMAGE HAS 
C				      BEEN SEARCHED FOR MAX AND MIN. 
C				      IMAMI IS SET TO +1 IF SEARCHED.
C                          7  FMAXD = IMAGE MAXIMUM
C                          8  FMIND = IMAGE MINIMUM
C			   9  AVD   = IMAGE AVERAGE
C                         10  SIG   = STANDARD DEVIATION (SQ. ROOT OF VARIANCE)
C                         11  IHIST = UNUSED
C                         13  LABLN = NUMBER OF FLOATING POINT HEADER VARIABLES
C                         14  IANGLE= ANGLE FILL FLAG
C                         15  PHI   = TILT ANGLE
C                         16  THETA = TILT ANGLE
C                         17  PSI   = TILT ANGLE
C                         18  XOFF  = X TRANSLATION
C                         19  YOFF  = Y TRANSLATION
C                         20  ZOFF  = Z TRANSLATION
C
C--*********************************************************************
  
        SUBROUTINE SETLAB(LUN,NSAM,UNUSED,IGO,NBUF,VALUES,TYPE,IRTFLG)
  
        INCLUDE 'CMBLOCK.INC' 

        REAL             ::  UNUSED(*),VALUES(*)
        CHARACTER   *(*) ::  TYPE
        LOGICAL          ::  PRNT

C       AUTOMATIC ARRAYS    
        REAL             :: OLDVALUES(NBUF)

        INTEGER          :: ICOMM,MYPID,MPIERR
        CALL SET_MPI(ICOMM,MYPID,MPIERR) ! SETS ICOMM AND MYPID

        PRNT = .TRUE.
        IF (IRTFLG == -1) PRNT = .FALSE.
        IRTFLG = 1

                 
C       UPDATE THE HEADER BUFFER
        IF (TYPE(1:1) .NE. 'U') THEN
           LENC = LEN(TYPE)
           IF     (LENC == 2 .AND. TYPE(1:2) == 'R3') THEN 
                ITYPE = 3
           ELSEIF (LENC == 2 .AND. TYPE(1:2) == 'O2') THEN
                ITYPE = -11
           ELSEIF (LENC == 2 .AND. TYPE(1:2) == 'E2') THEN
                ITYPE = -12
           ELSEIF (LENC == 2 .AND. TYPE(1:2) == 'O3') THEN
                ITYPE = -21
           ELSEIF (LENC == 2 .AND. TYPE(1:2) == 'E3') THEN
                ITYPE = -22
           ELSEIF (TYPE(1:1) == 'P') THEN
                ITYPE = 2
           ELSEIF (TYPE(1:1) == 'D') THEN
                ITYPE = 0
           ELSE
                ITYPE = 1
           ENDIF
           CALL LUNSETTYPE(LUN,ITYPE,IRTFLG)

           IF (PRNT .AND. MYPID <= 0) THEN 
              WRITE(NOUT,9993) ITYPE,TYPE
9993          FORMAT('  NEW IFORM:',I5,' TYPE:',A2)
           ENDIF
        ENDIF

        ISTOP = MIN(256,IGO+NBUF-1)
        NVAL  = ISTOP - IGO + 1

        CALL LUNGETVALS(LUN,IGO,NVAL,OLDVALUES,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        CALL LUNSETVALS(LUN,IGO,NVAL,VALUES,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        IF (PRNT .AND. VERBOSE) THEN
           J = 0
           DO I = IGO,ISTOP
              J = J + 1
              IF (MYPID <= 0) THEN
                 WRITE(NOUT,9999) I,OLDVALUES(J),VALUES(J)
9999             FORMAT('  HEADER LOCATION: ',I3,' CHANGED FROM: ',
     &                    1PG10.3,' TO: ',1PG10.3)
              ENDIF
           ENDDO
        ENDIF

C       WRITE ALTERED HEADER BACK IN THE FILE
        CALL LUNWRTCURHED(LUN,IRTFLG) 

        END

@


1.18
log
@LINE FORMAT, MPISET
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.17
log
@1PG FORMAT
@
text
@d7 1
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d93 3
a95 3
        DIMENSION          UNUSED(*),VALUES(*)
        CHARACTER   *(*)   TYPE
        LOGICAL            PRNT
d98 1
a98 1
        DIMENSION          OLDVALUES(NBUF)
d100 2
a101 8
#ifdef USE_MPI
        INCLUDE 'mpif.h'
        INTEGER MYPID, COMM, IERR
        COMM = MPI_COMM_WORLD
        CALL MPI_COMM_RANK(COMM, MYPID, IERR)
#else
        MYPID = -1
#endif
d104 1
a104 1
        IF (IRTFLG .EQ. -1) PRNT = .FALSE.
d111 1
a111 1
           IF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'R3') THEN 
d113 1
a113 1
           ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'O2') THEN
d115 1
a115 1
           ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'E2') THEN
d117 1
a117 1
           ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'O3') THEN
d119 1
a119 1
           ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'E3') THEN
d121 1
a121 1
           ELSEIF (TYPE(1:1) .EQ. 'P') THEN
d123 1
a123 1
           ELSEIF (TYPE(1:1) .EQ. 'D') THEN
d130 4
a133 7
#ifdef USE_MPI
           IF (PRNT .AND. MYPID .EQ. 0) 
     &        WRITE(NOUT,9993) ITYPE,TYPE
#else
           IF (PRNT) WRITE(NOUT,9993) ITYPE,TYPE
#endif
9993       FORMAT(' NEW IFORM:',I5,' TYPE:',A2)
d146 1
a146 1
           J     = 0
d148 2
a149 3
              J      = J + 1
#ifdef USE_MPI
              IF (MYPID .EQ. 0) THEN
d151 2
a153 5
#else
              WRITE(NOUT,9999) I,OLDVALUES(J),VALUES(J)
#endif
9999          FORMAT(' HEADER LOCATION: ',I3,' CHANGED FROM: ',
     &              1PG10.3,' TO: ',1PG10.3)
a159 1
        RETURN
@


1.16
log
@GPL_2010
@
text
@d4 3
a6 2
C SETLAB.FOR -- CREATED NOV 87                             ArDean Leith
C                                   LUNRED        FEB 03   ARDEAN LEITH
d165 1
a165 1
     &              G10.3,' TO: ',G10.3)
@


1.15
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@set term
@
text
@d2 1
a2 1
C++************************************************************************
d8 23
a30 7
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
@


1.13
log
@redhed/wrthed removal
@
text
@d86 9
d122 4
d127 1
d144 5
d150 1
@


1.12
log
@verbose
@
text
@d4 2
a5 1
C SETLAB.FOR -- CREATED NOV 87  BY ArDean Leith
d17 1
a17 1
C    SETLAB(LUN,LENREC,BUF,IBUF1,NBUF,VALUE,TYPE,IRTFLG)
d26 1
a26 2
C             LENREC       NUMBER OF SAMPLES IN THE FILE (PIXELS)
C             IBUF1        FIRST BUFFER POSITION TO BE SET
d30 12
a41 16
C			   TYPE SYMBOL	DATA TYPE	IFORM
C                           R		 2-D REAL	 +1
C                           R3		 3-D REAL	 +3
C                           P		 2-D POLAR	 +2
C                           D		 NON-IMAGE DATA   0
C                           F		 2-D FOURIER	 -1
C                           F3		 3-D FOURIER  	 -3
C                           U		 UNCHANGED	 UNCHANGED	
C                           Q2           2-D FOURIER     -5 PAUL'S FORMAT
C                           Q3           3-D FOURIER     -7     "   "
C               -7    FQ    3-D FOURIER TRANSFORM, PAUL'S FORMAT
C               -9    FS    3-D SIMPLE FORMAT FOURIER (MICHAEL'S FORMAT)
C               -11   O2    2-D FOURIER TRANSFORM, MIXED RADIX ODD
C               -12   E2    2-D FOURIER TRANSFORM, MIXED RADIX EVEN
C               -21   O3    3-D FOURIER TRANSFORM, MIXED RADIX ODD
C               -22   E3    3-D FOURIER TRANSFORM, MIXED RADIX EVEN
d75 1
a75 1
        SUBROUTINE SETLAB(LUN,NSAM,BUF,IBUF1,NBUF,VALUES,TYPE,IRTFLG)
d79 1
a79 1
        DIMENSION          BUF(*),VALUES(*)
d83 3
a89 2
C       READ THE HEADER INTO BUF
        CALL REDHED(LUN,BUF,17000,NSAM,0,IRTFLG)
d95 1
a95 7
                BUF(5) = 3
           ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'F3') THEN
                BUF(5) = -3
           ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'Q2') THEN
                BUF(5) = -5
           ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'Q3') THEN
                BUF(5) = -7
d97 1
a97 1
                BUF(5) = -11
d99 1
a99 1
                BUF(5) = -12
d101 1
a101 1
                BUF(5) = -21
d103 1
a103 3
                BUF(5) = -22
           ELSEIF (TYPE(1:1) .EQ. 'F') THEN
                BUF(5) = -1
d105 1
a105 1
                BUF(5) = 2
d107 1
a107 1
                BUF(5) = 0
d109 1
a109 1
                BUF(5) = 1
d111 4
a114 3
           IBUF5 = BUF(5)
           IF (PRNT) WRITE(NOUT,9993) IBUF5,TYPE
9993       FORMAT(' NEW IFORM:',I5,' TYPE:',2A2)
d117 15
a131 8
        J     = 0
        ISTOP = MIN(256,IBUF1+NBUF-1)
        DO I = IBUF1,ISTOP
           J      = J + 1
           BUFT   = BUF(I)
           BUF(I) = VALUES(J)
           IF (PRNT .AND. VERBOSE) WRITE(NOUT,9999) I,BUFT,VALUES(J)
9999       FORMAT(' HEADER LOCATION: ',I3,' CHANGED FROM: ',
d133 2
a134 4
        ENDDO

C       WRITE THE HEADER INTO FILE
        CALL WRTHED(LUN,BUF,NSAM,IRTFLG)
d136 2
a137 1
        IRTFLG = 0
@


1.11
log
@a
@
text
@d81 2
a82 1
 
a86 2
        COMMON /UNITS/ LUNC,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT

d130 1
a130 1
           J = J + 1
d133 1
a133 1
           IF (PRNT) WRITE(NOUT,9999) I,BUFT,VALUES(J)
a136 1

@


1.10
log
@CNO_SAVE
@
text
@d81 1
a81 1
CNO_SAVE 
@


1.9
log
@added NOSTOP parameter to redhed call
@
text
@d81 1
@


1.8
log
@new fourier formats
@
text
@d92 1
a92 1
        CALL REDHED(LUN,BUF,17000,NSAM,IRTFLG)
@


1.7
log
@ no more short label code
@
text
@d40 6
d105 8
@


1.6
log
@new runtime inline buffer alteration
@
text
@d18 2
a19 2
C    PURPOSE:    THIS SUBROUTINE SETS LABEL PARAMETERS BY BUFFER NUMBER
C                WRITES THE LABEL INTO THE FILE.
d23 1
a23 1
C             LUN          LOGICAL UNIT NUMBER OF FILE TO BE LABELED
d44 1
a44 1
C       NOTE:   THE LABEL RECORD(S) OF THE FILE CONTAIN THE FOLLOWING 
d47 2
a48 2
C                                (=1 FOR AN IMAGE)  FOR NEW LONG LABEL
C                                FORMAT THE VALUE OF NSLICE STORED IN
d52 1
a52 1
C                          4  NHISTREC = NUMBER OF RECORDS NEEDED FOR HISTOGRAM
d61 2
a62 4
C                         11  IHIST = FLAG INDICATING IF THE HISTOGRAM HAS
C                                     BEEN COMPUTED,AND STORED IN RECORDS
C                                     LABREC+NROW+1 ETC.
C                         13  LABLN = NUMBER OF FLOATING POINT LABEL VARIABLES
d73 1
a73 1
        SUBROUTINE SETLAB(LUN,LENREC,BUF,IBUF1,NBUF,VALUES,TYPE,IRTFLG)
a74 6
        COMMON /IOERR/IERR

C       COMMON OPSYS IS UNIX VS VMS FLAG
	LOGICAL        ONSUN,ONUNIX,ONSGI,ONOSF
        COMMON /OPSYS/ ONSUN,ONUNIX,ONSGI,ONOSF
 
a78 1
        COMMON /LUNARA/ LUNARA(100),LASLAB
d85 2
a86 10
        LABREC = LUNARA(LUN)
        LUNARA(LUN) = 1

        IERR = 0
        CALL REDLIN(LUN,BUF,LENREC,0)
        IF (IERR .NE. 0) THEN
          CALL ERRT(12,'SETLAB',NE)
          LUNARA(LUN) = LABREC
          RETURN
        ENDIF
d88 4
a91 13
        IF (ONUNIX .OR. BUF(1) .LT. 0.0) THEN
C         LONG LABEL FORMAT FILE, READ IN REST OF LABEL

          ILOC = LENREC + 1
          DO I = 1,LABREC-1
             CALL REDLIN(LUN,BUF(ILOC),LENREC,I)
             ILOC = ILOC + LENREC
          ENDDO

C         UPDATE THE LABEL BUFFER
          IF (TYPE(1:1) .NE. 'U') THEN
             LENC = LEN(TYPE)
             IF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'R3') THEN 
d93 1
a93 1
             ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'F3') THEN
d95 1
a95 1
             ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'Q2') THEN
d97 1
a97 1
             ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'Q3') THEN
d99 1
a99 1
             ELSEIF (TYPE(1:1) .EQ. 'F') THEN
d101 1
a101 1
             ELSEIF (TYPE(1:1) .EQ. 'P') THEN
d103 1
a103 1
             ELSEIF (TYPE(1:1) .EQ. 'D') THEN
d105 1
a105 1
             ELSE
a106 36
             ENDIF
             IBUF5 = BUF(5)
             IF (PRNT) WRITE(NOUT,9993) IBUF5,TYPE
9993         FORMAT(' NEW IFORM:',I5,' TYPE:',2A2)
          ENDIF

          J = 0
          DO 20 I = IBUF1,IBUF1+NBUF-1
            IF (I .LE. 256) THEN
              J = J + 1
              BUFT = BUF(I)
              BUF(I) = VALUES(J)
              IF (PRNT) WRITE(NOUT,9999) I,BUFT,VALUES(J)
9999          FORMAT(' LABEL LOCATION:',I3,' CHANGED FROM:',
     &        F10.3,' TO:',F10.3)
            ELSE
              GOTO 21
            ENDIF
20        CONTINUE

          IRTFLG = 0

C         REPLACE THE LONG LABEL BACK IN THE FILE
21        ILOC = 1
          DO I =0,LABREC-1
             CALL WRTLIN(LUN,BUF(ILOC),LENREC,I)
             ILOC = ILOC + LENREC
          ENDDO

        ELSE

C          CHANGE SHORT FILE LABEL 
           IF (LENREC .LE. IBUF1) THEN
             WRITE(NOUT,*) '*** FILE LACKS THIS VARIABLE LOCATION'
             LUNARA(LUN) = LABREC
             RETURN
d108 15
a122 1
C          UPDATE THE SHORT LABEL BUFFER
a123 36
          IF (TYPE(1:1) .NE. 'U') THEN
             LENC = LEN(TYPE)
             IF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'R3') THEN 
                BUF(5) = 3
             ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'F3') THEN
                BUF(5) = -3
             ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'Q2') THEN
                BUF(5) = -5
             ELSEIF (LENC .EQ. 2 .AND. TYPE(1:2) .EQ. 'Q3') THEN
                BUF(5) = -7
             ELSEIF (TYPE(1:1) .EQ. 'F') THEN
                BUF(5) = -1
             ELSEIF (TYPE(1:1) .EQ. 'P') THEN
                BUF(5) = 2
             ELSEIF (TYPE(1:1) .EQ. 'D') THEN
                BUF(5) = 0
             ELSE
                BUF(5) = 1
             ENDIF
             IBUF5 = BUF(5)
             IF (PRNT) WRITE(NOUT,9993) IBUF5,TYPE
          ENDIF

           J = 0
           DO I = IBUF1,IBUF1+NBUF-1
             IF (I .LE. LENREC) THEN
               J = J + 1
               BUFT = BUF(I)
               BUF(I) = VALUES(J)
               IF (PRNT) WRITE(NOUT,3999) I,BUFT,VALUES(J)
3999           FORMAT(' SHORT LABEL LOCATION:',I3,' CHANGED FROM:',
     &         F10.3,' TO:',F10.3)
             ELSE
               GOTO 31
             ENDIF
           ENDDO
d125 2
a126 3
           IRTFLG = 0
31         CALL WRTLIN(LUN,BUF,LENREC,0)
        ENDIF
d128 1
a128 1
        LUNARA(LUN) = LABREC
@


1.5
log
@changes for inlined buff because of openf.f
@
text
@d86 2
a87 6
#ifdef SP_VMS
      COMMON /LUNARA/ LUNARA(100),LASLAB,LUNINI(100)
#else
      COMMON /LUNARA/ LUNARA(100),LASLAB,NOFFSET,
     &                  LUNOFF(100),LUNFORM(100),LUNINI(100)
#endif
d94 2
a95 9
C       EITHER A FILE (lunara(lun) .ne. 0) OR AN INLINED BUFFER
C	(lunini(lun) .ne. 0) IS BEING USED.
        IF(LUNARA(LUN) .GT. 0) THEN
           LABREC = LUNARA(LUN)
           LUNARA(LUN) = 1
	ELSE
           LABREC = LUNINI(LUN)
           LUNINI(LUN) = 1
	END IF
d101 1
a101 5
          IF(LUNARA(LUN) .GT. 0) THEN
           LUNARA(LUN) = LABREC
	  ELSE
           LUNINI(LUN) = LABREC
	  END IF
d107 1
d113 1
a113 1
      
d156 1
a156 1
21	  ILOC = 1
d161 1
d167 1
a167 5
             IF(LUNARA(LUN) .GT. 0) THEN
                LUNARA(LUN) = LABREC
	     ELSE
                LUNINI(LUN) = LABREC
	     END IF
d212 2
a213 5
        IF(LUNARA(LUN) .GT. 0) THEN
           LUNARA(LUN) = LABREC
	ELSE
           LUNINI(LUN) = LABREC
	END IF
@


1.4
log
@added an inlined buffer
@
text
@d86 6
a91 2

        COMMON /LUNARA/ LUNARA(100),LASLAB
a92 3
C       FORTRAN UNIT ASSOCIATED WITH EACH inlined buff
        INTEGER INLUN1,RECLN01,RECLN11,INLUN2,RECLN02,RECLN12
        COMMON/LUNYP/INLUN1,RECLN01,RECLN11,INLUN2,RECLN02,RECLN12
d98 9
a106 2
        LABREC = LUNARA(LUN)
        LUNARA(LUN) = 1
d112 5
a116 1
          LUNARA(LUN) = LABREC
d122 5
a126 12

C         CHECK IF USER HAS ASKED FOR INLINED BUFFER
          IF(LUN.EQ.INLUN1 .OR.LUN.EQ.INLUN2 ) THEN
             ILOC = LABREC * LENREC
             CALL REDLIN(LUN,BUF,ILOC,0)
          ELSE
             ILOC = LENREC + 1
             DO I = 1,LABREC-1
                CALL REDLIN(LUN,BUF(ILOC),LENREC,I)
                ILOC = ILOC + LENREC
             ENDDO
          END IF
d170 5
a174 11
21        IF(LUN.EQ.INLUN1 .OR.LUN.EQ.INLUN2 ) THEN
             ILOC = LABREC * LENREC
             CALL WRTLIN(LUN,BUF,ILOC,0)
          ELSE
	     ILOC = 1
             DO I =0,LABREC-1
                CALL WRTLIN(LUN,BUF(ILOC),LENREC,I)
                ILOC = ILOC + LENREC
             ENDDO
	  END IF

d180 5
a184 1
             LUNARA(LUN) = LABREC
d229 5
a233 2

        LUNARA(LUN) = LABREC
@


1.3
log
@nlabel changed to nhistrec
@
text
@d89 3
d111 12
a122 6
          ILOC = LENREC + 1
          DO I = 1,LABREC-1
             CALL REDLIN(LUN,BUF(ILOC),LENREC,I)
             ILOC = ILOC + LENREC
          ENDDO

d165 10
a174 5
21        ILOC = 1
          DO I =0,LABREC-1
             CALL WRTLIN(LUN,BUF(ILOC),LENREC,I)
             ILOC = ILOC + LENREC
          ENDDO
@


1.2
log
@USED onunix for negative nslice trap
@
text
@d52 1
a52 1
C                          4  NLABEL = NUMBER OF RECORDS NEEDED FOR HISTOGRAM
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
C **************************************************************************
d14 1
a14 1
C **************************************************************************
d73 1
a73 1
C--*******************************************************************
d78 4
d100 1
a100 1
          WRITE(NOUT,*) '*** ERROR READING FILE'
d105 1
a105 1
        IF (BUF(1) .LT. 0.0) THEN
@
