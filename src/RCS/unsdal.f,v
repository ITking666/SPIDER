head	1.24;
access;
symbols
	pre_mrcs:1.24
	healthdept_2018:1.24
	pre_getangas:1.23
	GPL2010:1.23
	pre_GPL2010:1.22
	pre_var_equation:1.22
	pre_fftwrings:1.22
	pre_opfiles:1.22
	src:1.22
	best-code:1.22
	x-named-regs:1.22
	x:1.22
	v13-00:1.22
	pre_GPL:1.20
	prec_CA:1.20
	noindx:1.17
	Bproc:1.16
	oct21:1.16
	last77:1.13;
locks; strict;
comment	@c @;


1.24
date	2018.10.03.14.51.08;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2010.06.24.13.27.11;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2005.10.17.20.27.07;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2005.10.17.18.18.46;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2003.08.12.20.34.43;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2003.07.09.16.31.27;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.08.16.29.34;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2000.12.19.19.50.35;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	99.10.21.15.24.10;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	99.07.30.16.30.05;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	99.06.17.19.11.22;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	98.12.02.15.18.08;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	98.01.16.15.55.15;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	97.05.09.12.40.05;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.01.31.20.19.04;	author mladjadj;	state Exp;
branches;
next	1.9;

1.9
date	96.11.07.15.09.30;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	96.09.17.19.29.54;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.09.10.18.08.39;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.09.10.15.48.45;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.07.30.18.50.36;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	96.07.02.18.44.47;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	94.07.19.12.01.35;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.12.15;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.35;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.24
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C UNSDAL.F          ADAPTED FOR EXTENDED FILE NAMES NOV 88 ArDean Leith
C                   ALTERED FOR RUNTIME USE SEPT 96 ArDean Leith
C                   USED LUNDOC JUNE 99 ArDean Leith
C                   OPENDOC PARAMETERS CHANGED DEC 2000 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  UNSDAL(DOCNAM,ICALL,NDOC,IKEY,PLIST,NLIST,DBUF,MAXKEY,MAXREG,
C          NKEY,IRTFLG)
C
C  PURPOSE:  RECOVERS ARRAY OF REGISTERS FROM DOCUMENT FILES.  IF IKEY
C            IS <0 RECOVERS THE LINE OF REGISTERS FROM THE COMMENT
C            LINE HAVING THAT COMMENT KEY ONLY. 
C            CALLED WITHIN ROUTINES THAT USE A DEDICATED DOC. FILE
C
C  PARAMETERS:
C         DOCNAM        DOC. FILE NAME INCLUDING EXTENSION        (SENT)
C         ICALL         FLAG SHOWING DOC FILE IS IN DBUF NOW (SENT/RET.)                 
C                       ICALL = 1 (GET LINE FROM OPEN ARRAY)
C                       ICALL = 0 (MUST OPEN & READ FILE) 
C         NDOC          LOGICAL UNIT FOR DOC FILE                 (SENT)
C         IKEY          KEY FOR LINE OF REG. RETURNED IN PLIST    
C                       IF ZERO DOES NOT FIND ANY KEY             (SENT)
C         PLIST         ARRAY TO HOLD OUTPUT FROM KEY IKEY    (RETURNED)
C         NLIST         NUMBER OF REGISTERS RETRIEVED ON A        (SENT)
C                       LINE (1ST VALUE RETRIEVED ON EACH
C                       LINE IS KEY NO. NOT A REGISTER)
C                       MAXIMUM IS 6 (JUNE 99)          
C         DBUF          BUFFER TO RETRIEVE ARRAY FROM DOC.
C                       FILE (CLEARED TO ZEROS AT START)      (RETURNED)
C         MAXKEY        NUMBER OF HIGHEST LINE THAT CAN BE        (SENT) 
C                       RETRIEVED IN ARRAY DBUF 
C         MAXREG        ONE PLUS MAX. NUMBER OF REGISTERS PER        
C                       LINE THAT CAN BE RETRIEVED IN DBUF.
C                       (FIRST POSITION ON LINE CONTAINS KEY)     (SENT)
C         NKEY          NUMBER OF HIGHEST KEY FOUND IN FILE   (RETURNED)
C         IRTFLG        ERROR FLAG (O IS NORMAL RETURN)      (SENT/RET.)
C
C     
C  TYPICAL DOC FILE LINES:
C        KEY #REGS/LINE    VALUES ........
C  COL: 123456789 123456789 123456789 123456789 123456789 1234565789
C          1 4   20.070000   17.379999   17.379999   17.379999
C       999994   20.070000   17.379999   17.379999   17.379999
C         -1 5   21.070000   12.379999   12.379999   16.379999
C        ; COMMENT LINE (PREVIOUS LINE IS A CONTINUATION FOR KEY 99999)
C        : 1 4   20.070000   17.379999   17.379999   17.379999
C        ; COMMENT LINE (PREVIOUS LINE IS A COMMENT KEY LINE)
C
C  WHEN RETRIEVED THE LINE FOR KEY 1 IS PLACED IN LINE 1  OF DBUF AND
C  THE FIRST VALUE ON LINE ONE IS THE KEY NUMBER: 1 AND THE SECOND VALUE
C  OF LINE ONE IN DBUF IS: 20.07
C
C  THE LINE OF DBUF CORRESPONDING TO IKEY IS RETURNED IN PLIST
C  IF IKEY IS NOT FOUND AN ERROR MESSAGE IS PRINTED BUT DBUF
C  IS STILL RETURNED OK.
C
C  NOTE: AS OF 6/22/96, WE ARE ALLOWING KEYS UP TO 99999. I.E USING THE
C	  FIRST COLUMN.     ML
C  NOTE: AS OF 6/17/99, WE ARE ALLOWING KEYS UP TO 999999. AL
C
C--*******************************************************************

        SUBROUTINE UNSDAL(DOCNAM,ICALL,NDOC,IKEY,PLIST,NLIST,
     &                    DBUF,MAXKEY,MAXREG,NKEY,IRTFLG)

	INCLUDE 'CMBLOCK.INC' 

	DIMENSION       PLIST(*)
        DIMENSION       DBUF(MAXREG,MAXKEY)

	CHARACTER *(*)  DOCNAM
        CHARACTER *80   RECLIN
	LOGICAL ::      NEWFILE,WARNIT
     
C       NEGATIVE VALUE OF IRTFLG SUPPRESSES TERMINAL OUTPUT OF TITLE
	NPR    = IRTFLG
        WARNIT = .TRUE.

C       SET ERROR RETURN FLAG
	IRTFLG = 1

	IF (NLIST .LE. 0) THEN
	   WRITE(NOUT,*) '*** NUMBER OF REGISTERS NOT SPECIFIED'
	   RETURN

        ELSEIF (NLIST .GT. MAXREG) THEN
           WRITE(NOUT,101) (MAXREG-1)
101        FORMAT(' *** UNABLE TO UNSAVE DOCUMENT FILE'/
     &            ' *** CURRENTLY ONLY ',I3,' REGISTERS ALLOWED')
           RETURN
        ENDIF

        IF (IKEY .LT. 0) THEN
C          DESIRE A COMMENTED KEY

C          OPEN THE DOC FILE USING EXTENSION FROM DOCNAM
           CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,NDOCNIC,.FALSE.,' ',
     &               .TRUE.,.TRUE.,.TRUE.,NEWFILE,NPR)
           IF (NPR .NE. 0) RETURN
           NGOT = NLIST
           CALL LUNDOCGETCOM(NDOCNIC,IKEY,PLIST,NGOT,.FALSE.,IRTFLG)
           CLOSE(NDOC)
           RETURN
        ENDIF

C       ICALL=0 MEANS THAT CURRENTLY, NO CORE IMAGE OF DOCUMENT EXISTS.
C       OPEN FILE, DUMP DOCUMENT INTO CORE, PICK REGISTERS SELECTED,
C       SWITCH ICALL TO 1, CLOSE DOCUMENT FILE, AND RETURN.
C       ICALL=1 MEANS THAT CORE IMAGE IS AVAILABLE, AND ACCESS IS
C       AUTHORIZED BY CALLING ROUTINE WHICH DID THE COMPARISON BETWEEN
C       OLD FILE AND NEW FILE NAME.

        IF (ICALL .GT. 0) GOTO 591

C       -----------------------------------------------------------

C       OPEN THE DOC FILE USING EXTENSION FROM DOCNAM
        CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,NDOCNIC,.FALSE.,' ',
     &               .TRUE.,.TRUE.,.TRUE.,NEWFILE,NPR)
        IF (NPR .NE. 0) RETURN

C       ECHO FIRST HEADER FROM FILE
        CALL LUNDOCSAYHDR(NDOCNIC,NOUT,IRTFLG)
 
C       CLEAR DBUF RETURNED ANSWER BUFFER
        DO  I=1, MAXREG
           DO J = 1,MAXKEY
              DBUF(I,J) = 0.0
           ENDDO
        ENDDO

        NKEY   = 0
        NMAX   = MAXREG - 1
C -----------------------------------------------------------------

510     CALL LUNDOCREDNXT(NDOCNIC,IKEYT,PLIST,NMAX,IGO,ICOUNT,IRTFLG)
        IF (IRTFLG .EQ. 1) THEN
C          ERROR READING THIS LINE OF FILE, IGNORE THE ERROR
C          READ NEXT LINE OF DOC FILE
	   GOTO 510
        
        ELSEIF (IKEYT .GT. MAXKEY) THEN
C          KEY THAT WILL NOT FIT IN DBUF SENDS ERROR MSG.
           IF (WARNIT) THEN 
              WRITE(NOUT,9901) MAXKEY
9901          FORMAT(' KEYS GREATER THAN: ',I7,' NOT RETRIEVED')
              WARNIT = .FALSE.
           ENDIF

        ELSEIF (IRTFLG .NE. 2) THEN
C          KEY FITS IN DBUF OK, PUT KEY IN FIRST COL OF DBUF
           DBUF(1,IKEYT) = IKEYT
C          PUT VALUES IN REMAINING COLS. OF THIS LINE OF DBUF
           DO J = 2,ICOUNT+1
              DBUF(J,IKEYT) = PLIST(J-1)
           ENDDO
           IF (NKEY .LT. IKEYT) NKEY = IKEYT

C          READ NEXT LINE OF DOC FILE
	   GOTO 510
        ENDIF

C ---------------------------------------------------------------

C       END OF DOCUMENT FILE FOUND. SWITCH ICALL TO 1.
	ICALL = 1
        CLOSE(NDOC)

C ---------------------------------------------------------------

591     IF (IKEY .GT. 0) THEN
           IF (IKEY .GT. MAXKEY .OR. INT(DBUF(1,IKEY) + 0.5) .EQ. 0)THEN
	      WRITE(NOUT,8889) IKEY
8889	      FORMAT(' *** KEY:',I7,'  NOT FOUND')
              RETURN
	   ENDIF

	   DO  K = 1,NLIST
              PLIST(K) = DBUF(K+1,IKEY)
           ENDDO
        ENDIF

        IRTFLG = 0

	RETURN
	END


@


1.23
log
@GPL_2010
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.22
log
@GPL License fixed
@
text
@a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.21
log
@HRI GPL License used
@
text
@a2 1
C++*************************************************************************
a9 2
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      **
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
d13 1
a13 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a32 6

C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
@


1.20
log
@bug in comment key getting
@
text
@d2 1
d11 1
d13 24
@


1.19
log
@*** empty log message ***
@
text
@d108 1
a108 1
           CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,.FALSE.,' ',
d112 1
a112 1
           CALL LUNDOCGETCOM(NDOC,IKEY,PLIST,NGOT,.FALSE.,IRTFLG)
@


1.18
log
@incore opendoc used
@
text
@d147 1
a147 1
510     CALL LUNDOCREDNXT(NDOCNIC,IKEYT,PLIST,NMAX,ICOUNT,IRTFLG)
@


1.17
log
@opendoc has prompt parameter now
@
text
@d84 1
a84 1
	LOGICAL         NEWFILE,WARNIT
d129 1
a129 1
        CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,.FALSE.,' ',
d134 1
a134 1
        CALL LUNDOCSAYHDR(NDOC,NOUT,IRTFLG)
d147 1
a147 1
510     CALL LUNDOCREDNXT(NDOC,IKEYT,PLIST,NMAX,ICOUNT,IRTFLG)
@


1.16
log
@ngot not NLIST used in lundocgetcom as it is altered
@
text
@d4 1
a4 1
C UNSDAL.FOR        ADAPTED FOR EXTENDED FILE NAMES NOV 88 ArDean Leith
d7 1
d108 1
a108 1
           CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,.FALSE.,
d129 1
a129 1
        CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,.FALSE.,
@


1.15
log
@lunput should have been nout
@
text
@d110 2
a111 2

           CALL LUNDOCGETCOM(NDOC,IKEY,PLIST,NLIST,.FALSE.,IRTFLG)
@


1.14
log
@used lundoc
@
text
@d133 1
a133 1
        CALL LUNDOCSAYHDR(NDOC,LUNPUT,IRTFLG)
@


1.13
log
@does not compain about key not found if key is zero
@
text
@d4 3
a6 2
C UNSDAL.FOR                 ADAPTED FOR EXTENDED FILE NAMES NOV 88 al
C                            ALTERED FOR RUNTIME USE SEPT 96 al
d23 1
d36 2
a37 1
C                       LINE IS KEY NO. NOT A REGISTER)          
d69 2
a76 1
CNO_SAVE
d83 1
a83 1
	LOGICAL         NEWFILE,GOTCOM,WARNIT
d99 1
a99 1
     $            ' *** CURRENTLY ONLY ',I3,' REGISTERS ALLOWED')
d105 8
a112 2
           CALL DOCCOM(DOCNAM,NDOC,IKEY,PLIST,NLIST,NPR)
           IRTFLG = NPR
a124 1

d131 3
d143 2
a144 1
        GOTCOM = .FALSE.
d146 22
a167 1
C -----------------------------------------------------------------
d169 2
a170 45
C       READ NEXT LINE FROM DOC FILE
510	READ (NDOC,518,END=595) RECLIN
518	FORMAT(A80)

        IF (RECLIN(2:2) .EQ. ';') THEN
C         COMMENT LINE FOUND
          IF (.NOT. GOTCOM) THEN
C           FIRST COMMENT ENCOUNTERED, SO WRITE OUT THIS HEADING
            IF (NPR .GE. 0)  WRITE(NOUT,*) RECLIN
            GOTCOM = .TRUE.
          ENDIF
            
        ELSEIF (RECLIN(3:3) .EQ. '-') THEN
C         CONTINUATION LINE OBTAINED
          READ(RECLIN,620,ERR=510) KEYDUM,NREGPL
620       FORMAT(I5,I2)
          IF (NREGPL .GT. 0) THEN
             NGO  = NEND + 1
             NEND = MIN(NREGPL+NGO-1,MAXREG)
             READ(RECLIN,621,ERR=510) (DBUF(J,KEYGOT),J=NGO,NEND)
621          FORMAT(7X,6F12.6)
          ENDIF
        ELSE
C         REGULAR REGISTER LINE
          READ(RECLIN,620,ERR=510) KEYGOT,NREGPL

          IF (NREGPL .GT. 0 .AND. 
     &       (KEYGOT .LE. MAXKEY .AND. KEYGOT .GT. 0)) THEN
C           KEY FITS IN DBUF
            DBUF(1,KEYGOT) = KEYGOT
            NGO  = 2
            NEND = MIN(NREGPL+1,MAXREG)
            READ(RECLIN,621,ERR=510) (DBUF(J,KEYGOT),J=NGO,NEND)
            IF (NKEY .LT. KEYGOT) NKEY = KEYGOT

          ELSEIF (NREGPL .GT. 0) THEN
C           KEY THAT WILL NOT FIT IN DBUF SENDS ERROR MSG.
            IF (WARNIT) THEN 
               WRITE(NOUT,9901) MAXKEY
9901           FORMAT(' KEYS GREATER THAN: ',I7,' NOT RETRIEVED')
C              WRITE(NOUT,9900) KEYGOT
C9900          FORMAT(' *** ILLEGAL KEY: ',I7,' DISCARDED')
               WARNIT = .FALSE.
            ENDIF
          ENDIF
a172 3
C       READ NEXT LINE OF DOC FILE
	GOTO 510

d175 1
a175 2
C       END OF DOCUMENT FILE FOUND. CLOSE FILE AND SWITCH ICALL TO 1.
595  	CLOSE(NDOC)
d177 1
d181 6
a186 1
591     IF (IKEY .LE. 0) GOTO 9998
d188 4
a191 9
        IF (IKEY .GT. MAXKEY .OR. INT(DBUF(1,IKEY) + 0.5) .EQ. 0) THEN
	   WRITE(NOUT,8889) IKEY
8889	   FORMAT(' *** KEY:',I7,'  NOT FOUND')
           GOTO 9999
	ENDIF

	DO  K = 1,NLIST
           PLIST(K) = DBUF(K+1,IKEY)
        ENDDO
d193 1
a193 2
9998    IRTFLG = 0
9999    CLOSE(NDOC)
@


1.12
log
@comments improved
@
text
@d29 2
a30 1
C         IKEY          KEY FOR LINE OF REG. RETURNED IN PLIST    (SENT)
d35 2
a36 2
C         DBUF          BUFFER TO RETRIEVE ARRAY FROM 
C                           DOC. FILE                         (RETURNED)
d39 3
a41 2
C         MAXREG        ONE PLUS MAX. NUMBER OF REGISTERS PER     (SENT)
C                       LINE THAT CAN BE RETRIEVED IN DBUF.             (SENT)
d79 2
a80 3
	LOGICAL         NEWFILE,GOTCOM
        INTEGER WARNIT
       
d82 2
a83 1
	NPR  = IRTFLG
d151 6
a156 5
          NGO  = NEND + 1
          NEND = MIN(NREGPL+NGO-1,MAXREG)
          READ(RECLIN,621,ERR=510) (DBUF(J,KEYGOT),J=NGO,NEND)
621       FORMAT(7X,6F12.6)
       
d161 2
a162 1
          IF (KEYGOT .LE. MAXKEY .AND. KEYGOT .GT. 0) THEN
d170 1
a170 1
          ELSE
d172 7
a178 7
            IF(WARNIT.EQ.1) THEN 
            WRITE(NOUT,9901) MAXKEY
9901        FORMAT(' ALL KEYS GREATER THAN ',I7,' WILL BE IGNORED')
            WRITE(NOUT,9900) KEYGOT
9900        FORMAT(' *** ILLEGAL KEY: ',I7,' DISCARDED')
            WARNIT = 0
            END IF
d193 6
a198 5
591     IF (IKEY .GT. MAXKEY .OR. INT(DBUF(1,IKEY) + 0.5) .EQ. 0) THEN
	  WRITE(NOUT,8889) IKEY
8889	  FORMAT(' *** KEY:',I6,'  NOT FOUND')
          CLOSE(NDOC)
	  RETURN
d205 2
a206 2
        IRTFLG = 0
  	CLOSE(NDOC)
@


1.11
log
@commont improved for icall
@
text
@d7 8
a14 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d17 1
a17 1
C          NKEY,LERR)
d25 3
a27 5
C         ICALL         FLAG SHOWING A DOC FILE IS 
C                           IN DBUF NOW                  
C                           ICALL = 1 (GET LINE FROM OPEN ARRAY)
C                           ICALL = 0 (MUST OPEN & READ FILE) 
C                                                        (SENT/RETURNED)
d29 1
a29 2
C         IKEY          KEY FOR LINE OF REGISTERS RETURNED 
C                           IN PLIST                              (SENT)
d31 3
a33 3
C         NLIST         NUMBER OF REGISTERS RETRIEVED ON A 
C                           LINE (1ST VALUE RETRIEVED ON 
C                           EACH LINE IS NOT A REGISTER)          (SENT)
d36 4
a39 6
C         MAXKEY        MAX. NUMBER OF HIGHEST LINE THAT 
C                           CAN BE RETRIEVED IN ARRAY DBUF 
C                           FROM DOC FILE                         (SENT)
C         MAXREG        ONE PLUS MAX. NUMBER OF REGISTERS PER LINE THAT 
C                           CAN BE RETRIEVED IN 
C                           ARRAY DBUF FROM DOC FILE              (SENT)
d41 1
a41 1
C         LERR          ERROR FLAG (O IS NORMAL RETURN)       (RETURNED)
d60 1
a60 1
C  IS still RETURNED OK.
d62 1
a62 1
C   NOTE: AS OF 6/22/96, WE ARE ALLOWING KEYS UP TO 99999. I.E USING THE
d67 1
a67 1
     &                    DBUF,MAXKEY,MAXREG,NKEY,LERR)
d80 2
a81 2
C       NEGATIVE VALUE OF LERR SUPPRESSES TERMINAL OUTPUT OF TITLE
	NPR  = LERR
d84 1
a84 1
	LERR = 1
d100 1
a100 1
           LERR = NPR
d105 2
a106 2
C          OPEN FILE, DUMP DOCUMENT INTO CORE, PICK REGISTERS SELECTED,
C          SWITCH ICALL TO 1, CLOSE DOCUMENT FILE, AND RETURN.
d108 2
a109 2
C          AUTHORIZED BY CALLING ROUTINE WHICH DID THE COMPARISON BETWEEN
C          OLD FILE AND NEW FILE NAME.
d200 1
a200 1
        LERR = 0
@


1.10
log
@print one warning only.
@
text
@d28 1
a28 1
C                           ICALL = -1 (FIND MAX KEY IN FILE)
@


1.9
log
@undefined itemp removeed
@
text
@d84 1
d174 3
d179 2
@


1.8
log
@fixed
@
text
@a157 1
          IF (ITEMP .GT. NLIST+1) NREGPLB = NLIST - NREGPL
@


1.7
log
@fixed
@
text
@d43 2
a44 2
C         MAXREG        MAX. NUMBER OF KEYS PER LINE THAT 
C                           CAN BE RETRIEVED IN
d54 1
a54 1
C        99994   20.070000   17.379999   17.379999   17.379999
d56 3
a58 1
C        ; COMMENT LINE (PREVIOUS LINE IS A CONTINUATION FOR KEY 9999)
d61 1
a61 1
C  THE FIRST VALUE ON LINE ONE IS THE KEY: 1 AND THE SECOND VALUE
d73 1
a73 1
     1                    DBUF,MAXKEY,MAXREG,NKEY,LERR)
d78 2
a79 1
	DIMENSION       PLIST(*),SAV(40),DUMSAV(40),DBUF(MAXREG,MAXKEY)
d83 2
a84 5
        CHARACTER *1    NULL
	LOGICAL         NEWFILE,COMKEY,FIRST

        NULL = CHAR(0)

d92 1
a92 1
	   WRITE(NOUT,*) ' *** REGISTER LIST EMPTY'
d96 1
a96 1
           WRITE(NOUT,101)(MAXREG-1)
d98 1
a98 1
     $     ' *** CURRENTLY ONLY ',I3,' REGISTERS ALLOWED ****')
a101 2
        COMKEY = .FALSE.

d104 6
a109 6
           COMKEY = .TRUE.
           IKEY = ABS(IKEY)
C          DO NOT USED IN-CORE IMAGE, MUST READ THRU ALL OF DOC FILE.
        ELSE
C          DESIRE REGULAR KEYS           
C          ICALL=0 MEANS THAT CURRENTLY, NO CORE IMAGE OF DOCUMENT EXISTS.
d112 1
a112 1
C          ICALL=1 MEANS THAT CORE IMAGE IS AVAILABLE, AND ACCESS IS
d116 4
a119 2
           IF (ICALL .GT. 0) GOTO 591
        ENDIF
d126 6
a131 9

        IF (.NOT. COMKEY) THEN
C         CLEAR DBUF RETURNED ANSWER BUFFER
          DO  K=1,MAXKEY
            DO I=1,MAXREG
              DBUF(I,K) = 0.0
            ENDDO
          ENDDO
        ENDIF
d133 2
a134 2
        NKEY  = 0
        FIRST = .TRUE.
d136 1
a136 1
C -------------------------------------------------------
d142 3
a144 21
        IF (COMKEY) THEN
C         ARE SEARCHING FOR COMMENT KEYS

          IF (RECLIN(2:2) .EQ. ';')THEN
C           COMMENT LINE FOUND AND ARE SEARCHING FOR COMMENT KEYS
            READ(RECLIN(3:80),619,ERR=510) NDUM,NDUMB2,
     &          (PLIST(K),K=1,NDUMB2)
619         FORMAT(I3,I2,6F12.6)

            IF (NDUM .EQ. IKEY) THEN
C             DESIRED COMMENT KEY FOUND
              LERR = 0
              CLOSE(NDOC)
              RETURN
            ENDIF
          ENDIF

        ELSEIF (RECLIN(2:2) .EQ. ';') THEN
C         COMMENT LINE FOUND AND WE ARE NOT SEARCHING FOR COMMENT KEYS

          IF (NFIRST .EQ. 0) THEN
d146 2
a147 3
            IF (NPR .GE .0) WRITE(NOUT,700) RECLIN
700         FORMAT(A80)
            NFIRST=1
d149 1
a149 1

d152 8
a159 10
          READ(RECLIN,620,ERR=510)ND,ND2,(DUMSAV(J), J=2,ND2+1)
620       FORMAT(I5,I2,6F12.6)
          ITEMP = NDUMB2+1+ND2
          IF (ITEMP .GT. NLIST+1)  ND2 = NLIST - NDUMB2
          IF (ND2 .GT. 0) THEN
             DO KK=2,ND2+1
                 DBUF(KK+NDUMB2,NDUM) = DUMSAV(KK)
             ENDDO
             NDUMB2 = ND2 + NDUMB2
          ENDIF        
d161 2
d164 1
a164 4
C         NOT A COMMENT AND WE ARE NOT SEARCHING FOR COMMENT KEYS
          READ(RECLIN,620,ERR=510)NDUM,NDUMB2,(DUMSAV(J),J=2,NDUMB2+1)

          IF (NDUM .LE. MAXKEY) THEN
d166 10
a175 13
            DBUF(1,NDUM) = NDUM
            DO  KK=2,NDUMB2+1
               DBUF(KK,NDUM) = DUMSAV(KK)
            ENDDO
            IF (NKEY .LT. NDUM) NKEY = NDUM

          ELSEIF (FIRST) THEN
C           FIRST KEY THAT WILL NOT FIT IN DBUF SENDS ERROR MSG.
            NTEMP = MAXKEY
            WRITE(NOUT,9900) NTEMP
9900        FORMAT(' *** ERROR, ONE OR MORE KEYS LOST AS > DBUF ARRAY'        
     &             ' LIMIT OF: ',I6,/)
            FIRST = .FALSE.
d186 1
a186 1
	IF (.NOT. COMKEY) ICALL = 1
d188 1
a188 6
591     IF (COMKEY) THEN
	  WRITE(NOUT,8888) IKEY
8888	  FORMAT(' *** COMMENT KEY:',I6,' NOT FOUND')
          CLOSE(NDOC)
	  RETURN
        ENDIF
d190 1
a190 1
        IF (IKEY .GT. MAXKEY .OR. INT(DBUF(1,IKEY) + 0.5) .EQ. 0) THEN
d197 1
a197 1
	DO  K=1,NLIST
@


1.6
log
@misc changes
@
text
@d124 1
a124 1
        IF (LERR .NE. 0) RETURN
@


1.5
log
@bad RECLIN(:2) replaced with RECLIN(2:2)
@
text
@d4 3
a6 2
C UNSDAL.FOR
C               ADAPTED FOR EXTENDED FILE NAMES NOV 88 al
d27 4
a30 1
C                           IN DBUF NOW                  (SENT/RETURNED)
d35 3
a37 2
C         NLIST         NUMBER OF KEYS ON A LINE (1ST VALUE 
C                           ON EACH LINE IS NOT A KEY)            (SENT)
d44 2
a45 2
C                            CAN BE RETRIEVED IN
C                            ARRAY DBUF FROM DOC FILE             (SENT)
d51 1
d55 2
a56 1
C        KEY #REGS/LINE    VALUES ........
d58 1
a58 1
C  WHEN RETRIEVED THIS LINE IS PLACED IN LINE 1 (KEY) OF DBUF AND
d64 1
a64 1
C  IS RETURNED OK.
d71 1
a71 1
     1    DBUF,MAXKEY,MAXREG,NKEY,LERR)
d74 1
a74 1
        COMMON /DOCLAB/ DOCTIC
d76 1
a76 1
	DIMENSION     PLIST(*),SAV(20),DUMSAV(20),DBUF(MAXREG,MAXKEY)
a77 2
C*      DOCTIC ADDED JULY 13 1987 al
        CHARACTER *80   DOCTIC,RECLIN
d79 1
d81 1
a81 1
	LOGICAL         NEWFILE,COMKEY,OLDLEN,FIRST
d83 1
a83 1
        NULL=CHAR(0)
d87 1
d98 1
a98 1
     $     ' *** CURRENTLY ONLY ',I2,' REGISTERS ALLOWED ****')
d108 1
a108 1

d118 1
a118 1
           IF (ICALL .NE. 0) GOTO 591
d123 1
a123 1
     &               .TRUE.,.TRUE.,.TRUE.,NEWFILE,LERR)
d126 1
a144 6
        IF (RECLIN(5:5) .EQ. ' ') THEN
           OLDLEN = .TRUE.
        ELSE
           OLDLEN = .FALSE.
        ENDIF

d150 1
a150 2
            IF (OLDLEN) THEN
               READ(RECLIN(3:80),519,ERR=510) NDUM,NDUMB2,
d152 1
a152 6
519            FORMAT(2I2,6F12.6)
            ELSE
               READ(RECLIN(3:80),619,ERR=510) NDUM,NDUMB2,
     &          (PLIST(K),K=1,NDUMB2)
619            FORMAT(I3,I2,6F12.6)
            ENDIF
a163 1
          DOCTIC = RECLIN
d166 2
a167 2
C           FIRST SEMI ENCOUNTERED, SO WRITE OUT HEADING
            IF (NPR.GE.0) WRITE(NOUT,700) RECLIN
d173 11
a183 3
C         NO PROVISION FOR CONTINUATION LINES
          WRITE(NOUT,*) ' *** SKIPPED CONTINUATION LINE IN DOC FILE'
        
d187 1
a187 9
          IF (OLDLEN) THEN
              READ(RECLIN,520,ERR=510)NDUM,NDUMB2,(DUMSAV(J),
     &        J=2,NDUMB2+1)
520           FORMAT(I4,I2,6F12.6)
          ELSE
              READ(RECLIN,620,ERR=510)NDUM,NDUMB2,(DUMSAV(J),
     &        J=2,NDUMB2+1)
620	      FORMAT(I5,I2,6F12.6)
          ENDIF
d202 1
a202 1
     &             ' LIMIT OF',I6,/)
d218 1
a218 1
8888	  FORMAT(' *** COMMENT KEY:',I6,'  NOT FOUND')
@


1.4
log
@make key go to 99999
@
text
@d146 1
a146 1
          IF (RECLIN(:2) .EQ. ';')THEN
d166 1
a166 1
        ELSEIF (RECLIN(:2) .EQ. ';') THEN
@


1.3
log
@used opendoc and cosmetic
@
text
@d59 2
a65 1
#ifdef SP_UNIX
a66 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif
d135 1
a135 1
518	FORMAT(1X,A80)
d137 1
a137 1
        IF (RECLIN(4:4) .EQ. ' ') THEN
d146 1
a146 1
          IF (RECLIN(:1) .EQ. ';')THEN
d149 1
a149 1
               READ(RECLIN(2:80),519,ERR=510) NDUM,NDUMB2,
d153 1
a153 1
               READ(RECLIN(2:80),619,ERR=510) NDUM,NDUMB2,
d166 1
a166 1
        ELSEIF (RECLIN(:1) .EQ. ';') THEN
d173 1
a173 1
700         FORMAT(1X,A80)
d177 1
a177 1
        ELSEIF (RECLIN(2:2) .EQ. '-') THEN
d187 1
a187 1
520           FORMAT(I3,I2,6F12.6)
d191 1
a191 1
620	      FORMAT(I4,I2,6F12.6)
@


1.2
log
@cpp_lines_added
@
text
@d19 3
a21 3
C    PURPOSE:  RECOVERS ARRAY OF REGISTERS FROM DOCUMENT FILES.  IF IKEY
C              IS <0 RECOVERS THE LINE OF REGISTERS FROM THE COMMENT
C              LINE HAVING THAT COMMENT KEY ONLY. 
d23 20
a42 15
C    PARAMETERS:
C         DOCNAM        DOC. FILE NAME INCLUDING EXTENSION     (SENT)
C         ICALL         FLAG SHOWING A DOC FILE IS IN DBUF NOW (SENT/RETURNED)
C         NDOC          LOGICAL UNIT FOR DOC FILE                     (SENT)
C         IKEY          KEY FOR LINE OF REGISTERS RETURNED IN PLIST   (SENT)
C         PLIST         ARRAY TO HOLD OUTPUT FROM KEY IKEY          (RETURNED)
C         NLIST         NUMBER OF KEYS ON A LINE (1ST VALUE ON EACH LINE
C                                               IS NOT A KEY)   (SENT)
C         DBUF          BUFFER THAT RETRIEVES ARRAY FROM DOC. FILE  (RETURNED)
C         MAXKEY        MAX. NUMBER OF HIGHEST LINE THAT CAN BE RETRIEVED IN
C                            ARRAY DBUF FROM DOC FILE           (SENT)
C         MAXREG        MAX. NUMBER OF KEYS PER LINE THAT CAN BE RETRIEVED IN
C                            ARRAY DBUF FROM DOC FILE           (SENT)
C         NKEY          NUMBER OF HIGHEST KEY FOUND IN FILE     (RETURNED)
C         LERR          ERROR FLAG (O IS NORMAL RETURN)         (RETURNED)
d45 5
a49 4
C    TYPICAL DOC FILE LINE:
C    COL: 123456789 123456789 123456789 123456789 123456789 1234565789
C           1 4   20.070000   17.379999   17.379999   17.379999
C         KEY #REGS/LINE    VALUES ........
d51 3
a53 3
C    WHEN RETRIEVED THIS LINE IS PLACED IN LINE 1 (KEY) OF DBUF AND
C    THE FIRST VALUE ON LINE ONE IS THE KEY: 1 AND THE SECOND VALUE
C    OF LINE ONE IN DBUF IS: 20.07
d55 3
a57 3
C    THE LINE OF DBUF CORRESPONDING TO IKEY IS RETURNED IN PLIST
C    IF IKEY IS NOT FOUND AN ERROR MESSAGE IS PRINTED BUT DBUF
C    IS RETURNED OK.
d77 1
a77 1
	LOGICAL         EX,COMKEY,OLDLEN,FIRST
d116 5
a120 15
        NLETD = INDEX(DOCNAM,NULL)
	WRITE(NOUT,1111) DOCNAM(:NLETD)
1111	FORMAT(1X,A)

	INQUIRE(FILE=DOCNAM,EXIST=EX)
	IF (.NOT. EX) THEN
           CALL ERRT(18,'UNSDAL',NE)
           WRITE(NOUT,8899) DOCNAM
8899	   FORMAT(' *** FILE DOES NOT EXIST:',A)
           LERR=2
           RETURN
        ENDIF

	OPEN(UNIT=NDOC,FILE=DOCNAM,STATUS='OLD')

d122 2
a123 3
C         CLEAR BUFFER

	  DO  K=1,MAXKEY
d125 1
a125 1
              DBUF(I,K)=0.0
d129 1
d199 3
a201 2
            DO 200 KK=2,NDUMB2+1
200         DBUF(KK,NDUM) = DUMSAV(KK)
d237 3
a239 2
	DO 598 K=1,NLIST
598	PLIST(K) = DBUF(K+1,IKEY)
d243 1
@


1.1
log
@Initial revision
@
text
@d58 3
d62 1
@
