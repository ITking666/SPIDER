head	1.4;
access;
symbols
	best-code:1.3
	x-named-regs:1.3
	x:1.3
	v13-00:1.3
	pre_GPL:1.1
	prec_CA:1.1
	noindx:1.1
	Bproc:1.1
	oct21:1.1
	last77:1.1;
locks; strict;
comment	@c @;


1.4
date	2006.11.03.13.59.17;	author leith;	state dead;
branches;
next	1.3;

1.3
date	2005.10.17.20.35.48;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.17.18.26.18;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	97.05.15.14.43.37;	author pawel;	state Exp;
branches;
next	;


desc
@User supplied subroutine, first draft.
@


1.4
log
@obsolete and never used
@
text
@C++*********************************************************************
C
C $$ USER1.FOR
C
C **********************************************************************
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
C=*                                                                    *
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* This program is distributed in the hope that it will be useful,    *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
C=* General Public License for more details.                           *
C=*                                                                    *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
C=*                                                                    *
C **********************************************************************
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************
C
C $$ USER1.FOR
C    OPERATION  "US ONE"
C
	SUBROUTINE USER1(MAXMEM)
C  INCLUDE COMMONS WITH SYSTEM INFORMATION      
	INCLUDE 'CMBLOCK.INC'
C 
	DIMENSION Q(1)
	POINTER   (IPQ,Q) 
	LOGICAL         RUNTIME 
	COMMON          BUF(1024),KAF(1) 
C
	CHARACTER *81 FILNAM
	CHARACTER *1  NULL,MODE
	DATA  LUN1,LUN2/8,9/
C NO_SAVE directive signals f77 compiler to use non-static option
CNO_SAVE
	NULL=CHAR(0)
C  ASK FOR THE NAME OF INPUT FILE
	CALL FILERD(FILNAM,NLETI,NULL,'INPUT',IRTFLG)
	IF(IRTFLG .EQ. -1) GOTO 5
C NSAM - x-dimension
C NROW - y-dimension
C NSLICE - z-dimension
C 'R' - indicates "read-only" file, cannot be overwritten
	CALL OPENFB(BUF,FILNAM,LUN1,NSAM,NROW,'R',NF,NSLICE)
C  check whether the file exists, NF=0 indicates it does not
	IF(NF.EQ.0)  GOTO 130
C  variable IFORM is located in COMMON /????/ and assigned
C  in OPENFB.  It tells what is the format of opened file.
C  IFORM=3  - real 3D file
C  IFORM=1  - real 1D file (NSLICE=1)
C  IFORM<0  - Fourier files
C
C  This command works only for real files.
	IF(IFORM.LT.0)  GOTO 145
C
C  Memory allocation part.
C  Set variables for memory division
C  This operation needs two volumes, each NSAM*NROW*NSLICE large.
	K1=1
	K2=K1+NSAM*NROW*NSLICE
	MEMWANT=K2+NSAM*NROW*NSLICE
C Allocate memory
	CALL CHKMEM(MEMWANT,KAF,MAXMEM-(1024), 
     &              RUNTIME,IPQ,IRTFLG)
	IF(IRTFLG.NE.0) THEN 
C  Failed to allocate memory
	CALL ERRT(6,'US ONE ',NE)
	GOTO  5
	ENDIF
C
C Ask for OUTPUT file
	CALL FILERD(FILNAM,NLETO,NULL,'OUTPUT',IRTFLG)
	IF (IRTFLG .EQ. -1) GOTO 5
C Open OUTPUT file.  'UNKNOWN' tells the program to overwrite
C existing file.
	CALL OPENFB(BUF,FILNAM,LUN2,NSAM,NROW,'UNKNOWN',NF,NSLICE)
	IF(NF.EQ.0)  GOTO 130
C
C  Solicit numerical parameters
        CALL  RDPRM2(A1,A2,NLOOP,ILOOP,'Central weight, side weight')
C
C  Call the subroutine that will do the actual processing
        CALL  USONE(Q(K1),LUN1,Q(K2),LUN2,NSAM,NROW,NSLICE,A1,A2)
C
C  Deallocate memory
        IF(RUNTIME) CALL ALLOCIT(0,RUNTIME,IPQ,'US ONE',IRTFLG) 
C
5       CLOSE(LUN1)
        CLOSE(LUN2)
        RETURN
130	CALL ERRT(4,'US ONE ',NE)
	GOTO 5
145	CALL ERRT(2,'US ONE ',NE)
	GOTO 5
	END
C
	SUBROUTINE  USONE(BIN,LUN1,BOU,LUN2,NSAM,NROW,NSLICE,A1,A2)
	DIMENSION  BIN(NSAM,NROW,NSLICE),BOU(NSAM,NROW,NSLICE)
CNO_SAVE
C
C  This program applies 1D moving average in X-direction (NSAM)
C  The result is "directional" filtration in one dimention
C
C BOU(I,*,*)=(A1*BIN(I,*,*)+A2*(BIN(I-1,*,*)+BIN(I+1,*,*)))/(A1+A2+A2)
C
C  This program works for both 2D and 3D files.  This is thanks to the way
C  3D files are organized in SPIDER - they have NSLICE 2D slices.
C  2D file is a 3D file with NSLICE=1.
C
C  Read input volume
        DO  101  K=1,NSLICE
        DO  101  J=1,NROW
	IREC=J+(K-1)*NROW
101	CALL  REDLIN(LUN1,BIN(1,J,K),NSAM,IREC)
C
C  Define center of the volume according to SPIDER convention, not
C  used in this program, just an example.
C	NXC=NSAM/2+1
C	NYC=NROW/2+1
C	NZC=NSLICE/2+1
C
	Q=1.0/(A1+A2+A2)
C Do the processing
C Following line is a compiler parallel directive for SGI mp.
C$doacross local(i,j,k)
	DO  201  K=1,NSLICE
	DO  201  J=1,NROW
C Next two line take care of border effect.  If the image is not to
C be treated as circularly closed, they should be commented out.
	BOU(1,J,K)=(A1*BIN(1,J,K)+A2*(BIN(NSAM,J,K)+BIN(2,J,K)))*Q
	BOU(NSAM,J,K)=(A1*BIN(NSAM,J,K)+A2*(BIN(NSAM-1,J,K)+BIN(1,J,K)))*Q
C Here it is required that NSAM is at least 3.  It is nowhere
C checked, but it can be easily added.
	DO  201  I=2,NSAM-1
201	BOU(I,J,K)=(A1*BIN(I,J,K)+A2*(BIN(I-1,J,K)+BIN(I+1,J,K)))*Q
C
C  Write output volume
        DO  102  K=1,NSLICE
        DO  102  J=1,NROW
	IREC=J+(K-1)*NROW
102	CALL  REDLIN(LUN2,BOU(1,J,K),NSAM,IREC)
C  Files will be closed in the calling program (USER1)
	END
@


1.3
log
@GPL License fixed
@
text
@@


1.2
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a29 1
C **************************************************************************
a32 1
C--************************************************************************
@


1.1
log
@Initial revision
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d44 1
@

