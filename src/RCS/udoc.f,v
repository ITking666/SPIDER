head	1.30;
access;
symbols
	healthdept_2018:1.30
	pre_getangas:1.29
	GPL2010:1.28
	pre_GPL2010:1.27
	pre_var_equation:1.27
	pre_fftwrings:1.27
	pre_opfiles:1.27
	src:1.27
	best-code:1.27
	named-reg:1.27
	x-named-regs:1.26
	x:1.26
	v13-00:1.26
	pre_GPL:1.24
	prec_CA:1.24
	noindx:1.21
	Bproc:1.18
	oct21:1.14
	last77:1.12;
locks; strict;
comment	@c @;


1.30
date	2018.10.03.14.51.08;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2010.10.25.19.30.26;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2010.06.24.13.27.10;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2005.12.12.15.31.02;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2005.10.17.20.29.19;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2005.10.17.18.20.38;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2003.07.11.19.12.24;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2003.07.10.18.54.53;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2003.07.08.16.18.28;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2002.09.18.15.20.30;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2002.08.07.17.50.10;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2000.12.19.19.50.21;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2000.09.07.17.46.33;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2000.08.08.19.39.10;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2000.07.03.13.45.01;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	99.11.18.18.55.52;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	99.06.25.18.19.39;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	99.06.17.19.11.04;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	99.02.05.13.38.43;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	97.10.14.21.19.22;	author pawel;	state Exp;
branches;
next	1.10;

1.10
date	97.10.14.16.27.39;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	97.06.02.12.56.53;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	97.06.02.12.49.56;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.07.30.15.00.51;	author mladjadj;	state Exp;
branches;
next	1.6;

1.6
date	96.07.02.18.34.32;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	94.11.08.17.33.26;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	94.10.31.12.10.39;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	94.07.19.12.23.33;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.06.27.19.41.27;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.59;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.30
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C UDOC.F                      LONG FILE NAMES     FEB   89 ArDean Leith
C                             CHAR VARIABLES      AUG   89 ArDean Leith
C                             DOC FILE LEFT OPEN  NOV   89 ArDean Leith
C                             USED LUNDOC         JUN   99 ArDean Leith
C                             TILLEND BUG         NOV   99 ArDean Leith
C                             ADDED NEEDREWIND    JUN   00 ArDean Leith
C                             OPENDOC PARAMETERS  DEC   00 ARDEAN LEITH
C                             ICOUNT > NLIST BUG  AUG   02 ARDEAN LEITH
C                             ERRT PARAM          OCT   10 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  UDOC(CFUNC,NDOC)
C
C  PURPOSE:  SUPPORTS OPERATION TO RETRIEVE A LINE OF REGISTERS FROM 
C            DOC FILE. ALWAYS SOLICITS FILENAME,  OPENS FILE IF NAME
C            NOT SAME AS PREVIOUS DOC FILE USED BY THIS OPERATION.
C            REGISTERS ARE SPECIFED ON COMMAND LINE.
C            JUNE 2000 IF "UD S" NOW WILL REWIND AND TRY AGAIN IF IT
C            CAN NOT FIND KEY ON FIRST PASS THRU REMAINING PART OF FILE.
C             
C  TYPICAL USAGE: 
C            UD 11,X10,X11       (RETRIEVE)
C            UD X11,X10,X11      (RETRIEVE)
C            UD S,11,X10,X11     (SEQUENTIAL RETRIEVE)
C            UD E                (CLOSES LAST DOC. FILE OPENED WITH UD)
C            UD -5,X5,X10,X15    (RETRIEVE COMMENT KEY LINES (;KEY))
C
C  PARAMETERS:    CFUNC   OPERATION READ INTO DRIVER           (SENT)
C                 NDOC    LUN NUMBER OF FILE                   (SENT)
C
C  CALLS          UNSAV
C
C--*********************************************************************

	SUBROUTINE UDOC(CFUNC,NDOC)

C       SAVE IS NEEDED FEB 99 al
        SAVE

        INCLUDE 'CMLIMIT.INC' 
        INCLUDE 'CMBLOCK.INC'

        CHARACTER(LEN=*)            :: CFUNC
        INTEGER                     :: NDOC

        INTEGER, PARAMETER          :: MAXLIST=100
	REAL                        :: DLIST(MAXLIST)
                 
        CHARACTER(LEN=MAXNAM)       :: DOCNAM,DOC
        CHARACTER(LEN=MAXNAM), SAVE :: OLDNAM
        INTEGER, SAVE               :: LUNOLD

        CHARACTER(LEN=1)            :: NULL
	LOGICAL                     :: NEWFILE,COMOUT,TILLEND,NEEDREWIND

	DATA           LUNOLD/0/
        DATA           OLDNAM/'-'/

        NULL        = CHAR(0)

        IF (CFUNC(4:4) .EQ. 'E') THEN
C          ENDS USE OF THIS DOC FILE
           CLOSE(NDOC)
           OLDNAM = NULL
           LUNOLD = 0
           RETURN
        ENDIF

C       GET DOC FILE NAME
	CALL FILERD(DOC,NLET,NULL,'DOCUMENT',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       DEFAULT TO NEED REWIND IF KEY NOT FOUND
        NEEDREWIND = .TRUE.

        IF (NDOC .NE. LUNOLD .OR. DOC .NE. OLDNAM) THEN
C         DIFFERENT DOC FILE OR DIFFERENT LUN FOR DOC FILE
          IF (LUNOLD .NE. 0) CLOSE(LUNOLD)
          LUNOLD = 0
          OLDNAM = NULL

C         OPEN THE DOC FILE
          DOCNAM = DOC
          CALL OPENDOC(DOCNAM,.TRUE.,NLET,NDOC,NIC,.FALSE.,' ',
     &                 .TRUE.,.TRUE.,.TRUE.,NEWFILE,IER)
          IF (IER .NE. 0) RETURN

C         ECHO FIRST COMMENT FROM DOC FILE UPON OPENING
          CALL LUNDOCSAYHDR(NDOC,NOUT,IRTFLG)

          OLDNAM     = DOC
          LUNOLD     = NDOC
C         NO NEED TO REWIND IF KEY NOT FOUND
          NEEDREWIND = .FALSE.
        ENDIF

        IGO     = 4
        TILLEND = .TRUE.
	IF (CFUNC(4:4) .EQ. 'S') THEN
C          USE SEQUENTIAL SEARCH MODE
           TILLEND = .FALSE.
           IGO     = 6
        ENDIF

C       REGISTER LINE ALREADY LOADED IN RDPR 
C       PARSE REGISTER LINE TO GET IKEY & NLIST 
        CALL REG_DOC_PARSE(CFUNC(IGO:),COMOUT,IKEY,NLIST,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       RETRIEVE THE LIST OF VALUES FOR THIS KEY, LOOK TILL EOF
C       IF TILLEND IS TRUE

10      CALL LUNDOCREDDAT(NDOC,IKEY,DLIST,NLIST,ICOUNT,
     &                    TILLEND,.FALSE.,IRTFLG)

        IF (IRTFLG .EQ. 0 .AND. ICOUNT .GT. 0) THEN
C         SUCCESSFUL RECOVERY OF KEY,  
          ICOUNT = MIN(ICOUNT,NLIST)
          CALL REG_SET_NSELA(ICOUNT,DLIST,.TRUE.,IRTFLG)

        ELSE IF (CFUNC(4:4) .EQ. 'S' .AND. NEEDREWIND) THEN
           REWIND(NDOC)
C          NO NEED TO REWIND IF KEY NOT FOUND ON SECOND PASS
           NEEDREWIND = .FALSE.
C          TRY SECOND PASS THRU FILE
           GOTO 10

        ELSE
           CALL ERRT(102,'KEY NOT FOUND',IKEY)
        ENDIF

        IF (TILLEND) THEN
           REWIND(NDOC)
        ENDIF

C       DO NOT CLOSE FILE UNTIL 'UD E' IS GIVEN!

	RETURN
	END


@


1.29
log
@ERRT PARAM, and SAVE declarations (cosmetic)
@
text
@d19 1
a19 1
C=* Email: spider@@wadsworth.org                                        *
@


1.28
log
@GPL_2010
@
text
@d4 9
a12 8
C UDOC.F                      LONG FILE NAMES FEB 89 ArDean Leith
C                             CHAR VARIABLES AUG 89 ArDean Leith
C                             DOC FILE LEFT OPEN NOV 89 ArDean Leith
C                             USED LUNDOC JUNE 99 ArDean Leith
C                             TILLEND BUG NOV. 99 ArDean Leith
C                             ADDED NEEDREWIND JUNE 00 ArDean Leith
C                             OPENDOC PARAMETERS  DEC 2000 ARDEAN LEITH
C                             ICOUNT > NLIST BUG  AUG 2002 ARDEAN LEITH
d66 2
a67 2
        CHARACTER(LEN=MAXNAM) :: DOCNAM,DOC
        COMMON /COMMUN/ DOCNAM,DOC
d69 2
a70 2
        INTEGER,PARAMETER     :: MAXLIST=100
	COMMON                 DLIST(MAXLIST)
d72 6
a77 4
        CHARACTER(LEN=*)      :: CFUNC
        CHARACTER(LEN=MAXNAM) :: OLDNAM
        CHARACTER(LEN=1)      :: NULL
	LOGICAL               :: NEWFILE,COMOUT,TILLEND,NEEDREWIND
d84 1
a84 1
       IF (CFUNC(4:4) .EQ. 'E') THEN
d135 1
d152 1
a152 2
           WRITE(NOUT,*) ' *** KEY NOT FOUND: ',IKEY
           CALL ERRT(100,'RDDOCQ',NE)
@


1.27
log
@native named registers
@
text
@a12 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d14 5
a18 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d20 1
a20 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d25 1
a25 1
C=* This program is distributed in the hope that it will be useful,    *
d27 1
a27 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a28 1
C=*                                                                    *
d30 1
a30 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.26
log
@GPL License fixed
@
text
@d72 2
a73 2
        PARAMETER              (NMAX = 100)
	COMMON                 ILIST(NMAX),DLIST(NMAX)
d129 3
a131 3
C       PARSE REGISTER LINE, CHECK FOR ',' OR 'X' 
        CALL LUNDOCPARSE(CFUNC(IGO:),COMOUT,IKEY,ILIST,NMAX,
     &                   NLIST,IRTFLG)
d140 1
a140 1
C         SUCCESSFUL RECOVERY OF KEY, ILIST HAS REG VALUES 
d142 1
a142 10
          DO K=1,ICOUNT
             CALL REG_SET(ILIST(K),DLIST(K),.TRUE.,IRTFLG)
          END DO

          IF (ICOUNT .LT. NLIST) THEN
C            FILL REMAINING REGS. WITH ZEROS
             DO K = ICOUNT+1,NLIST
                CALL REG_SET(ILIST(K), 0.0 ,.TRUE.,IRTFLG)
             END DO
          ENDIF
@


1.25
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a12 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d16 1
a16 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a35 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.24
log
@can coexist with incore opening!
@
text
@d2 1
d15 24
@


1.23
log
@renamed from rddocq.f
@
text
@a93 4
          IF (NIC .LE. 0) THEN
              CALL ERRT(101,'USE <UD IC> FOR INCORE DOC FILE.',NE)
              RETURN
          ENDIF 
@


1.22
log
@incore opendoc
@
text
@d4 1
a4 1
C RDDOCQ.F                    LONG FILE NAMES FEB 89 ArDean Leith
d21 1
a21 1
C  RDDOCQ(CFUNC,NDOC)
d44 1
a44 1
	SUBROUTINE RDDOCQ(CFUNC,NDOC)
@


1.21
log
@lundocredddat parameter added
@
text
@d49 1
d52 1
a52 1
        CHARACTER *81  DOCNAM,DOC
d55 2
a56 2
        PARAMETER      (NMAX = 100)
	COMMON         ILIST(NMAX),DLIST(NMAX)
d58 4
a61 1
        CHARACTER *(*) CFUNC
a62 4
        CHARACTER *81  OLDNAM
        CHARACTER *1   NULL
	LOGICAL        NEWFILE,COMOUT,TILLEND,NEEDREWIND

d91 1
a91 1
          CALL OPENDOC(DOCNAM,.TRUE.,NLET,NDOC,.FALSE.,' ',
d94 4
@


1.20
log
@icount > nlist bug
@
text
@d119 2
a120 1
10      CALL LUNDOCREDDAT(NDOC,IKEY,DLIST,NLIST,ICOUNT,TILLEND,IRTFLG)
@


1.19
log
@opendoc has prompt parameter now
@
text
@d11 1
a11 1
C
d123 1
@


1.18
log
@do not close lunold if zero
@
text
@d4 7
a10 6
C RDDOCQ.F                     LONG FILE NAMES FEB 89 ArDean Leith
C                              CHAR VARIABLES AUG 89 ArDean Leith
C                              DOC FILE LEFT OPEN NOV 89 ArDean Leith
C                              USED LUNDOC JUNE 99 ArDean Leith
C                              TILLEND BUG NOV. 99 ArDean Leith
C                              ADDED NEEDREWIND JUNE 00 ArDean Leith
d91 1
a91 1
          CALL OPENDOC(DOCNAM,.TRUE.,NLET,NDOC,.FALSE.,
@


1.17
log
@used reg_set
@
text
@d84 1
a84 1
          CLOSE(LUNOLD)
@


1.16
log
@added needrewind.
@
text
@d121 1
a121 1
C         SUCCESSFUL RECOVERY OF KEY, ILIST (REG + 1) VALUES 
d123 1
a123 1
             PARAM(ILIST(K)) = DLIST(K)
d129 1
a129 1
                PARAM(ILIST(K)) = 0.0
@


1.15
log
@ud s bug fixed works now
@
text
@d9 1
d26 3
a28 1
C            
a40 2
C        0         2         3         4         5         6         7     
C23456789012345678901234567890123456789012345678901234567890123456789012
d60 1
a60 1
	LOGICAL        NEWFILE,COMOUT,TILLEND
d79 3
d97 4
a100 2
          OLDNAM = DOC
          LUNOLD = NDOC
d118 1
a118 1
        CALL LUNDOCREDDAT(NDOC,IKEY,DLIST,NLIST,ICOUNT,TILLEND,IRTFLG)
d132 8
d145 4
a148 1
        IF (TILLEND) REWIND(NDOC)
@


1.14
log
@bug in nlist return
@
text
@d4 5
a8 4
C RDDOCQ.FOR                      LONG FILE NAMES FEB 89 ArDean Leith
C                                 CHAR VARIABLES AUG 89 ArDean Leith
C                                 DOC FILE LEFT OPEN NOV 89 ArDean Leith
C                                 USED LUNDOC JUNE 99 ArDean Leith
d44 1
a44 1
C       I THINK SAVE IS NEEDED FEB 99 al
d49 1
d57 1
a57 1
        CHARACTER *81  DOCNAM,DOC,OLDNAM
d62 1
a64 1
        OLDNAM(1:1) = NULL
d78 1
a78 1
        IF (DOC .NE. OLDNAM .OR. NDOC .NE. LUNOLD) THEN
a82 1
          LENOLD = 0
a94 1
          LENOLD = NLET
d97 1
a98 1
        IGO     = 4
d110 3
a112 2
C       RETRIEVE THE LIST OF VALUES FOR THIS KEY, LOOK TILL EOF!
        CALL LUNDOCREDDAT(NDOC,IKEY,DLIST,NLIST,ICOUNT,.TRUE.,IRTFLG)
d132 1
a132 1
C       DO NOT CLOSE FILE
@


1.13
log
@used lundoc
@
text
@d111 1
a111 2
        ICOUNT = NLIST
        CALL LUNDOCREDDAT(NDOC,IKEY,DLIST,NMAX,ICOUNT,.TRUE.,IRTFLG)
d113 1
a113 1
        IF (IRTFLG .EQ. 0 .AND. NLIST .GT. 0) THEN
@


1.12
log
@CNO_SAVE
@
text
@d4 19
a22 17
C RDDOCQ.FOR
C                                         LONG FILE NAMES FEB 89 al
C                                         CHAR VARIABLES AUG 89 al
C                                         DOC FILE LEFT OPEN NOV 89 al
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
C
C  RDDOCQ(CFUNC,NDOC,CDUM)
C
C  PURPOSE:  SUBROUTINE TO UNSAVE SPECIFIED REGISTERS, SOLICITS FILENAME
d24 7
a33 5
C                 CDUM    UNUSED
C
C  USAGE:         UD      RETRIEVES A LINE OF REGISTERS FROM DOC FILE
C                 UD S    SEQUENTIAL RETRIEVE
C                 UD E    CLOSES THE LAST DOC. FILE OPENED WITH UD
a34 1
C
d41 1
a41 3
	SUBROUTINE RDDOCQ(CFUNC,NDOC,CDUM)

CNO_SAVE 
d46 1
a46 6
        COMMON /COMMUN/ DOCNAM,DOC,RECLIN
	COMMON /UNITS/LUN,NIN,NOUT
	COMMON /PARAM/PARAM(103)
	COMMON /DOLOOP/IALPHA(26)
	COMMON /MASTER/NSAM,NROW,IREC,NLABEL,IFORM,IMAMI,FMAX,FMIN,
     &                 AV,SIG,IHIST
d48 7
a54 1
        CHARACTER *(*) CFUNC,CDUM
d56 2
a57 4
        CHARACTER *80  RECLIN
        CHARACTER *1   NULL,DINDEX,CCHAR
	DIMENSION      ILIST(20),SAV(20),DUMSAV(20)
	LOGICAL        NEWFILE,ISCHAR
d59 1
a59 1
	DATA NZERO/-99/,LUNOLD/0/
d64 1
a64 2

        IF (CFUNC(4:4) .EQ. 'E') THEN
a71 53
C       CHECK IF FIRST ENTRY IS A REGISTER OR AN INTEGER.
C       ND = -9 MEANS TOO MANY REGISTERS SPECIFIED
C       NFIRST = 0, WRITE HEADING FROM DOC FILE TO NOUT SINCE 
C                   THIS IS THE FIRST TIME THROUGH

	ND     = -9
	SAV(1) = -9.0
	NFIRST =  0

	DO J=2,20
           SAV(J) = 0.0
        ENDDO

	K1=4
	IF (CFUNC(4:4) .EQ. 'S') K1 = 6

    	DO K = K1,80
C         CHECK FOR , OR X
	  IF (CFUNC(K:K) .EQ. ',' .OR. CFUNC(K:K).EQ. 'X') GOTO 1414
        END DO
	CALL ERRT(16,'RDDOCQ',NE)
	RETURN

1414	IF (CFUNC(K:K) .EQ. 'X') THEN
C          FIRST ENTRY IS A REGISTER.
           K = INDEX(CFUNC(K1:),',') + K1 - 1
           CALL CHKSTRQ(CFUNC(K1:),K-4,'I',KLIST,DUM,KNLIST,IER)
	   DLIST = PARAM(KLIST)

        ELSEIF(ISCHAR(CFUNC(K-1:K-1)).AND. CFUNC(K-1:K-1) .NE. 'X') THEN
C          FIRST ENTRY IS A DO LOOP INDEX, PUT ITS VALUE INTO DLIST.
           DINDEX = CFUNC(K-1:K-1)
           IDX    = ICHAR(DINDEX) - 64
           DLIST  = IALPHA(IDX)
           CALL CHKSTRQ(CFUNC(K+1:),79-K,'I',ILIST,DUM,NLIST,IER)

        ELSE
C          ENTRY IS A NUMBER
           CALL CHKNUMQ(CFUNC(K1:),K-K1,'I',NUM,FNUM,IER)
           IF (IER .NE. 0) THEN
             CALL ERRT(16,'RDDOCQ ',NE)
             RETURN
           ENDIF

           DLIST = NUM
        ENDIF

        CALL CHKSTRQ(CFUNC(K+1:),79-K,'I',ILIST,DUM,NLIST,IER)
    	IF (IER .NE. 0) THEN
           CALL ERRT(16,'RDDOCQ ',NE)
           RETURN
        ENDIF

d89 3
d97 2
d101 2
a102 8
           IKEY = DLIST
           CALL UNSAV(DOCNAM,1,NDOC,IKEY,SAV(2),NLIST,LERR,1)

           DO  K=1,NLIST
             K1        = ILIST(K)
             PARAM(K1) = SAV(K+1)
           END DO
           GOTO 9999
d105 4
a108 93
C       NOTE THAT WE CAN RETRIEVE COMMENT KEY LINES (;KEY)
C       BY UD -5,X5,X10,X15,....
C	THIS RETRIEVES THE LAST LINE WITH COMMENT KEY 5.
C	ML      6/24/94

        IF (DLIST .LT. 0) THEN
          KEYSIGN = -1
          DLIST = -DLIST
        ELSE
          KEYSIGN = 1
        END IF
	IKEY = DLIST+.5

1510	READ(NDOC,1518,END=1595) RECLIN
1518	FORMAT(A80)

	IF (RECLIN(2:2) .EQ. ';') THEN 
C          COMMENT LINE ENCOUNTERED. 
           IF (NFIRST .EQ. 0) THEN
C             FIRST SEMI (COMMENT LINE), SO WRITE OUT HEADING
              WRITE(NOUT,100) RECLIN(1:65)
100           FORMAT(A)
              NFIRST = 1
              GOTO 1510
           ENDIF
           IF (KEYSIGN .EQ. 1) THEN
C             READ ANOTHER LINE
              GOTO 1510
           ELSE
C            RECOVER A COMMENTED OUT LINE.
c            however, it could be another header if there no "key"
             IF(RECLIN(5:5).LT.'0' .OR. RECLIN(5:5).GT.'9') GOTO 1510
             CONTINUE
           END IF 
        ELSE
C          NOT A COMMENT. BUT WE ARE TRYING TO RETRIEVE A COMMENTED
C	   OUT KEY.
           IF (KEYSIGN .EQ. -1) GOTO 1510
        ENDIF

        IF (RECLIN(5:5) .EQ. ' ') THEN
c         continuation line 
          READ(RECLIN,1520) NDUM,NDUMB2,(DUMSAV(J),J=2,NDUMB2+1)          
1520	  FORMAT(I4,I2,6F12.6)
        ELSE
c         beginning of the line stored.
          IF (KEYSIGN .EQ. -1) THEN
	  
C           retrieval of commented out line.
            READ(RECLIN,1621) CCHAR,NDUM,NDUMB2,(DUMSAV(J),J=2,NDUMB2+1)
1621	    FORMAT(1X,A1,I3,I2,6F12.6) 
          ELSE
            READ(RECLIN,1620) NDUM,NDUMB2,(DUMSAV(J),J=2,NDUMB2+1)
1620	    FORMAT(I5,I2,6F12.6)
          END IF
        ENDIF

C	IF NOT THE DESIRED KEY GOTO 1510
	IF (NDUM .NE. IKEY) GOTO 1510    
	SAV(1) = -9.
	ND     = NDUMB2
c       I think it would be more general to do if(nlist.gt.nd). ML
	IF (NLIST .GT. 6) THEN
C          CONTINUATION LINE(S) ARE USED FOR THIS KEY
           K2 = NLIST - 6
           IF (K2 .LT. 6) GOTO 1580

           DO  K=7,NLIST,6
             READ(NDOC,1518)RECLIN
             IF (RECLIN(2:2) .EQ. ';') GOTO 1510

             IF (RECLIN(5:5) .EQ. ' ') THEN
C              THREE DIGIT KEYS
               READ(RECLIN,1520)NDUM,NDUMB2,
     &            (DUMSAV(NSIX),NSIX=K,K+NDUMB2-1)    
             ELSE
C              FOUR DIGIT KEYS
               READ(RECLIN,1620)NDUM,NDUMB2,
     &            (DUMSAV(NSIX),NSIX=K,K+NDUMB2-1)    
             ENDIF
             IF (NDUM .EQ. NZERO) THEN
                K2 = NLIST-K-5
                IF (K2 .EQ. 0) GOTO 1591
                IF (K2 .LT. 6) GOTO 1580
             ELSE
                BACKSPACE NDOC
                GOTO 1510
             ENDIF
	   ENDDO
        ENDIF
	IF (ND .LT. NLIST) GOTO 1510
	GOTO 1591

d110 8
a117 32
1580	READ(NDOC,1518) RECLIN
	IF (RECLIN(2:2) .EQ. ';') GOTO 1510
	JNUM = NLIST-K2+2
        IF (RECLIN(5:5) .EQ. ' ') THEN
          READ(RECLIN,1520)NDUM,NDUMB2,
     &    (DUMSAV(J),J=JNUM,JNUM+NDUMB2-1)
        ELSE
          READ(RECLIN,1620)NDUM,NDUMB2,
     &    (DUMSAV(J),J=JNUM,JNUM+NDUMB2-1)
        ENDIF
	IF (NDUM .EQ. NZERO) GOTO 1590
	BACKSPACE NDOC
	GOTO 1510

1590	ND = ND+NDUMB2
	IF (ND .LT. NLIST) GOTO 1510

1591	SAV(1) = IKEY
	DO  K = 2,NLIST+1
          SAV(K) = DUMSAV(K)
        END DO
	GOTO 1510



C       END OF DOCUMENT FILE LINES -------------------------

1595	IF (SAV(1) .NE. -9.) THEN
C         SUCCESSFUL RECOVERY OF KEY 
          DO K=1,NLIST
            K1        = ILIST(K)
            PARAM(K1) = SAV(K+1)
d120 6
a125 4
        ELSEIF (ND. NE. -9) THEN
           WRITE(NOUT,*) ' *** TOO MANY REGISTERS SPECIFIED'
           CALL ERRT(12,'RDDOCQ',NE)

d127 2
a128 2
           WRITE(NOUT,*) ' KEY NOT FOUND'
           CALL ERRT(12,'RDDOCQ',NE)
d131 2
a132 2
C**	CLOSE(NDOC)  (NOT CLOSED NOW)
9999    REWIND(NDOC)
@


1.11
log
@*** empty log message ***
@
text
@d40 5
@


1.10
log
@1x in format, sav(2...) assigned to 0.0 for f90
@
text
@d222 1
a222 1
           DO 1575 K=7,NLIST,6
d243 1
a243 1
1575       CONTINUE
@


1.9
log
@bad ikey to unsav call
@
text
@d78 1
a78 1
           SAV(J) = ' '
d205 1
a205 1
1621	    FORMAT(X,A1,I3,I2,6F12.6) 
@


1.8
log
@comment keys did not work right
@
text
@d145 1
d149 1
a149 1
             K1 = ILIST(K)
@


1.7
log
@correct read format
@
text
@d79 1
a79 1
        END DO
d143 10
d154 3
a156 3
C       note that we can retrieve commented out lines (;)
C       by UD -5,X5,X10,X15,....
C	this retrieves the last line with key 5 that was commented out.
a165 11

	IF (CFUNC(4:4) .EQ. 'S') THEN
C          USE SEQUENTIAL SEARCH MODE
           CALL UNSAV(DOCNAM,1,NDOC,IKEY,SAV(2),NLIST,LERR,1)

           DO  K=1,NLIST
             K1 = ILIST(K)
             PARAM(K1) = SAV(K+1)
           END DO
           GOTO 9999
        ENDIF
@


1.6
log
@make key go to 99999
@
text
@d202 1
d205 1
a205 1
1621	    FORMAT(A,I3,I2,6F12.6) 
@


1.5
log
@fixed ud 1,x11,x12,x13,x14,x15,x16,x17
@
text
@d169 1
a169 1
1518	FORMAT(1X,A80)
d171 1
a171 1
	IF (RECLIN(1:1) .EQ. ';') THEN 
d176 1
a176 1
100           FORMAT(1X,A)
d186 1
a186 1
             IF(RECLIN(4:4).LT.'0' .OR. RECLIN(4:4).GT.'9') GOTO 1510
d195 1
a195 1
        IF (RECLIN(4:4) .EQ. ' ') THEN
d198 1
a198 1
1520	  FORMAT(I3,I2,6F12.6)
d207 1
a207 1
1620	    FORMAT(I4,I2,6F12.6)
d223 1
a223 1
             IF (RECLIN(1:1) .EQ. ';') GOTO 1510
d225 1
a225 1
             IF (RECLIN(4:4) .EQ. ' ') THEN
d249 1
a249 1
	IF (RECLIN(1:1) .EQ. ';') GOTO 1510
d251 1
a251 1
        IF (RECLIN(4:4) .EQ. ' ') THEN
@


1.4
log
@correct checking of multiple headers in doc file
@
text
@d215 2
a216 1
	IF (NLIST .GT. 7) THEN
d219 1
a219 1
           IF (K2 .LT. 7) GOTO 1580
d221 1
a221 1
           DO 1575 K=8,NLIST,6
@


1.3
log
@used opendoc and cosmetic
@
text
@d50 1
a50 1
        CHARACTER *1   NULL,DINDEX
d185 2
a186 2
c            however, it could be another header.
             IF(RECLIN(4:4).LT.'0' .AND. RECLIN(4:4).GT.'9') GOTO 1510
@


1.2
log
@fix ud -5,x6,x7,x8 to correct retrieval of last commented out key 5
@
text
@d4 1
a4 1
C $$ RDDOCQ.FOR
d18 1
a18 1
C    RDDOCQ(CFUNC,NDOC,CDUM)
d20 2
a21 1
C    PURPOSE:  SUBROUTINE TO UNSAVE SPECIFIED REGISTERS
d23 3
a25 3
C    PARAMETERS:    CFUNC   OPERATION READ INTO DRIVER
C                   NDOC    LUN NUMBER OF FILE WITH SAVED REGISTERS
C                   CDUM    UNUSED
d27 3
a29 3
C    USAGE:         UD      RETRIEVES A LINE OF REGISTERS FROM DOC FILE
C                   UD S    SEQUENTIAL RETRIEVE
C                   UD E    CLOSES THE LAST DOC. FILE OPENED WITH UD
d31 3
a46 6
        COMMON /MASTER1/ DATEXC,PRJEXC,CDAT,CTIM,CTIT
        CHARACTER *4     DATEXC,PRJEXC
        CHARACTER *10    CDAT
        CHARACTER *8     CTIM
        CHARACTER *160   CTIT

d50 1
a50 1
        CHARACTER *1   NULL,DINDEX,CHR
d52 1
a52 1
	LOGICAL        EX,ISCHAR
d55 1
d61 1
d82 1
a82 1
	IF (CFUNC(4:4) .EQ. 'S') K1=6
d88 1
a88 1
	CALL ERRT(16,'RDDOC',NE)
d108 1
a108 1
             CALL ERRT(16,'RDDOC ',NE)
d117 1
a117 1
           CALL ERRT(16,'RDDOC ',NE)
d121 1
d131 5
a135 1
          CALL FILCAN(DOCNAM,NDNAME,NULL,NULL,DOC,DATEXC,IER)
a137 8
          INQUIRE(FILE=DOCNAM,EXIST=EX)
          IF (.NOT. EX) THEN
             WRITE(NOUT,*) ' *** DOCUMENT FILE DOES NOT EXIST'
             CALL ERRT(18,'RDDOC ',NE)
             RETURN
          ENDIF

          OPEN(FILE=DOCNAM,UNIT=NDOC,STATUS='OLD')
d148 1
a148 1
C
d175 2
a176 2
              WRITE(NOUT,100) (RECLIN(I:I),I=1,65)
100           FORMAT(1X,65A1)
d263 1
d277 2
a278 2
            K1=ILIST(K)
            PARAM(K1)=SAV(K+1)
d283 1
a283 1
           CALL ERRT(12,'RDDOC ',NE)
d287 1
a287 1
           CALL ERRT(12,'RDDOC ',NE)
@


1.1
log
@Initial revision
@
text
@d52 1
a52 1
        CHARACTER *1   NULL,DINDEX
d146 12
d159 1
d174 2
a175 2
	IF (RECLIN(1:1) .EQ. ';') THEN
C          COMMENT LINE ENCOUNTERED
d177 5
a181 4
C            FIRST SEMI (COMMENT LINE), SO WRITE OUT HEADING
             WRITE(NOUT,100) (RECLIN(I:I),I=1,65)
100          FORMAT(1X,65A1)
             NFIRST = 1
d183 13
a195 2
C          READ ANOTHER LINE
           GOTO 1510 
d199 1
d203 9
a211 2
          READ(RECLIN,1620) NDUM,NDUMB2,(DUMSAV(J),J=2,NDUMB2+1)
1620	  FORMAT(I4,I2,6F12.6)
@
