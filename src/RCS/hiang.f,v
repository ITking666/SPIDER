head	1.19;
access;
symbols
	healthdept_2018:1.19
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.15
	pre_opfiles:1.15
	src:1.15
	best-code:1.15
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.13
	prec_CA:1.13
	noindx:1.13
	Bproc:1.13
	oct21:1.9
	last77:1.9;
locks; strict;
comment	@c @;


1.19
date	2018.10.03.14.34.07;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2011.12.20.13.22.35;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2011.06.20.18.05.31;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.25.54;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.20.02.36;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.17.58.08;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2000.07.07.17.34.29;	author pawel;	state Exp;
branches;
next	1.12;

1.12
date	2000.01.12.18.39.58;	author bimal;	state Exp;
branches;
next	1.11;

1.11
date	2000.01.06.18.27.32;	author bimal;	state Exp;
branches;
next	1.10;

1.10
date	99.12.06.18.41.19;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.02.11.15.31.46;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	99.02.10.16.00.01;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	98.11.05.18.49.46;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	98.11.05.16.02.08;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.10.31.19.11.57;	author hedget;	state Exp;
branches;
next	1.4;

1.4
date	97.10.09.14.29.34;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.08.14.18.50.39;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.12.08.22.23.40;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	95.12.08.21.35.29;	author pawel;	state Exp;
branches;
next	;


desc
@part of BP RP
@


1.19
log
@email_health_dept
@
text
@C++*********************************************************************
C
C HIANG.F
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2011  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  HIANG(ANG,NANG,DM,LB,LO)
C
C  PURPOSE:     COMPRESS ANGLES AND CONVERT TO DTM FORMAT
C
C  PARAMETERS:   ANG                                          SENT/RET
C                NANG                                         SENT
C                DM                                           RET
C                LB                                           SENT/RET
C                LO                                           RET
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE HIANG(ANG,NANG,DM,LB,LO)

        DIMENSION         :: ANG(3,NANG),LB(NANG),DM(9,NANG)
        DOUBLE PRECISION  :: CPHI,SPHI,CTHE,STHE,CPSI,SPSI
        DOUBLE PRECISION  :: QUADPI,DGR_TO_RAD

        PARAMETER (QUADPI = 3.141592653589793238462643383279502884197)
        PARAMETER (DGR_TO_RAD = (QUADPI/180))

C       ANG(1 - PHI, ANG(2 - THETA, ANG(3 - PSI
        DO I=1,NANG
           LB(I )= 1
           IF (ANG(2,I) .GE. 90.0)  THEN
              ANG(2,I) = 180.0 - ANG(2,I)
              ANG(1,I) = ANG(1,I) + 180.0
              IF (ANG(1,I) .GE. 360.0)  ANG(1,I) = ANG(1,I)-360.0
           ENDIF
        ENDDO

        DO I=1,NANG
           JJJ      = INT(100.0 * ANG(1,I))
           ANG(1,I) = FLOAT(JJJ) / 100.0
        ENDDO

        DO I=1,NANG-1
           IF (LB(I) .NE. 0)  THEN
              DO  J=I+1,NANG
                 IF (LB(I) .NE. 0)  THEN
                    IF (ANG(1,I) .EQ. ANG(1,J) .AND. 
     &                  ANG(2,I) .EQ. ANG(2,J)) THEN
                       LB(I) = LB(I) + 1
                       LB(J) = 0
                    ENDIF
                 ENDIF
              ENDDO
           ENDIF
        ENDDO

        LO = 0
        DO I=1,NANG
           IF (LB(I) .NE. 0) THEN
              LO        = LO+1
              ANG(1,LO) = ANG(1,I)
              ANG(2,LO) = ANG(2,I)

C -           PSI SET TO ZERO - IRRELEVANT
              ANG(3,LO) = 0.0

              LB(LO)    = LB(I)
           ENDIF
        ENDDO
C       NANG=LO

        DO I=1,LO
           CPHI    = DCOS(DBLE(ANG(1,I))*DGR_TO_RAD)
           SPHI    = DSIN(DBLE(ANG(1,I))*DGR_TO_RAD)
           CTHE    = DCOS(DBLE(ANG(2,I))*DGR_TO_RAD)
           STHE    = DSIN(DBLE(ANG(2,I))*DGR_TO_RAD)
           CPSI    = 1.0D0
           SPSI    = 0.0D0

           DM(1,I) =  CPHI*CTHE*CPSI-SPHI*SPSI
           DM(2,I) =  SPHI*CTHE*CPSI+CPHI*SPSI
           DM(3,I) = -STHE*CPSI
           DM(4,I) = -CPHI*CTHE*SPSI-SPHI*CPSI
           DM(5,I) = -SPHI*CTHE*SPSI+CPHI*CPSI
           DM(6,I) =  STHE*SPSI
           DM(7,I) =  STHE*CPHI
           DM(8,I) =  STHE*SPHI
           DM(9,I) =  CTHE     
        ENDDO

        END
@


1.18
log
@cosmetic
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.17
log
@cosmetic
@
text
@d9 1
a9 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d29 3
a31 1
C  PARAMETERS:   ANG                                          SENT
d34 2
a35 2
C                LB                                        SENT/RET
C                LO                                            RET
d40 5
a44 1
        SUBROUTINE  HIANG(ANG,NANG,DM,LB,LO)
a45 3
        DIMENSION  ANG(3,NANG),LB(NANG),DM(9,NANG)
        DOUBLE PRECISION  CPHI,SPHI,CTHE,STHE,CPSI,SPSI
        DOUBLE PRECISION  QUADPI,DGR_TO_RAD
d51 5
a55 5
           LB(I)=1
           IF (ANG(2,I).GE.90.0)  THEN
              ANG(2,I)=180.0-ANG(2,I)
              ANG(1,I)=ANG(1,I)+180.0
              IF (ANG(1,I).GE.360.0)  ANG(1,I)=ANG(1,I)-360.0
d60 2
a61 2
           JJJ=INT(100.0*ANG(1,I))
           ANG(1,I) = FLOAT(JJJ)/100.0
d65 1
a65 1
           IF (LB(I).NE.0)  THEN
d67 5
a71 5
                 IF (LB(I).NE.0)  THEN
                    IF (ANG(1,I).EQ.ANG(1,J).AND.ANG(2,I).EQ.
     &                 ANG(2,J)) THEN
                       LB(I)=LB(I)+1
                       LB(J)=0
d80 5
a84 4
           IF (LB(I).NE.0)  THEN
              LO=LO+1
              ANG(1,LO)=ANG(1,I)
              ANG(2,LO)=ANG(2,I)
d86 3
a88 2
              ANG(3,LO)=0.0
              LB(LO) = LB(I)
d94 16
a109 16
           CPHI=DCOS(DBLE(ANG(1,I))*DGR_TO_RAD)
           SPHI=DSIN(DBLE(ANG(1,I))*DGR_TO_RAD)
           CTHE=DCOS(DBLE(ANG(2,I))*DGR_TO_RAD)
           STHE=DSIN(DBLE(ANG(2,I))*DGR_TO_RAD)
           CPSI=1.0D0
           SPSI=0.0D0
C
           DM(1,I)=CPHI*CTHE*CPSI-SPHI*SPSI
           DM(2,I)=SPHI*CTHE*CPSI+CPHI*SPSI
           DM(3,I)=-STHE*CPSI
           DM(4,I)=-CPHI*CTHE*SPSI-SPHI*CPSI
           DM(5,I)=-SPHI*CTHE*SPSI+CPHI*CPSI
           DM(6,I)=STHE*SPSI
           DM(7,I)=STHE*CPHI
           DM(8,I)=STHE*SPHI
           DM(9,I)=CTHE     
@


1.16
log
@GPL_2010
@
text
@d27 1
a27 1
C    HIANG
d29 5
a33 1
C IMAGE_PROCESSING_ROUTINE
d45 3
a47 2
C ANG(1 - PHI, ANG(2 - THETA, ANG(3 - PSI
        DO    I=1,NANG
d49 5
a53 5
           if(ANG(2,i).ge.90.0)  then
              ANG(2,i)=180.0-ANG(2,i)
              ANG(1,i)=ANG(1,i)+180.0
              if(ANG(1,i).ge.360.0)  ANG(1,i)=ANG(1,i)-360.0
           endif
d55 2
a56 1
        DO    i=1,NANG
d58 1
a58 1
           ANG(1,I)=FLOAT(JJJ)/100.0
d60 13
a72 12
        DO    I=1,NANG-1
           if(LB(I).NE.0)  then
              do  J=I+1,NANG
                 if(LB(I).ne.0)  then
                    if(ANG(1,i).eq.ANG(1,j).and.ANG(2,i).eq.
     &                 ANG(2,j)) then
                       LB(i)=LB(i)+1
                       LB(j)=0
                    endif
                 endif
              enddo
           endif
d74 7
a80 6
        lo=0
        DO    I=1,NANG
           if(LB(I).ne.0)  then
              lo=lo+1
              ANG(1,lo)=ANG(1,i)
              ANG(2,lo)=ANG(2,i)
d82 3
a84 3
              ANG(3,lo)=0.0
              LB(LO)=LB(I)
           endif
d87 2
a88 2
C
        DO    I=1,LO
d106 1
@


1.15
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a29 1
C **************************************************************************
a36 1
C--************************************************************************
@


1.13
log
@no changes
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d48 1
@


1.12
log
@*** empty log message ***
@
text
@d30 1
a30 1
        do    i=1,NANG
d37 2
a38 2
        enddo
        do    i=1,NANG
d41 4
a44 4
        enddo
        do i=1,NANG-1
           if(LB(I).ne.0)  then
              do  j=i+1,NANG
d54 1
a54 1
        enddo
d56 1
a56 1
        do    i=1,NANG
d65 1
a65 1
        enddo
a86 2


@


1.11
log
@adapted for dynamical memory allocation
@
text
@d88 1
@


1.10
log
@header
@
text
@d17 2
d22 1
a22 1
	SUBROUTINE  HIANG(ANG,NANG,DM,LB,LO)
d24 5
a28 5
	DIMENSION  ANG(3,NANG),LB(NANG),DM(9,NANG)
	DOUBLE PRECISION  CPHI,SPHI,CTHE,STHE,CPSI,SPSI
	DOUBLE PRECISION  QUADPI,DGR_TO_RAD
	PARAMETER (QUADPI = 3.141592653589793238462643383279502884197)
	PARAMETER (DGR_TO_RAD = (QUADPI/180))
d30 37
a66 36
	do    i=1,NANG
	LB(I)=1
      if(ANG(2,i).ge.90.0)  then
         ANG(2,i)=180.0-ANG(2,i)
         ANG(1,i)=ANG(1,i)+180.0
         if(ANG(1,i).ge.360.0)  ANG(1,i)=ANG(1,i)-360.0
      endif
	enddo
	do    i=1,NANG
	JJJ=INT(100.0*ANG(1,I))
	ANG(1,I)=FLOAT(JJJ)/100.0
	enddo
      do i=1,NANG-1
      if(LB(I).ne.0)  then
         do  j=i+1,NANG
         if(LB(I).ne.0)  then
            if(ANG(1,i).eq.ANG(1,j).and.ANG(2,i).eq.ANG(2,j))  then
             LB(i)=LB(i)+1
             LB(j)=0
            endif
         endif
	 enddo
      endif
      enddo
	lo=0
	do    i=1,NANG
	if(LB(I).ne.0)  then
	lo=lo+1
	ANG(1,lo)=ANG(1,i)
	ANG(2,lo)=ANG(2,i)
C - PSI SET TO ZERO - IRRELEVANT
	ANG(3,lo)=0.0
	LB(LO)=LB(I)
	endif
	enddo
C	NANG=LO
d68 7
a74 7
	DO    I=1,LO
	CPHI=DCOS(DBLE(ANG(1,I))*DGR_TO_RAD)
	SPHI=DSIN(DBLE(ANG(1,I))*DGR_TO_RAD)
	CTHE=DCOS(DBLE(ANG(2,I))*DGR_TO_RAD)
	STHE=DSIN(DBLE(ANG(2,I))*DGR_TO_RAD)
	CPSI=1.0D0
	SPSI=0.0D0
d76 12
a87 11
	DM(1,I)=CPHI*CTHE*CPSI-SPHI*SPSI
	DM(2,I)=SPHI*CTHE*CPSI+CPHI*SPSI
	DM(3,I)=-STHE*CPSI
	DM(4,I)=-CPHI*CTHE*SPSI-SPHI*CPSI
	DM(5,I)=-SPHI*CTHE*SPSI+CPHI*CPSI
	DM(6,I)=STHE*SPSI
        DM(7,I)=STHE*CPHI
        DM(8,I)=STHE*SPHI
        DM(9,I)=CTHE     
	ENDDO
	END
@


1.9
log
@*** empty log message ***
@
text
@d3 1
a3 1
C $$ HIANG.FOR
d15 1
a16 1
C
d19 1
a19 3
C
C $$ HIANG.FOR
C
d21 1
@


1.8
log
@trig
@
text
@d25 1
a25 1
	DOUBLE PRECISION  QUADPI,DRG_TO_RAD
d27 1
a27 1
	PARAMETER (DRG_TO_RAD = (QUADPI/180))
d67 4
a70 4
	CPHI=DCOS(DBLE(ANG(1,I))*DRG_TO_RAD)
	SPHI=DSIN(DBLE(ANG(1,I))*DRG_TO_RAD)
	CTHE=DCOS(DBLE(ANG(2,I))*DRG_TO_RAD)
	STHE=DSIN(DBLE(ANG(2,I))*DRG_TO_RAD)
@


1.7
log
@*** empty log message ***
@
text
@d25 3
a27 3
#ifdef SP_F90
	DOUBLE PRECISION  DCOSD,DSIND,DATAN2D
#endif
a28 1
CNO_SAVE
d67 4
a70 4
	CPHI=DCOSD(DBLE(ANG(1,I)))
	SPHI=DSIND(DBLE(ANG(1,I)))
	CTHE=DCOSD(DBLE(ANG(2,I)))
	STHE=DSIND(DBLE(ANG(2,I)))
@


1.6
log
@*** empty log message ***
@
text
@d25 3
@


1.5
log
@modified intrinisc function call for f90 compatibility
@
text
@d22 1
a22 1
	SUBROUTINE  HIANG(ANG,NANG,DM,LB)
d62 1
a62 1
	NANG=LO
d64 1
a64 1
	DO    I=1,NANG
@


1.4
log
@*** empty log message ***
@
text
@d36 1
a36 1
	JJJ=JNINT(100.0*ANG(1,I))
@


1.3
log
@compression of angles
@
text
@d27 1
a27 1
	do  2  i=1,NANG
d34 2
a35 2
 2    continue
	do  1  i=1,NANG
d37 3
a39 2
1	ANG(1,I)=FLOAT(JJJ)/100.0
      do  21  i=1,NANG-1
d41 1
a41 1
         do  22  j=i+1,NANG
d48 1
a48 1
 22      continue
d50 1
a50 1
 21   continue
d52 1
a52 1
	do  40  i=1,NANG
d61 1
a61 1
40	continue
d64 1
a64 1
	DO  71  I=1,NANG
d80 2
a81 1
71      DM(9,I)=CTHE     
@


1.2
log
@bug fixed
@
text
@d1 21
@


1.1
log
@Initial revision
@
text
@d14 3
@
