head	1.21;
access;
symbols
	pre_mrcs:1.21
	healthdept_2018:1.21
	pre_getangas:1.19
	GPL2010:1.19
	pre_GPL2010:1.18
	pre_var_equation:1.18
	pre_fftwrings:1.18
	pre_opfiles:1.18
	src:1.18
	best-code:1.18
	x-named-regs:1.18
	x:1.18
	v13-00:1.18
	pre_GPL:1.17
	prec_CA:1.16
	noindx:1.13
	Bproc:1.11
	oct21:1.10
	last77:1.7;
locks; strict;
comment	@c @;


1.21
date	2018.10.03.14.34.22;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2013.01.22.16.33.25;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2010.06.24.13.26.57;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2005.10.17.20.54.32;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2004.04.05.14.48.03;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.07.08.17.37.01;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.07.08.15.34.33;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.07.07.19.47.47;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.11.14.08.49;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.12.19.19.52.46;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.07.14.16.21.14;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.07.07.21.29.40;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.06.23.18.22.00;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.06.18.17.53.31;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.05.13.13.11.30;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	97.02.12.14.34.11;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.10.16.18.45.55;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	96.10.11.20.13.46;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	96.07.02.18.41.07;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	95.07.28.16.17.18;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	95.05.18.12.54.32;	author mladjadj;	state Exp;
branches;
next	;


desc
@command to shuffle lines in doc file by MR
@


1.21
log
@email_health_dept
@
text
@C++*********************************************************************
C
C SHUFFLEDOC     M.RADERMACHER 5/95
C                REWRITTEN                     MAY 97   ARDEAN LEITH                        
C                OPENDOC PARAMETERS CHANGED    DEC 2000 ARDEAN LEITH
C                INCORE OPENDOC                JUL 03   ARDEAN LEITH
C                PROMPTS                       JAN 13   ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2013  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C SHUFFLEDOC(MAXDIM)
C
C PURPOSE:              SHUFFLES A DOCUMENT FILE
C                  
C PARAMETERS:           MAXDIM   LENGTH OF COMMON BUFFER          (SENT)           
C
C--*********************************************************************

        SUBROUTINE SHUFFLEDOC(MAXDIM)

        INCLUDE 'CMLIMIT.INC'
        INCLUDE 'CMBLOCK.INC'

	COMMON        PLIST(16),BTUF(1)	

        CHARACTER(LEN=MAXNAM) :: DOCF1
	INTEGER               :: P1,P2,P3

        DATA          NDOCT/23/
	
C       INPUT DOCUMENT FILENAME, ~9 ALLOWS DIFFERENT EXTENSION
        CALL FILERD(DOCF1,NLET,DATEXC,'SOURCE DOCUMENT~9',IRTFLG)
	IF (IRTFLG .NE. 0) RETURN

        CALL OPENDOC(DOCF1,.FALSE.,NLET,NDOCT,NDOC,.FALSE.,' ',
     &             .TRUE.,.FALSE.,.TRUE.,NEWFILE,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       ECHO FIRST HEADER FROM FILE
        CALL LUNDOCSAYHDR(NDOC,NOUT,IRTFLG)

C       FIND MAXKEYT & MAXREGT BY READING DOC FILE
        CALL LUNDOCINFO(NDOC,MAXKEYT,MAXREGT,KEYUSED,.TRUE.,IRTFLG)
        CLOSE(NDOCT)
        IF (IRTFLG .NE. 0) RETURN

        CALL RDPRMI(KEY1,KEY2,NOT_USED,'FIRST & LAST KEY NUMBERS')

        WRITE(NOUT,100)
100     FORMAT(' THE OUTPUT DOCFILE WILL HAVE THE FORMAT:'/
     &         ' NEWKEY, 4 OLDKEY, + 3 COLUMNS')

       	CALL RDPRMI(ICOL0,IDUM,NOT_USED,
     &              'INPUT REGISTER #  FOR OUTPUT REG. 2')

	CALL RDPRMI(ICOL1,ICOL2,NOT_USED,
     &              'INPUT REGISTER #s FOR OUTPUT REG. 3 AND 4')

C	THE SIZE OF MAXKEY IS IN REALITY MMKEY (ADD 10 FOR GOOD MEASURE)
	MMKEY    = MAX0(KEY1,KEY2) + 10
        IREGSRED = MAXREGT + 1
	P1       = 1
	P2       = P1 + IREGSRED * MAXKEYT 
	P3       = P2 + MMKEY 
	MEMNEED  = P3 + 4 * MMKEY
	IF (MEMNEED .GE. (MAXDIM -20)) THEN
	   WRITE(NOUT,414) MEMNEED, MAXDIM
414	   FORMAT('*** COMMON BLOCK MEM NEEDED: ',I7,
     &                 ' MEM AVAILABLE ONLY: ',I7)
           CALL ERRT(100,'SHUFFLEDOC',NE)
           RETURN
	ENDIF
	
        NREG  = ICOL2 
        IF (ICOL1 .GT. NREG)  NREG = ICOL1
        IF (ICOL0 .GT. NREG)  NREG  = ICOL0
        IRN   = KEY2 - KEY1 + 1
        IR1   = 0
        IR2   =     IRN
        IR3   = 2 * IRN

	ICALL = 0
        ILINE = 0
        DO I=KEY1,KEY2
           CALL UNSDAL(DOCF1,ICALL,NDOCT,I,PLIST,NREG,
     &                BTUF(P1),MAXKEYT,IREGSRED,NKEYMAX,LERR)
           IF (LERR .NE. 0) GOTO 11
           ILINE                = ILINE + 1
           BTUF(P2+ILINE-1)     = I
           BTUF(P3+IR1+ILINE-1) = PLIST(ICOL0)
           BTUF(P3+IR2+ILINE-1) = PLIST(ICOL1)
           BTUF(P3+IR3+ILINE-1) = PLIST(ICOL2)
        ENDDO

11      CLOSE(NDOCT)

C       DO THE SHUFFLING, BY RANDOM INTERCHANGE

        DO  I=0,ILINE-1
C         CREATE RANDOM IVAL IN RANGE 0...ILINE-1
	  CALL  RANDOM_NUMBER(OUT)
	  IVAL              = OUT*FLOAT(ILINE-1)

          B1                = BTUF(P2+    IVAL) 
          B2                = BTUF(P3+IR1+IVAL)
          B3                = BTUF(P3+IR2+IVAL)
          B4                = BTUF(P3+IR3+IVAL)

          BTUF(P2    +IVAL) = BTUF(P2    +I) 
          BTUF(P3+IR1+IVAL) = BTUF(P3+IR1+I)
          BTUF(P3+IR2+IVAL) = BTUF(P3+IR2+I)
          BTUF(P3+IR3+IVAL) = BTUF(P3+IR3+I)

          BTUF(P2    +I)    = B1 
          BTUF(P3+IR1+I)    = B2
          BTUF(P3+IR2+I)    = B3
          BTUF(P3+IR3+I)    = B4
        ENDDO

        DO I=0,ILINE-1
           PLIST(1) = I + 1
           PLIST(2) = BTUF(P2    +I)
           PLIST(3) = BTUF(P3+IR1+I)
           PLIST(4) = BTUF(P3+IR2+I)
           PLIST(5) = BTUF(P3+IR3+I)
           CALL SAVD(NDOCT,PLIST,5,IRTFLG)
        ENDDO

        CALL SAVDC
        CLOSE (NDOCT)

	END
@


1.20
log
@prompts
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.19
log
@GPL_2010
@
text
@d4 1
a4 1
C                REWRITTEN MAY 97 al                        
d7 2
a8 1
CC
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d31 1
a31 1
C SORTDOC(MAXDIM)
d47 1
a47 1
	INTEGER       P1,P2,P3
d67 1
a67 1
        CALL RDPRMI(KEY1,KEY2,NOT_USED,'FIRST, LAST KEY NUMBER')
d74 1
a74 1
     &              'INPUT COLUMN FOR OUTPUT COL. 2')
d77 1
a77 1
     &              'INPUT COLUMN #s FOR OUTPUT COL. 3 AND 4')
@


1.18
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.17
log
@~9 for allowing extension
@
text
@d1 1
a1 1
C++*************************************************************************
d8 25
a32 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
d40 1
a40 1
C--*************************************************************************
@


1.16
log
@spelling
@
text
@d38 2
a39 3
C       INPUT DOCUMENT FILENAME, IRTFLG == 9 ALLOWS DIFFERENT EXTENSION
        IRTFLG = 9
        CALL FILERD(DOCF1,NLET,DATEXC,'SOURCE DOCUMENT',IRTFLG)
@


1.15
log
@opendoc incore paramete
@
text
@d33 1
a33 1
        CHARACTER(LEN=MAXNAM) ;; DOCF1
@


1.14
log
@incore opendoc
@
text
@d28 1
d33 1
a33 1
        CHARACTER *81 DOCF1
d35 1
d43 1
a43 2
        NDOC = NDOCT
        CALL OPENDOC(DOCF1,.FALSE.,NLET,NDOC,.FALSE.,' ',
d52 1
a52 1
        CLOSE(NDOC)
d93 1
a93 1
           CALL UNSDAL(DOCF1,ICALL,NDOC,I,PLIST,NREG,
d103 1
a103 1
11      CLOSE(NDOC)
d134 1
a134 1
           CALL SAVD(NDOC,PLIST,5,IRTFLG)
d138 1
a138 1
        CLOSE (NDOC)
@


1.13
log
@nloop,iloop_removed
@
text
@d5 3
a7 2
C                OPENDOC PARAMETERS CHANGED DEC 2000 ARDEAN LEITH
C
d34 1
a34 1
        DATA          NDOC/23/
d41 1
@


1.12
log
@opendoc has prompt parameter now
@
text
@d52 1
a52 1
        CALL RDPRMI(KEY1,KEY2,NLOOP,ILOOP,'FIRST, LAST KEY NUMBER')
d58 1
a58 1
       	CALL RDPRMI(ICOL0,IDUM,NLOOP,ILOOP,
d61 1
a61 1
	CALL RDPRMI(ICOL1,ICOL2,NLOOP,ILOOP,
@


1.11
log
@lundoc was not defined!!
@
text
@d5 1
d40 1
a40 1
        CALL OPENDOC(DOCF1,.FALSE.,NLET,NDOC,.FALSE.,
@


1.10
log
@ran
@
text
@d47 2
a48 2
        CALL LUNDOCINFO(LUNDOC,MAXKEYT,MAXREGT,KEYUSED,.TRUE.,IRTFLG)
        CLOSE(LUNDOC)
@


1.9
log
@keyused parameter added to lundocinfo call
@
text
@a30 3
        INTEGER*2     NXT(4)
        CHARACTER*8   CNXT
        EQUIVALENCE   (NXT,CNXT)
a31 2
        LOGICAL       GFLAG

a101 4
	CALL TIME(CNXT)
	KST   = NXT(4)
        GFLAG = .FALSE.
        CALL MRAND(OUT,KST,GFLAG,NOUT) 
d104 2
a105 2
C         CREATE RANDOM IVAL IN RANGE 1...ILINE
	  CALL  GETRAND(OUT)
a135 1
        RETURN
@


1.8
log
@used lundoc
@
text
@d52 1
a52 1
        CALL LUNDOCINFO(LUNDOC,MAXKEYT,MAXREGT,.TRUE.,IRTFLG)
@


1.7
log
@rewritten to correct bug with 2nd & 3rd col and seg violation
@
text
@d20 1
a20 1
C PARAMETERS:           MAXDIM             
a21 1
C CALLS:                UNSDAL
a26 1
CNO_SAVE
a30 1
        CHARACTER     NULL
d39 3
a41 6
	NULL  = CHAR(0)

3333	CALL FILERD(DOCF1,NLET,NULL,'SOURCE DOCUMENT',IRTFLG)
	IF (IRTFLG .EQ. -1) RETURN

        CALL FILCAN(DOCF1,NLET,NULL,NULL,DOCF1,DATEXC,IRTFLG)
d44 11
a54 2
        CALL DOCINFO(DOCF1,NDOC,MAXKEYT,MAXREGT,.TRUE.,IRTFLG)
	IF (IRTFLG .NE. 0) RETURN 
@


1.6
log
@TIME parameter must be char
@
text
@d3 2
a4 1
C SHUFFLEDOC                            
d20 1
a20 1
C PARAMETERS:           MAXDIM             UNUSED
a22 1
C M.RADERMACHER 5/95
d27 2
a28 15
	PARAMETER (MAXKEY=1000000)
        PARAMETER (MAXREG=7)
        PARAMETER (IDIMBUF=(4*MAXKEY+101))

	COMMON /BATCH/IBCNT,NLOOP,IABSLP,ILOOP
	COMMON /UNITS/LUN,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT

        CHARACTER *4     DATEXC,PRJEXC
        COMMON /MASTER1/ DATEXC,PRJEXC,CDAT,CTIM,CTIT
 
c	COMMON DUMMY(2048),NKEY(MAXKEY),PLIST(10),DBUF(MAXREG,MAXKEY),
c     &         BUF(IDIMBUF)
	COMMON DUMMY(2048),PLIST(12),
     &         BTUF(1)	
c     &         DBUF(MAXREG,MAXKEY),NKEY(MAXKEY),BUF(IDIMBUF)
d30 2
d37 4
a40 3
	INTEGER P1,P2,P3
        LOGICAL GFLAG
        DATA  NDOC/23/
d42 1
a42 3
        GFLAG=.FALSE.
	NULL=CHAR(0)
	NOPEN=0
d45 1
a45 1
	IF(IRTFLG .EQ. -1) RETURN
d48 4
a51 1
	IF(IRTFLG .NE. 0) GOTO 3333
d53 1
a53 1
        CALL RDPRMI(KEY1,KEY2,NLOOP,ILOOP,'FIRST,LAST KEY NUMBER')
d59 2
a60 13
       	CALL RDPRMI(ICOL,IDUM,NLOOP,ILOOP,
     $  'INPUT COLUMN FOR OUTPUT COLUMN 2')
	CALL RDPRMI(ICL1,ICL2,NLOOP,ILOOP,
     &  'INPUT COLUMN # FOR OUTP. COL.3,COL.4')
        NREG=ICL2
        IF(ICL1.GT.ICL2) NREG=ICL1
        IF(ICOL.GT.NREG) NREG=ICOL
        IRN=KEY2-KEY1+1
        IR1=101
        IR2=IRN+101
        IR3=2*IRN+101
        IR4=3*IRN+101
        ILINE=0
d62 3
d66 13
a78 10
	MMKEY=MAX0(KEY1,KEY2)+10
	P1 = 1
	P2 = P1 + MAXREG*MMKEY 
	P3 = P2 + MMKEY 
	JDIM = 4*MMKEY+101 + P3
	IF (JDIM .GT. MAXDIM) THEN
	  WRITE(NOUT,414) JDIM, MAXDIM
414	  FORMAT('SHUFFLEDOC MEM NEEDED ',I4,'MEM AVAILABLE  ',I4)
          RETURN
	END IF
d80 10
d91 8
a98 17
C          CALL UNSDAL(DOCF1,NOPEN,NDOC,I,PLIST,NREG,
C     &                DBUF,MAXKEY,MAXREG,NKEY,LERR)
          CALL UNSDAL(DOCF1,NOPEN,NDOC,I,PLIST,NREG,
     &                BTUF(P1),MAXKEY,MAXREG,BTUF(P2),LERR)

          IF (LERR .NE. 0) GOTO 11
          ILINE=ILINE+1
C         WRITE(NOUT,400) I,(PLIST(K),K=1,NREG)
C400      FORMAT(' INP:',I5,10F12.6)             
C          NKEY(ILINE)=I
          BTUF(P2+ILINE)=I
C          BUF(IR1+ILINE-1)=PLIST(ICOL)
          BTUF(P3+IR1+ILINE-1)=PLIST(ICOL)
C          BUF(IR2+ILINE-1)=PLIST(ICL1)
          BTUF(P3+IR2+ILINE-1)=PLIST(ICL1)
C          BUF(IR3+ILINE-1)=PLIST(ICL2)
          BTUF(P3+IR3+ILINE-1)=PLIST(ICL2)
d103 1
a103 1
C       DO THE SHUFFLING:
d106 1
d108 3
a110 1
        DO 1 I=1,ILINE
d112 24
a135 39
	  IVAL=OUT*FLOAT(ILINE-1)+1
C          B1=NKEY(IVAL) 
          B1=BTUF(P2+IVAL) 
C          B2=BUF(IR1+IVAL-1)
          B2=BTUF(P3+IR1+IVAL-1)
C          B3=BUF(IR2+IVAL-1)
          B3=BTUF(P3+IR2+IVAL-1)
C          B4=BUF(IR3+IVAL-1)
          B4=BTUF(P3+IR3+IVAL-1)
C          NKEY(IVAL)=NKEY(I) 
          BTUF(P2+IVAL)=BTUF(P2+I) 
C          BUF(IR1+IVAL-1)=BUF(IR1+I-1)
          BTUF(P3+IR1+IVAL-1)=BTUF(P3+IR1+I-1)
C          BUF(IR2+IVAL-1)=BUF(IR2+I-1)
          BTUF(P3+IR2+IVAL-1)=BTUF(P3+IR2+I-1)
C          BUF(IR3+IVAL-1)=BUF(IR3+I-1)
          BTUF(P3+IR3+IVAL-1)=BTUF(P3+IR3+I-1)
C          NKEY(I)=B1 
          BTUF(P2+I)=B1 
C          BUF(IR1+I-1)=B2
          BTUF(P3+IR1+I-1)=B2
C          BUF(IR2+I-1)=B3
          BTUF(P3+IR2+I-1)=B3
C          BUF(IR3+I-1)=B4
          BTUF(P3+IR3+I-1)=B4
1       CONTINUE
        NOPEN=0
        DO I=1,ILINE
           PLIST(1)=I
C           PLIST(2)=NKEY(I)
           PLIST(2)=BTUF(P2+I)
C           PLIST(3)=BUF(IR1+I-1)
           PLIST(3)=BTUF(P3+IR1+I-1)
C           PLIST(4)=BUF(IR2+I-1)
           PLIST(4)=BTUF(P3+IR2+I-1)
C           PLIST(5)=BUF(IR3+I-1)
           PLIST(5)=BTUF(P3+IR3+I-1)
C          WRITE(NOUT,300) (PLIST(K),K=1,4)
C300       FORMAT(' OUTP:',4F12.6)
a136 1
           NOPEN=1
@


1.5
log
@reduce buf() to buf(1) in common block.
@
text
@d45 3
a47 1
	INTEGER*2      NXT(4)
d117 1
a117 1
	CALL TIME(NXT)
@


1.4
log
@buf(5000000) to buf(1) in common block
@
text
@d36 2
a37 3

	COMMON DUMMY(2048),NKEY(MAXKEY),PLIST(10),DBUF(MAXREG,MAXKEY),
     &         BUF(1)
d39 3
d46 1
d80 12
d93 2
d96 1
a96 1
     &                DBUF,MAXKEY,MAXREG,NKEY,LERR)
d102 8
a109 4
          NKEY(ILINE)=I
          BUF(IR1+ILINE-1)=PLIST(ICOL)
          BUF(IR2+ILINE-1)=PLIST(ICL1)
          BUF(IR3+ILINE-1)=PLIST(ICL2)
d121 24
a144 12
          B1=NKEY(IVAL) 
          B2=BUF(IR1+IVAL-1)
          B3=BUF(IR2+IVAL-1)
          B4=BUF(IR3+IVAL-1)
          NKEY(IVAL)=NKEY(I) 
          BUF(IR1+IVAL-1)=BUF(IR1+I-1)
          BUF(IR2+IVAL-1)=BUF(IR2+I-1)
          BUF(IR3+IVAL-1)=BUF(IR3+I-1)
          NKEY(I)=B1 
          BUF(IR1+I-1)=B2
          BUF(IR2+I-1)=B3
          BUF(IR3+I-1)=B4
d149 8
a156 4
           PLIST(2)=NKEY(I)
           PLIST(3)=BUF(IR1+I-1)
           PLIST(4)=BUF(IR2+I-1)
           PLIST(5)=BUF(IR3+I-1)
@


1.3
log
@make key go to 99999
@
text
@d38 2
a39 1
     &         BUF(IDIMBUF)
@


1.2
log
@added () in PARAMETER STATEMENT
@
text
@d27 1
a27 1
	PARAMETER (MAXKEY=15000)
@


1.1
log
@Initial revision
@
text
@d27 3
a29 3
	PARAMETER MAXKEY=15000
        PARAMETER MAXREG=7
        PARAMETER IDIMBUF=(4*MAXKEY+101)
@
