head	1.14;
access;
symbols
	pre_mrcs:1.12
	healthdept_2018:1.12
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.8
	prec_CA:1.8
	noindx:1.7
	Bproc:1.5
	oct21:1.5
	last77:1.5;
locks; strict;
comment	@c @;


1.14
date	2020.01.10.18.18.50;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2019.11.04.17.36.04;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2018.10.03.14.34.07;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2014.07.30.13.51.55;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.24.13.25.51;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.21.06.15;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.01.23.15.51.36;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2002.10.17.20.30.21;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.10.17.18.47;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.03.26.14.14.14;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.03.24.20.52.47;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.03.08.14.29.37;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	99.02.19.17.01.03;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	99.01.12.17.23.30;	author leith;	state Exp;
branches;
next	;


desc
@@


1.14
log
@locat MRC bug
@
text
@
C++*********************************************************************
C
C GETOLDSTACK.F  NEW                            7 JAN 99 ArDean Leith
C                LUNSETCOMMON BUG FIXED        17 OCT 02 ArDean Leith
C                INDEXED STACK                    JAN 02 ArDean Leith
C                MAXNAM                           JUL 14 ArDean Leith
C                MRC SUPPORT                      SEP 19 ArDean Leith
C                LOCAT BUG IN MRC              JAN 2020   ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2020  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  GETOLDSTACK(LUN,IMGNUM,WANTNEXT,MUSTGET,SAYIT,IRTFLG)
c  GETOLDSTACK_MRC(LUN,NX,IMGNUM,WANTNEXT,IRTFLG)
C
C  PURPOSE:       OPEN A SPECIFIED IMAGE WITHIN STACK FOR RANDOM 
C                 ACCESS READING/WRITING.
C
C  PARAMETERS:
C      LUN        LOGICAL UNIT NUMBER FOR FILNAM.               (SENT)
C      IMGNUM     IMAGE NUMBER WANTED AND FOUND            (SENT/RET.) 
C      WANTNEXT   LOGICAL FLAG TO GET NEXT IMAGE >= IMGNUM      (SENT) 
C      MUSTGET    LOGICAL FLAG TO STOP IF IMAGE DOESN'T EXIST   (SENT) 
C      SAYIT      SAY FILE OPENIN INFO.                         (RET.)
C      IRTFLG     ERROR RETURN FLAG.                            (RET.)
C                 IRTFLG =  3    ERROR, END OF FILE BEFORE IMGNUM
C                 IRTFLG =  2    ERROR, MUSTGET BUT IMGNUM UNUSED
C                 IRTFLG =  1    ERROR, REDHED FAILED
C                 IRTFLG =  0    NORMAL RETURN, IMAGE IS STACK
C                 IRTFLG = -1    NOT A STACK
C                 IRTFLG = -2    IMAGE NOT IN USE, MUSTGET IS FALSE
C
C  NOTE:      THE THREE SUBROUTINES: GETSTACK, GETOLDSTACK, AND
C             GETNEWSTACK WERE WRITTEN TO HANDLE WHOLE STACK (@@STACK)
C             OPERATIONS. THEY ARE ONLY USED IN THE OPERATIONS:
C             'AF' (UNDOCUMENTED), 'CP TO STK','DE','CE AD', 
C             'CE' (MANY?), 'AR SCA',
C             'AD D2', 'AD DF', 'AD DR', 'AD F', 'AD R', 'DIV 2', 
C             'MUL 2', 'MUL O', 'MU O', & 'SU B2'.
C             I DECIDED THAT WHOLE STACK OPERATION SUPPORT WAS LESS
C             IMPORTANT THAN SUPPORTING OPERATIONS ON SELECTED 
C             STACKED IMAGES SO I STOPPED CONVERTING OPERATIONS TO
C             HANDLING WHOLE STACKS WITHOUT SELECTED STACK SUPPORT.
C             THE NEW PARADIGM USES OPTILES AND NEXTFILE WHICH
C             HANDLES BOTH SELECTED AND WHOLE STACKS. 
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

	SUBROUTINE GETOLDSTACK(LUN,NX,IMGNUM,WANTNEXT,MUSTGET,
     &                         SAYIT,IRTFLG)

        IMPLICIT NONE
        INCLUDE 'CMLIMIT.INC'    ! NEED: MAXNAM

	INTEGER               :: LUN,NX,IMGNUM,IRTFLG
        LOGICAL               :: WANTNEXT,MUSTGET,SAYIT

        CHARACTER(LEN=1)      :: DSP
        CHARACTER(LEN=MAXNAM) :: FILNAM

	INTEGER               :: IMUSED, NZ,MZ,NSTACK,NLET,LOCAT
        INTEGER               :: LOCSLASH,IGO,LENAT

        LOGICAL               :: ISBARET,IS_MRC
    
    
        CALL LUNGETISBARE(LUN,ISBARET,IRTFLG)     ! MRC OK
        IF (.NOT. ISBARET) THEN
C          INPUT IMAGE IS SIMPLE OR A SPECIFIC STACKED IMAGE
C          IF SAYIT, WRITE OUT FILE OPENING INFO 
           IF (SAYIT) CALL LUNSAYINFO(LUN,IRTFLG)
           IRTFLG = -1       ! NOT A STACK
           RETURN
        ENDIF

C       ONLY FOR INLINE OR REGULAR IMAGE STACK NOW 

C       DETERMINE IF MRC OR SPIDER 
        CALL LUNGETIS_MRC(LUN,IS_MRC,IRTFLG)

        IF (IS_MRC) THEN
C          MRC STACK
           CALL GETOLDSTACK_MRC(LUN,IMGNUM,WANTNEXT,IRTFLG)
           RETURN
        ENDIF


C       GET SPECIFIED IMAGE HEADER FROM STACK FILE LOCATION
C       DO NOT CALL ERRT IF RUNS OFF END OF FILE
C       MUST LOAD OVERALL HEADER FIRST FOR LUNREDHED (MAY BE MT NOW!)

8888    CALL LUNREDHED(LUN,NX,0,.FALSE.,IRTFLG)
        CALL LUNREDHED(LUN,NX,IMGNUM,.FALSE.,IRTFLG)

        IF (IRTFLG > 0) THEN
C          PROBABLY RAN OFF END OF STACK FILE, ERRT NOT CALLED
           IF (MUSTGET) 
     &       CALL ERRT(102,'THIS IMAGE NOT USED IN STACK',IMGNUM) 
             IRTFLG = 3
           RETURN
        ELSEIF (IRTFLG == 0) THEN
C          NEED IMUSED FROM THIS STACKED IMAGE
           CALL LUNGETINUSE(LUN,IMUSED,IRTFLG)
        ELSE
           IMUSED = 0
        ENDIF
      
        !write(6,*) ' In getoldstack, imgnum 3:',imgnum,irtflg,imused

        IF (IMUSED == 0) THEN
C          THIS IMAGE NOT AN EXISTING IMAGE WITHIN STACK!
           IF (WANTNEXT) THEN
C             INCREMENT IMGNUM AND TRY AGAIN
              IMGNUM = IMGNUM + 1
              GOTO 8888

           ELSEIF (MUSTGET) THEN
              CALL ERRT(102,'THIS IMAGE NOT USED IN STACK',IMGNUM)
              IRTFLG = 2
              RETURN
           ELSE
              IRTFLG = -2
              RETURN
           ENDIF
        ENDIF

C       GET FILENAM FROM CURRENT HEADER OBJECT
        CALL LUNGETFILE(LUN,FILNAM,NLET,DSP,IRTFLG)

        !write(6,*) ' In getoldstack, filnam 1:',filnam(:nlet)
C       APPEND CURRENT STACKED IMAGE NUMBER TO STACK FILE NAME
        
C       (INTTOCHAR ALSO RETURNS NEW VALUE FOR NLET) 
        LENAT = INDEX(FILNAM,'@@')
        CALL INTTOCHAR(IMGNUM,FILNAM(LENAT+1:),NLET,0)
        NLET = NLET + LENAT

C       SET FILENAME IN HEADER OBJECT
        CALL LUNSETFILE(LUN,FILNAM(1:NLET),'O',IRTFLG)  

C       SET OFFSETS FOR REDLIN/WRTLIN ON THIS LUN
        CALL LUNSETIMGOFF(LUN,IMGNUM,NX,IRTFLG)

C       WRITE OUT FILE OPENING INFO 
        CALL LUNSAYINFO(LUN,IRTFLG)

C       SET COMMON BLOCK VARIABLES
        CALL LUNSETCOMMON(LUN,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       SET FLAG FOR NORMAL RETURN	
        IRTFLG = 0
 
	END


C       ---------------------- GETOLDSTACK_MRC ------------------------  

	SUBROUTINE GETOLDSTACK_MRC(LUN,IMGNUM,WANTNEXT,IRTFLG)

        IMPLICIT NONE
        INCLUDE 'CMLIMIT.INC'    ! NEED: MAXNAM

	INTEGER               :: LUN,IMGNUM,IRTFLG
        LOGICAL               :: WANTNEXT

        CHARACTER(LEN=1)      :: DSP
        CHARACTER(LEN=MAXNAM) :: FILNAM,FIL_AT
        CHARACTER(LEN=10)     :: CNUM

	INTEGER               :: IMUSED, NX,NY,NZ,MZ,NSTACK,NLET,IDUM
        INTEGER               :: LOCAT,LOCSLASH,IGO,LENAT
        
        INTEGER               :: lnblnkn   ! FUNCTION

C       ONLY FOR REGULAR MRC IMAGE STACK 

C       DO NOT CALL ERRT IF RUNS OFF END OF FILE

C       SEE IF IMAGNUM IS BEYOND LENGTH OF STACK
        CALL LUNGETNSTACK_MRC(LUN, NX,NY,NZ,MZ,NSTACK,IRTFLG)
        IF (IMGNUM > NSTACK) THEN
            IRTFLG = -2     !  END OF FILE BEFORE IMGNUM
            RETURN
        ENDIF

C       GET FILENAME FROM CURRENT HEADER OBJECT
        CALL LUNGETFILE_MRC(LUN,FILNAM,NLET,DSP,IRTFLG)

C       CONVERT IMGNUM TO CHARACTER STRING
        CALL INTTOCHAR(IMGNUM,CNUM,NLET,1)

C       APPEND CURRENT STACKED IMAGE NUMBER TO STACK FILE NAME
        LOCAT  = INDEX(FILNAM,'@@')
        FIL_AT = CNUM(1:NLET) // '@@' // FILNAM(LOCAT+1:)
        FILNAM = FIL_AT
        LOCAT  = INDEX(FILNAM,'@@')
        !write(6,*)' In getnewstack_mrc - imgnum,locat:',imgnum,locat

        IF (LOCAT == 0) THEN
C          HANDLES: 'stk'
           CALL ERRT(101,'NO @@ IN FILENAME',IDUM)
           IRTFLG = 1
           RETURN

        ELSEIF (LOCAT == 1)  THEN
C          HANDLES: '@@stk'
           FILNAM = FIL_AT

        ELSEIF (FILNAM(LOCAT-1:LOCAT-1) == '/')  THEN
C          HANDLES: '/@@stk'
           FILNAM = FILNAM(:LOCAT-1) // FIL_AT

        ELSE 
C          HANDLES: 'nnn@@stk' AND '/nnn@@stk'
           LOCSLASH = INDEX(FIL_AT(1:LOCAT),'/',BACK=.TRUE.)
           IF (LOCSLASH == 0) THEN
              FILNAM = FIL_AT
           ELSE
              FILNAM = FILNAM(:LOCSLASH-1) // FIL_AT
           ENDIF
        ENDIF
        NLET = LNBLNKN(FILNAM)

        !write(6,*) 'In getoldstack - filnam: ',filnam(:nlet)

C       SET FILENAME IN HEADER OBJECT
        CALL LUNSETFILE_MRC(LUN,FILNAM(1:NLET),'O',IRTFLG) 

C       SET OFFSETS FOR REDLIN/WRTLIN ON THIS LUN
        CALL LUNSETPOS_MRC(LUN,IMGNUM,IRTFLG)

C       WRITE OUT FILE OPENING INFO 
        CALL LUNSAYINFO_MRC(LUN,.TRUE.,IRTFLG)

C       SET COMMON BLOCK VARIABLES
        CALL LUNSETCOMMON_MRC(LUN,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       SET FLAG FOR NORMAL RETURN	
        IRTFLG = 0
 
	END



@


1.13
log
@mrc_support
@
text
@d9 1
d15 1
a15 1
C=* Copyright 1985-2019  Health Research Inc.,                         *
d217 2
@


1.12
log
@email_health_dept
@
text
@d4 5
a8 4
C GETOLDSTACK.F    NEW                           7 JAN 99 ARDEAN LEITH
C                  LUNSETCOMMON BUG FIXED       17 OCT 02 ARDEAN LEITH
C                  INDEXED STACK                   JAN 02 ARDEAN LEITH
C                  MAXNAM                          JUL 14 ARDEAN LEITH
d14 1
a14 1
C=* Copyright 1985-2014  Health Research Inc.,                         *
d32 2
a33 1
C    GETOLDSTACK(LUN,IMGNUM,WANTNEXT,MUSTGET,SAYIT,IRTFLG)
d35 2
a36 2
C    PURPOSE:       TO OPEN A SPECIFIED IMAGE WITHIN STACK FOR RANDOM 
C                   ACCESS READING/WRITING.
d38 27
a64 13
C    PARAMETERS:
C        LUN        LOGICAL UNIT NUMBER FOR FILNAM.               (SENT)
C        IMGNUM     IMAGE NUMBER WANTED AND FOUND            (SENT/RET.) 
C        WANTNEXT   LOGICAL FLAG TO GET NEXT IMAGE >= IMGNUM      (SENT) 
C        MUSTGET    LOGICAL FLAG TO STOP IF IMAGE DOES'NT EXIST   (SENT) 
C        SAYIT      SAY FILE OPENIN INFO.                         (RET.)
C        IRTFLG     ERROR RETURN FLAG.                            (RET.)
C                   IRTFLG =  3    ERROR, END OF FILE BEFORE IMGNUM
C                   IRTFLG =  2    ERROR, MUSTGET BUT IMGNUM UNUSED
C                   IRTFLG =  1    ERROR, REDHED FAILED
C                   IRTFLG =  0    NORMAL RETURN, IMAGE IS STACK
C                   IRTFLG = -1    NOT A STACK
C                   IRTFLG = -2    IMAGE NOT IN USE, MUSTGET IS FALSE
d69 1
a69 1
	SUBROUTINE GETOLDSTACK(LUN,NSAM,IMGNUM,WANTNEXT,MUSTGET,
d72 5
a76 1
        INCLUDE 'CMLIMIT.INC'
d81 2
a82 1
        LOGICAL               :: WANTNEXT,MUSTGET,SAYIT,ISBARET
d84 4
a87 1
        CALL LUNGETISBARE(LUN,ISBARET,IRTFLG)
d92 12
a103 1
           IRTFLG = -1
a106 1
C       V---- ONLY FOR INLINE OR REGULAR IMAGE STACK NOW ------------V
d112 4
a115 3
8888    CALL LUNREDHED(LUN,NSAM,0,.FALSE.,IRTFLG)
        CALL LUNREDHED(LUN,NSAM,IMGNUM,.FALSE.,IRTFLG)
        IF (IRTFLG .GT. 0) THEN
d118 2
a119 2
     &         CALL ERRT(102,'THIS IMAGE NOT USED IN STACK',IMGNUM) 
           IRTFLG = 3
d121 1
a121 1
        ELSEIF (IRTFLG .EQ. 0) THEN
d128 3
a130 1
        IF (IMUSED .EQ. 0) THEN
d150 1
d152 1
d159 1
a159 1
        CALL LUNSETFILE(LUN,FILNAM(1:NLET),'O',IRTFLG)
d162 1
a162 1
        CALL LUNSETIMGOFF(LUN,IMGNUM,NSAM,IRTFLG)
d168 89
a256 2
        CALL LUNSETCOMMON(LUN,IRTFLGT)
        IF (IRTFLGT .NE. 0) RETURN
a260 1
        RETURN
@


1.11
log
@LEN=MAXNAM) :: FILNAM
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.10
log
@GPL_2010
@
text
@d4 4
a7 3
C GETOLDSTACK.F    NEW                         7 Jan 99 ArDean Leith
C                  LUNSETCOMMON BUG FIXED     17 OCT 02 ArDean Leith
C                  INDEXED STACK                  JAN 02   ARDEAN LEITH
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d56 1
a56 3
        CHARACTER *1   DSP
        CHARACTER *1   FILNAMT
        CHARACTER *81  FILNAM
d58 4
a61 1
        LOGICAL        WANTNEXT,MUSTGET,SAYIT,ISBARET
@


1.9
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@indexed stacks
@
text
@d9 23
a31 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.7
log
@setcommon bug fixed
@
text
@d4 3
a6 2
C GETOLDSTACK.F   -- NEW                         7 Jan 99 ArDean Leith
C                    LUNSETCOMMON BUG FIXED     17 OCT 02 ArDean Leith
d61 1
d63 3
a65 3
8888    CALL LUNREDHED(LUN,NSAM,.FALSE.,IRTFLG)
        CALL LUNIMGREDHED(LUN,NSAM,.FALSE.,IMGNUM,IRTFLG)
        IF (IRTFLG .NE. 0) THEN
d71 5
a77 3
C       NEED IMUSED FROM THIS STACKED IMAGE
        CALL LUNGETINUSE(LUN,IMUSED,IRTFLG)

a106 3
C       PUT IMAGE NUMBER IN HEADER OBJECT
        CALL LUNSETIMGNUM(LUN,IMGNUM,IRTFLG)

d108 1
a108 2
        CALL LUNSETOFFSET(LUN,IRTFLGT)
        IF (IRTFLGT .NE. 0) RETURN
@


1.6
log
@error msg improved
@
text
@d4 2
a5 1
C GETOLDSTACK.F   -- NEW 7 Jan 99 ArDean Leith
d8 6
a13 7
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND     *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.  *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS *
C *    OR USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN        *
C *    APPROVAL OF THE CENTER FOR LABORATORIES AND RESEARCH            *
d112 4
@


1.5
log
@changed order of setoffset call
@
text
@d65 2
a66 1
           IF (MUSTGET) CALL ERRT(101,'THIS IMAGE NOT USED IN STACK',NE) 
d82 1
a82 1
              CALL ERRT(101,'THIS IMAGE NOT USED IN STACK',NE)
@


1.4
log
@needed lunsetoffset
@
text
@d102 3
a107 3

C       PUT IMAGE NUMBER IN HEADER OBJECT
        CALL LUNSETIMGNUM(LUN,IMGNUM,IRTFLG)
@


1.3
log
@cosmetic
@
text
@d102 4
@


1.2
log
@used lunsethdr
@
text
@a33 1
C     CALLS:
d41 2
a42 4
CNO_SAVE

        character *1  dsp
        character *1  FILNAMT
d45 1
a45 1
        LOGICAL       WANTNEXT,MUSTGET,SAYIT,ISBARET
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
C    GETOLDSTACK(FILNAM,LUN,IMGNUM,WANTNEXT,MUSTGET,SAYIT,IRTFLG)
a21 1
C        FILNAM     FILENAME (WITHOUT STACK NUMBER)               (SENT)
a22 1
C        NSAM       NSAM                                          (SENT) 
d39 2
a40 2
	SUBROUTINE GETOLDSTACK(FILNAM,LUN,NSAM,IMGNUM,
     &                         WANTNEXT,MUSTGET,SAYIT,IRTFLG)
a41 2
        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'LABLOCK.INC'
d44 3
a46 1
        COMMON /LUNARA/  LUNARA(100),LUNSTK(100)
d48 1
a48 2
        PARAMETER        (NBUFSIZ = 17008)
        COMMON /IOBUF/   BUF(NBUFSIZ)
d50 2
a51 20
        CHARACTER *(*)   FILNAM
        CHARACTER *5     FMT
        LOGICAL          WANTNEXT,MUSTGET,ISBARE,SAYIT

        DATA FMT    /'(I  )'/

C       MAKE SURE THE CURRENT STACK OFFSET IS ALWAYS ZEROED
        LUNSTK(LUN) = 0

C       RECOVER OVERALL HEADER FROM THE STACK FILE
        NOSTOP = 0
        IF (MUSTGET) NOSTOP = 1

        CALL REDHED(LUN,BUF,NBUFSIZ,NSAM,NOSTOP,IRTFLG)
        IF (IRTFLG .NE. 0) THEN
           IRTFLG = 1
           RETURN
        ENDIF

        IF (.NOT. ISBARE(FILNAM)) THEN
d53 2
a54 10
           IF (SAYIT) THEN
C             WRITE OUT FILE OPENING INFO 
              NSAM    = BUF(12)
              NROW    = BUF(2)
              NSLICE  = BUF(1)
              LABBYT  = BUF(22)
              IFORM   = BUF(5)
              CALL OPENINFO(FILNAM,NDUM,NSAM,NROW,NSLICE,0,
     &                      -2,LENTIT,'O',LABBYT,IRTFLG)
           ENDIF
a60 11
C       ALL IMAGES HAVE SAME IRECF AS STACK HEADER.
C       GET IRECF & LABRECF FROM STACK FILE HEADER
        IRECF   = BUF(3)
        LABRECF = BUF(13)
        LABBYT  = BUF(22)
        NSTACK  = BUF(26)
        IFORM   = BUF(5)

C       SET OFFSET FOR THIS IMAGE INTO LUNSTK
8888    LUNSTK(LUN) = (IMGNUM-1) * IRECF + LABRECF

d64 2
a65 2
        NOSTOP = 0
        CALL REDHED(LUN,BUF,NBUFSIZ,NSAM,NOSTOP,IRTFLG)
d72 1
a72 1

d74 1
a74 2
        CALL OPENGETHDR(BUF,NDUM,NROW,NSLICE,NDUM,NDUM,
     &                  NDUM,NDUM,NDUM,NDUM,IMUSED,LENTIT)
d93 15
d109 1
a109 2
        CALL OPENINFO(FILNAM,NDUM,NSAM,NROW,NSLICE,IMGNUM,
     &                -2,LENTIT,'O',LABBYT,IRTFLG)
a113 3
        RETURN

999     IRTFLG = 4
@
