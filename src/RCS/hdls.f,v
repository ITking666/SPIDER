head	1.16;
access;
symbols
	healthdept_2018:1.16
	pre_getangas:1.15
	GPL2010:1.15
	pre_GPL2010:1.14
	pre_var_equation:1.13
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.8
	noindx:1.7
	Bproc:1.6
	oct21:1.3
	last77:1.3;
locks; strict;
comment	@c @;


1.16
date	2018.10.03.14.34.07;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.24.13.25.53;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2009.11.12.16.14.41;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2009.06.11.12.49.53;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.28.49;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.18.20.12;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.10.18.41.50;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.16.16.46.26;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.16.15.50.38;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.11.14.08.15;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.12.06.18.41.21;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.12.06.14.01.41;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.09.21;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	96.01.16.15.45.24;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.06.14;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.49.30;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.16
log
@email_health_dept
@
text
@C++*********************************************************************
C
C  HDLS.F     
C              REWRITE                             JUN 2009 ARDEAN LEITH
C              IF (HITE .GE. THRESH                NOV 2009 ARDEAN LEITH 
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  HDLS(NDOC,NDOUT)
C
C  PURPOSE:  CREATES DOCUMENT FILE LISTING NUMBER OF CLASSES
C            FOR A GIVEN THRESHOLD FROM A DENDROGRAM. 
C            ONLY WORKS IN CONJUNCTION WITH HIERARCHICAL 
C            CLUSTERING OUTPUT FROM 'CL HC' OR 'CL CLA'.
C  
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE HDLS(NDOC,NDOUT)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        INTEGER, PARAMETER       :: NDLI = 3
        REAL                     :: DLISTIN(NDLI),DLISTOUT(NDLI)
C       INTEGER, PARAMETER       :: NVALS = 1000
C       INTEGER                  :: INUM(NVALS)

        CHARACTER(LEN=MAXNAM)    :: DOCNAM,OUTDOC
        LOGICAL                  :: EMPTY,TRUNCIT

        THRESH = 0.0
        CALL RDPRM1S(THRESH,NOT_USED,'THRESHOLD % (0 .. 100)', IRTFLG)
	IF (IRTFLG .NE. 0)  RETURN
        TRUNCIT = (THRESH .NE. 0.0)

C       OPEN INPUT DOC FILE NAME
        CALL OPENDOC(DOCNAM,.TRUE.,NLET,NDOC,NICDOC,.TRUE.,
     &               'DENDROGRAM DOCUMENT',
     &               .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
        IF (IRTFLG .NE. 0)  RETURN
  
C       OPEN OUTPUT DOC FILE NAME
        CALL OPENDOC(OUTDOC,.TRUE.,NLET,NDOUT,NICDOCO,.TRUE.,
     &         'OBJECT DOCUMENT',.FALSE.,.FALSE.,.TRUE.,NEWFILE,IRTFLG)
        IF (IRTFLG .NE. 0)  GOTO 9999

        CALL LUNDOCPUTCOM(NICDOCO,
     &                   'KEY = CLASS,    ELEMENTS ',IRTFLG)

        NTOTAL    = 0
        ICOL      = 2
        EMPTY     = .TRUE.
        NCLAS     = 1
        IF (.NOT. TRUNCIT) NCLAS = 0

        NOBJ      = 0
        LASTCLASS = -1

        DO    ! ENDLESS LOOP
           CALL LUNDOCREDNXT(NICDOC,IKEYGOT,DLISTIN,NDLI-1,
     &                       IGO,ICOUNT,IRTFLG)
           !write(6,*) ikeygot,icount,dlistin(1),irtflg
 
           IF (IRTFLG .EQ. 1)  THEN
              CALL ERRT(101,'ERROR READING DOC. FILE',NE)
              GOTO 9999

           ELSEIF (IRTFLG .EQ. 2 .AND. EMPTY) THEN
C             END OF DOC FILE AND NO KEYS FOUND
              CALL ERRT(101,'DID NOT FIND ANY KEYS IN DOC. FILE',NE)
              GOTO 9999

           ELSEIF (IRTFLG .NE. 0) THEN
C             HAVE FINISHED ALL KEYS IN DOC FILE
              EXIT

           ELSEIF (ICOUNT .LT. ICOL) THEN
              CALL ERRT(102,'REGISTER MISSING IN DOC. FILE',ICOL)
              GOTO 9999
           ENDIF
           EMPTY  = .FALSE.

           ICLASS = DLISTIN(1)
           HITE   = DLISTIN(2)
           IMGNUM = DLISTIN(3)

           NTOTAL = NTOTAL + 1

           IF (TRUNCIT) THEN
              NOBJ = NOBJ + 1
              IF (HITE .GE. THRESH) THEN
C                PUT OUT STATISTICS ON LAST CLASS
                 IF (VERBOSE) WRITE(NOUT,90) NCLAS,NOBJ
 90              FORMAT('  Class:',  I4,'   Elements:',I5)

C                WRITE FINISHED CLASS DATA TO DOC FILE
                 DLISTOUT(1) = NOBJ
                 CALL LUNDOCWRTDAT(NICDOCO,NCLAS, DLISTOUT,1,IRTFLG)

                 NCLAS = NCLAS + 1
                 NOBJ  = 0
              ENDIF
           ELSE
              IF (ICLASS .NE. LASTCLASS) THEN
C                HAVE STARTED NEW CLASS
                 IF (NOBJ .GT. 0) THEN
C                   PUT OUT STATISTICS ON FINISHED CLASS
                    WRITE(NOUT,90) LASTCLASS,NOBJ

C                   WRITE FINISHED CLASS DATA TO DOC FILE
                    DLISTOUT(1) = NOBJ
                    CALL LUNDOCWRTDAT(NICDOCO,LASTCLASS, 
     &                                DLISTOUT,1,IRTFLG)
                 ENDIF

                 NCLAS     = NCLAS + 1
                 NOBJ      = 1
                 LASTCLASS = ICLASS
              ELSE
                 NOBJ  = NOBJ + 1
              ENDIF
           ENDIF
        ENDDO         

        IF (NOBJ .GT. 0) THEN
C          WRITE DATA FOR LAST CLASS
           NC = NCLAS
           IF (.NOT. TRUNCIT) NC = LASTCLASS

           WRITE(NOUT,90) NC,NOBJ

C          WRITE LAST CLASS DATA TO DOC FILE
           DLISTOUT(1) = NOBJ
           CALL LUNDOCWRTDAT(NICDOCO,NC, DLISTOUT,1,IRTFLG)
        ENDIF

        WRITE(NOUT,93)  NTOTAL,NCLAS
93      FORMAT('  Total number of objects=',I7,
     &         '  Number of classes=',I5)

C       SET OPERATION LINE REGISTERS TO NCLAS
        CALL REG_SET_NSEL(1,1,FLOAT(NCLAS), 0.0,0.0,0.0,0.0, IRTFLG)

9999    CLOSE(NDOC)
        CLOSE(NDOUT)
        END


@


1.15
log
@GPL_2010
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.14
log
@HITE .GE. THRESH
@
text
@d8 3
a10 2
C=* This file is part of:                                              * C=* SPIDER - Modular Image Processing System.   Author: J. FRANK       *
C=* Copyright 1985-2009  Health Research Inc.,                         *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
a24 1
C=*                                                                    *
@


1.13
log
@rewrite of dendrogram
@
text
@d3 3
a5 3
C    HDLS.F     
C                       REWRITE                   JUN 2009 ARDEAN LEITH
C
a6 5
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
C=*                                                                    *
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d8 4
a11 1
C=* Email:  spider@@wadsworth.org                                       *
d13 1
a13 1
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d24 2
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
d29 1
a29 1
C   HDLS(NDOC,NDOUT)
d112 1
a112 1
              IF (HITE .GT. THRESH) THEN
@


1.12
log
@GPL License fixed
@
text
@d3 2
a4 1
C    HDLS.F 
d8 1
a8 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d34 5
d47 4
a50 2
        COMMON        Q(1024)
        CHARACTER(LEN=MAXNAM) :: DOCFIL
d52 2
a53 2
	INTEGER       TOTEL
        CHARACTER*1   NULL
d55 2
a56 5
        NULL = CHAR(0)

        CALL RDPRM(THRESHOLD,NOT_USED,'THRESHOLD (0-1)')

	CALL  FILERD(DOCFIL,NLETI,NULL,'DENDROGRAM DOCUMENT',IRTFLG)
d58 1
d60 67
a126 27
C       NO. OF OBJECTS IN A GROUP
	X41   = 0.0
	TOTEL = 0.0

C       NO. OF GROUPS
	X42  = 1.0

	NLIST = 2
	K     = 0
	K2    = 1
778	LERR  = -1
	KP1   = K+1
	CALL  UNSAV(DOCFIL,K,NDOC,KP1,Q,2,LERR,K2)
	IF (LERR .EQ. 0)  THEN
	   IF (K .EQ. 0)  THEN
	      X32 = Q(2)
	      K   = K+1
	      X41 = X41+1.0
              GOTO  778
	   ENDIF

          X22=Q(2)
          K=K+1

	  IF (X32 .LT. THRESHOLD) THEN
	      X41 = X41+1.0
	      X32 = X22
d128 31
a158 18

	      Q(1) = X42
	      Q(2) = X41
              CALL SAVD(NDOUT,Q,NLIST,IRTFLG)
	      IF (IRTFLG.EQ.-1) GOTO  5

	      IF (X42 .EQ. 1.0)  WRITE(NOUT,122)
122	      FORMAT(' GROUP NUMBER   NUMBER OF ELEMENTS')

	      WRITE(NOUT,123)  X42,X41
123           FORMAT(1X,F5.0,10X,2F10.0)

	      TOTEL = TOTEL+X41
	      X42   = X42+1.0
              X41   = 1.0
              X32   = X22
            ENDIF
            GOTO  778
d161 3
a163 10
	Q(1) = X42
	Q(2) = X41
        CALL SAVD(NDOUT,Q,NLIST,IRTFLG)
	IF (IRTFLG .EQ. -1) GOTO  5

	WRITE(NOUT,123)  X42,X41
	TOTEL=TOTEL+X41
	WRITE(NOUT,33)  TOTEL,X42
33      FORMAT('   TOTAL NUMBER OF OBJECTS =',I9,
     &         ' NUMBER OF CLASSES =',F9.0)
d165 2
a166 1
5       CALL  SAVDC
d168 1
d170 2
a171 1
        CLOSE(NDOC)
a172 1
	END
@


1.11
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 2003. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a34 1
C--************************************************************************
@


1.10
log
@output formatting
@
text
@d1 1
d8 24
d42 1
@


1.9
log
@CA & CL rewrite
@
text
@d42 1
a42 1
	X42=1.0
d44 5
a48 5
	NLIST=2
	K=0
	K2=1
778	LERR=-1
	KP1=K+1
a64 2
	      IF (X42 .EQ. 1.0)  WRITE(NOUT,122)
122	      FORMAT(' GROUP NUMBER      ','NUMBER OF ELEMENTS')
d71 3
d75 2
a76 1
123           FORMAT(1X,F5.0,14X,2F10.0)
d93 2
a94 2
33      FORMAT('   TOTAL NUMBER OF OBJECTS =',I10,
     &         ' NUMBER OF CLASSES =',F10.0)
@


1.8
log
@*** empty log message ***
@
text
@d5 8
a12 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
C **************************************************************************
d14 1
a14 1
C   HDLS
d19 1
a19 1
        SUBROUTINE HDLS(MAXMEM)
d22 1
d24 3
a26 1
        COMMON        DUMMY(1024),Q(1024)
a27 1
        CHARACTER*81  DOCFIL
a28 1
	DATA  NDOC,NDOUT/55,56/
d30 1
a30 1
        NULL=CHAR(0)
d32 1
a32 1
        CALL  RDPRM(X51,NOT_USED,'THRESHOLD (0-1)')
d35 1
a35 1
	IF(IRTFLG.EQ.-1)  RETURN
d38 2
a39 2
	X41=0.0
	TOTEL=0.0
d50 14
a63 16
	IF (LERR.EQ.0)  THEN
	IF (K.EQ.0)  THEN
C	   X31=Q(1)
	   X32=Q(2)
	   K=K+1
	   X41=X41+1.0
           GOTO  778
	ENDIF

C	X21=Q(1)
	X22=Q(2)
	K=K+1
C	IF (X22.GT.X32 .OR. X32.LT.X51) THEN
	   IF(X32.LT.X51) THEN
	      X41=X41+1.0
	      X32=X22
d65 7
a71 7
	      IF(X42.EQ.1.0)  WRITE(NOUT,122)
122	      FORMAT(1X,'GROUP NUMBER      ','NUMBER OF ELEMENTS')
C
	      Q(1)=X42
	      Q(2)=X41
              CALL  SAVD(NDOUT,Q,NLIST,IRTFLG)
	      IF(IRTFLG.EQ.-1) GOTO  5
d74 5
a78 5
123      	FORMAT(1X,F5.0,14X,2F10.0)
	      TOTEL=TOTEL+X41
	      X42=X42+1.0
              X41=1.0
              X32=X22
d83 4
a86 4
	Q(1)=X42
	Q(2)=X41
        CALL  SAVD(NDOUT,Q,NLIST,IRTFLG)
	IF (IRTFLG.EQ.-1) GOTO  5
@


1.7
log
@nloop,iloop_removed
@
text
@d24 1
a24 1
        COMMON        DUMMY(1024),Q(1)
@


1.6
log
@header
@
text
@d32 1
a32 1
        CALL  RDPRM(X51,NLOOP,ILOOP,'THRESHOLD (0-1)')
@


1.5
log
@# continuation & cosmetic
@
text
@d15 1
a15 1
C
@


1.4
log
@a
@
text
@d3 1
a3 1
C $$ HDLS.FOR
d19 1
a19 3
C
C $$ HDLS.FOR
C
a21 1
#ifdef SP_UNIX
d23 3
a25 5
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
        COMMON  DUMMY(1024),Q(1)
	integer  totel
d27 1
a27 1
        CHARACTER*1  NULL
d32 1
d34 1
a34 2
        CALL  RDPRM(X51,NLOOP,ILOOP,'Threshold (0-1)')
	CALL  FILERD(DOCFIL,NLETI,NULL,'Dendrogram document',IRTFLG)
d36 2
a37 1
C # OF OBJECTS IN A GROUP
d39 3
a41 2
	totel=0.0
C; # OF GROUPS
d43 1
a43 1
C
d50 7
a56 7
	IF(LERR.EQ.0)  THEN
	IF(K.EQ.0)  THEN
C	X31=Q(1)
	X32=Q(2)
	K=K+1
	X41=X41+1.0
        GOTO  778
d58 1
d62 21
a82 20
C	IF(X22.GT.X32 .OR. X32.LT.X51) THEN
	IF(X32.LT.X51) THEN
	X41=X41+1.0
	X32=X22
        ELSE
	IF(X42.EQ.1.0)  WRITE(NOUT,122)
122	FORMAT(1X,'Group number      ','Number of elements')
C
	Q(1)=X42
	Q(2)=X41
        CALL  SAVD(NDOUT,Q,NLIST,IRTFLG)
	IF(IRTFLG.EQ.-1) GOTO  5
	WRITE(NOUT,123)  X42,X41
123	FORMAT(1X,F5.0,14X,2F10.0)
	totel=totel+x41
	X42=X42+1.0
	X41=1.0
	X32=X22
	ENDIF
	GOTO  778
d84 1
d88 2
a89 1
	IF(IRTFLG.EQ.-1) GOTO  5
d91 5
a95 4
	totel=totel+x41
	write(nout,33)  totel,x42
33       FORMAT('   Total number of objects =',i10,
     &   ' Number of classes =',f10.0)
d97 1
d100 1
@


1.3
log
@nosave
@
text
@d34 1
a34 1
CNO_SAVE
@


1.2
log
@cpp_lines_added
@
text
@d34 1
a34 1

@


1.1
log
@Initial revision
@
text
@d24 3
d28 1
@
