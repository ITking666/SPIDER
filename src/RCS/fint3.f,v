head	1.13;
access;
symbols
	pre_mrcs:1.13
	healthdept_2018:1.13
	pre_getangas:1.12
	GPL2010:1.12
	pre_GPL2010:1.11
	pre_var_equation:1.11
	pre_fftwrings:1.11
	pre_opfiles:1.11
	src:1.11
	best-code:1.11
	x-named-regs:1.11
	x:1.11
	v13-00:1.11
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.9
	Bproc:1.9
	oct21:1.5
	last77:1.5;
locks; strict;
comment	@c @;


1.13
date	2018.10.03.14.34.06;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.24.13.25.39;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.21.05.14;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.08.19.53.19;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	2000.09.11.19.38.30;	author bimal;	state Exp;
branches;
next	1.8;

1.8
date	2000.09.11.19.35.00;	author bimal;	state Exp;
branches;
next	1.7;

1.7
date	99.12.07.15.45.04;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.11.10.23.09.18;	author yuchen;	state Exp;
branches;
next	1.5;

1.5
date	97.10.06.20.43.40;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.04.04.15.23.21;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.01.25.16.53.43;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.01.24.23.24.39;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.01.23.20.32.08;	author pawel;	state Exp;
branches;
next	;


desc
@3D Fourier inpterpolation
@


1.13
log
@email_health_dept
@
text
@C ++********************************************************************
C    FINT3.FOR                                                         *
C    9/11/00 BIMAL                       ADAPTED TO NEW FOURIER FORMAT *
C                                                                      *                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C                                                                      *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:
C                                                                      *
C IMAGE_PROCESSING_ROUTINE  
C                                                                      *
C        0         2         3         4         5         6         7 *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************


        SUBROUTINE FINT3(X3,Y3,NSAM,NROW,NSLICE,NSAMN,NROWN,
     &                    NSLICEN,LSD,LSDN)



        DIMENSION   X3(LSD,NROW,NSLICE)
        DIMENSION   Y3(LSDN,NROWN,NSLICEN) 

C       TO KEEP THE EXACT VALUES ON THE PREVIOUS GRID YOU SHOULD USE
C       SQ2     = 2.0. HOWEVER, TOTAL ENERGY WILL NOT BE CONSERVED.

        SQ2     = SQRT(2.0)


        ANORM    = FLOAT(NSAMN*NROWN*NSLICEN)/FLOAT(NSAM*NROW*NSLICE)
        NM       = MOD(NSAM,2)

        INV=+1
        CALL  FMRS_3(X3,NSAM,NROW,NSLICE,INV)

C       NORMALIZATION REQUIRED
        X3 = X3*ANORM
	IF(NSAMN>=NSAM)  THEN
        INSAM    = NSAMN - NSAM
        INROW    = NROWN - NROW
        INSLICE  = NSLICEN - NSLICE
C       ZERO PADDING IS DONE
        Y3 = 0.0

        DO K =1, NSLICE/2 +1
           DO J = 1, NROW/2+1
              DO I =1,LSD
                 Y3(I,J,K) = X3(I,J,K) 
              ENDDO
           ENDDO
        ENDDO

        DO K =1, NSLICE/2 +1
           DO J = NROW/2+2+INROW, NROWN
              DO I =1,LSD
                 Y3(I,J,K) = X3(I,J-INROW,K) 
              ENDDO
           ENDDO
        ENDDO

        DO K = NSLICE/2+2+INSLICE, NSLICEN
           DO J = 1, NROW/2+1
              DO I =1,LSD
                 Y3(I,J,K) = X3(I,J,K-INSLICE) 
              ENDDO
           ENDDO
        ENDDO
	
        DO K = NSLICE/2+2+INSLICE, NSLICEN
           DO J = NROW/2+2+INROW, NROWN
              DO I =1,LSD
                 Y3(I,J,K) = X3(I,J-INROW,K-INSLICE) 
              ENDDO
           ENDDO
        ENDDO

C       WEIGHTING FACTOR USED FOR EVEN NSAM. REQUIRED SINCE ADDING ZERO FOR
C       INTERPOLATION WILL INTRODUCE A COMPLEX CONJUGATE FOR NSAM/2 TH
C       ELEMENT.

        IF (NM .EQ. 0 .AND. INSAM .NE. 0) THEN
           DO K = 1,NSLICEN
              DO J = 1,NROWN
                 Y3(NSAM+1,J,K) = (1/SQ2)*Y3(NSAM+1,J,K)
                 Y3(NSAM+2,J,K) = (1/SQ2)*Y3(NSAM+2,J,K)
              ENDDO
           ENDDO

           DO K = 1,NSLICEN
       	      DO I =1,LSD
                 Y3(I,NROW/2+1+INROW,K) = Y3(I,NROW/2+1,K)/SQ2
                 Y3(I,NROW/2+1,K)       = Y3(I,NROW/2+1,K)/SQ2
              ENDDO
           ENDDO

           DO J = 1,NROWN
              DO I =1,LSD
                 Y3(I,J,NSLICE/2+1+INSLICE) = Y3(I,J,NSLICE/2+1)/SQ2
                 Y3(I,J,NSLICE/2+1)         = Y3(I,J,NSLICE/2+1)/SQ2
              ENDDO
           ENDDO
        ENDIF

	ELSE
	Y3(:,1:NROWN/2+1,1:NSLICEN/2+1)=
     &			X3(1:LSDN,1:NROWN/2+1,1:NSLICEN/2+1)
	DO  J=NROWN,NROWN/2+2,-1
	Y3(:,J,1:NSLICEN/2+1)=X3(1:LSDN,J+NROW-NROWN,1:NSLICEN/2+1)
	ENDDO

	DO  K=NSLICEN,NSLICEN/2+2,-1
	Y3(:,1:NROWN/2+1,K)=X3(1:LSDN,1:NROWN/2+1,K+NSLICE-NSLICEN)
	DO  J=NROWN,NROWN/2+2,-1
	Y3(:,J,K)=X3(1:LSDN,J+NROW-NROWN,K+NSLICE-NSLICEN)
	ENDDO
	ENDDO

	ENDIF

        INV= -1
        CALL  FMRS_3(Y3,NSAMN,NROWN,NSLICEN,INV)

        END
@


1.12
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.11
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.10
log
@truncation added
@
text
@d6 23
a28 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.9
log
@comments
@
text
@a39 3
        INSAM    = NSAMN - NSAM
        INROW    = NROWN - NROW
        INSLICE  = NSLICEN - NSLICE
d49 4
a52 1

d115 15
@


1.8
log
@adapted to new fourier format
@
text
@d3 1
a3 1
C    7/24/00 BIMAL                       ADAPTED TO NEW FOURIER FORMAT *
@


1.7
log
@header
@
text
@a0 1

d2 3
a4 3
C                                                                      *
C                                                                      *
C                                                                      *
d18 3
a20 1
C  PARAMETERS:                                                         *
d26 89
a114 2
	SUBROUTINE FINT3(F1,F2,NDIM,NROW,NSLICE,NDIMN,NROWN,
     &                   NSLICEN,WORK)
d116 2
a117 1
	DIMENSION  F1(NDIM,NROW,NSLICE),F2(NDIMN,NROWN,NSLICEN),WORK(*)
d119 1
a119 217
C  Interpolation using Fourier zero padding
C  F1 and F2 can be the same
	INV=1
	CALL  F3MR(F1,NDIM,NROW,NSLICE,INV,WORK)
	IF (INV.EQ.0) THEN
	   CALL ERRT(38,'FP ',NE)
	   RETURN
	ENDIF
C  If you prefer exact values on an old grid replace:
C       SQ2=2.0
C       D2=4.0
C	D4=8.0
C  Warning! It will cause an error in total energy.

	SQ2=SQRT(2.0)
	D2=SQRT(4.0)
	D4=SQRT(8.0)

	FM=FLOAT(NDIMN*NROWN*NSLICEN)/FLOAT(NDIM*NROW*NSLICE)
	NS21=NSLICE/2+1
	NR21=NROW/2+1
	DO    K=NSLICE,1,-1
	DO    J=NROW,1,-1
	DO    I=NDIM,1,-1
	F2(I,J,K)=F1(I,J,K)*FM
	ENDDO
	ENDDO
	ENDDO
	DO    K=1,NSLICEN
	DO    J=NROW+1,NROWN
	DO    I=1,NDIMN
	F2(I,J,K)=0.0
	ENDDO
	ENDDO
	ENDDO
	DO    K=1,NSLICEN
	DO    J=1,NROW
	DO    I=NDIM+1,NDIMN
	F2(I,J,K)=0.0
	ENDDO
	ENDDO
	ENDDO
	DO    K=NSLICE+1,NSLICEN
	DO    J=1,NROW
	DO    I=1,NDIMN
	F2(I,J,K)=0.0
	ENDDO
	ENDDO
	ENDDO
C  Blocks
	DO    K=1,NSLICE/2
	DO    J=2,NROW/2
	DO    I=3,NDIM
	F2(I,NROWN-J+2,K)=F2(I,NROW-J+2,K)
	F2(I,NROW-J+2,K)=0.0
	ENDDO
	ENDDO
	ENDDO
	DO    K=1,NSLICE/2
	DO    I=3,NDIM
	F2(I,NROWN-NROW+NR21,K)=F2(I,NR21,K)/SQ2
	F2(I,NR21,K)=F2(I,NR21,K)/SQ2
	ENDDO
	ENDDO
	DO    J=2,NROW/2
	DO    I=3,NDIM
	F2(I,NROWN-J+2,NS21)=F2(I,NROW-J+2,NS21)/SQ2
	ENDDO
	ENDDO
C...
	DO    K=2,NSLICE/2
	DO    J=1,NROW/2
	DO    I=3,NDIM
	F2(I,J,NSLICEN-K+2)=F2(I,J,NSLICE-K+2)
	F2(I,J,NSLICE-K+2)=0.0
	ENDDO
	ENDDO
	ENDDO
	DO    J=1,NROW/2
	DO    I=3,NDIM
	F2(I,J,NSLICEN-NSLICE+NS21)=F2(I,J,NS21)/SQ2
	F2(I,J,NS21)=F2(I,J,NS21)/SQ2
	ENDDO
	ENDDO
	DO    K=2,NSLICE/2
	DO    I=3,NDIM
	F2(I,NR21,NSLICEN-K+2)=F2(I,NR21,NSLICE-K+2)/SQ2
	ENDDO
	ENDDO
C...
	DO    K=2,NSLICE/2
	DO    J=2,NROW/2
	DO    I=3,NDIM
	F2(I,NROWN-J+2,NSLICEN-K+2)=F2(I,NROW-J+2,NSLICE-K+2)
	F2(I,NROW-J+2,NSLICE-K+2)=0.0
	ENDDO
	ENDDO
	ENDDO
	DO    J=2,NROW/2
	DO    I=3,NDIM
	F2(I,NROWN-J+2,NSLICEN-NSLICE+NS21)=F2(I,NROW-J+2,NS21)/SQ2
	F2(I,NROW-J+2,NS21)=0.0
	ENDDO
	ENDDO
	DO    K=2,NSLICE/2
	DO    I=3,NDIM
	F2(I,NROWN-NROW+NR21,NSLICEN-K+2)=F2(I,NR21,NSLICE-K+2)/SQ2
	F2(I,NR21,NSLICE-K+2)=0.0
	ENDDO
	ENDDO
C...
	DO    I=3,NDIM
	F2(I,NR21,NS21)=F2(I,NR21,NS21)/D2
	F2(I,NR21,NSLICEN-NSLICE+NS21)=F2(I,NR21,NS21)
	F2(I,NROWN-NROW+NR21,NS21)=F2(I,NR21,NS21)
	F2(I,NROWN-NROW+NR21,NSLICEN-NSLICE+NS21)=F2(I,NR21,NS21)
	ENDDO
C...
C Two planes
C. 
	DO    K=2,NSLICE/2
	DO    J=3,NROW
	F2(1,J,NSLICEN-K+2)=F2(1,J,NSLICE-K+2)
 	F2(1,J,NSLICE-K+2)=0.0
	ENDDO
	ENDDO
	DO    J=3,NROW
	F2(1,J,NS21)=F2(1,J,NS21)/SQ2
 	F2(1,J,NSLICEN-NSLICE+NS21)=F2(1,J,NS21)
	ENDDO
	DO    K=1,NS21
	IF(K.EQ.NS21)  THEN
	FM=D2
	ELSE
	FM=SQ2
	ENDIF
	DO    J=3,NROW,2
	F2(NDIM+1,(J+1)/2,K)=F2(2,J,K)/FM
	F2(NDIM+2,(J+1)/2,K)=F2(2,J+1,K)/FM
	F2(NDIM+1,NROWN-(J-3)/2,K)=F2(2,J,K)/FM
 	F2(NDIM+2,NROWN-(J-3)/2,K)=-F2(2,J+1,K)/FM
	ENDDO
	ENDDO
	DO    K=NS21,NSLICE
	IF(K.EQ.NS21)  THEN
	FM=D2
	ELSE
	FM=SQ2
	ENDIF
	DO    J=3,NROW,2
	F2(NDIM+1,(J+1)/2,NSLICEN-NSLICE+K)=F2(2,J,K)/FM
	F2(NDIM+2,(J+1)/2,NSLICEN-NSLICE+K)=F2(2,J+1,K)/FM
	F2(NDIM+1,NROWN-(J-3)/2,NSLICEN-NSLICE+K)=F2(2,J,K)/FM
 	F2(NDIM+2,NROWN-(J-3)/2,NSLICEN-NSLICE+K)=-F2(2,J+1,K)/FM
	ENDDO
	ENDDO
	DO    K=1,NSLICE
	DO    J=3,NROW
	F2(2,J,K)=0.0
	ENDDO
	ENDDO
C.  Lines
	DO    K=3,NSLICE,2
	F2(NDIM+1,1,(K+1)/2)=F2(2,1,K)/SQ2
	F2(NDIM+2,1,(K+1)/2)=F2(2,1,K+1)/SQ2
	F2(NDIM+1,1,NSLICEN-(K-3)/2)=F2(2,1,K)/SQ2
	F2(NDIM+2,1,NSLICEN-(K-3)/2)=-F2(2,1,K+1)/SQ2
	F2(2,1,K)=0.0
	F2(2,1,K+1)=0.0
	ENDDO
	F2(NDIM+1,1,1)=F2(2,1,1)/SQ2
	F2(2,1,1)=0.0
	F2(NDIM+1,1,NS21)=F2(2,1,2)/D2
	F2(NDIM+1,1,NSLICEN-NSLICE+NS21)=F2(2,1,2)/D2
	F2(2,1,2)=0.0
C.
	DO    K=3,NSLICE,2
	F2(NDIM+1,NR21,(K+1)/2)=F2(2,2,K)/D2
	F2(NDIM+2,NR21,(K+1)/2)=F2(2,2,K+1)/D2
	F2(NDIM+1,NROWN-NROW+NR21,(K+1)/2)=F2(2,2,K)/D2
	F2(NDIM+2,NROWN-NROW+NR21,(K+1)/2)=-F2(2,2,K+1)/D2
	F2(NDIM+1,NR21,NSLICEN-(K-3)/2)=F2(2,2,K)/D2
	F2(NDIM+2,NR21,NSLICEN-(K-3)/2)=-F2(2,2,K+1)/D2
	F2(NDIM+1,NROWN-NROW+NR21,NSLICEN-(K-3)/2)=F2(2,2,K)/D2
	F2(NDIM+2,NROWN-NROW+NR21,NSLICEN-(K-3)/2)=F2(2,2,K+1)/D2
	F2(2,2,K)=0.0
	F2(2,2,K+1)=0.0
	ENDDO
	F2(NDIM+1,NR21,1)=F2(2,2,1)/D2	
	F2(NDIM+1,NROWN-NROW+NR21,1)=F2(2,2,1)/D2	
	F2(NDIM+1,NR21,NS21)=F2(2,2,2)/D4	
	F2(NDIM+1,NR21,NSLICEN-NSLICE+NS21)=F2(2,2,2)/D4	
	F2(NDIM+1,NROWN-NROW+NR21,NS21)=F2(2,2,2)/D4
	F2(NDIM+1,NROWN-NROW+NR21,NSLICEN-NSLICE+NS21)=F2(2,2,2)/D4
	F2(2,2,1)=0.0
	F2(2,2,2)=0.0	
C.
	DO    K=3,NSLICE,2
	F2(1,NROW+1,(K+1)/2)=F2(1,2,K)/SQ2
	F2(1,NROW+2,(K+1)/2)=F2(1,2,K+1)/SQ2
	F2(1,NROW+1,NSLICEN-(K-3)/2)=F2(1,2,K)/SQ2
	F2(1,NROW+2,NSLICEN-(K-3)/2)=F2(1,2,K+1)/SQ2
	F2(1,2,K)=0.0
	F2(1,2,K+1)=0.0
	ENDDO
	F2(1,NROW+1,1)=F2(1,2,1)/SQ2	
	F2(1,2,1)=0.0
	F2(1,NROW+1,NS21)=F2(1,2,2)/D2	
	F2(1,NROW+1,NSLICEN-NSLICE+NS21)=F2(1,2,2)/D2	
	F2(1,2,2)=0.0
	F2(1,1,NSLICE+1)=F2(1,1,2)/SQ2
	F2(1,1,2)=0.0	
C
	INV=-1
	CALL  F3MR(F2,NDIMN,NROWN,NSLICEN,INV,WORK)
	IF (INV.EQ.0)   CALL ERRT(38,'FP ',NE)
	END
@


1.6
log
@a
@
text
@d1 27
a27 1
	SUBROUTINE  FINT3(F1,F2,NDIM,NROW,NSLICE,NDIMN,NROWN,NSLICEN,WORK)
a29 1
C
a31 1
C
d35 2
a36 2
	CALL ERRT(38,'FP ',NE)
	RETURN
d43 1
a43 1
C
d47 1
a47 1
C
@


1.5
log
@*** empty log message ***
@
text
@d3 1
a3 1
CNO_SAVE
@


1.4
log
@error 38
@
text
@d27 28
a54 16
	DO  1  K=NSLICE,1,-1
	DO  1  J=NROW,1,-1
	DO  1  I=NDIM,1,-1
1	F2(I,J,K)=F1(I,J,K)*FM
	DO  11  K=1,NSLICEN
	DO  11  J=NROW+1,NROWN
	DO  11  I=1,NDIMN
11	F2(I,J,K)=0.0
	DO  12  K=1,NSLICEN
	DO  12  J=1,NROW
	DO  12  I=NDIM+1,NDIMN
12	F2(I,J,K)=0.0
	DO  13  K=NSLICE+1,NSLICEN
	DO  13  J=1,NROW
	DO  13  I=1,NDIMN
13	F2(I,J,K)=0.0
d56 3
a58 3
	DO  2  K=1,NSLICE/2
	DO  2  J=2,NROW/2
	DO  2  I=3,NDIM
d60 6
a65 3
2	F2(I,NROW-J+2,K)=0.0
	DO  23  K=1,NSLICE/2
	DO  23  I=3,NDIM
d67 8
a74 4
23	F2(I,NR21,K)=F2(I,NR21,K)/SQ2
	DO  231  J=2,NROW/2
	DO  231  I=3,NDIM
231	F2(I,NROWN-J+2,NS21)=F2(I,NROW-J+2,NS21)/SQ2
d76 3
a78 3
	DO  21  K=2,NSLICE/2
	DO  21  J=1,NROW/2
	DO  21  I=3,NDIM
d80 6
a85 3
21	F2(I,J,NSLICE-K+2)=0.0
	DO  22  J=1,NROW/2
	DO  22  I=3,NDIM
d87 8
a94 4
22	F2(I,J,NS21)=F2(I,J,NS21)/SQ2
	DO  221  K=2,NSLICE/2
	DO  221  I=3,NDIM
221	F2(I,NR21,NSLICEN-K+2)=F2(I,NR21,NSLICE-K+2)/SQ2
d96 3
a98 3
	DO  24  K=2,NSLICE/2
	DO  24  J=2,NROW/2
	DO  24  I=3,NDIM
d100 6
a105 3
24	F2(I,NROW-J+2,NSLICE-K+2)=0.0
	DO  241  J=2,NROW/2
	DO  241  I=3,NDIM
d107 5
a111 3
241	F2(I,NROW-J+2,NS21)=0.0
	DO  242  K=2,NSLICE/2
	DO  242  I=3,NDIM
d113 3
a115 1
242	F2(I,NR21,NSLICE-K+2)=0.0
d117 1
a117 1
	DO  25  I=3,NDIM
d121 2
a122 1
25	F2(I,NROWN-NROW+NR21,NSLICEN-NSLICE+NS21)=F2(I,NR21,NS21)
d126 2
a127 2
	DO  3  K=2,NSLICE/2
	DO  3  J=3,NROW
d129 4
a132 2
3 	F2(1,J,NSLICE-K+2)=0.0
	DO  31  J=3,NROW
d134 3
a136 2
31 	F2(1,J,NSLICEN-NSLICE+NS21)=F2(1,J,NS21)
	DO  4  K=1,NS21
d142 1
a142 1
	DO  4  J=3,NROW,2
d146 4
a149 2
4 	F2(NDIM+2,NROWN-(J-3)/2,K)=-F2(2,J+1,K)/FM
	DO  41  K=NS21,NSLICE
d155 1
a155 1
	DO  41  J=3,NROW,2
d159 8
a166 4
41 	F2(NDIM+2,NROWN-(J-3)/2,NSLICEN-NSLICE+K)=-F2(2,J+1,K)/FM
	DO  42  K=1,NSLICE
	DO  42  J=3,NROW
42	F2(2,J,K)=0.0
d168 1
a168 1
	DO  51  K=3,NSLICE,2
d174 2
a175 1
51	F2(2,1,K+1)=0.0
d182 1
a182 1
	DO  52  K=3,NSLICE,2
d192 2
a193 1
52	F2(2,2,K+1)=0.0
d203 1
a203 1
	DO  53  K=3,NSLICE,2
d209 2
a210 1
53	F2(1,2,K+1)=0.0
@


1.3
log
@bug in do-loop #1 fixed
@
text
@d11 1
a11 1
	CALL ERRT(2,'FP ',NE)
d175 1
a175 1
	IF (INV.EQ.0)   CALL ERRT(2,'FP ',NE)
@


1.2
log
@OK.
\.
@
text
@d27 2
a29 2
	DO  1  J=NROW,1,-1
	DO  1  K=NSLICE,1,-1
@


1.1
log
@Initial revision
@
text
@d9 1
a9 1
	CALL  F3MR(F1,NDIM,NROW,NSLICE,WORK,INV)
a13 1

d17 1
d21 2
a22 1
	D2=2.0
d24 1
a24 1
	FM=FLOAT(NDIMN*NROWN*NSLICEN)/FLOAT(NSAM*NROW*NSLICE)
d43 1
a43 1
C
d85 1
a85 1
	F2(I,NR21,NS21)=F2(I,NR21,NS21)/SQ2
d91 14
a104 2
C.
	DO  4  K=1,NSLICE/2+1
d106 10
a115 5
	F2(NDIM+1,(J+1)/2,K)=F2(2,J,K)/SQ2
	F2(NDIM+2,(J+1)/2,K)=F2(2,J+1,K)/SQ2
	F2(NDIM+1,NROWN-(J-3)/2,K)=F2(2,J,K)/SQ2
4 	F2(NDIM+2,NROWN-(J-3)/2,1)=-F2(2,J+1,K)/SQ2
	DO  41  K=NSLICE/2+1,NSLICE
d117 4
a120 4
	F2(NDIM+1,(J+1)/2,NSLICEN-NSLICE+K)=F2(2,J,K)/SQ2
	F2(NDIM+2,(J+1)/2,NSLICEN-NSLICE+K)=F2(2,J+1,K)/SQ2
	F2(NDIM+1,NROWN-(J-3)/2,NSLICEN-NSLICE+K)=F2(2,J,K)/SQ2
41 	F2(NDIM+2,NROWN-(J-3)/2,NSLICEN-NSLICE+K)=-F2(2,J+1,K)/SQ2
d124 1
a124 1
C.
d131 1
a131 1
51	F2(2,1,K+1)0.0
d134 2
a135 2
	F2(NDIM+1,1,NS21)=F2(2,1,2)/SQ2
	F2(NDIM+1,1,NSLICEN-NSLICE+NS21)=F2(2,1,2)/SQ2
d139 8
a146 8
	F2(NDIM+1,NR21,(K+1)/2)=F2(2,2,K)/SQ2
	F2(NDIM+2,NR21,(K+1)/2)=F2(2,2,K+1)/SQ2
	F2(NDIM+1,NROWN-NROW+NR21,(K+1)/2)=F2(2,2,K)/SQ2
	F2(NDIM+2,NROWN-NROW+NR21,(K+1)/2)=-F2(2,2,K+1)/SQ2
	F2(NDIM+1,NR21,NSLICEN-(K-3)/2)=F2(2,2,K)/SQ2
	F2(NDIM+2,NR21,NSLICEN-(K-3)/2)=-F2(2,2,K+1)/SQ2
	F2(NDIM+1,NROWN-NROW+NR21,NSLICEN-(K-3)/2)=F2(2,2,K)/SQ2
	F2(NDIM+2,NROWN-NROW+NR21,NSLICEN-(K-3)/2)=F2(2,2,K+1)/SQ2
d149 6
a154 6
	F2(NDIM+1,NR21,1)=F2(2,2,1)/SQ2	
	F2(NDIM+1,NROWN-NROW+NR21,1)=F2(2,2,1)/SQ2	
	F2(NDIM+1,NR21,NS21)=F2(2,2,2)/D2	
	F2(NDIM+1,NR21,NSLICEN-NSLICE+NS21)=F2(2,2,2)/D2	
	F2(NDIM+1,NROWN-NROW+NR21,NS21)=F2(2,2,2)/D2
	F2(NDIM+1,NROWN-NROW+NR21,NSLICEN-NSLICE+NS21)=F2(2,2,2)/D2
d159 4
a162 4
	F1(1,NR21,(K+1)/2)=F2(1,2,K)/SQ2
	F1(1,NR21+1,(K+1)/2)=F2(1,2,K+1)/SQ2
	F1(1,NR21,NSLICEN-(K-3)/2)=F2(1,2,K)/SQ2
	F1(1,NR21+1,NSLICEN-(K-3)/2)=F2(1,2,K+1)/SQ2
d165 4
a168 3
	F2(1,NR21,1)=F2(1,2,1)/SQ2	
	F2(1,NR21,NS21)=F2(1,2,2)/SQ2	
	F2(1,NR21,NSLICEN-NSLICE+NS21)=F2(1,2,2)/SQ2	
d174 1
a174 1
	CALL  F3MR(F2,NDIMN,NROWN,NSLICEN,WORK,INV)
@
