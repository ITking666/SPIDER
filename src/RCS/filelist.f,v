head	1.21;
access;
symbols
	healthdept_2018:1.21
	pre_getangas:1.19
	GPL2010:1.18
	pre_GPL2010:1.17
	pre_var_equation:1.17
	pre_fftwrings:1.17
	pre_opfiles:1.16
	src:1.16
	best-code:1.16
	x-named-regs:1.15
	x:1.15
	v13-00:1.15
	pre_GPL:1.14
	prec_CA:1.13
	noindx:1.8
	Bproc:1.6
	oct21:1.5;
locks; strict;
comment	@c @;


1.21
date	2018.10.03.14.34.05;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2013.05.22.15.29.16;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2011.01.03.16.27.42;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2010.06.24.13.25.36;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.23.13.22.18;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.12.22.18.25.55;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.21.06.20;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.10.14.19.08.55;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2003.07.08.17.08.12;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.08.15.32.28;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.07.08.14.44.22;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.07.19.51.56;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.16.15.48.30;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2001.04.17.19.13.39;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.19.19.49.45;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.01.03.20.16.05;	author bimal;	state Exp;
branches;
next	1.5;

1.5
date	99.08.03.13.43.27;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.07.29.20.16.02;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.07.29.19.57.12;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	99.07.22.18.33.10;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	99.07.20.20.08.11;	author leith;	state Exp;
branches;
next	;


desc
@@


1.21
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C    FILELIST.F         LONG FILENAMES         JUL 1999 ARDEAN LEITH
C                       OPENDOC PARAMETERS     DEC 2000 ARDEAN LEITH
C                       DOC FILE SLICING       APR 2001 ARDEAN LEITH
C                       INCORE OPENDOC         JUL 2003 ARDEAN LEITH
C                       KEYED ILIST            SEP 2003 ARDEAN LEITH
C                       XMIPP SELFILE          DEC 2010 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C     FILELIST(GETTEMPLATE,LUNDOC,FILPAT,NLETP,ILIST,NMAX,NUM,PROMPT,IRTFLG)
C
C     PURPOSE:      INPUTS FILE NAME TEMPLATE AND NUMBERS FOR FILE
C                   NAME LOOP.  USUALLY USED WITH FILGET.FOR
C                   I.E.  CALL FILGET(FILPAT,FILNAM,NLET,INUM,IRTFLG)
C                         
C     PARAMETERS:   GETTEMPLATE   FLAG TO INPUT TEMPLATE      (SENT)
C                   LUNDOC        DOC FILE I/O UNIT           (SENT)
C                   FILNAM        FILE NAME PATTERN           (RETURNED)
C                   NLETP         LENGTH OF FILNAM            (RETURNED)
C                   ILIST         ARRAY FOR NUMBERS           (RETURNED)
C                   NMAX          MAX. LENGTH OF ILIST        (SENT)
C                                  IF ZERO ONLY GETS FILPAT NOT ILIST
C                                  IF < ZERO GETS KEYED ILIST
C                   NUM           NUMBER OF VALUES IN ILIST   (RETURNED)
C                                   IF < ZERO, SELFILE ON LUNDOC
C                   PROMPT        PROMPT                      (SENT)
C                   IRTFLG        ERROR FLAG; 0 IS NORMAL     (RETURNED)
C
C--*********************************************************************

        SUBROUTINE FILELIST(GETTEMPLATE,LUNDOC,FILPAT,NLETP,
     &                      ILIST,NMAX,NUM,PROMPT,IRTFLG)

        IMPLICIT NONE
	INCLUDE 'CMBLOCK.INC'

        LOGICAL           :: GETTEMPLATE
	INTEGER           :: LUNDOC
   	CHARACTER(LEN=*)  :: FILPAT
	INTEGER           :: NLETP

C       ILIST IS DIMENSIONED AS (*) HERE SO NMAX=0 IS ACCEPTED
C**	INTEGER*4     ILIST(NMAX)      ! ACTUAL SIZE
	INTEGER           :: ILIST(*)
	INTEGER           :: NMAX,NUM
   	CHARACTER(LEN=*)  :: PROMPT
	INTEGER           :: IRTFLG

	CHARACTER(LEN=1)  :: NULL
        LOGICAL           :: GOTAST
	INTEGER           :: NSEL

        NULL = CHAR(0)

        IF (GETTEMPLATE) THEN
C          GET FILE NAME TEMPLATE 
           CALL FILELISTA(FILPAT,NLETP,PROMPT,LUNDOC,NSEL,IRTFLG)
           IF (IRTFLG .NE. 0 .AND. NSEL > 0) THEN
C             XMIPP SELFILE OPENED ON LUNDOC
              NUM = -NSEL     ! # OF SELECTED IMAGES IN LIST
              RETURN
           ENDIF

C          SEE IF INPUT CONTAINS A TEMPLATE
           GOTAST = (INDEX(FILPAT,'*') > 0) 
        ELSE
           GOTAST = .TRUE.
        ENDIF

        IF (GOTAST) THEN
           IF (NMAX .LT. 0) THEN
C             FILL THE NUMBERS ARRAY ALSO
              CALL FILELISTC(LUNDOC,ILIST,-NMAX,NUM,NULL,IRTFLG)

           ELSEIF (NMAX .GT. 0) THEN
C             FILL THE NUMBERS ARRAY ALSO
              CALL FILELISTB(LUNDOC,ILIST,NMAX,NUM,NULL,IRTFLG)
           ENDIF
        ENDIF

        RETURN
        END

C       ********************* FILELISTA *******************************

        SUBROUTINE FILELISTA(FILPAT,NLETP,PROMPT,LUNXM,NSEL,IRTFLG)

        IMPLICIT NONE
	INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

   	CHARACTER(LEN=*)  :: FILPAT   ! NAME PATTERN           (RET)
        INTEGER           :: NLETP    ! CHAR IN PATTERN        (RET)
   	CHARACTER(LEN=*)  :: PROMPT   ! OPTIONAL PROMPT        (SENT)
        INTEGER           :: LUNXM    ! LUN FOR SELFILE        (SENT)
        INTEGER           :: NSEL     ! # FILES IN SELFILE     (RET)
        INTEGER           :: IRTFLG   ! ERROR FLAG             (RET)

        CHARACTER(LEN=81)     :: PROMPT2
	CHARACTER(LEN=1)      :: NULL
        INTEGER               :: lnblnkn    
        INTEGER               :: NLET,LOCAST,LOCAT
        CHARACTER(LEN=MAXNAM) :: FILNAM  

        NULL    = CHAR(0)

        PROMPT2 = PROMPT
        IF (PROMPT == NULL) THEN
           PROMPT2 = 'TEMPLATE FOR FILENAMES (E.G. PIC@@****)'
        ENDIF

C       DO NOT CHANGE CASE OF THE RDPRMC INPUT
        IRTFLG = -999

C       READ IN FILE NAME TEMPLATE
        NLET = lnblnkn(PROMPT2)
        CALL RDPRMC(FILPAT,NLETP,.TRUE.,PROMPT2(:NLET),NULL,IRTFLG)
        IF (IRTFLG == -1) RETURN

        LOCAST = INDEX(FILPAT(1:NLETP),'*')    
        LOCAT  = INDEX(FILPAT(1:NLETP),'@@')    

        IF (LOCAST == 0 .AND. LOCAT == 0) THEN
C          CHECK FOR XMIPP SELFILE
           CALL OPENXMSELFILE(FILPAT(:NLETP),LUNXM,
     &                        FILNAM,NLET,NSEL,IRTFLG)

        ELSEIF (NLETP == 3 .AND. 
     &          FILPAT(NLETP:NLETP) .NE. '*' .AND.
     &          FILPAT(1:1) .NE. '_') THEN
C          MAKE NEW STYLE TEMPLATE
           WRITE(NOUT,*) ' *** POSSIBLE: ARCHAIC 3 CHAR. TEMPLATE? ',
     &                    ' NO LONGER SUPPORTED.'
           WRITE(NOUT,*) ' IF THIS IS 3 CHAR. TEMPLATE, APPEND ***'
        ENDIF

        FILPAT(NLETP+1:NLETP+1) = NULL

        RETURN
        END

C       ********************* FILELISTB *******************************

        SUBROUTINE FILELISTB(LUNDOCT,ILIST,NMAX,NUM,PROMPT,IRTFLG)

	INCLUDE 'CMBLOCK.INC'
	INCLUDE 'CMLIMIT.INC'

   	CHARACTER(LEN=*) ::      PROMPT
        CHARACTER(LEN=MAXNAM) :: FILLIST,PROMPT2
	CHARACTER(LEN=1) ::      NULL
        LOGICAL      ::          ISCHAR,ISFILENAME,NEWFILE
        REAL, DIMENSION(2) ::    PLIST

C       ILIST IS DIMENSIONED AS (1) HERE SO NMAX=0 IS ACCEPTED
C**	INTEGER*4     ILIST(NMAX)      ! ACTUAL SIZE
	INTEGER, DIMENSION(*) :: ILIST

        NULL = CHAR(0)
        
        PROMPT2 = PROMPT
        IF (PROMPT(1:1) == NULL) THEN
           PROMPT2 = 'FILE NUMBERS OR SELECTION DOC. FILE NAME' 
        ENDIF
        LENPROM = LNBLNKN(PROMPT2)

C       FILL THE NUMBERS ARRAY 

C       GET SELECTION FILENAME OR FILE NUMBER LIST
C       IRTFLG OF -999 SAYS DO NOT UPPERCASE RDPRMC INPUT
        IRTFLG = -999
        CALL RDPRMC(FILLIST,NLET,.TRUE.,PROMPT2(:LENPROM),NULL,IRTFLG)

        IF (ISFILENAME(FILLIST,NLET)) THEN
C          FILLIST IS A SELECTION DOC FILE NAME

C          CHECK FOR SLICING (X?? X?? SEPARATED FROM NAME)
           LOCB = INDEX(FILLIST(1:NLET),' ')
           
           IF (LOCB .LE. 0) THEN
C             FILL THE NUMBERS ARRAY (ILIST) FROM SELECTION FILE 
              FILLIST(NLET+1:) = NULL
              CALL OPENDOC(FILLIST,.TRUE.,NLET,LUNDOCT,LUNDOC,.FALSE.,
     &                     ' ', .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
              IF (IRTFLG .NE. 0) RETURN

              CALL LUNDOCREDSEL(LUNDOC,ILIST,NMAX,NUM,MAXGOTY,IRTFLG)
             
           ELSE
C             PROBABLY WANT A SLICE FROM DOC FILE
C             TILDE SIGN AT BEGINNING OF PROMPT OVERRIDES INPUT IN RDPRAI
              PROMPT2 = '~' // FILLIST(LOCB:)

C             GET LIST OF NUMBERS CONTAINED IN SLICE (MAY BE X??) 
C             MAXIMUM VALUE PLACED IN ILIST IS 9999999 CURRENTLY
              NUM = 2
              CALL RDPRAI(ILIST,NMAX,NUM,0,9999999,PROMPT2(1:NLET+1),
     &                    NULL,IRTFLG)

C             OPEN DOC FILE
              NLET   = LOCB - 1
              CALL OPENDOC(FILLIST(1:NLET),.TRUE.,NLET,LUNDOCT,LUNDOC,
     &              .FALSE.,' ', .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
              IF (IRTFLG .NE. 0) RETURN

C             RETRIEVE REGISTER 1 VALUES FROM SPECIFIED KEYS 
              IGOY  = ILIST(1)
              IENDY = ILIST(2)
CCC           CALL LUNDOCREDSLI(LUNDOC,ILIST,NMAX,.TRUE.,1,IGO,IEND,NUM,IRTFLG)
              CALL LUNDOCREDSLC(LUNDOC,.TRUE.,ILIST,DUM,1,NMAX,
     &              .FALSE.,.FALSE.,1,1, IGOY,IENDY, NUM,MAXGOTY,IRTFLG)
           ENDIF
           CLOSE(LUNDOCT)             
        ELSE

C          TILDE SIGN AT BEGINNING OF PROMPT OVERRIDES INPUT IN RDPRAI
           PROMPT2 = '~' // FILLIST

C          SET NUM TO NMAX FOR NUMBER OF FILES ALLOWED
           NUM = NMAX

C          MAXIMUM VALUE PLACED IN ILIST IS 9999999 CURRENTLY
           CALL RDPRAI(ILIST,NMAX,NUM,0,9999999,PROMPT2(1:NLET+1),
     &                 NULL,IRTFLG)
        ENDIF

        RETURN
        END

C       ********************* FILELISTC *******************************

        SUBROUTINE FILELISTC(LUNDOCT,ILIST,NMAX,NUM,PROMPT,IRTFLG)

	INCLUDE 'CMBLOCK.INC'
	INCLUDE 'CMLIMIT.INC'

   	CHARACTER(LEN=*) ::      PROMPT
        CHARACTER(LEN=MAXNAM) :: FILLIST,PROMPT2
	CHARACTER(LEN=1) ::      NULL
        LOGICAL      ::          ISCHAR,ISFILENAME,NEWFILE
        REAL, DIMENSION(2) ::    PLIST

C       ILIST IS DIMENSIONED AS (1) HERE SO NMAX=0 IS ACCEPTED
C**	INTEGER*4     ILIST(NMAX)      ! ACTUAL SIZE
	INTEGER, DIMENSION(*) :: ILIST
	INTEGER, ALLOCATABLE,DIMENSION(:) :: ILISTT

        NULL = CHAR(0)
        
        PROMPT2 = PROMPT
        IF (PROMPT(1:1) == NULL) THEN
           PROMPT2 = 'FILE NUMBERS OR SELECTION DOC. FILE NAME' 
        ENDIF
        LENPROM = LNBLNKN(PROMPT2)

C       FILL THE NUMBERS ARRAY 

C       GET SELECTION FILENAME OR FILE NUMBER LIST
C       IRTFLG OF -999 SAYS DO NOT UPPERCASE RDPRMC INPUT
        IRTFLG = -999
        CALL RDPRMC(FILLIST,NLET,.TRUE.,PROMPT2(:LENPROM),NULL,IRTFLG)

        IF (ISFILENAME(FILLIST,NLET)) THEN
C          FILLIST IS A SELECTION DOC FILE NAME

C          CHECK FOR SLICING (X?? X?? SEPARATED FROM NAME)
           LOCB = INDEX(FILLIST(1:NLET),' ')
           
           IF (LOCB .LE. 0) THEN
C             FILL THE NUMBERS ARRAY (ILIST) FROM SELECTION FILE 
              FILLIST(NLET+1:) = NULL
              CALL OPENDOC(FILLIST,.TRUE.,NLET,LUNDOCT,LUNDOC,.FALSE.,
     &                     ' ', .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
              IF (IRTFLG .NE. 0) RETURN

              CALL LUNDOCREDSLC(LUNDOC,.TRUE.,ILIST,DUM,1,NMAX,
     &             .TRUE.,.FALSE. ,1,1, 1,MAXY,NUM,MAXGOTY,IRTFLG)

           ELSE
C             PROBABLY WANT A SLICE FROM DOC FILE
C             TILDE SIGN AT BEGINNING OF PROMPT OVERRIDES INPUT IN RDPRAI
              PROMPT2 = '~' // FILLIST(LOCB:)

C             GET LIST OF NUMBERS CONTAINED IN SLICE (MAY BE X??) 
C             MAXIMUM VALUE PLACED IN ILIST IS 9999999 CURRENTLY
              NUM = 2
              CALL RDPRAI(ILIST,NMAX,NUM,0,9999999,PROMPT2(1:NLET+1),
     &                    NULL,IRTFLG)

C             OPEN DOC FILE
              NLET   = LOCB - 1
              CALL OPENDOC(FILLIST(1:NLET),.TRUE.,NLET,LUNDOCT,LUNDOC,
     &              .FALSE.,' ', .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
              IF (IRTFLG .NE. 0) RETURN

C             RETRIEVE REGISTER 1 VALUES FROM SPECIFIED KEYS 
              IGOY  = ILIST(1)
              IENDY = ILIST(2)
CCC           CALL LUNDOCREDSLI(LUNDOC,ILIST,NMAX,.TRUE.,1,IGO,IEND,NUM,IRTFLG)
              CALL LUNDOCREDSLC(LUNDOC,.TRUE.,ILIST,DUM,1,NMAX,
     &              .TRUE.,.FALSE.,1,1, IGOY,IENDY, NUM,MAXGOTY,IRTFLG)
           ENDIF
           CLOSE(LUNDOCT)             
        ELSE

C          TILDE SIGN AT BEGINNING OF PROMPT OVERRIDES INPUT IN RDPRAI
           PROMPT2 = '~' // FILLIST

C          SET NUM TO NMAX FOR NUMBER OF FILES ALLOWED
           NUM = NMAX

           ALLOCATE (ILISTT(NUM),STAT=IRTFLG)
           IF (IRTFLG .NE. 0) THEN
              CALL ERRT(46,'FILELISTC, ILISTT....',NUM)
              RETURN
           ENDIF

C          MAXIMUM VALUE PLACED IN ILIST IS 9999999 CURRENTLY
           CALL RDPRAI(ILISTT,NMAX,NUM,0,9999999,PROMPT2(1:NLET+1),
     &                 NULL,IRTFLG)

           ILIST(1:NMAX) = 0
           DO I = 1,NUM
              IT = ILISTT(I)
              IF (IT .LT. NMAX) THEN
                 ILIST(IT) = NMAX
              ENDIF
           ENDDO  
        ENDIF

        RETURN
        END


C     ********************* ISFILENAME  *******************************

      LOGICAL FUNCTION ISFILENAME(STRING,NLET)

C     CRITERION IS THAT A FILENAME MUST ALWAYS HAVE A ALPHABETIC
C     CHARACTER WHICH IS NOT "X" OR "x", AND WHICH IS NOT 
C     WITHIN {}'s OR []'s.

      CHARACTER(LEN=*) :: STRING  
      LOGICAL          :: INBRAK,ISCHAR,INSQBRAK
      CHARACTER(LEN=1) :: CTEMP

      ISFILENAME = .FALSE.
      INBRAK     = .FALSE.
      INSQBRAK   = .FALSE.

      DO I=1,NLET
         CTEMP = STRING(I:I)

         IF (ISCHAR(CTEMP)) THEN
C           CHAR. (A..Z) SAYS STRING MAY BE A FILE NAME ?
            IF (.NOT. INBRAK .AND. .NOT. INSQBRAK) THEN
               IF (CTEMP .NE. 'X' .AND. CTEMP .NE. 'x') THEN
                  ISFILENAME = .TRUE.
                  RETURN
               ENDIF
            ENDIF
         ELSE
            IF (CTEMP == '{') INBRAK   = .TRUE.
            IF (CTEMP == '[') INSQBRAK = .TRUE.

            IF (CTEMP == '}') INBRAK   = .FALSE.
            IF (CTEMP == ']') INSQBRAK = .FALSE.
         ENDIF
      ENDDO

      RETURN
      END



@


1.20
log
@removed: ENTER
@
text
@d17 1
a17 1
C=* Email: spider@@wadsworth.org                                        *
@


1.19
log
@xmipp selfile support, error messages
@
text
@d64 1
d131 2
a132 2
        IF (PROMPT .EQ. NULL) THEN
           PROMPT2 = 'ENTER TEMPLATE FOR FILENAMES (E.G. PIC@@****)'
d141 1
a141 1
        IF (IRTFLG .EQ. -1) RETURN
d146 1
a146 1
        IF (LOCAST .EQ. 0 .AND. LOCAT .EQ. 0) THEN
d151 1
a151 1
        ELSEIF (NLETP .EQ. 3 .AND. 
d185 2
a186 2
        IF (PROMPT(1:1) .EQ. NULL) THEN
           PROMPT2 = 'ENTER FILE NUMBERS OR SELECTION DOC. FILE NAME' 
d274 2
a275 2
        IF (PROMPT(1:1) .EQ. NULL) THEN
           PROMPT2 = 'ENTER FILE NUMBERS OR SELECTION DOC. FILE NAME' 
d386 2
a387 2
            IF (CTEMP .EQ. '{') INBRAK   = .TRUE.
            IF (CTEMP .EQ. '[') INSQBRAK = .TRUE.
d389 2
a390 2
            IF (CTEMP .EQ. '}') INBRAK   = .FALSE.
            IF (CTEMP .EQ. ']') INSQBRAK = .FALSE.
@


1.18
log
@GPL_2010
@
text
@d7 3
a9 2
C                       INCORE OPENDOC           JUL 03 ARDEAN LEITH
C                       KEYED ILIST              SEP 03 ARDEAN LEITH
d48 1
d57 1
d60 4
a63 5
   	CHARACTER(LEN=*) ::  FILPAT,PROMPT
        CHARACTER(LEN=81) :: PROMPT2
	CHARACTER(LEN=1) ::  NULL
        LOGICAL   ::         GETTEMPLATE

d66 8
a73 1
	INTEGER, DIMENSION(*) :: ILIST
d79 11
a89 1
           CALL FILELISTA(FILPAT,NLETP,PROMPT,IRTFLG)
d92 9
a100 7
        IF (NMAX .LT. 0) THEN
C          FILL THE NUMBERS ARRAY ALSO
           CALL FILELISTC(LUNDOC,ILIST,-NMAX,NUM,NULL,IRTFLG)

        ELSEIF (NMAX .GT. 0) THEN
C          FILL THE NUMBERS ARRAY ALSO
           CALL FILELISTB(LUNDOC,ILIST,NMAX,NUM,NULL,IRTFLG)
d108 1
a108 1
        SUBROUTINE FILELISTA(FILPAT,NLETP,PROMPT,IRTFLG)
d110 1
d112 1
d114 12
a125 3
   	CHARACTER(LEN=*) ::  FILPAT,PROMPT
        CHARACTER(LEN=81) :: PROMPT2
	CHARACTER(LEN=1) ::  NULL
d127 1
a127 1
        NULL = CHAR(0)
d130 2
a131 2
        IF (PROMPT(1:1) .EQ. NULL) THEN
           PROMPT2 = 'ENTER TEMPLATE FOR FILENAMES (E.G. PIC****)'
d138 2
a139 1
        CALL RDPRMC(FILPAT,NLETP,.TRUE.,PROMPT,NULL,IRTFLG)
d142 15
a156 4
        IF (NLETP .EQ. 3 .AND. FILPAT(NLETP:NLETP) .NE. '*') THEN
C           MAKE NEW STYLE TEMPLATE
            FILPAT(4:7) = '***'
            NLETP = 6
d357 1
a357 2


d395 3
@


1.17
log
@errt file wrong
@
text
@a10 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d12 5
a16 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d18 1
a18 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d23 1
a23 1
C=* This program is distributed in the hope that it will be useful,    *
d25 1
a25 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a26 1
C=*                                                                    *
d28 1
a28 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.16
log
@ for []
@
text
@d296 1
a296 1
              CALL ERRT(46,'RDPRANC, ILISTT....',NUM)
@


1.15
log
@GPL License fixed
@
text
@d323 2
a324 1
C     CHARACTER WHICH IS NOT "X" OR "x", AND WHICH IS NOT WITHIN {}'S.
d326 3
a328 3
      CHARACTER *(*) STRING  
      LOGICAL        INBRAK,ISCHAR
      CHARACTER      CTEMP
d332 1
d339 1
a339 1
            IF (.NOT. INBRAK) THEN
d346 5
a350 2
            IF (CTEMP .EQ. '{') INBRAK = .TRUE.
            IF (CTEMP .EQ. '}') INBRAK = .FALSE.
@


1.14
log
@new capability added
@
text
@d2 1
a2 1
C++*************************************************************************
d11 23
a33 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
d54 1
a54 1
C--*************************************************************************
@


1.13
log
@*** empty log message ***
@
text
@d8 1
d32 1
d60 1
a60 1
        IF (NMAX .GT. 0) THEN
d62 4
d194 106
@


1.12
log
@lundocgetsel parameters changed
@
text
@d170 1
a170 1
     &              .FALSE.,.FALSE.,1,1, IGOY,IENDY, NUM,MAXGOTY.IRTFLG)
@


1.11
log
@opendoc incore parameter
@
text
@d146 1
a146 1
              CALL LUNDOCREDSEL(LUNDOC,ILIST,NMAX,NUM,.TRUE.,IRTFLG)
@


1.10
log
@incore opendoc
@
text
@d142 2
a143 3
              LUNDOC = LUNDOCT
              CALL OPENDOC(FILLIST,.TRUE.,NLET,LUNDOC,.FALSE.,' ',
     &                    .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
d161 2
a162 3
              LUNDOC = LUNDOCT
              CALL OPENDOC(FILLIST(1:NLET),.TRUE.,NLET,LUNDOC,.FALSE.,
     &                     ' ', .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
d166 5
a170 4
              IGO  = ILIST(1)
              IEND = ILIST(2)
              CALL LUNDOCREDSLI(LUNDOC,ILIST,NMAX,.TRUE.,1,IGO,IEND,
     &                          NUM,IRTFLG)
@


1.9
log
@* in ilist dim.
@
text
@d4 4
a7 4
C    FILELIST.F         GETS INPUT WITH PROMPT TO CREATE SEQUENTIAL 
C                       LONG FILENAMES ARDEAN LEITH JULY 1999
C                       OPENDOC PARAMETERS  DEC 2000 ARDEAN LEITH
C                       DOC FILE SLICING    APR 2001 ArDean Leith
d20 3
a22 3
C     PURPOSE:          INPUTS FILE NAME TEMPLATE AND NUMBERS FOR FILE
C                       NAME LOOP.  USUALLY USED WITH FILGET.FOR
C                       I.E.  CALL FILGET(FILPAT,FILNAM,NLET,INUM,IRTFLG)
d103 1
a103 1
        SUBROUTINE FILELISTB(LUNDOC,ILIST,NMAX,NUM,PROMPT,IRTFLG)
d119 1
a119 1

d142 1
d161 2
a162 1
              NLET = LOCB - 1
d173 1
a173 1
           CLOSE(LUNDOC)             
@


1.8
log
@added doc file slicing
@
text
@d47 1
a47 1
C       ILIST IS DIMENSIONED AS (1) HERE SO NMAX=0 IS ACCEPTED
d49 1
a49 1
	INTEGER, DIMENSION(1) :: ILIST
d116 1
a116 1
	INTEGER, DIMENSION(1) :: ILIST
@


1.7
log
@opendoc has prompt parameter now
@
text
@d7 1
d11 1
a11 1
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
d42 4
a45 3
   	CHARACTER *(*)FILPAT,PROMPT
	CHARACTER *1  NULL
        LOGICAL       GETTEMPLATE
d49 1
a49 1
	INTEGER*4     ILIST(1)
d56 1
a56 1
       ENDIF
d72 3
a74 3
   	CHARACTER *(*)FILPAT,PROMPT
        CHARACTER *81 PROMPT2
	CHARACTER *1  NULL
d106 1
d108 5
a112 4
   	CHARACTER *(*)PROMPT
        CHARACTER *81 FILLIST,PROMPT2
	CHARACTER *1  NULL
        LOGICAL       ISCHAR,ISFILENAME
d116 1
a116 1
	INTEGER*4     ILIST(1)
a132 4
C       TILDE SIGN AT BEGINNING OF PROMPT OVERRIDES INPUT IN FILERD 
C       AND RDPRAI
        PROMPT2 = '~' // FILLIST

d134 1
a134 5
C          FILLIST IS A SELECTION DOC FILE NAME, CALL FILERD TO 
C          SUBSTITUTE FOR SPECIAL CHARACTERS IN FILLIST

           CALL FILERD(FILLIST,NLET,NULL,PROMPT2(1:NLET+1),IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
d136 35
a170 7
           FILLIST(NLET+1:) = NULL
           CALL OPENDOC(FILLIST,.TRUE.,NLET,LUNDOC,.FALSE.,' ',
     &                 .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

C          FILL THE NUMBERS ARRAY (ILIST) FROM SELECTION FILE 
           CALL LUNDOCREDSEL(LUNDOC,ILIST,NMAX,NUM,.TRUE.,IRTFLG)
a171 1
        
d174 3
d180 1
a180 1
C          MAXIMUM VALUE PLACED IN ILIST IS 9999999 NOW
d187 1
@


1.6
log
@changed comments
@
text
@d6 1
d141 2
a142 2
           CALL OPENDOC(FILLIST,.TRUE.,NLET,LUNDOC,
     &                 .FALSE.,.TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
d147 1
a147 1
           CLOSE (LUNDOC)             
@


1.5
log
@handles 1-x20 noew
@
text
@d16 1
a16 1
C     FILELIST(GETTEMPLATE,FILPAT,NLET,ILIST,NMAX,NUM,PROMPT,IRTFLG)
@


1.4
log
@bad prompt2 nlet
@
text
@d107 1
a107 1
        LOGICAL       ISCHAR
d120 1
d124 3
a126 16
        CALL FILERD(FILLIST,NLET,NULL,PROMPT2(:LENPROM),IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        DO I=1,NLET
           IF (ISCHAR(FILLIST(I:I))) THEN
C             CHAR. (A..Z) SAYS FILLIST IS SELECTION DOC FILE NAME
              FILLIST(NLET+1:) = NULL
              CALL OPENDOC(FILLIST,.TRUE.,NLET,LUNDOC,
     &                  .FALSE.,.TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
              IF (IRTFLG .NE. 0) RETURN

              CALL LUNDOCREDSEL(LUNDOC,ILIST,NMAX,NUM,.TRUE.,IRTFLG)
              CLOSE (LUNDOC)             
              RETURN
           ENDIF
        ENDDO
d128 2
a129 1
C       TILDE SIGN AT BEGINNING OF PROMPT OVERRIDES INPUT IN RDPRAI
d132 25
a156 2
C       SET NUM TO NMAX FOR NUMBER OF FILES ALLOWED
        NUM = NMAX
a157 4
C       MAXIMUM VALUE PLACED IN ILIST IS 9999999 NOW
        CALL RDPRAI(ILIST,NMAX,NUM,0,9999999,PROMPT2(1:NLET+1),
     &              NULL,IRTFLG)

d162 28
d191 2
@


1.3
log
@used filerd to get name of selctionfile / or nuber list
@
text
@d147 2
a148 1
        CALL RDPRAI(ILIST,NMAX,NUM,0,9999999,PROMPT2,NULL,IRTFLG)
@


1.2
log
@prompt length set
@
text
@d122 2
a123 4

C       DO NOT CHANGE CASE OF THE RDPRMC INPUT
        IRTFLG = -999
        CALL RDPRMC(FILLIST,NLET,.TRUE.,PROMPT2(:LENPROM),NULL,IRTFLG)
@


1.1
log
@Initial revision
@
text
@d117 1
a117 1
           PROMPT2 = 'ENTER FILE NUMBERS OR SELECTION DOC. FILE NAME'
d119 1
d125 1
a125 1
        CALL RDPRMC(FILLIST,NLET,.TRUE.,PROMPT2,NULL,IRTFLG)
d142 1
a142 1
C       MINUS SIGN AT BEGGINNING OF PROMPT OVERRIDES INPUT IN RDPRAI
@
