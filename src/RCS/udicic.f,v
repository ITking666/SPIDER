head	1.6;
access;
symbols
	best-code:1.6
	x-named-regs:1.6
	x:1.6
	v13-00:1.5
	pre_GPL:1.3
	prec_CA:1.2;
locks; strict;
comment	@c @;


1.6
date	2005.11.29.20.17.26;	author leith;	state dead;
branches;
next	1.5;

1.5
date	2005.10.17.20.19.59;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.17.18.12.45;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.10.16.46.43;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.08.17.42.06;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.08.17.01.20;	author leith;	state Exp;
branches;
next	;


desc
@@


1.6
log
@copy of udocic.f (should not be here)
@
text
@

C++*********************************************************************
C
C UDOCIC.F      USED LUNDOC                         JUNE 99 ARDEAN LEITH
C               REMOVED ALLOCIT                     MAY  00 ARDEAN LEITH
C               LUNDOCREDALL PARAMETERS CHANGED     DEC  00 ARDEAN LEITH
C               ADDED 'SD IC' CAPABILITY            JUNE 03 ARDEAN LEITH
C **********************************************************************
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
C=*                                                                    *
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* This program is distributed in the hope that it will be useful,    *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
C=* General Public License for more details.                           *
C=*                                                                    *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
C=*                                                                    *
C **********************************************************************
C
C   UDOCIC(DOCNAM,NDOC,ENDIT)
C
C   PURPOSE:  'UD IC' OPERATION DUPLICATES FUNCTION OF 'UD'
C             BUT IT USES IN-CORE STORAGE, WHICH MAKES SUBSEQUENT READ 
C             ACCESSES QUICK.  IT SOLICITS DOC FILE NAME.  THE
C             REGISTERS ARE SPECIFED ON THE COMMAND LINE
C   
C   PARAMETERS:  DOCNAM    FILE NAME WITH EXTENSION              (SENT)
C                NDOC      LUN FOR DOC FILE                      (SENT)
C
C   USAGE:    'UD IC,11,X11' - FIRST ACCESS: READ DOC. FILE INTO CORE
C             'UD IC,11,X11' - SUBSEQUENT ACCESSES: READ FROM CORE
C             'UD ICE'       - TERMINATE CORE ACCESS OF CURRENT DOCUMENT
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************


	SUBROUTINE UDOCIC(DOCNAM,NDOC,ENDIT)

        USE DOCIC_INFO

        INCLUDE 'CMBLOCK.INC' 

        CHARACTER(LEN=*)            :: DOCNAM
        REAL, DIMENSION(:), POINTER :: IPQ

C       MAXIMUM NUMBER OF REGISTERS RETURNED
        PARAMETER      (MAXLIST=100)
        COMMON         PLIST(MAXLIST),ILIST(MAXLIST)

        LOGICAL          :: FIRST,ENDIT

C       NEEDED FOR FUTURE CALLS
        SAVE           NICLAST


C       SEE IF THIS FILE IS ALREADY OPEN IN-CORE
        CALL ISDOCINCORE(DOCNAM,NICLAST,NIC,MT,IRTFLG)

	IF (ENDIT) THEN
C          WANT TO CEASE USING A DOC FILE -----------------------------

C          DETERMINE WHICH OF THE OLD NAMES NEEDS TO BE OBLITERATED

           IF (NIC .GT. 0) THEN
C              CHANGE OLDNAM SO IT CANNOT MATCH ANY FILE NAME.
	       OLDNAM(NIC)  = '*' 

C              DEALLOCATE THE CORRESPONDING RUNTIME ARRAY
               IPQ => LOCDOC(NIC)%IPT
               DEALLOCATE(IPQ)
               NULLIFY(LOCDOC(NIC)%IPT)
           ELSE

              WRITE(NOUT,91) DOCNAM
91            FORMAT('  DOCUMENT FILE NOT IN-CORE: ',A)
           ENDIF

           IGOT = 0
           DO I = 1,MAXICDOCS 
              IF (OLDNAM(I) .NE. '*') THEN
                 IGOT = IGOT + 1
                 IF (IGOT .EQ. 1) 
     &              WRITE(NOUT,*)' DOCUMENT FILES LEFT IN-CORE:'
                 ILEN = LNBLNK(OLDNAM(I))
                 WRITE(NOUT,92) OLDNAM(I)(1:ILEN)
92               FORMAT(5X,A)
              ENDIF
           ENDDO
           IF (IGOT .LE. 0)  
     &          WRITE(NOUT,*)' NO DOCUMENT FILES LEFT IN-CORE'
           WRITE(NOUT,*) ' '
           RETURN
	ENDIF	


C       WANT TO GET REGISTERS FROM A DOC FILE ------------------------

        IF (MT .EQ. 0) THEN
C          ERROR -- NAME NOT FOUND, AND NO SPACE LEFT IN DOC NAME LIST
           WRITE(NOUT,93) 
93         FORMAT(' *** NO SPACE AVAILABLE, ',
     &            ' CLOSE ANOTHER INCORE FILE FIRST')
           CALL ERRT(100,'UDOCIC',IDUM)
           RETURN
        
        ELSEIF (MT .GT. 0) THEN
C          NAME NOT FOUND, SO FILE IS NOT YET IN-CORE, SPACE AVAILABLE
           FIRST  = .TRUE.
           NIC     = MT
C          DELAY SETTING OLDNAM UNTIL EVERYTHING IS OK ON RETRIEVAL
           OLDNAM(NIC) = '*'
        ENDIF

C       DOCUMENT NAME FOUND OR BUFFER SPACE AVAILABLE ----------------
C       PROCEED TO PARSE REGISTER LINE, CHECK FOR ',' OR 'X'

        IX = INDEX(FCHAR,',')
        IF (IX .LE. 0) THEN
           CALL ERRT(101,'NO REGISTERS ON COMMAND LINE',NE)
           RETURN
        ENDIF

        CALL LUNDOCPARSE(FCHAR(IX:),COMOUT,IKEY,ILIST,MAXLIST,
     &                   NLIST,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       REGISTER LIST OK 
        IF (IKEY .LT. 0) THEN
C          DESIRE A COMMENTED KEY. 
           CALL ERRT(101,'USE <UD> TO RETRIEVE COMMENT KEYS',NE)
           RETURN

        ELSEIF (NLIST .GT. MAXLIST) THEN
           MAXLISTT = MAXLIST
           CALL ERRT(102,'MAX. NUMBER FOR IN-CORE REGISTERS',MAXLISTT)
           RETURN

        ELSEIF (FIRST) THEN
C          SET ARRAY DIMENSIONS, EACH ARRAY LINE INCLUDES A KEY REGISTER 
           MAXX = NLIST + 1

C          OPEN THE PHYSICAL DOC FILE USING EXTENSION FROM DOCNAM
           CALL OPENDOC(DOCNAM,.FALSE.,NLET,NDOC,.FALSE.,' ',
     &               .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLGT)
           IF (IRTFLGT .NE. 0) RETURN

C          FIND MAXY BY READING FROM DISK DOC FILE
           CALL LUNDOCINFO(NDOC,MAXY,MAXXDUM,KEYUSED,.TRUE.,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

C          ALLOCATE THIS INCORE ARRAY (ONLY NEED MAXY ROWS)
           MEMWANT = MAXX * MAXY
           ALLOCATE(IPQ(MEMWANT),STAT=IRTFLG)
           IF (IRTFLG .NE. 0) THEN
              CALL ERRT(46,'IPQ',NE)
              CLOSE(NDOC)
              RETURN
           ENDIF

C          KEEP ARRAY POINTER IN LOCDOC
           LOCDOC(NIC)%IPT => IPQ

C          RECOVER DOC FILE CONTENTS AND PUT THEM IN IPQ
           CALL LUNDOCREDALL(NDOC,IPQ(1),MAXX,MAXY,.TRUE.,NGOT,IRTFLG)
           CLOSE(NDOC)
           IF (IRTFLG .NE. 0) RETURN

        ELSE
C          GET ARRAY SIZE SAVED WHEN FILLED
           MAXX = NUMREGS(NIC)
           MAXY = NUMKEYS(NIC)
  	   IF (NLIST .GT. (MAXX - 1)) THEN
              WRITE(NOUT,1447) NLIST -1
1447          FORMAT('  *** NUMBER OF REGISTERS REQUESTED: ',I2,
     &               ' NUMBER AVAILABLE IN-CORE: ',I2,/)
              NLIST = MAXX - 1
              CALL ERRT(100,'UDOCIC',NE)
           ENDIF

C          RECOVER DOC FILE INFO FROM INCORE IMAGE 
           IPQ => LOCDOC(NIC)%IPT

        ENDIF

C       READ IKEY CONTENTS FROM IPQ AND PLACE IN PLIST
        CALL LUNDOCGETKEY(NDOC,IPQ(1),MAXX,MAXY,IKEY,PLIST,
     &                    .TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

C       SET REGISTER CONTENTS FROM PLIST --------------------------
        DO  K=1,NLIST
           CALL REG_SET(ILIST(K), PLIST(K) ,.TRUE.,IRTFLG)
        ENDDO

        IF (FIRST) THEN
C          DELAY SETTING NAME UNTIL EVERYTHING IS OK ON RETRIEVAL
           OLDNAM(NIC)  = DOCNAM
           NUMKEYS(NIC) = MAXY
           NUMREGS(NIC) = NLIST + 1
        ENDIF           
        NICLAST = NIC

        IF (.NOT. SILENT) WRITE(NOUT,*) ' '
	RETURN
	END

@


1.5
log
@GPL License fixed
@
text
@@


1.4
log
@HRI GPL License used
@
text
@a9 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d13 1
a13 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a32 6

C * COPYRIGHT (C)1985, 2003. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.3
log
@formating of messages
@
text
@d11 24
@


1.2
log
@format number 91 inuse
@
text
@d74 1
a74 1
91            FORMAT(' DOCUMENT FILE NOT IN-CORE: ',A)
d173 1
a173 1
1447          FORMAT(' *** NUMBER OF REGISTERS REQUESTED: ',I2,
@


1.1
log
@Initial revision
@
text
@a34 1
C*************************** UDOCIC ******************************
d49 1
a49 1
        LOGICAL          :: FIRST,ENDIF
d99 2
a100 2
           WRITE(NOUT,91) 
91         FORMAT(' *** NO SPACE AVAILABLE, ',
d104 1
a104 2
        ENDIF

@
