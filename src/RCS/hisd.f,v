head	1.19;
access;
symbols
	pre_mrcs:1.19
	healthdept_2018:1.19
	pre_getangas:1.15
	GPL2010:1.15
	pre_GPL2010:1.14
	pre_var_equation:1.14
	pre_fftwrings:1.14
	pre_opfiles:1.14
	src:1.14
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.11
	prec_CA:1.11
	noindx:1.10
	Bproc:1.9
	oct21:1.7
	last77:1.7;
locks; strict;
comment	@c @;


1.19
date	2018.10.03.14.34.08;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2015.06.03.15.02.49;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2014.02.28.13.09.25;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2014.02.27.17.20.31;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.24.13.25.54;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2006.10.02.19.05.15;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.20.52.00;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.18.42.24;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.07.18.16.30.15;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.11.14.08.45;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.11.10.18.40.13;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	99.11.10.16.51.30;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	99.03.18.20.59.32;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.02.11.16.15.00;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.09.03.18.30.39;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	98.08.18.19.54.03;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	98.08.18.12.23.19;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	98.08.10.19.11.08;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	98.03.09.16.58.22;	author pawel;	state Exp;
branches;
next	;


desc
@HD
@


1.19
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C HISD.F
C          ADDED NBINS                           OCT 2006 ARDEAN LEITH
C          'HIS D                                OCT 2006 ARDEAN LEITH
C          'HIS' ONLY NOW                        FEB 2014 ARDEAN LEITH
C          WANTDOC DECLARED                      JUN 2015 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2015  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    HISD(NDOC)
C
C    PURPOSE:    COMPUTE HISTOGRAM FROM ONE COLUMN OF
C                DOCUMENT FILE, DISPLAY HISTOGRAM ON 
C                LINE PRINTER OR IN DOC FILE.
C
C    NOTES:      FCHAR = HD      - FULL  HISTOGRAM TO RESULTS FILE
C    NOTES:      FCHAR = HD D    - FULL  HISTOGRAM TO DOC FILE
C    NOTES:      FCHAR = HD RD   - RANGE HISTOGRAM TO DOC FILE
C    NOTES:      FCHAR = HD R    - RANGE HISTOGRAM TO RESULTS FILE
C
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

	SUBROUTINE HISD(LUNDOC)

	INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'
        INCLUDE 'F90ALLOC.INC'

        REAL, POINTER         :: PBUF(:,:)
        CHARACTER(LEN=MAXNAM) :: DOCFIL
        CHARACTER(LEN=MAXNAM) :: COMMENT
        REAL, ALLOCATABLE     :: FREQ(:)
	REAL                  :: PLIST(4)
        LOGICAL               :: ADDEXT,ASKNAM,ISOLD,APPEND
        LOGICAL               :: MESSAGE,NEWFILE
        LOGICAL               :: WANTDOC

	IF (FCHAR(4:4) == 'D' ) THEN
	  WRITE(NOUT,*) " OBSOLETE OPERATION, USE 'HD' NOW"
        ENDIF

        MAXX = 0
        MAXY = 0
        CALL GETDOCDAT('INPUT DOCUMENT',.TRUE.,DOCFIL,NDOC,
     &                 .TRUE.,MAXX, MAXY,PBUF,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

	CALL RDPRI1S(ICOL,NOT_USED,
     &              'REGISTER (COLUMN) USED FOR HISTOGRAM',IRTFLG)

        IF (ICOL <= 0 .OR. ICOL >= MAXX) THEN
           CALL ERRT(100,'HISD',NE)
           GOTO 999
        ENDIF

        NBINS = 128
	CALL RDPRI1S(NBINS,NOT_USED,'NUMBER OF BINS',IRTFLG)
        IF (NBINS <= 0) THEN
           CALL ERRT(100,'MUST HAVE AT LEAST 1 BIN',NE)
           GOTO 999
        ENDIF

        ALLOCATE(FREQ(NBINS),STAT=IRTFLG)
        IF (IRTFLG. NE. 0) THEN 
           CALL ERRT(46,'HISD, NBINS',NBINS)
           GOTO 999
        ENDIF

C       IF ONE OF THE FCHAR LETTERS IS 'R' ASK USER FOR THE RANGE
	IF (FCHAR(4:4) == 'R' .OR. FCHAR(5:5) == 'R') THEN
	  CALL RDPRM2(HMIN,HMAX,NOT_USED,'HISTOGRAM RANGE MIN & MAX')

	ELSE
C         FIND MIN & MAX FOR HISTOGRAM BY READING DOC FILE 
	  HMAX  = -1.0E23
	  HMIN  = -HMAX

          DO IKEY = 1,MAXY
             IF (PBUF(1, IKEY) > 0) THEN
C               KEY EXISTS
                BVAL = PBUF( ICOL + 1, IKEY)
	        HMAX = MAX(HMAX,BVAL)
	        HMIN = MIN(HMIN,BVAL)
             ENDIF
          ENDDO
        ENDIF

C       ZERO THE HISTOGRAM
        FREQ = 0.0 

C       CALCULATE HISTOGRAM HERE
        HDIFF  = HMAX - HMIN
        FF     = (NBINS - 1.0) / HDIFF
        BSIZ   = 1.0 / FF
        FNUMEL = 0
        FKEYS  = 0.0
        Y      = 0.0
        HAV    = 0.0
        HAV2   = 0.0

        DO IKEY = 1,MAXY
           IF (PBUF( 1, IKEY) .GT. 0) THEN
C            KEY EXISTS
             BVAL  = PBUF( ICOL + 1, IKEY)
             JBIN  = INT((BVAL - HMIN) * FF) + 1.5
             FKEYS = FKEYS + 1

             IF (JBIN >=1 .AND. JBIN <= NBINS)  THEN
C               WITHIN HISTOGRAM RANGE
                FREQ(JBIN) = FREQ(JBIN) + 1.0
                FNUMEL     = FNUMEL + 1

                HAV        = HAV  + BVAL 
                HAV2       = HAV2 + DBLE(BVAL) * DBLE(BVAL)
             ENDIF
           ENDIF
        ENDDO

        ADDEXT   = .TRUE.
        ASKNAM   = .TRUE.
        ISOLD    = .FALSE.
        APPEND   = .FALSE. 
        MESSAGE  = .TRUE. 

        CALL OPENDOC(DOCFIL,ADDEXT,NLET,LUNDOC,LUNDOCT,ASKNAM,
     &           'OUTPUT DOC FILE (OR * IF NONE)',ISOLD,APPEND,MESSAGE,
     &            NEWFILE,IRTFLG)

        WANTDOC = (IRTFLG == 0)

        IF (WANTDOC) THEN
C          OUTPUT TO DOC FILE

C                    123456789 123456789 123456789 123456789 123456789 
           COMMENT = ' BIN   BOUNDARY     OCCUPANCY'
           CALL LUNDOCPUTCOM(LUNDOCT,COMMENT,IRTFLG)

           DO IBIN=1,NBINS
              PLIST(1) = HMIN + (BSIZ *(IBIN - 1))
              PLIST(2) = FREQ(IBIN)
              CALL LUNDOCWRTDAT(LUNDOCT,IBIN,PLIST,2,IRTFLG)
           ENDDO
           CLOSE(LUNDOC)

        ELSE
C          OUTPUT IN RESULTS FILE EVEN IF INTERACTIVE INPUT
           WRITE(NDAT,*) ' '
           CALL GRAPHS(NDAT,FREQ,NBINS,1,1,1.0,IRTFLG)

           IF (IRTFLG .NE. 0) THEN
              CALL ERRT(100,'GRAPHING',NE)
              GOTO 999
           ENDIF
        ENDIF

C       FIND MAXIMUM FREQ.  IN HISTOGRAM (HISMAX) & LOCATION
        HISMAX = FREQ(1)
        MAXBIN = 1
        DO  IBIN = 2,NBINS
           IF (FREQ(IBIN) >= HISMAX) THEN
              HISMAX = FREQ(IBIN)
              MAXBIN = IBIN
           ENDIF
        ENDDO

C       CONVERT LOCATION MAXBIN TO CORRESPONDING IMAGE INTENSITY (MODE)
        IF (MAXBIN == 1 .OR. MAXBIN == NBINS) THEN
           BMODE  = MAXBIN - 1
        ELSE
           YM1    = FREQ(MAXBIN-1)
           Y1     = FREQ(MAXBIN+1)
           BMODE  = FLOAT(MAXBIN-1) +  
     &                (YM1-Y1) *.5 / (YM1+Y1-2.* HISMAX)
        ENDIF
        HMODE  = HMIN + BMODE * BSIZ

        DTOP  = HAV2 - HAV * HAV / DBLE(FNUMEL)

        IF (DTOP < 0.0) THEN
C          SQRT OF NEGATIVE NUMBER
           WRITE(NOUT,*) '*** HISD, SQRT(',DTOP,') IMPOSSIBLE' 
           CALL ERRT(100,'HIST',NE)
           GOTO 999

        ELSEIF (FNUMEL == 1) THEN
           CALL ERRT(101,'CAN NOT DETERMINE S.D. (ONLY ONE VALUE)',NE)
           GOTO 999
        ENDIF

        HSIG   = DSQRT(DTOP / DBLE(FNUMEL - 1))
        HAV    = HAV  / DBLE(FNUMEL)
        FNBINS = NBINS

        WRITE(NOUT,*) ' '
        WRITE(NOUT,90) HMIN,HMAX,FKEYS,FNUMEL,
     &                 FNBINS,BSIZ,HAV,HMODE,HSIG

90      FORMAT('  HISTOGRAM RANGE:   ',G11.4,'   .........     ',G11.4,/,
     &         '  FILE KEYS:         ',G11.4,'   HIST. KEYS:   ',G11.4,/,
     &         '  NO. OF BINS:       ',G11.4,'   BIN SIZE:     ',G11.4,/,
     &         '  HIST. MEAN:        ',G11.4,'   HIST. MODE:   ',G11.4,/,
     &         '  HIST. S.D.:        ',G11.4)

        WRITE(NOUT,*) ' '

        IF (NOUT .NE. NDAT) THEN
C           ECHO TO RESULTS FILE
            WRITE(NDAT,*) ' '
            WRITE(NDAT,90) HMIN,HMAX,FKEYS,FNUMEL,
     &                     FNBINS,BSIZ,HAV,HMODE,HSIG
            WRITE(NDAT,*) ' '
        ENDIF

999     IF (ASSOCIATED(PBUF)) DEALLOCATE(PBUF)
        IF (ALLOCATED(FREQ))  DEALLOCATE(FREQ)

        END

@


1.18
log
@wantdoc declared
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.17
log
@*** empty log message ***
@
text
@d8 1
d13 1
a13 1
C=* Copyright 1985-2014  Health Research Inc.,                         *
d37 2
a38 2
C    NOTES:      FCHAR = HD      - FULL HISTOGRAM TO RESULTS FILE
C    NOTES:      FCHAR = HD D    - FULL HISTOGRAM TO DOC FILE
d58 1
@


1.16
log
@merged HD & HD D, reformatted, cosmetic
@
text
@a87 2
	IF (FCHAR(4:4) == 'R' .OR. FCHAR(5:5) == 'R') THEN
	  CALL RDPRM2(HMIN,HMAX,NOT_USED,'HISTOGRAM RANGE MIN & MAX')
@


1.15
log
@GPL_2010
@
text
@d5 3
a7 1
C                      ADDED NBINS                 OCT 2006 ARDEAN LEITH
d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d44 1
a44 1
	SUBROUTINE HISD(NDOC)
d50 11
a60 4
        REAL, DIMENSION(:,:), POINTER   :: PBUF
        CHARACTER(LEN=MAXNAM)           :: DOCFIL
        REAL, ALLOCATABLE, DIMENSION(:) :: FREQ
	DIMENSION       PLIST(4)
d71 1
a71 1
        IF (ICOL .LE. 0 .OR. ICOL .GE. MAXX) THEN
d78 1
a78 1
        IF (NBINS .LE. 0) THEN
d82 1
d88 2
d92 2
a93 2
	IF (FCHAR(4:4) .EQ. 'R' .OR. FCHAR(5:5) .EQ. 'R') THEN
	  CALL RDPRM2(HMIN,HMAX,NOT_USED,'HISTOGRAM RANGE MIN,MAX')
d101 1
a101 1
             IF (PBUF(1, IKEY) .GT. 0) THEN
d104 2
a105 2
	        HMAX = AMAX1(HMAX,BVAL)
	        HMIN = AMIN1(HMIN,BVAL)
d113 9
a121 9
C      CALCULATE HISTOGRAM HERE
       HDIFF  = HMAX - HMIN
       FF     = (NBINS - 1.0) / HDIFF
       BSIZ   = 1.0 / FF
       FNUMEL = 0
       FKEYS  = 0.0
       Y      = 0.0
       HAV    = 0.0
       HAV2   = 0.0
d123 2
a124 2
       DO IKEY = 1,MAXY
          IF (PBUF( 1, IKEY) .GT. 0) THEN
d129 2
a130 1
             IF (JBIN.GE.1 .AND. JBIN.LE.NBINS)  THEN
d138 2
a139 2
          ENDIF
       ENDDO
d141 54
a194 40
      NDEV = NDAT
      IF (FCHAR(4:4) .EQ. 'D' .OR. FCHAR(5:5) .EQ. 'D') THEN
C        OUTPUT TO DOC FILE
         PLIST(2) = HMIN
         DO  IBIN=1,NBINS
            PLIST(1) = IBIN
            PLIST(2) = HMIN + (BSIZ *(IBIN - 1))
            PLIST(3) = FREQ(IBIN)
            CALL SAVD(NDOC,PLIST,3,IRTFLG)
         ENDDO
         CALL SAVDC
         CLOSE(NDOC)
      ELSE
C        OUTPUT IN RESULTS FILE
         WRITE(NDEV,*) ' '
         CALL GRAPHS(NDEV,FREQ,NBINS,1,1,1.0,IRTFLG)
         WRITE(NDEV,*) ' '
         IF (IRTFLG .NE. 0) THEN
            CALL ERRT(100,'HISD',NE)
            GOTO 999
         ENDIF
      ENDIF

C     FIND MAXIMUM FREQUENCY OCCURING IN HISTOGRAM (HISMAX) & LOCATION
      HISMAX = FREQ(1)
      MAXBIN = 1
      DO  IBIN = 2,NBINS
         IF (FREQ(IBIN) .GE. HISMAX) THEN
            HISMAX = FREQ(IBIN)
            MAXBIN = IBIN
         ENDIF
      ENDDO

C     CONVERT LOCATION MAXBIN TO CORRESPONDING IMAGE INTENSITY (MODE)
      IF (MAXBIN .EQ. 1 .OR. MAXBIN .EQ. NBINS) THEN
         BMODE  = MAXBIN - 1
      ELSE
         YM1    = FREQ(MAXBIN-1)
         Y1     = FREQ(MAXBIN+1)
         BMODE  = FLOAT(MAXBIN-1) +  
d196 2
a197 2
      ENDIF
      HMODE  = HMIN + BMODE * BSIZ
d199 36
a234 33
      DTOP  = HAV2 - HAV * HAV / DBLE(FNUMEL)
      IF (DTOP .LT. 0.0) THEN
C        SQRT OF NEGATIVE NUMBER
         WRITE(NOUT,*) '*** HISD, SQRT(',DTOP,') IMPOSSIBLE' 
         CALL ERRT(100,'HIST',NE)
         GOTO 999

      ELSEIF (FNUMEL .EQ. 1) THEN
         WRITE(NOUT,*) '*** CAN NOT DETERMINE S.D. (ONLY ONE PIXEL) ' 
         CALL ERRT(100,'HISD',NE)
         GOTO 999
      ENDIF

      HSIG   = DSQRT(DTOP / DBLE(FNUMEL - 1))
      HAV    = HAV  / DBLE(FNUMEL)
      FNBINS = NBINS

      WRITE(NDEV,*) ' '
      WRITE(NDEV,90) HMIN,HMAX,FKEYS,FNUMEL,
     &               FNBINS,BSIZ,HAV,HMODE,HSIG

90    FORMAT(' HISTOGRAM RANGE:   ',G11.4,'   .........     ',G11.4,/,
     &       ' FILE KEYS:         ',G11.4,'   HIST. KEYS:   ',G11.4,/,
     &       ' NO. OF BINS:       ',G11.4,'   BIN SIZE:     ',G11.4,/,
     &       ' HIST. MEAN:        ',G11.4,'   HIST. MODE:   ',G11.4,/,
     &       ' HIST. S.D.:        ',G11.4)

      WRITE(NDEV,*) ' '

      IF (NDEV .NE. NOUT) WRITE(NOUT,*) ' '
      IF (NDEV .NE. NOUT) WRITE(NOUT,90) HMIN,HMAX,FKEYS,FNUMEL,
     &               FNBINS,BSIZ,HAV,HMODE,HSIG
      IF (NDEV .NE. NOUT) WRITE(NOUT,*) ' '
d236 2
a237 2
999   IF (ASSOCIATED(PBUF)) DEALLOCATE(PBUF)
      IF (ALLOCATED(FREQ))  DEALLOCATE(FREQ)
d239 1
a239 1
      END
@


1.14
log
@added nbins
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.13
log
@GPL License fixed
@
text
@d5 1
a5 1
C
d34 1
a34 1
C    PURPOSE:    COMPUTE 128 PLACE HISTOGRAM FROM ONE COLUMN OF
d47 1
d49 2
d52 3
a54 2
	COMMON          FREQ(128)
	CHARACTER *81   DOCFIL
a56 3
        INCLUDE 'F90ALLOC.INC'
        REAL, DIMENSION(:,:), POINTER :: PBUF

d63 2
a64 2
	CALL RDPRMI(ICOL,IDUM,NOT_USED,
     &              'REGISTER # USED FOR HISTOGRAM')
d71 12
a101 3
C       NBINS MUST BE <= 1000!!!
        NBINS  = 128

d103 1
a103 3
        DO  K = 1,NBINS
           FREQ(K) = 0.0 
        ENDDO
d210 2
a211 1
999   DEALLOCATE(PBUF)
@


1.12
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a6 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1981, WADSWORTH CENTER FOR LABORATORIES AND              *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
a30 1
C **************************************************************************
@


1.11
log
@icount in getdocdat return
@
text
@d2 1
d7 1
d9 1
d11 24
d41 1
@


1.10
log
@nloop,iloop_removed
@
text
@d64 1
a64 1
             IF (PBUF( 1, IKEY) .GT. 0) THEN
d94 1
a94 1
             BVAL = PBUF( ICOL + 1, IKEY)
@


1.9
log
@*** empty log message ***
@
text
@d46 1
a46 1
	CALL RDPRMI(ICOL,IDUM,NLOOP,ILOOP,
d56 1
a56 1
	  CALL RDPRM2(HMIN,HMAX,NLOOP,ILOOP,'HISTOGRAM RANGE MIN,MAX')
@


1.8
log
@*** empty log message ***
@
text
@d186 1
a186 1
999   CALL DEALLOCATE(PBUF)
@


1.7
log
@f90
@
text
@a30 1
CNO_SAVE
a36 1
#ifdef SP_F90
d38 1
a38 6
        REAL, DIMENSION(:), POINTER :: PBUF
        REAL, DIMENSION(:), POINTER :: IPQ
#else
        DIMENSION      PBUF(1)
        POINTER        (IPQ,PBUF) 
#endif
d43 1
a43 1
     &                 .TRUE.,MAXX, MAXY,IPQ,IRTFLG)
a44 3
#ifdef SP_F90
        PBUF = > IPQ
#endif
d64 1
a64 1
             IF (PBUF((IKEY - 1) * MAXX + 1) .GT. 0) THEN
d66 1
a66 1
                BVAL = PBUF((IKEY - 1) * MAXX + ICOL + 1)
d92 1
a92 1
          IF (PBUF((IKEY - 1) * MAXX + 1) .GT. 0) THEN
d94 1
a94 1
             BVAL = PBUF((IKEY - 1) * MAXX + ICOL + 1)
d186 1
a186 1
999   CALL DEALLOCMEM_R(IPQ,IRTFLG)
@


1.6
log
@f90 changes
@
text
@d38 5
d45 1
a46 1

d52 3
a54 1

d196 1
a196 1
999   CALL DEALLOCIT(IPQ,IRTFLG)
@


1.5
log
@*** empty log message ***
@
text
@d16 1
a16 1
C    HISD
d19 1
a19 1
C                DOCUMENT FILE,  DISPLAY HISTOGRAM ON 
d34 1
a34 1
	COMMON          BUF(1000), FREQ(128)
d37 1
a37 6
	LOGICAL  RUNTIME
#ifdef SP_F90
        INCLUDE 'F90ALLOC.INC'
        REAL, DIMENSION(:), POINTER :: IPQ
        REAL, DIMENSION(:), POINTER :: PBUF
#else
d40 2
a41 3
#endif
       
CNO_SAVE      
d48 1
d60 1
d176 6
a181 5
90    FORMAT(' HISTOGRAM RANGE:   ',G10.3,'   .........     ',G10.3,/,
     &       ' FILE KEYS:         ',G10.3,'   HIST. KEYS:   ',G10.3,/,
     &       ' NO. OF BINS:       ',G10.3,'   BIN SIZE:     ',G10.3,/,
     &       ' HIST. MEAN:        ',G10.3,'   HIST. MODE:   ',G10.3,/,
     &       ' HIST. S.D.:        ',G10.3)
d189 1
a189 2
999   RUNTIME = .TRUE.
      CALL ALLOCIT(0,RUNTIME,IPQ,'HISD',IRTFLG)
d192 1
@


1.4
log
@bad constant in allocit call
@
text
@d37 1
a37 1

a194 1
      RETURN
@


1.3
log
@needed to set maxx & maxy to zero
@
text
@d192 2
a193 1
999   CALL ALLOCIT(0,.TRUE.,IPQ,'HISD',IRTFLG)
@


1.2
log
@rewritten & bugs fixed
@
text
@d48 2
a49 1

d107 1
a107 1
                FNUMEL      = FNUMEL + 1
d109 2
a110 2
                HAV  = HAV  + BVAL 
                HAV2 = HAV2 + DBLE(BVAL) * DBLE(BVAL)
@


1.1
log
@Initial revision
@
text
@d19 2
a20 3
C                DOCUMENT FILE, STORE 
C                HISTOGRAM IN THE HISTOGRAM RECORDS, DISPLAY HISTOGRAM ON 
C                LINE PRINTER.
d22 4
a25 2
C                 MODE      'F' - full histogram
C                           'T' - histogram truncated to the range of densities
a26 1
C
d30 2
a31 1
	SUBROUTINE HISD
d33 14
a46 6
C     GRAPH & GRAPHS USE IPLOT BUFFER
	COMMON IPLOT(128),BUF(1)
	CHARACTER *81 DOCFIL
	CHARACTER*1     NULL,ANS
	DIMENSION     PLIST(4)
	DATA  INPIC/77/
d48 12
a59 9
	NULL = CHAR(0)
	CALL FILERD(DOCFIL,NLET,NULL,'INPUT DOCUMENT',IRTFLG)
        IF(IRTFLG .EQ. -1) RETURN
	CALL RDPRMI(ICOL,IDUM,NLOOP,ILOOP,'COLUMN # USED FOR HISTOGRAM')

         K=0
	 K2=0
         KP1=K+1
         CALL  UNSAV(DOCFIL,K,INPIC,KP1,BUF,ICOL,LERR,K2)
d61 1
a61 2
C     MAKE SURE STATISTICS ARE CURRENT
C  If one of the letters is R ask user for the range
d63 1
a63 2
	CALL  RDPRM2(FMIN,FMAX,NLOOP,ILOOP,'HISTOGRAM RANGE MIN,MAX')
	AV=(FMAX-FMIN)/2.0
d65 11
a75 46
C     FIND STATISTICS
	AV=0.0
	SIG=0.0
	FMAX=-1.0E23
	FMIN=-FMAX
         K=1
	 K2=1
         NIMA=0
778      LERR=-1
         KP1=K+1
         CALL  UNSAV(DOCFIL,K,INPIC,KP1,BUF,ICOL,LERR,K2)
         IF(LERR.EQ.0)  THEN
         NIMA=NIMA+1
         B=BUF(ICOL)
	AV=AV+B
	SIG=SIG+B*B
	FMAX=AMAX1(FMAX,B)
	FMIN=AMIN1(FMIN,B)
         K=K+1
         GOTO  778
         ENDIF
	SIG=SQRT((SIG-AV*AV/NIMA)/REAL(NIMA-1.0))
	AV=AV/NIMA
	ENDIF


C     CALCULATE HISTOGRAM HERE
C     ZERO THE HISTOGRAM
      DO  K = 1,128
         BUF(ICOL+K) = 0.0 
      ENDDO

C      MPI 3-MAR-80 ADDED TO AVOID "BEAT" PHENOMENON   al
C      APPEARS TO EPAND RANGE OF HIST. MIN/MAX FOR < 0...2 
C      HAS NO EFFECT ON CORRECTNESS OF HISTOGRAM   al

C      FOR MIN = 0.0 MAX=2.0 HMIN=0.0    HDIFF1=2.0
C      FOR MIN = 0.0 MAX=1.0 HMIN=0.0    HDIFF1=1.0
C      FOR MIN = 0.0 MAX=1.5 HMIN=-0.25  HDIFF1=2.0   al

       HDIFF = FMAX - FMIN
       IF (HDIFF .LE. 2.0) THEN
           VAR = 2.0
           DO  L=1,16
             IF (HDIFF .GT. VAR) GOTO 23
             VAR = VAR / 2.0
d77 1
a77 36
          CALL ERRT(5,'HD  ',NE)
          RETURN

23        HDIFF1 = VAR * 2.0
          DIFF   = HDIFF1 -HDIFF
          HMIN   = FMIN - DIFF / 2.0
       ELSE
          HMIN   = FMIN
          HDIFF1 = HDIFF
       ENDIF

       FF = 127.0 / HDIFF1

C      BUF(ICOL+129) AND BUF(ICOL+130) COMMUNICATE NEW MINIMUM AND 
C      INCREMENT USED IN HISTOGRAM COMPUTATION.

       BUF(ICOL+129) = HMIN
       BUF(ICOL+130) = HDIFF1

C      MPI END

	REWIND  INPIC
         K=1
         K2=1
788      LERR=-1
         KP1=K
         CALL  UNSAV(DOCFIL,K,INPIC,KP1,BUF,ICOL,LERR,K2)
         IF(LERR.EQ.0)  THEN
         B=BUF(ICOL)
               J = INT((B-FMIN)*FF) + 1.5
               IF (J.GE.1 .AND. J.LE.128)  THEN
                  BUF(ICOL+J) = BUF(ICOL+J)+1.
               ENDIF
         K=K+1
         GOTO  788
         ENDIF
d79 2
a80 1
	CLOSE(INPIC)
d82 31
d114 1
d117 6
a122 7
         DINC     = 1.0 / FF
         PLIST(2) = FMIN
         DO  I=1,128
            PLIST(1) = I
            PLIST(2) = PLIST(2) + DINC
            PLIST(3) = BUF(ICOL + I)
            CALL SAVD(INPIC,PLIST,3,IRTFLG)
d125 2
a126 13
         CLOSE(INPIC)

      ELSEIF (FCHAR(4:4) .EQ. 'T' .OR. FCHAR(5:5) .EQ. 'T') THEN
C        OUTPUT ON TERMINAL
         NSAV  = NDAT
         NDAT  = NOUT
         IDEV  = 10
         WRITE(NOUT,*) ' '
         CALL GRAPH(BUF(ICOL+1),128,1,IDEV)
         WRITE(NOUT,*) ' '
         NDAT  = NSAV

      ELSEIF (FCHAR(4:4) .NE. 'B') THEN
d128 7
a134 1
         CALL GRAPHS(BUF(ICOL+1),128,1)
d138 6
a143 6
      HISMAX = BUF(ICOL+1)
      J = 1
      DO  I = 2,128
         IF (BUF(ICOL+I) .GE. HISMAX) THEN
           HISMAX = BUF(ICOL+I)
           J  = I
d147 3
a149 3
C     CONVERT LOCATION J TO CORRESPONDING IMAGE INTENSITY (MODE)
      IF (J .EQ. 1 .OR. J .EQ. 128) THEN
         TMODE  = BUF(ICOL+J)
d151 4
a154 3
         YM1    = BUF(ICOL+J-1)
         Y1     = BUF(ICOL+J+1)
         TMODE  = FLOAT(J-1)+(YM1-Y1)*.5/ (YM1+Y1-2.*BUF(ICOL+J))
d156 1
a156 1
      TMODE     = FMIN + TMODE / FF
d158 12
a169 1
      WRITE(NOUT,*) ' '
d171 19
a189 7
      HMAX = HMIN + HDIFF1
      BSIZ = HDIFF1 / 127.0
	IF (FCHAR(4:4) .EQ. 'R' .OR. FCHAR(5:5) .EQ. 'R') THEN
      WRITE(NOUT,90) FMIN,FMAX,HMIN,HMAX,TMODE,BSIZ
90    FORMAT(' REQUESTED RANGE:     ',G10.3,'   .........   ',G10.3,/,
     &       ' HISTOGRAM RANGE:     ',G10.3,'   .........   ',G10.3,/,
     &       ' MODE:                ',G10.3,'   BIN SIZE:   ',G10.3)
d191 1
a191 12
      IF (NDAT .NE. NOUT) WRITE(NDAT,91) FMIN,FMAX,HMIN,HMAX,
     &                    TMODE,BSIZ 
	ELSE
      WRITE(NOUT,91) FMIN,FMAX,HMIN,HMAX,AV,TMODE,SIG,BSIZ
91    FORMAT(' FILE RANGE:          ',G10.3,'   .........   ',G10.3,/,
     &       ' HISTOGRAM RANGE:     ',G10.3,'   .........   ',G10.3,/,
     &       ' FILE MEAN:           ',G10.3,'   MODE:       ',G10.3,/,
     &       ' S.D.:                ',G10.3,'   BIN SIZE:   ',G10.3)

      IF (NDAT .NE. NOUT) WRITE(NDAT,91) FMIN,FMAX,HMIN,HMAX,AV,
     &                    TMODE,SIG,BSIZ 
	ENDIF
d193 1
@
