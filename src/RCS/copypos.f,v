head	1.28;
access;
symbols
	pre_mrcs:1.28
	healthdept_2018:1.28
	pre_getangas:1.23
	GPL2010:1.23
	pre_GPL2010:1.22
	pre_var_equation:1.22
	pre_fftwrings:1.22
	pre_opfiles:1.22
	src:1.22
	best-code:1.22
	x-named-regs:1.22
	x:1.22
	v13-00:1.22
	pre_GPL:1.20
	prec_CA:1.20
	noindx:1.19
	Bproc:1.16
	oct21:1.16
	last77:1.15;
locks; strict;
comment	@c @;


1.28
date	2018.10.03.14.34.03;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2015.06.03.14.57.21;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2014.07.30.16.25.30;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2014.07.30.13.30.08;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2014.01.06.17.14.49;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2010.06.24.13.25.19;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2005.10.17.20.40.41;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2005.10.17.18.31.04;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2003.01.28.21.42.26;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2002.07.08.13.13.36;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2002.03.11.14.08.32;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2001.01.04.18.51.09;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	99.03.30.13.48.26;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	99.03.18.21.29.55;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	99.02.23.19.43.49;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	99.02.04.14.17.20;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	97.10.31.20.02.00;	author hedget;	state Exp;
branches;
next	1.11;

1.11
date	97.10.22.18.46.42;	author liy;	state Exp;
branches;
next	1.10;

1.10
date	97.10.22.15.07.05;	author liy;	state Exp;
branches;
next	1.9;

1.9
date	96.11.22.15.18.25;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	96.10.03.19.27.07;	author liy;	state Exp;
branches;
next	1.7;

1.7
date	96.09.27.20.42.25;	author liy;	state Exp;
branches;
next	1.6;

1.6
date	95.10.03.14.32.27;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	95.05.03.17.31.19;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.05.01.19.03.45;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.04.25.18.13.51;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.03.35;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.53;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.28
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C  COPYPOS          ALTERED FOR SPIDER           FEB 90   ARDEAN LEITH
C	            MODIFIED FOR F90             10/22/97 yl
C                   MODIFIED FOR F90             FEB 99   ARDEAN LEITH     
C                   MAXNAM                       JUL 14   ARDEAN LEITH
C                   MAX FOR IFORT                JUN 15   ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2015  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  COPYPOS(FILOLD,LUNSPI,LUNPOS,NX,NY,NZ)
C
C  PARAMETERS:      
C
C  PURPOSE: CONVERTS A SPIDER IMAGE TO A ASCII POSTSCRIPT FILE
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE COPYPOS(FILOLD,LUNSPI,LUNPOS,NX,NY,NZ)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

	CHARACTER(LEN=*)      :: FILOLD
        INTEGER               :: LUNSPI,LUNPOS,NX,NY,NZ

        INTEGER, PARAMETER    :: NXAX = 17008 
        REAL                  :: FARRAY(NXAX)
        CHARACTER(LEN=MAXNAM) :: PSFILE

        INTEGER*1             :: BBUF(NXAX)
        CHARACTER(LEN=1)      :: NULL = CHAR(0)
	REAL	              :: LENGTH,WIDTH
        LOGICAL               :: FLIP

        DATA FLTZER/10E-30/

	IF (IMAMI .NE.1) CALL NORM3(LUNSPI,NX,NY,NZ,FMAX,FMIN,AV)

        IF ( (FMAX - FMIN) < FLTZER) THEN
           WRITE(NOUT,*) ' *** BLANK FILE SKIPPED'
           RETURN
        ENDIF

C       FORMATTED, SEQUENTIAL FILE FOR POSTSCRIPT
8       CALL OPAUXFILE(.TRUE.,PSFILE,DATEXC,LUNPOS,0,'N',
     &                       'POSTSCRIPT OUTPUT',.TRUE.,IRTFLG)
        NLET2 = LNBLNKN(PSFILE)

	WRITE(NOUT,1150) FMIN,FMAX
1150	FORMAT(/'  DENSITY RANGE: ',G12.4,'...',G12.4,/)

	AMIN = FMIN
	AMAX = FMAX
	WRITE(NOUT,900)
900     FORMAT('  (TO REVERSE CONTRAST, MAKE MAX < MIN.)')
        CALL RDPRM2S(AMIN,AMAX,NOT_USED,
     &     'MIN AND MAX DENSITIES FOR THRESHOLDING (OR <CR>)',
     &     IRTFLG)
        IF (IRTFLG == -1) GOTO 8

	IF (AMIN == AMAX) THEN
	    AMIN  = FMIN
	    AMAX  = FMAX
            FLIP = .FALSE.

	ELSEIF (AMIN > AMAX) THEN
            FLIP  = .TRUE.
	    FTEMP = AMIN
	    AMIN  = AMAX
	    AMAX  = FTEMP 
	ENDIF	
    
3	SCALE = 255.0 / (AMAX-AMIN)
	WRITE(NOUT,1151) AMIN, AMAX
1151	FORMAT(/,'  DENSITY VALUES SET: ',G12.4,'....',G12.4)

	ISKIP   = 1
	NX0     = NX
	NY0     = NY
        RATIM   = FLOAT(NX0) / FLOAT(ISKIP)
        RATPA   = FLOAT(NY0) * 18.0 / 23.0
	IF (RATIM >= RATPA) THEN
	   WIDTH = 18.0
	ELSE
	   WIDTH = 23.0 * FLOAT(NX0 / ISKIP) / FLOAT(NY0)
	ENDIF
	LENGTH = WIDTH * FLOAT(NY0) / FLOAT(NX0 / ISKIP)

	WRITE(NOUT,1600) WIDTH, WIDTH/2.54, LENGTH, LENGTH/2.54
1600	FORMAT('  DEFAULT IMAGE SIZE IS ',F5.2,' CM (',
     &     F5.2,' IN) BY ', F5.2,' CM (',F5.2,' IN)',/)

        CALL RDPRM(QWIDTH,NOT_USED,
     &      'DESIRED WIDTH IN CM (OR <CR>)')
        IF (QWIDTH <= 0.0) QWIDTH = WIDTH
	QLENGTH = QWIDTH * FLOAT(NY0) / FLOAT(NX0)

	IF (QWIDTH  .NE. 0 .AND. QWIDTH < WIDTH .AND.
     &      QLENGTH <= LENGTH) WIDTH = QWIDTH

        WRITE(NOUT,902) WIDTH
902     FORMAT('  SELECTED WIDTH: ',F5.2,' CM')

        IDBG = -1
        CALL RDPRI1S(IDBG,NOT_USED,
     &    'BACKGROUND VALUE 0 (BLACK) - 255 (WHITE), (-1 - SKIP)',
     &    IRTFLG)

        WRITE(LUNPOS,94)PSFILE(1:NLET2)
 94     FORMAT(
     &     '%!PS-Adobe-2.0 EPSF-2.0',/,
     &     '%%Title:',A,/,
     &     '%%Creator: SPIDER copypos (CP PO)',/,
     &     '%%Pages: 1',/,
     &     '%%DocumentFonts:',/,
     &     '%%EndComments',/,
     &     '%%EndProlog',/)
      
        WRITE(LUNPOS,95)
95      FORMAT(
     &     '% remember original state',/,
     &     ' /origstate save def',/)

        WRITE(LUNPOS,96)
96      FORMAT(' ',
     &     '% build a temporary dictionary',/,
     &     ' 20 dict begin',/)
     
        WRITE(LUNPOS,97)
97      FORMAT(
     &     ' /Helvetica findfont ',/,
     &     ' 12 scalefont setfont ',/)

	DO IZ = 1,NZ
C           LOOP THROUGH EACH SLICE OF THE IMAGE
	    WRITE(LUNPOS,*) ' 52 112 moveto '

            IF (NZ > 1) THEN
               WRITE(LUNPOS,90) IZ
90             FORMAT('  (Slice ',I4,10X,'-- X -->) show ')
            ENDIF

	    WRITE(LUNPOS,*) ' 55 98 moveto '

            NLET1 = LNBLNKN(FILOLD)
            WRITE(LUNPOS,91) FILOLD(1:NLET1),DATEXC(1:3),PSFILE(1:NLET2)
91          FORMAT(' ( Image: ',A,'.',A,'  Postscript: ',A,') show')

	    CALL COPYPOS2(LUNPOS,0.75,1.7,WIDTH,NX0,NY0)

	    DO IY =  1, NY
               CALL REDLIN(LUNSPI,FARRAY,NX,IY)
	       CALL COPYPOS3(LUNPOS,SCALE,AMIN,AMAX,FLIP,NX0,IDBG)
	    END DO

	    IF (NZ > 1) WRITE(NOUT,*) ' SLICE:',IZ
	    WRITE(LUNPOS,*) ' showpage'
	ENDDO

	WRITE(LUNPOS,*) '% stop using temporary dictionary'
	WRITE(LUNPOS,*) ' end'
	WRITE(LUNPOS,*) ' '

	WRITE(LUNPOS,*) '% restore original state'
	WRITE(LUNPOS,*) ' origstate restore'
	WRITE(LUNPOS,*) ' '

	WRITE(LUNPOS,*) '%%Trailer'
	WRITE(LUNPOS,*) ' '
                           
        CLOSE(LUNSPI)
	CLOSE(LUNPOS)

C       SEE IF USER WANTS A PRINT OUT OF PS FILE NOW
        CALL POPRINT(PSFILE(1:NLET2))

	END



C++*********************************************************************
C
C   COPYPOS2(LUNPOS,XPOS,YPOS,WIDTH,NNX,NY)
C
C   PURPOSE:      ROUTINE FOR INITIALIZING POSTSCRIPT OUTPUT 
C	          SDF 7-JULI-88
C                 ALTERED FOR SPIDER FEB 90 AL
C          
C--*********************************************************************

	SUBROUTINE COPYPOS2(LUNPOS,XPOS,YPOS,WIDTH,NNX,NY)

        DATA  IA,IB,ID,IPIXEL/0,0,0,8/
	
C       USE WIDTHT IN CASE CONSTANT IS PASSED TO HERE
	WIDTHT   = WIDTH / 2.54
	YLENGTH  = WIDTHT * FLOAT(NY) / FLOAT(NNX)
       
        IC = -NY
	WRITE(LUNPOS,10) NNX,NY,IPIXEL,
     &       NNX,IA,IB,IC,ID,NY,XPOS,YPOS,WIDTHT,YLENGTH

10	FORMAT('  /picstr 1 string def'/
     &    '  /grey { ',3I7/
     &	  ' [ ',6I7,' ] '/
     &    '  { currentfile picstr readhexstring pop } '/
     &    '  image } def'/
     &    '  /inch { 72 mul } def'/
     &    2(1X,F4.1,' inch '),' translate'/
     &    1X,F6.2,' inch ',F6.2,' inch scale'/
     &    '  grey')

        END



C++*********************************************************************
C
C  COPYPOS3.FOR -- FEB 90 
C
C   COPYPOS3(LUNPOS,SCALE,AMIN,AMAX,FLIP,NX,IDBG)
C
C   PURPOSE:      CONVERTS A LINE FROM SPIDER IMAGE FILE TO A
C                 POSTSCRIPT (8 BIT NORMALIZED) READABLE FORMAT 
C          
C--*********************************************************************

       SUBROUTINE COPYPOS3(LUNPOS,SCALE,AMIN,AMAX,FLIP,NX,IDBG)

       PARAMETER      (NXAX = 32000)
       COMMON         FARRAY(NXAX),BBUF(NXAX)
 
       INTEGER*1      BVALUE,BBUF,BVAL(4),BVAL4
       EQUIVALENCE    (BVALUE,IVAL), (BVAL, IVAL), (BVAL4,BVAL(4))
       LOGICAL        FLIP

C      OUTPUT ONE LINE OF DATA

       DO IX = 1,NX
          FVAL = FARRAY(IX)
          IF     (FVAL > AMAX) THEN
             RVAL = 255.0
          ELSEIF (FVAL < AMIN) THEN
             RVAL = 0.0
          ELSE
             RVAL = (FVAL - AMIN) * SCALE
          ENDIF

C         GREATER OF (0 AND (THE SMALLER OF RVAL AND 255))
          IVAL = MAX(0.0, MIN(RVAL, 255.))

          IF (FLIP)   THEN
             IVAL = 255 - IVAL
             IF (IDBG >= 0 .AND. IVAL == 255)  IVAL = IDBG
          ELSE
             IF (IDBG >= 0 .AND. IVAL == 0)   IVAL = IDBG
          ENDIF

#if defined (__osf__) || defined (SP_NT) || defined (__linux__)
C         DEC & NT  USE OTHER BYTE ORDERING
          BBUF(IX) = BVALUE
#else
C         E.G. SGI   
          BBUF(IX) = BVAL(4)
#endif

C         BVALUE = IVAL   ! Through equivalence

        ENDDO

        WRITE(LUNPOS,'(1X,64Z2.2)') (BBUF(IX),IX=1,NX)

        END
@


1.27
log
@max(0.   for ifort
@
text
@d16 1
a16 1
C=* Email: spider@@wadsworth.org                                        *
@


1.26
log
@INTEGER*1             :: BBUF(NXAX)
@
text
@d8 1
d14 1
a14 1
C=* Copyright 1985-2014  Health Research Inc.,                         *
d273 1
a273 1
          IVAL = MAX(0,MIN(RVAL, 255.))
@


1.25
log
@MMAXNAM
@
text
@d49 1
a49 1
        REAL                  :: FARRAY(NXAX),BBUF(NXAX)
d52 1
a52 1
        INTEGER*1             :: BBUF
@


1.24
log
@nx & cosmetic
@
text
@d4 4
a7 3
C  COPYPOS                   ALTERED FOR SPIDER FEB 90   ARDEAN LEITH
C	                     MODIFIED FOR F90   10/22/97 yl
C                            MODIFIED FOR F90   FEB 99   ARDEAN LEITH     
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
a36 1
C        1         2         3         4         5         6         7
d42 2
a43 1
        INCLUDE        'CMBLOCK.INC'
d45 2
a46 1
	CHARACTER *(*)  FILOLD
d48 8
a55 9
        PARAMETER       (NXAX = 17008)
        COMMON          FARRAY(NXAX),BBUF(NXAX)

	CHARACTER *81   PSFILE

        INTEGER*1       BBUF
        CHARACTER       NULL
	REAL	        LENGTH,WIDTH
        LOGICAL         FLIP
d59 1
a59 3
        NULL = CHAR(0)

	IF (IMAMI .NE.1)CALL NORM3(LUNSPI,NX,NY,NZ,FMAX,FMIN,AV)
@


1.23
log
@GPL_2010
@
text
@d30 1
a30 1
C  COPYPOS(FILOLD,LUNSPI,LUNPOS,NSAM,NROW,NSLICE)
d40 1
a40 1
        SUBROUTINE COPYPOS(FILOLD,LUNSPI,LUNPOS,NSAM,NROW,NSLICE)
d46 2
a47 2
        PARAMETER       (NSAMAX = 17008)
        COMMON          FARRAY(NSAMAX),BBUF(NSAMAX)
d58 1
a58 1
        NULL   = CHAR(0)
d60 1
a60 1
	IF (IMAMI .NE.1)CALL NORM3(LUNSPI,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
d62 1
a62 1
        IF ((FMAX - FMIN) .LT. FLTZER) THEN
d80 1
a80 1
     &     'ENTER MIN. AND MAX. DENSITIES FOR THRESHOLDING (OR <CR>)',
d82 1
a82 1
        IF (IRTFLG .EQ. -1) GOTO 8
d84 1
a84 1
	IF (AMIN .EQ. AMAX) THEN
d89 1
a89 1
	ELSEIF (AMIN .GT. AMAX) THEN
d101 2
a102 2
	NX0     = NSAM
	NY0     = NROW
d105 1
a105 1
	IF (RATIM .GE. RATPA) THEN
d117 2
a118 2
     &      'ENTER DESIRED WIDTH IN CM (OR <CR>)')
        IF (QWIDTH .LE. 0.0) QWIDTH = WIDTH
d121 3
a123 2
	IF (QWIDTH  .NE. 0 .AND. QWIDTH .LT. WIDTH .AND.
     &      QLENGTH .LE. LENGTH) WIDTH = QWIDTH
d129 1
a129 1
     &    'ENTER BACKGROUND VALUE 0 (BLACK) - 255 (WHITE), (-1 - SKIP)',
d157 1
a157 1
	DO IZ = 1,NSLICE
d161 1
a161 1
            IF (NSLICE .GT. 1) THEN
d174 2
a175 2
	    DO IY =  1, NROW
               CALL REDLIN(LUNSPI,FARRAY,NSAM,IY)
d179 1
a179 1
	    IF (NSLICE .GT. 1) WRITE(NOUT,*) ' SLICE:',IZ
a199 1
        RETURN  
d219 1
a219 1
	WIDTHT  = WIDTH / 2.54
d235 1
a235 1
	RETURN
d253 2
a254 2
       PARAMETER      (NSAMAX = 32000)
       COMMON         FARRAY(NSAMAX),BBUF(NSAMAX)
d264 1
a264 1
          IF (FVAL .GT. AMAX) THEN
d266 1
a266 1
          ELSEIF (FVAL .LT. AMIN) THEN
d273 1
a273 1
          IVAL = MAX0(0,MIN1(RVAL, 255.))
d277 1
a277 1
             IF (IDBG.GE.0 .AND. IVAL.EQ.255)  IVAL = IDBG
d279 1
a279 1
             IF (IDBG.GE.0 .AND. IVAL.EQ.0)   IVAL = IDBG
d290 1
a290 1
C         BVALUE = IVAL   ! through equivalence
a295 1
	RETURN
@


1.22
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.21
log
@HRI GPL License used
@
text
@a8 2
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        **
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK        *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND     *
C *    RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201 *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS *
C *    OR USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN        *
C *    APPROVAL OF THE CENTER FOR LABORATORIES AND RESEARCH.           *
a208 1
C++************************************************************************
a216 1
C--*************************************************************************
a244 1
C++************************************************************************
a253 1
C--*************************************************************************
@


1.20
log
@*** empty log message ***
@
text
@d9 1
d11 24
d217 1
d226 1
d255 1
d265 1
@


1.19
log
@onunix common removed
@
text
@d270 1
a270 1
#if defined (__osf__) || defined (SP_NT)
@


1.18
log
@nloop,iloop_removed
@
text
@a38 3
        LOGICAL         ONSUN,ONUNIX,ONSGI,ONOSF
        COMMON /OPSYS/  ONSUN,ONUNIX,ONSGI,ONOSF

a240 3
       LOGICAL        ONSUN,ONUNIX,ONSGI,ONOSF
       COMMON /OPSYS/ ONSUN,ONUNIX,ONSGI,ONOSF

d270 7
a276 7
          IF (ONUNIX .AND. .NOT. ONOSF) THEN 
C            E.G. SGI   
             BBUF(IX) = BVAL(4)
          ELSE
C            DEC & NT  USE OTHER BYTE ORDERING
             BBUF(IX) = BVALUE
          ENDIF
@


1.17
log
@MEMALLOCABLE removed
@
text
@d70 1
a70 1
        CALL RDPRM2S(AMIN,AMAX,NLOOP,ILOOP,
d107 1
a107 1
        CALL RDPRM(QWIDTH,NLOOP,ILOOP,
d118 1
a118 1
        CALL RDPRI1S(IDBG,NLOOP,ILOOP,
@


1.16
log
@spelling errror
@
text
@d40 1
a40 1
        COMMON /OPSYS/  ONSUN,ONUNIX,ONSGI,ONOSF,MEMALLOCABLE
d244 2
a245 2
       LOGICAL ONSUN,ONUNIX,ONSGI,ONOSF
       COMMON /OPSYS/ ONSUN,ONUNIX,ONSGI,ONOSF,MEMALLOCABLE
@


1.15
log
@undefined nlet2
@
text
@d61 1
a61 1
        NLET2 = LNBLNKN(POSFILE)
@


1.14
log
@rewritten for f90.
@
text
@d61 1
@


1.13
log
@CNO_SAVE
@
text
@d2 1
a2 1
C********************************************************************
d4 23
a26 8
C       CONVERTS A SPIDER IMAGE TO A ASCII POSTSCRIPT FILE
C       ALTERED FOR SPIDER FEB 90 al
C	MODIFIED FOR F90    --- yl 	10/22/97
c
C        0         2         3         4         5         6         7     
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--------------------------------------------------------------------
#ifdef SP_F90
d28 1
a28 1
       SUBROUTINE COPYPOS
d30 1
a30 1
       COMMON /UNITS/LUNC,NIN,NOUT
d32 1
a32 4
       WRITE(NOUT,*) 'DUMMY CALL: copypos'
       RETURN
       END
#else
d34 2
a35 1
        SUBROUTINE COPYPOS(LUNIM,LUNPOS,NSAM,NROW,NSLICE)
d37 1
a37 1
CNO_SAVE
d39 2
a40 6
        INCLUDE        'CMBLOCK.INC'

        PARAMETER      (NSAMAX = 32000)
        COMMON         FARRAY(NSAMAX),BBUF(NSAMAX)

        COMMON /COMMUN/ FILNAM,PSFILE,LINE
d42 4
a45 2
        LOGICAL ONSUN,ONUNIX,ONSGI,ONOSF
        COMMON /OPSYS/ ONSUN,ONUNIX,ONSGI,ONOSF,MEMALLOCABLE
a46 7
        INTEGER*1      BBUF
	CHARACTER *120 LINE
	CHARACTER *80  FILNAM,PSFILE
        CHARACTER      YN,NULL
	REAL	       LENGTH,WIDTH
        LOGICAL        FLIP

d51 1
a51 2
5	NLET1 = LNBLNK(FILNAM)-1
        IF (IMAMI .NE. 1)CALL NORM3(LUNIM,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
d56 1
d58 3
a60 6
        ELSEIF (NSAM .GT. NSAMAX) THEN
C          NSAMAX BUFFER OVERFLOW
           WRITE(NOUT,*) ' *** NSAM TOO LARGE IN COPYPOS'
           CALL ERRT(100,'COPYPOS',NE)
           RETURN
        ENDIF
a61 15
8       CALL FILERD(PSFILE,NLET,NULL,'POSTSCRIPT OUTPUT',IRTFLG)
        IF (IRTFLG .EQ. -1) RETURN
        CALL FILCAN(PSFILE,NLET,NULL,NULL,PSFILE,DATEXC,IRTFLG)
	NLET2 = NLET

#ifdef SP_SUN4
	OPEN(LUNPOS,FILE = PSFILE,FORM = 'FORMATTED',STATUS = 'NEW',
     &       IOSTAT = IER)
#else
	OPEN(LUNPOS,FILE = PSFILE,FORM = 'FORMATTED',STATUS = 'NEW',
C     &       CARRIAGECONTROL='LIST',IOSTAT = IER)
     &       IOSTAT = IER)
#endif
C        IF (IER .NE. 0) GOTO 8
	
d63 1
a63 1
1150	FORMAT(/'  Density range: ',G12.4,'...',G12.4)
d68 1
a68 1
900     FORMAT('  (To reverse contrast, make max < min.)')
d70 1
a70 1
     &     'Enter min. and max. densities for thresholding (or <CR>)',
d88 1
a88 1
1151	FORMAT(/,'  Density values set: ',G12.4,'....',G12.4)
d95 2
a96 2
	IF (RATIM .GE. RATPA ) THEN
	    WIDTH = 18.0
d98 1
a98 1
	    WIDTH = 23.0 * FLOAT(NX0 / ISKIP) / FLOAT(NY0)
d103 2
a104 2
1600	FORMAT('  Default image size is ',F5.2,' cm (',
     &     F5.2,' in) by ', F5.2,' cm (',F5.2,' in)')
d106 2
a107 2
        CALL RDPRM(QWIDTH,NOOP,ILOOP,
     &      'Enter desired width in cm (OR <CR>)')
d114 1
a114 1
902     FORMAT('  Selected width: ',F5.2,' cm')
d116 4
a119 2
        CALL RDPRMI(IDBG,NDUM,NOOP,ILOOP,
     &  'Enter background value 0 (black) - 255 (white), (-1 - skip)')
d156 3
a158 1
            WRITE(LUNPOS,91) FILNAM(1:NLET1),DATEXC(1:3),PSFILE(1:NLET2)
d164 1
a164 1
               CALL REDLIN(LUNIM,FARRAY,NSAM,IY)
d168 1
a168 1
	    IF (NSLICE .GT. 1) WRITE(NOUT,*) ' Slice:',IZ
d183 1
a183 1
        CLOSE(LUNIM)
d186 81
a266 1
        CALL RDPRMC(YN,NA,.TRUE.,'PRINT NOW? (Y/N)',NULL,IRTFLG)
d268 6
a273 2
        IF (YN .NE. 'N' .AND. YN .NE. 'n') THEN
C         THIS WILL HAVE TO BE ALTERED AT DIFFERENT SITES!!!! 
d275 3
a277 3
          WRITE(NOUT,*) ' WARNING: SITE SPECIFIC COMMAND IN COPYPOS'
          IF (ONUNIX) THEN
            LINE = 'lpr -h ' // PSFILE
d279 2
a280 1
            LINE = 'PRINT/NOFLAG/QUE=SPIDER_POST_QUE ' // PSFILE
d282 6
a287 3
          CALL CSVMS(LINE,IERR)
          WRITE(NOUT,*) ' '
        ENDIF
d289 2
a290 3
        RETURN  
	END
#endif
@


1.12
log
@ifdef around error to compile f90
@
text
@d24 2
@


1.11
log
@change BYTE to INTEGER*1
@
text
@d11 1
d13 9
d211 1
a211 1

@


1.10
log
@Remove CARRIAGECONTROL for F90
@
text
@d24 1
a24 1
        LOGICAL*1      BBUF
@


1.9
log
@CHANGED COMMON OPSYS
@
text
@d6 1
d24 1
a24 1
        BYTE           BBUF
d59 2
a60 1
     &       CARRIAGECONTROL='LIST',IOSTAT = IER)
d157 1
a157 1
91          FORMAT(' ( Image: ',A,'.'A,'  Postscript: 'A,') show')
@


1.8
log
@changed <cp po> to <cp to post>
@
text
@a12 1
#ifdef SP_UNIX
a13 3
#else
        INCLUDE        'COMMON1:CMBLOCK.INC'
#endif
d20 2
a21 2
        LOGICAL ONSUN,ONUNIX
        COMMON /OPSYS/  ONSUN,ONUNIX
@


1.7
log
@changed <CP> to <CP TO> or <CP FROM>
@
text
@d38 1
a38 1
5	NLET1 = LNBLNK(FILNAM)
@


1.6
log
@carriage control removed on sun
@
text
@d11 1
a11 1
        SUBROUTINE COPYPOS(LUNIM,LUNPOS)
d22 1
a22 1
        COMMON /COMMUN/ INFILE,PSFILE,LINE
d29 1
a29 1
	CHARACTER *80  INFILE,PSFILE
d38 1
a38 12
	WRITE(NOUT,1000)
1000	FORMAT('  SPIDER IMAGE FILE TO POSTSCRIPT IMAGE CONVERSION'/)

5       CALL FILERD(INFILE,NLET,NULL,'INPUT',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        NLET1=NLET
        CALL OPENF(INFILE,LUNIM,NSAM,NROW,'OLD',NF,NSLICE)
        IF (NF .NE. 2) THEN
           CALL ERRT(18,'COPYPOS',NE)
           GOTO 5
        ENDIF

d51 1
a51 1
        
d53 3
a55 2
        IF (IRTFLG .EQ. -1) GOTO 5
        CALL FILCAN(PSFILE,NLET2,NULL,NULL,PSFILE,DATEXC,IRTFLG)
d64 1
a64 1
        IF (IER .NE. 0) GOTO 8
d158 1
a158 1
            WRITE(LUNPOS,91) INFILE(1:NLET1),DATEXC(1:3),PSFILE(1:NLET2)
@


1.5
log
@used list carriage-control
@
text
@d59 1
d67 1
d69 3
d73 1
@


1.4
log
@fixed nlet2
@
text
@d67 1
a67 1
     &       IOSTAT = IER)
@


1.3
log
@put in encapsulation comments
@
text
@d64 1
a64 2
        CALL FILCAN(PSFILE,NLET,NULL,NULL,PSFILE,DATEXC,IRTFLG)
        NLET2 = NLET + 2
d67 1
a67 2
     &      CARRIAGECONTROL='FORTRAN', IOSTAT = IER)
c     &       IOSTAT = IER)
a68 1
    
d127 19
a145 15
	WRITE(LUNPOS,*) '%!PS-Adobe-2.0 EPSF-2.0'
	WRITE(LUNPOS,*) '%%Title:',PSFILE(1:NLET2)
	WRITE(LUNPOS,*) '%%Creator: SPIDER copypos (CP PO)'
	WRITE(LUNPOS,*) '%%Pages: 1'
	WRITE(LUNPOS,*) '%%DocumentFonts:'
	WRITE(LUNPOS,*) '%%EndComments'
	WRITE(LUNPOS,*) '%%EndProlog'
	WRITE(LUNPOS,*) ' '
	WRITE(LUNPOS,*) '% remember original state'
	WRITE(LUNPOS,*) ' /origstate save def'
	WRITE(LUNPOS,*) ' '

	WRITE(LUNPOS,*) '% build a temporary dictionary'
	WRITE(LUNPOS,*) ' 20 dict begin'
	WRITE(LUNPOS,*) ' '
d147 4
a150 3
	WRITE(LUNPOS,*) ' /Helvetica findfont '
	WRITE(LUNPOS,*) ' 12 scalefont setfont '
	WRITE(LUNPOS,*) ' '
@


1.2
log
@cpp_lines_added
@
text
@d66 1
d68 2
a69 1
     &       IOSTAT = IER)
d130 16
a145 2
	WRITE(LUNPOS,*) ' % Postscript file produced by copypos %'
       
d148 1
d174 11
a184 2
	WRITE(LUNPOS,*) ' % COPYPOS successfull %'

d195 1
a195 1
            LINE = 'lpr ' // PSFILE
@


1.1
log
@Initial revision
@
text
@d13 3
d17 1
@
