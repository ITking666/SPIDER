head	1.15;
access;
symbols
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.11
	prec_CA:1.11
	noindx:1.11
	Bproc:1.11
	oct21:1.11
	last77:1.11;
locks; strict;
comment	@c @;


1.15
date	2006.11.03.14.08.26;	author leith;	state dead;
branches;
next	1.14;

1.14
date	2006.11.03.14.07.45;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.18.18.55.13;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.18.14.41.24;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	98.01.27.16.44.30;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.10.17.20.53.07;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	97.10.14.21.19.13;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	96.10.11.20.12.27;	author mladjadj;	state Exp;
branches;
next	1.7;

1.7
date	95.11.28.16.18.29;	author michael;	state Exp;
branches;
next	1.6;

1.6
date	95.10.10.19.29.27;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	95.09.26.18.22.43;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	95.08.16.15.19.44;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	95.08.15.14.41.34;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	95.06.22.19.16.07;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	95.06.20.16.37.24;	author mladjadj;	state Exp;
branches;
next	;


desc
@added by util5 library for MR
@


1.15
log
@not ever called
@
text
@
C **********************************************************************
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
C=*                                                                    *
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* This program is distributed in the hope that it will be useful,    *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
C=* General Public License for more details.                           *
C=*                                                                    *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
C=*                                                                    *
C **********************************************************************
C REWRITTEN 7/89  M. RADERMACHER  
                                      
	SUBROUTINE RAD2CALL(LUNI,LUNO,NBUF)
                                                
	COMMON ADUM(80),BUFOPEN(1024),BUF(1)                             

        INCLUDE 'CMBLOCK.INC'                                             

        CHARACTER*81 FILNAM(81)                                         
        COMMON/COMMUN/FILNAM                                           

        CHARACTER*1  NUL,YN,CDUM                                             
        LOGICAL      THRESH,LIFT,MINMAX,RTHRESH                              
        DIMENSION    VALUE(3)                                              

	DATA PI/3.1415926539793/
                                               
        MAXIM = 0
        CALL OPFIL(.TRUE.,FILNAM,LUNI,'O',NSAM,NROW,NSLIC,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        MINMAX=.FALSE.                                                  
        IF (IMAMI.NE.1) MINMAX=.TRUE.                                    
                                                                        
	NSAMH = NSAM/2                                                         
	NROWH = NROW/2                                                         
	KCENT = NSAMH+1                                                        
	ICENT = NROWH+1                                                        
	NOFF1 = NSAM                                                           
        NA=NSAM*NROW
                                                    
	IF(NOFF1+NA.LE.NBUF) GOTO 11                                           
	CALL ERRT(100,'ROT32 ',NE)                                             
	RETURN                                                                 
11      CONTINUE                                                        
                                                                        
        CALL RDPRM2(THEFROM,THETO,NOT_USED,                          
     &     'RANGE OF ALPHA FROM,TO (IN DEGREE)')
                           
        CALL RDPRM(THINC,NOT_USED,'IN INCREMENTS OF')
                
        NINTERVAL=(THETO-THEFROM)/THINC+1.+0.0001                       
        THETO=THEFROM+(NINTERVAL-1)*THINC
                               
        WRITE(NOUT,100) THEFROM,THETO,THINC                             
100     FORMAT(1X,'2D-TRANSFORM CALCULATED FROM ',F12.4,' TO ',         
     &     F12.4,' IN INCREMENTS OF ',F12.4)
                               
        THEFROM=THEFROM/180.*PI                                         
        THINC=THINC/180.*PI                                             
        CALL FILERD(FILNAM,NLET,NUL,'OUTPUT',IRTFLG)                    
        NROWO=NINTERVAL                                                 
        CALL RDPRMI(NSAMO,IDUM,NOT_USED,'X-DIMENSION OF OUTPUT')     
        CALL RDPRM(RMASK,NOT_USED,'RADIUS OF CIRCULAR MASK')         
        CALL RDPRM2(SHX,SHY,NOT_USED,'CENTER OFFSET')                
        CALL RDPRMC(YN,N,.TRUE.,                                        
     &     '(A)VERAGE THRESHOLD,(T)HRESHOLD/(L)IFT/(N)ONE',NUL,IRTFLG)   
        THRESH=.FALSE.                                                  
        LIFT=.FALSE.                                                    
        RTHRESH=.FALSE.                                                 
        IF(YN.EQ.'A') THRESH=.TRUE.                                     
        IF(YN.EQ.'L') LIFT=.TRUE.                                       
        IF(YN.EQ.'T') RTHRESH=.TRUE.                                    
        IF(RTHRESH) CALL RDPRM2                                         
     $      (THRU,THRL,NOT_USED,'UPPER, LOWER THRESHOLD')                
        RMIN=0.                                                        
        IF (LIFT) THEN                                                  
          IF(MINMAX) THEN                                               
            RMIN=1000                                                    
          ELSE                                                          
           RMIN=FMIN                                                    
          ENDIF                                                         
         ENDIF                                                          
                                                                        
	DO  I = 1,NROW                                                       
        L = (I-1)*NSAM+1                                                
        CALL REDLIN(LUNI,BUF(NOFF1+L),NSAM,I)                           
        IF(LIFT.AND.MINMAX)  THEN                                       
           DO  K=0,NSAM-1                                             
           IF(BUF(NOFF1+L+K).LT.RMIN) RMIN=BUF(NOFF1+L+K)               
	   ENDDO
        ENDIF                                                           
        IF(RTHRESH) THEN                                                
           DO   K=0,NSAM-1                                             
           IF(BUF(NOFF1+L+K).LT.THRL) BUF(NOFF1+L+K)=THRL               
           IF(BUF(NOFF1+L+K).GT.THRU) BUF(NOFF1+L+K)=THRU               
	   ENDDO
        ENDIF                                                           
700     FORMAT(' IN:',10E10.4)                                       
	ENDDO
        CLOSE (LUNI)                                                    
                                                                        
         NOFF2=NOFF1+NA                                                 
         IBEND=NSAMO*NROWO                                              
         DO  KK=1,IBEND                                               
         BUF(KK+NOFF2)=0                                                
	 ENDDO
                                                                        
         CALL RADON2E(BUF(NOFF1+1),BUF(NOFF2+1),NA,IBEND,NSAM,NROW,     
     $      NSAMO,NROWO,THEFROM,THINC,NINTERVAL,RMASK,SHX,SHY,THRESH       
     $      ,RMIN)                                                         
        NSLIC=1                                                         
        IFORM=1
                                                         
        MAXIM = 0
        CALL OPFIL(.FALSE.,FILNAM,LUNO,'U',NSAMO,NROWO,NSLIC,
     &             MAXIM,'XXXX',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        NOFF3=NOFF2                                                     
        DO  LL=1,NROWO                                                 
           CALL WRTLIN (LUNO,BUF(NOFF3+1),NSAMO,LL)                        
800        FORMAT(' OUT:',10E10.4)                                      
           NOFF3=NOFF3+NSAMO                                               
	ENDDO
        IRTFLAG=-1                                                      
        VALUE(1)=THEFROM/PI*180.                                        
        VALUE(2)=THETO                                                  
        VALUE(3)=THINC/PI*180.                                          
        NBUF2=3                                                         
        IBUF1=54                                                        
        CALL SETLAB(LUNO,NSAMO,BUFOPEN,IBUF1,NBUF2,VALUE,'U',IRTFLG)    
        CLOSE(LUNO)                                                     

	RETURN                                                                 
	END                                                                    
@


1.14
log
@NLOOP,ILOOP
@
text
@@


1.13
log
@GPL
@
text
@d57 2
a58 1
        NA=NSAM*NROW                                                    
d64 5
a68 3
        CALL RDPRM2(THEFROM,THETO,NLOOP,ILOOP,                          
     $     'RANGE OF ALPHA FROM,TO (IN DEGREE)')                           
        CALL RDPRM(THINC,NLOOP,ILOOP,'IN INCREMENTS OF')                
d70 2
a71 1
        THETO=THEFROM+(NINTERVAL-1)*THINC                               
d74 2
a75 1
     $     F12.4,' IN INCREMENTS OF ',F12.4)                               
d80 3
a82 3
        CALL RDPRMI(NSAMO,IDUM,NLOOP,ILOOP,'X-DIMENSION OF OUTPUT')     
        CALL RDPRM(RMASK,NLOOP,ILOOP,'RADIUS OF CIRCULAR MASK')         
        CALL RDPRM2(SHX,SHY,NLOOP,ILOOP,'CENTER OFFSET')                
d84 1
a84 1
     $     '(A)VERAGE THRESHOLD,(T)HRESHOLD/(L)IFT/(N)ONE',NUL,IRTFLG)   
d92 1
a92 1
     $      (THRU,THRL,NLOOP,ILOOP,'UPPER, LOWER THRESHOLD')                
@


1.12
log
@GPL License added
@
text
@d1 148
@


1.11
log
@cosmetic, f90 formatting, nul in rdprmc
@
text
@a0 122
C REWRITTEN 7/89  M. RADERMACHER  
                                      
	SUBROUTINE RAD2CALL(LUNI,LUNO,NBUF)
                                                
	COMMON ADUM(80),BUFOPEN(1024),BUF(1)                             

        INCLUDE 'CMBLOCK.INC'                                             

        CHARACTER*81 FILNAM(81)                                         
        COMMON/COMMUN/FILNAM                                           

        CHARACTER*1  NUL,YN,CDUM                                             
        LOGICAL      THRESH,LIFT,MINMAX,RTHRESH                              
        DIMENSION    VALUE(3)                                              

	DATA PI/3.1415926539793/
                                               
        MAXIM = 0
        CALL OPFIL(.TRUE.,FILNAM,LUNI,'O',NSAM,NROW,NSLIC,
     &             MAXIM,'INPUT',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        MINMAX=.FALSE.                                                  
        IF (IMAMI.NE.1) MINMAX=.TRUE.                                    
                                                                        
	NSAMH = NSAM/2                                                         
	NROWH = NROW/2                                                         
	KCENT = NSAMH+1                                                        
	ICENT = NROWH+1                                                        
	NOFF1 = NSAM                                                           
        NA=NSAM*NROW                                                    
	IF(NOFF1+NA.LE.NBUF) GOTO 11                                           
	CALL ERRT(100,'ROT32 ',NE)                                             
	RETURN                                                                 
11      CONTINUE                                                        
                                                                        
        CALL RDPRM2(THEFROM,THETO,NLOOP,ILOOP,                          
     $     'RANGE OF ALPHA FROM,TO (IN DEGREE)')                           
        CALL RDPRM(THINC,NLOOP,ILOOP,'IN INCREMENTS OF')                
        NINTERVAL=(THETO-THEFROM)/THINC+1.+0.0001                       
        THETO=THEFROM+(NINTERVAL-1)*THINC                               
        WRITE(NOUT,100) THEFROM,THETO,THINC                             
100     FORMAT(1X,'2D-TRANSFORM CALCULATED FROM ',F12.4,' TO ',         
     $     F12.4,' IN INCREMENTS OF ',F12.4)                               
        THEFROM=THEFROM/180.*PI                                         
        THINC=THINC/180.*PI                                             
        CALL FILERD(FILNAM,NLET,NUL,'OUTPUT',IRTFLG)                    
        NROWO=NINTERVAL                                                 
        CALL RDPRMI(NSAMO,IDUM,NLOOP,ILOOP,'X-DIMENSION OF OUTPUT')     
        CALL RDPRM(RMASK,NLOOP,ILOOP,'RADIUS OF CIRCULAR MASK')         
        CALL RDPRM2(SHX,SHY,NLOOP,ILOOP,'CENTER OFFSET')                
        CALL RDPRMC(YN,N,.TRUE.,                                        
     $     '(A)VERAGE THRESHOLD,(T)HRESHOLD/(L)IFT/(N)ONE',NUL,IRTFLG)   
        THRESH=.FALSE.                                                  
        LIFT=.FALSE.                                                    
        RTHRESH=.FALSE.                                                 
        IF(YN.EQ.'A') THRESH=.TRUE.                                     
        IF(YN.EQ.'L') LIFT=.TRUE.                                       
        IF(YN.EQ.'T') RTHRESH=.TRUE.                                    
        IF(RTHRESH) CALL RDPRM2                                         
     $      (THRU,THRL,NLOOP,ILOOP,'UPPER, LOWER THRESHOLD')                
        RMIN=0.                                                        
        IF (LIFT) THEN                                                  
          IF(MINMAX) THEN                                               
            RMIN=1000                                                    
          ELSE                                                          
           RMIN=FMIN                                                    
          ENDIF                                                         
         ENDIF                                                          
                                                                        
	DO  I = 1,NROW                                                       
        L = (I-1)*NSAM+1                                                
        CALL REDLIN(LUNI,BUF(NOFF1+L),NSAM,I)                           
        IF(LIFT.AND.MINMAX)  THEN                                       
           DO  K=0,NSAM-1                                             
           IF(BUF(NOFF1+L+K).LT.RMIN) RMIN=BUF(NOFF1+L+K)               
	   ENDDO
        ENDIF                                                           
        IF(RTHRESH) THEN                                                
           DO   K=0,NSAM-1                                             
           IF(BUF(NOFF1+L+K).LT.THRL) BUF(NOFF1+L+K)=THRL               
           IF(BUF(NOFF1+L+K).GT.THRU) BUF(NOFF1+L+K)=THRU               
	   ENDDO
        ENDIF                                                           
700     FORMAT(' IN:',10E10.4)                                       
	ENDDO
        CLOSE (LUNI)                                                    
                                                                        
         NOFF2=NOFF1+NA                                                 
         IBEND=NSAMO*NROWO                                              
         DO  KK=1,IBEND                                               
         BUF(KK+NOFF2)=0                                                
	 ENDDO
                                                                        
         CALL RADON2E(BUF(NOFF1+1),BUF(NOFF2+1),NA,IBEND,NSAM,NROW,     
     $      NSAMO,NROWO,THEFROM,THINC,NINTERVAL,RMASK,SHX,SHY,THRESH       
     $      ,RMIN)                                                         
        NSLIC=1                                                         
        IFORM=1
                                                         
        MAXIM = 0
        CALL OPFIL(.FALSE.,FILNAM,LUNO,'U',NSAMO,NROWO,NSLIC,
     &             MAXIM,'XXXX',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        NOFF3=NOFF2                                                     
        DO  LL=1,NROWO                                                 
           CALL WRTLIN (LUNO,BUF(NOFF3+1),NSAMO,LL)                        
800        FORMAT(' OUT:',10E10.4)                                      
           NOFF3=NOFF3+NSAMO                                               
	ENDDO
        IRTFLAG=-1                                                      
        VALUE(1)=THEFROM/PI*180.                                        
        VALUE(2)=THETO                                                  
        VALUE(3)=THINC/PI*180.                                          
        NBUF2=3                                                         
        IBUF1=54                                                        
        CALL SETLAB(LUNO,NSAMO,BUFOPEN,IBUF1,NBUF2,VALUE,'U',IRTFLG)    
        CLOSE(LUNO)                                                     

	RETURN                                                                 
	END                                                                    
@


1.10
log
@H
@
text
@d1 8
a8 10
C REWRITTEN 7/89  M. RADERMACHER                                        
	SUBROUTINE RAD2CALL                                                    
     1  (LUNI,LUNO,NBUF)                                                
	COMMON ADUM (80),BUFOPEN(1024),BUF(1)                             
#ifdef SP_UNIX                                                          
      INCLUDE 'CMBLOCK.INC'                                             
#else                                                                   
        INCLUDE 'COMMON1:CMBLOCK.INC'                                   
#endif                                                                  
        COMMON /COMMUN/FILNAM                                           
d10 13
a22 7
        CHARACTER*1 NUL,YN                                              
        LOGICAL THRESH,LIFT,MINMAX,RTHRESH                              
        DIMENSION VALUE(3)                                              
	DATA PI/3.1415926539793/                                               
        CALL FILERD(FILNAM,NLET,NUL,'INPUT',IRTFLG)                     
        CALL OPENFB(BUFOPEN,FILNAM,LUNI,NSAM,NROW,'OLD',NF,NSLIC)       
        IF(NF.NE.2) CALL ERRT(18,'RADON2D',NE)                          
d24 1
a24 1
        IF(IMAMI.NE.1) MINMAX=.TRUE.                                    
d38 1
a38 1
     $  'RANGE OF ALPHA FROM,TO (IN DEGREE)')                           
d44 1
a44 1
     $  F12.4,' IN INCREMENTS OF ',F12.4)                               
d53 1
a53 1
     $  '(A)VERAGE THRESHOLD,(T)HRESHOLD/(L)IFT/(N)ONE',DUMMY,IRTFLG)   
d61 3
a63 3
     $  (THRU,THRL,NLOOP,ILOOP,'UPPER, LOWER THRESHOLD')                
         RMIN=0.                                                        
         IF(LIFT) THEN                                                  
d65 1
a65 1
           RMIN=1000                                                    
d96 2
a97 2
     $   NSAMO,NROWO,THEFROM,THINC,NINTERVAL,RMASK,SHX,SHY,THRESH       
     $   ,RMIN)                                                         
d99 7
a105 2
        IFORM=1                                                         
        CALL OPENFB(BUFOPEN,FILNAM,LUNO,NSAMO,NROWO,'UNKNOWN',NF,NSLIC) 
d108 3
a110 3
        CALL WRTLIN (LUNO,BUF(NOFF3+1),NSAMO,LL)                        
800     FORMAT(' OUT:',10E10.4)                                      
        NOFF3=NOFF3+NSAMO                                               
d120 1
@


1.9
log
@*** empty log message ***
@
text
@d81 1
a81 1
700     FORMAT(1H ,'IN:',10E10.4)                                       
d100 1
a100 1
800     FORMAT(1H ,'OUT:',10E10.4)                                      
@


1.8
log
@buf(5000000) to buf(1) in common block
@
text
@d67 1
a67 1
	DO 50 I = 1,NROW                                                       
d71 1
a71 1
           DO 51 K=0,NSAM-1                                             
d73 1
a73 1
51         CONTINUE                                                     
d76 1
a76 1
           DO 52 K=0,NSAM-1                                             
d79 1
a79 1
52         CONTINUE                                                     
d82 1
a82 1
50	CONTINUE                                                             
d87 1
a87 1
         DO 44 KK=1,IBEND                                               
d89 1
a89 1
44       CONTINUE                                                       
d98 1
a98 1
        DO 5 LL=1,NROWO                                                 
d102 1
a102 1
5       CONTINUE                                                        
@


1.7
log
@update
@
text
@d4 1
a4 1
	COMMON ADUM (80),BUFOPEN(1024),BUF(200000)                             
@


1.6
log
@remove a char*81 filnam(81) var from common/commun block
@
text
@d1 112
a112 141
C++*******************************************************************
C
C $$ RADON2D.FOR   CALCULATE THE 2D RADON TRANSFORM OF AN IMAGE
C
C
C     THIS SUBROUTINE WILL ROTATE AN IMAGE BY AN ARBITRARY ANGLE OF
C     DEGREE BETWEEN 0 AND 360 AND SUM OVER ALL COLUMNS AFTER 
C     ROTATION.  
C
C     CALL RADON2D(LUNI,LUNO,NBUF)
C       LUNI         LOGICAL UNIT NUMBER OF INPUT IMAGE
C       LUNO         LOGICAL UNIT NUMBER OF OUTPUT IMAGE
C       NBUF         LENGTH OF BUFFER ARRAY AVAILABLE
C
C              POSITIVE THETA: COUNTER-CLOCKWISE ROTATION
C                              (MATHEMATICALLY POSITIVE DIRECTION)
C
C REWRITTEN 7/89  Michael Radermacher
C--*******************************************************************
C
C
	SUBROUTINE RAD2CALL 
     1  (LUNI,LUNO,NBUF)
	COMMON ADUM (80),BUFOPEN(1024),BUF(60000)
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
        COMMON /COMMUN/FILNAM
        CHARACTER*81 FILNAM                
        CHARACTER*1 NUL,YN
        LOGICAL THRESH,LIFT,MINMAX,RTHRESH
        DIMENSION VALUE(3)
	DATA PI/3.1415926539793/
C                    
        CALL FILERD(FILNAM,NLET,NUL,'INPUT$',IRTFLG)
        CALL OPENFB(BUFOPEN,FILNAM,LUNI,NSAM,NROW,'OLD',NF,NSLIC)
        IF(NF.NE.2) CALL ERRT(18,'RADON2D',NE)
        MINMAX=.FALSE.
        IF(IMAMI.NE.1) MINMAX=.TRUE.
 
	NSAMH = NSAM/2
	NROWH = NROW/2
	KCENT = NSAMH+1
	ICENT = NROWH+1
C
	NOFF1 = NSAM 
        NA=NSAM*NROW
	IF(NOFF1+NA.LE.NBUF) GOTO 11
	CALL ERRT(100,'ROT32 ',NE)
	RETURN             
11      continue

C towards the user the angle in the 2D projection is referred to as 
C alpha.
c within this program its called theta (historical reasons).
c
        CALL RDPRM2(THEFROM,THETO,NLOOP,ILOOP,
     $  'RANGE OF ALPHA FROM,TO (IN DEGREE)$')
        CALL RDPRM(THINC,NLOOP,ILOOP,'IN INCREMENTS OF$')
        NINTERVAL=(THETO-THEFROM)/THINC+1.+0.0001
        THETO=THEFROM+(NINTERVAL-1)*THINC
        WRITE(NOUT,100) THEFROM,THETO,THINC
100     FORMAT(1X,'2D-TRANSFORM CALCULATED FROM ',F12.4,' TO ',
     $  F12.4,' IN INCREMENTS OF ',F12.4)
        THEFROM=THEFROM/180.*PI
        THINC=THINC/180.*PI
        CALL FILERD(FILNAM,NLET,NUL,'OUTPUT$',IRTFLG)
        NROWO=NINTERVAL
        CALL RDPRMI(NSAMO,IDUM,NLOOP,ILOOP,'X-DIMENSION OF OUTPUT$')
        CALL RDPRM(RMASK,NLOOP,ILOOP,'RADIUS OF CIRCULAR MASK$')
        CALL RDPRM2(SHX,SHY,NLOOP,ILOOP,'CENTER OFFSET$')
        CALL RDPRMC(YN,N,.TRUE.,
     $  '(A)verage threshold,(T)hreshold/(L)ift/(N)one',DUMMY,IRTFLG)
        THRESH=.FALSE.
        LIFT=.FALSE.
        RTHRESH=.FALSE.
        IF(YN.EQ.'A') THRESH=.TRUE.
        IF(YN.EQ.'L') LIFT=.TRUE.
        IF(YN.EQ.'T') RTHRESH=.TRUE.
        IF(RTHRESH) CALL RDPRM2
     $  (THRU,THRL,NLOOP,ILOOP,'UPPER, LOWER THRESHOLD$')
C READ INPUT IMAGE:
         RMIN=0.
         IF(LIFT) THEN
          IF(MINMAX) THEN
           RMIN=1000
          ELSE
           RMIN=FMIN
          ENDIF
         ENDIF
      
	DO 50 I = 1,NROW 
        L = (I-1)*NSAM+1
        CALL REDLIN(LUNI,BUF(NOFF1+L),NSAM,I)  
        IF(LIFT.AND.MINMAX)  THEN
           DO 51 K=0,NSAM-1
           IF(BUF(NOFF1+L+K).LT.RMIN) RMIN=BUF(NOFF1+L+K)
51         CONTINUE
        ENDIF    
        IF(RTHRESH) THEN 
           DO 52 K=0,NSAM-1
           IF(BUF(NOFF1+L+K).LT.THRL) BUF(NOFF1+L+K)=THRL
           IF(BUF(NOFF1+L+K).GT.THRU) BUF(NOFF1+L+K)=THRU
52         CONTINUE
        ENDIF
c        WRITE(NDAT,700) (BUF(NOFF1+K+L-1),K=1,NSAM)
700     FORMAT(1H ,'IN:',10E10.4)
50	CONTINUE
        CLOSE (LUNI)

         NOFF2=NOFF1+NA 
         IBEND=NSAMO*NROWO
         DO 44 KK=1,IBEND
         BUF(KK+NOFF2)=0
44       CONTINUE

         CALL RADON2E(BUF(NOFF1+1),BUF(NOFF2+1),NA,IBEND,NSAM,NROW,
     $   NSAMO,NROWO,THEFROM,THINC,NINTERVAL,RMASK,SHX,SHY,THRESH 
     $   ,RMIN)
        NSLIC=1
        IFORM=1
        CALL OPENFB(BUFOPEN,FILNAM,LUNO,NSAMO,NROWO,'UNKNOWN',NF,NSLIC)
        NOFF3=NOFF2
        DO 5 LL=1,NROWO
        CALL WRTLIN (LUNO,BUF(NOFF3+1),NSAMO,LL)
c        WRITE(NDAT,800) (BUF(NOFF3+K+LL-1),K=1,NSAM)
800     FORMAT(1H ,'OUT:',10E10.4)
        NOFF3=NOFF3+NSAMO
5       CONTINUE
        IRTFLAG=-1
        VALUE(1)=THEFROM/PI*180. 
        VALUE(2)=THETO 
        VALUE(3)=THINC/PI*180.
        NBUF2=3
        IBUF1=54
        CALL SETLAB(LUNO,NSAMO,BUFOPEN,IBUF1,NBUF2,VALUE,'U',IRTFLG)
        CLOSE(LUNO)
	RETURN
	END
@


1.5
log
@new version from MR
@
text
@d31 1
a31 1
        CHARACTER*81 FILNAM(81)                
@


1.4
log
@added prepocessor flag around cmblock
@
text
@d3 1
a3 1
C $$RAD2CALL CALCULATE THE 2D RADON TRANSFORM OF AN IMAGE
d22 3
a24 1
	SUBROUTINE RAD2CALL(LUNI,LUNO,NBUF)
d26 1
a26 1
      INCLUDE 'CMBLOCK.INC'
d28 1
a28 1
      INCLUDE 'COMMON1:CMBLOCK.INC'
a29 2
	
	COMMON ADUM (80),BUFOPEN(1024),BUF(60000)
d33 1
a33 1
        LOGICAL THRESH,LIFT,MINMAX
d55 3
a57 3
C       towards the user the angle in the 2D projection is referred 
C       to as alpha.
c       within this program its called theta (historical reasons).
d75 1
a75 1
     $  'THRESHOLD/LIFT/NONE (Y/L/N)',DUMMY,IRTFLG)
d78 2
a79 1
        IF(YN.EQ.'Y') THRESH=.TRUE.
d81 4
a84 2
	
C       READ INPUT IMAGE:
d102 7
a108 2

        WRITE(NDAT,700) (BUF(NOFF1+K+L-1),K=1,NSAM)
d128 1
a128 1
        WRITE(NDAT,800) (BUF(NOFF3+K+LL-1),K=1,NSAM)
a141 1

@


1.3
log
@changes by MR
@
text
@d22 7
a28 2
	SUBROUTINE RAD2CALL 
     1  (LUNI,LUNO,NBUF)
a29 1
        INCLUDE 'COMMON1:CMBLOCK.INC'
@


1.2
log
@added CNO_SAVE
@
text
@d3 1
a3 1
C $$ RADON2D.FOR   CALCULATE THE 2D RADON TRANSFORM OF AN IMAGE
d7 2
a8 1
C     DEGREE BETWEEN 0 AND 360 AND SUM OVER ALL COLUMNS AFTER ROTATION.  
d24 1
a24 5
	COMMON ADUM (80), BUF(60000)

#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
a25 2
#endif
	
a31 1
CNO_SAVE
d34 1
a34 1
        CALL OPENFB(BUF,FILNAM,LUNI,NSAM,NROW,'OLD',NF,NSLIC)
d51 3
a53 2
C towards the user the angle in the 2D projection is referred to as alpha.
c within this program its called theta (historical reasons).
d76 2
a77 1
C READ INPUT IMAGE:
d96 1
a96 1
C..        WRITE(NDAT,700) (BUF(NOFF1+K+L-1),K=1,NSAM)
d112 1
a112 1
        CALL OPENFB(BUF,FILNAM,LUNO,NSAMO,NROWO,'UNKNOWN',NF,NSLIC)
d116 1
a116 1
C..        WRITE(NDAT,800) (BUF(NOFF3+K+LL-1),K=1,NSAM)
d126 1
a126 1
        CALL SETLAB(LUNO,NSAMO,BUF,IBUF1,NBUF2,VALUE,'U',IRTFLG)
d130 1
@


1.1
log
@Initial revision
@
text
@d37 1
@
