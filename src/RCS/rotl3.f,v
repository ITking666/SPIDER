head	1.12;
access;
symbols
	pre_mrcs:1.12
	healthdept_2018:1.12
	pre_getangas:1.11
	GPL2010:1.11
	pre_GPL2010:1.10
	pre_var_equation:1.10
	pre_fftwrings:1.10
	pre_opfiles:1.10
	src:1.10
	best-code:1.10
	x-named-regs:1.10
	x:1.10
	v13-00:1.10
	pre_GPL:1.8
	prec_CA:1.8
	noindx:1.8
	Bproc:1.4
	oct21:1.4
	last77:1.4;
locks; strict;
comment	@c @;


1.12
date	2018.10.03.14.34.15;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.24.13.26.48;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.20.28.37;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.18.20.02;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.07.19.12.13;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.07.18.14.47;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.14.14.12.30;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.03.20.51.47;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.02.11.19.42.19;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.10.14.21.19.40;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.02.16.19.04.45;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.02.16.16.08.11;	author pawel;	state Exp;
branches;
next	;


desc
@part of RT 3L
@


1.12
log
@email_health_dept
@
text
@C++*********************************************************************
C
C ROTL3.F
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  ROTL3(LUN2,Q1,NSAM,NROW,NSLICE,X1,X2,ALPHA)
C
C  ROTATE ABOUT LINE WITH TRI-LINEAR INTERPOLATION
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

         SUBROUTINE ROTL3(LUN2,Q1,NSAM,NROW,NSLICE,X1,X2,ALPHA)

         DIMENSION  Q1(NSAM,NROW,NSLICE)
         DIMENSION  Q2(NSAM)
         DIMENSION  X1(3),X2(3)

         DOUBLE PRECISION  AV,R1(3,3),R2(3,3),R3(3,3),QR(3),DX,DY,DZ
	 PARAMETER (QUADPI = 3.141592653589793238462643383279502884197)
	 PARAMETER (RAD_TO_DGR = (180.0/QUADPI))

	x=x2(1)-x1(1)
	y=x2(2)-x1(2)
	z=x2(3)-x1(3)
        IF(ALPHA.EQ.0.0.OR.(X.EQ.0.0.AND.Y.EQ.0.0.AND.Z.EQ.0.0)) THEN
           IBUF=0
           DO IZ=1,NSLICE
              DO IY=1,NROW
                 IBUF=IBUF+1
                 CALL WRTLIN(LUN2,Q1(1,IY,IZ),NSAM,IBUF)
	      ENDDO
	   ENDDO
           RETURN
        ENDIF

	PSI   = -RAD_TO_DGR*ATAN2(Y,X)
	THETA = RAD_TO_DGR*ATAN2(Z,SQRT(X*X+Y*Y))
	CALL  BLDR(R1,PSI,THETA,90.0)
	CALL  BLDR(R2,0.0,ALPHA,0.0)

         DO I=1,3
            DO J=1,3
               R3(J,I) = 0.0
               DO K=1,3
                  R3(J,I)=R3(J,I)+R2(K,I)*R1(J,K)
	       ENDDO
	    ENDDO
	 ENDDO
         DO I=1,3
            DO J=1,3
               R2(J,I)=0.0
               DO K=1,3
                  R2(J,I)=R2(J,I)+R1(I,K)*R3(J,K)
	       ENDDO
	    ENDDO
	 ENDDO

	IBUF=0
	DO IZ=1,NSLICE
	   ZZ=IZ-X1(3)
	   DO IY=1,NROW
	      YY=IY-X1(2)
               DO 5  IX=1,NSAM
                 XX = IX-X1(1)

                 QR(1)=R2(1,1)*XX+R2(2,1)*YY+R2(3,1)*ZZ
                 QR(2)=R2(1,2)*XX+R2(2,2)*YY+R2(3,2)*ZZ
                 QR(3)=R2(1,3)*XX+R2(2,3)*YY+R2(3,3)*ZZ
                 QR(1)=QR(1)+X1(1)
                 QR(2)=QR(2)+X1(2)
                 QR(3)=QR(3)+X1(3)

                  IOX=QR(1)
                  DX=QR(1)-IOX
                  DX=DMAX1(DX,1.0D-5)
                  IOY=QR(2)
                  DY=QR(2)-IOY
                  DY=DMAX1(DY,1.0D-5)
                  IOZ=QR(3)
                  DZ=QR(3)-IOZ
                  DZ=DMAX1(DZ,1.0D-5)

                  IF(IOX.GE.1.AND.IOX.LT.NSAM)  THEN
                     IF(IOY.GE.1.AND.IOY.LT.NROW)  THEN
                        IF(IOZ.GE.1.AND.IOZ.LT.NSLICE)  THEN

C     Q2(IX)=
C     &  +(1-DX)*(1-DY)*(1-DZ)*Q1(IOX,IOY,IOZ)
C     &  +   DX *(1-DY)*(1-DZ)*Q1(IOX+1,IOY,IOZ)
C     &  +(1-DX)*   DY *(1-DZ)*Q1(IOX,IOY+1,IOZ)
C     &  +(1-DX)*(1-DY)*   DZ *Q1(IOX,IOY,IOZ+1)
C     &  +   DX *   DY *(1-DZ)*Q1(IOX+1,IOY+1,IOZ)
C     &  +   DX *(1-DY)*   DZ *Q1(IOX+1,IOY,IOZ+1)
C     &  +(1-DX)*   DY *   DZ *Q1(IOX,IOY+1,IOZ+1)
C     &  +   DX *   DY *   DZ *Q1(IOX+1,IOY+1,IOZ+1)
C
C faster version :
C
                        A1 = Q1(IOX,IOY,IOZ)
                        A2 = Q1(IOX+1,IOY,IOZ) - Q1(IOX,IOY,IOZ)
                        A3 = Q1(IOX,IOY+1,IOZ) - Q1(IOX,IOY,IOZ)
                        A4 = Q1(IOX,IOY,IOZ+1) - Q1(IOX,IOY,IOZ)
         A5 = Q1(IOX,IOY,IOZ) - Q1(IOX+1,IOY,IOZ) - Q1(IOX,IOY+1,IOZ)
     &   + Q1(IOX+1,IOY+1,IOZ)
         A6 = Q1(IOX,IOY,IOZ) - Q1(IOX+1,IOY,IOZ) - Q1(IOX,IOY,IOZ+1)
     &   + Q1(IOX+1,IOY,IOZ+1)
         A7 = Q1(IOX,IOY,IOZ) - Q1(IOX,IOY+1,IOZ) - Q1(IOX,IOY,IOZ+1)
     &   + Q1(IOX,IOY+1,IOZ+1)
         A8 = Q1(IOX+1,IOY,IOZ) + Q1(IOX,IOY+1,IOZ)+ Q1(IOX,IOY,IOZ+1)
     &   - Q1(IOX,IOY,IOZ)- Q1(IOX+1,IOY+1,IOZ) - Q1(IOX+1,IOY,IOZ+1)
     &   - Q1(IOX,IOY+1,IOZ+1) + Q1(IOX+1,IOY+1,IOZ+1)
         Q2(IX)= A1 + DZ*(A4 + A6*DX + (A7 + A8*DX)*DY) + A3*DY
     &   + DX*(A2 + A5*DY)
C**********************************************************
                        GOTO  5
                     ENDIF
                  ENDIF
               ENDIF

               Q2(IX)=Q1(IX,IY,IZ)
5              CONTINUE
	       IBUF = IBUF+1
	       CALL WRTLIN(LUN2,Q2,NSAM,IBUF)
	   ENDDO
	ENDDO
	END
@


1.11
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.10
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.9
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
a29 1
C **************************************************************************
a36 1
C--************************************************************************
@


1.8
log
@cosmetic
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d48 1
@


1.7
log
@quadratic interp call added
@
text
@d37 2
a38 2
           DO    IZ=1,NSLICE
              DO    IY=1,NROW
d40 1
a40 1
                 CALL  WRTLIN(LUN2,Q1(1,IY,IZ),NSAM,IBUF)
d46 2
a47 2
	PSI=-RAD_TO_DGR*ATAN2(Y,X)
	THETA=RAD_TO_DGR*ATAN2(Z,SQRT(X*X+Y*Y))
d51 4
a54 4
         DO    I=1,3
            DO    J=1,3
               R3(J,I)=0.0
               DO    K=1,3
d59 2
a60 2
         DO    I=1,3
            DO    J=1,3
d62 1
a62 1
               DO    K=1,3
d69 1
a69 1
	DO    IZ=1,NSLICE
d71 1
a71 1
	   DO    IY=1,NROW
d73 2
a74 2
               DO  5  IX=1,NSAM
                 XX=IX-X1(1)
a75 5
C                DO  3  I3=1,3
C                QR(I3)=0.0
C                DO  3  I2=1,3
C3               QR(I3)=QR(I3)+R2(I2,I3)*IM(I2)

d132 2
a133 2
	       IBUF=IBUF+1
	       CALL  WRTLIN(LUN2,Q2,NSAM,IBUF)
@


1.6
log
@psi=-rad_to_dgr*atan2d(y,x)
@
text
@d3 1
a3 1
C ROTS3.F
d15 1
a15 1
C  ROTL3(LUN2,Q1,Q2,NSAM,NROW,NSLICE,X1,X2,ALPHA)
d17 2
d22 1
a22 1
         SUBROUTINE  ROTL3(LUN2,Q1,Q2,NSAM,NROW,NSLICE,X1,X2,ALPHA)
d24 2
a25 1
         DIMENSION  Q1(NSAM,NROW,NSLICE),Q2(NSAM)
a45 7
C       AV=0.0
C       DO  1  IZ=KLZ,KNZ
C       DO  1  IY=KLY,KNY
C       DO  1  IX=KLX,KNX
C1      AV=AV+Q1(IX,IY,IZ)
C       AV=AV/FLOAT(KNX-KLX+1)/FLOAT(KNY-KLY+1)/FLOAT(KNZ-KLZ+1)

a49 2
C  -1
C R   U(ALPHA) R
a134 1
C              Q2(IX)=AV
@


1.5
log
@cosmetic
@
text
@d50 1
a50 1
	PSI=-RAD_TO_DGR*ATAN2(Y,Y)
@


1.4
log
@trig
@
text
@d3 1
a3 1
C $$ ROTS3.FOR
d15 1
a16 1
C
d19 3
a21 5
C
C $$ ROTS3.FOR
C
         SUBROUTINE  ROTL3
     &   (LUN2,Q1,Q2,NSAM,NROW,NSLICE,X1,X2,ALPHA)
d24 1
a24 1
C	DIMENSION  IM(3)
d26 3
a28 4
	PARAMETER (QUADPI = 3.141592653589793238462643383279502884197)
	PARAMETER (RAD_TO_DGR = (180.0/QUADPI))
C         EQUIVALENCE  (IM(1),IX),(IM(2),IY),(IM(3),IZ)
C
d32 18
a49 18
         IF(ALPHA.EQ.0.0.OR.(X.EQ.0.0.AND.Y.EQ.0.0.AND.Z.EQ.0.0)) THEN
         IBUF=0
         DO    IZ=1,NSLICE
         DO    IY=1,NROW
         IBUF=IBUF+1
         CALL  WRTLIN(LUN2,Q1(1,IY,IZ),NSAM,IBUF)
	 ENDDO
	 ENDDO
         RETURN
         ENDIF
C...
C     AV=0.0
C     DO  1  IZ=KLZ,KNZ
C     DO  1  IY=KLY,KNY
C     DO  1  IX=KLX,KNX
C1    AV=AV+Q1(IX,IY,IZ)
C     AV=AV/FLOAT(KNX-KLX+1)/FLOAT(KNY-KLY+1)/FLOAT(KNZ-KLZ+1)
C...
d56 1
a56 1
C
d58 6
a63 6
         DO    J=1,3
         R3(J,I)=0.0
         DO    K=1,3
         R3(J,I)=R3(J,I)+R2(K,I)*R1(J,K)
	 ENDDO
	 ENDDO
d66 6
a71 4
         DO    J=1,3
         R2(J,I)=0.0
         DO    K=1,3
         R2(J,I)=R2(J,I)+R1(I,K)*R3(J,K)
d73 1
a73 3
	 ENDDO
	 ENDDO
C
d76 32
a107 33
	ZZ=IZ-X1(3)
	DO    IY=1,NROW
	YY=IY-X1(2)
         DO  5  IX=1,NSAM
        XX=IX-X1(1)
C
C         DO  3  I3=1,3
C         QR(I3)=0.0
C         DO  3  I2=1,3
C3        QR(I3)=QR(I3)+R2(I2,I3)*IM(I2)
C
        QR(1)=R2(1,1)*XX+R2(2,1)*YY+R2(3,1)*ZZ
        QR(2)=R2(1,2)*XX+R2(2,2)*YY+R2(3,2)*ZZ
        QR(3)=R2(1,3)*XX+R2(2,3)*YY+R2(3,3)*ZZ
        QR(1)=QR(1)+X1(1)
        QR(2)=QR(2)+X1(2)
        QR(3)=QR(3)+X1(3)
C
         IOX=QR(1)
         DX=QR(1)-IOX
         DX=DMAX1(DX,1.0D-5)
         IOY=QR(2)
         DY=QR(2)-IOY
         DY=DMAX1(DY,1.0D-5)
         IOZ=QR(3)
         DZ=QR(3)-IOZ
         DZ=DMAX1(DZ,1.0D-5)
C
         IF(IOX.GE.1.AND.IOX.LT.NSAM)  THEN
         IF(IOY.GE.1.AND.IOY.LT.NROW)  THEN
         IF(IOZ.GE.1.AND.IOZ.LT.NSLICE)  THEN
C
C
d120 4
a123 4
         A1 = Q1(IOX,IOY,IOZ)
         A2 = Q1(IOX+1,IOY,IOZ) - Q1(IOX,IOY,IOZ)
         A3 = Q1(IOX,IOY+1,IOZ) - Q1(IOX,IOY,IOZ)
         A4 = Q1(IOX,IOY,IOZ+1) - Q1(IOX,IOY,IOZ)
d136 11
a146 11
         GOTO  5
         ENDIF
         ENDIF
         ENDIF
C...
C     Q2(IX)=AV
         Q2(IX)=Q1(IX,IY,IZ)
5        CONTINUE
	IBUF=IBUF+1
	CALL  WRTLIN(LUN2,Q2,NSAM,IBUF)
	ENDDO
@


1.3
log
@*** empty log message ***
@
text
@d28 2
a30 1
CNO_SAVE
d53 4
a56 4
	psi=-atan2d(y,x)
	theta=atan2d(z,sqrt(x*x+y*y))
	call  bldr(r1,psi,theta,90.0)
	call  bldr(r2,0.0,alpha,0.0)
@


1.2
log
@OK.
@
text
@d36 2
a37 2
         DO  8  IZ=1,NSLICE
         DO  8  IY=1,NROW
d39 3
a41 1
8        CALL  WRTLIN(LUN2,Q1(1,IY,IZ),NSAM,IBUF)
d59 2
a60 2
         DO  11  I=1,3
         DO  11  J=1,3
d62 7
a68 4
         DO  11  K=1,3
11       R3(J,I)=R3(J,I)+R2(K,I)*R1(J,K)
         DO  12  I=1,3
         DO  12  J=1,3
d70 5
a74 2
         DO  12  K=1,3
12       R2(J,I)=R2(J,I)+R1(I,K)*R3(J,K)
d77 1
a77 1
	DO  7  IZ=1,NSLICE
d79 1
a79 1
	DO  7  IY=1,NROW
d148 3
a150 1
7	CALL  WRTLIN(LUN2,Q2,NSAM,IBUF)
@


1.1
log
@Initial revision
@
text
@d25 2
a26 1
         DIMENSION  IM(3),X1(3),X2(3)
d68 5
a72 6
         IBUF=0
         DO  7  IZ=1,NSLICE
	ZZ=IZ-Z
         DO  7  IY=1,NROW
	YY=IY-Y
C
d74 1
a74 1
	XX=IX-X
d84 3
a86 3
	QR(1)=QR(1)+X
	QR(2)=QR(2)+Y
	QR(3)=QR(3)+Z
d98 3
a100 3
         IF(IOX.GE.NSAM.AND.IOX.LT.1)  THEN
         IF(IOY.GE.NROW.AND.IOY.LT.1)  THEN
         IF(IOZ.GE.NSLICE.AND.IOZ.LT.1)  THEN
d139 3
a141 3
         IBUF=IBUF+1
7        CALL  WRTLIN(LUN2,Q2,LEX,IBUF)
         END
@
