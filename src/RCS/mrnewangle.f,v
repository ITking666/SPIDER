head	1.23;
access;
symbols
	healthdept_2018:1.23
	pre_getangas:1.20
	GPL2010:1.20
	pre_GPL2010:1.19
	pre_var_equation:1.19
	pre_fftwrings:1.19
	pre_opfiles:1.19
	src:1.19
	best-code:1.19
	x-named-regs:1.19
	x:1.19
	v13-00:1.19
	pre_GPL:1.17
	prec_CA:1.17
	noindx:1.15
	Bproc:1.11
	oct21:1.5
	last77:1.5;
locks; strict;
comment	@c @;


1.23
date	2018.10.03.14.34.10;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2014.02.19.15.17.26;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2014.02.19.15.13.00;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2010.06.24.13.26.15;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.17.19.58.41;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2005.10.17.17.54.55;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.07.08.15.34.15;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.07.07.19.23.11;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2001.07.30.19.09.20;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2001.01.29.21.12.22;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.01.29.20.56.14;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.17.16.02.14;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.04.14.12.30;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.12.14.14.54.47;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.12.07.16.30.51;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.11.23.22.40.12;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	99.11.23.22.37.18;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	99.11.10.23.09.39;	author yuchen;	state Exp;
branches;
next	1.5;

1.5
date	95.10.20.14.21.05;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	94.10.21.10.18.27;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	94.07.22.20.30.15;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.07.42;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.27;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.23
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      
C MRNEWANGL   NLIST FIXED                        AUG 2000 ARDEAN LEITH             
C             CAN HANDLE MISSING KEYS            JUL 2001 ARDEAN LEITH 
C             INCORE LUNDOC                      JUL 2003 ARDEAN LEITH 
C             PROMPTS & DOC FILE HEADERS         FEB 2014 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  MRNEWANGLE(PSI,THETA,PHI)                                           *
C                                                                      *
C  PURPOSE:  USING ANGLES TO CHANGE VOLUME, AND THE TILT ANGLES
C            OF THE SECOND IMAGE SERIES, CALCULATES THE EULERIAN
C            ANGLES OF THIS SECOND SERIES SO IT MAY BE USED IN
C            CONJUNCTION WITH THE ORIGINAL SERIES TO CREATE A
C            3D IMAGE
C                                                                      *
C  PARAMETERS:   PSI,THETA,PHI    ANGLES                               *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

      SUBROUTINE MRNEWANGLE(PSI,THETA,PHI)

      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'

      PARAMETER (MAXKEY=9992)
 
      REAL                  :: A1(3),A2(3),A3(3)
      CHARACTER(LEN=1)      :: NULL = CHAR(0)
      CHARACTER(LEN=MAXNAM) :: ANGFIL,CORFIL
      LOGICAL               :: ADDEXT,ASKNAM,ISOLD,APPEND
      LOGICAL               :: MESSAGE,NEWFILE

      COMMON /DOC_BUF/ DBUF(4,MAXKEY)

      DATA  DTOR/0.017453292/

      DATA  NDOCT,NDOUT/55,56/

C     PREPARE ARRAY FOR ANGLES
      A1(1) = PSI/DTOR
      A1(2) = THETA/DTOR
      A1(3) = PHI/DTOR

C     OPEN INPUT DOC FILE,  OPENDOC CAN CHANGE NDOC
      CALL OPENDOC(ANGFIL,.TRUE.,NLET,NDOCT,NDOC,.TRUE.,
     &             'SECOND SERIES ANGULAR INPUT DOC',
     &             .TRUE.,.FALSE.,.FALSE.,NEWFILE,IRTFLG)
      IF (IRTFLG .NE. 0) RETURN

C     OPEN OUTPUT DOC FILE BUT DO NOT WRITE ANYTHING
      ASKNAM   = .TRUE.
      ADDEXT   = .TRUE.
      ISOLD    = .FALSE.
      APPEND   = .FALSE. 
      MESSAGE  = .TRUE. 
      CALL OPENDOC(CORFIL,ADDEXT,NLET,NDOUT,NDOUTT,ASKNAM,
     &            'CORRECTED ANGULAR OUTPUT DOC',ISOLD,APPEND,MESSAGE,
     &            NEWFILE,IRTFLG)
      IF (IRTFLG .NE. 0) GOTO 9999

      CALL LUNDOCPUTCOM(NDOUTT,
     &   '         PHI          THETA         PSI ', IRTFLG)


C     THE FOLLOWING DOES THE SAME AS 'VO RA'

C     RETRIEVE DBUF FROM DOC FILE
      CALL LUNDOCREDALL(NDOC,DBUF,4,MAXKEY,.TRUE.,NGOT,IRTFLG)
      IF (IRTFLG .NE. 0) GOTO 9999

      A2(1) = 0.0
      A2(3) = 0

      DO K = 1,NGOT
         IF (DBUF(1,K) > 0) THEN
C           KEY EXISTS IN DOC FILE
            A2(2) = DBUF(3,K)

C           ROTATE THE ANGLES
            CALL CALD(A1,A2,A3)

C           OUTPUT THE ANGLES
            !CALL SAVDN1(NDOUT,CORFIL,A3,4,1,0)
            CALL LUNDOCWRTDAT(NDOUTT,K,A3,3,IRTFLG)
          ENDIF
      ENDDO

9999  WRITE(NOUT,*) ' '
      CLOSE(NDOUT)
      CLOSE(NDOCT)

      END
@


1.22
log
@PROMPTS & DOC FILE HEADERS lundoc
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.21
log
@lundoc , output doc file formatting
@
text
@d3 5
a7 4
C                                                                      *
C    MRNEWANGL           NLIST FIXED AUG 2000 ARDEAN LEITH                                                      *
C                        CAN HANDLE MISSING KEYS JUL 2001 ARDEAN LEITH 
C                        INCORE LUNDOC           JUL 2003 ARDEAN LEITH                                            *
d12 1
a12 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
@


1.20
log
@GPL_2010
@
text
@d49 2
a50 2
      DIMENSION                A1(3),A2(3),A3(4)
      CHARACTER * 1            NULL
d52 2
a53 1
      LOGICAL ::               NEWFILE
a60 2
      NULL = CHAR(0)

d72 13
a84 3
      CALL  FILERD(CORFIL,NLET,NULL,
     &      'CORRECTED ANGULAR OUTPUT DOC',IRTFLG)
      IF (IRTFLG.EQ.-1) GOTO 9999
a85 2
C     OPEN OUTPUT DOC FILE BUT DO NOT WRITE ANYTHING
      CALL SAVDN1(NDOUT,CORFIL,A3,0,0,0)
d87 1
a87 1
C     THE FOLLOWING PASSAGE DOES THE SAME AS 'VO RA'
d91 1
d97 1
a97 1
         IF (DBUF(1,K) .GT. 0) THEN
d102 1
a102 4
            CALL CALD(A1,A2,A3(2))

C           SET OUTPUT KEY NUMBER
            A3(1) = K
d105 2
a106 1
            CALL SAVDN1(NDOUT,CORFIL,A3,4,1,0)
a113 1
      RETURN
@


1.19
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.18
log
@HRI GPL License used
@
text
@a7 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.17
log
@opendoc incore paramete
@
text
@d9 24
@


1.16
log
@incore lundoc
@
text
@d55 1
a55 2
      NDOC = NDOCT
      CALL OPENDOC(ANGFIL,.TRUE.,NLET,NDOC,.TRUE.,
d93 1
a93 1
      CLOSE(NDOC)
@


1.15
log
@can handle missing keys now
@
text
@d4 3
a6 3
C    MRNEWANGL           NLIST FIXED AUG 2000 ArDean Leith                                                      *
C                        CAN HANDLE MISSING KEYS JUL 2001 ArDean Leith 
C                                                                      *
a42 1
      DATA  NDOC,NDOUT/55,56/
d45 2
d54 2
a55 1
C     OPEN INPUT DOC FILE 
@


1.14
log
@note added to older recovered version.
@
text
@d4 3
a6 2
C    MRNEWANGLE.F                   NLIST FIXED AUG 2000 ArDean Leith                                                      *
C                                                                     *
d9 1
a9 1
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
d16 1
a16 1
C  MRNEWANGLE(PSI,THETA,PHI)                                                                   *
d24 1
a24 1
C  PARAMETERS:                                                         *
a25 1
C        0         2         3         4         5         6         7 *
d32 1
d34 6
a39 1
      PARAMETER (MAXREG=7)
d41 1
a41 4
      DIMENSION         PLIST(MAXREG)
      DIMENSION         A1(3),A2(3),A3(4)
      CHARACTER * 1     NULL
      CHARACTER * 81    ANGFIL,CORFIL
d53 5
a57 3
      CALL  FILERD(ANGFIL,NLET,NULL,
     &      'SECOND SERIES ANGULAR INPUT DOC',IRTFLG)
      IF (IRTFLG.EQ.-1)  RETURN
d61 1
a61 1
      IF (IRTFLG.EQ.-1)  RETURN
d63 1
a63 1
C     OPEN DOC FILE BUT DO NOT WRITE ANYTHING
d68 21
a88 17
      K    = 0
      K2   = 1
778   LERR = -1
      KP1  = K+1
      CALL UNSAV(ANGFIL,K,NDOC,KP1,PLIST,2,LERR,K2)
      IF (LERR.EQ.0)  THEN
         K     = K+1
         A2(1) = 0
         A2(2) = PLIST(2)
         A2(3) = 0
C        ROTATE THE ANGLES
         CALL CALD(A1,A2,A3(2))
         A3(1) = K
         CALL SAVDN1(NDOUT,CORFIL,A3,4,1,0)
CC       CALL SAVD(NDOUT,A3,3,IRTFLG)
         GOTO 778
      ENDIF
d90 1
a90 1
      WRITE(NOUT,*) ' '
@


1.13
log
@extra call savdn1 removed
@
text
@d4 2
a5 2
C    MRNEWANGLE.F                    NLIST FIXED AUG 2000 ArDean Leith                                                      *
C                                                                      *
d57 3
@


1.12
log
@saved 3 cols of angles
@
text
@d4 1
a4 1
C    MRNEWANGLE.F                    NLIST FIXED AUG 20000 ArDean Leith                                                      *
a56 1
      CALL SAVDN1(NDOUT,CORFIL,A3,0,0,0)
@


1.11
log
@nlist was wrong should only have been 3
@
text
@d4 1
a4 1
C    MRNEWANGLE.F            NLIST FIXED AUG 20000 ArDean Leith                                                      *
d17 1
a17 2
C  PURPOSE:                                                            *
C            USING ANGLES TO CHANGE VOLUME, AND THE TILT ANGLES
d31 2
a32 1
      INCLUDE     'CMBLOCK.INC'
d38 1
a38 1
      CHARACTER * 81    CORFIL
d43 1
a43 1
      NULL=CHAR(0)
d46 7
a52 3
      A1(1)=PSI/DTOR
      A1(2)=THETA/DTOR
      A1(3)=PHI/DTOR
d54 2
a55 2
      CALL  FILERD(CORFIL,NLETI,NULL,
     &      'IMAGE SERIES CORRECTION ',IRTFLG)
d57 1
d59 1
a59 1
C     THE FOLLOWING PASSAGE DOES THE SAME AS VO RA
d65 1
a65 1
      CALL UNSAV(CORFIL,K,NDOC,KP1,PLIST,2,LERR,K2)
d71 1
d74 2
a75 2
         CALL SAVD(NDOUT,A3,3,IRTFLG)
         IF (IRTFLG.EQ.-1) GOTO  5
d79 1
a79 1
5     CALL  SAVDC
d83 1
@


1.10
log
@*** empty log message ***
@
text
@d4 1
a5 1
C                                                                      *
d15 1
a15 1
C                                                                      *
d18 5
a29 2


a31 8

C ***********************************
C  USING ANGLES TO CHANGE VOLUME, AND THE TILT ANGLES
C  OF THE SECOND IMAGE SERIES, CALCULATES THE EULERIAN
C  ANGLES OF THIS SECOND SERIES SO IT MAY BE USED IN
C  CONJUNCTION WITH THE ORIGINAL SERIES TO CREATE A
C  3D IMAGE

d39 1
d41 1
a41 2
      DATA DTOR/0.017453292/
      DATA  NLIST/14/
d43 3
a45 2
	NULL=char(0)
C           PREPARE ARRAY FOR ANGLES
d49 1
d52 8
a59 7
      IF(IRTFLG.EQ.-1)  RETURN
c the following passage does the same as VO RA
	NULL=CHAR(0)
      K=0
      K2=1
778   LERR=-1
      KP1=K+1
d61 10
a70 10
      IF(LERR.EQ.0)  THEN
        K=K+1
        A2(1)=0
        A2(2)=PLIST(2)
        A2(3)=0
        CALL  CALD(A1,A2,A3(2))
        A3(1)=K
        CALL  SAVD(NDOUT,A3,NLIST,IRTFLG)
        IF(IRTFLG.EQ.-1) GOTO  5
        GOTO  778
d72 1
d76 1
@


1.9
log
@header
@
text
@d46 1
a46 1
      DATA  NLIST/4/
d57 1
a57 1
	NULL=char(0)
a73 1
c      PRINT *,LERR
@


1.8
log
@*** empty log message ***
@
text
@d1 26
d28 2
@


1.7
log
@MAXKEY=2000
@
text
@a9 2

      PARAMETER (LV=300)
a10 1
      PARAMETER (MAXKEY=2000)
@


1.6
log
@a
@
text
@a8 1
#ifdef SP_UNIX
a9 3
#else
      INCLUDE     'COMMON1:CMBLOCK.INC'
#endif
d13 1
a13 1
      PARAMETER (MAXKEY=100)
@


1.5
log
@nosave
@
text
@d26 1
a26 1
CNO_SAVE
@


1.4
log
@length of plist in unsav reduced to 2.
@
text
@d26 1
@


1.3
log
@LV set to 300 (number of projections)
@
text
@d25 1
a35 1
      NLIST=4
d40 1
a40 1
      CALL UNSAV(CORFIL,K,NDOC,KP1,PLIST,5,LERR,K2)
@


1.2
log
@cpp_lines_added
@
text
@d15 1
a15 1
      PARAMETER (LV=100)
@


1.1
log
@Initial revision
@
text
@d9 3
d13 1
@
