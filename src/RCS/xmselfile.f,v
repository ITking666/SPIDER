head	1.3;
access;
symbols
	pre_mrcs:1.3
	healthdept_2018:1.3
	pre_getangas:1.2;
locks; strict;
comment	@c @;


1.3
date	2018.10.03.14.51.09;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.25.19.36.27;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.03.14.09.35;	author leith;	state Exp;
branches;
next	;


desc
@@


1.3
log
@email_health_dept
@
text
@C ++********************************************************************
C                                                                      *
C XMSELFILE       NEW                           DEC  2010 ARDEAN LEITH *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                       
C  XMSELFILE()
C                                                                 
C  PURPOSE: CREATES XMIPP SELFILE FROM SPIDER DOCUMENT FILE.
C   
C  
C                                                                    
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

	SUBROUTINE XMSELFILE(LUNDOC,LUNXM)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC' 

 	CHARACTER(LEN=MAXNAM)        :: DOCNAM,FILPAT,FILNAM,XMFILE
 	CHARACTER(LEN=1)             :: NULL = CHAR(0)
        CHARACTER (LEN=12)           :: CDATT
        CHARACTER (LEN=8)            :: CTIMT

        INCLUDE 'F90ALLOC.INC'
        REAL, POINTER                :: DOCBUF(:,:)

        CALL SET_MPI(ICOMM,MYPID,MPIERR) ! SETS ICOMM AND MYPID

C	GET XMIPP OUTPUT FILE NAME PATTERN
        CALL FILERD(FILPAT,NLETP,NULL,'FILE NAME PATTERN~~',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN
        !write(6,*) ' filpat:',filpat(:nletp)

C       OPEN EXISTING SPIDER FORMAT SELECTION DOC FILE
C       MAXX IS 1 + NUM OF REGISTERS SINCE DOCBUF CONTAINS KEY ALSO
        MAXX    = 0
        MAXY    = 0
        CALL GETDOCDAT('SELECTION DOCUMENT',.TRUE.,DOCNAM,
     &                 NDOCIN,.TRUE.,MAXX, MAXY,DOCBUF,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        IF (MAXX < 1 .OR. MAXY < 1) THEN
           CALL ERRT(101,'EMPTY DOC FILE',NDUM)
           GOTO 9999
        ENDIF

C       OPEN FORMATTED, SEQUENTIAL FILE FOR XMIPP SELFILE
        CALL OPAUXFILE(.TRUE.,XMFILE,DATEXC,LUNXM,0,'N',
     &                       'XMIPP SELFILE',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9999

C       WRITE HEADER INTO SELFILE
        IF (MYPID .LE. 0) THEN
            CALL DATE_2K(CDATT)
            CALL MYTIME(CTIMT)
            NLETX = lnblnkn(XMFILE)
            WRITE(LUNXM,90) PRJEXC(1:3),DATEXC(1:3),
     &                       CDATT(1:11),CTIMT,XMFILE(1:NLETX)
 90         FORMAT('# ',A,'/',A,3X,A,' AT ',A,3X,A)
        ENDIF

        DO IKEY = 1,MAXY
           ICOUNT = DOCBUF(1,IKEY)
           IF (ICOUNT > 0) THEN
C             GOT VALID DOC FILE DATA LINE

              IFILE = DOCBUF(2,IKEY)

C             MAKE XMIPP FILE NAME
              CALL FILGET(FILPAT,FILNAM,NLETP,IFILE,IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 9999

C             ADD EXTENSION
              CALL FILNAMANDEXT(FILNAM,DATEXC,FILNAM,NLET,
     &                 .TRUE.,IRTFLG)
              IF (IRTFLG .NE. 0) GOTO 9999

              IF (MYPID <= 0) WRITE(LUNXM,*) FILNAM(:NLET),'  1'

           ENDIF
        ENDDO

9999    CLOSE(LUNXM)

C       DEALLOCATE DOC. FILE MEMORY
        IF (ASSOCIATED(DOCBUF)) DEALLOCATE(DOCBUF)

	END

@


1.2
log
@NDOC --> LUNXM  bug
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.1
log
@Initial revision
@
text
@d79 1
a79 1
            WRITE(NDOC,90) PRJEXC(1:3),DATEXC(1:3),
@
