head	1.15;
access;
symbols
	healthdept_2018:1.15
	pre_getangas:1.14
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.10
	src:1.10
	best-code:1.10
	x-named-regs:1.10
	x:1.10
	v13-00:1.10
	pre_GPL:1.8
	prec_CA:1.8
	noindx:1.8
	Bproc:1.7
	oct21:1.6
	last77:1.6;
locks; strict;
comment	@c @;


1.15
date	2018.10.03.14.34.24;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.24.13.27.06;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.09.12.33.49;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2007.10.10.12.29.58;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2007.10.09.19.04.51;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.20.36.48;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.18.27.15;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.11.14.08.26;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.11.10.23.11.23;	author yuchen;	state Exp;
branches;
next	1.6;

1.6
date	98.02.02.20.37.20;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.10.15.15.14.45;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	94.09.19.15.30.46;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.09.19.14.25.51;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.11.46;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.18;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.15
log
@email_health_dept
@
text
@C++*********************************************************************
C
C    THRESH.F   
C                     ADDED NREPL                 OCT 2007 ARDEAN LEITH  
C                     NREPL BUG                   OCT 2009 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    THRESH(LUN1,LUN2,NSAM,NROW,NSLICE)
C
C    PURPOSE: THRESHOLD AN IMAGE FILE
C
C--********************************************************************

	SUBROUTINE THRESH(LUN1,LUN2,NSAM,NROW,NSLICE)

	INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        COMMON /IOBUF/ BUF(NBUFSIZ)

        CHARACTER(LEN=1) :: ANS,NULL
	REAL             :: B(2,2)
        INTEGER * 8      :: NREPL

	DATA B/0.0,1.0,1.0,0.0/

        NREPL = 0
        FREPL = 0.0

        IF (FCHAR(4:4) .EQ. 'M') THEN
           CALL RDPRMC(ANS,NCHAR,.TRUE.,
     &     'BLANK OUT  (A)BOVE OR (B)ELOW THRESHOLD? (A/B)',NULL,IRT)
           IF (IRT .NE. 0) RETURN

           THR = 1.0
	   CALL RDPRM1S(THR,NOT_USED,'THRESHOLD',IRT)
           IF (IRT .NE. 0) RETURN

 	   ISW = 1
	   IF (ANS .EQ. 'A') ISW = 2

           DO  J=1, NSLICE     
	      DO  I=1,NROW
	         CALL REDLIN(LUN1,BUF,NSAM,(J-1)*NROW+I)

	         DO  K=1,NSAM
	            IF (BUF(K) .LT. THR) THEN 
	               BUF(K) = B(1,ISW)
 	            ELSE 
	               BUF(K) = B(2,ISW)
	            ENDIF
                    IF (BUF(K) > 0.0) NREPL = NREPL + 1
	         ENDDO

                 CALL WRTLIN(LUN2,BUF,NSAM,(J-1)*NROW+I)
	      ENDDO
	   ENDDO
           FREPL = NREPL
           CALL REG_SET_NSEL(1,1, FREPL,0.0, 0.0, 0.0, 0.0,IRTFLG)
           WRITE(NOUT,*) ' NON-ZERO PIXELS IN MASK: ',NREPL
 	   RETURN
        ENDIF



        CALL RDPRMC(ANS,NCHAR,.TRUE.,
     &   'ALTER (A)BOVE THRESHOLD, (B)ELOW, OR (C) BOTH SIDES (A/B/C)',
     &     NULL,IRT)
        IF (IRT .NE. 0) RETURN

	IF (ANS .EQ. 'C') THEN
           CALL RDPRM2S(TH1,TH2,NOT_USED,'UPPER, LOWER THRESHOLD',IRT)
           IF (IRT .NE. 0) RETURN

        ELSE
           CALL RDPRM1S(THR,NOT_USED,'THRESHOLD',IRT)
           IF (IRT .NE. 0) RETURN

	   IF (ANS .EQ. 'B')  THEN
	      TH2 = THR
	      TH1 = HUGE(TH1)
	   ELSE
	      TH1 = THR
	      TH2 = -HUGE(TH1)
	   ENDIF
        ENDIF

 	FIX1 = TH1
	FIX2 = TH2
	IF (FCHAR(4:4) .EQ. 'F')  THEN
	   CALL RDPRM1S(FIX1,NOT_USED,'FIXUP DENSITY',IRT)
           IF (IRT .NE. 0) RETURN
	   FIX2 = FIX1
	ENDIF

        NREPL = 0

	DO  J=1,NSLICE
	   DO  I=1,NROW
	      CALL REDLIN(LUN1,BUF,NSAM,(J-1)*NROW+I)
	      DO  K=1,NSAM
	         IF (BUF(K) .GE. TH1)  THEN
	            BUF(K) = FIX1
                    NREPL  = NREPL + 1

	         ELSEIF (BUF(K) .LE. TH2)  THEN
	            BUF(K) = FIX2
                    NREPL  = NREPL + 1
	         ENDIF
	      ENDDO
	      CALL WRTLIN(LUN2,BUF,NSAM,(J-1)*NROW+I)
	   ENDDO
	ENDDO

        FREPL = FLOAT(NREPL)
        CALL REG_SET_NSEL(1,1, FREPL,0.0, 0.0, 0.0, 0.0,IRTFLG)

        WRITE(NOUT,*) ' PIXELS REPLACED: ',NREPL
 
	END
@


1.14
log
@GPL_2010
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.13
log
@nrepl wrong in 'th m'
@
text
@d8 4
a11 3
C=* This file is part of:                                              * 
C=* SPIDER - Modular Image Processing System.   Author: J. FRANK       *
C=* Copyright 1985-2009  Health Research Inc.,                         *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
a25 3
C=*                                                                    *
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2007  Health Research Inc.                      *
@


1.12
log
@th m  nrepl
@
text
@d5 2
a6 1
C    
d8 5
a12 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2007  Health Research Inc.                      *
d14 1
a14 6
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d25 4
a28 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
d45 3
a47 2
        CHARACTER   ANS,NULL
	REAL        B(2,2)
d52 1
d69 1
d73 1
a73 1
	            ELSE 
d76 1
d78 1
d82 1
a82 1
           FREPL = FLOAT(NREPL)
d84 1
a84 2

           WRITE(NOUT,*) ' PIXELS INSIDE MASK: ',NREPL
@


1.11
log
@number altered register added
@
text
@d50 1
a50 1
C       OPT RESETS BATCH MODE  FEB 88 al
d55 1
d58 3
a60 1
	   CALL RDPRM1S(THR,NOT_USED,'THRESHOLD',IRTFLG)
d71 1
a71 1
	              BUF(K) = B(2,ISW)
d77 5
a81 1
	   RETURN
d84 2
@


1.10
log
@GPL License fixed
@
text
@d3 3
a5 2
C    THRESH.FOR  
C                
d8 1
a8 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d32 1
a32 1
C    THRESH
d34 1
a34 3
C    PURPOSE:  TO THRESHOLD AN IMAGE FILE
C
C    CALLED BY:   UTIL2
d40 2
a41 1
	COMMON BUF(1)
d43 1
a43 1
	INCLUDE 'CMBLOCK.INC'
d56 22
a77 2
        ELSE
          CALL RDPRMC(ANS,NCHAR,.TRUE.,
a79 1
        ENDIF
d82 3
a84 11
	IF (ANS .EQ. 'C')  GOTO 200
	CALL RDPRM(THR,NOT_USED,'THRESHOLD')
	IF (FCHAR(4:4) .EQ. 'M')  GOTO 5
	IF (ANS .EQ. 'B')  THEN
	   TH2=THR
	   TH1=1.E23
	ELSE
	   TH1=THR
	   TH2=-1.E23
	ENDIF
	GOTO 205
d86 3
d90 8
a97 16
5	ISW=1
	IF (ANS .EQ. 'A') ISW=2
        DO  J=1, NSLICE     
	   DO  I=1,NROW
	      CALL REDLIN(LUN1,BUF,NSAM,(J-1)*NROW+I)
	      DO  K=1,NSAM
	         IF (BUF(K).LT.THR) THEN 
	            BUF(K)=B(1,ISW)
	         ELSE 
	           BUF(K)=B(2,ISW)
	         END IF
	      ENDDO
           CALL WRTLIN(LUN2,BUF,NSAM,(J-1)*NROW+I)
	   ENDDO
	ENDDO
	RETURN
d99 2
a100 4

200	CALL RDPRM2(TH1,TH2,NOT_USED,'UPPER, LOWER THRESHOLD')
205	FIX1=TH1
	FIX2=TH2
d102 3
a104 2
	   CALL RDPRM(FIX1,NOT_USED,'FIXUP DENSITY')
	   FIX2=FIX1
d106 3
d114 3
a116 1
	            BUF(K)=FIX1
d118 2
a119 1
	            BUF(K)=FIX2
d122 1
a122 1
	   CALL WRTLIN(LUN2,BUF,NSAM,(J-1)*NROW+I)
d126 5
@


1.9
log
@HRI GPL License used
@
text
@a1 1
C++*************************************************************************
a5 1
C **************************************************************************
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1985 & 1987, WADSWORTH CENTER FOR LABORATORIES AND       *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a29 1
C **************************************************************************
@


1.8
log
@nloop,iloop_removed
@
text
@d1 1
d6 1
d8 24
d38 1
@


1.7
log
@a
@
text
@d47 1
a47 1
	CALL RDPRM(THR,NLOOP,ILOOP,'THRESHOLD')
d77 1
a77 1
200	CALL RDPRM2(TH1,TH2,NLOOP,ILOOP,'UPPER, LOWER THRESHOLD')
d81 1
a81 1
	   CALL RDPRM(FIX1,NLOOP,ILOOP,'FIXUP DENSITY')
@


1.6
log
@nosave
@
text
@d32 1
a32 1
CNO_SAVE
@


1.5
log
@*** empty log message ***
@
text
@a25 1
#ifdef SP_UNIX
a26 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d32 1
a32 1

a97 1
        RETURN 
@


1.4
log
@changed prompts.
@
text
@d65 2
a66 2
        DO 101 J=1, NSLICE     
	   DO 100 I=1,NROW
d68 1
a68 1
	      DO 10 K=1,NSAM
d74 4
a77 3
10            CONTINUE
100        CALL WRTLIN(LUN2,BUF,NSAM,(J-1)*NROW+I)
101     CONTINUE
d88 2
a89 2
	DO 301 J=1,NSLICE
	   DO 300 I=1,NROW
d91 1
a91 1
	      DO 250 K=1,NSAM
d97 4
a100 3
250	      CONTINUE
300	   CALL WRTLIN(LUN2,BUF,NSAM,(J-1)*NROW+I)
301     CONTINUE 
@


1.3
log
@changed prompts
@
text
@d44 1
a44 1
     &    CALL RDPRMC(ANS,NCHAR,.TRUE.,
@


1.2
log
@cpp_lines_added
@
text
@d14 1
a14 1
C $$ THRESH
d39 3
a41 2
        IF (FCHAR(4:4) .EQ. 'M') CALL RDPRMC(ANS,NCHAR,.TRUE.,
     &  'BLANK OUT (A)BOVE OR (B)ELOW THRESHOLD? (A/B)$',NULL,IRT)
d43 1
a43 1
        IF (FCHAR(4:4) .NE. 'M')
d45 15
a59 12
     &    'MODIFY (A)BOVE / (B)ELOW THR / (C)BOTH SIDES? (A/B/C)$',
     &    NULL,IRT)
	IF (ANS .EQ. 'C')GOTO 200
	CALL RDPRM(THR,NLOOP,ILOOP,'THRESHOLD$')
	IF (FCHAR(4:4).EQ.'M')GOTO 5
	IF (ANS.EQ.'B')  then
	TH2=THR
	TH1=1.E23
	else
	TH1=THR
	TH2=-1.E23
	endif
d61 2
a62 1
c
d66 10
a75 10
	DO 100 I=1,NROW
	CALL REDLIN(LUN1,BUF,NSAM,(J-1)*nrow+I)
	DO 10 K=1,NSAM
	IF (BUF(K).LT.THR) THEN 
	   BUF(K)=B(1,ISW)
	ELSE 
	  BUF(K)=B(2,ISW)
	END IF
10	CONTINUE
100	CALL WRTLIN(LUN2,BUF,NSAM,(J-1)*nrow+I)
d78 3
a80 2
c
200	CALL RDPRM2(TH1,TH2,NLOOP,ILOOP,'UPPER, LOWER THRESHOLD$')
d83 3
a85 3
	IF (FCHAR(4:4).EQ.'F')  THEN
	CALL RDPRM(FIX1,NLOOP,ILOOP,'FIXUP DENSITY$')
	FIX2=FIX1
d88 13
a100 11
	DO 300 I=1,NROW
	CALL REDLIN(LUN1,BUF,NSAM,(J-1)*nrow+I)
	DO 250 K=1,NSAM
	if(buf(k).ge.th1)  then
	buf(k)=fix1
	elseif(buf(k).le.th2)  then
	buf(k)=fix2
	endif
250	continue
300	CALL WRTLIN(LUN2,BUF,NSAM,(J-1)*nrow+I)
301     CONTINUE  
@


1.1
log
@Initial revision
@
text
@d26 3
d30 1
@
