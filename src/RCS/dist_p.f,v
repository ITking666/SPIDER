head	1.18;
access;
symbols
	pre_mrcs:1.18
	healthdept_2018:1.18
	pre_getangas:1.15
	GPL2010:1.15
	pre_GPL2010:1.14
	pre_var_equation:1.14
	pre_fftwrings:1.13
	pre_opfiles:1.13
	src:1.13
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.11
	prec_CA:1.6
	noindx:1.6
	Bproc:1.6
	oct21:1.5
	last77:1.3;
locks; strict;
comment	@c @;


1.18
date	2018.10.03.14.34.04;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2013.05.09.18.21.10;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2013.05.06.18.36.57;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.24.13.25.27;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2009.06.22.14.54.33;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.20.25.13;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.18.17.10;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.04.12.17.40.30;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2004.05.12.16.50.54;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2004.02.10.18.43.45;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2004.01.20.21.36.39;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.16.16.46.14;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.12.06.18.17.10;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.08.09.18.25.57;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	99.07.27.15.18.52;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.10.06.17.04.33;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	95.02.02.21.14.42;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.18;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.18
log
@email_health_dept
@
text
@C++*********************************************************************
C
C DIST_P.F
C                MDIM_8                            MAY 13 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2013  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C PARAMETERS:
C        NFAC   - NUMBER OF PARAMETERS IN ONE RECORD
C        MAXFA  - ACTUAL NUMBER OF PARAMETERS USED
C        IDK    - IMAGE OR PIXEL IDS                             (RET.)
C        D      -                                                (RET.)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

         SUBROUTINE DIST_P(D,MDIM_8,IDK,NKLA,W,INUM,
     &                     MAXFA,NFAC,LUNF,ITYPE)

         IMPLICIT NONE

         INTEGER * 8      :: MDIM_8
         REAL             :: D(MDIM_8)
         INTEGER          :: NKLA
         REAL             :: W(MAXFA)
         INTEGER          :: IDK(NKLA) 
         INTEGER          :: INUM(MAXFA)
         INTEGER          :: MAXFA,NFAC,LUNF,ITYPE
         
         DOUBLE PRECISION :: Q

         INTEGER          :: mono
         INTEGER          :: K1,K2
         REAL             :: ADUM,BDUM,CDUM,FDUM,FIM

         INTEGER          :: M,I,IDUM,J,KK,L,LL,NDUM

C        AUTOMATIC ARRAYS
         REAL             :: COO(NFAC),COB(NFAC)


C        INTERNAL FUNCTION
         MONO(K1,K2) = MIN(K1,K2)+((MAX(K1,K2)-1)*(MAX(K1,K2)-2)/2)

C        ZERO ARRAY
         D  = 0.0

         REWIND(LUNF)

         IF (ITYPE == 1) THEN
C           UNFORMATTED FILE FOR _SEQ IMAGE DATA
            READ(LUNF) NDUM,NDUM

            DO I=1,NKLA
               READ(LUNF) (COB(J),J=1,NFAC),FIM
               IDK(I) = FIM
            ENDDO
         ELSE
C           FORMATTED FILE FOR IMAGE OR PIXEL COOR.
            READ(LUNF,*) IDUM, IDUM, IDUM, IDUM, IDUM

            DO I=1,NKLA
                READ(LUNF,*) (COB(J),J=1,NFAC),ADUM,BDUM,FIM,CDUM
                IDK(I) = FIM
            ENDDO
         ENDIF

         DO K1=1,NKLA-1
            KK = NKLA-K1+1
            REWIND(LUNF)

            IF (ITYPE == 1) THEN
               READ(LUNF)      ! TO SET POSITION
            ELSE
               READ(LUNF,*) IDUM, IDUM, IDUM, IDUM, IDUM, IDUM
            ENDIF

            DO K2=1,NKLA-K1
               IF (ITYPE == 1) THEN
                  READ(LUNF)   (COO(J),J=1,NFAC),FIM
               ELSE
C                 IMC OR PIX FILE
                  READ(LUNF,*) (COO(J),J=1,NFAC),FDUM,FDUM,FDUM,FDUM
               ENDIF

               Q = 0.0D0
               DO L=1,MAXFA
                  LL = INUM(L)
                  Q  = Q + (DBLE(W(L)) * (COO(LL) - COB(LL)))**2
               ENDDO

               M    = MONO(K2,KK)
               D(M) = Q            ! Possible change of value
            ENDDO
            COB   = COO
         ENDDO

         CLOSE(LUNF)

         END
@


1.17
log
@*** empty log message ***
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.16
log
@>2gb alloc
@
text
@d52 2
a53 1
         INTEGER          :: MONO,K1,K2
@


1.15
log
@GPL_2010
@
text
@d4 1
d10 1
a10 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d37 1
a37 1
         SUBROUTINE DIST_P(D,MDIM,IDK,NKLA,W,INUM,
d40 9
a48 4
         REAL, DIMENSION(MDIM)     :: D
         REAL, DIMENSION(MAXFA)    :: W
         INTEGER, DIMENSION(NKLA)  :: IDK 
         INTEGER, DIMENSION(MAXFA) :: INUM
d50 6
a55 1
         DOUBLE PRECISION          :: Q
d58 2
a59 1
         REAL, DIMENSION(NFAC)     :: COO,COB
d62 1
a62 1
         MONO(K1,K2)=MIN(K1,K2)+((MAX(K1,K2)-1)*(MAX(K1,K2)-2)/2)
d69 1
a69 1
         IF (ITYPE .EQ. 1) THEN
d76 1
a76 1
	    ENDDO
d84 1
a84 1
	    ENDDO
d91 1
a91 1
            IF (ITYPE .EQ. 1) THEN
d98 1
a98 1
               IF (ITYPE .EQ. 1) THEN
d110 1
d112 1
a112 1
               D(M) = Q
d115 1
a115 1
	 ENDDO
d118 1
@


1.14
log
@one less idum on pix file header
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.13
log
@GPL License fixed
@
text
@d48 1
a48 1
         DOUBLE PRECISION :: Q
d51 1
a51 1
         REAL, DIMENSION(NFAC)  :: COO,COB
d54 1
a54 1
         MONO(K1,K2)=MIN0(K1,K2)+((MAX0(K1,K2)-1)*(MAX0(K1,K2)-2)/2)
d60 1
d62 1
a62 1
C           UNFORMATTED FILE FOR IMAGE DATA
d71 1
a71 1
            READ(LUNF,*) IDUM, IDUM, IDUM, IDUM, IDUM, IDUM
d84 1
a84 1
               READ(LUNF)
d93 1
@


1.12
log
@HRI GPL License used
@
text
@a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 2003. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.11
log
@ADUM,BDUM,FIM,CDUM record sync on read
@
text
@d7 24
@


1.10
log
@pix file only has 3 numbers after factors
@
text
@d1 1
a1 1
C++************************************************************************
d21 1
a21 1
C--************************************************************************
d29 1
a29 1
         INTEGER, DIMENSION(MAXFA) ::  INUM
d56 1
a56 1
                READ(LUNF,*) (COB(J),J=1,NFAC),FDUM,FDUM,FIM
d75 1
a75 1
                  READ(LUNF,*) (COO(J),J=1,NFAC),FDUM,FDUM,FDUM
@


1.9
log
@1+80 bug on faces
@
text
@d56 1
a56 1
                READ(LUNF,*) (COB(J),J=1,NFAC),FDUM,FDUM,FIM,FDUM
d75 1
a75 1
                  READ(LUNF,*) (COO(J),J=1,NFAC),FDUM,FDUM,FDUM,FDUM
@


1.8
log
@_seq file format changed
@
text
@d14 1
a14 1
C
d17 2
d23 1
a23 1
         SUBROUTINE DIST_P(D,MDIM,PK,IDK,NKLA,W,INUM,COO,COB,
d26 6
a31 2
         DIMENSION  :: D(MDIM),PK(NKLA)
         DIMENSION  :: IDK(NKLA)
d33 2
a34 2
         DIMENSION  W(MAXFA),INUM(MAXFA),COO(NFAC),COB(NFAC)
         DOUBLE PRECISION :: Q
d36 1
d39 1
a39 1
         PK = 1.0
d53 2
a54 1
            READ(LUNF,*) IDUM
d56 1
a56 1
                READ(LUNF,*) (COB(J),J=1,NFAC),FDUM,FDUM,FIM
d68 1
a68 1
               READ(LUNF,*) IDUM
d73 1
a73 1
                  READ(LUNF)   (COO(J),J=1,NFAC)
d75 1
a75 1
                  READ(LUNF,*) (COO(J),J=1,NFAC)
@


1.7
log
@CA & CL rewrite
@
text
@d37 3
a39 1
            READ(LUNF)
d41 2
a42 2
              READ(LUNF) (COB(J),J=1,NFAC),FDUM,FDUM,FIM
              IDK(I) = FIM
d45 1
d48 2
a49 2
              READ(LUNF,*) (COB(J),J=1,NFAC),FDUM,FDUM,FIM
              IDK(I) = FIM
@


1.6
log
@cosmetic & header
@
text
@d5 8
a12 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
C **************************************************************************
d15 2
d21 2
a22 2
         SUBROUTINE  DIST_P(D,MDIM,PK,IDK,NKLA,W,INUM,COO,COB,
     &                      MAXFA,NFAC)
d24 3
a26 4
         DIMENSION  D(MDIM),PK(NKLA)
         DIMENSION  IDK(NKLA)
C        NFAC   - number of parameters in one record
C        MAXFA - actual number of parameters used
d28 1
a28 1
         DOUBLE PRECISION  Q
d35 14
a48 5
         REWIND 111
         READ(111)
         DO I=1,NKLA
           READ(111)  (COB(J),J=1,NFAC),RWGT,DIO,IDK(I)
	 ENDDO
d51 16
a66 5
            KK=NKLA-K1+1
            REWIND 111
            READ(111)
            DO    K2=1,NKLA-K1
               READ(111)  (COO(J),J=1,NFAC)
d68 1
a68 1
               DO  L=1,MAXFA
d70 1
a70 1
                  Q = Q + (DBLE(W(L)) * (COO(LL) - COB(LL)))**2
d72 2
a73 2
            M = MONO(K2,KK)
            D(M) = Q
d75 1
a75 1
            COB = COO
d78 1
a78 1
         CLOSE(111)
@


1.5
log
@*** empty log message ***
@
text
@d3 1
a3 1
C $$ DIST_P.FOR
d19 1
a19 3
C
C $$ DIST_P.FOR
C
d21 2
a22 1
     &   MAXFA,NFAC)
d25 2
a26 2
C NFAC   - number of parameters in one record
C MAXFA - actual number of parameters used
d29 1
a29 1
C
d31 1
a31 1
C
d33 2
a34 2
         D = 0.0
C
d37 2
a38 2
         DO    I=1,NKLA
          READ(111)  (COB(J),J=1,NFAC),RWGT,DIO,IDK(I)
d40 16
a55 16
C
         DO    K1=1,NKLA-1
          KK=NKLA-K1+1
          REWIND 111
          READ(111)
          DO    K2=1,NKLA-K1
           READ(111)  (COO(J),J=1,NFAC)
           Q = 0.0D0
            DO  L=1,MAXFA
             LL = INUM(L)
             Q = Q + (DBLE(W(L)) * (COO(LL) - COB(LL)))**2
	    ENDDO
           M = MONO(K2,KK)
           D(M) = Q
	  ENDDO
          COB = COO
d57 1
@


1.4
log
@*** empty log message ***
@
text
@d39 1
a39 1
         READ(111)  (COB(J),J=1,NFAC),RWGT,DIO,IDK(I)
d43 14
a56 14
         KK=NKLA-K1+1
         REWIND 111
         READ(111)
         DO    K2=1,NKLA-K1
         READ(111)  (COO(J),J=1,NFAC)
         Q = 0.0D0
         DO  L=1,MAXFA
         LL = INUM(L)
         Q = Q + (DBLE(W(L)) * (COO(LL) - COB(LL)))**2
	 ENDDO
         M = MONO(K2,KK)
         D(M) = Q
	 ENDDO
         COB = COO
@


1.3
log
@*** empty log message ***
@
text
@d33 2
a34 7
CNO_SAVE
         DO    I=1,NKLA
         PK(I) = 1.0
	 ENDDO
         DO    I=1,MDIM
         D(I) = 0.0
	 ENDDO
d56 1
a56 3
         DO   J=1,NFAC
         COB(J)=COO(J)
	 ENDDO
@


1.2
log
@nosave
@
text
@d34 6
a39 4
         DO  7  I=1,NKLA
7        PK(I) = 1.0
         DO  1  I=1,MDIM
1        D(I) = 0.0
d43 3
a45 2
         DO  9  I=1,NKLA
9        READ(111)  (COB(J),J=1,NFAC),RWGT,DIO,IDK(I)
d47 1
a47 1
         DO  10  K1=1,NKLA-1
d51 1
a51 1
         DO  20  K2=1,NKLA-K1
d54 1
a54 1
         DO 30  L=1,MAXFA
d56 2
a57 1
30       Q = Q + (DBLE(W(L)) * (COO(LL) - COB(LL)))**2
d59 6
a64 3
20       D(M) = Q
         DO  10  J=1,NFAC
10       COB(J)=COO(J)
@


1.1
log
@Initial revision
@
text
@d23 1
a23 1
     &   MAXFAC,NFAC)
d27 2
a28 2
C MAXFAC - actual number of parameters used
         DIMENSION  W(MAXFAC),INUM(MAXFAC),COO(NFAC),COB(NFAC)
d33 1
d51 1
a51 1
         DO 30  L=1,MAXFAC
@
