head	1.8;
access;
symbols
	pre_mrcs:1.7
	healthdept_2018:1.7
	pre_getangas:1.6
	GPL2010:1.6
	pre_GPL2010:1.5
	pre_var_equation:1.5
	pre_fftwrings:1.5
	pre_opfiles:1.5
	src:1.5
	best-code:1.5
	x-named-regs:1.5
	x:1.5
	v13-00:1.5
	pre_GPL:1.4
	prec_CA:1.4
	noindx:1.2;
locks; strict;
comment	@c @;


1.8
date	2019.11.04.17.36.08;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2018.10.03.14.34.07;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2010.06.24.13.25.51;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.17.21.06.55;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.24.15.53.46;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.23.15.51.33;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.18.15.13.58;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.10.19.03.04;	author leith;	state Exp;
branches;
next	;


desc
@@


1.8
log
@mrc_support
@
text
@
C++*********************************************************************
C
C GETSTACK.F  -- CREATED 10 SEP 02 ArDean Leith
C                USED GETOLDSTACK, GETNEWSTACK    APR 99  ArDean Leith
C                INDEXED STACK                    JAN 02  ArDean Leith
C                GETNEWSTACK PARAM.               FEB 03  ArDean Leith
C                MRC SUPPORT                      SEP 19  ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2019  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  GETSTACK(LUN1,LUN2,IMGNUM,MAXIM,SAYIT,LOADIT,BUF,NORMIT,IRTFLG)
C
C  PURPOSE:  LOCATE NEXT IMAGE/VOL. IN INPUT & OUTPUT STACK & 
C            OPTIONALLY LOAD IT INTO: BUF.
C 
C  PARAMETERS:  LUN1      LUN FOR INPUT IMAGE & COPYING FMIN...  (SENT)            (SENT)
C               LUN2      LUN FOR OUTPUT IMAGE                   (SENT) 
C               IMGNUM    LAST IMAGE                        (SENT/RET.)
C                 USE -3 ON INPUT FOR NON STACK LOOP END         (SENT)
C               MAXIM     STACK FLAG                             (SENT)
C               SAYIT     REPORT FILE OPENING INFO               (SENT)
C               LOADIT    LOAD IMAGE/VOL. IN BUF                 (SENT)
C               BUF       IMAGE/VOLUME AREA                      (RET.)
C               NORMIT    FIND IMAGE/VOL. MIN,MAX....            (SENT)
C               IRTFLG    ERROR FLAG                             (RET.)
C
C  NOTE:      THE THREE SUBROUTINES: GETSTACK, GETOLDSTACK, AND
C             GETNEWSTACK WERE WRITTEN TO HANDLE WHOLE STACK (@@STACK)
C             OPERATIONS. THEY ARE ONLY USED IN THE OPERATIONS:
C             'AF' (UNDOCUMENTED), 'CP TO STK','DE','CE AD', 
C             'CE' (MANY?), 'AR SCA',
C             'AD D2', 'AD DF', 'AD DR', 'AD F', 'AD R', 'DIV 2', 
C             'MUL 2', 'MUL O', 'MU O', & 'SU B2'.
C             I DECIDED THAT WHOLE STACK OPERATION SUPPORT WAS LESS
C             IMPORTANT THAN SUPPORTING OPERATIONS ON SELECTED 
C             STACKED IMAGES SO I STOPPED CONVERTING OPERATIONS TO
C             HANDLING WHOLE STACKS WITHOUT SELECTED STACK SUPPORT.
C             THE NEW PARADIGM USES OPTILES AND NEXTFILE WHICH
C             HANDLES BOTH SELECTED AND WHOLE STACKS. 
c
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

       SUBROUTINE GETSTACK(LUN1,LUN2,IMGNUM,MAXIM,
     &                     SAYIT,LOADIT,BUF,NORMIT,IRTFLG)

       IMPLICIT NONE
       INCLUDE    'CMBLOCK.INC' 

       INTEGER  :: LUN1,LUN2,IMGNUM,MAXIM,IRTFLG
       LOGICAL  :: WANTNEXT,MUSTGET,SAYIT,LOADIT,NORMIT
       REAL     :: BUF(*)

       INTEGER  :: NX,NY,NZ
       LOGICAL  :: IS_BARE,IS_MRC
       LOGICAL  :: COPYSTAT = .FALSE.  ! COPY FMIN.. FROM INPUT FILE

       WANTNEXT = .TRUE.
       MUSTGET  = .FALSE.

C      GET CURRENT NX,NY,NZ
       CALL LUNGETSIZE(LUN1,NX,NY,NZ,IRTFLG)   ! MRC OK
       IF (IRTFLG .NE. 0) RETURN

       CALL LUNGETIS_MRC(LUN1,IS_MRC,IRTFLG)
       IF (IRTFLG .NE. 0) RETURN

       CALL LUNGETISBARE(LUN1,IS_BARE,IRTFLG)
       IF (IRTFLG .NE. 0) RETURN

       !write(6,*)' In getstack - maxim,bare,mrc: ',maxim,is_bare,is_mrc

       IF (MAXIM < 0  .OR. (.NOT. IS_BARE .AND. IS_MRC) ) THEN
C         NOT A WHOLE STACK OPERATION
          IMGNUM = MAXIM 

       ELSE
C         NEGATIVE IMGNUM SET TO ZERO
          IMGNUM = MAX(IMGNUM+1,1)

C         GET INPUT IMAGE FROM INPUT STACK            
          CALL GETOLDSTACK(LUN1,NX,IMGNUM,
     &                     WANTNEXT,MUSTGET,SAYIT,IRTFLG)
          IF (IRTFLG .NE. 0) RETURN

          !write(6,*) ' In getstack, imgnum 1: ',imgnum,irtflg

C         CREATE OUTPUT IMAGE IN OUTPUT STACK
C         COPYSTAT   COPY FMIN.. FROM INPUT FILE                
          CALL GETNEWSTACK(LUN1,LUN2,COPYSTAT,NX,IMGNUM,IRTFLG)
          IF (IRTFLG .NE. 0) RETURN

       ENDIF

C      LOAD CURRENT IMAMI..  IN COMMON AREA
       CALL LUNGETSTAT(LUN1,IMAMI,FMIN,FMAX,AV,SIG,IRTFLG) ! MRC OK

       !write(6,*)' In getstack - imami, max,min: ',imami,fmax,fmin

       IF (IMAMI .NE. 1 .AND. NORMIT) THEN
          CALL NORM3(LUN1,NX,NY,NZ,FMAX,FMIN,AV)
          IF (IRTFLG .NE. 0) RETURN
       ENDIF

       IF (LOADIT) THEN
C         LOAD IMAGE/VOL. IN BUF
          CALL REDVOL(LUN1,NX,NY,1,NZ,BUF,IRTFLG)
       ENDIF

       END
@


1.7
log
@email_health_dept
@
text
@d4 5
a8 4
C GETSTACK.F  -- CREATED 10 SEP 02 ARDEAN LEITH
C                  USED GETOLDSTACK, GETNEWSTACK  APRIL 99 ARDEAN LEITH
C                  INDEXED STACK                  JAN 02   ARDEAN LEITH
C                  GETNEWSTACK PARAM.             FEB 03   ARDEAN LEITH
d14 1
a14 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d34 2
a35 2
C  PURPOSE:  LOCATE NEXT IMAGE/VOL. IN INPUT & OUTPUT STACK & OPTIONALLY
C            LOAD IT INTO BUF.
d37 3
a39 1
C  PARAMETERS:  IMGNUM    LAST IMAGE                        (SENT/RET.)
d48 14
d68 1
d71 7
a77 1
       LOGICAL  ::  WANTNEXT,MUSTGET,SAYIT,LOADIT,NORMIT
d82 2
a83 2
C      GET CURRENT NSAM,.......
       CALL LUNGETSIZE(LUN1,NSAM,NROW,NSLICE,IRTFLG)
d86 9
a94 1
       IF (MAXIM .LT. 0) THEN
d103 1
a103 1
          CALL GETOLDSTACK(LUN1,NSAM,IMGNUM,
d107 2
d110 2
a111 1
          CALL GETNEWSTACK(LUN1,LUN2,NSAM,IMGNUM,IRTFLG)
d116 4
a119 2
C      SET CURRENT FMIN.......
       CALL LUNGETSTAT(LUN1,IMAMI,FMIN,FMAX,AV,SIG,IRTFLG)
d121 2
a122 2
       IF (IMAMI.NE.1 .AND. NORMIT) THEN
          CALL NORM3(LUN1,NSAM,NROW,NSLICE,FMAX,FMIN,AV)
d128 1
a128 1
          CALL REDVOL(LUN1,NSAM,NROW,1,NSLICE,BUF,IRTFLG)
a130 1
       RETURN
@


1.6
log
@GPL_2010
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.5
log
@GPL License fixed
@
text
@a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.4
log
@getnewstack paramaters changed
@
text
@d10 23
a32 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.3
log
@indexed stacks
@
text
@d7 1
d63 1
a63 1
          CALL GETNEWSTACK(LUN2,NSAM,IMGNUM,IRTFLG)
@


1.2
log
@rewritten
@
text
@d5 2
a6 1
C              USED GETOLDSTACK, GETNEWSTACK  APRIL 99 ARDEAN LEITH
d45 1
a45 1
       CALL LUNGETSIZE(LUN1,NSAM,NROW,NSLICE,ISTACK,IRTFLG)
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
C  
d18 2
a19 1
C  PURPOSE:  LOCATE NEXT IMAGE IN INPUT & OUTPUT STACK
d25 3
d33 2
a34 1
       SUBROUTINE GETSTACK(LUN1,LUN2,NSAM,IMGNUM,MAXIM,SAYIT,IRTFLG)
d36 1
a36 1
       LOGICAL  ::  WANTNEXT,MUSTGET,SAYIT
d38 2
d43 4
a46 1
       IRTFLG   = 0
d50 14
a63 1
          RETURN
d66 2
a67 2
C      NEGATIVE IMGNUM SET TO ZERO
       IMGNUM = MAX(IMGNUM+1,1)
d69 4
a72 4
C      GET INPUT IMAGE FROM INPUT STACK            
       CALL GETOLDSTACK(LUN1,NSAM,IMGNUM,
     &                  WANTNEXT,MUSTGET,SAYIT,IRTFLG)
       IF (IRTFLG .NE. 0) RETURN
d74 4
a77 3
C      CREATE OUTPUT IMAGE IN OUTPUT STACK
       CALL GETNEWSTACK(LUN2,NSAM,IMGNUM,IRTFLG)
       IF (IRTFLG .NE. 0) RETURN
@
