head	1.27;
access;
symbols
	pre_getangas:1.25
	GPL2010:1.25
	pre_GPL2010:1.24
	pre_var_equation:1.24
	pre_fftwrings:1.24
	pre_opfiles:1.22
	src:1.22
	best-code:1.22
	x-named-regs:1.22
	x:1.22
	v13-00:1.22
	pre_GPL:1.20
	prec_CA:1.20
	noindx:1.19
	Bproc:1.12
	oct21:1.8
	last77:1.8;
locks; strict;
comment	@c @;


1.27
date	2014.01.12.19.04.48;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2012.12.04.15.54.31;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2010.06.24.13.27.00;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2007.09.28.14.47.50;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2007.09.25.12.47.27;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2005.10.17.20.02.30;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2005.10.17.17.58.03;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.02.14.02.41;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2002.03.11.14.07.53;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2001.02.23.20.55.49;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2001.02.20.15.32.28;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2001.02.15.19.27.20;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2001.02.15.18.39.21;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2001.02.14.17.52.49;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2000.09.19.13.07.51;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.08.17.16.52.33;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.10.16.50.54;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.10.16.32.25;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.11.10.23.11.21;	author yuchen;	state Exp;
branches;
next	1.8;

1.8
date	97.10.17.20.53.49;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	97.10.15.14.29.08;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.09.30.22.04.45;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.08.15.16.24.07;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.07.18.20.57.09;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	95.02.07.16.34.43;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.11.18;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.00;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.27
log
@enter
@
text
@C++*********************************************************************
C
C SPEAKC.F               REVISED                  5/21/86  MR
C                        RENAMED FROM SPEAKG, I2  8/18/87  MR   
C                        USED REG_GET             AUG 00   ARDEAN LEITH
C                        PARAMETERS               FEB 2001 ARDEAN LEITH
C                        NPTR MOVED AWAY FROM BUF SEP 2003 ARDEAN LEITH
C                        IPAR BUG                 SEP 2007 ARDEAN LEITH
C                        LUNDOCWRTDAT REWRITE     DEC 2012 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2012  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  PURPOSE
C
C       THIS SUBROUTINE SEARCHES FOR THE ML HIGHEST PEAKS IN THE (REAL)
C       IMAGE FILNAM AND PRINTS OUT POSITIONS AND VALUES OF THESE PEAKS.
C       HAS SUB-PIXEL ACCURACY USING BOTH CG AND POLYGONAL WEIGHTING
C       EXCLUSIVELY
C
C     SPEAKC(FILNAM,LUN,NX,NY,MAXDIM,OPTO,NDOCOUT,ML,NOR)
C         FILNAM     FILE NAME
C         LUN        LOGICAL UNIT NUMBER OF IMAGE
C         NX,NY  DIMENSIONS OF IMAGE
C         MAXDIM     MAXIMUM BUFFER SPACE AVAILABLE
C         OPTO       OUTPUT OPTION
C         OPTO=' '   DEFAULT: NO DOCUMENT OUTPUT
C         OPTO='X'   I.E.,REGISTER LIST FOLLOWING):
C                    OUTPUT OF POSITION & VALUE OF PEAK IN REGISTERS
C         OPTO='D'   DOCUMENT OUTPUT: NUMBER,POSITION, AND VALUE
C                    OF PEAK ARE WRITTEN INTO A DOCUMENT FILE
C         NDOCOUT    I/O UNIT NUMBER FOR DOC FILE
C         ML         NUMBER OF PEAKS WANTED
C         NOR        NEW ORIGIN WANTED
C    
C     REGISTER POSITIONS
C          1= CG X-SHIFT
C          2= CG Y-SHIFT
C          3= ABSOLUTE PEAK HEIGHT
C          4= RATIO PEAK HEIGHT
C          5= SUB-PIXEL NON-CG FLOATING PT. X-SHIFT
C          6= SUB-PIXEL NON-CG FLOATING PT. Y-SHIFT
C          7= VALUE OF  NON-CG EXTREMUM OF SUB-PIXEL PARABOLOID
C
C     DOC FILE POSITIONS FOR 'PK DC'
C          1= CG X-SHIFT
C          2= CG Y-SHIFT
C          3= ABSOLUTE PEAK HEIGHT
C          4= RATIO PEAK HEIGHT
C          5= NEGATIVITY WARNING FLAG
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

         SUBROUTINE SPEAKC(FILNAM,LUN,NX,NY,MAXDIM,OPTO,NDOCOUT,ML,NOR)

         INCLUDE 'CMBLOCK.INC'
         INCLUDE 'CMLIMIT.INC'

         COMMON /IOBUF/ BUF(NBUFSIZ)
         COMMON NPTR(64)

         CHARACTER (LEN=*)      :: FILNAM
         INTEGER                :: LUN,NX,NY,MAXDIM
         CHARACTER              :: OPTO
         INTEGER                :: NDOCOUT,ML,NOR

         INTEGER, DIMENSION(ML) :: IPOS
         REAL,    DIMENSION(ML) :: XILIST,YILIST, XLIST,YLIST
         REAL,    DIMENSION(ML) :: ALIST,RLIST
         REAL,    DIMENSION(9) ::  RSQ

         REAL                   :: DLIST(6)
         CHARACTER              :: POSE,NULL

         CHARACTER (LEN=80)     :: COMMEN
         CHARACTER (LEN=MAXNAM) :: DOCOUT
         LOGICAL                :: ASKNAM,ADDEXT,ISOLD
         LOGICAL                :: WRTCOM,APPEND,NEWFILE

         CALL SET_MPI(ICOMM,MYPID,MPIERR) ! SETS ICOMM AND MYPID

         NULL = CHAR(0)

         IF (MAXDIM < 3*NX+200) THEN
            CALL ERRT(102,'INSUFFICIENT BUFFER SPACE',MAXDIM)
            RETURN
         ENDIF

         DO  K = 1,ML
            IPOS(K)  = 0
            XILIST(K) = 0.0
            YILIST(K) = 0.0
            RLIST(K) = 0.0
            ALIST(K) = -HUGE(XVAL)
         ENDDO

         NTAB  = 1
         NXCTR = NX/2+1
         NYCTR = NY/2+1
         IF (NOR .NE. 0) THEN

            CALL RDPRIS(NXCTR,NYCTR,NOT_USED,
     &                  'ORIGIN COORDINATES',IRTFLG)
            IF (IRTFLG .NE. 0) RETURN

            CALL RDPRI1S(NTAB,NOT_USED,
     &             'PEAK NUMBER FOR RATIO',IRTFLG)
            IF (IRTFLG .NE. 0) RETURN

            IF (NTAB <= 0 .OR. NTAB > ML) THEN
               CALL ERRT(102,'NOT CONTAINED IN TABLE',NTAB)
               RETURN
            ENDIF
          ENDIF

30       CALL RDPRM2(CG,CG2,NOT_USED,
     &       'ELLIPSE AXES (X,Y) FOR CGR CALCULATION')
         IF (CG2 == 0) CG2 = CG
         CG2SQ = CG2*CG2
         CGSQ  = CG*CG
         CALL RDPRMC(POSE,NC,.TRUE.,'POSITIVITY ENFORCED? (Y/N)',
     &         NULL,IRTFLG)

         CALL RDPRM(FNEIGH,NOT_USED,'NEIGHBORHOOD DISTANCE')

         CALL RDPRMI(IEWX,IEWY,NOT_USED,'EDGE EXCLUSION WIDTH X, Y')
         IF (IEWY <= 0) IEWY = IEWX

C        MAKE SURE THAT THE EDGE EXCLUSION IS AT LEAST AS LARGE AS THE
C        CENTER OF GRAVITY AXES:
         IF (IEWX < CG)  IEWX = CG
         IF (IEWY < CG2) IEWY = CG2

         WRITE(NOUT,2001) IEWX,IEWY
2001     FORMAT('  EDGE EXCLUSION WIDTH USED: X: ',I4,'  Y: ',I4)

         IESAM = NX - IEWX
         IEROW = NY - IEWY

C        CALCULATE HOW MANY RECORDS HAVE TO BE READ IN TO COVER THE COMPLETE
C        FIELD USED IN THE CENTER OF GRAVITY CALCULATIONS:
         NREC = CG2 + 0.5

C        MAKE DIAMETER AN ODD NUMBER (=TOTAL NUMBER OF RECORDS TO
C        BE AVAILABLE AT ANY TIME)
         NREC = NREC * 2 + 1
         IF  (CG == 0.0) NREC=3

         NMAX   = 0
         NEG    = 0

C        INITIALIZE MREAD
         CALL MREAD(0,BUF,NX,NREC,NPTR)

         NREC2 = NREC/2+1
         NRECH = NREC/2

         DO  I = NREC2,NY-NREC2+1
            CALL MREAD(LUN,BUF,NX,NREC,NPTR)

C           GET BEGINNING LOCATION OF THREE LINES
            I1A = (NPTR(NREC2-1)-1)*NX
            I2A = (NPTR(NREC2)-1)*NX
            I3A = (NPTR(NREC2+1)-1)*NX

            DO  K = NREC2,NX-NREC2+1
               A = BUF(K+I2A)
C              CHECK IF A IS SMALLER THAN THE 8 SURROUNDING POINTS:
               IF (A <= BUF(K-1+I2A)) CYCLE
               IF (A <= BUF(K-1+I1A)) CYCLE
               IF (A <= BUF(K+I1A))   CYCLE
               IF (A <= BUF(K+1+I1A)) CYCLE
               IF (A <= BUF(K+1+I2A)) CYCLE
               IF (A <= BUF(K+1+I3A)) CYCLE
               IF (A <= BUF(K+I3A))   CYCLE
               IF (A <= BUF(K-1+I3A)) CYCLE

C              MAKE SURE THAT PEAK NOT NEAR EDGE (DEFINED BY IEW)
               IF (K <= IEWX .OR. K >= IESAM) CYCLE
               IF (I <= IEWY .OR. I >= IEROW) CYCLE

C              NEW LOCAL PEAK FOUND
               NMAX = NMAX + 1
c              write(0,*) ' nmax: ',nmax,'   ml: ',ml,'  A: ',A
c              write(0,*) '  '

C              CHECK IF PEAK IS LARGER THAN THE ML PEAKS FOUND PREVIOUSLY
C              AND PUT IT INTO THE CORRECT RANK POSITION

               DO L = 1,ML                     !L IS PEAK NUMBER

                 IF (A <= ALIST(L)) CYCLE   ! CYCLE IF SMALLER

                 IF (L .NE. ML) THEN
C                   NOT LAST PEAK NUMBER, REORDER THE ML PEAKS
                    L1 = L+1                       
                    DO J = L1,ML
                       JO        = ML-J+L1
                       JN        = ML-J+L1-1
                       ALIST(JO) = ALIST(JN)
                       XILIST(JO) = XILIST(JN)
                       YILIST(JO) = YILIST(JN)
                       IPOS(JO)  = IPOS(JN)
                    ENDDO     ! END OF: DO J = L1,ML
                 ENDIF        ! END OF: IF (L .NE. ML) THEN

C                STORE PEAK HEIGHT AND COORDINATES
                 IF (L == 1) THEN
                     IPAR = I
                     KPAR = K
                 ENDIF

                 ALIST(L) = A      
                 IPOS(L)  = 0
                 XILIST(L) = I
                 YILIST(L) = K

C                CENTER OF GRAVITY SEARCH
                 IF (CG == 0.0) EXIT
                 CNY   = 0
                 CNX   = 0
                 CGR   = 0
                 PCORR = 0.

                 IF (POSE == 'Y') THEN
C                   POSITIVITY OF AREA IS ENFORCED, DETERMINE AREA'S MINIMUM:
                    AMIN = 1.E10
                    DO ICG=1,NREC
                       IND1 = (NPTR(ICG)-1)*NX
                       YSQ  = (ICG-NREC2)**2
                       DO KCG=K-NRECH,K+NRECH
                          XSQ  = (KCG-K)**2
                          CRIT = XSQ/CGSQ+YSQ/CG2SQ
                          IF (CRIT <= 1) THEN
                             IND2 = IND1+KCG
                             XXX  = BUF(IND2)
                             IF (AMIN > XXX) AMIN = XXX
                          ENDIF
                       ENDDO    ! END OF: DO KCG=K-NRECH,K+NRECH
                    ENDDO       ! END OF: DO ICG=1,NREC
                    PCORR = AMIN
                 ENDIF          ! END OF: IF (POSE == 'Y') THEN


C                CALCULATE CENTER OF GRAVITY:
                 DO ICG=1,NREC
                    IND1 = (NPTR(ICG)-1) * NX
                    YSQ  = (ICG-NREC2) ** 2

                    DO  KCG=K-NRECH,K+NRECH
                       XSQ  = (KCG-K) **2
                       CRIT = XSQ / CGSQ + YSQ / CG2SQ

                       IF (CRIT > 1) CYCLE

C                      POINT INSIDE ELLIPTICAL AREA FOR CGR DETERMINATION:
                       IND2 = IND1 + KCG

                       ADD = BUF(IND2) - PCORR
                       IF (ADD < 0) THEN
                          IPOS(L) = 1
                          NEG     = NEG + 1
CCCC                      WRITE(NOUT,1999) ADD,ICG,KCG
1999                      FORMAT(' *** NEGATIVE VALUE ',G12.4,
     &                      '  FOUND AT PIXEL ',2I5,'  CGR MEANINGLESS')
                       ENDIF

                       CGR = CGR + ADD
                       CNY = CNY + FLOAT(ICG-NREC2)*ADD
                       CNX = CNX + FLOAT(KCG-K)*ADD
                    ENDDO    ! END OF: DO KCG=K-NRECH,K+NRECH 
                 ENDDO       ! END OF: DO ICG=1,NREC

                 IF (IPOS(L) == 0) THEN
C                   MEANINGFULL CGR
                    XILIST(L) = CNY / CGR + XILIST(L)
                    YILIST(L) = CNX / CGR + YILIST(L)
                    EXIT
                 ENDIF
              ENDDO          ! END OF: DO L = 1,ML
           ENDDO             ! END OF: DO K = NREC2,NX-NREC2+1
         ENDDO

         IF (NMAX == 0)  THEN
            IF (MYPID <= 0) WRITE(NDAT,*) '*** NO PEAKS FOUND'
            IF (MYPID <= 0 .AND. NOUT .NE. NDAT) 
     &                        WRITE(NOUT,*) '*** NO PEAKS FOUND'

            CALL REG_SET_NSEL(1,5,0.0, 0.0, 0.0, 0.0, 0.0,IRTFLG)
            CALL REG_SET_NSEL(6,2,0.0, 0.0, 0.0, 0.0, 0.0,IRTFLG)
            RETURN
         ENDIF

         IF (OPTO == 'D') THEN
            ADDEXT  = .TRUE.
            ASKNAM  = .TRUE.
            ISOLD   = .FALSE.
            APPEND  = .FALSE.
            WRTCOM  = .TRUE.
            CALL OPENDOC(DOCOUT,ADDEXT,NLET,
     &                  NDOCOUT,NICDOCOUT,ASKNAM,'OUTPUT DOCUMENT',
     &                  ISOLD,APPEND,WRTCOM,NEWFILE,IRTFLG)
            IF (IRTFLG .NE. 0) RETURN
C
            COMMEN = 
     &       '            XO            YO        HEIGHT' //
     &       '         RATIO         ERRORS'
C             123456789 123456789 123456789 123456789 123456789 123456
            CALL LUNDOCPUTCOM(NDOCOUT,COMMEN(1:80),IRTFLG)
         ENDIF

               DLIST(1) = XLIST(L)
               DLIST(2) = YLIST(L)
               DLIST(3) = ALIST(L)
               DLIST(4) = RLIST(L)
               DLIST(5) = IPOS(L)


         IF (MYPID <= 0) THEN
            IF (NEG > 0) THEN
               WRITE(NOUT,304)NEG
304            FORMAT(/,'  WARNING: ',I6,' NEGATIVE PIXEL VALUES FOUND',
     &                 ' DURING CALCULATION OF CGR',/)
            ENDIF

            WRITE(NDAT,299)
            IF (NDAT .NE. NOUT) WRITE(NOUT,299)
299         FORMAT('    NO      IX      IY      XO      YO   HEIGHT',
     &   '     RATIO',5X,' 1 IF NEGATIVE'/5X,58X,'VALUE IN CGR AREA')
         ENDIF

         MLIST = MIN(ML,NMAX)

C        FOR EACH PEAK, MAKE SURE IT DOES NOT FALL WITHIN RADIUS=FNEIGH
C        OF A HIGHER-RANKING ONE

         FN2 = FNEIGH * FNEIGH
C        CHANGED 2/8/88 MR

         DO L=MLIST,2,-1
            FK = YILIST(L)
            FI = XILIST(L)
            DO LI=1,L-1
C              IF OUTIDE EXCLUSION ZONE, CYCLE
               IF ((FK-YILIST(LI))**2+(FI-XILIST(LI))**2 > FN2) CYCLE
               ALIST(L) = -HUGE(XVAL)
            ENDDO
         ENDDO
         NPKCNT = 0

C        NOW SELECT PEAKS THAT COMPLY WITH CONDITIONS 
         DO L=1,MLIST
            IF (ALIST(L) == -HUGE(XVAL)) THEN
C              PEAK HAS BEEN EXCLUDED
               IF (L .NE. NTAB) CYCLE
               NTAB = NTAB + 1

               IF (MYPID <= 0) WRITE(NOUT,319) NTAB
               IF (MYPID <= 0 .AND. NOUT .NE. NDAT) 
     &            WRITE(NOUT,319) NTAB
319            FORMAT(' NUMBER OF REF. PEAKS INCREASED BY ONE TO: ',I5)
               CYCLE
            ENDIF

            NPKCNT    = NPKCNT + 1
            XLIST(L) = YILIST(L) - NXCTR
            YLIST(L) = XILIST(L) - NYCTR
            RLIST(L)  = ALIST(L) / ALIST(NTAB)

            IF (MYPID <= 0) THEN
C              WRITE TO TERMINAL AND RESULTS FILE
               WRITE(NDAT,301) NPKCNT,YILIST(L),XILIST(L),
     &             XLIST(L),YLIST(L),ALIST(L),RLIST(L),IPOS(L)

301            FORMAT(I6, 4F8.2, G12.3, F10.5,5X,I2)

               IF (NOUT .NE. NDAT) THEN
                  WRITE(NOUT,301) NPKCNT,YILIST(L),XILIST(L),
     &               XLIST(L),YLIST(L), ALIST(L),RLIST(L),IPOS(L)
               ENDIF
            ENDIF     ! END OF: IF (MYPID <= 0) THEN

            IF (OPTO == 'D') THEN
C              WRITE PEAK TO DOCUMENT FILE
               DLIST(1) = XLIST(L)
               DLIST(2) = YLIST(L)
               DLIST(3) = ALIST(L)
               DLIST(4) = RLIST(L)
               DLIST(5) = IPOS(L)

C              PUSH DLIST INTO OUTPUT DOC. FILE
               CALL LUNDOCWRTDAT(NICDOCOUT,L,DLIST,5,IRTFLG)


               !!CALL SAVD(NDOC,DLIST,5,IRTFLG)
            ENDIF
         ENDDO        ! END OF: DO L=1,MLIST

         CLOSE(NDOCOUT)

C        SET RESULTS IN COMMAND LINE REGISTERS 1..4
         CALL REG_SET_NSEL(1,4,XLIST(NTAB),YLIST(NTAB),
     &                         ALIST(NTAB), RLIST(NTAB),0.0,IRTFLG)

C        9/25/81 PARABOLIC FIT TO THE 3X3 NEIGHBORHOOD OF THE PEAK POINT
C        PROGRAM SECTION SENT BY M.VAN HEEL, MODIFIED FOR SPIDER USE. JF

C        APPLIED ONLY TO HIGHEST RANKING PEAK

         KL = KPAR
         DO  I=1,3
            if (Ipar > NY .or. ipar <= 0) then
               write(6,*) ' IPAR: ',IPAR,' > NY:',NY
               write(6,*) ' I: ',I
               CALL ERRT(101,'BAD ROW REFERENCED',NE)
            endif

            IROW = IPAR + I - 2    ! GET ROW NUMBER
            IF (IROW < 1)    IROW = IROW + NY
            IF (IROW > NY) IROW = IROW - NY

C           READ ORIGINAL DATA
            CALL REDLIN(LUN,BUF,NX,IROW)
            I1 = (I-1)*3
            DO  K=1,3
               ISAM = KL+K-2
               IF (ISAM <1)     ISAM=ISAM+NX
               IF (ISAM > NX) ISAM=ISAM-NX

C              VALUES FOR NINE LOCATIONS AROUND THE PEAK & PEAK
               RSQ(I1+K)= BUF(ISAM)
            ENDDO
         ENDDO

C        FIND XSH & YSH (RANGE -1.0 .... 1.0)
         CALL PARABL(RSQ,XSH,YSH,PEAKV)

C        SET SUB-PIXEL RESULTS IN COMMAND LINE REGISTERS 5..7
         CALL REG_SET_NSEL(5,3,XSH+KPAR-NXCTR, YSH+IPAR-NYCTR,
     &                       PEAKV, 0,0,IRTFLG)

         IF (MYPID <= 0) THEN
            IF (VERBOSE) WRITE(NOUT,*) ' '
            WRITE(NDAT,302)XSH,YSH,PEAKV
            IF (NDAT .NE. NOUT) 
     &         WRITE(NOUT,302)XSH,YSH,PEAKV
302            FORMAT('  SUB-PIXEL OFFSET OF HIGHEST PEAK: (',
     &               F5.2,', ',F5.2,')  HEIGHT: ',G15.7)

            IDIFF = ML - NPKCNT
            WRITE(NOUT,401) ML,NPKCNT,IDIFF
401         FORMAT('  PEAKS SPECIFIED: ',I6,'  PEAKS PASSED: ',I6,
     &             '  PEAKS NEAR EDGE EXCLUDED: ',I6)
            IF (MYPID .LE. 0) WRITE(NOUT,*) ' '

         ENDIF

         END
@


1.26
log
@rewrite, now a legacy not in menu
@
text
@d122 1
a122 1
     &                  'ENTER ORIGIN COORDINATES',IRTFLG)
d126 1
a126 1
     &             'ENTER PEAK NUMBER FOR RATIO',IRTFLG)
@


1.25
log
@GPL_2010
@
text
@d5 1
a5 1
C SPEAKC.F               USED REG_GET             AUG 00   ARDEAN LEITH
d9 1
d14 1
a14 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d39 1
a39 1
C     SPEAKC(FILNAM,LUN,NSAM,NROW,MAXDIM,OPTO,NDOC,ML,NOR)
d42 1
a42 1
C         NSAM,NROW  DIMENSIONS OF IMAGE
d45 1
a45 1
C         OPTO=' '         DEFAULT: NO DOCUMENT OUTPUT
d50 1
a50 1
C         NDOC       LOGICAL UNIT NUMBER FOR DOCUMENT FILE
d73 1
a73 1
         SUBROUTINE SPEAKC(FILNAM,LUN,NSAM,NROW,MAXDIM,OPTO,NDOC,ML,NOR)
d81 5
d87 1
a87 1
         REAL,    DIMENSION(ML) :: ILIST,KLIST, KXLIST,IXLIST
d91 9
a99 12
         REAL           DLIST(6)
         CHARACTER *(*) FILNAM
         CHARACTER      OPTO,POSE,NULL

#ifdef USE_MPI
         include 'mpif.h'
         ICOMM  = MPI_COMM_WORLD
         MPIERR = 0
         CALL MPI_COMM_RANK(ICOMM, MYPID, MPIERR)
#else 
         MYPID = -1
#endif
d103 2
a104 2
         IF (MAXDIM .LT. 3*NSAM+200) THEN
            CALL ERRT(6,'SPEAKC',NE)
d110 2
a111 2
            ILIST(K) = 0.0
            KLIST(K) = 0.0
d117 2
a118 2
         NXCTR = NSAM/2+1
         NYCTR = NROW/2+1
a119 1
            CALL RDPRMI(NXCTR,NYCTR,NOT_USED,'NEW ORIGIN COORDINATES')
d121 10
a130 4
            CALL RDPRMI(NTAB,NDUM,NOT_USED,
     &                  'ENTER PEAK NUMBER FOR RATIO')
            IF (NTAB .GT. ML) THEN
               CALL ERRT(25,'SPEAK',NE)
d133 1
a133 1
         ENDIF
d137 1
a137 1
         IF (CG2 .EQ. 0) CG2 = CG
d146 1
a146 1
         IF (IEWY .LE. 0) IEWY = IEWX
d150 2
a151 2
         IF (IEWX.LT.CG)  IEWX = CG
         IF (IEWY.LT.CG2) IEWY = CG2
d156 2
a157 2
         IESAM = NSAM - IEWX
         IEROW = NROW - IEWY
d161 1
a161 1
         NREC = CG2+0.5
d165 2
a166 2
         NREC = NREC*2+1
         IF  (CG .EQ. 0.0) NREC=3
d172 1
a172 1
         CALL MREAD(0,BUF,NSAM,NREC,NPTR)
d177 2
a178 2
         DO  I = NREC2,NROW-NREC2+1
            CALL MREAD(LUN,BUF,NSAM,NREC,NPTR)
d181 3
a183 3
            I1A = (NPTR(NREC2-1)-1)*NSAM
            I2A = (NPTR(NREC2)-1)*NSAM
            I3A = (NPTR(NREC2+1)-1)*NSAM
d185 1
a185 1
            DO  K = NREC2,NSAM-NREC2+1
d188 8
a195 8
               IF (A .LE. BUF(K-1+I2A)) CYCLE
               IF (A .LE. BUF(K-1+I1A)) CYCLE
               IF (A .LE. BUF(K+I1A))   CYCLE
               IF (A .LE. BUF(K+1+I1A)) CYCLE
               IF (A .LE. BUF(K+1+I2A)) CYCLE
               IF (A .LE. BUF(K+1+I3A)) CYCLE
               IF (A .LE. BUF(K+I3A))   CYCLE
               IF (A .LE. BUF(K-1+I3A)) CYCLE
d198 2
a199 2
               IF (K.LE.IEWX .OR. K.GE.IESAM) CYCLE
               IF (I.LE.IEWY .OR. I.GE.IEROW) CYCLE
d211 1
a211 1
                 IF (A .LE. ALIST(L)) CYCLE   ! CYCLE IF SMALLER
d220 2
a221 2
                       ILIST(JO) = ILIST(JN)
                       KLIST(JO) = KLIST(JN)
d227 1
a227 1
                 IF (L .EQ. 1) THEN
d234 2
a235 2
                 ILIST(L) = I
                 KLIST(L) = K
d238 1
a238 1
                 IF (CG .EQ. 0.0) EXIT
d244 1
a244 1
                 IF (POSE .EQ. 'Y') THEN
d248 1
a248 1
                       IND1 = (NPTR(ICG)-1)*NSAM
d253 1
a253 1
                          IF (CRIT .LE. 1) THEN
d256 1
a256 1
                             IF (AMIN .GT. XXX) AMIN = XXX
d261 1
a261 1
                 ENDIF          ! END OF: IF (POSE .EQ. 'Y') THEN
d263 2
a264 1
C                CALCULATE THE CENTER OF GRAVITY:
d266 1
a266 1
                    IND1 = (NPTR(ICG)-1) * NSAM
d273 1
a273 1
                       IF (CRIT .GT. 1) CYCLE
d279 1
a279 1
                       IF (ADD .LT. 0) THEN
d293 1
a293 1
                 IF (IPOS(L) .EQ. 0) THEN
d295 2
a296 2
                    ILIST(L) = CNY / CGR + ILIST(L)
                    KLIST(L) = CNX / CGR + KLIST(L)
d300 1
a300 1
           ENDDO             ! END OF: DO K = NREC2,NSAM-NREC2+1
d303 3
a305 3
         IF (NMAX .EQ. 0)  THEN
            IF (MYPID .LE. 0) WRITE(NDAT,*) '*** NO PEAKS FOUND'
            IF (MYPID .LE. 0 .AND. NOUT .NE. NDAT) 
d313 27
a339 2
         IF (MYPID .LE. 0) THEN
            IF (NEG .GT. 0) THEN
d341 1
a341 1
304            FORMAT(/,' WARNING: ',I6,' NEGATIVE PIXEL VALUES FOUND',
d347 2
a348 2
299         FORMAT('    NO    NSAM    NROW     X       Y      VALUE',
     &   '     RATIO',5X,' 1 IF NEGATIVE'/5X,58X,'VALUES IN CGR AREA')
d360 2
a361 2
            FK = KLIST(L)
            FI = ILIST(L)
d364 1
a364 1
               IF ((FK-KLIST(LI))**2+(FI-ILIST(LI))**2 .GT. FN2) CYCLE
d370 1
a370 1
C        NOW SELECT PEAKS THAT COMPLY WITH CONDITIONS AND ENTER IN DOC-FILE
d372 1
a372 1
            IF (ALIST(L) .EQ. -HUGE(XVAL)) THEN
d377 2
a378 2
               IF (MYPID .LE. 0) WRITE(NOUT,319) NTAB
               IF (MYPID .LE. 0 .AND. NOUT .NE. NDAT) 
d385 2
a386 2
            KXLIST(L) = KLIST(L) - NXCTR
            IXLIST(L) = ILIST(L) - NYCTR
d389 1
a389 1
            IF (MYPID .LE. 0) THEN
d391 2
a392 2
               WRITE(NDAT,301) NPKCNT,KLIST(L),ILIST(L),
     &             KXLIST(L),IXLIST(L),ALIST(L),RLIST(L),IPOS(L)
d397 2
a398 2
                  WRITE(NOUT,301) NPKCNT,KLIST(L),ILIST(L),
     &               KXLIST(L),IXLIST(L), ALIST(L),RLIST(L),IPOS(L)
d400 1
a400 1
            ENDIF     ! END OF: IF (MYPID .LE. 0) THEN
d402 1
a402 1
            IF (OPTO .EQ. 'D') THEN
d404 11
a414 7
               DLIST(1) = L
               DLIST(2) = KXLIST(L)
               DLIST(3) = IXLIST(L)
               DLIST(4) = ALIST(L)
               DLIST(5) = RLIST(L)
               DLIST(6) = IPOS(L)
               CALL SAVD(NDOC,DLIST,6,IRTFLG)
d418 1
a418 2
         CALL SAVDC
         CLOSE(NDOC)
d421 1
a421 1
         CALL REG_SET_NSEL(1,4,KXLIST(NTAB),IXLIST(NTAB),
d431 2
a432 2
            if (Ipar .gt. nrow .or. ipar .le. 0) then
               write(6,*) ' IPAR: ',IPAR,' > NROW:',nrow
d438 2
a439 2
            IF (IROW .LT. 1)    IROW = IROW + NROW
            IF (IROW .GT. NROW) IROW = IROW - NROW
d442 1
a442 1
            CALL REDLIN(LUN,BUF,NSAM,IROW)
d446 2
a447 2
               IF (ISAM .LT.1)     ISAM=ISAM+NSAM
               IF (ISAM .GT. NSAM) ISAM=ISAM-NSAM
d461 3
a463 5
         IF (MYPID .LE. 0) THEN
            WRITE(NDAT,*) ' '
            WRITE(NDAT,*)' SUB PIXEL OFFSETS FOR LARGEST PEAK: '

            IF (NDAT .NE. NOUT) WRITE(NOUT,*) ' '
d465 3
a467 6
     &          WRITE(NOUT,*)' SUB PIXEL OFFSETS FOR LARGEST PEAK: '

            WRITE(NDAT,351)XSH,YSH,PEAKV
            IF (NOUT .NE. NDAT) WRITE(NOUT,351)XSH,YSH,PEAKV
351         FORMAT('  + (',F6.2,', ',F6.2,')  PEAK VALUE = ',G12.5,/)

d471 4
a474 2
401         FORMAT(' **',I5,' PEAKS SPECIFIED ',I6,' PEAKS PASSED ',
     &              I6,' PEAKS EXCLUDED (NEIGB. DIST. EDGE EXCL.)')
@


1.24
log
@two commas in format
@
text
@a9 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2007  Health Research Inc.                      *
d11 5
a15 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d17 1
a17 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d22 1
a22 1
C=* This program is distributed in the hope that it will be useful,    *
d24 1
a24 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a25 1
C=*                                                                    *
d27 1
a27 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.23
log
@ancient IPAR bug & rewirte
@
text
@d312 1
a312 1
     &                ,' DURING CALCULATION OF CGR',/)
@


1.22
log
@GPL License fixed
@
text
@d3 3
a5 1
C SPEAKC.F               USED REG_GET             AUG 00 ARDEAN LEITH
d8 1
d11 1
a11 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d35 1
a35 1
C  SPEAKC
d39 2
d42 15
a56 17
C       CALL SPEAK(FILNAM,LUN,NSAM,NROW,MAXDIM,OPTO,NDOC)
C         FILNAM       CHAR. ARRAY, CONTAINING FILE NAME
C         LUN          LOGICAL UNIT NUMBER OF IMAGE
C         NSAM,NROW    DIMENSIONS OF IMAGE
C         MAXDIM       MAXIMUM BUFFER SPACE AVAILABLE
C         OPTO        OUTPUT OPTION
C         OPTO=' '      DEFAULT:NO DOCUMENT OUTPUT
C         OPTO='X' (I.E.,REGISTER LIST FOLLOWING):NO DOCUMENT OUTPUT
C                  BUT OUTPUT OF POSITION & VALUE OF PEAK IN REGISTERS)
C         OPTO='D'   DOCUMENT OUTPUT:NUMBER,POSITION, AND VALUE
C               OF PEAK ARE WRITTEN INTO A DOCUMENT FILE
C         NDOC  LOGICAL UNIT NUMBER FOR DOCUMENT FILE
C
C REVISED 5/21/86 MR
C LAST MODIFIED:
C 8/18/87 NOTE: THE I2-VERSION OF THIS PROGRAM HAD THE FILE NAME SPEAKG.FOR
C                                                                     
d58 2
a59 2
C          1= INTEGER X-SHIFT
C          2= INTEGER Y-SHIFT
d61 4
d66 6
a71 3
C          5= FLOATING PT. X-SHIFT
C          6= FLOATING PT. Y-SHIFT
C          7= VALUE OF EXTREMUM OF PARABOLOID
a80 1

d85 1
a85 1
         REAL,    DIMENSION(ML) :: ILIST,KLIST,KXLIST,IXLIST
d93 9
d110 5
a114 5
            IPOS(K)  = 0.
            ILIST(K) = 0.
            KLIST(K) = 0.
            RLIST(K) = 0.
            ALIST(K) = 0.
d133 1
a133 1
         IF (CG2.EQ.0) CG2 = CG
d142 1
a142 1
         IF (IEWY.EQ.0) IEWY = IEWX
d146 3
a148 2
         IF (IEWX.LT.CG) IEWX=CG
         IF (IEWY.LT.CG2) IEWY=CG2
d150 4
a153 1
2001     FORMAT(' EDGE EXCLUSION WIDTH USED: X: ',I4,'  Y: ',I4)
a154 3
         IESAM = NSAM-IEWX
         IEROW = NROW-IEWY
C
d158 1
d163 3
a165 1
         NMAX = 0
d170 2
a171 2
         NREC2 =NREC/2+1
         NRECH =NREC/2
d177 3
d181 1
a181 4
            I1A=(NPTR(NREC2-1)-1)*NSAM
            I2A=(NPTR(NREC2)-1)*NSAM
            I3A=(NPTR(NREC2+1)-1)*NSAM
            DO 150  K = NREC2,NSAM-NREC2+1
d184 14
a197 14
               IF (A .LE. BUF(K-1+I2A)) GOTO 150
               IF (A .LE. BUF(K-1+I1A)) GOTO 150
               IF (A .LE. BUF(K+I1A))   GOTO 150
               IF (A .LE. BUF(K+1+I1A)) GOTO 150
               IF (A .LE. BUF(K+1+I2A)) GOTO 150
               IF (A .LE. BUF(K+1+I3A)) GOTO 150
               IF (A .LE. BUF(K+I3A))   GOTO 150
               IF (A .LE. BUF(K-1+I3A)) GOTO 150

C              MAKE SURE THAT PEAK LIES NOT IN THE RANGE OF THE EDGE 
C              (DEFINED BY IEW)
               IF (K.LE.IEWX .OR. K.GE.IESAM) GOTO 150
               IF (I.LE.IEWY .OR. I.GE.IEROW) GOTO 150
C              NEW LOKAL PEAK FOUND:
d199 3
d205 1
a205 12
         DO 100 L = 1,ML
            IF (A .LE. ALIST(L)) GOTO 100
            IF (L .EQ. ML)GOTO 90
            L1 = L+1
            DO  J = L1,ML
               JO        = ML-J+L1
               JN        = ML-J+L1-1
               ALIST(JO) = ALIST(JN)
               ILIST(JO) = ILIST(JN)
               KLIST(JO) = KLIST(JN)
               IPOS(JO)  = IPOS(JN)
            ENDDO
d207 1
a207 32
C           STORE PEAK HEIGHT AND COORDINATES
90          ALIST(L) = A
            IPOS(L)  = 0
            ILIST(L) = I
            KLIST(L) = K
            IF (L .EQ. 1) IPAR = I
            IF (L .EQ. 1) KPAR = K
            IF (NMAX .GT. ML) THRESH = ALIST(ML)

C           CENTER OF GRAVITY SEARCH
            IF (CG .EQ. 0.0) GOTO 150
            CNY   = 0
            CNX   = 0
            CGR   = 0
            PCORR = 0.
            IF (POSE .NE. 'Y') GOTO 991

C           IF POSITIVITY OF AREA IS ENFORCED DETERMINE THE AREA'S MINIMUM:
            AMIN=1.E10
            DO  ICG=1,NREC
               IND1=(NPTR(ICG)-1)*NSAM
               YSQ = (ICG-NREC2)**2
               DO 198 KCG=K-NRECH,K+NRECH
                  XSQ  = (KCG-K)**2
                  CRIT = XSQ/CGSQ+YSQ/CG2SQ
                  IF (CRIT.GT.1) GOTO 198
                  IND2 = IND1+KCG
                  XXX =BUF(IND2)
                  IF (AMIN.GT.XXX) AMIN=XXX
198            CONTINUE
            ENDDO
            PCORR = AMIN
d209 87
a295 32
C           CALCULATE THE CENTER OF GRAVITY:
991         DO  ICG=1,NREC
               IND1 = (NPTR(ICG)-1)*NSAM
               YSQ  = (ICG-NREC2)**2

               DO 98 KCG=K-NRECH,K+NRECH
                  XSQ  = (KCG-K)**2
                  CRIT = XSQ/CGSQ+YSQ/CG2SQ

                  IF (CRIT .GT. 1) GOTO 98
C                 POINT INSIDE ELLIPTICAL AREA FOR CGR DETERMINATION:
                  IND2 = IND1+KCG

C                 WRITE(NOUT,1998) ICG,KCG,CRIT,BUF(IND2)
C                 IF ((KCG-K)**2+(ICG-NREC2)**2.GT.CG2)GOTO 98
1998              FORMAT(' ICG,KCG,CRIT,BUF',2I5,2F12.4)

                  ADD = BUF(IND2)-PCORR
                  IF (ADD.GE.0) GOTO 2000
                  IPOS(L)=1
1999              FORMAT(' *** NEGATIVE VALUE ',G12.4,
     &                '  FOUND AT PIXEL ',2I5,'  CGR MEANINGLESS')
2000              CGR = CGR+ADD
                  CNY = CNY+FLOAT(ICG-NREC2)*ADD
                  CNX = CNX+FLOAT(KCG-K)*ADD
98             CONTINUE
            ENDDO
            ILIST(L) = CNY/CGR+ILIST(L)
            KLIST(L) = CNX/CGR+KLIST(L)
            GOTO 150
100      CONTINUE
150      CONTINUE
a297 2
         CALL PDATES(FILNAM,0)
         WRITE(NDAT,299)
d299 3
a301 1
            WRITE(NDAT,*) '*** NO PEAK FOUND'
d308 10
a317 4
295      IF (NDAT.NE.NOUT) WRITE(NOUT,302)
         IF (NDAT.NE.NOUT) WRITE(NOUT,299)
         IF (NDAT.EQ.NOUT) WRITE(NDAT,299)
299      FORMAT('    NO    NSAM    NROW     X       Y      VALUE',
d319 5
a323 2
         MLIST = MIN0(ML,NMAX)
C        FOR EACH PEAK, MAKE SURE IT DOES NOT FALL WITHIN RADIUS FNEIGH
d325 2
a326 1
         FN2=FNEIGH*FNEIGH
d329 8
a336 7
         DO  L=MLIST,2,-1
         FK=KLIST(L)
         FI=ILIST(L)
         DO 2910 LI=1,L-1
            IF ((FK-KLIST(LI))**2+(FI-ILIST(LI))**2.GT.FN2) GOTO 2910
            ALIST(L) = 0.0
2910     CONTINUE
d338 1
a338 1
         NPKCNT=0
d340 43
a382 33
C        NOW SELECT PEAKS THAT COMPLY WITH ALL CONDITIONS AND ENTER IN DOC-FILE
         DO 300 L=1,MLIST
            IF(ALIST(L).NE.0.0)GOTO 309
            IF(L.NE.NTAB) GOTO 300
            NTAB=NTAB+1
            WRITE(NOUT,319)
319         FORMAT(' NUMBER OF REFERENCE PEAK INCREASED BY 1. NEW VAL.:'
     &      ,I5)
            GOTO 300

309         NPKCNT=NPKCNT+1
            KXLIST(L) = KLIST(L)-NXCTR
            IXLIST(L) = ILIST(L)-NYCTR
            RLIST(L) = ALIST(L)/ALIST(NTAB)
            IF (L.GT.1.OR.NDAT.EQ.NOUT) GOTO 303
            IF (IPOS(L).EQ.1) WRITE(NOUT,304)
304         FORMAT(' *** WARNING: PIXELS WITH NEGATIVE VALUES FOUND '/
     &         ,'DURING CALCULATION OF CENTER OF GRAVITY')
           WRITE(NOUT,301) NPKCNT,KLIST(L),ILIST(L),KXLIST(L),IXLIST(L),
     &         ALIST(L),RLIST(L),IPOS(L)
            IF (NDAT.EQ.NOUT) WRITE(NDAT,301) NPKCNT,KLIST(L),ILIST(L),
     &         KXLIST(L),IXLIST(L),ALIST(L),RLIST(L),IPOS(L)
303         IF (OPTO.NE.'D') GOTO 2990
            DLIST(1) = NPKCNT
            DLIST(2) = KXLIST(L)
            DLIST(3) = IXLIST(L)
            DLIST(4) = ALIST(L)
            DLIST(5) = RLIST(L)
            DLIST(6) = IPOS(L)
            CALL SAVD(NDOC,DLIST,6,IRTFLG)
2990        WRITE(NDAT,301) NPKCNT,KLIST(L),ILIST(L),
     &          KXLIST(L),IXLIST(L),ALIST(L),RLIST(L),IPOS(L)
300      CONTINUE
d387 1
a387 8
301      FORMAT(I6,4F8.2,G12.3,F10.5,5X,I2)
302      FORMAT(' LARGEST PEAK:'/)

C        STORE VALUES IN REGISTERS IF REQUIRED:
C        IF(NSEL(1).NE.0) PARAM(NSEL(1)) = KXLIST(NTAB)
C        IF(NSEL(2).NE.0) PARAM(NSEL(2)) = IXLIST(NTAB)
C        IF(NSEL(3).NE.0) PARAM(NSEL(3)) = ALIST(NTAB)
C        IF(NSEL(4).NE.0) PARAM(NSEL(4)) = RLIST(NTAB)
d389 1
a389 2
     &                       ALIST(NTAB),RLIST(NTAB),0.0,IRTFLG)

d396 1
a396 1
         KL=KPAR
d398 11
a408 3
            IROW=IPAR+I-2
            IF (IROW.LT.1) IROW=IROW+NROW
            IF (IROW.GT.NROW) IROW = IROW-NROW
d410 1
a410 1
            I1 =(I-1)*3
d412 3
a414 3
               ISAM =KL+K-2
               IF (ISAM.LT.1)ISAM=ISAM+NSAM
               IF (ISAM.GT.NSAM) ISAM=ISAM-NSAM
d416 1
d421 1
d424 1
a424 7
         IF (NOUT.NE.NDAT)   WRITE(NOUT,351)XSH,YSH,PEAKV
         WRITE(NDAT,351)XSH,YSH,PEAKV
351      FORMAT('  + (',F6.2,', ',F6.2,')  PEAK VALUE = ',G12.5)

C        IF (NSEL(5).NE.0) PARAM(NSEL(5))= XSH+KPAR-NXCTR
C        IF (NSEL(6).NE.0) PARAM(NSEL(6))= YSH+IPAR-NYCTR
C        IF (NSEL(7).NE.0) PARAM(NSEL(7))= PEAKV
d428 18
a445 4
         IDIFF = ML-NPKCNT
         WRITE(NOUT,401) ML,NPKCNT,IDIFF
401      FORMAT(' **',I5,' PEAKS SPECIFIED ',I6,' PEAKS PASSED ',
     &       I6,' PEAKS EXCLUDED (NEIGB. DIST. EDGE EXCL.)')
@


1.21
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a64 1
C--************************************************************************
@


1.20
log
@nptr can be longer now
@
text
@d1 1
d9 24
d72 1
@


1.19
log
@nloop,iloop_removed
@
text
@d3 3
a5 3
C SPEAKC.F                             USED REG_GET AUG 00 ARDEAN LEITH
C                                      PARAMETERS FEB 2001 ARDEAN LEITH
C
d15 1
a15 1
C  SPEAK:    SEARCH FOR HIGHEST PEAKS
d52 2
d55 2
a56 1
         COMMON NPTR,BUF(32000)
a62 1
         DIMENSION      NPTR(64)
d69 1
a69 1
         IF (MAXDIM.LT.3*NSAM+200) THEN
d85 2
a86 1
         IF (NOR.EQ.0) GO TO 30
d88 6
a93 5
         CALL RDPRMI(NXCTR,NYCTR,NOT_USED,'NEW ORIGIN COORDINATES')
       CALL RDPRMI(NTAB,NDUM,NOT_USED,'ENTER PEAK NUMBER FOR RATIO')
         IF (NTAB .GT. ML) THEN
            CALL ERRT(25,'SPEAK',NE)
            RETURN
d98 1
a98 1
         IF (CG2.EQ.0) CG2=CG
d103 4
a106 2
         CALL RDPRM(FNEIGH,NOT_USED,'NEIGHB. DIST.')
         CALL RDPRMI(IEWX,IEWY,NOT_USED,'EDGE EXCL. WIDTH X, Y')
d116 2
a117 2
         IESAM =NSAM-IEWX
         IEROW =NROW-IEWY
d125 1
a125 1
         IF  (CG.EQ.0.0)NREC=3
d145 9
a153 8
               IF (A.LE.BUF(K-1+I2A)) GOTO 150
               IF (A.LE.BUF(K-1+I1A)) GOTO 150
               IF (A.LE.BUF(K+I1A)) GOTO 150
               IF (A.LE.BUF(K+1+I1A)) GOTO 150
               IF (A.LE.BUF(K+1+I2A)) GOTO 150
               IF (A.LE.BUF(K+1+I3A)) GOTO 150
               IF (A.LE.BUF(K+I3A)) GOTO 150
               IF (A.LE.BUF(K-1+I3A)) GOTO 150
d156 2
a157 2
               IF (K.LE.IEWX.OR.K.GE.IESAM) GOTO 150
               IF (I.LE.IEWY.OR.I.GE.IEROW) GOTO 150
d164 2
a165 2
            IF (A.LE.ALIST(L)) GOTO 100
            IF (L.EQ.ML)GOTO 90
d168 2
a169 2
               JO = ML-J+L1
               JN = ML-J+L1-1
d173 1
a173 1
               IPOS(JO)=IPOS(JN)
d178 1
a178 1
            IPOS(L)  =0
d181 3
a183 3
            IF (L.EQ.1) IPAR=I
            IF (L.EQ.1) KPAR=K
            IF (NMAX.GT.ML) THRESH = ALIST(ML)
d186 7
a192 6
            IF (CG.EQ.0.0) GOTO 150
            CNY   =0
            CNX   =0
            CGR   =0
            PCORR =0.
            IF (POSE.NE.'Y') GOTO 991
d197 1
a197 1
               YSQ=(ICG-NREC2)**2
d199 2
a200 2
                  XSQ =(KCG-K)**2
                  CRIT =XSQ/CGSQ+YSQ/CG2SQ
d202 1
a202 1
                  IND2 =IND1+KCG
d208 1
d211 2
a212 2
               IND1=(NPTR(ICG)-1)*NSAM
               YSQ=(ICG-NREC2)**2
d215 2
a216 2
                  XSQ=(KCG-K)**2
                  CRIT=XSQ/CGSQ+YSQ/CG2SQ
d218 1
a218 1
                  IF(CRIT.GT.1) GOTO 98
d220 1
a220 1
                  IND2=IND1+KCG
d223 1
a223 1
C                 IF((KCG-K)**2+(ICG-NREC2)**2.GT.CG2)GOTO 98
d226 1
a226 1
                  ADD=BUF(IND2)-PCORR
d231 3
a233 3
2000              CGR=CGR+ADD
                  CNY=CNY+FLOAT(ICG-NREC2)*ADD
                  CNX=CNX+FLOAT(KCG-K)*ADD
d236 2
a237 2
            ILIST(L)=CNY/CGR+ILIST(L)
            KLIST(L)=CNX/CGR+KLIST(L)
d245 1
a245 1
         IF (NMAX.EQ.0)  THEN
a247 3
C           DO  I=1,7
C              IF(NSEL(I).NE.0) PARAM(NSEL(I)) = 0.0
C           ENDDO
d253 3
a255 3
295      IF(NDAT.NE.NOUT) WRITE(NOUT,302)
         IF(NDAT.NE.NOUT) WRITE(NOUT,299)
         IF(NDAT.EQ.NOUT) WRITE(NDAT,299)
d276 30
a305 30
         IF(ALIST(L).NE.0.0)GOTO 309
         IF(L.NE.NTAB) GOTO 300
         NTAB=NTAB+1
         WRITE(NOUT,319)
319      FORMAT(' NUMBER OF REFERENCE PEAK INCREASED BY 1. NEW VAL.:'
     &   ,I5)
         GOTO 300

309      NPKCNT=NPKCNT+1
         KXLIST(L) = KLIST(L)-NXCTR
         IXLIST(L) = ILIST(L)-NYCTR
         RLIST(L) = ALIST(L)/ALIST(NTAB)
         IF(L.GT.1.OR.NDAT.EQ.NOUT) GOTO 303
         IF(IPOS(L).EQ.1) WRITE(NOUT,304)
304      FORMAT(' *** WARNING: PIXELS WITH NEGATIVE VALUES FOUND '/
     &      ,'DURING CALCULATION OF CENTER OF GRAVITY')
         WRITE(NOUT,301) NPKCNT,KLIST(L),ILIST(L),KXLIST(L),IXLIST(L),
     &      ALIST(L),RLIST(L),IPOS(L)
         IF(NDAT.EQ.NOUT) WRITE(NDAT,301) NPKCNT,KLIST(L),ILIST(L),
     &      KXLIST(L),IXLIST(L),ALIST(L),RLIST(L),IPOS(L)
303      IF (OPTO.NE.'D') GOTO 2990
         DLIST(1) = NPKCNT
         DLIST(2) = KXLIST(L)
         DLIST(3) = IXLIST(L)
         DLIST(4) = ALIST(L)
         DLIST(5) = RLIST(L)
         DLIST(6) = IPOS(L)
         CALL SAVD(NDOC,DLIST,6,IRTFLG)
2990     WRITE(NDAT,301) NPKCNT,KLIST(L),ILIST(L),
     &       KXLIST(L),IXLIST(L),ALIST(L),RLIST(L),IPOS(L)
d307 1
d310 1
@


1.18
log
@rlist must be at least 9 , replaced with rsq
@
text
@d85 2
a86 2
         CALL RDPRMI(NXCTR,NYCTR,NLOOP,ILOOP,'NEW ORIGIN COORDINATES')
       CALL RDPRMI(NTAB,NDUM,NLOOP,ILOOP,'ENTER PEAK NUMBER FOR RATIO')
d92 1
a92 1
30       CALL RDPRM2(CG,CG2,NLOOP,ILOOP,
d99 2
a100 2
         CALL RDPRM(FNEIGH,NLOOP,ILOOP,'NEIGHB. DIST.')
         CALL RDPRMI(IEWX,IEWY,NLOOP,ILOOP,'EDGE EXCL. WIDTH X, Y')
@


1.17
log
@changed parameters
@
text
@d58 1
d331 2
a332 2
C              USE RLIST BUFFER WHICH IS NO LONGER NEEDED
               RLIST(I1+K)= BUF(ISAM)
d336 1
a336 1
         CALL PARABL(RLIST,XSH,YSH,PEAKV)
@


1.16
log
@allocate dis not work for ml=1
@
text
@d4 1
d6 8
a13 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH         *
C **************************************************************************
d25 1
a25 1
C       OPTO        OUTPUT OPTION
d29 3
a31 3
C       OPTO='D'   DOCUMENT OUTPUT:NUMBER,POSITION, AND VALUE
C       OF PEAK ARE WRITTEN INTO A DOCUMENT FILE
C       NDOC  LOGICAL UNIT NUMBER FOR DOCUMENT FILE
d49 1
a49 1
         SUBROUTINE SPEAKC(FILNAM,LUN,NSAM,NROW,MAXDIM,OPTO,NDOC)
d55 3
a57 3
         INTEGER, ALLOCATABLE, DIMENSION(:) :: IPOS
         REAL, ALLOCATABLE, DIMENSION(:) :: ILIST,KLIST,KXLIST,IXLIST
         REAL, ALLOCATABLE, DIMENSION(:) :: ALIST,RLIST
d71 1
a71 24
         CALL RDPRMI(ML,NOR,NLOOP,ILOOP,
     &      'ENTER # OF PEAKS,CENTER ORIGIN OVERRIDE(0/1)')

C        ALLOCATE SEEMS TO HAVE TROUBLE IF ML IS ONE al feb 2001
         MK = MAX(10,ML)

         ALLOCATE(IPOS(MK),STAT=IRTFLG)
         IF (IRTFLG .NE. 0) THEN 
           CALL ERRT(46,'SPEAKC, IPOS.....',IER)
           RETURN
         ENDIF
         ALLOCATE(ILIST(MK),KLIST(MK),KXLIST(MK),IXLIST(MK),STAT=IRTFLG)
         IF (IRTFLG .NE. 0) THEN 
           CALL ERRT(46,'SPEAKC, ILIST.....',IER)
           RETURN
         ENDIF
         ALLOCATE(ALIST(MK),RLIST(MK),STAT=IRTFLG)
         IF (IRTFLG .NE. 0) THEN 
           CALL ERRT(46,'SPEAKC, ALIST.....',IER)
           RETURN
         ENDIF


10       DO  K = 1,ML
d79 3
a81 3
         NTAB  =1
         NXCTR =NSAM/2+1
         NYCTR =NROW/2+1
d88 1
a88 1
            GOTO 9999
d94 3
a96 3
         CG2SQ=CG2*CG2
         CGSQ=CG*CG
         CALL RDPRMC(POSE,NC,.TRUE.,'POSITIVITY ENFORCED? (Y/N)$',
d98 3
a100 3
         CALL RDPRM(FNEIGH,NLOOP,ILOOP,'NEIGHB.DIST.$')
         CALL RDPRMI(IEWX,IEWY,NLOOP,ILOOP,'EDGE EXCL. WIDTH X,Y$')
         IF (IEWY.EQ.0) IEWY=IEWX
d104 2
a105 2
         IF(IEWX.LT.CG) IEWX=CG
         IF(IEWY.LT.CG2) IEWY=CG2
d109 2
a110 2
         IESAM=NSAM-IEWX
         IEROW=NROW-IEWY
d114 1
a114 1
         NREC=CG2+0.5
d117 2
a118 2
         NREC=NREC*2+1
         IF(CG.EQ.0.0)NREC=3
d124 2
a125 2
         NREC2=NREC/2+1
         NRECH=NREC/2
d128 3
a130 1
         CALL MREAD(LUN,BUF,NSAM,NREC,NPTR)
d132 22
a153 1
C        GET BEGINNING LOCATION OF THREE LINES
a154 21
         I1A=(NPTR(NREC2-1)-1)*NSAM
         I2A=(NPTR(NREC2)-1)*NSAM
         I3A=(NPTR(NREC2+1)-1)*NSAM
         DO 150  K = NREC2,NSAM-NREC2+1
         A = BUF(K+I2A)
C        CHECK IF A IS SMALLER THAN THE 8 SURROUNDING POINTS:
         IF(A.LE.BUF(K-1+I2A)) GOTO 150
         IF(A.LE.BUF(K-1+I1A)) GOTO 150
         IF(A.LE.BUF(K+I1A)) GOTO 150
         IF(A.LE.BUF(K+1+I1A)) GOTO 150
         IF(A.LE.BUF(K+1+I2A)) GOTO 150
         IF(A.LE.BUF(K+1+I3A)) GOTO 150
         IF(A.LE.BUF(K+I3A)) GOTO 150
         IF(A.LE.BUF(K-1+I3A)) GOTO 150
C MAKE SURE THAT PEAK LIES NOT IN THE RANGE OF THE EDGE (DEFINED BY IEW)
         IF(K.LE.IEWX.OR.K.GE.IESAM) GOTO 150
         IF(I.LE.IEWY.OR.I.GE.IEROW) GOTO 150
C        NEW LOKAL PEAK FOUND:
         NMAX = NMAX + 1
C        CHECK IF PEAK IS LARGER THAN THE ML PEAKS FOUND PREVIOUSLY
C        AND PUT IT INTO THE CORRECT RANK POSITION
d156 11
a166 11
         IF(A.LE.ALIST(L)) GOTO 100
         IF(L.EQ.ML)GOTO 90
         L1 = L+1
         DO  J = L1,ML
            JO = ML-J+L1
            JN = ML-J+L1-1
            ALIST(JO) = ALIST(JN)
            ILIST(JO) = ILIST(JN)
            KLIST(JO) = KLIST(JN)
            IPOS(JO)=IPOS(JN)
         ENDDO
d168 61
a228 61
C        STORE PEAK HEIGHT AND COORDINATES
90       ALIST(L) = A
         IPOS(L)=0
         ILIST(L) = I
         KLIST(L) = K
         IF(L.EQ.1)IPAR=I
         IF(L.EQ.1)KPAR=K
         IF(NMAX.GT.ML) THRESH = ALIST(ML)

C        CENTER OF GRAVITY SEARCH
         IF(CG.EQ.0.0)GOTO 150
         CNY=0
         CNX=0
         CGR=0
         PCORR=0.
         IF (POSE.NE.'Y') GOTO 991
C        IF POSITIVITY OF AREA IS ENFORCED DETERMINE THE AREA'S MINIMUM:
         AMIN=1.E10
         DO  ICG=1,NREC
         IND1=(NPTR(ICG)-1)*NSAM
         YSQ=(ICG-NREC2)**2
         DO 198 KCG=K-NRECH,K+NRECH
            XSQ=(KCG-K)**2
            CRIT=XSQ/CGSQ+YSQ/CG2SQ
            IF(CRIT.GT.1) GOTO 198
            IND2=IND1+KCG
            XXX=BUF(IND2)
            IF(AMIN.GT.XXX) AMIN=XXX
198      CONTINUE
         ENDDO
         PCORR=AMIN
C        CALCULATE THE CENTER OF GRAVITY:
991      DO  ICG=1,NREC
         IND1=(NPTR(ICG)-1)*NSAM
         YSQ=(ICG-NREC2)**2

         DO 98 KCG=K-NRECH,K+NRECH
         XSQ=(KCG-K)**2
         CRIT=XSQ/CGSQ+YSQ/CG2SQ

         IF(CRIT.GT.1) GOTO 98
C        POINT INSIDE ELLIPTICAL AREA FOR CGR DETERMINATION:
         IND2=IND1+KCG

C       WRITE(NOUT,1998) ICG,KCG,CRIT,BUF(IND2)
C     IF((KCG-K)**2+(ICG-NREC2)**2.GT.CG2)GOTO 98
1998     FORMAT(' ICG,KCG,CRIT,BUF',2I5,2F12.4)

         ADD=BUF(IND2)-PCORR
         IF(ADD.GE.0) GOTO 2000
         IPOS(L)=1
1999     FORMAT(' *** NEGATIVE VALUE ',G12.4,
     &          '  FOUND AT PIXEL ',2I5,'  CGR MEANINGLESS')
2000     CGR=CGR+ADD
         CNY=CNY+FLOAT(ICG-NREC2)*ADD
         CNX=CNX+FLOAT(KCG-K)*ADD
98       CONTINUE
         ENDDO
         ILIST(L)=CNY/CGR+ILIST(L)
         KLIST(L)=CNX/CGR+KLIST(L)
         GOTO 150
d243 1
a243 1
            GOTO 9999
d255 1
a255 1
C        CANGED 2/8/88 MR
d261 2
a262 3
            IF((FK-KLIST(LI))**2+(FI-ILIST(LI))**2.GT.FN2)GOTO 2910
            ALIST(L)=0.0

d322 2
a323 2
            IF(IROW.LT.1) IROW=IROW+NROW
            IF(IROW.GT.NROW) IROW = IROW-NROW
d325 1
a325 1
            I1=(I-1)*3
d327 3
a329 3
               ISAM=KL+K-2
               IF(ISAM.LT.1)ISAM=ISAM+NSAM
               IF(ISAM.GT.NSAM) ISAM=ISAM-NSAM
d339 1
a339 1
351      FORMAT('  + (',F5.2,', ',F5.2,')  PEAK VALUE = ',G12.5)
d341 3
a343 3
C        IF(NSEL(5).NE.0) PARAM(NSEL(5))= XSH+KPAR-NXCTR
C        IF(NSEL(6).NE.0) PARAM(NSEL(6))= YSH+IPAR-NYCTR
C        IF(NSEL(7).NE.0) PARAM(NSEL(7))= PEAKV
d347 1
a347 1
         IDIFF=ML-NPKCNT
d349 2
a350 2
401      FORMAT(' **',I5,' PEAKS SPECIFIED ',I5,' PEAKS PASSED ',
     &       I5,' PEAKS EXCLUDED (NEIGB.DIST. EDGE EXCL.)')
a351 7
9999     IF (ALLOCATED(IPOS))   DEALLOCATE (IPOS)
         IF (ALLOCATED(ILIST))  DEALLOCATE (ILIST)
         IF (ALLOCATED(KLIST))  DEALLOCATE (KLIST)
         IF (ALLOCATED(KXLIST)) DEALLOCATE (KXLIST)
         IF (ALLOCATED(IXLIST)) DEALLOCATE (IXLIST)
         IF (ALLOCATED(ALIST))  DEALLOCATE (ALIST)
         IF (ALLOCATED(RLIST))  DEALLOCATE (RLIST)
@


1.15
log
@*** empty log message ***
@
text
@d74 4
a77 1
         ALLOCATE(IPOS(ML),STAT=IRTFLG)
d82 1
a82 1
         ALLOCATE(ILIST(ML),KLIST(ML),KXLIST(ML),IXLIST(ML),STAT=IRTFLG)
d87 1
a87 1
         ALLOCATE(ALIST(ML),RLIST(ML),STAT=IRTFLG)
@


1.14
log
@used allocate
@
text
@d74 1
a74 2
         ALLOCATE(IPOS(ML),ILIST(ML),KLIST(ML),KXLIST(ML),IXLIST(ML),
     &            ALIST(ML),RLIST(ML),STAT=IRTFLG)
d77 10
@


1.13
log
@nsel off by one (pawel)
@
text
@d50 1
d53 1
a53 2
         COMMON DUMMY(80),ILIST,KLIST,KXLIST,IXLIST,NPTR,IPOS,
     &   ALIST,RLIST,DLIST,BUF(32000)
d55 3
a57 1
         PARAMETER (MLM=4000)
d59 2
a60 3
         REAL ILIST(MLM),KLIST(MLM),KXLIST(MLM),IXLIST(MLM)
         DIMENSION NPTR(64),IPOS(MLM)
         REAL ALIST(MLM),RLIST(MLM),DLIST(6)
d64 6
a69 1
         NULL=CHAR(0)
d73 6
a78 4
         IF (ML.GT.MLM) THEN
         ML=MLM
         WRITE(NOUT,9) ML
9        FORMAT(' *** WARNING: NUMBER OF PEAKS REDUCED TO ',I3)
a79 3
         IF(MAXDIM.GE.3*NSAM+200) GOTO 10
         CALL ERRT(6,'SPEAKG',NE)
         RETURN
d81 1
d83 3
a85 3
            IPOS(K)=0.
            ILIST(K) = 0
            KLIST(K) = 0
d90 5
a94 4
         NTAB=1
         NXCTR=NSAM/2+1
         NYCTR=NROW/2+1
         IF(NOR.EQ.0)GO TO 30
d97 4
a100 3
         IF(NTAB.LE.ML)GO TO 30
         CALL ERRT(25,'SPEAK',NE)
         RETURN
d104 1
a104 1
         IF(CG2.EQ.0) CG2=CG
d108 1
a108 1
     &   NULL,IRTFLG)
d111 4
a114 4
         IF(IEWY.EQ.0) IEWY=IEWX
C
C  MAKE SURE THAT THE EDGE EXCLUSION IS AT LEAST AS LARGE AS THE
C  CENTER OF GRAVITY AXES:
d119 1
a119 1
C
d123 2
a124 2
C CALCULATE HOW MANY RECORDS HAVE TO BE READ IN TO COVER THE COMPLETE
C FIELD USED IN THE CENTER OF GRAVITY CALCULATIONS:
d126 2
a127 2
C MAKE DIAMETER AN ODD NUMBER (=TOTAL NUMBER OF RECORDS TO
C BE AVAILABLE AT ANY TIME)
d132 1
a132 1
C INITIALIZE MREAD
d134 1
a134 1
C
d137 1
a137 1
C
d140 3
a142 3
C
C GET BEGINNING LOCATION OF THREE LINES
C
d148 1
a148 1
C CHECK IF A IS SMALLER THAN THE 8 SURROUNDING POINTS:
d160 1
a160 1
C NEW LOKAL PEAK FOUND:
d162 2
a163 2
C CHECK IF PEAK IS LARGER THAN THE ML PEAKS FOUND PREVIOUSLY
C AND PUT IT INTO THE CORRECT RANK POSITION
d169 6
a174 6
         JO = ML-J+L1
         JN = ML-J+L1-1
         ALIST(JO) = ALIST(JN)
         ILIST(JO) = ILIST(JN)
         KLIST(JO) = KLIST(JN)
         IPOS(JO)=IPOS(JN)
d176 2
a177 2
C
C STORE PEAK HEIGHT AND COORDINATES
d185 2
a186 2
C
C CENTER OF GRAVITY SEARCH
d193 1
a193 1
C IF POSITIVITY OF AREA IS ENFORCED DETERMINE THE AREA'S MINIMUM:
d199 6
a204 6
         XSQ=(KCG-K)**2
         CRIT=XSQ/CGSQ+YSQ/CG2SQ
         IF(CRIT.GT.1) GOTO 198
         IND2=IND1+KCG
         XXX=BUF(IND2)
         IF(AMIN.GT.XXX) AMIN=XXX
d208 1
a208 1
C CALCULATE THE CENTER OF GRAVITY:
d212 1
a212 1
C
d218 1
a218 1
C POINT INSIDE ELLIPTICAL AREA FOR CGR DETERMINATION:
d220 1
a220 1
C
d224 1
a224 1
C
d252 1
a252 1
            RETURN
d261 2
a262 2
C FOR EACH PEAK, MAKE SURE IT DOES NOT FALL WITHIN RADIUS FNEIGH
C OF A HIGHER-RANKING ONE
d264 2
a265 2
C CANGED 2/8/88 MR
C     DO 2950 L=MLIST,3,-1
d270 2
a271 2
         IF((FK-KLIST(LI))**2+(FI-ILIST(LI))**2.GT.FN2)GOTO 2910
         ALIST(L)=0.0
d276 2
a277 2
C
C NOW SELECT PEAKS THAT COMPLY WITH ALL CONDITIONS AND ENTER IN DOC-FILE
d283 1
a283 1
319     FORMAT(' NUMBER OF REFERENCE PEAK INCREASED BY 1. NEW VAL.:'
d286 1
d315 1
a315 1
C STORE VALUES IN REGISTERS IF REQUIRED:
d324 2
a325 2
C 9/25/81 PARABOLIC FIT TO THE 3X3 NEIGHBORHOOD OF THE PEAK POINT
C PROGRAM SECTION SENT BY M.VAN HEEL, MODIFIED FOR SPIDER USE. JF
d327 1
a327 1
C APPLIED ONLY TO HIGHEST RANKING PEAK
d331 12
a342 13
         IROW=IPAR+I-2
         IF(IROW.LT.1) IROW=IROW+NROW
         IF(IROW.GT.NROW) IROW = IROW-NROW
         CALL REDLIN(LUN,BUF,NSAM,IROW)
         I1=(I-1)*3
         DO  K=1,3
         ISAM=KL+K-2
         IF(ISAM.LT.1)ISAM=ISAM+NSAM
         IF(ISAM.GT.NSAM) ISAM=ISAM-NSAM
C        USE RLIST BUFFER WHICH IS NO LONGER NEEDED
         RLIST(I1+K)= BUF(ISAM)
         ENDDO

d362 7
a369 1
C END
@


1.12
log
@reg_set_nsel params changed
@
text
@d12 1
a12 1
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
d36 3
a38 2
C                                                                     M.R.
C     REGISTER POSITIONS 1= INTEGER X-SHIFT
a45 1
C
d82 1
a82 1
	 ENDDO
d167 1
a167 1
	 ENDDO
d198 1
a198 1
	 ENDDO
d208 1
a208 1
C
d226 1
a226 1
	 ENDDO
d232 1
a232 1
	 ENDDO
d242 2
a243 2
            CALL REG_SET_NSEL(1,5,0.0, 0.0, 0.0, 0.0, 0,0,IRTFLG)
            CALL REG_SET_NSEL(6,1,0.0, 0.0, 0.0, 0.0, 0,0,IRTFLG)
d264 1
d266 1
a266 1
	 ENDDO
d333 1
a333 1
	 ENDDO
d335 1
a335 1
	 ENDDO
d355 1
@


1.11
log
@float not needed on arrays for reg_set
@
text
@d3 1
a3 1
C SPEAKC.F
d242 2
a243 2
            CALL REG_SET_NSEL(1, 0.0, 0.0, 0.0, 0.0, 0,0,IRTFLG)
            CALL REG_SET_NSEL(6, 0.0, 0.0, 0.0, 0.0, 0,0,IRTFLG)
d310 1
a310 1
         CALL REG_SET_NSEL(1,KXLIST(NTAB),IXLIST(NTAB),
d345 1
a345 1
         CALL REG_SET_NSEL(5, XSH+KPAR-NXCTR, YSH+IPAR-NYCTR,
d352 1
@


1.10
log
@used reg_set
@
text
@d221 1
a221 1
     $   '  FOUND AT PIXEL ',2I5,'  CGR MEANINGLESS')
d275 1
a275 1
     $   ,I5)
d284 1
a284 1
     1   ,'DURING CALCULATION OF CENTER OF GRAVITY')
d286 1
a286 1
     2   ALIST(L),RLIST(L),IPOS(L)
d288 1
a288 1
     1   KXLIST(L),IXLIST(L),ALIST(L),RLIST(L),IPOS(L)
d298 1
a298 1
     1   KXLIST(L),IXLIST(L),ALIST(L),RLIST(L),IPOS(L)
d310 1
a310 1
         CALL REG_SET_NSEL(1,FLOAT(KXLIST(NTAB)),FLOAT(IXLIST(NTAB)),
d345 1
a345 1
         CALL REG_SET_NSEL(5, XSH+KPAR-NXCTR, YSH+IPAR-NYCTR),
@


1.9
log
@a
@
text
@d3 1
a3 1
C $$ SPEAKC.FOR
d15 1
a16 9
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--************************************************************************
C
C $$ SPEAKC.FOR
C
         SUBROUTINE SPEAKC(FILNAM,LUN,NSAM,NROW,MAXDIM,OPTO,NDOC)
C $$ SPEAK:    SEARCH FOR HIGHEST PEAKS
C
d45 5
d53 1
a53 1
     $   ALIST,RLIST,DLIST,BUF(32000)
d66 1
a66 1
     1      'ENTER # OF PEAKS,CENTER ORIGIN OVERRIDE(0/1)')
d77 5
a81 5
         IPOS(K)=0.
         ILIST(K) = 0
         KLIST(K) = 0
         RLIST(K) = 0.
         ALIST(K) = 0.
d88 2
a89 2
         CALL RDPRMI(NXCTR,NYCTR,NLOOP,ILOOP,'NEW ORIGIN COORDINATES$')
      CALL RDPRMI(NTAB,NDUM,NLOOP,ILOOP,'ENTER PEAK NUMBER FOR RATIO$')
d93 1
d95 1
a95 1
     $   'ELLIPSE AXES (X,Y) FOR CGR CALCULATION$')
d233 1
d236 9
a244 7
         IF(NMAX.EQ.0)  THEN
         WRITE(NDAT,1234)
1234     FORMAT(1X,'*** NO PEAK FOUND')
         DO  I=1,7
         IF(NSEL(I).NE.0) PARAM(NSEL(I)) = 0.0
         ENDDO
         RETURN
d246 1
d251 1
a251 1
     1   '     RATIO',5X,' 1 IF NEGATIVE'/5X,58X,'VALUES IN CGR AREA')
d304 1
a304 1
C
d306 8
a313 5
         IF(NSEL(1).NE.0) PARAM(NSEL(1)) = KXLIST(NTAB)
         IF(NSEL(2).NE.0) PARAM(NSEL(2)) = IXLIST(NTAB)
         IF(NSEL(3).NE.0) PARAM(NSEL(3)) = ALIST(NTAB)
         IF(NSEL(4).NE.0) PARAM(NSEL(4)) = RLIST(NTAB)
C
d316 1
a316 1
C
d318 1
a318 1
C
d330 1
a330 1
C USE RLIST BUFFER WHICH IS NO LONGER NEEDED
d333 1
a333 5
C
C DEBUGGING ONLY
C     WRITE(NOUT,341)(RLIST(I1+K),K=1,3)
C341  FORMAT(1X,3G12.5)
C
d335 1
d337 2
a338 1
         IF(NOUT.NE.NDAT)   WRITE(NOUT,351)XSH,YSH,PEAKV
d341 7
a347 3
         IF(NSEL(5).NE.0) PARAM(NSEL(5))= XSH+KPAR-NXCTR
         IF(NSEL(6).NE.0) PARAM(NSEL(6))= YSH+IPAR-NYCTR
         IF(NSEL(7).NE.0) PARAM(NSEL(7))= PEAKV
d351 1
a351 1
     $   I5,' PEAKS EXCLUDED (NEIGB.DIST. EDGE EXCL.)')
@


1.8
log
@H
@
text
@d67 1
a67 1
CNO_SAVE
@


1.7
log
@*** empty log message ***
@
text
@d222 1
a222 1
1999     FORMAT(1H ,'*** NEGATIVE VALUE ',G12.4,
d272 1
a272 1
319     FORMAT(1H ,'NUMBER OF REFERENCE PEAK INCREASED BY 1. NEW VAL.:'
d281 1
a281 1
304      FORMAT(1H ,'*** WARNING: PIXELS WITH NEGATIVE VALUES FOUND '/
d343 1
a343 1
401      FORMAT(1H ,'**',I5,' PEAKS SPECIFIED ',I5,' PEAKS PASSED ',
@


1.6
log
@*** empty log message ***
@
text
@d79 1
a79 1
10       DO 20 K = 1,ML
d84 2
a85 1
20       ALIST(K) = 0.
d132 1
a132 1
         DO 250 I = NREC2,NROW-NREC2+1
d162 1
a162 1
         DO 80 J = L1,ML
d169 1
a169 1
80       CONTINUE
d189 1
a189 1
         DO 199 ICG=1,NREC
d200 1
a200 1
199      CONTINUE
d203 1
a203 1
991      DO 99 ICG=1,NREC
d228 1
a228 1
99       CONTINUE
d234 1
a234 1
250      CONTINUE
d256 1
a256 1
         DO 2950 L=MLIST,2,-1
d263 1
a263 1
2950     CONTINUE
d315 1
a315 1
         DO 350 I=1,3
d321 1
a321 1
         DO 340 K=1,3
d327 1
a327 1
340      CONTINUE
d333 1
a333 1
350      CONTINUE
@


1.5
log
@nosave
@
text
@d216 1
a216 1
1998     FORMAT(1H 'ICG,KCG,CRIT,BUF',2I5,2F12.4)
@


1.4
log
@need dlist(6)
@
text
@a52 2

#ifdef SP_UNIX
a53 3
#else
         INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d67 1
a67 1

d69 1
a69 1
     1      'ENTER # OF PEAKS,CENTER ORIGIN OVERRIDE(0/1)$')
@


1.3
log
@clean up unused variables and hollerith warnings
@
text
@d67 1
a67 1
         REAL ALIST(MLM),RLIST(MLM),DLIST(5)
@


1.2
log
@cpp_lines_added
@
text
@d73 2
a74 2
      CALL RDPRMI(ML,NOR,NLOOP,ILOOP,'ENTER # OF PEAKS,CENTER ORIGIN OVER
     1   RIDE(0/1)$')
@


1.1
log
@Initial revision
@
text
@d54 3
d58 1
@
