head	1.18;
access;
symbols
	pre_getangas:1.17
	GPL2010:1.17
	pre_GPL2010:1.16
	pre_var_equation:1.16
	pre_fftwrings:1.16
	pre_opfiles:1.16
	src:1.16
	best-code:1.16
	x-named-regs:1.16
	x:1.16
	v13-00:1.16
	pre_GPL:1.14
	prec_CA:1.14
	noindx:1.13
	Bproc:1.11
	oct21:1.9
	last77:1.9;
locks; strict;
comment	@c @;


1.18
date	2014.01.12.19.42.12;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.06.24.13.25.06;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.20.31.12;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.18.22.14;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.20.19.38.57;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.11.14.08.18;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.19.14.30.49;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.12.03.14.14.18;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.11.10.23.09.07;	author yuchen;	state Exp;
branches;
next	1.9;

1.9
date	97.10.17.15.18.26;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	97.10.16.14.27.08;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	97.10.02.13.01.05;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.10.01.20.17.03;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.08.15.17.16.47;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.08.15.17.10.55;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.08.15.15.08.03;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.05.06.19.17.35;	author ramani;	state Exp;
branches;
next	1.1;

1.1
date	96.04.23.15.07.07;	author mladjadj;	state Exp;
branches;
next	;


desc
@automatic particle picking
@


1.18
log
@enter
@
text
@C ++********************************************************************
C                                                                      *
C ATSA                                                                 *
C                  OPFILEC                         FEB 03 ARDEAN LEITH
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C***********************************************************************

	SUBROUTINE ATSA(MAXMEM)

	PARAMETER  (NILMAX=4000)
	PARAMETER (MAXREG=3)
	PARAMETER (MAXKEY=2000)
	PARAMETER (MVAR=8)

        INCLUDE 'CMBLOCK.INC' 
        INCLUDE 'CMLIMIT.INC' 

	COMMON  BUF(1024),Q(1)
	COMMON /DIMSS1/ K_Q,K_2,K_3,K_4,K_5,K_6,K_7,K_8
	DIMENSION IR(MAXREG,MAXKEY),VART(MVAR)
        CHARACTER(LEN=MAXNAM)   ::   FINPAT,FINPIC,FIL6,FIL5,DOCM
	CHARACTER*1 NULL

	DATA  INPIC/77/,LUN50/51/,LUN51/28/

	NULL=CHAR(0)
	NMAX=NILMAX

        CALL FILERD(FINPAT,NLET,NULL,
     &     'TEMPLATE FOR WINDOW SERIES',IRTFLG)
                                                       
        CALL RDPRMI(NNSAM,NNROW,NOT_USED,'SIZE OF MINI WINDOW')
        OPEN(UNIT=4,FILE='SCR',STATUS='UNKNOWN')

        CALL FILERD(DOCM,NLETDM,DATEXC,
     &             'DOCUMENT WITH CATEGORIES',IRTFLG)
	IKEY=1
        ISW=0
        CALL UNSDAL(DOCM,ISW,44,IKEY,RLIST,1,Q,MAXKEY,
     &              MAXREG,NMG,LERR)

        DO  II=1,NMG
           JI=(II-1)*MAXREG+2
           IR(1,II)=Q(JI)
           IR(2,II)=Q(JI+1)
	ENDDO
 
	DO  I=1,NMG
 	   CALL  FILGET(FINPAT,FINPIC,NLET,IR(1,I),INTFLG)
	   IF (INTFLG.NE.0) RETURN

           MAXIM = 0
           CALL OPFILEC(0,.FALSE.,FINPIC,INPIC,'O',IFORM,NSAM,NROW,NSL,
     &               MAXIM,' ',.FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

	   GR=IR(2,I)
	   N2=NSAM/4
           K_Q=1
           K_2=IPALIGN64(K_Q+NSAM*NROW)
           K_3=IPALIGN64(K_2+NSAM*NROW)
           K_4=IPALIGN64(K_3+NSAM)
           K_5=IPALIGN64(K_4+NROW)
           K_6=IPALIGN64(K_5+NSAM)
           K_7=IPALIGN64(K_6+N2)
           K_8=IPALIGN64(K_7+N2)
           K_9=IPALIGN64(K_8+NSAM)

C          MEMORY REQUIREMENT
           MEMREQ=K_9
           IF (MEMREQ.GT.MAXMEM) THEN
	       CALL ERRT(6,'AT SA',NE)
               RETURN
           ENDIF

           DO IJK = 1,NROW
              CALL REDLIN(INPIC,Q(1+((IJK-1))*NSAM),NSAM,IJK)
           ENDDO

           LENGTH=7
           LENGTH=LENGTH/2+1
           K=LENGTH*LENGTH
C          MAKE SURE THAT LENGTH*LENGTH<NSAM ! OTHERWISE CHANGE XX.
           CALL MEED(Q(K_Q),Q(K_5),NSAM,LENGTH,Q(K_2),K)
C
           CALL TOMA(NSAM,NROW,NNSAM,NNROW,Q(K_2),VART,MVAR)
           CALL POJ(NSAM,Q(K_2),Q(K_3),Q(K_4),Q(K_5),Q(K_6),
     &           Q(K_7),Q(K_8),N2,VV)

           WRITE(4,299)GR,(VART(LJK),LJK=1,MVAR),VV
299        FORMAT(2X,F3.1,4(1X,1PE14.7),/,4(1X,1PE14.7),/,1(1X,1PE14.7))

           CLOSE(INPIC)
        ENDDO
c100	CONTINUE
	CLOSE(4)

        CALL FILERD(FIL6,NLET6,DATEXC,'ANALYSIS RESULTS',IRTFLG)
        IF (FIL6(1:1).EQ.'*') RETURN
	OPEN(LUN51,FILE=FIL6,STATUS='UNKNOWN')

        CALL FILERD(FIL5,NLET5,DATEXC,'DISCRIM FUNCTION',IRTFLG)
        IF (FIL5(1:1).EQ.'*') RETURN
  	OPEN(LUN50,FILE=FIL5,STATUS='UNKNOWN',FORM='UNFORMATTED')

        OPEN(4,FILE='SCR',STATUS='OLD')

	CALL DISC(LUN50,LUN51)

	CLOSE(4,STATUS='DELETE')
	END
@


1.17
log
@GPL_2010
@
text
@d52 1
a52 1
     &     'ENTER TEMPLATE FOR WINDOW SERIES',IRTFLG)
@


1.16
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.15
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.14
log
@opfilec
@
text
@d8 24
@


1.13
log
@nloop,iloop_removed
@
text
@d4 1
d25 2
d30 1
a30 1
	CHARACTER*80  FINPAT,FINPIC,FIL6,FIL5,DOCM
d62 1
a62 1
           CALL OPFILE(.FALSE.,FINPIC,INPIC,'O',IFORM,NSAM,NROW,NSL,
@


1.12
log
@openfb --> opfile & filcan removed
@
text
@d38 1
a38 1
        CALL RDPRMI(NNSAM,NNROW,NLOOP,ILOOP,'SIZE OF MINI WINDOW')
@


1.11
log
@cosmetic
@
text
@d22 1
a37 1

d41 1
a41 1
        CALL FILERD(DOCM,NLETDM,NULL,
a42 1
        CALL FILCAN(DOCM,NLETDM,NULL,NULL,DOCM,DATEXC,IER)
d56 1
d58 4
a61 8
	   IF (INTFLG.NE.0)THEN
	      STOP
	   ENDIF
 	   CALL  OPENFB(BUF,FINPIC,INPIC,NSAM,NROW,'OLD',NF,NSL)
 	   IF (NF.NE.2)  THEN
	      WRITE(NOUT,*)  ' FILE NOT FOUND'
	      RETURN
	   ENDIF
d104 1
a104 1
        CALL FILERD(FIL6,NLET6,NULL,'ANAYSIS RESULTS',IRTFLG)
a105 2

        CALL FILCAN(FIL6,NLET6,NULL,NULL,FIL6,DATEXC,IER)
d108 1
a108 1
        CALL FILERD(FIL5,NLET5,NULL,'DISCRIM FUNCTION',IRTFLG)
a109 2

        CALL FILCAN(FIL5,NLET5,NULL,NULL,FIL5,DATEXC,IER)
@


1.10
log
@a
@
text
@d1 14
d17 1
d28 1
a30 1
C
d35 1
a35 1
     &  'ENTER TEMPLATE FOR WINDOW SERIES',IRTFLG)
d39 1
a39 1
           OPEN(UNIT=4,FILE='SCR',STATUS='UNKNOWN')
d42 1
a42 1
     &  'DOCUMENT WITH CATEGORIES',IRTFLG)
d47 2
a48 3
     &  MAXREG,NMG,LERR)
C
C
d50 3
a52 3
        JI=(II-1)*MAXREG+2
        IR(1,II)=Q(JI)
        IR(2,II)=Q(JI+1)
a53 1
c900     CONTINUE
d56 26
a81 27
 	CALL  FILGET(FINPAT,FINPIC,NLET,IR(1,I),INTFLG)
C
	IF(INTFLG.NE.0)THEN
	STOP
	ENDIF
 	CALL  OPENFB(BUF,FINPIC,INPIC,NSAM,NROW,'OLD',NF,NSL)
 	IF(NF.NE.2)  THEN
	WRITE(NOUT,*)  ' FILE NOT FOUND'
	RETURN
	ENDIF
C
	GR=IR(2,I)
	N2=NSAM/4
        K_Q=1
	K_2=IPALIGN64(K_Q+NSAM*NROW)
	K_3=IPALIGN64(K_2+NSAM*NROW)
	K_4=IPALIGN64(K_3+NSAM)
	K_5=IPALIGN64(K_4+NROW)
	K_6=IPALIGN64(K_5+NSAM)
	K_7=IPALIGN64(K_6+N2)
	K_8=IPALIGN64(K_7+N2)
	K_9=IPALIGN64(K_8+NSAM)
C
C MEMORY REQUIREMENT
C
	MEMREQ=K_9
	IF(MEMREQ.GT.MAXMEM)THEN
d83 16
a98 2
        RETURN
        ENDIF
d100 2
a101 16
	DO IJK = 1,NROW
        CALL REDLIN(INPIC,Q(1+((IJK-1))*NSAM),NSAM,IJK)
	ENDDO
C
C
	LENGTH=7
	LENGTH=LENGTH/2+1
	K=LENGTH*LENGTH
C MAKE SURE THAT LENGTH*LENGTH<NSAM ! OTHERWISE CHANGE XX.
	CALL MEED(Q(K_Q),Q(K_5),NSAM,LENGTH,Q(K_2),K)
C
	CALL TOMA(NSAM,NROW,NNSAM,NNROW,Q(K_2),VART,MVAR)
	CALL POJ(NSAM,Q(K_2),Q(K_3),Q(K_4),Q(K_5),Q(K_6),
     &  Q(K_7),Q(K_8),N2,VV)
        WRITE(4,299)GR,(VART(LJK),LJK=1,MVAR),VV
299     FORMAT(2X,F3.1,4(1X,1PE14.7),/,4(1X,1PE14.7),/,1(1X,1PE14.7))
d103 2
a104 2
	CLOSE(INPIC)
	ENDDO
d110 1
d112 2
a113 1
	 OPEN(LUN51,FILE=FIL6,STATUS='UNKNOWN')
d116 1
d119 1
a119 1
C
d121 1
d123 1
@


1.9
log
@R
@
text
@d14 1
a14 1
CNO_SAVE
@


1.8
log
@nothing
@
text
@d48 1
a48 1
 	CALL  OPENFB(BUF,FINPIC,INPIC,NSAM,NROW,'R',NF,NSL)
@


1.7
log
@*** empty log message ***
@
text
@d1 1
@


1.6
log
@*** empty log message ***
@
text
@d104 1
a104 1
        OPEN(4,FILE='SCR',READONLY,STATUS='OLD')
@


1.5
log
@*** empty log message ***
@
text
@d34 1
a34 1
        DO 900 II=1,NMG
d38 2
a39 1
900     CONTINUE
d41 1
a41 1
	DO 100 I=1,NMG
d73 3
a75 2
	DO 203 IJK = 1,NROW
203      CALL REDLIN(INPIC,Q(1+((IJK-1))*NSAM),NSAM,IJK)
d91 2
a92 1
100	CONTINUE
@


1.4
log
@*** empty log message ***
@
text
@d55 8
a62 8
	K_2=IPALING6(K_Q+NSAM*NROW)
	K_3=IPALING6(K_2+NSAM*NROW)
	K_4=IPALING6(K_3+NSAM)
	K_5=IPALING6(K_4+NROW)
	K_6=IPALING6(K_5+NSAM)
	K_7=IPALING6(K_6+N2)
	K_8=IPALING6(K_7+N2)
	K_9=IPALING6(K_8+NSAM)
@


1.3
log
@ipalign64
@
text
@d55 8
a62 8
	K_2=K_Q+IPALIGN6(NSAM*NROW)
	K_3=K_2+IPALIGN6(NSAM*NROW)
	K_4=K_3+IPALIGN6(NSAM)
	K_5=K_4+IPALIGN6(NROW)
	K_6=K_5+IPALIGN6(NSAM)
	K_7=K_6+IPALIGN6(N2)
	K_8=K_7+IPALIGN6(N2)
	K_9=K_8+IPALIGN6(NSAM)
@


1.2
log
@vax error fixed.
@
text
@d13 1
a13 2

C
d55 8
a62 8
	K_2=K_Q+NSAM*NROW
	K_3=K_2+NSAM*NROW
	K_4=K_3+NSAM
	K_5=K_4+NROW
	K_6=K_5+NSAM
	K_7=K_6+N2
	K_8=K_7+N2
	K_9=K_8+NSAM
a103 1
	RETURN
a104 1
C
@


1.1
log
@AT SA automatic particle picking
@
text
@d11 1
a11 2
	CHARACTER*1 NULL,ANS
	LOGICAL EX
d65 7
@
