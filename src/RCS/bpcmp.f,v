head	1.22;
access;
symbols
	pre_mrcs:1.22
	healthdept_2018:1.22
	pre_getangas:1.21
	GPL2010:1.21
	pre_GPL2010:1.20
	pre_var_equation:1.20
	pre_fftwrings:1.20
	pre_opfiles:1.20
	src:1.20
	best-code:1.20
	x-named-regs:1.20
	x:1.20
	v13-00:1.20
	pre_GPL:1.18
	prec_CA:1.18
	noindx:1.13
	Bproc:1.11
	oct21:1.8
	last77:1.8;
locks; strict;
comment	@c @;


1.22
date	2018.10.03.14.33.56;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2010.06.24.13.25.09;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2005.10.17.20.19.47;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.17.18.12.34;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2003.09.29.17.57.06;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.04.16.43.27;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.05.29.17.12.58;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.05.28.15.19.54;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.20.21.24.41;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.01.02.18.03.37;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.19.15.49.21;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.12.07.16.49.24;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.12.07.15.15.24;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.11.10.23.09.09;	author yuchen;	state Exp;
branches;
next	1.8;

1.8
date	97.10.17.15.18.30;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	97.10.01.21.06.41;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.02.07.18.49.09;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	95.10.03.12.57.19;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.02.16.20.08.27;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	95.02.01.22.06.23;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.07.15.14.41.27;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.07.11.19.34.10;	author pawel;	state Exp;
branches;
next	;


desc
@@


1.22
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C BPCMP                                                               *
C                 PARTITION                       MAY 03 ARDEAN LEITH
C                 PARTITION BUG                   SEP 03 ARDEAN LEITH
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  BPCMP(PROJ,W,NNNN,NSAM,NROW,LPRJ,CB,NX3D,NY3D,NZC,ILIST,
C           DM,SS,NANG,SNR,IOPIC,FINPAT,FINPIC)  
C                                                                      *
C  PURPOSE:  PROJECTIONS IN MEMORY                                                          *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE BPCMP(PROJ,W,NNNN,NSAM,NROW,LPRJ,CB,NX3D,NY3D,NZC,
     &          ILIST,DM,SS,NANG,SNR,IOPIC,FINPAT,FINPIC,INPROJ)

        DIMENSION :: PROJ(NNNN,NROW,LPRJ),CB(NX3D,NY3D),W(NNNN/2,NROW)
        DIMENSION :: DM(9,NANG),SS(6,NANG),ILIST(NANG)

        CHARACTER(LEN=*) ::  FINPIC,FINPAT
        LOGICAL          ::  FIRST

        FIRST = .TRUE.
        NLET  = LEN(FINPAT)

        DO K=1,NANG
           IT = ILIST(K)
           CALL FILGET(FINPAT,FINPIC,NLET,IT,IRTFLG)
           MAXIM = 0
           CALL OPFILEC(0,.FALSE.,FINPIC,INPROJ,'O',IFORM,LSAM,LROW,NSL,
     &               MAXIM,' ',.FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

C          LOAD THE PROJECTION, DO NOT USE REDVOL
           LP = MOD(K-1,LPRJ)+1
           DO J=1,NROW
              CALL REDLIN(INPROJ,PROJ(1,J,LP),NSAM,J)
	   ENDDO
           CLOSE(INPROJ)

           IF (SNR .GT. 0.0)  THEN
              CALL WTF(IDUM,.FALSE.,PROJ(1,1,LP),W,NNNN,NSAM,NROW,SS,
     &                 NANG, SNR,K)
	   ELSEIF (SNR .LT. 0.0)  THEN
              CALL WTM(IDUM,.FALSE.,PROJ(1,1,LP),W,NNNN,NSAM,NROW,SS,
     &                 NANG, -SNR,K)
	   ENDIF

           IF (LP.EQ.LPRJ .OR. K.EQ.NANG)  THEN
              CALL BPCM(PROJ,NNNN,NSAM,NROW,LP,CB,NX3D,NY3D,NZC,
     &                  DM(1,K),IOPIC,FIRST)
              FIRST = .FALSE.

           ENDIF
	ENDDO

        END
@


1.21
log
@GPL_2010
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.20
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.19
log
@HRI GPL License used
@
text
@a8 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.18
log
@partition bug
@
text
@d10 24
@


1.17
log
@for partition
@
text
@d6 1
d17 2
a18 2
C  BPCMP (PROJ,W,NNNN,NSAM,NROW,LPRJ,CB,NX3D,NY3D,NZC,ILIST,
C           DM,SS,NANG,NANGP,SNR,IOPIC,FINPAT,FINPIC)  
d28 1
a28 1
     &     ILIST,ILISTP,DM,SS,NANG,NANGP,SNR,IOPIC,FINPAT,FINPIC,INPROJ)
d30 2
a31 2
        DIMENSION      PROJ(NNNN,NROW,LPRJ),CB(NX3D,NY3D),W(NNNN/2,NROW)
        DIMENSION      ILISTP(NANGP),DM(9,NANG),SS(6,NANG),ILIST(NANG)
d39 3
a41 3
        DO K=1,NANGP
           IANGNOW = ILISTP(K)
           CALL  FILGET(FINPAT,FINPIC,NLET,IANGNOW,IRTFLG)
d55 2
a56 2
              CALL WTF(ILIST,PROJ(1,1,LP),W,NNNN,NSAM,NROW,SS,NANG,
     &                 SNR,IANGNOW)
d58 2
a59 2
              CALL WTM(ILIST,PROJ(1,1,LP),W,NNNN,NSAM,NROW,SS,NANG,
     &                -SNR,IANGNOW)
d64 1
a64 1
     &                  DM(1,IANGNOW),IOPIC,FIRST)
@


1.16
log
@partition
@
text
@d19 1
a19 1
C  PURPOSE:  PROGECTIONS IN MEMORY                                                          *
d26 2
a27 3
        SUBROUTINE BPCMP
     &     (PROJ,W,NNNN,NSAM,NROW,LPRJ,CB,NX3D,NY3D,NZC,ILIST,
     &      DM,SS,NANG,NANGP,SNR,IOPIC,FINPAT,FINPIC,INPROJ)
d30 1
a30 1
        DIMENSION      ILIST(NANG),DM(9,NANG),SS(6,NANG)
d38 3
a40 2
        DO K=1,NANG
           CALL  FILGET(FINPAT,FINPIC,NLET,ILIST(K),IRTFLG)
a52 3
           IANGNOW = K
           IF (NANG .NE. NANGP) IANGNOW = ILIST(K)

d54 1
a54 1
              CALL WTF(PROJ(1,1,LP),W,NNNN,NSAM,NROW,SS,NANG,
d57 1
a57 1
              CALL WTM(PROJ(1,1,LP),W,NNNN,NSAM,NROW,SS,NANG,
@


1.15
log
@partition
@
text
@d5 1
d17 1
a17 1
C           DM,SS,NANG,SNR,IOPIC,FINPAT,FINPIC)  
d28 1
a28 1
     &      DM,SS,NANG,SNR,IOPIC,FINPAT,FINPIC,INPROJ)
d46 1
a46 1
C          LOAD THE SLICE, DO NOT USE REDVOL
d53 3
d57 2
a58 1
              CALL WTF(PROJ(1,1,LP),W,NNNN,NSAM,NROW,SS,NANG,SNR,K)
d60 2
a61 1
              CALL WTM(PROJ(1,1,LP),W,NNNN,NSAM,NROW,SS,NANG,-SNR,K)
d66 1
a66 1
     &                  DM(1,K),IOPIC,FIRST)
@


1.14
log
@opfilec
@
text
@d18 1
a18 1
C  PURPOSE:                                                            *
a21 1
C        0         2         3         4         5         6         7 *
d32 2
a33 2
        CHARACTER*(*)  FINPIC,FINPAT
        LOGICAL        FIRST
a35 1
        LDM   = 1
d37 1
d45 1
d60 1
a60 1
     &                  DM(1,LDM),IOPIC,FIRST)
d62 1
a62 1
              LDM   = K+1
@


1.13
log
@finpat
@
text
@d42 1
a42 1
           CALL OPFILE(.FALSE.,FINPIC,INPROJ,'O',IFORM,LSAM,LROW,NSL,
@


1.12
log
@openfb--> opfile & cosmeti
@
text
@d16 2
a17 1
C           DM,SS,NANG,SNR,NOUT,IOPIC)                                                                 *
d26 1
a26 1
        SUBROUTINE  BPCMP
d28 1
a28 1
     &      DM,SS,NANG,SNR,NOUT,IOPIC)
d33 1
a33 2
        CHARACTER*80   FINPIC,FINPAT
        COMMON /F_SPEC/FINPAT,NLET,FINPIC
d36 3
a38 4
        DATA  INPROJ/99/

        FIRST=.TRUE.
        LDM=1
d40 1
a40 1
           CALL  FILGET(FINPAT,FINPIC,NLET,ILIST(K),INTFLAG)
d46 1
a46 1
           LP=MOD(K-1,LPRJ)+1
d51 1
d53 1
a53 1
		CALL  WTF(PROJ(1,1,LP),W,NNNN,NSAM,NROW,SS,NANG,SNR,K)
d55 1
a55 1
		CALL  WTM(PROJ(1,1,LP),W,NNNN,NSAM,NROW,SS,NANG,-SNR,K)
d57 1
d59 2
a60 2
              CALL  BPCM(PROJ,NNNN,NSAM,NROW,LP,CB,NX3D,NY3D,NZC,
     &                   DM(1,LDM),IOPIC,FIRST)
@


1.11
log
@bad ( in comment col.
@
text
@d26 2
a27 2
     &  (PROJ,W,NNNN,NSAM,NROW,LPRJ,CB,NX3D,NY3D,NZC,ILIST,
     &          DM,SS,NANG,SNR,NOUT,IOPIC)
d29 2
a30 6
        DIMENSION   PROJ(NNNN,NROW,LPRJ),CB(NX3D,NY3D),W(NNNN/2,NROW)
        DIMENSION   ILIST(NANG),DM(9,NANG),SS(6,NANG)
        COMMON      DUMMY(80),BUF(1024)
        CHARACTER*80    FINPIC,FINPAT
        COMMON /F_SPEC/ FINPAT,NLET,FINPIC
        LOGICAL         FIRST
d32 4
d40 1
a40 1
        DO    K=1,NANG
d42 5
a46 6
           CALL  OPENFB(BUF,FINPIC,INPROJ,LSAM,LROW,'O',NF,NSL)
           IF (NF.NE.2)  THEN
              WRITE(NOUT,2032)   FINPIC
2032          FORMAT(' *** File not found ',A,/,' Operation abandoned')
              RETURN
           ENDIF
d48 2
a49 2
           DO    J=1,NROW
           CALL  REDLIN(INPROJ,PROJ(1,J,LP),NSAM,J)
d52 1
a52 1
           IF(SNR.GT.0.0)  THEN
d54 1
a54 1
	   ELSEIF(SNR.LT.0.0)  THEN
d57 1
a57 1
           IF (LP.EQ.LPRJ.OR.K.EQ.NANG)  THEN
d64 1
a64 1
c 8       CONTINUE
@


1.10
log
@header
@
text
@d4 1
a5 1
C                                                                      *
d15 2
a16 2
C                                                                      *
C                                                                      *
d25 1
a25 1
)        SUBROUTINE  BPCMP
d28 1
d35 1
@


1.9
log
@a
@
text
@d1 25
a25 1
        SUBROUTINE  BPCMP
@


1.8
log
@R
@
text
@d11 1
a11 1
CNO_SAVE
@


1.7
log
@*** empty log message ***
@
text
@d16 1
a16 1
           CALL  OPENFB(BUF,FINPIC,INPROJ,LSAM,LROW,'R',NF,NSL)
@


1.6
log
@new version
@
text
@d14 1
a14 1
        DO  8  K=1,NANG
d23 3
a25 2
           DO  61  J=1,NROW
61         CALL  REDLIN(INPROJ,PROJ(1,J,LP),NSAM,J)
d38 2
a39 1
8       CONTINUE
@


1.5
log
@72 col line, first -> logical, cosmetic
@
text
@d1 8
a8 10

	SUBROUTINE  BPCMP
     &	(PROJ,W,NSAM,NROW,LPRJ,CB,NX3D,NY3D,NZC,ILIST,
     &		DM,SS,NANG,SNR,NOUT,IOPIC,WORK)

	DIMENSION       PROJ(NSAM,NROW,LPRJ),W(NSAM,NROW),CB(NX3D,NY3D)
	DIMENSION       ILIST(NANG),DM(9,NANG),SS(6,NANG),WORK(*)
	COMMON          DUMMY(80),BUF(1024)
	CHARACTER*80    FINPIC,FINPAT
	COMMON /F_SPEC/ FINPAT,NLET,FINPIC
d10 1
a10 2

	DATA  INPROJ/99/
d12 18
a29 10

	FIRST=.TRUE.
	LDM=1
	DO  8  K=1,NANG
	   CALL  FILGET(FINPAT,FINPIC,NLET,ILIST(K),INTFLAG)
	   CALL  OPENFB(BUF,FINPIC,INPROJ,LSAM,LROW,'R',NF,NSL)
	   IF (NF.NE.2)  THEN
	      WRITE(NOUT,2032)   FINPIC
2032	      FORMAT(' *** File not found ',A,/,' Operation abandoned')
	      RETURN
d31 2
a32 12

	   LP=MOD(K-1,LPRJ)+1

	   DO  61  J=1,NROW
61 	   CALL  REDLIN(INPROJ,PROJ(1,J,LP),NSAM,J)
	   CLOSE(INPROJ)

	   IF(SNR.NE.0.0)  CALL  WTF(PROJ(1,1,LP),W,NSAM,NROW,SS,
     &                               NANG,SNR,K,WORK)

	   IF (LP.EQ.LPRJ.OR.K.EQ.NANG)  THEN
	      CALL  BPCM(PROJ,NSAM,NROW,LP,CB,NX3D,NY3D,NZC,
d34 5
a38 6
	      FIRST = .FALSE.
	      LDM   = K+1
	   ENDIF
8	CONTINUE
        RETURN
	END
@


1.4
log
@nosave mp
@
text
@d1 1
d5 8
a12 6
	DIMENSION  PROJ(NSAM,NROW,LPRJ),W(NSAM,NROW),CB(NX3D,NY3D)
	DIMENSION  ILIST(NANG),DM(9,NANG),SS(6,NANG),WORK(*)
	COMMON     DUMMY(80),BUF(1024)
	CHARACTER*80  FINPIC,FINPAT
	COMMON  /F_SPEC/  FINPAT,NLET,FINPIC
C
d15 1
a15 1
c
d19 23
a41 21
	CALL  FILGET(FINPAT,FINPIC,NLET,ILIST(K),INTFLAG)
	CALL  OPENFB(BUF,FINPIC,INPROJ,LSAM,LROW,'R',NF,NSL)
	IF(NF.NE.2)  THEN
	write(nout,2032)   FINPIC
2032	FORMAT(' File not found ',A80,/,' Operation abandoned')
	RETURN
	ENDIF
C
	LP=MOD(K-1,LPRJ)+1
C
	DO  61  J=1,NROW
61 	CALL  REDLIN(INPROJ,PROJ(1,J,LP),NSAM,J)
	CLOSE(INPROJ)
C
	IF(SNR.NE.0.0)  CALL  WTF(PROJ(1,1,LP),W,NSAM,NROW,SS,NANG,SNR,K,WORK)
c
	IF(LP.EQ.LPRJ.OR.K.EQ.NANG)  THEN
	CALL  BPCM(PROJ,NSAM,NROW,LP,CB,NX3D,NY3D,NZC,DM(1,LDM),IOPIC,FIRST)
	FIRST=.FALSE.
	LDM=K+1
	ENDIF
d43 1
@


1.3
log
@nosave
@
text
@d2 4
a5 3
     &	(PROJ,NSAM,NROW,LPRJ,CB,NX3D,NY3D,NZC,ILIST,DM,NANG,NOUT,IOPIC)
	DIMENSION  PROJ(NSAM,NROW,LPRJ),CB(NX3D,NY3D)
	DIMENSION  ILIST(NANG),DM(9,NANG)
d29 2
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
	DIMENSION  PROJ(NSAM,NROW,LPRJ),CB(NX3D)
d10 1
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
61 	CALL  REDLIN(INPROJ,PROJ(1,K2,LP),NSAM,J)
@
