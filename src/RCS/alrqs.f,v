head	1.9;
access;
symbols
	pre_mrcs:1.9
	healthdept_2018:1.9
	pre_getangas:1.7
	GPL2010:1.7
	pre_GPL2010:1.6
	pre_var_equation:1.6
	pre_fftwrings:1.6
	pre_opfiles:1.6
	src:1.6
	best-code:1.6
	x-named-regs:1.6
	x:1.6
	v13-00:1.6
	pre_GPL:1.4
	prec_CA:1.3
	noindx:1.3
	Bproc:1.1
	oct21:1.1;
locks; strict;
comment	@c @;


1.9
date	2018.10.03.14.33.54;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2011.06.20.18.37.57;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.24.13.25.02;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.20.12.04;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.17.18.06.09;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.07.15.06.39;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.30.19.34.04;	author hxgao;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.03.15.19.12;	author bimal;	state Exp;
branches;
next	1.1;

1.1
date	99.08.05.13.18.54;	author pawel;	state Exp;
branches;
next	;


desc
@@


1.9
log
@email_health_dept
@
text
@C++*********************************************************************
C
C $$ ALRQS.FOR
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C ALRQS(XIM,NSAM,NROW,NUMR,CIRC,LCIRC,NRING,MODE)
C
C PURPOSE : INTERPOLATION RECTANGULAR COORDINATES INTO POLAR COORDINATES  
C
C MAY NOT BE USED ANYMORE??  al jun 2011??
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

 	SUBROUTINE ALRQS(XIM,NSAM,NROW,NUMR,CIRC,LCIRC,NRING,MODE)

	DIMENSION         XIM(NSAM,NROW),CIRC(LCIRC)
	INTEGER           NUMR(3,NRING)
	CHARACTER*1       MODE
	DOUBLE PRECISION  PI,DFI

C       INTERPOLATION INTO POLAR COORDINATES
C       NO NEED TO SET CIRC TO ZERO, ALL ELEMENTS ARE DEFINED

	NS2 = NSAM/2+1
	NR2 = NROW/2+1
	PI  = 2 * DATAN(1.0D0)

	DO I=1,NRING

C          RADIUS OF THE RING
	   INR = NUMR(1,I)
	   YQ  = INR

	   L   = NUMR(3,I)
	   IF (MODE .EQ. 'H') THEN
	      LT = L/2
	   ELSEIF (MODE .EQ. 'F')  THEN
	      LT = L / 4
	   ELSE
	      CALL ERRT(101,'BAD MODE IN ALRQS',NE)
              RETURN
	   ENDIF

	   NSIM           = LT - 1
	   DFI            = PI/(NSIM+1)
	   KCIRC          = NUMR(2,I)
	   XOLD           = 0.0
	   YOLD           = INR
	   CIRC(KCIRC)    = QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	   XOLD           = INR
	   YOLD           = 0.0
	   CIRC(LT+KCIRC) = QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)

	   IF (MODE .EQ. 'F')  THEN
	      XOLD              = 0.0
	      YOLD              = -INR
	      CIRC(LT+LT+KCIRC) =
     &            QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	      XOLD              = -INR
	      YOLD              = 0.0
	      CIRC(LT+LT+LT+KCIRC) =
     &             QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
           ENDIF

           DO J=1,NSIM
	      FI            = DFI*J
	      X             = SIN(FI)*YQ
	      Y             = COS(FI)*YQ

	      XOLD          = X
	      YOLD          = Y
	      CIRC(J+KCIRC) = QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	      XOLD          = Y
	      YOLD          = -X
	      CIRC(J+LT+KCIRC) =
     &             QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)

	      IF (MODE .EQ. 'F')  THEN
	         XOLD                = -X
	         YOLD                = -Y
	         CIRC(J+LT+LT+KCIRC) =
     &                 QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	         XOLD                = -Y
	         YOLD                = X
	         CIRC(J+LT+LT+LT+KCIRC) =
     &               QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	      ENDIF
	   ENDDO
	ENDDO

	END
@


1.8
log
@*** empty log message ***
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.7
log
@GPL_2010
@
text
@d31 2
@


1.6
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.5
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
a29 1
C **************************************************************************
a36 1
C--************************************************************************
@


1.4
log
@cosmetic
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d48 1
@


1.3
log
@head added
@
text
@d14 3
a18 3
C IMAGE_PROCESSING_ROUTINE
C
C        1         2         3         4         5         6         7
d21 6
a26 7
C
C $$ ALRQS.FOR
C
 	SUBROUTINE  ALRQS(XIM,NSAM,NROW,NUMR,CIRC,LCIRC,NRING,MODE)
	DIMENSION  XIM(NSAM,NROW),CIRC(LCIRC)
	INTEGER  NUMR(3,NRING)
	CHARACTER*1  MODE
d29 6
a34 2
C  INTERPOLATION INTO POLAR COORDINATES
C  NO NEED TO SET CIRC TO ZERO, ALL ELEMENTS ARE DEFINED
a35 3
	NS2=NSAM/2+1
	NR2=NROW/2+1
	PI=2*DATAN(1.0D0)
d37 13
a49 8
C
C  RADIUS OF THE RING
	   INR=NUMR(1,I)
	   YQ=INR

	   L=NUMR(3,I)
	   IF(MODE.EQ.'H')  THEN
	      LT=L/2
d51 20
a70 20
	   IF(MODE.EQ.'F')  THEN
	      LT=L/4
	   ENDIF
	   NSIM=LT-1
	   DFI=PI/(NSIM+1)
	   KCIRC=NUMR(2,I)
	   XOLD=0.0
	   YOLD=INR
	   CIRC(KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	   XOLD=INR
	   YOLD=0.0
	   CIRC(LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	   IF(MODE.EQ.'F')  THEN
	      XOLD=0.0
	      YOLD=-INR
	      CIRC(LT+LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	      XOLD=-INR
	      YOLD=0.0
	      CIRC(LT+LT+LT+KCIRC)
     &             =QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
d73 22
a94 20
           DO  J=1,NSIM
	      FI=DFI*J
	      X=SIN(FI)*YQ
	      Y=COS(FI)*YQ

	      XOLD=X
	      YOLD=Y
	      CIRC(J+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	      XOLD=Y
	      YOLD=-X
	      CIRC(J+LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	      IF(MODE.EQ.'F')  THEN
	         XOLD=-X
	         YOLD=-Y
	         CIRC(J+LT+LT+KCIRC)
     &                 =QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	         XOLD=-Y
	         YOLD=X
	         CIRC(J+LT+LT+LT+KCIRC)
     &              =QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
@


1.2
log
@header & cosmetic
@
text
@d14 1
a15 1
C
d59 7
a65 6
	   XOLD=0.0
	   YOLD=-INR
	   CIRC(LT+LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	   XOLD=-INR
	   YOLD=0.0
	CIRC(LT+LT+LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
d78 1
a78 1
	   CIRC(J+LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
d82 2
a83 1
	CIRC(J+LT+LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
d86 2
a87 1
	CIRC(J+LT+LT+LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
@


1.1
log
@Initial revision
@
text
@d16 1
d18 1
d29 1
a29 1
C
d31 2
a32 2
CC no need to set CIRC to zero, all elements are defined
C
d39 25
a63 25
	INR=NUMR(1,I)
	YQ=INR
C
	L=NUMR(3,I)
	IF(MODE.EQ.'H')  THEN
	LT=L/2
	ENDIF
	IF(MODE.EQ.'F')  THEN
	LT=L/4
	ENDIF
	NSIM=LT-1
	DFI=PI/(NSIM+1)
	KCIRC=NUMR(2,I)
	XOLD=0.0
	YOLD=INR
	CIRC(KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	XOLD=INR
	YOLD=0.0
	CIRC(LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	IF(MODE.EQ.'F')  THEN
	XOLD=0.0
	YOLD=-INR
	CIRC(LT+LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	XOLD=-INR
	YOLD=0.0
d65 16
a80 15
	ENDIF
	DO  J=1,NSIM
	FI=DFI*J
	X=SIN(FI)*YQ
	Y=COS(FI)*YQ
C
	XOLD=X
	YOLD=Y
	CIRC(J+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	XOLD=Y
	YOLD=-X
	CIRC(J+LT+KCIRC)=QUADRI(XOLD+NS2,YOLD+NR2,NSAM,NROW,XIM)
	IF(MODE.EQ.'F')  THEN
	XOLD=-X
	YOLD=-Y
d82 2
a83 2
	XOLD=-Y
	YOLD=X
d85 2
a86 2
	ENDIF
	ENDDO
d88 1
a88 1
C
@
