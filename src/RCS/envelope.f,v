head	1.21;
access;
symbols
	pre_mrcs:1.21
	healthdept_2018:1.21
	pre_getangas:1.19
	GPL2010:1.19
	pre_GPL2010:1.18
	pre_var_equation:1.18
	pre_fftwrings:1.18
	pre_opfiles:1.18
	src:1.18
	best-code:1.18
	x-named-regs:1.18
	x:1.18
	v13-00:1.18
	pre_GPL:1.16
	prec_CA:1.16
	noindx:1.15
	Bproc:1.14
	oct21:1.13
	last77:1.13;
locks; strict;
comment	@c @;


1.21
date	2018.10.03.14.34.05;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2013.01.07.15.21.32;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2010.06.24.13.25.31;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2005.10.17.19.57.43;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.17.17.54.07;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.02.20.19.40.05;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.11.14.07.44;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	99.11.10.23.09.15;	author yuchen;	state Exp;
branches;
next	1.13;

1.13
date	98.01.26.19.13.40;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	98.01.26.16.50.10;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	98.01.21.18.27.38;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.10.06.19.28.48;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	97.09.30.20.20.20;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	96.07.09.20.43.22;	author mladjadj;	state Exp;
branches;
next	1.7;

1.7
date	96.07.09.19.38.46;	author mladjadj;	state Exp;
branches;
next	1.6;

1.6
date	95.10.04.18.41.32;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	95.07.06.20.32.20;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	95.02.07.16.21.54;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	94.08.29.12.58.39;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.07.05.13.12.47;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.31.16.18.57;	author michael;	state Exp;
branches;
next	;


desc
@calculate envelope function.
@


1.21
log
@email_health_dept
@
text
@C **********************************************************************
C
C ENVELOPE.F
C                   OPFILEC                       FEB 03 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C
C  ENVELOPE(IRTFLG) : CALCULATE THE ENVELOPE OF CTF 
C  USING LEAST SQUARE METHOD(DEEPEST GRADIENT) TO FIT EXPERIMENT PROFILES
C  (DELETED NOISE BACKGROUND)
C  FITTING THE FOURIER COEFFICIENTS WITH EQUATION 
C  f(A1-A4)=A1*SIN(X(K,DZ,CS,A2)*E1*E2*E3
C  X(K,DZ,CS,Q)=PI*(0.5*CS*LAMBDA**3*K**4-DZ*LAMBDA*KF**2)-Q
C  E1=EXP(-2.*PI**2*A2**2*(KF**3*CS*LAMBDA**3-DZ*KF*LAMBDA)**2)
C  A2: SOURCESIZE
C  E2=EXP(-PI**2*A3**2*K**4*LAMBDA**2/(16*LN2))
C  A3: DEFOCUS SPREAD
C  E3=1/[1+(KF/KFILM)**2]
C  KFILM: CHARACTER OF FILM
C  A4: GAUSSIAN ENVOLOPE HALFWIDTH
C  E4=EXP(-(KF/A4)**2)
C
C  NUM: NUMBER OF IMAGE
C  NSAM: IMAGE DIMESION
C  SPMAX: MAX. OF SPATIAL FREQUENCE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	SUBROUTINE ENVELOPE(IRTFLG)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC' 

        COMMON       NF(10,2),Y1(10,512),Y2(512),Y3(512),
     &               Y4(512,10),Y5(512),
     &               A1(10),DA1(10,10),DZ(10),DXA1(10)

	CHARACTER*1  CHOICE,C2,NULL
	REAL         KM,KS,KF,LAMBDA,KFILM
	LOGICAL      FLAG
        CHARACTER(LEN=MAXNAM)              ::   FILNAME,OUTNAME

	DATA PI/3.1415926535/

	LUN1   = 8
	LUN2   = 10
	IRTFLG = 0
	NULL   = CHAR(0)
5	WRITE(NOUT,*)
     &      ' FITTING THE PROFILE INTO f(A1,A2,A3,A4)=A1*SIN(X(KF))*E1',
     &      '(A2)*E2(A3)*E3(KFILM)*E4(A4)'
 	WRITE(NOUT,*)
     &    ' SIN(X(K))=SIN(PI*(0.5*CS*LAMBDA**3*KF**4-DZ*LAMBDA*KF**2-Q)'
	WRITE(NOUT,*)
     &    ' E1=EXP(-2*PI**2*A2**2*(K**3*CS*LAMBDA**3-DZ*K*LAMBDA)**2 )'
	WRITE(NOUT,*)' E2=EXP(-PI**2*A3**2*K**4*LAMBDA**2/16LN2)'
	WRITE(NOUT,*)' E3=1/[1+(KF/KFILM)**2]'
	WRITE(NOUT,*)' E4=EXP(-(KF/A4)**2]'
	CALL RDPRMI(NUM,NDUM,NOT_USED,
     &              'HOW MANY IMAGES IN THE SERIES?')
	WRITE(NOUT,*)' INPUT EM PARAMETERS'
	CALL RDPRM(LAMBDA,NOT_USED,'WAVELENGTH[A]=')
	CALL RDPRM(CS,NOT_USED,'SPHERICAL ABERRATION CS[MM]')
           IF (CS < 0.0001)    CS = 0.0001
	CS=CS*1.E7
	CALL RDPRM(SPMAX,NOT_USED,'MAX. SP. FREQ.[A-1]=')
	CALL RDPRM(AC,NOT_USED,'AMPLITUDE CONTRAST [RAD]=')
	CALL RDPRM(A2,NOT_USED,'SOURCE SIZE [A-1]=')
	CALL RDPRM(A3,NOT_USED,'DEFOCUS SPREAD [A]=')
	CALL RDPRM(KFILM,NOT_USED,'CHARACTER OF THE FILM Kf [A-1]=')
	CALL RDPRM(A4,NOT_USED,'GAUSSIAN ENVELOPE CHARACTER [A-1]=')
	DO 20 I=1,NUM
	   WRITE(NOUT,*)'# ',I,'   IMAGE'
           MAXIM = 0
	   CALL OPFILEC(0,.TRUE.,FILNAME,LUN1,'O',IFORM,
     &          NSAM,NROW,NSLICE,MAXIM,'IMAGE', .FALSE.,IRTFLG)
	   IF (IRTFLG .NE. 0) RETURN

	   WRITE(NOUT,24) NSAM,NROW
24	   FORMAT(' FILE"S DIMENSION:',I4,' X',I4)
	   CALL RDPRM(DZ(I),NOT_USED,'DEFOCUS [A]=')
C	   CALL RDPRM(A1(I),NOT_USED,'AMPLITUDE OF PHASE CONTRAST=')
C	   CALL RDPRM(A4(I),NOT_USED,'GAUSSIAN ENVELOPE CHARACTER =')
	   CALL REDLIN(LUN1,Y3,NSAM,1)
	   DO K=1,NSAM
	      Y1(I,K)=Y3(K)
	   ENDDO
	   CALL RDPRMI(NF(I,1),NF(I,2),NOT_USED,
     &                 'FITTING REGION (N1-N2):$')
	   CLOSE(LUN1)
C          GET AMPLITUDE OF PHASE CONTRAST
	   DO  J=10,NSAM
	      FLAG=.TRUE.
	      IF(Y3(J) .GT. Y3(J+1) .AND. Y3(J) .GT. Y3(J-1)) THEN
	         DO K=J-1,J-10,-1
	            IF(Y3(J) .LT. Y3(K)) FLAG=.FALSE.
	         ENDDO
	         DO K=J+1,J+10
	            IF(Y3(J) .LT. Y3(K)) FLAG=.FALSE.
	         ENDDO
	         IF (FLAG) THEN
	            A1(I)=Y3(J)*(1+5000/DZ(I))
	            GOTO 20
	         ENDIF
	      ENDIF
	   ENDDO

20	   CONTINUE
	   KS=SPMAX/FLOAT(NSAM)
	   DO  I=1,NUM
	      DO  J=1,NUM
	         DA1(I,J)=0
	      ENDDO
	   ENDDO
C.......   GET Y4 VALUE
	   DO I=1,NUM
	      DO J=1,NSAM
	         Y4(J,I)=1
	      ENDDO
	   ENDDO

	   FLAG=.TRUE.
	   NEIB=3
	   DO  I=1,NUM
	      DO  J=1+NEIB,NSAM-NEIB
	         BX=Y1(I,J)
	         IF (BX .GT. Y1(I,J+1)) THEN
	            DO K=J,J-NEIB,-1
	              IF(BX .LT. Y1(I,K)) THEN
	                 FLAG=.FALSE.
	              ENDIF
                 ENDDO
	         DO K=J,J+NEIB
                   IF(BX .LT. Y1(I,K)) THEN
	              FLAG=.FALSE.
	           ENDIF
	         ENDDO
	        IF(FLAG) THEN
	           Y4(J-3,I)=10
	           Y4(J-2,I)=10
	           Y4(J-1,I)=10
	           Y4(J,I)=10
	           Y4(J+1,I)=10
	           Y4(J+2,I)=10
	           Y4(J+3,I)=10
	        ELSE
	           FLAG=.TRUE.
	        ENDIF	
	      ENDIF
	   ENDDO
	ENDDO

C......GET VALUE OF Y2
	X=0.0
	DO I=1,NUM
	CALL Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ(I),AC,KFILM,A1(I),A2,A3,
     &  A4)
C......GET VALUE OF X0=SUM((Y1-Y2)**2)
	DO K=1,NSAM
	Y3(K)=Y1(I,K)
	y5(k)=y4(k,i)
	ENDDO
	CALL XSUM(X0,Y3,Y2,y5,NF(I,1),NF(I,2))
	X=X+X0
	ENDDO
	X0=X
C......SET INITIATION STEP
	NSTEP=0
999	DO I=1,NUM
	DA1(I,I)=0.001*A1(I)
	ENDDO
	DA2=0.001*A2
	DA3=0.001*A3
	DKFILM=0.001*KFILM	
	DA4=0.001*A4
	DAC=0.001*AC
C......GET VALUE OF dX**2/dA1(I)
	 DO  I=1,NUM
	 X=0
	 DO  J=1,NUM
	  CALL Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ(J),AC,KFILM,
     &    A1(J)+0.1*DA1(I,J),A2,A3,A4)
	   DO K=1,NSAM
	    Y3(K)=Y1(J,K)
	    y5(k)=y4(k,j)
	   ENDDO
	  CALL XSUM(X1,Y3,Y2,y5,NF(J,1),NF(J,2))
          X=X+X1
	 ENDDO
	 X1=X
	DXA1(I)=-(X1-X0)/(0.1*DA1(I,I))
	ENDDO
C......GET VALUE OF dX**2/dA2
	X=0
	DO  I=1,NUM
	CALL Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ(I),AC,KFILM,A1(I),
     &               A2+0.1*DA2, A3,A4)
	 DO K=1,NSAM
	  Y3(K)=Y1(I,K)
	  y5(k)=y4(k,i)
	 ENDDO
	CALL XSUM(X1,Y3,Y2,y5,NF(I,1),NF(I,2))
	X=X+X1
	ENDDO
	X1=X
	DXA2=-(X1-X0)/(0.1*DA2)
C......GET VALUE OF dX**2/dA3
	X=0
	DO  I=1,NUM
	CALL Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ(I),AC,KFILM,A1(I),A2,
     &  A3+0.1*DA3,A4)
	  DO K=1,NSAM
	  Y3(K)=Y1(I,K)
	  y5(k)=y4(k,i)
	  ENDDO
	CALL XSUM(X1,Y3,Y2,y5,NF(I,1),NF(I,2))
	X=X+X1
	ENDDO
	X1=X
C	DXA3=-(X1-X0)/(0.1*DA3)
	DXA3=0

C......GET VALUE dX**2/dKFILM
	X=0
	DO  I=1,NUM
	CALL Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ(I),AC,
     &               KFILM+0.1*DKFILM,A1(I),A2, A3,A4)
	  DO K=1,NSAM
	  Y3(K)=Y1(I,K)
	  y5(k)=y4(k,i)
	  ENDDO
	CALL XSUM(X1,Y3,Y2,y5,NF(I,1),NF(I,2))
	X=X+X1
	ENDDO
	X1=X
	DXKFILM=-(X1-X0)/(0.1*DKFILM)
	

C......GET VALUE dX**2/dA4

	X=0
	DO  J=1,NUM
	CALL Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ(J),AC,KFILM,A1(J),A2,A3,
     &  A4+0.1*DA4)
	  DO K=1,NSAM
	   Y3(K)=Y1(J,K)
	   y5(k)=y4(k,j)
	  ENDDO
	CALL XSUM(X1,Y3,Y2,y5,NF(J,1),NF(J,2))
	X=X+X1
	ENDDO
	X1=X
140	DXA4=-(X1-X0)/(0.1*DA4)

C......GET VALUE dX**2/dAC

	X=0
	DO  J=1,NUM
	CALL Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ(J),AC+0.1*DAC,KFILM,A1(J),
     &  A2,A3,A4)
	  DO K=1,NSAM
	   Y3(K)=Y1(J,K)
 	   y5(k)=y4(k,j)
	  ENDDO
	CALL XSUM(X1,Y3,Y2,y5,NF(J,1),NF(J,2))
	X=X+X1
	ENDDO
	X1=X
	DXAC=-(X1-X0)/(0.1*DAC)

C......GET NEW VALUE OF A1,A2,A3,KFILM,A4,AC
	SUM=0
	DO I=1,NUM
	SUM=SUM+(DXA1(I)*DA1(I,I))**2
	ENDDO
	
	SUM=SUM+(DXA4*DA4)**2
	SUM=SUM+(DXA2*DA2)**2+(DXA3*DA3)**2+(DXKFILM*DKFILM)**2
	SUM=SUM+(DXAC*DAC)**2
	SUM=SQRT(SUM)
	DO I=1,NUM
	A1(I)=A1(I)+DXA1(I)*DA1(I,I)**2/SUM
	ENDDO
	A2=A2+DXA2*DA2**2/SUM
	A3=A3+DXA3*DA3**2/SUM
	KFILM=KFILM+DXKFILM*DKFILM**2/SUM
	A4=A4+DXA4*DA4**2/SUM
	AC=AC+DXAC*DAC**2/SUM
	
C......GET NEW VALUE OF Y2
	X=0
	DO I=1,NUM
	CALL Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ(I),AC,KFILM,
     &  A1(I),A2,A3,A4)
C......GET VALUE OF X1=SUM((Y1-Y2)**2)
	  DO K=1,NSAM
	  Y3(K)=Y1(I,K)
	  y5(k)=y4(k,i)
	  ENDDO
	CALL XSUM(X1,Y3,Y2,y5,NF(I,1),NF(I,2))
	X=X+X1
	ENDDO
	X1=X               
C......CRITERIA FOR ITERATION
	D=X0-X1
	IF(D .LT. 0.) THEN
	DO I=1,NUM
	A1(I)=A1(I)-0.5*DXA1(I)*DA1(I,I)**2/SUM
	ENDDO
	A2=A2-0.5*DXA2*DA2**2/SUM
	A3=A3-0.5*DXA3*DA3**2/SUM
	KFILM=KFILM-0.5*DXKFILM*DKFILM**2/SUM
	A4=A4-0.5*DXA4*DA4**2/SUM
	AC=AC-0.5*DXAC*DAC**2/SUM	
C	WRITE(NOUT,*)'STEP=',NSTEP
	WRITE(NOUT,210)
210	FORMAT(' A1=')
	DO I=1,NUM
	   WRITE(NOUT,200)A1(I)
	ENDDO
200	FORMAT(4F16.10)
	WRITE(NOUT,*)'SOURCE SIZE=',A2,'  KFILM=',KFILM

	WRITE(NOUT,220)
220	FORMAT(' GAUSSIAN ENVELOPE HALFWIDTH=')
	WRITE(NOUT,200)A4

	WRITE(NOUT,*)'AMPLITUDE CONTRAST=',AC	
	WRITE(NOUT,*)'X**2=',X1

C......CREATE A DIFFRACTION  PATTERN
1200	WRITE(NOUT,250)
250	FORMAT(' CREATE A POWER SPECTRUM')
	DO I=1,NUM
	  WRITE(NOUT,*)'FILE #', I

          MAXIM = 0
          CALL OPFILEC(0,.TRUE.,OUTNAME,LUN2,'U',IFORM,NSAM,NROW,1,
     &             MAXIM,'OUTPUT',.FALSE.,IRTFLG)
          IF (IRTFLG .NE. 0) RETURN

	  DO  K=1,NSAM
	    KF=FLOAT(K)*KS
	    O1=PI*(0.5*CS*LAMBDA**3*KF**4-DZ(I)*LAMBDA*KF**2)-AC
	    O2=-2.0*PI**2*A2**2*(KF**3*CS*LAMBDA**3-DZ(I)*KF*LAMBDA)**2
	    O3=-1.*PI**2*A3**2*KF**4*LAMBDA**2/(16.*ALOG(2.))
	    O4=1./(1.+(KF/KFILM)**2)
	    O5=EXP(-(KF/A4)**2)
	    Y3(K)=ABS(A1(I)*SIN(O1)*EXP(O2+O3)*O4*O5)
	  ENDDO
          CALL WRTLIN(LUN2,Y3,NSAM,1)
	  CLOSE(LUN2)
	ENDDO
	ELSE
	NSTEP=NSTEP+1
	X0=X1
C	WRITE(NOUT,*)'SPET',NSTEP
C	WRITE(NOUT,210)
C	DO I=1,NUM
C	WRITE(NOUT,200)A1(I)
C	ENDDO
C	WRITE(NOUT,*)'A2=',A2,'  A3=',A3
C	WRITE(NOUT,220)
C	DO I=1,NUM
C	WRITE(NOUT,200)A4(I)
C	ENDDO
	GOTO 999
	ENDIF
	RETURN
	END

        SUBROUTINE Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ,Q,KFILM,
     &	A1,A2,A3,A4)
	DIMENSION Y2(*)
	REAL KF,KS,LAMBDA,KFILM
	DATA PI/3.1415926535/
	DO  I=1,NSAM
        KF=FLOAT(I)*KS
	O1=PI*(0.5*CS*LAMBDA**3*KF**4-DZ*LAMBDA*KF**2)-Q
	O2=-2.0*PI**2*A2**2*(KF**3*CS*LAMBDA**3-DZ*KF*LAMBDA)**2
	O3=-1.*PI**2*A3**2*KF**4*LAMBDA**2/(16.*ALOG(2.))
	O4=1./(1.+(KF/KFILM)**2)
	O5=EXP(-(KF/A4)**2)
	Y2(I)=ABS(A1*SIN(O1)*EXP(O2+O3)*O4*O5)
	ENDDO
        RETURN
	END


	SUBROUTINE XSUM(X,Y1,Y2,y3,NM,NSAM)
	DIMENSION Y1(*),Y2(*),y3(512)
	X=0
	DO  I=NM,NSAM
	X=X+(y3(I)*(Y1(I)-Y2(I)))**2
	ENDDO
	RETURN
	END
@


1.20
log
@CS_zero
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.19
log
@GPL_2010
@
text
@d29 2
a30 2
C  ENVELOPE(IRTFLG) : CALCULATE THE ENVELOPS OF CFT 
C  USING LEAST SQUARE METHOD(DEEPEST FRADIENT) TO FIT EXPERIMENT PROFILES
d83 2
a84 1
	CALL RDPRM(CS,NOT_USED,'CS[mm]=')
@


1.18
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.17
log
@HRI GPL License used
@
text
@a1 1
C***************************************************************************
a6 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a30 1
C **************************************************************************
@


1.16
log
@opfilec
@
text
@d1 1
d7 1
d9 1
d11 24
d41 1
@


1.15
log
@nloop,iloop_removed
@
text
@d4 1
d40 1
a41 1

d49 1
a49 1
	CHARACTER*81 FILNAME,OUTNAME
d75 1
a75 1
	CALL RDPRM(A2,NOT_USED,'SOURCE SIZE [A-1]=$')
d82 2
a83 2
	   CALL OPFIL(.TRUE.,FILNAME,LUN1,'O',NSAM,NROW,NSLICE,
     &                MAXIM,'IMAGE', .FALSE.,IRTFLG)
d326 1
a326 1
	WRITE(NOUT,200)A1(I)
d330 1
d334 1
d337 1
d345 1
a345 1
          CALL OPFIL(.TRUE.,OUTNAME,LUN2,'U',NSAM,NROW,1,
d350 7
a356 7
	  KF=FLOAT(K)*KS
	  O1=PI*(0.5*CS*LAMBDA**3*KF**4-DZ(I)*LAMBDA*KF**2)-AC
	  O2=-2.0*PI**2*A2**2*(KF**3*CS*LAMBDA**3-DZ(I)*KF*LAMBDA)**2
	  O3=-1.*PI**2*A3**2*KF**4*LAMBDA**2/(16.*ALOG(2.))
	  O4=1./(1.+(KF/KFILM)**2)
	  O5=EXP(-(KF/A4)**2)
	  Y3(K)=ABS(A1(I)*SIN(O1)*EXP(O2+O3)*O4*O5)
@


1.14
log
@a
@
text
@d66 1
a66 1
	CALL RDPRMI(NUM,NDUM,NLOOP,ILOOP,
d69 2
a70 2
	CALL RDPRM(LAMBDA,NLOOP,ILOOP,'WAVELENGTH[A]=')
	CALL RDPRM(CS,NLOOP,ILOOP,'CS[mm]=')
d72 6
a77 6
	CALL RDPRM(SPMAX,NLOOP,ILOOP,'MAX. SP. FREQ.[A-1]=')
	CALL RDPRM(AC,NLOOP,ILOOP,'AMPLITUDE CONTRAST [RAD]=')
	CALL RDPRM(A2,NLOOP,ILOOP,'SOURCE SIZE [A-1]=$')
	CALL RDPRM(A3,NLOOP,ILOOP,'DEFOCUS SPREAD [A]=')
	CALL RDPRM(KFILM,NLOOP,ILOOP,'CHARACTER OF THE FILM Kf [A-1]=')
	CALL RDPRM(A4,NLOOP,ILOOP,'GAUSSIAN ENVELOPE CHARACTER [A-1]=')
d87 3
a89 3
	   CALL RDPRM(DZ(I),NLOOP,ILOOP,'DEFOCUS [A]=')
C	   CALL RDPRM(A1(I),NLOOP,ILOOP,'AMPLITUDE OF PHASE CONTRAST=')
C	   CALL RDPRM(A4(I),NLOOP,ILOOP,'GAUSSIAN ENVELOPE CHARACTER =')
d94 1
a94 1
	   CALL RDPRMI(NF(I,1),NF(I,2),NLOOP,ILOOP,
@


1.13
log
@bad NO_SAVE line
@
text
@d39 1
a39 1
CNO_SAVE
@


1.12
log
@used unlabeld common for arrays
@
text
@d3 1
a3 1
C $$ ENVELOPE.FOR
d16 1
a16 1
C $$ ENVELOPE(IRTFLG) : CALCULATE THE ENVELOPS OF CFT 
d39 1
a39 1
NO_SAVE
@


1.11
log
@used opfil
@
text
@d39 1
d41 4
a45 3
	DIMENSION    NF(10,2),Y1(10,512),Y2(512),Y3(512)
	DIMENSION    Y4(512,10),Y5(512)
	DIMENSION    A1(10),DA1(10,10),DZ(10),DXA1(10)
@


1.10
log
@*** empty log message ***
@
text
@d37 1
a37 1
#ifdef SP_UNIX
d39 9
a47 7
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif	
	CHARACTER*1 CHOICE,C2,NULL
	DIMENSION NF(10,2),Y1(10,512),Y2(512),Y3(512)
	dimension y4(512,10),y5(512)
	DIMENSION A1(10),DA1(10,10),DZ(10),DXA1(10)
d49 12
a60 13
	REAL KM,KS,KF,LAMBDA,KFILM
	LOGICAL FLAG
	CHARACTER*81 FILNAME,OUTNAME
	LUN1=8
	LUN2=10
	IRTFLG=0
	NULL=CHAR(0)
5	WRITE(NOUT,*)' FITTING THE PROFILE INTO f(A1,A2,A3,A4)=A1*SIN(X(KF))*E1
     &  (A2)*E2(A3)*E3(KFILM)*E4(A4)'
 	WRITE(NOUT,*)' SIN(X(K))=SIN(PI*(0.5*CS*LAMBDA**3*KF**4-DZ*LAMBDA*KF**2
     &  -Q)'
	WRITE(NOUT,*)' E1=EXP(-2*PI**2*A2**2*(K**3*CS*LAMBDA**3-DZ*K*LAMBDA)**2
     &  )'
d64 2
a65 1
	CALL RDPRMI(NUM,NDUM,NLOOP,ILOOP,'HOW MANY IMAGES IN THE SERIES? $')
d67 2
a68 2
	CALL RDPRM(LAMBDA,NLOOP,ILOOP,'WAVELENGTH[A]=$')
	CALL RDPRM(CS,NLOOP,ILOOP,'CS[mm]=$')
d70 2
a71 2
	CALL RDPRM(SPMAX,NLOOP,ILOOP,'MAX. SP. FREQ.[A-1]=$')
	CALL RDPRM(AC,NLOOP,ILOOP,'AMPLITUDE CONTRAST [RAD]=$')
d73 3
a75 3
	CALL RDPRM(A3,NLOOP,ILOOP,'DEFOCUS SPREAD [A]=$')
	CALL RDPRM(KFILM,NLOOP,ILOOP,'CHARACTER OF THE FILM Kf [A-1]=$')
	CALL RDPRM(A4,NLOOP,ILOOP,'GAUSSIAN ENVELOPE CHARACTER [A-1]=$')
d77 48
a124 31
	WRITE(NOUT,*)'# ',I,'   IMAGE'
	CALL OPFIL(.TRUE.,FILNAME,LUN1,'O',NSAM,NROW,NSLICE,IFORM,'IMAGE',
     &  .FALSE.,IRTFLG)
	IF(IRTFLG .NE. 0) RETURN
	WRITE(NOUT,24) NSAM,NROW
24	FORMAT(' FILE"S DIMENSION:',I4,' X',I4)
	CALL RDPRM(DZ(I),NLOOP,ILOOP,'DEFOCUS [A]=$')
C	CALL RDPRM(A1(I),NLOOP,ILOOP,'AMPLITUDE OF PHASE CONTRAST=$')
C	CALL RDPRM(A4(I),NLOOP,ILOOP,'GAUSSIAN ENVELOPE CHARACTER =$')
	CALL REDLIN(LUN1,Y3,NSAM,1)
	 DO K=1,NSAM
	 Y1(I,K)=Y3(K)
	 ENDDO
	CALL RDPRMI(NF(I,1),NF(I,2),NLOOP,ILOOP,'FITTING REGION (N1-N2):$')
	CLOSE(LUN1)
c       get amplitude of phase contrast
	DO  J=10,NSAM
	FLAG=.TRUE.
	IF(Y3(J) .GT. Y3(J+1) .AND. Y3(J) .GT. Y3(J-1)) THEN
	DO K=J-1,J-10,-1
	IF(Y3(J) .LT. Y3(K)) FLAG=.FALSE.
	ENDDO
	DO K=J+1,J+10
	IF(Y3(J) .LT. Y3(K)) FLAG=.FALSE.
	ENDDO
	IF (FLAG) THEN
	A1(I)=Y3(J)*(1+5000/DZ(I))
	GOTO 20
	ENDIF
	ENDIF
	ENDDO
d126 29
a154 42
20	CONTINUE
	KS=SPMAX/FLOAT(NSAM)
	DO  I=1,NUM
	DO  J=1,NUM
	DA1(I,J)=0
	ENDDO
	ENDDO
C.......get y4 value
	do i=1,num
	do j=1,nsam
	y4(j,i)=1
	enddo
	enddo

	flag=.TRUE.
	neib=3
	do  i=1,num
	DO  j=1+neib,NSAM-neib
	BX=y1(i,j)
	IF (BX .GT. y1(i,j+1)) THEN
	DO K=J,J-NEIB,-1
	  IF(BX .LT. y1(I,K)) THEN
	  FLAG=.FALSE.
	  ENDIF
        ENDDO
	DO K=J,J+NEIB
          IF(BX .LT. y1(I,K)) THEN
	  FLAG=.FALSE.
	  ENDIF
	ENDDO
	  IF(FLAG) THEN
	  y4(j-3,i)=10
	  y4(j-2,i)=10
	  y4(j-1,i)=10
	  y4(j,i)=10
	  y4(j+1,i)=10
	  y4(j+2,i)=10
	  y4(j+3,i)=10
	  ELSE
	  FLAG=.TRUE.
	  ENDIF	
	ENDIF
a155 1
	enddo
d200 2
a201 2
	CALL Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ(I),AC,KFILM,A1(I),A2+0.1*DA2,
     &  A3,A4)
d230 2
a231 2
	CALL Y2VALUE(Y2,NSAM,KS,CS,LAMBDA,DZ(I),AC,KFILM+0.1*DKFILM,A1(I),A2,
     &  A3,A4)
d337 6
a342 3
	  CALL FILERD(OUTNAME,NLET,NULL,'OUTPUT',IRTFLG)
	  IF(IRTFLG .NE. 0) RETURN
	  CALL OPENF(OUTNAME,LUN2,NSAM,NROW,'UNKNOWN',NF,1)
@


1.9
log
@*** empty log message ***
@
text
@d91 1
a91 1
	DO 25 J=10,NSAM
d105 1
a105 1
25	CONTINUE
d109 5
a113 3
	DO 27 I=1,NUM
	DO 27 J=1,NUM
27	DA1(I,J)=0
d123 2
a124 2
	do 40 i=1,num
	DO 40 j=1+neib,NSAM-neib
d149 2
a150 1
40 	CONTINUE
d177 1
a177 1
	 DO 100 I=1,NUM
d179 1
a179 1
	 DO 110 J=1,NUM
d187 2
a188 1
110       X=X+X1
d190 2
a191 1
100	DXA1(I)=-(X1-X0)/(0.1*DA1(I,I))
d194 1
a194 1
	DO 120 I=1,NUM
d202 2
a203 1
120	X=X+X1
d208 1
a208 1
	DO 130 I=1,NUM
d216 2
a217 1
130	X=X+X1
d224 1
a224 1
	DO 135 I=1,NUM
d232 2
a233 1
135	X=X+X1
d241 1
a241 1
	DO 150 J=1,NUM
d249 2
a250 1
150	X=X+X1
d257 1
a257 1
	DO 160 J=1,NUM
d265 2
a266 1
160	X=X+X1
d335 1
a335 1
	  DO 270 K=1,NSAM
d342 2
a343 1
270	  Y3(K)=ABS(A1(I)*SIN(O1)*EXP(O2+O3)*O4*O5)
d370 1
a370 1
	DO 100 I=1,NSAM
d377 2
a378 1
100	Y2(I)=ABS(A1*SIN(O1)*EXP(O2+O3)*O4*O5)
d386 3
a388 2
	DO 100 I=NM,NSAM
100	X=X+(y3(I)*(Y1(I)-Y2(I)))**2
@


1.8
log
@get back r1.6
@
text
@d306 1
a306 1
210	FORMAT(' A1=',$)
d313 1
a313 1
220	FORMAT(' GAUSSIAN ENVELOPE HALFWIDTH=',$)
@


1.7
log
@avoid jump inside loop
@
text
@d36 6
a41 4
	SUBROUTINE ENVELOPE(IRTFLG) 
	
        INCLUDE 'CMBLOCK.INC' 
	
d54 6
a59 7
5	WRITE(NOUT,*) ' FITTING THE PROFILE INTO f(A1,A2,A3,A4)='
 	WRITE(NOUT,*)
     &     ' A1*SIN(X(KF))*E1(A2)*E2(A3)*E3(KFILM)*E4(A4)'
 	WRITE(NOUT,*)
     &     ' SIN(X(K))=SIN(PI*(0.5*CS*LAMBDA**3*KF**4-DZ*LAMBDA*KF**2-Q)'
	WRITE(NOUT,*)
     &     ' E1=EXP(-2*PI**2*A2**2*(K**3*CS*LAMBDA**3-DZ*K*LAMBDA)**2)'
@


1.6
log
@change write(* to write(nout
@
text
@d36 4
a39 6
	SUBROUTINE ENVELOPE(IRTFLG)
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif	
d52 7
a58 6
5	WRITE(NOUT,*)' FITTING THE PROFILE INTO f(A1,A2,A3,A4)=A1*SIN(X(KF))*E1
     &  (A2)*E2(A3)*E3(KFILM)*E4(A4)'
 	WRITE(NOUT,*)' SIN(X(K))=SIN(PI*(0.5*CS*LAMBDA**3*KF**4-DZ*LAMBDA*KF**2
     &  -Q)'
	WRITE(NOUT,*)' E1=EXP(-2*PI**2*A2**2*(K**3*CS*LAMBDA**3-DZ*K*LAMBDA)**2
     &  )'
@


1.5
log
@changes done by june Zhu
@
text
@d37 5
a41 1
	INCLUDE 'CMBLOCK.INC'
d312 1
a312 1
	WRITE(*,220)
d339 2
a340 2
C	WRITE(*,*)'SPET',NSTEP
C	WRITE(*,210)
d342 1
a342 1
C	WRITE(*,200)A1(I)
d344 2
a345 2
C	WRITE(*,*)'A2=',A2,'  A3=',A3
C	WRITE(*,220)
d347 1
a347 1
C	WRITE(*,200)A4(I)
@


1.4
log
@clean up unused variables and hollerith warnings
@
text
@a0 7
#ifdef SP_DISTRIB
      SUBROUTINE ENVELOPE
      COMMON /UNITS/LUNC,NIN,NOUT
      WRITE(NOUT,*) 'DUMMY CALL: ENVELOPE'
      RETURN
      END
#else
d16 1
a16 1
C $$ ENVELOPE(IRTFLG) : CALCULATE THE ENVELOPS OF CFT
d19 1
a19 1
C  FITTING THE FOURIER COEFFICIENTS WITH EQUATION
d28 2
a29 2
C  A4: GAUSSIAN ENVOLOPE CHARACTER
C  E4=EXP(-A4*KF**2)
d37 2
a38 7
#ifdef SP_UNIX
        INCLUDE 'CMBLOCK.INC'
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif

	CHARACTER*1 NULL
d40 1
d43 1
a43 1
	REAL KS,KF,LAMBDA,KFILM
d50 11
a60 14
5       WRITE(NOUT,*)' FITTING THE PROFILE INTO:' 
        WRITE(NOUT,*)
     &    'f(A1,A2,A3,A4)=A1*SIN(X(KF))*E1(A2)*E2(A3)*E3(KFILM)*E4(A4)'
        WRITE(NOUT,*)
     &    'SIN(X(K))=SIN(PI*(0.5*CS*LAMBDA**3*KF**4-DZ*LAMBDA*KF**2-Q)'
        WRITE(NOUT,*)
     &    ' E1=EXP(-2*PI**2*A2**2*(K**3*CS*LAMBDA**3-DZ*K*LAMBDA)**2)'
        WRITE(NOUT,*)' E2=EXP(-PI**2*A3**2*K**4*LAMBDA**2/16LN2)'
        WRITE(NOUT,*)' E3=1/[1+(KF/KFILM)**2]'
        WRITE(NOUT,*)' E4=EXP(-A4*KF**2)'
        CALL RDPRMI(NUM,NDUM,NLOOP,ILOOP,
     &          'HOW MANY IMAGES IN THE SERIES? $')
        WRITE(NOUT,*)' INPUT EM PARAMETERS'

d69 1
a69 1
	CALL RDPRM(A4,NLOOP,ILOOP,'GAUSSIAN ENVELOPE CHARACTER =$')
d108 37
a144 9
C27	DA4(I,J)=0
C	DO I=1,NUM
C	DA1(I,I)=0.001*A1(I)
C	ENDDO
C	DA2=0.001*A2
C	DA3=0.001*A3
C	DO I=1,NUM
C	DA4(I,I)=0.001*A4(I)
C	ENDDO
d153 1
d155 1
a155 1
	CALL XSUM(X0,Y3,Y2,NF(I,1),NF(I,2))
d166 1
a166 1
	DKFILM=0.001*KFILM
d168 1
a168 1

d177 1
d179 1
a179 1
	  CALL XSUM(X1,Y3,Y2,NF(J,1),NF(J,2))
d190 1
d192 1
a192 1
	CALL XSUM(X1,Y3,Y2,NF(I,1),NF(I,2))
d203 1
d205 1
a205 1
	CALL XSUM(X1,Y3,Y2,NF(I,1),NF(I,2))
d218 1
d220 1
a220 1
	CALL XSUM(X1,Y3,Y2,NF(I,1),NF(I,2))
d224 1
a225 1

d234 1
d236 1
a236 1
	CALL XSUM(X1,Y3,Y2,NF(J,1),NF(J,2))
d240 17
a256 1
C......GET NEW VALUE OF A1,A2,A3,KFILM,A4
d261 1
a261 1

a262 1

d264 1
a271 1

d273 2
a274 1

d283 1
d285 1
a285 1
	CALL XSUM(X1,Y3,Y2,NF(I,1),NF(I,2))
d288 1
a288 1
	X1=X
d297 1
a297 1

d299 1
a299 1

d309 1
a309 2
220	FORMAT(' GAUSSIAN FACTER=',$)

d311 1
a311 1

d327 1
a327 1
	  O5=EXP(-1.*A4*KF**2)
d361 1
a361 1
	O5=EXP(-1.*A4*KF**2)
d367 2
a368 2
	SUBROUTINE XSUM(X,Y1,Y2,NM,NSAM)
	DIMENSION Y1(*),Y2(*)
d371 1
a371 1
100	X=X+(Y1(I)-Y2(I))**2
a373 1
#endif
@


1.3
log
@corrections by Jun Zhu from germany
@
text
@d50 1
a50 1
	CHARACTER*1 CHOICE,C2,NULL
d54 1
a54 1
	REAL KM,KS,KF,LAMBDA,KFILM
d61 14
a74 11
5	WRITE(NOUT,*)' FITTING THE PROFILE INTO f(A1,A2,A3,A4)=A1*SIN(X(KF))*E1
     &  (A2)*E2(A3)*E3(KFILM)*E4(A4)'
 	WRITE(NOUT,*)' SIN(X(K))=SIN(PI*(0.5*CS*LAMBDA**3*KF**4-DZ*LAMBDA*KF**2
     &  -Q)'
	WRITE(NOUT,*)' E1=EXP(-2*PI**2*A2**2*(K**3*CS*LAMBDA**3-DZ*K*LAMBDA)**2
     &  )'
	WRITE(NOUT,*)' E2=EXP(-PI**2*A3**2*K**4*LAMBDA**2/16LN2)'
	WRITE(NOUT,*)' E3=1/[1+(KF/KFILM)**2]'
	WRITE(NOUT,*)' E4=EXP(-A4*KF**2)'
	CALL RDPRMI(NUM,NDUM,NLOOP,ILOOP,'HOW MANY IMAGES IN THE SERIES? $')
	WRITE(NOUT,*)' INPUT EM PARAMETERS'
@


1.2
log
@ wrong col in distrib code
@
text
@d23 1
a23 1
C $$ ENVELOPE(IRTFLG) : CALCULATE THE ENVELOPS OF CFT 
d26 2
a27 2
C  FITTING THE FOURIER COEFFICIENTS WITH EQUATION 
C  F(A1-A4)=A1*SIN(X(K,DZ,CS,A2)*E1*E2*E3
d36 1
a36 1
C  E4=EXP(-(KF/A4)**2)
d47 1
a47 1
	INCLUDE 'COMMON1:CMBLOCK.INC'
d49 1
d52 1
a52 1
	DIMENSION A1(10),DA1(10,10),A4(10),DA4(10,10),DZ(10),DXA1(10),DXA4(10)
d55 1
d61 1
a61 1
5	WRITE(NOUT,*)' FITTING THE PROFILE INTO F(A1,A2,A3,A4)=A1*SIN(X(KF))*E1
d69 1
a69 1
	WRITE(NOUT,*)' E4=EXP(-(KF/A4)**2)'
d73 1
a73 1
	CALL RDPRM(CS,NLOOP,ILOOP,'CS[MM]=$')
d79 2
a80 1
	CALL RDPRM(KFILM,NLOOP,ILOOP,'CHARACTER OF THE FILM KF [A-1]=$')
d89 2
a90 2
	CALL RDPRM(A1(I),NLOOP,ILOOP,'AMPLITUDE OF PHASE CONTRAST=$')
	CALL RDPRM(A4(I),NLOOP,ILOOP,'GAUSSIAN ENVELOPE CHARACTER [A-1]=$')
d97 17
d118 2
a119 2
	DA1(I,J)=0
27	DA4(I,J)=0
d132 1
a132 1
     &  A4(I))
d148 4
a151 4
	DO I=1,NUM
	DA4(I,I)=0.001*A4(I)
	ENDDO
C......GET VALUE OF DX**2/DA1(I)
d156 1
a156 1
     &    A1(J)+0.1*DA1(I,J),A2,A3,A4(J))
d164 1
a164 1
C......GET VALUE OF DX**2/DA2
d168 1
a168 1
     &  A3,A4(I))
d176 1
a176 1
C......GET VALUE OF DX**2/DA3
d180 1
a180 1
     &  A3+0.1*DA3,A4(I))
d189 2
a190 2
C......GET VALUE DX**2/DA4
	DO 140 I=1,NUM
d192 15
d209 1
a209 1
     &  A4(J)+0.1*DA4(I,J))
d216 2
a217 2
140	DXA4(I)=-(X1-X0)/(0.1*DA4(I,I))
C......GET NEW VALUE OF A1,A2,A3,A4
d222 4
a225 4
	DO I=1,NUM
	SUM=SUM+(DXA4(I)*DA4(I,I))**2
	ENDDO
	SUM=SUM+(DXA2*DA2)**2+(DXA3*DA3)**2
d232 4
a235 3
	DO I=1,NUM
	A4(I)=A4(I)+DXA4(I)*DA4(I,I)**2/SUM
	ENDDO
d240 1
a240 1
     &  A1(I),A2,A3,A4(I))
d248 1
a248 1
	X1=X               
d257 3
a259 3
	DO I=1,NUM
	A4(I)=A4(I)-0.5*DXA4(I)*DA4(I,I)**2/SUM
	ENDDO
d267 1
a267 1
	WRITE(NOUT,*)'A2=',A2,'  A3=',A3
d269 4
a272 4
220	FORMAT(' A4=',$)
	DO I=1,NUM
	WRITE(NOUT,200)A4(I)
	ENDDO
d278 2
a279 1
	  CALL FILERD(OUTNAME,NLET,EXT,'OUTPUT',IRTFLG)
d288 1
a288 1
	  O5=EXP(-(KF/A4(I))**2)
d322 1
a322 1
	O5=EXP(-(KF/A4)**2)
@


1.1
log
@Initial revision
@
text
@d2 5
a6 5
     SUBROUTINE ENVELOPE
     COMMON /UNITS/LUNC,NIN,NOUT
     WRITE(NOUT,*) 'DUMMY CALL: ENVELOPE'
     RETURN
     END
@
