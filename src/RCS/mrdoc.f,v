head	1.22;
access;
symbols
	healthdept_2018:1.22
	pre_getangas:1.19
	GPL2010:1.19
	pre_GPL2010:1.18
	pre_var_equation:1.18
	pre_fftwrings:1.17
	pre_opfiles:1.17
	src:1.17
	best-code:1.17
	x-named-regs:1.17
	x:1.17
	v13-00:1.17
	pre_GPL:1.15
	prec_CA:1.11
	noindx:1.11
	Bproc:1.10
	oct21:1.6
	last77:1.6;
locks; strict;
comment	@c @;


1.22
date	2018.10.03.14.34.10;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2014.02.19.15.17.47;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2014.01.12.19.26.14;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2010.06.24.13.26.13;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2008.12.02.19.44.28;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.17.20.29.25;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.18.20.43;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.05.23.14.09.41;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2004.03.11.16.28.09;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2004.03.11.16.12.36;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2004.03.11.14.16.20;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2001.07.31.12.40.01;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.12.30.21.42.44;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.12.14.15.35.22;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	99.12.07.16.13.41;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.11.10.23.09.38;	author yuchen;	state Exp;
branches;
next	1.6;

1.6
date	97.10.10.17.47.50;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	95.10.10.15.57.40;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	95.10.04.18.41.37;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	94.07.22.20.30.02;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.07.27;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.17;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.22
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C MRDOC                                                                   *
C          PROMPTS & DOC FILE HEADERS IMPROVED   FEB 2014 ARDEAN LEITH
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  MRDOC(SCALE,SHIFT,ANGLE,NUMBER,P3D,NTVW,NTPT)                       *
C                                                                      *
C  PURPOSE:  RECORDS THE ROTATIONS, SCALE, AND SHIFTS OF THE IMAGES    *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

      SUBROUTINE MRDOC(SCALE,SHIFT,ANGLE,NUMBER,P3D,NTVW,NTPT)

      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'

      PARAMETER (LV=300)
      PARAMETER (LS=256)

      CHARACTER(LEN=MAXNAM) :: SERNAME,CORDOC,ZDOC
      CHARACTER(LEN=1)      :: NULL = CHAR(0)

      LOGICAL               :: ADDEXT,ASKNAM,ISOLD,APPEND
      LOGICAL               :: MESSAGE,NEWFILE

      REAL                  :: SCALE(LV),SHIFT(2,LV),ANGLE(3,LV)
      REAL                  :: P3D(3,LS)
      REAL                  :: BUFLOC(7)
      INTEGER               :: NUMBER(LV)

      DATA PI/3.141592654/,NCOR/12/,NXYZ/13/
      
      ASKNAM   = .TRUE.
      ADDEXT   = .TRUE.
      ISOLD    = .FALSE.
      APPEND   = .FALSE. 
      MESSAGE  = .TRUE. 
      CALL OPENDOC(CORDOC,ADDEXT,NLET,NCOR,NCORT,ASKNAM,
     &            'CORRECTIONS OUTPUT DOC FILE',ISOLD,APPEND,MESSAGE,
     &            NEWFILE,IRTFLG)
      IF (IRTFLG .NE. 0) RETURN   
        
      CORDOC = 'FOR IMAGE SERIES: ' // CORDOC(1:NLET)
      CALL LUNDOCPUTCOM(NCORT,CORDOC,IRTFLG)

      CORDOC = 
     & 'VIEW    SCALE         THETA          PSI         ' //
     & ' XSHIFT        YSHIFT'
      CALL LUNDOCPUTCOM(NCORT,CORDOC,IRTFLG)

      DO  IVIEW=1,NTVW
         BUFLOC(1) = SCALE(IVIEW)
         BUFLOC(2) = ANGLE(2,IVIEW)*180/PI
         BUFLOC(3) = ANGLE(1,IVIEW)*180/PI
         BUFLOC(4) = SHIFT(1,IVIEW)
         BUFLOC(5) = SHIFT(2,IVIEW)
         !CALL SAVDN1(NCOR,CORDOC,BUFLOC,NLIST,NRUN,0)
         CALL LUNDOCWRTDAT(NCORT,NUMBER(IVIEW),BUFLOC,5,IRTFLG)
      ENDDO

      CLOSE(NCOR)

      

      ASKNAM   = .TRUE.
      ADDEXT   = .TRUE.
      ISOLD    = .FALSE.
      APPEND   = .FALSE. 
      MESSAGE  = .TRUE. 
      CALL OPENDOC(ZDOC,ADDEXT,NLET,NCOR,NCORT,ASKNAM,
     &            '3-D COORDS OUTPUT DOC FILE',ISOLD,APPEND,MESSAGE,
     &            NEWFILE,IRTFLG)
      IF (IRTFLG .NE. 0) RETURN   
        
      CORDOC = 'FOR IMAGE SERIES: ' // ZDOC(1:NLET)
      CALL LUNDOCPUTCOM(NCORT,CORDOC,IRTFLG)

      CALL LUNDOCPUTCOM(NCORT,
     &     'POINT    XCOOR        YCOOR        ZCOOR',IRTFLG)

      DO IPOINT=1,NTPT
           BUFLOC(1) = P3D(1,IPOINT)
           BUFLOC(2) = P3D(2,IPOINT)
           BUFLOC(3) = P3D(3,IPOINT)
           !CALL SAVDN1(NXYZ,ZDOC,BUFLOC,NLIST,NRUN,0)
           CALL LUNDOCWRTDAT(NCORT,IPOINT,BUFLOC,3,IRTFLG)
      ENDDO

      CLOSE(NCOR)

      END

@


1.21
log
@PROMPTS & DOC FILE HEADERS lundoc
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.20
log
@enter
@
text
@d5 1
d29 1
a29 1
C  MRDOC(SCALE,SHIFT,ANGLE,NUMBER,P3D,NTVW,NTPT)                                                                     *
d31 1
a31 1
C  PURPOSE:  RECORDS THE ROTATIONS, SCALE, AND SHIFTS OF THE IMAGES                                                          *
d47 1
a47 1
      CHARACTER(LEN=1)      :: NULL
d49 7
a55 4
      DIMENSION         SCALE(LV),SHIFT(2,LV),ANGLE(3,LV)
      DIMENSION         P3D(3,LS)
      DIMENSION         BUFLOC(7)
      DIMENSION         NUMBER(LV)
d58 56
d115 1
a115 46
	NULL = CHAR(0)

	CALL FILERD(CORDOC,NAC,NULL,
     &      'CORRECTIONS OUTPUT DOC.',IRTFLG)
	IF (IRTFLG.NE.0) RETURN

	NLIST = 6

	DO  IVIEW=1,NTVW
	  BUFLOC(1) = NUMBER(IVIEW)
	  BUFLOC(2) = SCALE(IVIEW)
	  BUFLOC(3) = ANGLE(2,IVIEW)*180/PI
	  BUFLOC(4) = ANGLE(1,IVIEW)*180/PI
	  BUFLOC(5) = SHIFT(1,IVIEW)
	  BUFLOC(6) = SHIFT(2,IVIEW)
	  NRUN      = IVIEW-1
	  CALL SAVDN1(NCOR,CORDOC,BUFLOC,NLIST,NRUN,0)
	ENDDO

        CORDOC = 
     &  'VIEW   SCALE       THETA      PSI         XSHIFT       YSHIFT'
        CALL LUNDOCPUTCOM(NCOR,CORDOC,IRTFLG)

        CORDOC = 'FOR IMAGE SERIES: ' // SERNAME(1:NAC)
        CALL LUNDOCPUTCOM(NCOR,CORDOC,IRTFLG)

	CLOSE(NCOR)

	CALL  FILERD(ZDOC,NA,NULL,'3-D COORDS OUTPUT DOC.',IRTFLG)
	IF (IRTFLG .NE. 0) RETURN

	NLIST = 4

	DO IPOINT=1,NTPT
           BUFLOC(1) = IPOINT
           BUFLOC(2) = P3D(1,IPOINT)
           BUFLOC(3) = P3D(2,IPOINT)
           BUFLOC(4) = P3D(3,IPOINT)
	   NRUN      = IPOINT-1
           CALL SAVDN1(NXYZ,ZDOC,BUFLOC,NLIST,NRUN,0)
	ENDDO

        CALL LUNDOCPUTCOM(NXYZ,
     &     'POINT    XCOOR       YCOOR       ZCOOR',IRTFLG)

        CALL LUNDOCPUTCOM(NXYZ,CORDOC,IRTFLG)
d117 1
a117 1
	CLOSE(NXYZ)
a118 1
	END
@


1.19
log
@GPL_2010
@
text
@d58 1
a58 1
     &      'ENTER CORRECTIONS OUTPUT DOC.',IRTFLG)
d83 1
a83 1
	CALL  FILERD(ZDOC,NA,NULL,'ENTER 3-D COORDS OUTPUT DOC.',IRTFLG)
@


1.18
log
@mk xypts in 2 parameters mralign bug
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.17
log
@GPL License fixed
@
text
@d32 1
a32 1
C  MRDOC(SCALE,SHIFT,ANGLE,NUMBER,P3D)                                                                     *
d41 1
a41 1
      SUBROUTINE MRDOC(SCALE,SHIFT,ANGLE,NUMBER,P3D)
a48 3
      LOGICAL*1       PTACTIVE(LS,LV),PARAMQ(4)
      COMMON /GENERAL/PTACTIVE,NUMPTS(LV),NTVW,NTPT,CIR(2),PARAMQ

d57 1
a57 1
        DATA PI/3.141592654/,NCOR/12/,NXYZ/13/
@


1.16
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.15
log
@nac to stop CTRL char at end of doc file
@
text
@d8 24
@


1.14
log
@typo
@
text
@d4 1
a4 1
C                                                                      *
d15 1
a15 1
C                                                                      *
d35 2
a36 4
      CHARACTER(LEN=MAXNAM):: SERNAME
      COMMON /FILEN/SERNAME

      CHARACTER(LEN=MAXNAM)::  CORDOC,ZDOC
a41 1
      CHARACTER   *1    NULL
d68 1
a68 1
        CORDOC = 'FOR IMAGE SERIES: '// SERNAME
d74 1
a74 1
	IF (IRTFLG.NE.0) RETURN
@


1.13
log
@\sername uses maxnam, lundocputcom
@
text
@d67 3
a69 3
        CALL LUNDOCPUTCOM(NCOR,
     &  'VIEW   SCALE       THETA      PSI         XSHIFT      YSHIFT',
        IRTFLG)
@


1.12
log
@ls-->256
@
text
@a20 1
C        0         2         3         4         5         6         7 *
d34 2
a35 1
      CHARACTER*80  SERNAME
d39 1
d48 1
a48 1
	NULL=CHAR(0)
d50 2
a51 2
	CALL  FILERD(CORDOC,NA,NULL,
     &      'ENTER CORRECTIONS OUTPUT DOC FILE',IRTFLG)
d54 1
a54 1
	NLIST=6
d57 7
a63 7
	  BUFLOC(1)=NUMBER(IVIEW)
	  BUFLOC(2)=SCALE(IVIEW)
	  BUFLOC(3)=ANGLE(2,IVIEW)*180/PI
	  BUFLOC(4)=ANGLE(1,IVIEW)*180/PI
	  BUFLOC(5)=SHIFT(1,IVIEW)
	  BUFLOC(6)=SHIFT(2,IVIEW)
	  NRUN=IVIEW-1
d67 6
a72 3
	WRITE(NCOR,123)
 123	FORMAT(' ;VIEW   SCALE',7X,'THETA',6X,'PSI',9X,
     &         'XSHIFT',6X,'YSHIFT')
a73 2
	WRITE(NCOR,124)SERNAME
 124	FORMAT(' ; FOR IMAGE SERIES ',A30)
d76 1
a76 2
	CALL  FILERD(ZDOC,NA,NULL,
     &      'ENTER 3-D COORDS OUTPUT DOC FILE',IRTFLG)
d79 1
a79 1
	NLIST=4
d82 5
a86 5
           BUFLOC(1)=IPOINT
           BUFLOC(2)=P3D(1,IPOINT)
           BUFLOC(3)=P3D(2,IPOINT)
           BUFLOC(4)=P3D(3,IPOINT)
	   NRUN=IPOINT-1
d90 2
a91 2
	WRITE(NXYZ,125)
 125	FORMAT(' ;POINT    XCOOR       YCOOR       ZCOOR')
d93 2
a94 2
	WRITE(NXYZ,126) SERNAME
 126	FORMAT(' ; FOR IMAGE SERIES ',A30)
d96 1
@


1.11
log
@doc files updated for missing keys
@
text
@d31 1
a31 1
      PARAMETER (LS=100)
@


1.10
log
@*** empty log message ***
@
text
@d17 1
a17 1
C  PURPOSE:                                                            *
a26 2
C RECORDS THE ROTATIONS, SCALE, AND SHIFTS OF THE IMAGES
C
d28 1
d30 2
a31 7
        PARAMETER (LV=300)
        PARAMETER (LS=100)
        PARAMETER (MAXREG=7)
        PARAMETER (MAXKEY=100)
        PARAMETER (MAXLOOP=999)
        REAL MAXPER
        PARAMETER (MAXPER=1.0e-6)
d33 1
a33 1
      LOGICAL*1   PTACTIVE(LS,LV),PARAMQ(4)
d35 1
a35 1
      CHARACTER   *80   SERNAME
d38 1
a38 1
      CHARACTER   *80   CORDOC,ZDOC
a43 3
      INTEGER     *4    IRTFLG,IER
      INTEGER           IVIEW
      INTEGER           NCOR,NXYZ
d45 1
a45 1
      DATA PI/3.141592654/,NCOR/12/,NXYZ/13/
d48 1
a48 2
C
	NA=80
d51 2
a52 2
	IF(IRTFLG.NE.0) RETURN
C
d54 1
a54 1
C
d65 1
a65 1
C
d68 2
a69 1
     &      'XSHIFT',6X,'YSHIFT')
d71 1
a71 1
 124	FORMAT(' ; FOR IMAGE SERIES ',A20)
d73 1
a73 2
C
	NA=80
d76 2
a77 1
	IF(IRTFLG.NE.0) RETURN
d79 8
a86 8
C
	DO  IPOINT=1,NTPT
         BUFLOC(1)=IPOINT
         BUFLOC(2)=P3D(1,IPOINT)
         BUFLOC(3)=P3D(2,IPOINT)
         BUFLOC(4)=P3D(3,IPOINT)
	 NRUN=IPOINT-1
         CALL SAVDN1(NXYZ,ZDOC,BUFLOC,NLIST,NRUN,0)
d88 1
d91 3
a93 2
	WRITE(NXYZ,126)SERNAME
 126	FORMAT(' ; FOR IMAGE SERIES ',A20)
@


1.9
log
@*** empty log message ***
@
text
@d58 1
a58 1
      NA=80
d61 1
a61 1
      IF(IRTFLG.NE.0) RETURN
d63 1
a63 1
      NLIST=6
d65 10
a74 10
      DO  IVIEW=1,NTVW
        BUFLOC(1)=NUMBER(IVIEW)
        BUFLOC(2)=SCALE(IVIEW)
        BUFLOC(3)=ANGLE(2,IVIEW)*180/PI
        BUFLOC(4)=ANGLE(1,IVIEW)*180/PI
        BUFLOC(5)=SHIFT(1,IVIEW)
        BUFLOC(6)=SHIFT(2,IVIEW)
	NRUN=IVIEW-1
        CALL SAVDN1(NCOR,CORDOC,BUFLOC,NLIST,NRUN,0)
      ENDDO
d76 2
a77 2
      WRITE(NCOR,123)
 123  FORMAT(' ;VIEW   SCALE',7X,'THETA',6X,'PSI',9X,
d79 3
a81 3
      WRITE(NCOR,124)SERNAME
 124  FORMAT(' ; FOR IMAGE SERIES ',A20)
      CLOSE(NCOR)
d83 1
a83 1
      NA=80
d86 2
a87 2
      IF(IRTFLG.NE.0) RETURN
      NLIST=4
d89 14
a102 14
      DO  IPOINT=1,NTPT
        BUFLOC(1)=IPOINT
        BUFLOC(2)=P3D(1,IPOINT)
        BUFLOC(3)=P3D(2,IPOINT)
        BUFLOC(4)=P3D(3,IPOINT)
	NRUN=IPOINT-1
        CALL SAVDN1(NXYZ,ZDOC,BUFLOC,NLIST,NRUN,0)
      ENDDO
      WRITE(NXYZ,125)
 125  FORMAT(' ;POINT    XCOOR       YCOOR       ZCOOR')
      WRITE(NXYZ,126)SERNAME
 126  FORMAT(' ; FOR IMAGE SERIES ',A20)
      CLOSE(NXYZ)
      END
@


1.8
log
@header
@
text
@a28 1
#ifdef SP_UNIX
a29 3
#else
      INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d60 2
a61 16
     &      'ENTER DOC FILE TO HOLD CORRECTIONS', IRTFLG)
c      CALL RDPRMC(CORDOC,NA,.TRUE.,
c     &      'ENTER DOC FILE TO HOLD CORRECTIONS$', NULL, IRTFLG)
c      NLETC=NA
c      CORDOC(NLETC+1:NLETC+1)=CHAR(0)
c      CALL FILCAN(CORDOC,NLET,NULL,NULL,CORDOC,DATEXC,IER)
Cc      CORDOC(NLET:NLET)=NULL
      NA=80
	CALL  FILERD(ZDOC,NA, NULL,
     &      'ENTER DOC FILE TO HOLD 3-D COORDS$', IRTFLG)
C      CALL RDPRMC(ZDOC,NA,.TRUE.,
C     &      'ENTER DOC FILE TO HOLD 3-D COORDS$', NULL, IRTFLG)
C      NLETZ=NA
C      ZDOC(NLETZ+1:NLETZ+1)=CHAR(0)
C      CALL FILCAN(ZDOC,NLET,NULL,NULL,ZDOC,DATEXC,IER)
Cc      ZDOC(NLET:NLET)=NULL
a62 1
      IF(IRTFLG.NE.0) WRITE(NOUT,*)'ERROR IN FILENAMES'
d64 1
a64 2
C      NRUN=1
C      OPEN(NCOR,FILE=CORDOC,STATUS='NEW',ACCESS='SEQUENTIAL')
a73 1
        NRUN=1
d81 6
a86 1
      CLOSE(NCOR,STATUS='KEEP')
d88 1
a88 2
C      NRUN=1
C      OPEN(NXYZ,FILE=ZDOC,STATUS='NEW',ACCESS='SEQUENTIAL')
d101 1
a101 1
      CLOSE(NXYZ,STATUS='KEEP')
@


1.7
log
@a
@
text
@d1 24
d26 1
a26 2
C ********************************************************
C
@


1.6
log
@*** empty log message ***
@
text
@d36 1
a36 1
CNO_SAVE
@


1.5
log
@nosave
@
text
@d62 1
a62 1
      DO 1100 IVIEW=1,NTVW
d72 1
a72 1
 1100 CONTINUE
d83 1
a83 1
      DO 1200 IPOINT=1,NTPT
d90 1
a90 1
 1200 CONTINUE
@


1.4
log
@change write(* to write(nout
@
text
@d36 1
d38 1
a38 1

@


1.3
log
@LV set to 300 (number of projections)
@
text
@d57 1
a57 1
      IF(IRTFLG.NE.0) WRITE(*,*)'ERROR IN FILENAMES'
@


1.2
log
@cpp_lines_added
@
text
@d12 1
a12 1
        PARAMETER (LV=100)
@


1.1
log
@Initial revision
@
text
@d6 3
d10 1
@
