head	1.18;
access;
symbols
	pre_mrcs:1.18
	healthdept_2018:1.18
	pre_getangas:1.17
	GPL2010:1.17
	pre_GPL2010:1.16
	pre_var_equation:1.16
	pre_fftwrings:1.16
	pre_opfiles:1.16
	src:1.16
	best-code:1.16
	x-named-regs:1.16
	x:1.16
	v13-00:1.16
	pre_GPL:1.14
	prec_CA:1.14
	noindx:1.13
	Bproc:1.13
	oct21:1.9
	last77:1.9;
locks; strict;
comment	@c @;


1.18
date	2018.10.03.14.34.06;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.06.24.13.25.39;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.20.51.20;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.17.18.41.43;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.08.19.53.08;	author pawel;	state Exp;
branches;
next	1.13;

1.13
date	2000.09.07.18.15.57;	author bimal;	state Exp;
branches;
next	1.12;

1.12
date	2000.07.24.18.41.31;	author bimal;	state Exp;
branches;
next	1.11;

1.11
date	99.12.07.15.45.02;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.11.10.23.09.18;	author yuchen;	state Exp;
branches;
next	1.9;

1.9
date	97.10.06.20.43.40;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	97.08.19.13.01.18;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	96.04.04.15.01.01;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	96.01.25.16.52.25;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	96.01.24.23.23.06;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	96.01.24.19.58.42;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.01.22.18.30.14;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.01.16.15.34.02;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.53;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.18
log
@email_health_dept
@
text
@C ++********************************************************************
C                                                                      *
C                                                                      *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C                                                                      *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:
C                                                                      *
C IMAGE_PROCESSING_ROUTINE  
C                                                                      *
C        0         2         3         4         5         6         7 *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************


	SUBROUTINE FINT(X,Y,NSAM,NROW,NSAM2,NROW2,LSD,LSD2)

	
	DIMENSION   X(LSD,NROW), Y(LSD2,NROW2)

C       TO KEEP THE EXACT VALUES ON THE PREVIOUS GRID YOU SHOULD USE
C        SQ2     = 2.0. HOWEVER, TOTAL ENERGY WILL NOT BE CONSERVED.

	SQ2    = SQRT(2.0)
	ANORM  = FLOAT(NSAM2*NROW2)/FLOAT(NSAM*NROW)
	NM     = MOD(NSAM,2)

	INV = +1
	CALL  FMRS_2(X,NSAM,NROW,INV)

C       NORMALIZATION REQUIRED
        X = X*ANORM

	IF(NSAM<=NSAM2)  THEN
        INSAM  = NSAM2 - NSAM
        INROW  = NROW2 - NROW
C       ZERO PADDING IS DONE

	Y = 0.0

	DO J = 1,NROW/2+1
	   DO I =1,LSD
	      Y(I,J) = X(I,J) 
	   ENDDO
	ENDDO

	DO J = NROW/2+2+INROW, NROW2
	   DO I =1,LSD
	      Y(I,J) = X(I,J-INROW) 
	   ENDDO
	ENDDO

C       WEIGHTING FACTOR USED FOR EVEN NSAM. REQUIRED SINCE ADDING ZERO FOR
C       INTERPOLATION WILL INTRODUCE A COMPLEX CONJUGATE FOR NSAM/2 TH
C       ELEMENT.

	IF (NM .EQ. 0 .AND. INSAM .NE. 0) THEN
	   DO J = 1,NROW2
	      Y(NSAM+1,J) = (1/SQ2)*Y(NSAM+1,J)
	      Y(NSAM+2,J) = (1/SQ2)*Y(NSAM+2,J)
	   ENDDO
       	   DO I =1,LSD
	      Y(I,NROW/2+1+INROW) = Y(I,NROW/2+1)/SQ2
	      Y(I,NROW/2+1)       = Y(I,NROW/2+1)/SQ2
	   ENDDO
	ENDIF
	ELSE
	Y(:,1:NROW2/2+1)=X(1:LSD2,1:NROW2/2+1)
	DO  J=NROW2,NROW2/2+2,-1
	Y(:,J)=X(1:LSD2,J+NROW-NROW2)
	ENDDO
	ENDIF
	INV = -1
	CALL  FMRS_2(Y,NSAM2,NROW2,INV)


	END
@


1.17
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.16
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.15
log
@HRI GPL License used
@
text
@a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.14
log
@truncation added
@
text
@d7 24
@


1.13
log
@added comments
@
text
@a37 2
        INSAM  = NSAM2 - NSAM
        INROW  = NROW2 - NROW
d45 3
d78 6
a83 1

@


1.12
log
@adapted to new fourier format
@
text
@d32 3
d44 1
d46 3
d62 4
@


1.11
log
@header
@
text
@a0 1

d18 3
a20 1
C  PARAMETERS:                                                         *
d26 14
a39 1
	SUBROUTINE  FINT(F1,F2,NDIM,NROW,NDIMN,NROWN,WORK)
d41 2
a42 1
	DIMENSION  F1(NDIM,NROW),F2(NDIMN,NROWN),WORK(*)
d44 4
a47 23
C
C  Interpolation using Fourier zero padding
C  F1 and F2 can be the same
C
	INV=1
	CALL  FMR_2(F1,NDIM,NROW,WORK,INV)
	IF (INV.EQ.0) THEN
	CALL ERRT(38,'FP ',NE)
	RETURN
	ENDIF
C  If you prefer exact values on an old grid replace:
C       SQ2=2.0
C	D2=4.0
C  Warning! It will cause an error in total energy.
C
	SQ2=SQRT(2.0)
	D2=2.0
C
	FM=FLOAT(NDIMN*NROWN)/FLOAT(NDIM*NROW)
	NR21=NROW/2+1
	DO    J=NROW,1,-1
	DO    I=NDIM,1,-1
	F2(I,J)=F1(I,J)*FM
d49 5
d55 16
a70 40
	DO    J=NROW+1,NROWN
	DO    I=1,NDIMN
	F2(I,J)=0.0
	ENDDO
	ENDDO
	DO    J=1,NROW
	DO    I=NDIM+1,NDIMN
	F2(I,J)=0.0
	ENDDO
	ENDDO
C
	DO    J=2,NROW/2
	DO    I=3,NDIM
	F2(I,NROWN-J+2)=F2(I,NROW-J+2)
	F2(I,NROW-J+2)=0.0
	ENDDO
	ENDDO
	DO    I=3,NDIM
	F2(I,NROWN-NROW+NR21)=F2(I,NR21)/SQ2
	F2(I,NR21)=F2(I,NR21)/SQ2
	ENDDO
	F2(NDIM+1,1)=F2(2,1)/SQ2
	F2(2,1)=0.0
	F2(1,NROW+1)=F2(1,2)/SQ2
	F2(1,2)=0.0
	DO    J=3,NROW,2
	F2(NDIM+1,(J+1)/2)=F2(2,J)/SQ2
	F2(NDIM+2,(J+1)/2)=F2(2,J+1)/SQ2
	F2(NDIM+1,NROWN-(J-3)/2)=F2(2,J)/SQ2
 	F2(NDIM+2,NROWN-(J-3)/2)=-F2(2,J+1)/SQ2
	F2(2,J)=0.0
	F2(2,J+1)=0.0
	ENDDO
	F2(NDIM+1,NR21)=F2(2,2)/D2
	F2(NDIM+1,NROWN-NROW+NR21)=F2(2,2)/D2
	F2(2,2)=0.0
C
	INV=-1
	CALL  FMR_2(F2,NDIMN,NROWN,WORK,INV)
	IF (INV.EQ.0)   CALL ERRT(38,'FP ',NE)
@


1.10
log
@a
@
text
@d1 24
d26 1
@


1.9
log
@*** empty log message ***
@
text
@d3 1
a3 1
CNO_SAVE
@


1.8
log
@removed fnr_2 declaration
@
text
@d24 15
a38 9
	DO  1  J=NROW,1,-1
	DO  1  I=NDIM,1,-1
1	F2(I,J)=F1(I,J)*FM
	DO  11  J=NROW+1,NROWN
	DO  11  I=1,NDIMN
11	F2(I,J)=0.0
	DO  12  J=1,NROW
	DO  12  I=NDIM+1,NDIMN
12	F2(I,J)=0.0
d40 2
a41 2
	DO  2  J=2,NROW/2
	DO  2  I=3,NDIM
d43 4
a46 2
2	F2(I,NROW-J+2)=0.0
	DO  23  I=3,NDIM
d48 2
a49 1
23	F2(I,NR21)=F2(I,NR21)/SQ2
d54 1
a54 1
	DO  4  J=3,NROW,2
d61 1
a61 1
4	CONTINUE
@


1.7
log
@error 38
@
text
@a2 1
	DOUBLE PRECISION  ENFR_2
@


1.6
log
@bug in do-loop #1 fixed
@
text
@d12 1
a12 1
	CALL ERRT(2,'FP ',NE)
d60 1
a60 1
	IF (INV.EQ.0)   CALL ERRT(2,'FP ',NE)
@


1.5
log
@OK.
@
text
@d25 1
a26 1
	DO  1  J=NROW,1,-1
@


1.4
log
@*** empty log message ***
@
text
@d3 1
a14 1

d17 1
a17 1
C       D2=4.0
@


1.3
log
@fft replaced, this version works for even->even dimensions
@
text
@d1 2
a2 2
	SUBROUTINE  FINT(F1,F2,NDIM,NROW,MGM,WORK)
	DIMENSION  F1(NDIM,NROW),F2(MGM*NDIM,MGM*NROW),WORK(*)
a6 1
C  MGM - magnification factor = 2,4,8,...
d16 1
a16 1
C       SQT=2.0
d23 1
a23 1
	M=MGM*MGM
d27 3
a29 3
1	F2(I,J)=F1(I,J)*M
	DO  11  J=NROW+1,MGM*NROW
	DO  11  I=1,MGM*NDIM
d32 1
a32 1
	DO  12  I=NDIM+1,MGM*NDIM
d37 1
a37 1
	F2(I,MGM*NROW-J+2)=F2(I,NROW-J+2)
d40 1
a40 1
	F2(I,(MGM-1)*NROW+NR21)=F2(I,NR21)/SQ2
d49 2
a50 2
	F2(NDIM+1,MGM*NROW-(J-3)/2)=F2(2,J)/SQ2
 	F2(NDIM+2,MGM*NROW-(J-3)/2)=-F2(2,J+1)/SQ2
d55 1
a55 1
	F2(NDIM+1,(MGM-1)*NROW+NR21)=F2(2,2)/D2
d59 1
a59 1
	CALL  FMR_2(F2,MGM*NDIM,MGM*NROW,WORK,INV)
@


1.2
log
@nosave
@
text
@d1 2
a2 2
	SUBROUTINE  FINT(F1,F2,NDIM,NROW,MGM)
	DIMENSION  F1(NDIM,NROW),F2(MGM*NDIM,MGM*NROW)
d9 6
a14 1
	CALL  FFTR2_P(F1,NDIM,NROW,1)
d59 3
a61 1
	CALL  FFTR2_P(F2,MGM*NDIM,MGM*NROW,-1)
@


1.1
log
@Initial revision
@
text
@d3 1
d5 1
a5 1
C  Interpolation through Fourier zero padding
@
