head	1.21;
access;
symbols
	pre_mrcs:1.21
	healthdept_2018:1.21
	pre_getangas:1.18
	GPL2010:1.18
	pre_GPL2010:1.17
	pre_var_equation:1.17
	pre_fftwrings:1.17
	pre_opfiles:1.17
	src:1.17
	best-code:1.17
	x-named-regs:1.17
	x:1.17
	v13-00:1.17
	pre_GPL:1.16
	prec_CA:1.16
	noindx:1.16
	Bproc:1.16
	oct21:1.16
	last77:1.15;
locks; strict;
comment	@c @;


1.21
date	2018.10.03.14.34.08;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2014.01.28.17.35.15;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2012.03.07.17.32.07;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2010.06.24.13.25.54;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.17.21.01.23;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	99.08.13.14.40.02;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	99.03.08.19.56.22;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	98.01.27.14.33.17;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	98.01.26.17.56.16;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	98.01.26.16.25.43;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	98.01.23.18.38.31;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	97.10.09.14.29.35;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	95.10.03.18.49.02;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	95.02.08.14.49.13;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	95.02.07.19.06.51;	author mladjadj;	state Exp;
branches;
next	1.6;

1.6
date	95.01.13.10.50.04;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	95.01.13.09.16.49;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.01.11.15.51.32;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.01.11.15.37.34;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.06.17;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.49.31;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.21
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C HISMAP.F   ADAPTED FROM HPLAN.FOR  ON NOV 8 1986 BY ARDEAN LEITH
C            BORDERS CHANGED TO SOLID LINES FEB 88 ARDEAN LEITH
C            CHAR  ID PASSED AUG 99  ARDEAN LEITH
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   HISMAP(IDIM,NPTS,JX,JY,X,Y,ID,MOD,NLIGN,NPAGE,PEX,NDAT,NBAND) 
C   PREPARES PLOT FILE 
C
C   GRAPH OF NPTS POINTS WITH NLIGN-ROWS, AND NPAGE-PAGES                      
C   (IF NLIGN=0, AUTOMATIC DETERMINATION OF NLIGN. NPAGE = 1 TO 8)              
C   WARNING: NPAGE MAY NOT BE MORE THAN 3 WITH MODE 1.                          
C   COORDINATES X(*) FOR HORIZONTAL AXIS JX, Y(*) FOR VERTICAL AXIS JY          
C   LABELS ARE IN ID(*), FORMAT A1 IF MOD=1, FORMAT A4 IF MOD=4               
C   POINTS AT MORE THAN PEX STANDARD DEVIATIONS ARE POSITIONED ON THE           
C   EDGES OF THE GRAPH (SUBROUTINE EPUR4).                                      
C   IF NOR=1 THE ORIGIN IS ADDED TO THE POINTS TO BE DISPLAYED.                 
C   WARNING:  X(*), Y(*), ID(NPTS+1) ARE DESTROYED UPON RETURN.                
C   GRAPH IS ABORTED IF MORE THAN 2048 POINTS ARE ON THE EDGES,                 
C   THE FIRST NHID HIDDEN POINTS ARE PRINTED WITH THEIR COORDINATES.         
C
C   CALLED BY:  SGRAF1 (IN SGRAP.F)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C **********************************************************************

       SUBROUTINE HISMAP(IDIM,NPTS,JX,JY,X,Y,ID,MOD,NLIGN,NPAGE,PEX,
     &                   NDAT,NBAND)     

       INTEGER, PARAMETER :: NHID = 200
       INTEGER            :: LD1(NHID),LD2(NHID), KLIC(371)
       REAL               :: EX(48)
       CHARACTER(LEN= 1)  :: NULL = CHAR(0)

       CHARACTER * 4   KLAC(371)
       CHARACTER * 4   LA(8),NA(8)
       CHARACTER * 1   MA(8)
       INTEGER         FPAGE,FL,FC
       REAL            X(IDIM),Y(IDIM),KKO,LLO,IREM,EY
       CHARACTER * 7   ID(IDIM)
       CHARACTER * 4   LDA,LDA2,LDB,LDB2
       CHARACTER * 4   IKLAC

       DATA MA/'-',' ','|','|','.','+',':','^'/
       DATA NA/'----','    ','|   ','   |',' .  ',' +  ',':   ',' ^  '/ 
       DATA LDA2/'    '/,LDB2/'    '/

       IF (NPAGE == 0) NPAGE = 1                                
       REWIND NBAND
  
       NPTSP1 = NPTS + 1   ! altered jan 2014 al                
       NPTSP1  = NPTS                     

C      CHECK TO SEE THAT NUMBER OF POINTS IS NOT EXCESSIVE
       IF (NPTSP1 > IDIM) THEN
         CALL ERRT(102,'HISMAP; NPTS EXCEEDS ARRAY DIMENSION',IDIM)
         RETURN
       ENDIF         

       WRITE (NDAT,1110)  NPTS, JX, JY, JX, JY
 1110  FORMAT (///' ',25X,'MAP OF'                 ,I6, '  POINTS' ,
     &   ' ON AXES'       ,I2,'  AND'  , I2,/' ',130('-')//,' ',21X,
     &   'AXIS',I2,'  /HORIZONTAL' ,10X, 'AXIS',I2,'  /VERTICAL' //)

C      FIND POINTS ON BOUNDARY OF MAP
 
       CALL EPUR4(IDIM,NPTS, X,Y,ID, MOD, PEX, KP, IDUM,IRTFLG,NDAT)
       IF (IRTFLG == 1)  RETURN     

C      SET SPECIAL SYMBOLS ACCORDING TO MODE
       DO K = 1,8                                                          
          IF (MOD == 1) THEN
             LA(K) = MA(K)
          ELSE
             LA(K) = NA(K)                           
          ENDIF
       ENDDO

       !ID(NPTSP1) = LA(6) ! jan 2014 al 
       !X(NPTSP1)  = 0.0   ! jan 2014 al
       !Y(NPTSP1)  = 0.0   ! jan 2014 al
       !CALL BORNS (NPTSP1,X,XMINT,XMAXT)
       !CALL BORNS (NPTSP1,Y,YMINT,YMAXT) 
             
C      FIND MIN/MAX
       XMINT = MINVAL(X(1:NPTSP1))
       XMAXT = MAXVAL(X(1:NPTSP1))
       YMINT = MINVAL(Y(1:NPTSP1))
       YMAXT = MAXVAL(Y(1:NPTSP1))

C      FIND NUMBER OF POSITIONS ON A LINE OF A PAGE (LENP)
       IF (MOD == 1) THEN
         LENP = 123    
       ELSEIF (MOD == 4) THEN
         LENP =  30   
       END IF

C      FIND TOTAL NUMBER OF POSITIONS ON A LINE                              
       LENTOT = LENP * NPAGE         
       NLINES = NLIGN
       FC     = LENTOT
       FPAGE  = NPAGE

C      FIND DEFAULT NUMBER OF LINES
       IF (NLINES == 0) THEN
         NLINES = ((YMAXT - YMINT) / (XMAXT - XMINT)) * FPAGE * 74.0
       END IF       

   30  IF (NLINES <= 12) NLINES = 12 
       FL    = NLINES
       S     = (XMAXT - XMINT) / FC    
       T     = (YMAXT - YMINT) / FL         
       NINT  = 5 * NPAGE + 1         
       ESPX  = FC / (5.0 * FPAGE)

       DO  J = 1,NINT      
C        FIND X AXIS LABELS

         EX(J) = XMINT + S * ESPX * FLOAT(J-1) 
       ENDDO

       KKO   = 0.50001 - (XMINT / S)
       LLO   = 0.50001 + ABS(YMAXT / T)

       DO   I = 1,NPTSP1 
C        SCALE EACH POINT TO FIT PAGE

         K     = (X(I) - XMINT) / S + 0.500001                   
         L     = (YMAXT - Y(I)) / T + 0.500001

C        PUT SCALED POINT IN X,Y
         IF (K == 0) K = 1 
         IF (L == 0) L = 1                                    
         X(I)  = K + 0.0001                             
         Y(I)  = L + 0.0001 
       ENDDO                  

       NSTACKED = 0
       DO   LL = 1,NLINES
C        PREPARE EACH LINE, EY IS Y AXIS LABEL

         EY    = YMAXT - T * FLOAT(LL-1)           

         DO  KK = 1,LENTOT
C          FILL OUTPUT LINE WITH BLANKS EXCEPT FOR FIRST, LAST, ETC. LINE
           KLIC(KK) = 0             
           KLAC(KK) = LA(2)                                   
           IF (LL == 1   .OR. LL == NLINES) KLAC(KK) = LA(1)      
           IF (KK == KKO .OR. LL == LLO)    KLAC(KK) = LA(5)
         ENDDO 

         KLAC(1)          = LA(3)        
         KLAC(LENTOT)     = LA(4)      
         KLAC(LENTOT + 1) = LA(2) 
         KLIC(LENTOT + 1) = 0  
         KLIC(LENTOT+2)   = 0 
  
         DO  I = 1,NPTSP1
C          PUT EACH POINT ID ON THE PAGE MAP, KLIC(K) HOLDS POINT ID

           L     = Y(I)  
           IF (L == LL) THEN
             K     = X(I) 
             IF (KLIC(K) == 0) THEN
C               PUT NUMBER OF POINT IN KLIC
                KLIC(K) = I  
             ELSE
C               ALREADY HAVE POINT AT THIS LOCATION
                IK        = KLIC(K)   
                NSTACKED  = NSTACKED + 1

C	        for pixel map, obviously, nhid=200 is not enough.  <ML
                IF ((MOD .NE. 1 .OR. NSTACKED > 100) .AND. 
     &                               NSTACKED <= NHID) THEN
                  LD1(NSTACKED) = IK 
                  LD2(NSTACKED) = I
                ENDIF
             ENDIF
           ENDIF
         ENDDO

         DO KK = 1,LENTOT
C          PUT CORRECT SYMBOLS ON THE OUTPUT LINE

           IK = KLIC(KK)                                      
           IF (IK .NE. 0) THEN
C             HAVE POINT AT THIS LOCATION
              IF (MOD == 1) THEN
                 KLAC(KK) = ID(IK)(1:1)
              ELSE
                 IF (ID(IK)(3:3) == ' ') THEN
                    KLAC(KK) = '  ' // ID(IK)(1:2)
                 ELSEIF (ID(IK)(4:4) == ' ') THEN
                    KLAC(KK) = ' ' // ID(IK)(1:3)
                 ELSE
                    KLAC(KK) =        ID(IK)(1:3)
                 ENDIF
              ENDIF
           ENDIF
         ENDDO

         LENTOTP1 = LENTOT + 1        

C        WRITE OUTPUT LINE TO TEMP FILE       
         WRITE (NBAND)  EY, (KLAC(K), K=1,LENTOTP1)                   
       ENDDO

       KB    = 0 
       KBB   = 1 
       IPUSH = 0

C      PRINT EACH PAGE
       DO   IPAGE = 1,NPAGE  
         REWIND NBAND          

         KA    = KB + 1   
         KB    = KA + LENP - 1                              
         IF (KB == LENTOT .AND. IPAGE > 1)  KB = LENTOT + 1 
         KAA   = KBB + 1 
         KBB   = KAA + 4 

         DO   LL = 1,NLINES 
C          PRINT EACH LINE ON THIS PAGE,  GET LINE FROM TEMPORARY FILE
           READ (NBAND)  EY, (KLAC(K), K=1,LENTOTP1)          

           IREM = LL - 5 * (LL / 5)

           IF (MOD == 1) THEN
C            SYMBOL IS ONLY ONE CHAR. LONG

             IF (IPAGE == 1) THEN
                WRITE(NDAT,1010) EY, (KLAC(K),K=KA,KB)
 1010           FORMAT (' ',F8.2,1X,123A1)                  
             ELSE
                WRITE(NDAT,1030) (KLAC(K),K=KA,KB)    
 1030           FORMAT (' ',130A1)
             ENDIF

           ELSE
C            SYMBOL IS 4 CHAR. LONG
             IF (IPAGE == 1) THEN
                WRITE (NDAT,1020) EY, (KLAC(K),K=KA,KB) 
 1020           FORMAT (' ',F8.2,1X,31A4)             
             ELSE
                WRITE (NDAT,1040) (   KLAC(K),K=KA,KB)    
 1040           FORMAT (' ',32A4)
             ENDIF
           ENDIF
  	 ENDDO

         IF (IPAGE == 1) THEN
C          PAGE ONE
           WRITE(NDAT,1050) (EX(K),K=1,6)     
 1050      FORMAT (' ',2X,5(F10.4,14X),F10.4)         

         ELSE IF (IPAGE > 1) THEN
           WRITE (NDAT,1060) (EX(K),K=KAA,KBB)
 1060      FORMAT (' ',18X,4(F10.4,14X),F10.4) 
        ENDIF

         IF (IPAGE < NPAGE) THEN
C           NEW PAGE
            WRITE (NDAT,90) 
90          FORMAT(/////)
         ENDIF
       ENDDO

C      CHECK IF THERE ARE STACKED UP POINTS
       IF (NSTACKED == 0 .OR. MOD == 1) RETURN

C      FOR STACKED CASES ONLY ---------------------------------------                             

C      GIVE DATA ON HIDDEN (STACKED) POINTS
       WRITE (NDAT,1070) NHID
 1070  FORMAT(//,' ',50X,'STACKED POINTS   ( MAXIMUM OF ',I3,' )/',/,    
     &       ' ',2(' POINT',5X,'*',4X,'ABSCISSA',9X,'*',6X,'ORDINATE',
     &     7X,'*',10X)/,
     &     '   VISABLE',2X,'*',4X,'APPROX.',8X,'*',6X,'APPROX.',6X,
     &     '*',11X,'HIDDEN',4X,'*',4X,'APPROX.',8X,'*',6X,
     &     'APPROX.',6X,'*')

C      DRAW LINE ACROSS PAGE
       WRITE (NDAT,1080)
 1080  FORMAT (' ',2(28(' *'),10X) )

       LTOT = MIN0(NSTACKED,NHID)     
       DO  L = 1, LTOT
         IK    = LD1(L)      
         I     = LD2(L)      
         LDA   = ID(IK)    
         LDB   = ID(I)
         XD1   = X(IK) * S + XMINT                     
         YD1   = YMAXT - Y(IK) * T          
         XD2   = X(I) * S + XMINT           
         YD2   = YMAXT - Y(I) * T           
         WRITE(NDAT,1090) LDA,LDA2,XD1,YD1,LDB,LDB2,XD2,YD2   
 1090    FORMAT(' ',2(' *' ,2A4,' *',2(F13.3,8X,'*'),10X)  ) 
       ENDDO          

C      DRAW LINE ACROSS PAGE
       WRITE(NDAT,1080)

       WRITE(NDAT,1100) NSTACKED        
 1100  FORMAT(/ ' ',' NUMBER OF STACKED POINTS = ',I6, /)

       END                                                                     
@


1.20
log
@rewrite for scaling bug
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.19
log
@increased number of pts on border= 2048
@
text
@d53 4
a56 2
       PARAMETER       (NHID=200)
       COMMON /COMMUN/ LD1(NHID),LD2(NHID), EX(48), KLIC(371)
a65 1
       CHARACTER * 1   NULL
a70 2
       NULL = CHAR(0)

d73 3
a75 1
       NPTSP1 = NPTS + 1                   
d79 1
a79 1
         CALL ERRT(101,' *** NPTS EXCEED ARRAY DIM. IN HISMAP',IDUM)
d89 3
a91 6
       CALL EPUR4(IDIM,NPTS, X,Y,ID, MOD, PEX, KP, KLIC,KODE,NDAT)
       IF (KODE == 1) THEN
          CALL ERRT(101,
     &     '*** MAP ABORTED, MORE THAN 2048 POINTS ON FRAME',IDUM)
         RETURN     
       ENDIF
d102 12
a113 7
       ID(NPTSP1) = LA(6)
       X(NPTSP1)  = 0.0
       Y(NPTSP1)  = 0.0

   20  CALL BORNS (NPTSP1,X,XMINT,XMAXT)
       CALL BORNS (NPTSP1,Y,YMINT,YMAXT)              
                                 
d128 1
a128 1
       IF (NLINES .EQ. 0) THEN
d132 1
a132 1
   30  IF (NLINES .LE. 12) NLINES = 12 
d155 2
a156 2
         IF (K .EQ. 0) K = 1 
         IF (L .EQ. 0) L = 1                                    
d171 2
a172 2
           IF (LL .EQ. 1 .OR. LL .EQ. NLINES) KLAC(KK) = LA(1)      
           IF (KK .EQ. KKO .OR. LL .EQ. LLO)  KLAC(KK) = LA(5)
d192 2
a193 2
                IK    = KLIC(K)   
                NSTACKED     = NSTACKED + 1
d196 2
a197 2
                IF ((MOD .NE. 1 .OR. NSTACKED .GT. 100) .AND. 
     &                               NSTACKED .LE. NHID) THEN
d214 1
a214 1
                 IF (ID(IK)(3:3) .EQ. ' ') THEN
d216 1
a216 1
                 ELSEIF (ID(IK)(4:4) .EQ. ' ') THEN
d241 1
a241 1
         IF (KB .EQ. LENTOT .AND. IPAGE .GT. 1)  KB = LENTOT + 1 
d251 1
a251 1
           IF (MOD .EQ. 1) THEN
d254 1
a254 1
             IF (IPAGE .EQ. 1) THEN
d264 1
a264 1
             IF (IPAGE .EQ. 1) THEN
d274 1
a274 1
         IF (IPAGE .EQ. 1) THEN
d279 1
a279 1
         ELSE IF (IPAGE .GT. 1) THEN
d284 1
a284 1
         IF (IPAGE .LT. NPAGE) THEN
d292 1
a292 1
       IF (NSTACKED .EQ. 0 .OR. MOD .EQ. 1) RETURN
a328 1
       RETURN                                                                  
@


1.18
log
@GPL_2010
@
text
@d42 1
a42 1
C   GRAPH IS ABORTED IF MORE THAN 264 POINTS ARE ON THE EDGES,                 
d72 1
a72 1
       IF (NPAGE .EQ. 0) NPAGE = 1                                
d77 4
a80 2
       IF (NPTSP1 .GT. IDIM) WRITE (NDAT,1130)                         
 1130  FORMAT (/' ','(DIMENSION ERROR IN SUBROUTINE HISMAP )'/)          
d89 1
a89 1
       IF (KODE .EQ. 1) THEN
d91 1
a91 1
     &     '*** MAP ABORTED, MORE THAN 264 POINTS ON FRAME',IDUM)
d97 1
a97 1
          IF (MOD .EQ. 1) THEN
d112 1
a112 1
       IF (MOD .EQ. 1) THEN
d114 1
a114 1
       ELSEIF (MOD .EQ. 4) THEN
d182 1
a182 1
           IF (L .EQ. LL) THEN
d184 1
a184 1
             IF (KLIC(K) .EQ. 0) THEN
d208 1
a208 1
              IF (MOD .EQ. 1) THEN
@


1.17
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.16
log
@updated for 7 char id
@
text
@d9 23
a31 6
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
d52 1
a52 1
C****************************************************************************
@


1.15
log
@uses postscript now for hismap4
@
text
@d2 16
a17 2
C----------------------------------------------------------------------
C   HISMAP.F 
d20 1
a20 4
C   ADAPTED FROM HPLAN.FOR  ON NOV 8 1986 BY al
C   BORDERS CHANGED TO SOLID LINES FEB 88 al
C----------------------------------------------------------------------         
C   GRAPH OF ICARD POINTS WITH NLIGN-ROWS, AND NPAGE-PAGES                      
d28 1
a28 1
C   WARNING:  X(*), Y(*), ID(ICARD+1) ARE DESTROYED UPON RETURN.                
d32 1
a32 1
C   CALLED BY:  SGRAF1
d37 2
a38 2
       SUBROUTINE HISMAP(IDIM,ICARD,JX,JY,X,Y,ID,MOD,NLIGN,NPAGE,PEX,
     &                   IMP,NBAND)     
d48 2
a49 1
       CHARACTER * 4   ID(IDIM),LDA,LDA2,LDB,LDB2
d61 1
a61 1
       N1 = ICARD + 1                   
d64 1
a64 1
       IF (N1 .GT. IDIM) WRITE (IMP,1130)                         
d67 1
a67 1
       WRITE (IMP,1110)  ICARD, JX, JY, JX, JY
d69 1
a69 1
     &   ' ON AXES'       ,I2,'  AND'  , I2,/' ',130('-')//,' ',30X,
d73 1
a73 1
       CALL EPUR4(IDIM,ICARD, X,Y,ID, MOD, PEX, KP, KLIC,KODE,IMP)
d82 5
a86 5
         IF (MOD .EQ. 1) THEN
           LA(K) = MA(K)
         ELSE
           LA(K) = NA(K)                           
         ENDIF
d89 3
a91 3
       ID(N1) = LA(6)
       X(N1)  = 0.0
       Y(N1)  = 0.0
d93 2
a94 2
   20  CALL BORNS (N1,X,XMINT,XMAXT)
       CALL BORNS (N1,Y,YMINT,YMAXT)              
d96 1
a96 1
C      FIND NUMBER OF POSITIONS ON A LINE OF A PAGE (K1)
d98 1
a98 1
         K1 = 123    
d100 1
a100 1
         K1 =  30   
d104 4
a107 4
       KFIN  = K1 * NPAGE         
       NL    = NLIGN
       FC    = KFIN
       FPAGE = NPAGE
d110 2
a111 2
       IF (NL .EQ. 0) THEN
         NL    = ((YMAXT - YMINT) / (XMAXT - XMINT)) * FPAGE * 74.0
d114 2
a115 2
   30  IF (NL .LE. 12) NL = 12 
       FL    = NL
d130 1
a130 1
       DO   I = 1,N1 
d143 3
a145 3
       J     = 0
       DO   LL = 1,NL
C        PREPARE EACH LINE,   EY IS Y AXIS LABEL
d149 1
a149 1
         DO  KK = 1,KFIN
d153 2
a154 2
           IF (LL .EQ. 1 .OR. LL .EQ. NL)    KLAC(KK) = LA(1)      
           IF (KK .EQ. KKO .OR. LL .EQ. LLO) KLAC(KK) = LA(5)
d157 5
a161 5
         KLAC(1)        = LA(3)        
         KLAC(KFIN)     = LA(4)      
         KLAC(KFIN + 1) = LA(2) 
         KLIC(KFIN + 1) = 0  
         KLIC(KFIN+2)   = 0 
d163 1
a163 1
         DO  I = 1,N1
d170 1
d173 1
d175 1
a175 1
                J     = J + 1
d178 4
a181 3
                IF ((MOD .NE. 1 .OR. J .GT. 100) .AND. J .LE. NHID) THEN
                  LD1(J) = IK 
                  LD2(J) = I
d187 1
a187 1
         DO KK = 1,KFIN
d192 1
d194 1
a194 6
                 DO IT = 1,4
                    IF (ID(IK)(IT:IT) .NE. ' ' .AND. 
     &                  ID(IK)(IT:IT) .NE. CHAR(0)) THEN
                       KLAC(KK) = ID(IK)(IT:IT) // '   ' 
                    ENDIF 
                 ENDDO 
d196 7
a202 1
                 KLAC(KK) = ID(IK)
d207 1
a207 1
         KFI1 = KFIN + 1        
d210 1
a210 1
         WRITE (NBAND)  EY, (KLAC(K), K=1,KFI1)                   
d218 1
a218 1
       DO   KPT = 1,NPAGE  
d222 2
a223 2
         KB    = KA + K1 - 1                              
         IF( KB .EQ. KFIN .AND. KPT .GT. 1)  KB = KFIN + 1 
d227 3
a229 8
C        RIGHT JUSTIFY Y AXIS LABELS
         LINTP = 1
         JUST  = 2
         NDATA = 1

         DO   LL = 1,NL 
C          PRINT EACH LINE ON THIS PAGE,  GET THE LINE FROM TEMPORARY FILE
           READ (NBAND)  EY, (KLAC(K), K=1,KFI1)          
d236 2
a237 2
             IF (KPT .EQ. 1) THEN
                WRITE(IMP,1010) EY, (KLAC(K),K=KA,KB)
d240 1
a240 1
                WRITE(IMP,1030) (KLAC(K),K=KA,KB)    
d246 2
a247 2
             IF (KPT .EQ. 1) THEN
                WRITE (IMP,1020) EY,(KLAC(K),K=KA,KB) 
d250 1
a250 1
                WRITE (IMP,1040) (KLAC(K),K=KA,KB)    
d256 1
a256 1
         IF (KPT .EQ. 1) THEN
d258 1
a258 2

           WRITE(IMP,1050) (EX(K),K=1,6)     
d261 2
a262 2
         ELSE IF (KPT .GT. 1) THEN
           WRITE (IMP,1060) (EX(K),K= KAA,KBB)
d266 1
a266 1
         IF (KPT .LT. NPAGE) THEN
d268 2
a269 1
            WRITE (IMP,*) '1'
a270 1

d274 3
a276 1
       IF (J .EQ. 0 .OR. MOD .EQ. 1) GO TO  150                               
d279 2
a280 2
       WRITE (IMP,1070) NHID
 1070  FORMAT(//,' ',50X,'PILED POINTS     ( MAXIMUM OF ',I3,' )/',/,    
d283 3
a285 3
     &     '   VISABLE',2X,'*',4X,'APPROXIM.',8X,'*',6X,'APPROXIM.',6X,
     &     '*',11X,'HIDDEN',4X,'*',4X,'APPROXIM.',8X,'*',6X,
     &     'APPROXIM.',6X,'*')
d288 1
a288 1
       WRITE (IMP,1080)
d291 1
a291 1
       LTOT = MIN0(J,NHID)     
d301 1
a301 1
         WRITE(IMP,1090) LDA,LDA2,XD1,YD1,LDB,LDB2,XD2,YD2   
d306 1
a306 2
       WRITE(IMP,1080)
 150   CONTINUE                                            
d308 2
a309 2
       IF (J .NE. 0) WRITE(IMP,1100) J        
 1100  FORMAT(/ ' ',' NUMBER OF STACKED POINTS   ='     ,I5, /)
@


1.14
log
@used commun correct for multigot
@
text
@d3 2
a4 2
C   HISMAP.FOR
C   PREPARES PLOT METAFILE 
d21 1
a21 2
C   CALLS:      EPUR4       BORNS   
C               CNFILE      CSPUSH   CSPSTX     CSTRAP    CSSCALT
a22 8
C   CALLED BY:  SGRAF1,  nlmrealstrt
C
C   NOTE 12/7/93			<ML
C		IT SEEMS THAT HISMAP IS CALLED ALWAYS WITH 
C		NOR = 1 AND NID = 1.
C		SO CHANGE THE SOFTWARE TO REFLECT THAT.
C
C        1         2         3         4         5         6         7
d27 1
a27 4
     &                   IMP,NBAND,EXTEN,FILEIT)     

       INCLUDE        'CONSTG.INC'
CNO_SAVE
d29 2
a30 1
       COMMON /UNITS/LUNDUM,NIN,NOUT
d32 8
a39 1
       CHARACTER *(*) EXTEN
a40 21
       PARAMETER      (NSIZE=2000)
       CHARACTER * 81 CSFILE,LINE
       CHARACTER * 4  KLAC
       COMMON /COMMUN/DATA(3,NSIZE),CSFILE,LINE,KLAC(371)

       PARAMETER      (NHID=200)
       COMMON /IOBUF/ LD1(NHID),LD2(NHID), EX(48), KLIC(371) 

       CHARACTER * 4  LA(8),NA(8)
       CHARACTER * 1  MA(8)
       INTEGER        FPAGE,FL,FC
       REAL           X(IDIM),Y(IDIM),KKO,LLO,IREM,EY
       CHARACTER * 4  ID(IDIM),LDA,LDA2,LDB,LDB2
       CHARACTER * 7  DISP
       CHARACTER * 4  CK4,IKLAC
       CHARACTER * 1  NULL,CK1
       EQUIVALENCE    (CK4,IKLAC)
       CHARACTER *4   CDATA
       EQUIVALENCE    (CDATA,FDATA)
       LOGICAL        FILEIT

a46 34
       IF (FILEIT) THEN
C        PLOT META-FILE WANTED

c        DO NOT PRINT FILE SPECIFICS
         ICSPR  = -2

C        DO NOT ASK FOR FILE TITLE
         ITFLG  =  0

C        DON'T CHECK FOR COUNTER-CLOCKWISE CONTOURS
C        REVERS = .FALSE. (NOT DEFINED ANYWHERE)
         LABAH  = .TRUE.
         LUN    = 10

C        SET MAXIMUM NO. OF CONTOURS TO 4000 (I HOPE THIS IS ENOUGH)
         MAXCNT = 4000

C        SET RECORD LENGTH 
         IRECLN = 2048
         DISP   = 'UNKNOWN'

C        SET FILE TYPE TO -6 TO DENOTE PRESENCE OF NEW TEXT CONTOURS
         IFRMCS = -6

C        SET LINE AND TEXT PARAMETERS
         IPEN   = 0
         INTEN  = 9
         ITANGL = 0
         ITSIZE = 24
         IORN   = 0
         IFON   = 0
         ZCOO   = 0.0
       ENDIF

a202 18
         IF (FILEIT) THEN
C          GET FILE NAME FOR THIS PAGE
           CALL CNFILE(CSFILE,NLETC,
     &       'ENTER NAME FOR THIS MAP PAGE',DISP,EXTEN,LUN,IRTFLG)
           IF (IRTFLG .EQ. -1) RETURN

C          PUT FILENAME AT BOTTEM
           YPOS  = - 12.0
           XPOS  = 0.0
           CALL CSPSTX(CSFILE,NLETC,LUN,NF,0,ITEXT)

C          PUT DUMMY CHAR AT LOWER LEFT TO AVOID CLIPPING Y AXIS LABELS
           XPOS  = -14.0
           YPOS  = -14.0
           CK1   = ' '
           NCHAR = 1
           CALL CSPSTX(CK1,NCHAR,LUN,NF,1,ITEXT)
         ENDIF
a209 51
         IF (FILEIT) THEN
C          PUT IN FRAME AND X=0 Y=0 AXES

           INTEN = 9
           IF (MOD .EQ. 1) THEN
C            SINGLE CHAR. SYMBOLS
             IT = 1

C            X3 IS X COORD OF RIGHT SIDE OF FRAME
             X3 = KB - KA + 1

           ELSE
C            4 CHAR. SYMBOLS
             IT = 4
             X3 = (KB - KA + 1) * 4 + 3
           ENDIF

           NDATA     = 5
           DATA(1,1) = 2.0
           DATA(2,1) = 1.0
           DATA(1,2) = DATA(1,1)
           DATA(2,2) = NL
           DATA(1,3) = X3 + 1.0

           DATA(2,3) = NL
           DATA(1,4) = X3 + 1.0
           DATA(2,4) = 1.0
           DATA(1,5) = 2.0
           DATA(2,5) = 1.0

           LINTP     = 0
           MARK      = 0
           IPEN      = 0
           CALL CSPUSH(LUN,DATA,NDATA,NF,0,ICNTR)        
  
C          PUT IN Y=0 AXIS
           NDATA     = 2
           DATA(2,1) = NL - LLO + 1
           DATA(1,2) = X3
           DATA(2,2) = NL - LLO + 1
           CALL CSPUSH(LUN,DATA,NDATA,NF,0,ICNTR)        

C          PUT IN X=0 AXIS
           DATA(1,1) = (KKO - KA) * IT + IT + 1.0
           DATA(2,1) = 1.0
C          DATA(1,2) = DATA(1,1)
           DATA(1,2) = (KKO - KA) * IT + IT + 1.0
           DATA(2,2) = NL
           CALL CSPUSH(LUN,DATA,NDATA,NF,1,ICNTR)        
         ENDIF

a220 21
           IF (FILEIT .AND. IREM .EQ. 0) THEN

C            PUT Y AXIS LABEL ON MAP IN METAFILE EVERY FIVE LINES
             YPOS = NL - LL + 1
             XPOS = -3.0
             MARK = 0
             WRITE(LINE(1:6),8801) EY
 8801        FORMAT(F6.3)
             CALL CSPSTX(LINE(1:6),6,LUN,NF,1,ITEXT)

C            PUT IN TICK MARK ON Y AXIS
             DATA(1,1) = -.5
             DATA(2,1) =  YPOS 
             DATA(1,2) =  0.0  
             DATA(2,2) =  YPOS
             CALL CSPUSH(LUN,DATA,2,NF,1,ICNTR)
           ENDIF

C          SET Y VALUE OF DATA POSITION
           DATA(2,1) = NL - LL + 1

a231 23
             IF (FILEIT) THEN
               DO K = KA,KB
                 IKLAC = KLAC(K)
                 IF (IKLAC .EQ. LA(3)) IKLAC = LA(7)

                 CK1 = IKLAC(1:1)

                 IF (CK1 .NE. ' ' .AND. CK1 .NE. '.' .AND. 
     &               CK1 .NE. '-' .AND. CK1 .NE. ':' .AND.
     &               CK1 .NE. '+') THEN

C                  HAVE A TEXT CONTOUR SYMBOL TO PLACE ON MAP
                   DATA(1,1)  = K - KA + 1
                   DATA(1,2)  = 1
                   CDATA      = CK1 // NULL // NULL // NULL
                   DATA(2,2)  = FDATA
                   MARK       = -2

                   CALL CSPUSH(LUN,DATA,2,NF,1,ICNTR)
                 ENDIF
               ENDDO
             ENDIF

a240 22

             IF (FILEIT) THEN
               DO  K = KA,KB
                 IKLAC = KLAC(K)
                 IF (IKLAC .EQ. LA(3) .OR. IKLAC .EQ. LA(4)) IKLAC=LA(7)  
C                CK4 IS EQUIVALENCED TO IKLAC
                 IF     (CK4(1:4) .NE. '    ' .AND. CK4(1:4) .NE. '  . '
     &             .AND. CK4(1:4) .NE. '----' .AND. CK4(1:4) .NE. ':   '
     &             .AND. CK4(1:4) .NE. '   :' .AND. CK4(1:4) .NE. ' .  '
     &             .AND. CK4(1:4) .NE. ' +  ') THEN

C                  HAVE A TEXT CONTOUR ID TO PLACE ON MAP
                   DATA(1,1)  = K - KA + 1
                   DATA(1,2)  = 4
                   CDATA(1:4) = CK4
                   DATA(2,2)  = FDATA
                   MARK       = -2

                   CALL CSPUSH(LUN,DATA,2,NF,1,ICNTR)
                 ENDIF
               ENDDO
             ENDIF
a243 7
C        WRITE X AXIS LABELS
         JUST      = 1
         MARK      = 0
         YPOS      = -5.0
         DATA(2,1) = -1.0
         DATA(2,2) = -2.0

a249 15
           IF (FILEIT) THEN
C            PUT IN CONTOUR META-FILE
             DO  I = 1,6
               XPOS = (I - 1) * ((K1 * IT) / 5.0)
               WRITE(LINE,8805) EX(I)
 8805          FORMAT(F8.3)
               CALL CSPSTX(LINE,8,LUN,NF,1,ITEXT)

C              PUT IN TICK MARK ON X AXIS
               DATA(1,1) =  XPOS + 1
               DATA(1,2) =  DATA(1,1)
               CALL CSPUSH(LUN,DATA,2,NF,1,ICNTR)
             ENDDO
           ENDIF

d253 1
a253 13
           IF (FILEIT) THEN
             DO  I = KAA,KBB
               XPOS = (I - KAA + 1) * ((K1 * IT) / 4.0)
               WRITE(LINE,8805) EX(I)
               CALL CSPSTX(LINE,8,LUN,NF,1,ITEXT)

C              PUT IN TICK MARK ON AXIS
               DATA(1,1) = XPOS
               DATA(1,2) = XPOS
               CALL CSPUSH(LUN,DATA,2,NF,1,ICNTR)
             ENDDO
           ENDIF
         ENDIF
a259 11
         IF (FILEIT) THEN
C          SCALE THE META-FILE, USING ONE PASS (ISERCH = 0)

           WRITE(NOUT,*) 'SCALING CONTOUR META-FILE NOW'
           ISERCH = 0
           CALL CSSCALT(LUN,ISERCH)

C          CLOSE THE META-FILE 
           CALL CSTRAP(LUN)
           CLOSE(LUN)
         ENDIF
@


1.13
log
@changed order in common commun
@
text
@d47 2
a48 2
       CHARACTER * 4  KLAC,LA,NA
       COMMON /COMMUN/DATA(3,NSIZE),LA(8),NA(8),CSFILE,LINE,KLAC(371)
d53 1
@


1.12
log
@moved char variables out of iobuf
@
text
@d48 1
a48 1
       COMMON /COMMUN/DATA(3,NSIZE),CSFILE, LINE, KLAC(371),LA(8),NA(8)
@


1.11
log
@used iobuf to decrease local storage
@
text
@d44 1
d47 2
a48 1
       COMMON /COMMUN/DATA(3,NSIZE),CSFILE, LINE
d51 1
a51 4
       CHARACTER * 4  KLAC,LA,NA
       CHARACTER * 1  MA
       COMMON /IOBUF/ LD1(NHID),LD2(NHID), EX(48), KLIC(371), KLAC(371),
     &                LA(8),NA(8),MA(8) 
d53 1
d81 1
a81 1
C         REVERS = .FALSE. (NOT DEFINED ANYWHERE)
@


1.10
log
@*** empty log message ***
@
text
@d26 4
a29 4
C	NOTE 12/7/93			<ML
C		it seems that hismap is called always with 
C		NOR = 1 and NID = 1.
C		so change the software to reflect that.
a37 1
#ifdef SP_UNIX
d39 2
a40 3
#else
       INCLUDE        'COMMON1:CONSTG.INC'
#endif
d43 1
a43 6
       INTEGER        IDIM,ICARD,JX,JY,MOD,NLIGN,NPAGE,KK,NF
       INTEGER        LUN,FPAGE,FL,NINT,J,LL,ICNTR,
     &                N1,NBAND,IMP,KP,KLIC,KODE,K,K1,KFIN,NL,FC,I,L,
     &                IK,LD1,LD2,KFI1,KB,KBB,IPUSH,NLETC,IRTFLG,
     &                KPT,NCHAR,KA,ITEXT,IT,KAA,X3,NDATA,ISERCH,LTOT
       INTEGER        NSIZE,NHID
d45 3
d49 8
a56 12
       COMMON /COMMUN/ DATA(3,NSIZE) 
       DIMENSION      LD1(NHID),LD2(NHID), EX(48), KLIC(371), KLAC(371)
       REAL * 4       X(IDIM),Y(IDIM),DATA,XD1,YD1,XD2,YD2,
     &                CBUF,TXTCTR,CONTRL
       REAL           PEX,ZCOO,XMINT,XMAXT,YMINT,YMAXT,ESPX,S,EX,T,
     &                KKO,LLO,YPOS,XPOS,IREM,XMAX,XMIN,YMAX,YMIN,
     &                PIXPCM,SCALE
       CHARACTER * 4  LA(8),NA(8),ID(IDIM),KLAC,LDA,LDA2,LDB,LDB2
       LOGICAL        FILEIT
       REAL           EY
       CHARACTER *(*) EXTEN
       CHARACTER * 81 CSFILE,LINE
d59 1
a59 1
       CHARACTER * 1  NULL,CK1,MA(8)
d63 1
@


1.9
log
@removed unused? revers
@
text
@d197 1
a197 1
       DO 110  LL = 1,NL
d259 1
a259 1
  110  CONTINUE                                                                
d266 1
a266 1
       DO 135  KPT = 1,NPAGE  
d349 1
a349 1
         DO 130  LL = 1,NL 
d442 1
a442 1
  130    CONTINUE       
d505 1
a505 1
  135  CONTINUE                  
@


1.8
log
@fixed results file output for symbol option
@
text
@d88 1
a88 1
         REVERS = .FALSE.
@


1.7
log
@NOR & NID variables not needed
@
text
@a36 2
C       SUBROUTINE HISMAP(IDIM,ICARD,JX,JY,X,Y,ID,MOD,NLIGN,NPAGE,PEX,
C     &                   NOR,NID,IMP,NBAND,EXTEN,FILEIT)     
d243 6
a248 1
                 KLAC(KK) = ID(IK)(4:4) // '   '
@


1.6
log
@removed unused variables
@
text
@d36 3
a38 1
     &                   NOR,NID,IMP,NBAND,EXTEN,FILEIT)     
@


1.5
log
@invisable letters fixed
@
text
@d46 1
a46 1
       INTEGER        LUN,FPAGE,FL,NINT,J,LL,ICNTR,NOR,NID,
d48 1
a48 1
     &                IK,LD1,LD2,KFI1,KB,KBB,IPUSH,IPT,NLETC,IRTFLG,
a68 1
       CHARACTER *1484 CKLAC
@


1.4
log
@undefined NOUT
@
text
@d244 1
a244 1
                 KLAC(KK) = ID(IK)(1:1) // '   '
@


1.3
log
@fixed map
@
text
@d43 1
@


1.2
log
@cpp_lines_added
@
text
@d1 1
a1 1
C
d3 2
d6 2
a7 5
C     SUBROUTINE HISMAP 
C     PREPARES PLOT METAFILE 
C
C     ADAPTED FROM HPLAN.FOR  ON NOV 8 1986 BY al
C     BORDERS CHANGED TO SOLID LINES FEB 88 al
a30 1
C****************************************************************************
d33 1
a37 7
       INTEGER        NOR, NID
       INTEGER        IDIM,ICARD,JX,JY,MOD, NLIGN,NPAGE,KK,NF
       INTEGER        IMAXTX,IMAXCT,MXRCLN,LUN,FPAGE,FL,NINT,J,LL,
     $                N1,NBAND,IMP,KP,KLIC,KODE,K,K1,KFIN,NL,FC,I,L,
     $                IK,LD1,LD2,KFI1,KB,KBB,IPUSH,IPT,NLETC,IRTFLG,
     $                KPT,NCHAR,KA,ITEXT,IT,KAA,X3,NDATA,ISERCH,LTOT,
     $                ICNTR
d43 6
d55 1
a55 1
     $                CBUF,TXTCTR,CONTRL
d57 2
a58 3
     $                KKO,LLO,YPOS,XPOS,IREM,XMAX,XMIN,YMAX,YMIN,
     $                PIXPCM,SCALE
C	ID(IDIM,NID)
d61 1
a61 1
       REAL EY
d67 1
a67 1
       EQUIVALENCE    (CK1,IKLAC),(CK4,IKLAC)
d69 3
d76 1
a77 1
       NULL=CHAR(0)
d79 1
d81 1
a81 1
C        PLOT META-FILE WANTED,  DO NOT PRINT FILE SPECIFICS
d88 2
a89 4
C         HOLES = .FALSE.
         LABAH = .TRUE.

C        INITIALIZE MAP META-FILE PARAMETERS
d99 2
a100 2
C        SET FILE TYPE TO 6 TO DENOTE PRESENCE OF TEXT CONTOURS
         IFRMCS = 6
a113 6

C       N1    = ICARD
C       IF (NOR .EQ. 1)   N1 = ICARD + 1
C 12/7/93	<ML
C REPLACED BY THE NEXT LINE                   

d126 6
a131 5
C       CALL EPUR4 ( IDIM,ICARD, X,Y,ID, MOD, PEX, KP, KLIC,
C     &              KODE,NOR,NID, IMP)
C 12/7/93	<ML
       CALL EPUR4 ( IDIM,ICARD, X,Y,ID, MOD, PEX, KP, KLIC,KODE,IMP)
       IF (KODE .EQ. 1) GO TO  160                               
d139 2
a140 2
         END IF
       END DO
d142 3
a144 15
C      IF (NOR .EQ. 1) THEN
C
C     ESTABLISH LENGTH OF ID FOR EACH POINT
C         IF(NID .GT. 2) THEN
C           ID(N1,3) = LA(2)
C         ELSEIF(NID .GT. 1) THEN
C           ID(N1,2) = LA(2)
C         ELSE
C           ID(N1,1)= LA(6)
C         END IF
C         X(N1) = 0.0
C         Y(N1) = 0.0
C       END IF
C 12/7/93   <ML
C REPLACED BY THE NEXT 3 LINES
a145 4
       ID(N1)= LA(6)
       X(N1) = 0.0
       Y(N1) = 0.0

d174 2
a175 1
       DO 40  J = 1,NINT      
a176 1
C        FIND X AXIS LABELS
d178 1
a178 1
   40  CONTINUE
d183 2
a184 1
       DO 50  I = 1,N1 
a185 1
C        SCALE EACH POINT TO FIT PAGE
d193 2
a194 2
         Y(I)  = L + 0.0001                   
   50  CONTINUE
d198 1
a199 1
C        PREPARE EACH LINE,   EY IS Y AXIS LABEL
d202 1
a202 1
         DO 60  KK = 1,KFIN
d204 2
a205 2
           KLIC(KK)= 0             
           KLAC(KK)= LA(2)                                   
d207 2
a208 2
           IF (KK .EQ. KKO .OR. LL .EQ. LLO) KLAC(KK) = LA(5) 
   60    CONTINUE
d210 2
a211 2
         KLAC(1)   = LA(3)        
         KLAC(KFIN)= LA(4)      
d214 1
a214 2
         KLIC(KFIN+2)=0   
         DO 90  I = 1,N1
d216 1
d218 1
d222 2
a223 2
             IF (KLIC(K).EQ.0) THEN
               KLIC(K)= I  
d225 2
a226 11
               IK    = KLIC(K)   
               J     = J + 1
c	for pixel map, obviously, nhid=200 is not enough.    <ML
c               IF (MOD .NE. 1 .OR. J .GT. 100) THEN
               IF ((MOD .NE. 1 .OR. J .GT. 100) .AND. J .LE. NHID) THEN
                 LD1(J)= IK 
                 LD2(J)= I
               END IF
             END IF
           END IF
   90    CONTINUE                                                               
d228 8
a235 1
         DO 100  KK = 1,KFIN
d237 1
a238 11
           IK    = KLIC(KK)                                      
           IF(IK .NE. 0) THEN
             KLAC(KK) = ID(IK)
C NID = 1        <ML
C             KLAC(KK) = ID(IK,1)
C             IF(KLIC(KK+1).EQ.0 .AND. NID.GT.1) KLAC(KK+1) = ID(IK,2) 
C             IF((KK+1) .NE. KFIN) THEN
C               IF(KLIC(KK+2).EQ.0 .AND. NID.GT.2) KLAC(KK+2) = ID(IK,3)
C             END IF 
C 12/7/93	<ML
C REPLACED BY ZERO LINE                   
d240 10
a249 2
           END IF
  100    CONTINUE
d266 1
a266 1
     &      'ENTER NAME FOR THIS MAP PAGE',DISP,EXTEN,LUN,IRTFLG)
d270 2
a271 2
           YPOS = - 12.0
           XPOS = 0.0
d273 1
d275 3
a277 3
           XPOS = -14.0
           YPOS = -14.0
           CK1 = ' '
d289 1
a290 1
C          PUT IN FRAME AND X=0 Y=0 AXES
a292 1

d298 1
d300 1
d304 2
a305 1
           NDATA = 5
d311 1
a311 7
C ML+
C           DATA(2,3) = DATA(2,2)
C           DATA(1,4) = DATA(1,3)
C           DATA(2,4) = DATA(2,1)
C           DATA(1,5) = DATA(1,1)
C           DATA(2,5) = DATA(2,1)
C ML-
d316 2
a317 1
           DATA(2,5) = 1.0 
d324 1
a324 1
           NDATA = 2
a326 1
C           DATA(2,2) = DATA(2,1)
a341 1
         MARK  = 2
d349 1
d364 1
a364 2
C             DATA(2,2) =  DATA(2,1)
             DATA(2,2) = YPOS
a365 1
             MARK = 2
d367 2
d372 1
a373 1
C            SYMBOL IS ONE CHAR. LONG
d375 2
a376 2
               WRITE(IMP,1010) EY, (KLAC(K),K=KA,KB)
 1010          FORMAT (' ',F8.2,1X,123A1)                  
d378 3
a380 3
               WRITE(IMP,1030) (KLAC(K),K=KA,KB)    
 1030          FORMAT (' ',130A1)
             END IF
d383 1
a383 1
               DO 403 K = KA,KB
d385 1
a385 1
                 IF (IKLAC .EQ. LA(3)) IKLAC = LA(7) 
d387 2
a388 1
C                CK1 IS EQUIVALENCED TO IKLAC
d394 7
a400 3
                   CSYMBL(1:1) = CK1
                   DATA(1,1) = K - KA + 1
                   CALL CSPUSH(LUN,DATA,NDATA,NF,1,ICNTR)
d402 1
a402 1
  403          CONTINUE
d404 1
a405 1

d408 2
a409 2
               WRITE (IMP,1020) EY,(KLAC(K),K=KA,KB) 
 1020          FORMAT (' ',F8.2,1X,31A4)             
d411 4
a414 3
               WRITE (IMP,1040) (KLAC(K),K=KA,KB)    
 1040          FORMAT (' ',32A4)
             END IF
d416 1
a416 1
               DO 404 K = KA,KB
d418 1
a418 1
                 IF (IKLAC .EQ. LA(3) .OR. IKLAC .EQ. LA(4))IKLAC=LA(7)  
d426 7
a432 6
                   DO 405 I = 1,4
                     DATA(1,1) = (K - KA) * 4 + I
                     CSYMBL(1:1) = CK4(I:I)
                     IF (I .GT. 1 .OR. CSYMBL(1:1) .NE. ' ')
     &                 CALL CSPUSH(LUN,DATA,NDATA,NF,1,ICNTR)
  405              CONTINUE
d434 1
a434 1
  404          CONTINUE
d439 4
a442 4
C        WRITE X AXIS LABEL
         JUST = 1
         MARK = 0
         YPOS = -5.0
d447 1
a448 1
C          PAGE ONE
d453 2
a454 1
             DO 406 I = 1,6
d464 1
a464 1
  406        CONTINUE
d471 1
a471 1
             DO 401 I = KAA,KBB
d477 2
a478 3
               DATA(1,1) =  XPOS
C               DATA(1,2) =  DATA(1,1)
               DATA(1,2) =  XPOS
d480 1
a480 1
  401        CONTINUE
a483 1
         MARK = 2
d485 2
a486 4

C          NEW PAGE
           WRITE (IMP,1000)
 1000      FORMAT ('1') 
d490 1
d492 1
a492 1
C          SCALE THE META-FILE, USING ONE PASS (ISERCH = 0)
a493 2
           WRITE(6,9908)
9908       FORMAT(' SCALING NOW:')
d502 1
a502 1
C      CHECK IF THERE ARE PILED UP POINTS
d505 1
a505 1
C      GIVE DATA ON HIDDEN (PILED) POINTS
d514 1
d517 1
d519 1
a519 1
       DO 140 L = 1, LTOT
a523 11

C  NID = 1   < ML
C         LDA   = ID(IK,1)    
C         LDB   = ID(I,1)
C         IF(NID .GT. 1 ) THEN
C           LDA2 = ID(IK,2)         
C           LDB2 = ID(I,2)                
C         END IF
C 12/7/93	<ML
C REPLACED BY ABOVE TWO LINES

d528 3
a530 3
         WRITE (IMP,1090) LDA,LDA2,XD1,YD1,LDB,LDB2,XD2,YD2   
 1090    FORMAT (' ',2(' *' ,2A4,' *',2(F13.3,8X,'*'),10X)  )           
  140  CONTINUE
d532 2
a533 2
C      DRAWS LINE ACROSS PAGE
       WRITE (IMP,1080)
d537 1
a537 8
 1100  FORMAT ( / ' ',' NUMBER OF PILED POINTS   ='     ,I5, /)

       RETURN                                                                  
                                                                               
  160  WRITE (IMP,1120)
 1120  FORMAT (/,/,/,' ',10X,'MAP ABORTED'       ,/,
     &   ' ',10X,'     MORE THAN 264 POINTS ARE ON THE',                        
     &   ' FRAME OF THE MAP',/,'1')                                            
@


1.1
log
@Initial revision
@
text
@d46 3
d50 1
@
