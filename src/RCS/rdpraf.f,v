head	1.10;
access;
symbols
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.7
	prec_CA:1.7
	noindx:1.7
	Bproc:1.6
	oct21:1.5
	last77:1.4;
locks; strict;
comment	@c @;


1.10
date	2006.06.27.14.32.44;	author leith;	state dead;
branches;
next	1.9;

1.9
date	2005.10.17.20.09.10;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.18.03.41;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.20.16.59.32;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.20.15.31.06;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	99.08.09.14.15.31;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.02.05.13.38.50;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.11.15.15.49.01;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.09.49;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.01;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.10
log
@unused
@
text
@
C++*********************************************************************
C
C  RDPRAF.F  -- CREATED JULY 91 FROM RDPRAI
C               INTEGER RDPRANC  MAY 02    ARDEAN LEITH
C               
C **********************************************************************
C * AUTHOR:   ArDean Leith                                             *
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
C=*                                                                    *
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* This program is distributed in the hope that it will be useful,    *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
C=* General Public License for more details.                           *
C=*                                                                    *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
C=*                                                                    *
C **********************************************************************
C
C    RDPRAF(FLIST,NMAX,NUMBER,FLOW,HI,PROMPT,LIMITEDC,IRTFLG)
C
C    PURPOSE:  READ AN ALPHANUMERIC STRING, CHECK FOR ANY SPECIAL OPERATION,
C              RETURNS ARRAY OF REALS, THE NUMBER OF VALUES, OR A
C              FLAG  TO INDICATE THAT ONE SHOULD RETURN TO PREVIOUS QUESTION.
C              CHECKS TO SEE THAT VALUES ARE WITHIN FLOW...HI
C              SPECIFIED RANGE.
C
C              ALLOWABLE STRINGS           NUMBERS ENTERED IN ARRAY
C                 1.0,2,83.,66E1           1, 2, 8, 660
C                 1.0 2 83. 66E1           1, 2, 8, 660
C                 X11,X12....              (CONTENTS OF X11 & X12...)
C
C  PARAMETERS : FLIST     ARRAY FOR ANSWERS                      (RET.)
C               NMAX      MAX LENGTH OF ARRAY                    (SENT)
C               NUMBER    ON ENTRY IS MAX NUMBER OF ANSWERS (SENT/RET.) 
C                         TO BE RETURNED!!
C                         (<0 ON ENTRY IS FLAG TO ACCEPT NULL 
C                         RESPONSE)
C                         ON RETURN IS NUMBER OF ANSWERS ACTUALLY 
C                         RETURNED
C               FLOW      BOTTOM OF RANGE (CAN'T BE BELOW THIS)   (SENT)
C               HI        TOP OF RANGE (CAN'T BE ABOVE THIS)      (SENT)
C               PROMPT    SOLICITATION MESSAGE                    (SENT)
C               LIMITEDC  REQUIRES NMAX VALUES / CALL, SO THAT
C                           IT CAN BE USED IN BATCH DO-LOOP
C                           IF ('T') LIMITED IS TRUE.             (SENT)
C               IRTFLG    RETURN FLAG (0 IS NORMAL, -1 IS GOTO    (SENT)
C                              PREVIOUS QUESTION)
C      
C    CALLED BY:   
C
C    NOTE: CAN PERFORM REGISTER SUBSTITUTION NOW al
C
C--*********************************************************************

        SUBROUTINE RDPRAF(FLIST,NMAX,NUMBER,FLOW,HI,PROMPT,
     &             LIMITEDC,IRTFLG)        

        INCLUDE 'CMBLOCK.INC'

        DIMENSION       FLIST(NMAX)
        CHARACTER *(*)  PROMPT,LIMITEDC
        LOGICAL         LIMITED

        LIMITED = (LIMITEDC .EQ. 'T')

        CALL RDPRANC(IDUM,FLIST,NMAX,NUMBER,FLOW,HI,PROMPT,
     &               LIMITED,.FALSE.,IRTFLG)        

        RETURN
        END




@


1.9
log
@GPL License fixed
@
text
@@


1.8
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a7 1
C **************************************************************************
a8 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 6

C * COPYRIGHT (C)1991, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a68 1
C--************************************************************************
@


1.7
log
@integer return form rdpraanc parameter
@
text
@d2 1
d8 1
d12 24
d77 1
@


1.6
log
@*** empty log message ***
@
text
@d5 1
d8 8
a15 8
C *  AUTHOR:   ArDean Leith                                                *
C *  COPYRIGHT (C)1986 , WADSWORTH CENTER FOR LABORATORIES AND             *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH  			   *
C **************************************************************************
d60 1
a60 1
        LOGICAL         SKIP,LIMITED
d63 2
a64 1
        CALL RDPRANC(FLIST,NMAX,NUMBER,FLOW,HI,PROMPT,
@


1.5
log
@used rdpranc to work inside loops
@
text
@d37 1
a37 1
C               FLOW      BOTTEM OF RANGE (CAN'T BE BELOW THIS)   (SENT)
@


1.4
log
@CNO_SAVE
@
text
@d5 1
a5 1
C
d16 1
a16 1
C    RDPRAF(FLIST,NMAX,NUMBER,FLOW,HI,PROMPT,HELPFI,IRTFLG)
d21 2
a22 1
C              CHECKS TO SEE THAT VALUES ARE WITHIN SPECIFIED RANGE.
d27 1
d29 15
a43 10
C    PARAMETERS : FLIST     ARRAY FOR ANSWERS
C                 NMAX      MAX LENGTH OF ARRAY
C                 NUMBER    ON ENTRY IS MAX NUMBER OF ANSWERS TO BE RETURNED!!
C                            (<0 ON ENTRY IS FLAG TO ACCEPT NULL RESPONSE)
C                           ON RETURN IS NUMBER OF ANSWERS ACTUALLY RETURNED
C                 FLOW      BOTTEM OF RANGE (CAN'T BE BELOW THIS)
C                 HI        TOP OF RANGE (CAN'T BE ABOVE THIS)
C                 PROMPT    SOLICITATION MESSAGE
C                 HELPFI    NAME OF RELEVANT HELP FILE (OR NULL)
C                 IRTFLG    RETURN FLAG (0 IS NORMAL, -1 IS GOTO
a47 2
C    CALLS:       RDPRMC
C
d53 1
a53 1
     &             HELPFI,IRTFLG)        
a55 1
CNO_SAVE 
d58 2
a59 122
        CHARACTER *(*)  PROMPT,HELPFI
        CHARACTER * 160 ANS
	CHARACTER * 1   NULL,A
        LOGICAL         SKIP,REGSUB

        NULL = CHAR(0)

C       A NEGATIVE NUMBER INPUT IS A FLAG THAT NULL INPUT IS ACCEPTABLE
        IF (NUMBER .LT. 0) THEN
          NVAL = -NUMBER
          SKIP = .TRUE.
        ELSE
          SKIP = .FALSE.
          NVAL = NUMBER
        ENDIF

C       DODO PROOF THE INPUT
        IF (NVAL .LE. 0)    NVAL = 1
        IF (NVAL .GT. NMAX) NVAL = NMAX

C..     GET INPUT LINE
20      CALL RDPRMC(ANS,NCHAR,.TRUE.,PROMPT,HELPFI,IRTFLG)
        IF (IRTFLG .EQ. -1) RETURN
        IRTFLG = 0

        IF (ANS(NCHAR:NCHAR) .EQ. ',') THEN
C         INPUT CONTINUATION LINE
          CALL RDPRMC(ANS(NCHAR+1:),NCHAR2,.TRUE.,
     &    'ENTER NEXT LINE OF INPUT',NULL,IRTFLG)
          IF (IRTFLG .EQ. -1) GOTO 20
          NCHAR = NCHAR + NCHAR2
        ENDIF

        NUMBER = 0
        I      = 0

   50   I = I + 1
C       CHECK TO SEE IF WE HAVE RUN OUT OF INPUT CHAR.
        IF (I .GT. NCHAR) THEN
          IF (NUMBER .EQ. 0 .AND. SKIP) THEN
C           GOT NULL INPUT WHERE IT IS ALLOWED AS AN INPUT
C           RETURN A FLAG THAT NULL ANSWER ACCEPTED
            IRTFLG = 3
            RETURN

          ELSE IF (NUMBER .EQ. 0) THEN
C           DIDN'T GET ANY NUMBERS IN INPUT
            WRITE(NOUT,94)
   94       FORMAT(' ERROR: NEEDS AT LEAST ONE INPUT VALUE'/)
            GOTO 20
            
          ELSE
C           END OF INPUT
            RETURN
          ENDIF
        ENDIF

        A = ANS(I:I)
C       CONTINUE CHECKING CHAR. UNTIL WE GET A NON BLANK CHAR.
        IF (A .EQ. ' ' .OR. A .EQ. ',' .OR. 
     &      A .EQ. '(' .OR. A .EQ. ')' ) GOTO 50

C       HAVE GOT FIRST CHAR IN NUMBER WHICH IS NON BLANK
        I1 = I
        REGSUB = .FALSE.

        IF (A .EQ. 'X' .OR. A .EQ. 'x') THEN
C          WANT A REGISTER SUBSTITUTION
           REGSUB = .TRUE.
           ANS(I:I) = ' '
               
 490       I = I + 1
           IF (I .GT. NCHAR) GOTO 70
           A = ANS(I:I)

C          IF HAVE A BLANK SPACE AFTER X. CONTINUE TO READ CHAR.
           IF (A .EQ. ' ') GOTO 490
C          IF NO MORE CHAR. OR NON DIGIT CHAR. HAVE INVALID INPUT
           IF( A .LT. '0' .OR. A .GT. '9') GOTO 70

        ENDIF
     

   54   IF (A .NE. ' ' .AND. A .NE. ',') THEN
C          INPUT CHAR. IS NOT END OF A INPUT VALUE, MAY HAVE VALID DIGIT?

           I = I + 1
C          CHECK TO SEE IF WE HAVE REACHED END OF INPUT
           IF (I .GT. NCHAR) GOTO 53
           A = ANS(I:I)
           GOTO 54
        ENDIF
 

C       FIND NUMBER OF CHAR. IN NUMBER
   53   I2 = I - 1
   55   N  = I2 - I1 + 1

C       CONVERT NUMBER TO REAL FORMAT
        NUMBER = NUMBER + 1
        IF (N .LE. 0) GOTO 70

        READ(ANS(I1:I2),*,ERR=70) FNUM1

        IF (REGSUB) THEN
C          FIND REGISTER CONTENTS
           IF (FNUM1 .LT. 1 .OR. FNUM1 .GT. 100) THEN
C             IMPROPER REGISTER NUMBER  
              WRITE(NOUT,920) FNUM1
920           FORMAT(' *** IMPROPER REGISTER: ',1PG11.3)
              GOTO 20
           ENDIF
           INUM1 = FNUM1
           FNUM1 = PARAM(INUM1 + 1)
        ENDIF

        IF (FNUM1 .LT. FLOW .OR. FNUM1 .GT. HI) THEN
           WRITE(NOUT,92)NUMBER,FLOW,HI
   92      FORMAT(' ERROR: INPUT ',I4,' OUT OF RANGE (',
     &            1PG12.3,'...',1PG12.3,')',/)
           GOTO 20
        ENDIF
d61 3
a63 1
        FLIST(NUMBER) = FNUM1
d65 2
a66 2
C       GET ANY REMAINING NUMBERS FROM THE INPUT STRING
        IF (NUMBER .LT. NVAL) GOTO 50       
a67 1
        RETURN
a69 3
C       UNKNOWN ERROR SOMEWHERE IN INPUT
   70   WRITE(NOUT,*) 'SYNTAX ERROR: ',ANS(1:I)
        GOTO 20
a70 2
        END
       
@


1.3
log
@should accep () around input if inside do loop
@
text
@d4 1
a4 1
C $$ RDPRAF.FOR -- CREATED JULY 91 FROM RDPRAI
a49 1
#ifdef SP_UNIX
d51 1
a51 3
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
@


1.2
log
@cpp_lines_added
@
text
@d116 2
a117 1
        IF (A .EQ. ' ' .OR. A .EQ. ',') GOTO 50
@


1.1
log
@Initial revision
@
text
@d50 3
d54 1
@
