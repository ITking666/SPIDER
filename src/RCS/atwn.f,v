head	1.21;
access;
symbols
	healthdept_2018:1.21
	pre_getangas:1.18
	GPL2010:1.18
	pre_GPL2010:1.17
	pre_var_equation:1.17
	pre_fftwrings:1.17
	pre_opfiles:1.17
	src:1.17
	best-code:1.17
	x-named-regs:1.17
	x:1.17
	v13-00:1.17
	pre_GPL:1.15
	prec_CA:1.15
	noindx:1.14
	Bproc:1.11
	oct21:1.10
	last77:1.8;
locks; strict;
comment	@c @;


1.21
date	2018.10.03.14.33.55;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2014.07.29.16.33.59;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2014.01.12.19.48.13;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2010.06.24.13.25.06;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.17.20.31.54;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.18.22.50;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.02.20.19.39.00;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2001.03.29.16.23.56;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.03.29.16.20.15;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.19.14.34.14;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.12.03.14.41.54;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.04.28.17.57.07;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.04.28.17.32.35;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	98.10.29.19.45.21;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	98.02.03.14.58.46;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.10.01.20.17.05;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.09.30.19.44.47;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.08.15.15.22.40;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.08.15.15.06.01;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.05.06.19.17.25;	author ramani;	state Exp;
branches;
next	1.1;

1.1
date	96.04.23.15.07.09;	author mladjadj;	state Exp;
branches;
next	;


desc
@automatic particle picking
@


1.21
log
@email_health_dept
@
text
@C++*********************************************************************
C
C  ATWN.F                               
C                  OPFILEC                         FEB 03 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   ATWN(MAXMEM)
C
C--*********************************************************************

        SUBROUTINE ATWN(MAXMEM)

        INCLUDE 'CMLIMIT.INC'
        INCLUDE 'CMBLOCK.INC'
C       IN CMLIMIT::  COMMON /IMGMAX/ INUMBR(NIMAX)

        PARAMETER (MVAR=8)
        COMMON     Q(1)

        CHARACTER(LEN=MAXNAM) ::  FINPAT,FINPIC
        COMMON /FPIC/             FINPAT,FINPIC,NLETW

        COMMON /DIMSS1/ K_Q,K_P,K_D,K_3,K_4,K_5,K_6,K_7,K_8,K_9

        DATA INPIC/55/

C       OPEN SAMPLE INPUT FILE TO GET SIZING INFO
        NMAX = NIMAX
	CALL  FILSEQP(FINPAT,NLETW,INUMBR,NMAX,NIMA,
     &    'TEMPLATE FOR 2-D IMAGE NAME',IRTFLG)

C       NIMA - TOTAL NUMBER OF IMAGES
        CALL  FILGET(FINPAT,FINPIC,NLETW,INUMBR(1),INTFLG)

        MAXIM = 0
        CALL OPFILEC(0,.FALSE.,FINPIC,INPIC,'O',IFORM,NSAM1,NROW1,NSL,
     &               MAXIM,' ',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        CLOSE(INPIC)   
	NW = NROW1

        N2=NW/4
        K_Q=1
        K_P=IPALIGN64(K_Q+NSAM1*NW)
        K_D=IPALIGN64(K_P+NW*NW)
        K_3=IPALIGN64(K_D+NW*NW)
        K_4=IPALIGN64(K_3+NW)
        K_5=IPALIGN64(K_4+NW)
        K_6=IPALIGN64(K_5+N2)
        K_7=IPALIGN64(K_6+N2) 
        K_8=IPALIGN64(K_7+NW)
        K_9=IPALIGN64(K_8+NW)

        MEMREQ = IPALIGN64(K_9+MVAR)
        IF (MEMREQ .GT. MAXMEM) THEN
           CALL ERRT(6,'AT WN',NE)
           RETURN
        ENDIF

	CALL WPDP(INUMBR,Q(K_Q),Q(K_P),Q(K_9),
     &            NSAM1,NROW1,NW,N2,MVAR,NIMA)

        END
@


1.20
log
@cosmetic
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.19
log
@enter
@
text
@d41 2
a42 2
       CHARACTER(LEN=MAXNAM)   ::  FINPAT,FINPIC
        COMMON /FPIC/   FINPAT,FINPIC,NLETW
@


1.18
log
@GPL_2010
@
text
@d51 1
a51 1
     &    'ENTER TEMPLATE FOR 2-D IMAGE NAME',IRTFLG)
@


1.17
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.16
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a6 2
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      **
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
@


1.15
log
@opfilec
@
text
@d1 1
d8 1
d10 24
@


1.14
log
@typo
@
text
@d4 1
d28 1
a28 1
        CHARACTER*80    FINPAT,FINPIC
d44 1
a44 1
        CALL OPFILE(.FALSE.,FINPIC,INPIC,'O',IFORM,NSAM1,NROW1,NSL,
@


1.13
log
@ilist bug fixed
@
text
@d20 1
a20 1
        INCLUDE 'CMLIMIT .INC'
@


1.12
log
@openfb--> opfile
@
text
@d14 1
a14 1
C   ATWN
d20 1
d22 1
a23 1
        PARAMETER (NILMAX=100000)
d25 1
a25 1
        COMMON    ILIST(NILMAX),Q(1)
a30 1
        CHARACTER*1     NULL
d34 3
a36 5
C       OPEN INPUT FILE
        NULL=CHAR(0)

        NMAX=NILMAX
	CALL  FILSEQP(FINPAT,NLETW,ILIST,NMAX,NIMA,
d40 1
a40 1
        CALL  FILGET(FINPAT,FINPIC,NLETW,ILIST(1),INTFLG)
d48 1
a48 1
	NW=NROW1
d62 1
a62 1
        MEMREQ=IPALIGN64(K_9+MVAR)
d67 2
a68 1
	CALL WPDP(Q(K_Q),Q(K_P),Q(K_9),
d70 1
@


1.11
log
@cosmetic
@
text
@d24 1
a24 1
        COMMON  BUF(1024),ILIST(NILMAX),Q(1)
d27 1
a27 1
        COMMON /FPIC/ FINPAT,FINPIC,NLETW
d43 6
a48 5
        CALL  OPENFB(BUF,FINPIC,INPIC,NSAM1,NROW1,'O',NF,NSL)
        IF (NF.NE.2)  THEN
           CALL ERRT(4,'AT WN ',NE)
           RETURN
        ENDIF
@


1.10
log
@*** empty log message ***
@
text
@d1 17
d19 1
d21 1
a21 1
C
d25 2
d28 1
d30 2
a31 2
        CHARACTER*80  FINPAT,FINPIC
        CHARACTER*1 NULL
d33 1
d36 1
d39 1
a39 1
     &    'Enter template for 2-D image name',IRTFLG)
d41 1
a41 1
C       NIMA - total number of images
d44 1
a44 1
        IF(NF.NE.2)  THEN
d50 1
a50 1
C
d62 1
a62 1
C
d64 3
a66 3
        IF(MEMREQ.GT.MAXMEM)THEN
        CALL ERRT(6,'AT WN',NE)
        RETURN
d69 1
a69 1
     &  NSAM1,NROW1,NW,N2,MVAR,NIMA)
@


1.9
log
@*** empty log message ***
@
text
@d46 1
a46 1
     &  NSAM1,NROW1,NW,N2,MVAR,NIMA,NOUT)
@


1.8
log
@nmax fixed
@
text
@a11 1
CNO_SAVE
d46 1
a46 1
     &  NSAM1,NROW1,NW,N2,MVAR,NIMA)
@


1.7
log
@new version
@
text
@d4 1
a4 1
        PARAMETER (NILMAX=10000)
a11 1
        INTEGER*2 NMAX
@


1.6
log
@*** empty log message ***
@
text
@d1 2
a2 2
	SUBROUTINE ATWN(MAXMEM)
	INCLUDE 'CMBLOCK.INC'
d4 3
a6 5
	PARAMETER (MAXREG=4)
	PARAMETER (MAXKEY=2000)
	PARAMETER (NILMAX=4000)
	PARAMETER (MVAR=8)
	COMMON  BUF(1024),Q(1)
d8 5
a12 8
C
	COMMON /DIMSS1/ K_Q,K_P,K_D,K_3,K_4,K_5,K_6,K_7,K_8,K_9
	DIMENSION PK(MAXREG,MAXKEY)
C
        CHARACTER*80  FILNAM1,DOCNAM,FINPAT,FINPIC

	CHARACTER*1 NULL,ANS
	DATA LUN14/55/,LUN5/52/
d15 10
a24 8
	NULL=CHAR(0)
	NMAX=NILMAX

        CALL FILERD(FILNAM1,NLET,NULL,'UNTILTED MICROGRAPH',IRTFLG)
        IF (FILNAM1(1:1).EQ.'*') RETURN
        CALL OPENF(FILNAM1,LUN14,NSAM1,NROW1,'OLD',NF,NSLICE)
        IF (NSLICE.GT.1) THEN
           CALL ERRT(14,'WND',NE)
d27 2
a28 8

        CALL RDPRMC(ANS,NA,.TRUE.,'CREATE WINDOWS AND QUIT?',
     &  NULL,IRTFLG)
        IF (ANS .EQ. 'Y' .OR. ANS .EQ. 'Y') THEN
        MRD=1
        ELSE
        MRD=0
        ENDIF
d30 15
a44 40
	CALL RDPRMI(NW,NW,NLOOP,ILOOP,'WINDOW DIMENSIONS$')
        IF (NW.EQ.0.) RETURN
C
	CALL FILERD(DOCNAM,NLETD,NULL,'DOCUMENT WITH PEAKS',IRTFLG)
        IF (DOCNAM(1:1).EQ.'*') RETURN
         CALL FILCAN(DOCNAM,NLETD,NULL,NULL,DOCNAM,DATEXC,IER)
C
	CALL RDPRMI(IDNR,NDUM,NLOOP,ILOOP,'MULTIPLICATION FACTOR?')
   
        IKEY=1
	ISW=0
	CALL UNSDAL(DOCNAM,ISW,15,IKEY,RLIST,1,Q,MAXKEY,
     &  MAXREG,NPK,LERR)
        PRINT   *,'** NUMBER OF PEAKS IN DOC FILE ',NPK
	
C NKEY= NUMBER OF KEYS FOUND IN DOCUMENT FILE

	DO II=1,NPK
	JI=(II-1)*MAXREG+2
	PK(1,II)=Q(JI)*IDNR
	PK(2,II)=Q(JI+1)*IDNR
	PK(3,II)=Q(JI+2)	
	PK(4,II)=FLOAT(II)
	ENDDO
c 900	CONTINUE
	N2=NW/4
	K_Q=1
	K_P=IPALIGN64(K_Q+NSAM1*NW)
	K_D=IPALIGN64(K_P+NW*NW)
	K_3=IPALIGN64(K_D+NW*NW)
	K_4=IPALIGN64(K_3+NW)
	K_5=IPALIGN64(K_4+NW)
	K_6=IPALIGN64(K_5+N2)
	K_7=IPALIGN64(K_6+N2) 
	K_8=IPALIGN64(K_7+NW)
	K_9=IPALIGN64(K_8+NW)
C
	MEMREQ=IPALIGN64(K_9+MVAR)
	IF(MEMREQ.GT.MAXMEM)THEN
	CALL ERRT(6,'AT PK',NE)
d47 3
a49 7

	CALL WPDP(PK,Q(K_Q),Q(K_P),Q(K_9),
     &  NSAM1,NROW1,NW,NPK,MRD,N2,MVAR)
	CLOSE(LUN14)
	CLOSE(LUN5)
	END

@


1.5
log
@*** empty log message ***
@
text
@d56 1
a56 1
	DO 900 II=1,NPK
d62 2
a63 1
900	CONTINUE
@


1.4
log
@*** empty log message ***
@
text
@d52 1
a52 1
        TYPE *,'** NUMBER OF PEAKS IN DOC FILE ',NPK
@


1.3
log
@ipalign64
@
text
@d65 9
a73 9
	K_P=K_Q+IPALIGN64(NSAM1*NW)
	K_D=K_P+IPALIGN64(NW*NW)
	K_3=K_D+IPALIGN64(NW*NW)
	K_4=K_3+IPALIGN64(NW)
	K_5=K_4+IPALIGN64(NW)
	K_6=K_5+IPALIGN64(N2)
	K_7=K_6+IPALIGN64(N2) 
	K_8=K_7+IPALIGN64(NW)
	K_9=K_8+IPALIGN64(NW)
d77 1
a77 1
	        CALL ERRT(6,'AT PK',NE)
@


1.2
log
@vax error fixed.
@
text
@d18 1
a18 1

d65 9
a73 9
	K_P=K_Q+NSAM1*NW
	K_D=K_P+NW*NW
	K_3=K_D+NW*NW
	K_4=K_3+NW
	K_5=K_4+NW
	K_6=K_5+N2
	K_7=K_6+N2 
	K_8=K_7+NW
	K_9=K_8+NW
d75 1
a75 1
	MEMREQ=K_9+MVAR
a84 1
	RETURN
@


1.1
log
@AT WN automatic particle picking
@
text
@d14 1
a14 2
        CHARACTER*80  FILNAM1,DOCNAM,FINPAT,FINPIC,
     &  DOCNM1,DOCUM,FILD
d17 1
a17 2
	DATA LUN14/55/,LUN5/52/,INPIC/69/,INPICT/68/,LUN50/60/
     &  ,NDOC1/38/
d31 2
a32 2
        CALL RDPRMC(ANS,NA,.TRUE.,'CREATE WINDOWS AND QUIT?
     &  $',NULL,IRTFLG)
d75 6
@
