head	1.43;
access;
symbols
	healthdept_2018:1.43
	pre_getangas:1.23
	GPL2010:1.23
	pre_GPL2010:1.22
	pre_var_equation:1.21
	pre_fftwrings:1.21
	pre_opfiles:1.21
	src:1.21
	best-code:1.21
	x-named-regs:1.20
	x:1.20
	v13-00:1.20
	pre_GPL:1.18
	prec_CA:1.14
	noindx:1.14
	Bproc:1.11
	oct21:1.10
	last77:1.5;
locks; strict;
comment	@c @;


1.43
date	2018.10.03.14.34.15;	author leith;	state Exp;
branches;
next	1.42;

1.42
date	2016.04.06.15.02.46;	author leith;	state Exp;
branches;
next	1.41;

1.41
date	2016.04.05.16.21.13;	author leith;	state Exp;
branches;
next	1.40;

1.40
date	2016.02.03.16.55.29;	author leith;	state Exp;
branches;
next	1.39;

1.39
date	2014.05.15.16.21.54;	author leith;	state Exp;
branches;
next	1.38;

1.38
date	2013.10.09.14.44.07;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2012.09.25.12.40.41;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2012.09.10.18.06.44;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2012.08.30.13.32.01;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2012.03.30.12.38.24;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2012.03.09.14.18.04;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2012.03.05.19.34.06;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2012.03.05.16.14.30;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2012.02.29.17.04.36;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2012.02.28.15.31.39;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2012.02.27.19.59.19;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2012.02.24.14.13.35;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2012.02.23.15.32.43;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2011.06.13.14.37.37;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2011.06.03.18.15.07;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2010.06.24.13.26.46;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2009.11.04.14.32.44;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2006.02.22.15.49.41;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2005.10.17.20.33.11;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.17.18.23.56;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2005.08.17.13.58.43;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.01.13.17.35.53;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.01.12.16.32.27;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2004.11.19.22.22.32;	author cyang;	state Exp;
branches;
next	1.14;

1.14
date	2002.03.29.13.40.05;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.13.18.23.49;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2001.12.13.16.59.12;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.02.03.15.33.30;	author bimal;	state Exp;
branches;
next	1.10;

1.10
date	99.10.19.13.28.11;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.04.13.21.54.58;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	99.04.13.21.47.03;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	99.04.09.21.33.49;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	99.04.09.17.32.18;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	98.02.12.17.27.43;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	98.02.12.17.22.54;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.10.29.18.04.05;	author hedget;	state Exp;
branches;
next	1.2;

1.2
date	97.10.14.21.19.31;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.01.05.16.19.07;	author ramani;	state Exp;
branches;
next	;


desc
@second part of rfactsdo
@


1.43
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      
C RFACTSD2                                                             
C                  REGISTER OUTPUT ADDED         JAN 2005 ARDEAN LEITH   
C                  VERBOSE                       FEB 2006 ARDEAN LEITH  
C                  DOC FILE HEADER               NOV 2009 ARDEAN LEITH  
C                  DOC FILE HEADER               JUN 2011 ARDEAN LEITH  
C                  MINIMUM WARNING               JUN 2011 ARDEAN LEITH  
C                  FSC                           FEB 2012 ARDEAN LEITH 
C                  FSCCUT                        SEP 2012 ARDEAN LEITH
C                  WANTSQRTS                     MAY 2014 ARDEAN LEITH
C                  REPORTS MIN FSC NOT LAST      MAY 2014 ARDEAN LEITH
C                  RESOLUTION FOR GPL            APR 2016 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2016  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C RFACTSD2(PR,AMP,CSUM1,LR,CSUM,CSUM2,AVSUM, 
C          NSCALE,INC,WI,FACT,NOUT,TWOD,FSCOP,WANTSQRTS)
C
C PURPOSE: PUTS FRC/FSC STATISTICS IN DOC FILE
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE RFACTSD2(PR,AMP,CSUM1,LR,CSUM,CSUM2,AVSUM,
     &                       NSCALE,INC,WI,FACT,TWOD,
     &                       LUNDOC,FSCOP,FMAXSPFREQ,LUNGP,FSCCUT,
     &                       WANTSQRTS)


         INCLUDE 'CMLIMIT.INC' 
         INCLUDE 'CMBLOCK.INC'
 
         REAL     :: PR(NSCALE,INC),AMP(NSCALE,INC),CSUM1(INC)
         INTEGER  :: LR(INC)
         REAL     :: CSUM(INC),CSUM2(INC),AVSUM(NSCALE,INC)
         REAL     :: RVAL(INC),FSCVAL(INC)
         INTEGER  :: NSCALE,INC
         REAL     :: WI,FACT
         LOGICAL  :: TWOD
         INTEGER  :: LUNDOC
         LOGICAL  :: FSCOP
         REAL     :: FMAXSPFREQ,PIXSIZ
         INTEGER  :: LUNGP,ILOCMIN
         REAL     :: FSCCUT,FSCMIN
         LOGICAL  :: WANTSQRTS

         CHARACTER (LEN=MAXNAM)   :: DOCNAM,GPLOTFILE,PROMPT
         CHARACTER (LEN=2*MAXNAM) :: MSG

         INTEGER  :: ICOMM,MYPID,MPIERR
         LOGICAL  :: IFOUNDIT,NEWFILE

         LOGICAL  :: WANTGPLOT = .FALSE.

         INTEGER, PARAMETER :: NLIST = 6
         REAL     :: DLIST(NLIST)

         CALL SET_MPI(ICOMM,MYPID,MPIERR)

         CALL REG_GET_USED(NSEL_USED)

         XPREV  = 0
         DLIST  = HUGE(FSCLAST)

         WIP    = 1.0 / WI  ! TO PIXELS
         PIXLEN = 0.5 / FMAXSPFREQ

         IF (TWOD) THEN
C           FRC: WRITE FRC RESULT FILE OUTPUT

            CALL OPENDOC(DOCNAM,.TRUE.,NLET,LUNDOC,NICDOC,.TRUE.,
     &                   'FRC OUTPUT DOCUMENT',.FALSE.,.FALSE.,.TRUE.,
     &                   NEWFILE,IRTFLG)
            IF (IRTFLG .NE. 0) RETURN

            IF (FSCOP) THEN
C              OPEN FORMATTED, SEQUENTIAL FILE FOR GNUPLOT COMMANDS
               CALL OPAUXFILE(.TRUE.,GPLOTFILE,DATEXC,LUNGP,0,'N',
     &                          'GNUPLOT',.TRUE.,IRTFLG)
               NLET      = lnblnkn(GPLOTFILE)
          !write(6,*) 'gplot:',nlet,irtflg,gplotfile

               WANTGPLOT =  (NLET > 0) .AND. (IRTFLG == 0)  
               IF (IRTFLG > 0) RETURN
               MSG = '       NORM-FREQ      ANGST         FRC' 
               NMSG = 44


            ELSE
               MSG = '       NORM-FREQ      DPH           FRC'//
     &               '          FRCCRIT        PIXELS'    
C                             10        20        30        40
C                     1234567890123456789012345678901234567890 
               NMSG = 72  
   
            ENDIF

            IF (VERBOSE .AND. MYPID <= 0) THEN
               WRITE(NOUT,*)' '
               IF (FSCOP) THEN
                  WRITE(NOUT,90) WIP
90                FORMAT('  FRC,   RING WIDTH (PIXELS):',G10.3)
                  WRITE(NOUT,*) ' '

                  WRITE(NOUT,91)
91                FORMAT(10X,'|NORM-FREQ|     |ANGST|         |FSC|') 
               ELSE

                  WRITE(NOUT,92) WI
92                FORMAT('  PHASE RESIDUE & FRC, ',
     &                   '  RING WIDTH (RECIPROCAL UNITS):',G10.3)
                  WRITE(NOUT,*) ' '
                  WRITE(NOUT,93)
93                FORMAT(10X,'|NORM-FREQ|      |DPH|          |FRC|',
     &                       '     |FRCCRIT|     |PIXELS|')
               ENDIF
            ENDIF
         ELSE
C           FSC: WRITE RESULT FILE

            CALL OPENDOC(DOCNAM,.TRUE.,NLET,LUNDOC,NICDOC,.TRUE.,
     &                'FSC OUTPUT DOCUMENT',.FALSE.,.FALSE.,.TRUE.,
     &                NEWFILE,IRTFLG)
            IF (IRTFLG .NE. 0) RETURN

            IF (FSCOP) THEN
C              OPEN FORMATTED, SEQUENTIAL FILE FOR GNUPLOT COMMANDS
               CALL OPAUXFILE(.TRUE.,GPLOTFILE,DATEXC,LUNGP,0,'N',
     &                          'GNUPLOT',.TRUE.,IRTFLG)
               NLET      = lnblnkn(GPLOTFILE)
               WANTGPLOT =  (NLET > 0) .AND. (IRTFLG == 0)  
               IF (IRTFLG > 0) RETURN
C                     12345678901234567890123456789012345678901234567890  
               MSG = '       NORM-FREQ      ANGST         FSC' 
               NMSG = 44  

               IF (WANTSQRTS) THEN
                  MSG = '       NORM-FREQ      ANGST         FSC'//
     &                  '      |SQRT(FSC)| |SQRT(2FSC/(FSC+1))|'    
C                                10        20        30        40
C                        1234567890123456789012345678901234567890 
                  NMSG = 79
               ENDIF

            ELSE
               MSG = '       NORM-FREQ      DPH           FSC' //
     &               '          FSCCRIT        VOXELS'    
C                            10        20        30        40
C                    1234567890123456789012345678901234567890 
               NMSG = 72  
            ENDIF

            IF (VERBOSE .AND. MYPID <= 0) THEN
               WRITE(NOUT,*)' '
               IF (FSCOP) THEN
                  WRITE(NOUT,94) WIP
94                FORMAT('  FSC,  SHELL WIDTH (VOXELS):',G10.3)
                  WRITE(NOUT,*) ' '
                  WRITE(NOUT,95)
95                FORMAT(10X,'|NORM-FREQ|     |ANGST|         |FSC|')      
               ELSE
                  WRITE(NOUT,96) WI
96                FORMAT('  PHASE RESIDUE & FSC,',
     &                   '   SHELL WIDTH (RECIPROCAL UNITS):',G10.3)
                  WRITE(NOUT,*) ' '
                  WRITE(NOUT,97)
97                FORMAT(10X,'|NORM-FREQ|      |DPH|          |FSC|',
     &                       '     |FSCCRIT|     |VOXELS|')
                ENDIF
            ENDIF
         ENDIF

         CALL LUNDOCPUTCOM(LUNDOC,MSG(:NMSG),IRTFLG)

         DO  L=1,INC
            NVOX = LR(L)

            IF (NVOX .NE. 0) THEN
               DLIST(1) = L         ! NUMBER

               FSCMIN   = HUGE(FSCMIN)      ! MIN OF FSC CURVE
               SPFLAST  = DLIST(2)  ! WAS HUGE
               DLIST(2) = FLOAT(L-1) / FLOAT(INC-1)*0.5  ! NORM FREQ

               IF (FSCOP) THEN
                  DLIST(3) = 0.5 / (FMAXSPFREQ * DLIST(2)) ! RESOL
                  RVAL(L)  = DLIST(3) 
               ENDIF
               DLIST(5) = MIN(1.0, FACT/SQRT(FLOAT(NVOX))) ! FSCCRIT
               DLIST(6) = NVOX                           ! # VOXELS

               RFMIN    = -HUGE(RFMIN)
               NSCM     = 1
               IFOUNDIT = .FALSE.

               DO NSC=1,NSCALE
		 IF (AMP(NSC,L) > TINY(RFMIN))  THEN
                    RFM = AVSUM(NSC,L) / AMAX1(1.0,AMP(NSC,L))
                    IF (RFM  <  RFMIN) THEN
                       NSCM     = NSC
                       RFMIN    = RFM
                       IFOUNDIT = .TRUE.
                    ENDIF
		 ENDIF
               ENDDO

C              NSCM IS THE NUMBER OF THE ELEMENT IN EACH ARRAY WITH THE
C              CORRECT SCALING. SCALE IS THE CORRECT SCALING.

               BK1 = AMP(NSCM,L)
               BK2 = PR(NSCM,L)
               IF (BK1 > TINY(BK3)) THEN
		  IF (.NOT. FSCOP) DLIST(3) = SQRT(BK2/BK1)
               ELSE
		  IF (.NOT. FSCOP) DLIST(3) = 0.0
               ENDIF
               BK3     = CSUM2(L)
               BK4     = CSUM1(L)

               FSCLAST = DLIST(4)  ! PREVIOUS FSC (STARTS AS HUGE)

               IF (BK3 > TINY(BK3) .AND. 
     &             BK4 > TINY(BK3)) THEN
		  DLIST(4) = CSUM(L) / SQRT(BK4 * BK3)   ! FSC
               ELSE
		  DLIST(4) = 0.0
               ENDIF
               IF (FSCOP) THEN
                  FSCVAL(L)  = DLIST(4) 
               ENDIF

               IF (WANTSQRTS) THEN
C                 WRITE FSC FILTER REGISTER COLUMNS
                  FSCZ   = MAX(DLIST(4), 0.0)
                  IF (FSCZ == 0.0) THEN
                     DLIST(5) = 0.0
		     DLIST(6) = 0.0
                  ELSE
		     DLIST(5) = SQRT(FSCZ)
		     DLIST(6) = SQRT( 2*FSCZ/ (FSCZ+1) )
                  ENDIF
               ENDIF


C              WRITE TO DOC FILE
               NLEN = 5
               IF (FSCOP) NLEN = 3
               IF (FSCOP .AND. WANTSQRTS) NLEN = 5
               CALL LUNDOCWRTDAT(LUNDOC,L,DLIST(2),NLEN,IRTFLG)

               IF (VERBOSE .AND. MYPID <= 0) THEN
                  IF (FSCOP) THEN
                     WRITE(NOUT,98) L,(DLIST(K),K=2,4)
                  ELSEIF (IFOUNDIT) THEN
                     WRITE(NOUT,98) L,(DLIST(K),K=2,5),NVOX
98                   FORMAT (1X,I4,4(2X,F12.5),4X,I6)
                  ELSE
                     WRITE(NOUT,99) L,(DLIST(K),K=2,5),NVOX
99                   FORMAT (1X,I4,4(2X,F12.5),4X,I6,'  LACKS MINIMUM!')
                  ENDIF
               ENDIF

               IF (DLIST(4) < FSCMIN) THEN
C                 MIN VALUE ON FSC CURVE
                  FSCMIN = DLIST(4)
                  ILOCMIN = L
               ENDIF

               IF (L  >=  3 .AND. 
     &            FSCLAST  >= FSCCUT .AND.
     &            DLIST(4) <  FSCCUT) THEN

C                 CROSSED FSCCUT GOING DOWN
                  XPREV   = L - 1     ! LAST INDEX ABOVE CUTOFF

                  FSCPREV = FSCLAST
                  FSCNOW  = DLIST(4)

                  SPFPREV = SPFLAST
                  SPFNOW  = DLIST(2)
               ENDIF
            ENDIF
         ENDDO

         IF (VERBOSE .AND. MYPID <= 0) WRITE(NOUT,*) ' '

         IF (FSCOP .OR. NSEL_USED > 0) THEN
C           RESOLUTION NEEDED
            IF (XPREV > 0) THEN
               FINTERP   = (FSCCUT - FSCPREV) / (FSCNOW - FSCPREV)  

               XINTERP   = XPREV   + FINTERP * (1)
               SPFINTERP = SPFPREV + FINTERP * (SPFNOW - SPFPREV)          
            ELSE
               XINTERP   = ILOCMIN
               SPFINTERP = FSCMIN    ! NOT INTERPOLATED?
            ENDIF

            RESOL = 0.0
            IF (FSCOP) THEN
               RESOL = 0.5 / (FMAXSPFREQ * SPFINTERP )
               !write(6,*) 'resol:',RESOL,FMAXSPFREQ,SPFINTERP,xinterp 
            ENDIF
         ENDIF

         IF (NSEL_USED > 0) THEN
C           OUTPUT TO SPIDER'S REGISTERS NEEDED
            CALL REG_SET_NSEL(1,3,XINTERP,SPFINTERP,RESOL,
     &                            0.0,0.0,IRTFLG)
         ENDIF

         IF (WANTGPLOT) THEN
C           WRITE GNUPLOT FILE OUTPUT

            WRITE(LUNGP,'(A)') 'set xlabel "Angstroms"' 
            WRITE(LUNGP,191)   'set title " At FSC: 0.5  Resolution:', 
     &                          RESOL,' Angstroms"'
191         FORMAT(A, F7.2, A)
            WRITE(LUNGP,'(A)') 'set yrange [0:1.0]' 
            NPIXLEND2 = NINT(INC * 0.5)

            WRITE(LUNGP,192) 'set xrange [0:',NPIXLEND2,'] reverse' 
192         FORMAT(A, I6, A)

            !WRITE(LUNGP,'(A)''SET TERM POSTSCRIPT'
            !WRITE(LUNGP,'(A)''save "outfile"'

             WRITE(LUNGP,'(A)') 'plot 0.5 ,  "-" using 2:3 with line'

            DO  L=1,INC
               IF (LR(L) .NE. 0) THEN
                  WRITE(LUNGP,195) ,L,RVAL(L),FSCVAL(L)
195               FORMAT(' ',I5,'  ',F7.2,' ',F10.3)
               ENDIF
           ENDDO

         ENDIF

         END
         !write(6,*) 'float(l-1):',FLOAT(L-1)
         !write(6,*) 'float(inc-1):',FLOAT(inc-1)
         !write(6,*) 'normfreq:',normfreq
@


1.42
log
@nsel now not needed for gpl plot
@
text
@d22 1
a22 1
C=* Email: spider@@wadsworth.org                                        *
@


1.41
log
@cosmetic
@
text
@d14 1
d83 4
a86 5
         IF (NSEL_USED > 0) THEN
C           OUTPUT TO SPIDER'S REGISTERS NEEDED LATER
            XPREV  = 0
            DLIST  = HUGE(FSCLAST)
         ENDIF
d291 3
a293 5
               IF (NSEL_USED > 0) THEN
C                 OUTPUT TO SPIDER'S REGISTERS NEEDED LATER
                  IF (L  >=  3 .AND. 
     &                FSCLAST  >= FSCCUT .AND.
     &                DLIST(4) <  FSCCUT) THEN
d295 2
a296 2
C                     CROSSED FSCCUT GOING DOWN
                      XPREV   = L - 1     ! LAST INDEX ABOVE CUTOFF
d298 2
a299 2
                      FSCPREV = FSCLAST
                      FSCNOW  = DLIST(4)
d301 2
a302 3
                      SPFPREV = SPFLAST
                      SPFNOW  = DLIST(2)
                  ENDIF
@


1.40
log
@reports min fsc location not final if does not go below cutoff
@
text
@d45 1
a45 1
         SUBROUTINE RFACTSD2(PR,AMP,CSUM1,LR,CSUM,CSUM2,AVSUM,
d82 1
a82 1
         IF (NSEL_USED .GT. 0) THEN
@


1.39
log
@wantsqrts
@
text
@d13 1
d19 1
a19 1
C=* Copyright 1985-2014  Health Research Inc.,                         *
d64 2
a65 2
         INTEGER  :: LUNGP
         REAL     :: FSCCUT
d203 1
d206 1
d211 1
a211 1
               DLIST(5) = AMIN1(1.0, FACT/SQRT(FLOAT(NVOX))) ! FSCCRIT
d285 6
a292 1

d320 2
a321 2
               XINTERP   = INC
               SPFINTERP = DLIST(4)    ! NOT INTERPOLATED?
@


1.38
log
@gnuplot file --> gnuplot in prompt as it adds file
@
text
@d12 1
d18 1
a18 1
C=* Copyright 1985-2012  Health Research Inc.,                         *
d37 1
a37 1
C          NSCALE,INC,WI,FACT,NOUT,TWOD,FSCOP)
d46 2
a47 1
     &                       LUNDOC,FSCOP,FMAXSPFREQ,LUNGP,FSCCUT)
a52 1

d64 2
d108 2
d125 1
d127 1
a127 1
91                FORMAT(10X,'|NORM-FREQ|     |ANGST|         |FSC|')      
d129 1
d140 1
a140 1
C           FSC: WRITE RESULT RESULT FILE
d157 9
d251 13
d267 1
@


1.37
log
@fsc cutoff
@
text
@d143 1
a143 1
     &                          'GNUPLOT FILE',.TRUE.,IRTFLG)
@


1.36
log
@wantgplot logic bug
@
text
@d5 7
a11 6
C                      REGISTER OUTPUT ADDED    JAN 2005 ARDEAN LEITH   
C                      VERBOSE                  FEB 2006 ARDEAN LEITH  
C                      DOC FILE HEADER          NOV 2009 ARDEAN LEITH  
C                      DOC FILE HEADER          JUN 2011 ARDEAN LEITH  
C                      MINIMUM WARNING          JUN 2011 ARDEAN LEITH  
C                      FSC                      FEB 2012 ARDEAN LEITH 
d45 1
a45 1
     &                       LUNDOC,FSCOP,FMAXSPFREQ,LUNGP)
a80 1
            FSCCUT = 0.5       ! FSC CUTOFF (J.f.'s)
@


1.35
log
@GNUPLOT FILE FILE
@
text
@d145 1
a145 1
               WANTGPLOT =  (IRTFLG == -1 .OR. NLET > 0)
@


1.34
log
@3 output reg always
@
text
@d97 1
a97 1
     &                          'GNUPLOT FILE',.TRUE.,IRTFLG)
@


1.33
log
@needed * trap for gplot file name
@
text
@d295 2
a296 7
            IF (FSCOP) THEN
               CALL REG_SET_NSEL(1,2,XINTERP, RESOL,
     &                               0.0,0.0,0.0,IRTFLG)
            ELSE
               CALL REG_SET_NSEL(1,3,XINTERP,SPFINTERP,RESOL,
     &                               0.0,0.0,IRTFLG)
            ENDIF
a297 1

@


1.32
log
@output format only
@
text
@d99 3
a101 1
               WANTGPLOT =  (NLET > 0)
@


1.31
log
@fixed gplot
@
text
@d116 1
a116 2
90                FORMAT('  FRC, ',
     &                   '  RING WIDTH (PIXELS):',G10.3)
d160 1
a160 2
94                FORMAT('  FOURIER SHELL CORRELATION, ',
     &                   '  SHELL WIDTH (VOXELS):',G10.3)
@


1.30
log
@FMAXSPFREQ bug, gplot
@
text
@d54 1
d83 2
a84 1
         WIP = 1.0 / WI  ! TO PIXELS
d168 1
a168 1
96                FORMAT('  PHASE RESIDUE & FOURIER SHELL CORRELATION,',
d189 2
a190 1
                  DLIST(3) = 0.5 / FMAXSPFREQ * DLIST(2)       ! RESOL
d231 3
d308 1
a308 1
            WRITE(LUNGP,'(A)') 'set xlabel " Reciprocal Angstroms"' 
d312 5
d318 4
a321 1
            WRITE(LUNGP,'(A)') 'plot "-" using 1:2 with line '
d325 2
a326 12
                  FNORMFREQ = FLOAT(L-1) / FLOAT(INC-1)*0.5  ! NORM FREQ
                  RESLINE   = 0.5 / FMAXSPFREQ * FNORMFREQ   ! RESOL
                  BK3       = CSUM2(L)
                  BK4       = CSUM1(L)
		  FSC       = 0.0
                  IRING     = L -1
                  IF (BK3 > TINY(BK3) .AND. BK4 > TINY(BK3)) THEN
		     FSC = CSUM(L) / SQRT(BK4 * BK3)        ! FSC
                  ENDIF

                  WRITE(LUNGP,192) ,FNORMFREQ,FSC
192               FORMAT(' ',F7.5,' ',F10.3)
@


1.29
log
@gp plot wrong
@
text
@d44 2
a45 1
     &                       LUNDOC,FSCOP,PIXSIZ,LUNGP)
d59 1
a59 1
         REAL     :: PIXSIZ
d187 1
a187 1
                  DLIST(3) = PIXSIZ / DLIST(2)       ! RESOL
a279 1
            NVAL  = 2
d282 2
a283 2
               NVAL  = 3
               RESOL = 0.5 / (PIXSIZ * SPFINTERP )
d289 5
a293 1
            CALL REG_SET_NSEL(1,NVAL,XINTERP,SPFINTERP, RESOL,
d295 1
d303 1
a303 1
            WRITE(LUNGP,191)   'set title "FSC: 0.5  Resolution:', 
d312 1
a312 1
                  RESLINE   = PIXSIZ / FNORMFREQ             ! RESOL
d317 1
a317 2
                  IF (BK3 > TINY(BK3) .AND. 
     &                BK4 > TINY(BK3)) THEN
a331 1
         !write(6,*) PIXSIZ
@


1.28
log
@pixelsize, wip
@
text
@d297 4
a300 4
            WRITE(LUNGP,'(A)') 'set xlabel "Angstroms"' 
            WRITE(LUNGP,191) 'set title "FSC: 0.5  Resolution: ', 
     &                        RESOL,' Angstroms"'
191         FORMAT(A, G5.2, A)
d302 1
a302 1
            WRITE(LUNGP,'(A)') 'plot "-" using 1:2 with lines, '
d307 1
a307 1
                  RESLINE   = PIXSIZ / FNORMFREQ          ! RESOL
d311 1
a311 5
         !write(6,*) 'float(l-1):',FLOAT(L-1)
         !write(6,*) 'float(inc-1):',FLOAT(inc-1)
         !write(6,*) 'normfreq:',normfreq
         !write(6,*) PIXSIZ

d317 2
a318 2
                  WRITE(LUNGP,192) RESLINE,FSC
192               FORMAT(' ',F10.3,' ',F10.3)
d325 4
@


1.27
log
@msg not always defined
@
text
@d44 1
a44 1
     &                       LUNDOC,FSCOP,FMAXSPFREQ,LUNGP)
d58 1
a58 1
         REAL     :: FMAXSPFREQ
d81 1
d112 1
a112 1
                  WRITE(NOUT,90) WI
d157 1
a157 1
                  WRITE(NOUT,94) WI
d186 1
a186 1
                  DLIST(3) = FMAXSPFREQ / DLIST(2)       ! RESOL
d283 1
a283 1
               RESOL = 0.5 / (FMAXSPFREQ * SPFINTERP )
d307 1
a307 1
                  RESLINE   = FMAXSPFREQ / FNORMFREQ          ! RESOL
d314 1
a314 1
         !write(6,*) fmaxspfreq
@


1.26
log
@rewrite
@
text
@d61 2
a62 1
         CHARACTER (LEN=MAXNAM) :: COMMEN,DOCNAM,GPLOTFILE,PROMPT
d97 9
d112 1
a112 1
90                FORMAT('  FOURIER RING CORRELATION, ',
d119 1
a119 1
92                FORMAT('  PHASE RESIDUE & FOURIER RING CORRELATION, ',
a126 3
C                   12345678901234567890123456789012345678901234567890  
            COMMEN ='       NORM-FREQ      DPH           FRC'//
     &              '          FRCCRIT        PIXELS'    
d142 9
a161 2
C                      12345678901234567890123456789012345678901234567890  
                  COMMEN ='       NORM-FREQ      ANGST         FSC'    
a169 5
C                           10        20        30        40        50
                  COMMEN =
     &             '       NORM-FREQ      DPH           FSC          '//
     &             'FSCCRIT        VOXELS'    
C                   12345678901234567890123456789012345678901234567890 
d174 1
a174 2
   
         CALL LUNDOCPUTCOM(LUNDOC,COMMEN,IRTFLG)
@


1.25
log
@LACKS MIN not MAX
@
text
@d3 9
a11 7
C                                                                      *
C RFACTSD2                                                             *
C                      REGISTER OUTPUT ADDED    JAN 2005 ARDEAN LEITH  *
C                      VERBOSE                  FEB 2006 ARDEAN LEITH                                                            *
C                      DOC FILE HEADER          NOV 2009 ARDEAN LEITH                                                            *
C                      DOC FILE HEADER          JUN 2011 ARDEAN LEITH                                                            *
C                      MINIMUM WARNING          JUN 2011 ARDEAN LEITH                                                            *
d16 1
a16 1
C=* Copyright 1985-2011  Health Research Inc.,                         *
d35 1
a35 1
C          NSCALE,INC,WI,FACT,NOUT,TWOD)
d43 2
a44 1
     &                        NSCALE,INC,WI,FACT,NOUT,TWOD)
d47 2
a48 1
         CHARACTER (LEN=MAXNAM) :: DOCNAM,COMMEN
d50 1
a50 4
         PARAMETER  (NLIST=6)
         DIMENSION  DLIST(NLIST)
         DIMENSION  PR(NSCALE,INC),AMP(NSCALE,INC),CSUM1(INC),
     &              CSUM(INC),CSUM2(INC),AVSUM(NSCALE,INC)
d52 3
d56 6
d63 2
a64 1
         LOGICAL  :: IFOUNDIT
d66 1
a66 3
C        VERBOSE    USER SET CONTROL VARIABLE FOR PRINTING OF INFO
         LOGICAL  :: SILENT,VERBOSE,DELAY_FREE,USE_SPIRE
         COMMON   /IPRTT/IDUM245,NTRACE,NALPH,VERBOSE,USE_SPIRE,SILENT
d68 2
a69 1
         DATA  NDOC/88/
d81 44
a124 2
         CALL OPENDOC(DOCNAM,.TRUE.,NLET,NDOC,NICDOC,.TRUE.,
     &                'FSC DOCUMENT',.FALSE.,.FALSE.,.TRUE.,
d126 1
a126 1
         IF (IRTFLG .NE. 0) RETURN
d128 8
a135 5
         IF (TWOD) THEN
C                           10        20        30        40        50
C                   12345678901234567890123456789012345678901234567890  
           COMMEN ='       NORM-FREQ      DPH           FRC          '//
     &             'FRCCRIT        PIXELS'    
d137 19
a155 1
         ELSE
d157 2
a158 2
C                   12345678901234567890123456789012345678901234567890  
           COMMEN ='       NORM-FREQ      DPH           FSC          '//
d160 3
a162 1
C                   12345678901234567890123456789012345678901234567890  
d164 3
a166 2
  
         CALL LUNDOCPUTCOM(NDOC,COMMEN,IRTFLG)
d169 12
a180 8
            JDUM = LR(L)
            IF (JDUM .NE. 0) THEN
               DLIST(1) = L

               SPFLAST  = DLIST(2)
               DLIST(2) = FLOAT(L-1)/FLOAT(INC-1)*0.5
               DLIST(5) = AMIN1(1.0,FACT/SQRT(FLOAT(JDUM)))
               DLIST(6) = JDUM
d185 3
a187 2
               DO  NSC=1,NSCALE
		 IF (AMP(NSC,L).GT.TINY(RFMIN))  THEN
d189 1
a189 1
                    IF (RFM .LT. RFMIN) THEN
a196 1

d202 2
a203 2
               IF (BK1 .GT. TINY(BK3)) THEN
		  DLIST(3) = SQRT(BK2/BK1)
d205 1
a205 1
		  DLIST(3) = 0.0
d210 1
a210 1
               FSCLAST = DLIST(4)
d212 3
a214 2
               IF (BK3.GT.TINY(BK3) .AND. BK4.GT.TINY(BK3)) THEN
		  DLIST(4) = CSUM(L) / SQRT(BK4*BK3)
d219 15
a233 8
               CALL LUNDOCWRTDAT(NDOC,L,DLIST(2),5,IRTFLG)

               IF (VERBOSE .AND. IFOUNDIT .AND. MYPID .LE. 0) THEN
                  WRITE(NOUT,6100) L,(DLIST(K),K=2,5),JDUM
6100              FORMAT (1X,I4,4(2X,F12.5),4X,I6)
               ELSEIF (VERBOSE .AND. MYPID .LE. 0) THEN
                  WRITE(NOUT,6101) L,(DLIST(K),K=2,5),JDUM
6101              FORMAT (1X,I4,4(2X,F12.5),4X,I6,'  LACKS MINIMUM!')
d236 1
a236 1
               IF (NSEL_USED .GT. 0) THEN
d239 3
a241 3
                  IF (L .GE. 3 .AND. 
     &                FSCLAST  .GE. FSCCUT .AND.
     &                DLIST(4) .LT. FSCCUT) THEN
d256 1
a256 1
         CLOSE(NDOC)
d258 3
a260 3
         IF (NSEL_USED .GT. 0) THEN
C           OUTPUT TO SPIDER'S REGISTERS NEEDED
            IF (XPREV .GT. 0) THEN
d267 8
a274 1
               SPFINTERP = DLIST(4)
d276 40
a316 1
            CALL REG_SET_NSEL(1,2,XINTERP,SPFINTERP, 0.0,0.0,0.0,IRTFLG)
@


1.24
log
@ formatting of output
@
text
@d9 1
d145 1
a145 1
6101              FORMAT (1X,I4,4(2X,F12.5),4X,I6,'  LACKS MAXIMUM!')
@


1.23
log
@GPL_2010
@
text
@d8 1
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d31 2
a32 1
C RFACTSD2(PR,AMP,CSUM1,LR,CSUM,CSUM2,AVSUM, NSCALE,INC,WI,FACT,NOUT)
d34 1
a34 1
C PURPOSE: PUTS FSC STATISTICS IN DOC FILE
d40 1
a40 1
     &                        NSCALE,INC,WI,FACT,NOUT)
d49 3
a51 1
         INTEGER    LR(INC)
d75 14
a88 4
C                         10        20        30        40        50
C                 12345678901234567890123456789012345678901234567890  
         COMMEN ='       NORM-FREQ      DPH        FSC        FSCCRIT'//
     &             '      VOXELS'      
d144 1
a144 1
6101              FORMAT (1X,I4,4(2X,F12.5),4X,I6,'  LACKS MINIMUM!')
@


1.22
log
@DOC FILE OPENING, DOC FILE HEADER
@
text
@d9 4
a12 3
C=* This file is part of:                                              * 
C=* SPIDER - Modular Image Processing System.   Author: J. FRANK       *
C=* Copyright 1985-2009  Health Research Inc.,                         *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
@


1.21
log
@verbose
@
text
@d7 1
d9 5
a13 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d15 1
a15 6
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
d32 1
a32 1
C IMAGE_PROCESSING_ROUTINE
d40 3
d56 1
a56 2
#ifdef USE_MPI
        INCLUDE 'mpif.h'
a57 7
        ICOMM  = MPI_COMM_WORLD
        MPIERR = 0
        CALL MPI_COMM_RANK(ICOMM, MYPID, MPIERR)
#else
        MYPID = -1
#endif

d66 11
d123 1
a123 1
               CALL SAVD(NDOC,DLIST,NLIST,IRTFLG)
a152 1
         CALL SAVDC
@


1.20
log
@GPL License fixed
@
text
@d6 1
a6 1
C                                                                      *
d48 5
a52 1
         LOGICAL    IFOUND
d55 1
d59 1
a59 1
        ICOMM   = MPI_COMM_WORLD
d84 3
a86 3
               RFMIN  = -HUGE(RFMIN)
               NSCM   = 1
               IFOUND = .FALSE.
d91 3
a93 3
                       NSCM   = NSC
                       RFMIN  = RFM
                       IFOUND = .TRUE.
d122 1
a122 1
               IF (IFOUND .AND. MYPID .LE. 0) THEN
d125 1
a125 1
               ELSEIF (MYPID .LE. 0) THEN
@


1.19
log
@HRI GPL License used
@
text
@a7 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.18
log
@pp's determ. changes
@
text
@d9 24
@


1.17
log
@bad 2nd reg return value
@
text
@a56 1
C              NEW EQUATION - FREQUENCY IS AT CENTER OF THE RING
d58 1
a58 1
               DLIST(2) = (FLOAT(L-1)+0.5)/FLOAT(INC)*0.5
@


1.16
log
@can return resolution registers
@
text
@d49 1
d57 2
a58 1
C              NEW EQUATION - THE FREQUENCY IS AT THE CENTER OF THE RING
a91 1
               SPFLAST = DLIST(2)
@


1.15
log
@Added MPI to sync the write to NOUT
@
text
@d5 1
d15 3
d36 2
a37 3
        INTEGER MYPID, COMM, MPIERR
C
        COMM   = MPI_COMM_WORLD
d39 1
a39 1
        CALL MPI_COMM_RANK(COMM, MYPID, MPIERR)
d44 7
d54 2
a55 1
               DLIST(1)=L
d68 3
a70 3
                       NSCM=NSC
                       RFMIN=RFM
                       IFOUND=.TRUE.
d86 6
a91 2
               BK3 = CSUM2(L)
               BK4 = CSUM1(L)
d97 1
d103 2
a104 4
               ELSE
                  IF (MYPID .LE. 0) THEN
                     WRITE(NOUT,6101) L,(DLIST(K),K=2,5),JDUM
                  ENDIF 
d107 19
a125 1
           ENDIF
d131 11
a141 2
         END

d143 2
d146 1
@


1.14
log
@output msg formatting changed
@
text
@d30 10
d84 1
a84 1
               IF (IFOUND) THEN
d88 3
a90 1
                  WRITE(NOUT,6101) L,(DLIST(K),K=2,5),JDUM
@


1.13
log
@*** empty log message ***
@
text
@d8 1
a8 1
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
a53 2
               IF (.NOT. IFOUND) WRITE(NOUT,436) L
436            FORMAT(' *** NO MINIMUM IN RFACT CURVE FOR RING: ', I5)
d74 7
a80 2
               WRITE(NOUT,6100) L,(DLIST(K),K=2,5),JDUM
6100           FORMAT (1X,I4,4(2X,F12.5),4X,I6)
@


1.12
log
@pawels changes dec 01
@
text
@d19 2
a20 2
         SUBROUTINE  RFACTSD2(PR,AMP,CSUM1,LR,CSUM,CSUM2,AVSUM,
      &                       NSCALE,INC,WI,FACT,NOUT)
d25 1
a25 1
      &             CSUM(INC),CSUM2(INC),AVSUM(NSCALE,INC)
@


1.11
log
@adapted for dynamical memory allocation
@
text
@a15 1
C        1         2         3         4         5         6         7
d19 2
a20 2
        SUBROUTINE  RFACTSD2(PR,AMP,CSUM1,LR,CSUM,CSUM2,AVSUM,
     &                       NSCALE,INC,WI,FACT,NOUT)
d22 65
a86 52
        PARAMETER  (NLIST=6)
        DIMENSION  DLIST(NLIST)
        DIMENSION  PR(NSCALE,INC),AMP(NSCALE,INC),CSUM1(INC),
     &             CSUM(INC),CSUM2(INC),AVSUM(NSCALE,INC)
        INTEGER    LR(INC)
        LOGICAL    IFOUND

        DATA  NDOC/88/

        DO  L=1,INC 
           JDUM = LR(L)
           IF (JDUM .NE. 0) THEN
              DLIST(1)=L
C             NEW EQUATION - THE FREQUENCY IS AT THE CENTER OF THE RING
              DLIST(2)=(FLOAT(L-1)+0.5)/FLOAT(INC)*0.5
              DLIST(5)=AMIN1(1.0,FACT/SQRT(FLOAT(JDUM)))
              DLIST(6)=JDUM

              RFMIN=AVSUM(1,L)/AMP(1,L)
              NSCM=1
              IFOUND = .FALSE.
              DO  NSC=2,NSCALE
                 RFM=AVSUM(NSC,L)/AMP(NSC,L)
                 IF (RFM.LT.RFMIN) THEN
                    NSCM=NSC
                    RFMIN=RFM
                    IFOUND=.TRUE.
                 ENDIF
              ENDDO
C
             IF (.NOT.IFOUND) WRITE(NOUT,436)  L
436          FORMAT(
     &            ' *** NO MINIMUM IN RFACT CURVE FOUND FOR RING = ',I5)

C            NSCM IS THE NUMBER OF THE ELEMENT IN EACH ARRAY WITH THE 
C            CORRECT SCALING. SCALE IS THE CORRECT SCALING.

             BK1=AMP(NSCM,L)
             BK2=PR(NSCM,L)
             IF (BK1.NE.0.) DLIST(3)=SQRT(BK2/BK1)
             BK3=CSUM2(L)
             BK4=CSUM1(L)
             IF (BK3.NE.0.OR.BK4.NE.0.) DLIST(4)=CSUM(L)/SQRT(BK4*BK3)
             CALL SAVD(NDOC,DLIST,NLIST,IRTFLG)
             WRITE(NOUT,6100)  L,(DLIST(K),K=2,5),JDUM
6100         FORMAT (1X,I4,4(2X,F12.5),4X,I6)
          ENDIF
        ENDDO

        CALL SAVDC
        CLOSE(NDOC)
        END
@


1.10
log
@cosmetic
@
text
@d14 4
a17 1
C                                                                      *
d20 1
a20 1
	SUBROUTINE  RFACTSD2(PR,AMP,CSUM1,LR,CSUM,CSUM2,AVSUM,
d23 13
a35 13
	PARAMETER  (NLIST=6)
	DIMENSION  DLIST(NLIST)
	DIMENSION  PR(NSCALE,INC),AMP(NSCALE,INC),CSUM1(INC),
     &		   CSUM(INC),CSUM2(INC),AVSUM(NSCALE,INC)
	INTEGER    LR(INC)
	LOGICAL    IFOUND

	DATA  NDOC/88/

	DO  L=1,INC 
	   JDUM = LR(L)
	   IF (JDUM .NE. 0) THEN
	      DLIST(1)=L
d37 15
a51 15
	      DLIST(2)=(FLOAT(L-1)+0.5)/FLOAT(INC)*0.5
	      DLIST(5)=AMIN1(1.0,FACT/SQRT(FLOAT(JDUM)))
	      DLIST(6)=JDUM

	      RFMIN=AVSUM(1,L)/AMP(1,L)
	      NSCM=1
	      IFOUND = .FALSE.
	      DO  NSC=2,NSCALE
	         RFM=AVSUM(NSC,L)/AMP(NSC,L)
	         IF (RFM.LT.RFMIN) THEN
	            NSCM=NSC
	            RFMIN=RFM
	            IFOUND=.TRUE.
	         ENDIF
	      ENDDO
d53 2
a54 2
	     IF (.NOT.IFOUND) WRITE(NOUT,436)  L
436	     FORMAT(
d60 8
a67 8
	     BK1=AMP(NSCM,L)
	     BK2=PR(NSCM,L)
	     IF (BK1.NE.0.) DLIST(3)=SQRT(BK2/BK1)
	     BK3=CSUM2(L)
	     BK4=CSUM1(L)
	     IF (BK3.NE.0.OR.BK4.NE.0.) DLIST(4)=CSUM(L)/SQRT(BK4*BK3)
	     CALL SAVD(NDOC,DLIST,NLIST,IRTFLG)
	     WRITE(NOUT,6100)  L,(DLIST(K),K=2,5),JDUM
d69 6
a74 2
	  ENDIF
	ENDDO
a75 3
	CALL SAVDC
	CLOSE(NDOC)
	END
@


1.9
log
@*** empty log message ***
@
text
@d1 16
a16 1
C
d18 4
a21 3
     &  NSCALE,INC,WI,FACT,NOUT)
	PARAMETER (NLIST=6)
	DIMENSION       DLIST(NLIST)
d23 4
a26 3
     &		CSUM(INC),CSUM2(INC),AVSUM(NSCALE,INC)
	INTEGER  LR(INC)
	LOGICAL  IFOUND
d28 1
d30 19
a48 7
	JDUM=LR(L)
	IF(JDUM.NE.0) THEN
	DLIST(1)=L
C  New equation - the frequency is at the center of the ring
	DLIST(2)=(FLOAT(L-1)+0.5)/FLOAT(INC)*0.5
	DLIST(5)=AMIN1(1.0,FACT/SQRT(FLOAT(JDUM)))
	DLIST(6)=JDUM
d50 16
a65 9
	RFMIN=AVSUM(1,L)/AMP(1,L)
	NSCM=1
	IFOUND=.FALSE.
	DO  NSC=2,NSCALE
	 RFM=AVSUM(NSC,L)/AMP(NSC,L)
	  IF(RFM.LT.RFMIN) THEN
	   NSCM=NSC
	   RFMIN=RFM
	   IFOUND=.TRUE.
d68 1
a68 18
C
	IF(.NOT.IFOUND)   WRITE(NOUT,436)  L
436	FORMAT(' *** NO MINIMUM IN RFACT CURVE FOUND FOR RING = ',I5)
C
C NSCM IS THE NUMBER OF THE ELEMENT IN EACH ARRAY WITH THE CORRECT
C SCALING. SCALE IS THE CORRECT SCALING.
C
	BK1=AMP(NSCM,L)
	BK2=PR(NSCM,L)
	IF(BK1.NE.0.) DLIST(3)=SQRT(BK2/BK1)
	BK3=CSUM2(L)
	BK4=CSUM1(L)
	IF(BK3.NE.0.OR.BK4.NE.0.) DLIST(4)=CSUM(L)/SQRT(BK4*BK3)
	CALL SAVD(NDOC,DLIST,NLIST,IRTFLG)
	WRITE(NOUT,6100)  L,(DLIST(K),K=2,5),JDUM
6100    FORMAT (1X,I4,4(2X,F12.5),4X,I6)
	ENDIF
	ENDDO
@


1.8
log
@New equation - the frequency is at the center of the ring
@
text
@d16 1
a16 1
	DLIST(2)=(FLOAT(L-1)+0.5)/FLOAT(INC-1)*0.5
@


1.7
log
@changed meaning, new version
@
text
@d14 3
a16 2
	DLIST(1)= L
	DLIST(2)=FLOAT(L-1)/FLOAT(INC-1)*0.5
@


1.6
log
@*** empty log message ***
@
text
@d2 44
a45 114
	SUBROUTINE RFACTSD2(A,B,PR,AMP,CSUM1,LR,CSUM,CSUM2,
     &  AVSUM,NSAM,NROW,DSCALE,NSCALE,SCALE1,INC,Y1,WI)
	DIMENSION A(NSAM,NROW),B(NSAM,NROW)
	DIMENSION PR(NSCALE,INC),AMP(NSCALE,INC),LR(INC)
	DIMENSION CSUM2(NSCALE,INC),CSUM1(NSCALE,INC)
	DIMENSION AVSUM(NSCALE,INC),CSUM(NSCALE,INC)
	LOGICAL IFNR,IFND
C
	PI=4.0*ATAN(1.00)
        IFNR=MOD(NROW,2).EQ.0
        IFND=MOD(NSAM,2).EQ.0
        IF(IFND)  THEN
        LBD=2
        ELSE
        LBD=1
        ENDIF
        IF(IFNR)  THEN
        LBR=2
        ELSE
        LBR=1
        ENDIF
        ND2=NSAM/2
        NR2=NROW/2
C
	DO  L=1,INC
	LR(L)=0
	DO  NSC=1,NSCALE
	CSUM(NSC,L)=0.0
	CSUM1(NSC,L)=0.0
	CSUM2(NSC,L)=0.0
	PR(NSC,L)=0.0
	AVSUM(NSC,L)=0
	AMP(NSC,L)=0.0
	ENDDO
	ENDDO
C
	DO 4 J=1,NROW
	IIJ=(J-1)
	IF(IIJ.GT.NR2)IIJ=IIJ-NROW
	PJ=(FLOAT(IIJ)/FLOAT(NR2))**2
	DO  I=3,NSAM-1,2
	III=(I-1)/2
	PII=(FLOAT(III)/FLOAT(ND2))**2
	R=SQRT(PII+PJ)*0.5
	IF(R.GT.0.5)  GO TO 4
	L=MIN0(MAX0(INT(R*Y1/WI)+1,1),INC)
	LR(L)=LR(L)+1
C  SCALES
C
	DO  NSC=1,NSCALE
	SCALE=SCALE1+(NSC-1)*DSCALE
	F21=B(I,J)*SCALE
	F22=B(I+1,J)*SCALE
	IF(A(I,J).NE.0.0)THEN
          PHA=ATAN2(A(I+1,J),A(I,J))*180./PI
          ELSE
          PHA=0
        ENDIF 
	IF(F21.NE.0.0)THEN
          PHB=ATAN2(F22,F21)*180./PI
          ELSE
          PHB=0
        ENDIF 
                DPH=PHA-PHB
                IF (DPH.GT.180.0) DPH=360.0-DPH
                IF (DPH.LT.-180.0) DPH=DPH+360.0
	QA=SQRT(A(I,J)**2+A(I+1,J)**2)
	QB=SQRT(F21**2+F22**2)
C
C
C
	CSUM(NSC,L)=CSUM(NSC,L)+A(I,J)*F21+
     &  A(I+1,J)*F22
	CSUM1(NSC,L)=CSUM1(NSC,L)+QA**2
	CSUM2(NSC,L)=CSUM2(NSC,L)+QB**2
	AVSUM(NSC,L)=AVSUM(NSC,L)+ABS(QA-QB)
	PR(NSC,L)=PR(NSC,L)+((QA+QB)/2.)*DPH**2
	AMP(NSC,L)=AMP(NSC,L)+((QA+QB)/2.)
	ENDDO
	ENDDO
	IF(.NOT.IFND)THEN
	PII=(FLOAT(ND2)*0.5/FLOAT(NSAM/2+1))**2
	R=SQRT(PII+PJ)
	IF(R.GT.0.5)GO TO 4
	L=INT(R*Y1/WI)+1
	LR(L)=LR(L)+1
C
	DO  NSC=1,NSCALE
	SCALE=SCALE1+(FLOAT(NSC-1))*DSCALE
	F21=B(NSAM,J)*SCALE
	F22=B(2,J)*SCALE
	IF(A(NSAM,J).NE.0.0)THEN
          PHA=ATAN2(A(2,J),A(NSAM,J))*180./PI
          ELSE
          PHA=0
        ENDIF 
	IF(F21.NE.0.0)THEN
          PHB=ATAN2(F22,F21)*180./PI
          ELSE
          PHB=0
        ENDIF 
                DPH=PHA-PHB
                IF (DPH.GT.180.0) DPH=360.0-DPH
                IF (DPH.LT.-180.0) DPH=360.0+DPH
	QA=SQRT(A(NSAM,J)**2+A(2,J)**2)
	QB=SQRT(F21**2+F22**2)
	CSUM(NSC,L)=CSUM(NSC,L)+A(NSAM,J)*F21+
     &  A(2,J)*F22
	CSUM1(NSC,L)=CSUM1(NSC,L)+QA**2
	CSUM2(NSC,L)=CSUM2(NSC,L)+QB**2
	AVSUM(NSC,L)=AVSUM(NSC,L)+ABS(QA-QB)
	PR(NSC,L)=PR(NSC,L)+((QA+QB)/2.)*DPH**2
	AMP(NSC,L)=AMP(NSC,L)+((QA+QB)/2.)
	ENDDO
a46 42
4	CONTINUE
C
C
	DO 3 I=1,LBD
	III=(I-1)*ND2
	PII=(FLOAT(III)/FLOAT(ND2))**2
	DO  J=3,NROW-1,2
	IIJ=(J-1)/2
	PJ=(FLOAT(IIJ)/FLOAT(NR2))**2
	R=SQRT(PII+PJ)*0.5
	IF(R.GT.0.5)GO TO 3
	L=INT(R*Y1/WI)+1
	LR(L)=LR(L)+1
C
	DO  NSC=1,NSCALE
	SCALE=SCALE1+(FLOAT(NSC-1))*DSCALE
	F22=B(I,J+1)*SCALE
	F21=B(I,J)*SCALE
C
	IF(A(I,J).NE.0.0)THEN
          PHA=ATAN2(A(I,J+1),A(I,J))*180./PI
          ELSE
          PHA=0
        ENDIF 
C
	IF(F21.NE.0.0)THEN
          PHB=ATAN2(F22,F21)*180./PI
          ELSE
          PHB=0
        ENDIF 
                DPH=PHA-PHB
                IF (DPH.GT.180.0) DPH=360.0-DPH
                IF (DPH.LT.-180.0) DPH=360.0+DPH
	QA=SQRT(A(I,J)**2+A(I,J+1)**2)
	QB=SQRT(F21**2+F22**2)
	CSUM(NSC,L)=CSUM(NSC,L)+A(I,J)*F21+
     &  A(I,J+1)*F22
	CSUM1(NSC,L)=CSUM1(NSC,L)+QA**2
	CSUM2(NSC,L)=CSUM2(NSC,L)+QB**2
	AVSUM(NSC,L)=AVSUM(NSC,L)+ABS(QA-QB)
	PR(NSC,L)=PR(NSC,L)+((QA+QB)/2.)*DPH**2
	AMP(NSC,L)=AMP(NSC,L)+((QA+QB)/2.)
d48 2
a49 38
	ENDDO
	IF(.NOT.IFNR)THEN
	PJ=(FLOAT(NR2)*0.5/FLOAT(NROW/2+1))**2
	R=SQRT(PII+PJ)
	IF(R.GT.0.5)GO TO 3
	L=INT(R*Y1/WI)+1
	LR(L)=LR(L)+1
C
	DO  NSC=1,NSCALE
	SCALE=SCALE1+(FLOAT(NSC-1))*DSCALE
	F21=B(I,NROW)*SCALE
	F22=B(I,2)*SCALE
	IF(A(I,NROW).NE.0.0)THEN
          PHA=ATAN2(A(I,2),A(I,NROW))*180./PI
          ELSE
          PHA=0
        ENDIF 
	IF(F21.NE.0.0)THEN
          PHB=ATAN2(F22,F21)*180./PI
          ELSE
          PHB=0
        ENDIF 
                DPH=PHA-PHB
                IF (DPH.GT.180.0) DPH=360.0-DPH
                IF (DPH.LT.-180.0) DPH=360.0+DPH
	QA=SQRT(A(I,2)**2+A(I,NROW)**2)
	QB=SQRT(F22**2+F21**2)
	CSUM(NSC,L)=CSUM(NSC,L)+A(I,2)*F22+
     &  A(I,NROW)*F21
	CSUM1(NSC,L)=CSUM1(NSC,L)+QA**2
	CSUM2(NSC,L)=CSUM2(NSC,L)+QB**2
	AVSUM(NSC,L)=AVSUM(NSC,L)+ABS(QA-QB)
	PR(NSC,L)=PR(NSC,L)+((QA+QB)/2.)*DPH**2
	AMP(NSC,L)=AMP(NSC,L)+((QA+QB)/2.)
	ENDDO
	ENDIF
3	CONTINUE
C
@


1.5
log
@*** empty log message ***
@
text
@a8 2
CNO_SAVE
C
@


1.4
log
@freq fixed
@
text
@d124 1
a124 1
	PII=(FLOAT(III)*0.5/FLOAT(NSAM/2+1))**2
d127 2
a128 2
	PJ=(FLOAT(IIJ)*0.5/FLOAT(NROW/2+1))**2
	R=SQRT(PII+PJ)
a199 1
	RETURN
@


1.3
log
@modified intrinsic function call for f90 compatibility
@
text
@d43 1
a43 1
	PJ=(FLOAT(IIJ)*0.5/FLOAT(NROW/2+1))**2
d46 4
a49 4
	PII=(FLOAT(III)*0.5/FLOAT(NSAM/2+1))**2
	R=SQRT(PII+PJ)
	IF(R.GT.0.5)GO TO 4
	L=INT(R*Y1/WI)+1
@


1.2
log
@*** empty log message ***
@
text
@d49 1
a49 1
	L=JINT(R*Y1/WI)+1
d88 1
a88 1
	L=JINT(R*Y1/WI)+1
d130 1
a130 1
	L=JINT(R*Y1/WI)+1
d167 1
a167 1
	L=JINT(R*Y1/WI)+1
@


1.1
log
@Initial revision
@
text
@d28 1
a28 1
	DO 945 L=1,INC
d30 1
a30 1
	DO 945 NSC=1,NSCALE
d36 3
a38 1
945	AMP(NSC,L)=0.0
d44 1
a44 1
	DO 41 I=3,NSAM-1,2
d53 1
a53 1
	DO 44 NSC=1,NSCALE
d82 2
a83 2
44	CONTINUE
41	CONTINUE
d91 1
a91 1
	DO 55 NSC=1,NSCALE
d117 1
a117 1
55	CONTINUE
d125 1
a125 1
	DO 31 J=3,NROW-1,2
d133 1
a133 1
	DO 134 NSC=1,NSCALE
d161 2
a162 2
134	CONTINUE
31	CONTINUE
d170 1
a170 1
	DO 143 NSC=1,NSCALE
d196 1
a196 1
143	CONTINUE
@
