head	1.14;
access;
symbols
	pre_mrcs:1.14
	healthdept_2018:1.14
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.10
	Bproc:1.10
	oct21:1.10
	last77:1.10;
locks; strict;
comment	@c @;


1.14
date	2018.10.03.14.34.03;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.25.16;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.18.18.54.27;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.18.14.30.42;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.03.19.15.57.04;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.02.05.15.19.09;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	98.02.02.18.20.33;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	98.01.27.15.17.22;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	97.08.12.14.08.22;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.08.27.18.02.07;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.02.07.15.53.01;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.05.17.12.10.18;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.03.19;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.45;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.14
log
@email_health_dept
@
text
@
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************

C++*************************************************************************
C
C      CNTRCE.FOR 
C
C      LAST UPDATE        11/20/89 al
C      PREVIOUS UPDATES   03/2/88  al        01/08/78      22/11/73
C                         4/6/87   al        3/25/85 al
C **************************************************************************
C
C    CNTRCE(AM,KAM,IRRX,X,Y,NMAX,LUN,MULTIZ,MAXPTS)
C
C    PURPOSE:      CONTUR SUBROUTINE TO FOLLOW CURVE
C
C    PARAMETERS:   AM       2D ARRAY FOR THIS IMAGE
C                  IRRX     WORKING ARRAY
C                  X,Y      COORDINATES OF POINTS ON THIS CONTOUR
C                  NMAX     DIMENSION OF X,Y ARRAYS
C                  LUN      LOGICAL UNIT FOR CONTOUR FILE
C                  MULTIZ   LOGICAL FLAG FOR MULTIPLE Z LEVELS
C                  MAXPTS   MAX. NUMBER OF POINTS ON A CONTOUR
C
C    CALLED BY:    CNSCAN
C
C    CALLS:        CNCALC    CNSTUFF
C
C--********************************************************************

      SUBROUTINE CNTRCE(AM,KAM,IRRX,X,Y,NMAX,LUN,MULTIZ,MAXPTS,
     &                  MAXIRR,IRTFLGR)


C     I DO NOT KNOW IF SAVE IS NEEDED FEB 99 al
      SAVE

C-------- START OF EM-PLOTT-COMMON-------------------------------------
C     INTEGERS
      COMMON /CONT1/ ICALL, IDIDIT, IDONE, IDX, IDY, ILINE, INTT,
     &               IRCD, ISS, ISTART, ISUM1, ISUM2, ISUM3, IT, IV, 
     &               IXX1, IXX2, IXX3, IX, IY, JSUM1, JSUM2, JSUM3, JT,
     &               LEVEL, LW, M, MF, MI, MT, N, NDIV, NF, NI, NT, NW

C     FLOATING POINT
      COMMON /CONT2/ APDIV, APDIVX, CV, DL, PY, RA, RC, RS, SKALE, THE,
     &               SX, SY, DENSL

C     ARRAYS
      COMMON /CONT3/ INCX(3), IORGX(3), INX(8),
     &               INY(8),  IPT(3,3), IMAP(12), NG(3), NP(3)

      COMMON /CONT4/ CTRI(6),FCTR(6),CTRDEL(6),ICNDSH(6),ICNCEL

C--------END OF EM-PLOTT-COMMON----------------------------------------

      COMMON /UNITS/  LUNC,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT

      INTEGER        IRRX(MAXIRR)
      DIMENSION      AM(KAM),X(NMAX),Y(NMAX)
      LOGICAL        MULTIZ

      PARAMETER      (NSIZE=2000)

      IRTFLGR = 0

      PY     = 0.0
      JT     = 0
      N      = 0
      IT     = 0
      IX0    = IX
      IY0    = IY
      ISX    = IDX + 2
      ISY    = IDY + 2
      IS     = IPT(ISX,ISY)
      IS0    = IS
      IF (IS0 .GT. 8) IS0 = IS0 - 8

C ****************** MAIN CONTOUR PIXEL VISITION LOOP ***************

    5 CALL CNCALC(AM,KAM,X,Y,NMAX,IRTFLGD)
      IF (N .GE. NSIZE) THEN
         CALL CNSTUFF(LUN,X,Y,N,MULTIZ,MAXPTS,1,IRTFLG)
         X(1) = X(N)
         Y(1) = Y(N)
         N    = 1
      ENDIF
              
C**      IF (IT+JT-1 .GT. 0)  THEN
      IF (IT+JT-1 .GT. 0 .AND. N .GT. 1)  THEN
C        EXCHANGE LAST TWO POINTS IN CONTOUR
         XS     = X(N-1)
         YS     = Y(N-1)
         X(N-1) = X(N)
         Y(N-1) = Y(N)
         X(N)   = XS
         Y(N)   = YS
      ENDIF

      IS  = IS + 1
      JT  = IT

9     IF (IS .GE. 9) IS = IS - 8
      IDX = INX(IS)
      IDY = INY(IS)
      IX2 = IX + IDX
      IY2 = IY + IDY

C     CHECK TO SEE IF BACK AT STARTING PIXEL OF THIS CONTOUR
      IF (ISS .GT. 0   .AND.
     &     IX .EQ. IX0 .AND. IY .EQ. IY0 .AND. IS .EQ. IS0) THEN
         CALL CNCALC(AM,KAM,X,Y,NMAX,IRTFLGD)
         IPEN = 6
         GO TO 73
      ENDIF

C     CHECK TO SEE IF END OF IMAGE SCANNING AREA
      IF ((IX2-MI+1) .EQ. 0 .OR. IX2 .GT. MF .OR. (IY2-NI+1) .EQ. 0 .OR.
     &    IY2 .GT. NF) THEN
          IPEN = 5
          GOTO 73
      ENDIF 
      K = (IY2-1)*M+IX2

      IF (CV .GT. AM(K)) GOTO 5

      IF (IDX**2+IDY**2-1 .NE. 0) THEN
         K1  = (IY-1)*M + IX
         K2  = K1 + IDX
         K3  = (IY2-1)*M + IX
         DCP = (AM(K1) + AM(K2) + AM(K3) + AM(K )) / 4.0
         IF (DCP .LT. CV) GOTO 5
         IF (INX(IS-1) .NE. 0) THEN
            IX  = IX + IDX
            IDX = -IDX
            PY  = 2.0
            CALL CNCALC(AM,KAM,X,Y,NMAX,IRTFLGD)
            IF (N .GE. NSIZE) THEN
              CALL CNSTUFF(LUN,X,Y,N,MULTIZ,MAXPTS,2,IRTFLG)
              X(1) = X(N)
              Y(1) = Y(N)
              N    = 1
            ENDIF
            IX  = IX + IDX
         ELSE
            IY  = IY + IDY
            IDY = -IDY
            PY  = 2.0
            CALL CNCALC(AM,KAM,X,Y,NMAX,IRTFLGD)
            IF (N .GE. NSIZE) THEN
              CALL CNSTUFF(LUN,X,Y,N,MULTIZ,MAXPTS,3,IRTFLG)
              X(1) = X(N)
              Y(1) = Y(N)
              N    = 1
            ENDIF
            IY  = IY + IDY
         ENDIF
      ENDIF

    6 K = (IY-1)*M + IX - 1
      IF (AM(K) .LT. CV) THEN
        IF (NPP .GE. MAXIRR) THEN
           WRITE(NOUT,*) ' *** CNTRCE, IRRX OVERFLOW,NPP:',NPP
           IRTFLGR = 1
           IPEN    = 8
           GOTO 73
        ENDIF

C       RECORD PIXEL AS VISITED IN IRRX
        NW  = NW + 1
        NPP = NW
        IRRX(NPP) = K+1
      ENDIF

      IS = IS + 5
      IX = IX2
      IY = IY2
      GO TO 9

C ************************** END OF MAIN PIXEL VISITING LOOP **********

 73   CALL CNSTUFF(LUN,X,Y,N,MULTIZ,MAXPTS,IPEN,IRTFLG)
       
      RETURN
      END
@


1.13
log
@GPL_2010
@
text
@d8 1
a8 1
C=* Email: spider@@wadsworth.org                                        *
@


1.12
log
@GPL
@
text
@a2 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d4 5
a8 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d10 1
a10 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d15 1
a15 1
C=* This program is distributed in the hope that it will be useful,    *
d17 1
a17 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a18 1
C=*                                                                    *
d20 1
a20 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@GPL License added
@
text
@d1 209
@


1.10
log
@removd CONSTG.INC
@
text
@a0 183

C++*************************************************************************
C
C      CNTRCE.FOR 
C
C      LAST UPDATE        11/20/89 al
C      PREVIOUS UPDATES   03/2/88  al        01/08/78      22/11/73
C                         4/6/87   al        3/25/85 al
C **************************************************************************
C
C    CNTRCE(AM,KAM,IRRX,X,Y,NMAX,LUN,MULTIZ,MAXPTS)
C
C    PURPOSE:      CONTUR SUBROUTINE TO FOLLOW CURVE
C
C    PARAMETERS:   AM       2D ARRAY FOR THIS IMAGE
C                  IRRX     WORKING ARRAY
C                  X,Y      COORDINATES OF POINTS ON THIS CONTOUR
C                  NMAX     DIMENSION OF X,Y ARRAYS
C                  LUN      LOGICAL UNIT FOR CONTOUR FILE
C                  MULTIZ   LOGICAL FLAG FOR MULTIPLE Z LEVELS
C                  MAXPTS   MAX. NUMBER OF POINTS ON A CONTOUR
C
C    CALLED BY:    CNSCAN
C
C    CALLS:        CNCALC    CNSTUFF
C
C--********************************************************************

      SUBROUTINE CNTRCE(AM,KAM,IRRX,X,Y,NMAX,LUN,MULTIZ,MAXPTS,
     &                  MAXIRR,IRTFLGR)


C     I DO NOT KNOW IF SAVE IS NEEDED FEB 99 al
      SAVE

C-------- START OF EM-PLOTT-COMMON-------------------------------------
C     INTEGERS
      COMMON /CONT1/ ICALL, IDIDIT, IDONE, IDX, IDY, ILINE, INTT,
     &               IRCD, ISS, ISTART, ISUM1, ISUM2, ISUM3, IT, IV, 
     &               IXX1, IXX2, IXX3, IX, IY, JSUM1, JSUM2, JSUM3, JT,
     &               LEVEL, LW, M, MF, MI, MT, N, NDIV, NF, NI, NT, NW

C     FLOATING POINT
      COMMON /CONT2/ APDIV, APDIVX, CV, DL, PY, RA, RC, RS, SKALE, THE,
     &               SX, SY, DENSL

C     ARRAYS
      COMMON /CONT3/ INCX(3), IORGX(3), INX(8),
     &               INY(8),  IPT(3,3), IMAP(12), NG(3), NP(3)

      COMMON /CONT4/ CTRI(6),FCTR(6),CTRDEL(6),ICNDSH(6),ICNCEL

C--------END OF EM-PLOTT-COMMON----------------------------------------

      COMMON /UNITS/  LUNC,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT

      INTEGER        IRRX(MAXIRR)
      DIMENSION      AM(KAM),X(NMAX),Y(NMAX)
      LOGICAL        MULTIZ

      PARAMETER      (NSIZE=2000)

      IRTFLGR = 0

      PY     = 0.0
      JT     = 0
      N      = 0
      IT     = 0
      IX0    = IX
      IY0    = IY
      ISX    = IDX + 2
      ISY    = IDY + 2
      IS     = IPT(ISX,ISY)
      IS0    = IS
      IF (IS0 .GT. 8) IS0 = IS0 - 8

C ****************** MAIN CONTOUR PIXEL VISITION LOOP ***************

    5 CALL CNCALC(AM,KAM,X,Y,NMAX,IRTFLGD)
      IF (N .GE. NSIZE) THEN
         CALL CNSTUFF(LUN,X,Y,N,MULTIZ,MAXPTS,1,IRTFLG)
         X(1) = X(N)
         Y(1) = Y(N)
         N    = 1
      ENDIF
              
C**      IF (IT+JT-1 .GT. 0)  THEN
      IF (IT+JT-1 .GT. 0 .AND. N .GT. 1)  THEN
C        EXCHANGE LAST TWO POINTS IN CONTOUR
         XS     = X(N-1)
         YS     = Y(N-1)
         X(N-1) = X(N)
         Y(N-1) = Y(N)
         X(N)   = XS
         Y(N)   = YS
      ENDIF

      IS  = IS + 1
      JT  = IT

9     IF (IS .GE. 9) IS = IS - 8
      IDX = INX(IS)
      IDY = INY(IS)
      IX2 = IX + IDX
      IY2 = IY + IDY

C     CHECK TO SEE IF BACK AT STARTING PIXEL OF THIS CONTOUR
      IF (ISS .GT. 0   .AND.
     &     IX .EQ. IX0 .AND. IY .EQ. IY0 .AND. IS .EQ. IS0) THEN
         CALL CNCALC(AM,KAM,X,Y,NMAX,IRTFLGD)
         IPEN = 6
         GO TO 73
      ENDIF

C     CHECK TO SEE IF END OF IMAGE SCANNING AREA
      IF ((IX2-MI+1) .EQ. 0 .OR. IX2 .GT. MF .OR. (IY2-NI+1) .EQ. 0 .OR.
     &    IY2 .GT. NF) THEN
          IPEN = 5
          GOTO 73
      ENDIF 
      K = (IY2-1)*M+IX2

      IF (CV .GT. AM(K)) GOTO 5

      IF (IDX**2+IDY**2-1 .NE. 0) THEN
         K1  = (IY-1)*M + IX
         K2  = K1 + IDX
         K3  = (IY2-1)*M + IX
         DCP = (AM(K1) + AM(K2) + AM(K3) + AM(K )) / 4.0
         IF (DCP .LT. CV) GOTO 5
         IF (INX(IS-1) .NE. 0) THEN
            IX  = IX + IDX
            IDX = -IDX
            PY  = 2.0
            CALL CNCALC(AM,KAM,X,Y,NMAX,IRTFLGD)
            IF (N .GE. NSIZE) THEN
              CALL CNSTUFF(LUN,X,Y,N,MULTIZ,MAXPTS,2,IRTFLG)
              X(1) = X(N)
              Y(1) = Y(N)
              N    = 1
            ENDIF
            IX  = IX + IDX
         ELSE
            IY  = IY + IDY
            IDY = -IDY
            PY  = 2.0
            CALL CNCALC(AM,KAM,X,Y,NMAX,IRTFLGD)
            IF (N .GE. NSIZE) THEN
              CALL CNSTUFF(LUN,X,Y,N,MULTIZ,MAXPTS,3,IRTFLG)
              X(1) = X(N)
              Y(1) = Y(N)
              N    = 1
            ENDIF
            IY  = IY + IDY
         ENDIF
      ENDIF

    6 K = (IY-1)*M + IX - 1
      IF (AM(K) .LT. CV) THEN
        IF (NPP .GE. MAXIRR) THEN
           WRITE(NOUT,*) ' *** CNTRCE, IRRX OVERFLOW,NPP:',NPP
           IRTFLGR = 1
           IPEN    = 8
           GOTO 73
        ENDIF

C       RECORD PIXEL AS VISITED IN IRRX
        NW  = NW + 1
        NPP = NW
        IRRX(NPP) = K+1
      ENDIF

      IS = IS + 5
      IX = IX2
      IY = IY2
      GO TO 9

C ************************** END OF MAIN PIXEL VISITING LOOP **********

 73   CALL CNSTUFF(LUN,X,Y,N,MULTIZ,MAXPTS,IPEN,IRTFLG)
       
      RETURN
      END
@


1.9
log
@CNO_SAVE
@
text
@a31 1
CNO_SAVE 
a34 1
      INCLUDE   'CONSTG.INC'
@


1.8
log
@cnstuff parameters
@
text
@d32 4
@


1.7
log
@bad cnstuff call
@
text
@d178 1
a178 2
 73   RETANG = 178.0
      CALL CNSTUFF(LUN,X,Y,N,MULTIZ,MAXPTS,RETANG,IPEN,IRTFLG)
@


1.6
log
@removed EMPLOTT.INC
@
text
@d79 1
a79 1
         CALL CNSTUFF(X,Y,N,MULTIZ,MAXPTS,1,IRTFLG)
@


1.5
log
@improved
@
text
@d33 19
a51 1
      INCLUDE   'EMPLOTT.INC'
@


1.4
log
@updated for UNIX only
@
text
@d25 1
a25 1
C    CALLS:        CNCALC    CSPUSH    SSPUSH
d30 1
a30 1
     &                  MAXIRR,IRTFLG)
a31 1
#ifdef SP_UNIX
a33 4
#else
      INCLUDE   'COMMON1:CONSTG.INC'
      INCLUDE   'COMMON1:EMPLOTT.INC'
#endif
a35 2
      LOGICAL         HOLES,REVERSE
      COMMON /POLY/   HOLES,REVERSE,MINPTS
d43 1
a43 1
      IRTFLG = 0
d142 2
a143 2
           IRTFLG = 1
           IPEN   = 8
d160 2
a161 1
 73   CALL CNSTUFF(LUN,X,Y,N,MULTIZ,MAXPTS,IPEN,IRTFLG)
@


1.3
log
@removed vax version
@
text
@d1 1
a32 1
      INCLUDE   'SSRECN.INC'
a35 1
      INCLUDE   'COMMON1:SSRECN.INC'
@


1.2
log
@cpp_lines_added
@
text
@a0 1
#ifdef VMS
d10 1
a10 1
C $$ CNTRCE(AM,KAM,IRRX,X,Y,NMAX,LUN,MULTIZ,MAXPTS)
d28 2
a29 1
      SUBROUTINE CNTRCE(AM,KAM,IRRX,X,Y,NMAX,LUN,MULTIZ,MAXPTS)
a32 4
#else
      INCLUDE   'COMMON1:SSRECN.INC'
#endif
#ifdef SP_UNIX
a33 4
#else
      INCLUDE   'COMMON1:CONSTG.INC'
#endif
#ifdef SP_UNIX
a35 160
      INCLUDE   'COMMON1:EMPLOTT.INC'
#endif

      COMMON /UNITS/  LUNC,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT
      COMMON /POLY/   HOLES,REVERS
      PARAMETER       (NSIZE=2000)
      COMMON /COMMUN/ DATA(3,NSIZE),WORK(3,NSIZE)

      DIMENSION      CONLST(2,10)
      INTEGER        IRRX(NMAX)
      DIMENSION      AM(KAM),X(NMAX),Y(NMAX)
      LOGICAL        MULTIZ,THINED


C..   CONTOUR LEVELS ARE PASSED IN THE COMMON (CONSTG.INC)
C*    ZCOO = CV

      PY  = 0.0
      JT  = 0
      N   = 0
      IT  = 0
      IX0 = IX
      IY0 = IY
      ISX = IDX + 2
      ISY = IDY + 2
      IS  = IPT(ISX,ISY)
      IS0 = IS
      IF (IS0 .GT. 8) IS0 = IS0 - 8

    5 CALL CNCALC(AM,KAM,X,Y,NMAX)
      NZ = N
      N  = NZ
      IF (IT+JT-1 .GT. 0)  THEN
         XS     = X(N-1)
         YS     = Y(N-1)
         X(N-1) = X(N)
         Y(N-1) = Y(N)
         X(N)   = XS
         Y(N)   = YS
      ENDIF

      IS  = IS + 1
      JT  = IT

9     IF (IS .GE. 9) IS = IS - 8
      IDX = INX(IS)
      IDY = INY(IS)
      IX2 = IX + IDX
      IY2 = IY + IDY

      IF (ISS .GT. 0   .AND.
     &     IX .EQ. IX0 .AND. IY .EQ. IY0 .AND. IS .EQ. IS0) THEN
         CALL CNCALC(AM,KAM,X,Y,NMAX)
         GO TO 73
      ENDIF

      IF ((IX2-MI+1) .EQ. 0 .OR. IX2 .GT. MF .OR. (IY2-NI+1) .EQ. 0 .OR.
     &    IY2 .GT. NF) GOTO 73 
      K = (IY2-1)*M+IX2

      IF (CV .GT. AM(K)) GOTO 5

      IF (IDX**2+IDY**2-1 .NE. 0) THEN
         K1  = (IY-1)*M + IX
         K2  = K1 + IDX
         K3  = (IY2-1)*M + IX
         DCP = (AM(K1) + AM(K2) + AM(K3) + AM(K )) / 4.0
         IF (DCP .LT. CV) GOTO 5
         IF (INX(IS-1) .NE. 0) THEN
            IX  = IX + IDX
            IDX = -IDX
            PY  = 2.0
            CALL CNCALC(AM,KAM,X,Y,NMAX)
            IX  = IX + IDX
         ELSE
            IY  = IY + IDY
            IDY = -IDY
            PY  = 2.0
            CALL CNCALC(AM,KAM,X,Y,NMAX)
            IY  = IY + IDY
         ENDIF
      ENDIF

    6 K = (IY-1)*M + IX - 1
      IF (AM(K) .LT. CV) THEN
        NW  = NW + 1
        NPP = NW
        IRRX(NPP) = K+1
      ENDIF

      IS = IS + 5
      IX = IX2
      IY = IY2
      GO TO 9

   73 DO 1002 I2 = 1, N
         DATA(1,I2) = X(I2)
         DATA(2,I2) = Y(I2)
 1002 CONTINUE

      THINED = .FALSE.
      IF (N .GT. MAXPTS) THEN 
C       TOO MANY POINTS ON THIS CONTOUR, THIN IT
        N0 = N
        CALL RATHIN(DATA,N,0.05,500,WORK,IRTFLG)
        IF (IRTFLG .EQ. 0) THINED = .TRUE.
      ENDIF

C     SET LINE PARAMETERS
      MARK  = 0
      IPEN  = 0
      LINTP = 0
      INTEN = 9

      IF (MULTIZ) THEN
C..      STORE THE CONTOUR
         ICONCT = 0
         ICNT   = ICNT + 1
         CALL SSPUSH(DATA,N,ICONCT,CONLST,ICNTX,NERR)
         IF (NERR .EQ. 0) THEN
            WRITE(NOUT,1101) ISEC,ICLAS,ICNT,ZCOO,N
 1101       FORMAT('  SECTION',I3,' ',I3,' ',I3,' AT LEVEL:',1PG11.3,
     &      ' WITH ',I5,' DATA POINTS STORED.')
            IF (THINED) THEN 
               WRITE(NOUT,1099) N0
1099           FORMAT('  THINNED FROM: ',I6,' POINTS')
            ENDIF
         ELSE
            WRITE(NOUT,1102) ISEC,ICLAS,ICNT,ZCOO,N
 1102       FORMAT('  ERROR IN STORING SECTION',I3,' ',I3,' ',I3,
     &      ' AT LEVEL:',F10.5,' WITH ',I5,' DATA POINTS'//)
            ICNT = ICNT - 1
         ENDIF

      ELSE
         ISTFLG = 1
         CALL CSPUSH(LUN,DATA,N,NERR,ISTFLG,ICNTR)
         IF (NERR .EQ. 0) THEN
            WRITE(NOUT,101) ICNTR,ZCOO,N
  101       FORMAT('  CONTOUR NO. ',I3,' AT LEVEL ',1PG11.3,
     &      ' WITH ',I5,' DATA POINTS STORED')
            IF (THINED) WRITE(NOUT,1099) N0
         ELSE
            WRITE(NOUT,102) ICNTR,N
  102       FORMAT('  ERROR STORING CONTOUR NO. ',I3,' WITH ',
     &      I5,' DATA POINTS')
         ENDIF
      ENDIF
        
      RETURN
      END

#else

      SUBROUTINE CNTRCE(AM,KAM,IRRX,X,Y,NMAX,LUN,MULTIZ,MAXPTS,
     &                  MAXIRR,IRTFLG)

#ifdef SP_UNIX
      INCLUDE   'SSRECN.INC'
#else
a36 4
#endif
#ifdef SP_UNIX
      INCLUDE   'CONSTG.INC'
#else
a37 4
#endif
#ifdef SP_UNIX
      INCLUDE   'EMPLOTT.INC'
#else
a50 1

a171 1
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1

d31 3
d35 4
d40 4
d45 1
d196 154
@
