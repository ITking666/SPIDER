head	1.20;
access;
symbols
	healthdept_2018:1.20
	pre_getangas:1.19
	GPL2010:1.19
	pre_GPL2010:1.18
	pre_var_equation:1.18
	pre_fftwrings:1.18
	pre_opfiles:1.18
	src:1.18
	best-code:1.18
	x-named-regs:1.18
	x:1.18
	v13-00:1.18
	pre_GPL:1.16
	prec_CA:1.14
	noindx:1.13
	Bproc:1.12
	oct21:1.9
	last77:1.7;
locks; strict;
comment	@c @;


1.20
date	2018.10.03.14.34.13;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2010.06.24.13.26.35;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2005.10.17.19.59.50;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.17.17.55.51;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2004.04.23.12.48.23;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2004.04.23.12.45.02;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.20.19.40.39;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.11.14.07.47;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	99.12.27.15.09.59;	author bimal;	state Exp;
branches;
next	1.11;

1.11
date	99.12.23.19.26.50;	author bimal;	state Exp;
branches;
next	1.10;

1.10
date	99.12.07.19.26.08;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.07.09.16.07.08;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	99.06.07.19.36.19;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	97.10.17.15.19.12;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	96.10.21.13.45.13;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	96.10.09.15.54.38;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	96.08.29.18.35.56;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.02.23.16.08.48;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.09.28;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.48;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.20
log
@email_health_dept
@
text
@C ++********************************************************************
C                                                                      *
C                                                                      *
C QFACT                 USED FILELIST             APR 2004 ARDEAN LEITH    
C                
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  QFACT
C                                                                    *                                                                     *
C  PURPOSE: ADDS A SERIES OF IMAGES REPRESENTING SINGLE,
C         ALIGNED PARTICLES OR PATCHES OF A CRYSTAL LATTICE, AND
C         COMPUTES A Q FACTOR MAP. IMAGES HAVE TO HAVE EVEN
C         DIMENSIONS (INTERNALLY FFT IS USED)                                                           *
C                                                                      *
C  PARAMETERS:                                                         *
C
C IMAGE_PROCESSING_ROUTINE
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE QFACT(LUN1,LUN2,LUNQ)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'
       
        COMMON /COMMUN/          FILNAM,FILA,FILQ,FILPAT
        CHARACTER(LEN=MAXNAM) :: FILNAM,FILA,FILQ,FILPAT        
        INTEGER               :: HREF,KREF
      
C       INPUT IMAGE SERIES
	
        CALL FILELIST(.TRUE.,LUNQ,FILPAT,NLET,INUMBR,NIMAX,NUMT,
     &                 'INPUT FILE TEMPLATE (E.G. PIC****)',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        CALL FILGET(FILPAT,FILNAM,NLET,INUMBR,IRTFLG)

        MAXIM = 0
        CALL OPFILEC(0,.FALSE.,FILNAM,LUN2,'O',ITYPE,NSAM,NROW,NSLICE,
     &               MAXIM,' ',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 980
        CLOSE(LUN2)

        IF( MOD(NSAM,2).NE.0 .OR. MOD(NROW,2).NE.0) GOTO  950
        IF (IFORM.NE.1)  GO TO 970
        IF (NSLICE.GT.1) GO TO 970
        MAXIM  = 0
        ITYPE  = 1
        CALL OPFILEC(0,.TRUE.,FILA,LUN1,'U',ITYPE,
     &            NSAM,NROW,NSLICE,MAXIM,'AVERAGE',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 980


        MAXIM = 0
        ITYPE = 1
        CALL OPFILEC(0,.TRUE.,FILQ,LUNQ,'U',ITYPE,
     &             NSAM,NROW,NSLICE,MAXIM,'Q FACTOR',.FALSE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 980

C       ENTER FOURIER INDEX FOR VECTOR LISTING (0,0=NO LISTING)

        CALL RDPRMI(HREF,KREF,NOT_USED,'INDICES FOR VECTOR LISTING')

        CALL  QFACT_P(LUN1,LUN2,LUNQ,INUMBR,NUMT,NSAM,NROW,HREF,KREF)

        CLOSE (LUNQ)
        CLOSE (LUN1)
        RETURN


950     IER=10
        GOTO  990

970     IER=2
        GO TO 990

980     IER=4
990     CALL ERRT(IER,'AS F',NE)
        END





@


1.19
log
@GPL_2010
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.18
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.17
log
@HRI GPL License used
@
text
@a7 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.16
log
@purpose
@
text
@d9 24
@


1.15
log
@used filelist for doc file input
@
text
@d18 4
a21 1
C  PURPOSE:                                                            *
@


1.14
log
@opfilec
@
text
@d4 2
a5 1
C                  OPFILEC                         FEB 03 ARDEAN LEITH
d16 2
a17 1
C                                                                      *                                                                     *
d32 3
a34 4
        COMMON /COMMUN/ FILNAM,FILA,FILQ,FILPAT,NLET
        CHARACTER *80 FILNAM,FILA,FILQ,FILPAT
        
        INTEGER   HREF,KREF
d38 2
a39 2
        CALL FILSEQP(FILPAT,NLET,INUMBR,NIMAX,NUMT, 
     &     'FILE PREFIX OR TEMPLATE (EG. PIC****)' ,IRTFLG)
d50 5
a54 5
        IF(MOD(NSAM,2).NE.0 .OR. MOD(NROW,2).NE.0) GOTO  950
        IF(IFORM.NE.1)  GO TO 970
        IF(NSLICE.GT.1) GO TO 970
        MAXIM = 0
        ITYPE=1
d61 1
a61 1
        ITYPE=1
d66 1
a66 1
C ENTER FOURIER INDEX FOR VECTOR LISTING (0,0=NO LISTING)
d71 1
d75 1
@


1.13
log
@nloop,iloop_removed
@
text
@d4 1
d15 1
a15 2
C                                                                      *
C                                                                      *
a21 1
C        0         2         3         4         5         6         7 *
d29 1
a29 3


        
a31 2
	
	
a33 1

a35 1
       
d38 1
a38 1
     $     'FILE PREFIX OR TEMPLATE (EG. PIC****)' ,IRTFLG)
a40 1

d44 1
a44 1
        CALL OPFILE(.FALSE.,FILNAM,LUN2,'O',ITYPE,NSAM,NROW,NSLICE,
a48 2


d52 4
a55 6
       

       MAXIM = 0
       ITYPE=1
        CALL OPFILE(.TRUE.,FILA,LUN1,'U',ITYPE,NSAM,NROW,NSLICE,MAXIM,
     &  'AVERAGE',.FALSE.,IRTFLG)
d59 4
a62 4
       MAXIM = 0
       ITYPE=1
        CALL OPFILE(.TRUE.,FILQ,LUNQ,'U',ITYPE,NSAM,NROW,NSLICE,MAXIM,
     &  'Q FACTOR',.FALSE.,IRTFLG)
@


1.12
log
@*** empty log message ***
@
text
@d79 1
a79 1
        CALL RDPRMI(HREF,KREF,NLOOP,ILOOP,'INDICES FOR VECTOR LISTING')
@


1.11
log
@adapted for dynamical memory allocation
@
text
@d28 2
a29 2
        INCLUDE '/net/ithaca/usr1/spider/src/CMBLOCK.INC'
        INCLUDE '/net/ithaca/usr1/spider/src/CMLIMIT.INC'
@


1.10
log
@header
@
text
@a0 1

d19 2
d26 5
a30 1
	SUBROUTINE QFACT(LUN1,LUN2,LUNQ,MAXDIM)
d32 1
a32 3
	INCLUDE 'CMBLOCK.INC'
	PARAMETER  (IMAX=99998,LBUF=8200)
	COMMON DUM(80),BUF2(LBUF),NUMBER(IMAX),Q(1)
d34 42
a75 45
        CHARACTER *81 FILNAM,FILA,FILQ,FILPAT
        CHARACTER *1  NULL
	INTEGER   HREF,KREF
        NULL=CHAR(0)
C  INPUT IMAGE SERIES
        CALL FILSEQP(FILPAT,NLET,NUMBER,IMAX,NUMT, 
     $  'FILE PREFIX OR TEMPLATE (EG. PIC****)' ,IRTFLG)
	IF(IRTFLG .NE. 0)RETURN

	CALL FILGET(FILPAT,FILNAM,NLET,NUMBER,IRTFLG)
	CALL OPENFB(BUF2,FILNAM,LUN2,NSAM,NROW,'O',NF,NSLICE)
	IF(NF.NE.2)	RETURN
	CLOSE(LUN2)
	IF(MOD(NSAM,2).NE.0 .OR. MOD(NROW,2).NE.0) GOTO  950
	IF(IFORM.NE.1)	GO TO 980
	IF(NSLICE.GT.1) GO TO 990
	NROWH=NROW/2
	NSAMH=NSAM/2

c  Memory needed

C   K1   1                         FA          Complex
C   K2   1+(NSAM+2)*NROW           FABS
C   K3                             CBUF        Complex

	K1=1
	K2=K1+(NSAM+2)*NROW
	K3=K2+(NSAM/2+1)*NROW
	K4=K3+(NSAM+2)*NROW
	IF (K3.GT.MAXDIM-LBUF-IMAX)  THEN
           CALL  ERRT(6,'QFACT ',NE)
           RETURN
	ENDIF

	CALL FILERD(FILA,NLETA,NULL,'AVERAGE',IRTFLG)
	IF (IRTFLG .NE. 0) RETURN
	IFORM=1
	CALL OPENFB(BUF2,FILA,LUN1,NSAM,NROW,'UNKNOWN',NF,1)
	IF (NF.NE.2)GO TO 970

	CALL FILERD(FILQ,NLETQ,NULL,'Q FACTOR',IRTFLG)
	IF (IRTFLG .NE. 0) RETURN
	IFORM=1
	CALL OPENFB(BUF2,FILQ,LUNQ,NSAM,NROW,'UNKNOWN',NF,1)
	IF (NF.NE.2)GO TO 970
d79 20
a98 1
	CALL RDPRMI(HREF,KREF,NLOOP,ILOOP,'INDICES FOR VECTOR LISTING')
a99 15
	CALL  QFACT_P(LUN1,LUN2,LUNQ,BUF2,Q(K3),NUMBER,NUMT,Q(K1),Q(K2),
     &		NSAM,NROW,HREF,KREF)
	CLOSE(LUNQ)
	CLOSE(LUN1)
	RETURN

950	IER=10
	GOTO  990

970	IER=2
	GO TO 990

980	IER=4
990	CALL ERRT(IER,'AS F',NE)
	END
@


1.9
log
@fixed
@
text
@d2 23
d26 1
@


1.8
log
@*** empty log message ***
@
text
@d4 1
a4 1
	PARAMETER  (IMAX=1200,LBUF=4200)
d11 1
a11 2
C       FIRST GET FOURIER TO DETERMINE DIMENSIONS
        WRITE(NOUT,*) ' FOR IMAGES:'
a13 1
     
d20 1
a20 1
	IF(NSAM.NE.2**LOG2(NSAM) .OR. NROW.NE.2**LOG2(NROW)) GOTO  950
d70 1
a70 1
990	CALL ERRT(IER,'QFACT ',NE)
@


1.7
log
@R
@
text
@a9 1
CNO_SAVE
@


1.6
log
@delete an extra common in arg list
@
text
@d20 1
a20 1
	CALL OPENFB(BUF2,FILNAM,LUN2,NSAM,NROW,'R',NF,NSLICE)
@


1.5
log
@change filseq to filseqp call
@
text
@d15 1
a15 1
     $  'FILE PREFIX OR TEMPLATE (EG. PIC****)',,IRTFLG)
@


1.4
log
@corrected, but really ?
@
text
@d14 3
a16 1
        CALL FILSEQ(FILPAT,NLET,NUMBER,IMAX,NUMT,IRTFLG)
@


1.3
log
@prompts fixed
@
text
@a2 2

#ifdef SP_UNIX
a3 4
#else
	INCLUDE 'COMMON1:CMBLOCK.INC'
#endif

d10 1
a10 1

a11 1

a12 1

a49 1
C  Warning - it is transposed !! (as power spectrum)
d51 1
a51 1
	CALL OPENFB(BUF2,FILQ,LUNQ,NROW,NSAM,'UNKNOWN',NF,1)
@


1.2
log
@cpp_lines_added
@
text
@d50 1
a50 1
	CALL FILERD(FILA,NLETA,NULL,'Average',IRTFLG)
d65 1
a65 1
	CALL RDPRMI(HREF,KREF,NLOOP,ILOOP,'INDICES FOR VECTOR LISTING$')
@


1.1
log
@Initial revision
@
text
@d4 3
d8 1
@
