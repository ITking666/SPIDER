head	1.16;
access;
symbols
	healthdept_2018:1.16
	pre_getangas:1.14
	GPL2010:1.14
	pre_GPL2010:1.13
	pre_var_equation:1.13
	pre_fftwrings:1.13
	pre_opfiles:1.13
	src:1.13
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.12
	prec_CA:1.11
	noindx:1.10
	Bproc:1.10
	oct21:1.8
	last77:1.3;
locks; strict;
comment	@c @;


1.16
date	2018.10.03.14.51.09;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2012.10.10.15.36.37;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.24.13.27.14;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.21.08.21;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.19.22.33.03;	author cyang;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.04.13.14.18;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.12.06.19.32.32;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.10.25.18.25.29;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	99.10.20.20.13.17;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	99.09.15.16.07.56;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	99.08.24.14.08.13;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	99.08.06.19.27.50;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	99.08.05.21.29.30;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	96.01.16.16.37.05;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.12.30;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.44;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.16
log
@email_health_dept
@
text
@C++*********************************************************************
C
C    VOMD.F  NEW                                               07/12/93
C            NEW FORMAT OF 'AP MD' OUTPUT DOC FILE             08/05/99
C            PSI INVERTED
C            MIRRORED IMAGES HAVE NEGATIVE SIGN                10/21/99
C            UNASSIGNED IMAGES MARKED BY 0
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2012  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  PURPOSE: CREATE ANGULAR DOCUMENT FILE FROM 'AP MD' OUTPUT 
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

         SUBROUTINE VOMD

         INCLUDE 'CMBLOCK.INC'
         INCLUDE 'CMLIMIT.INC'

         COMMON  AAA(6,1)

         REAL                   :: X(6),Y(0:3)
         CHARACTER (LEN=MAXNAM) :: DOCFIL
         CHARACTER (LEN=1)      :: NULL = CHAR(0)

         INTEGER,PARAMETER      :: NDOC  = 81
         INTEGER,PARAMETER      :: NDOUT = 82

         CALL SET_MPI(ICOMM,MYPID,MPIERR)  

         CALL FILERD(DOCFIL,NLETI,NULL,'ANGULAR DOCUMENT',IRTFLG)
         IF (IRTFLG.EQ.-1)  RETURN

C        FILLS AAA WITH 3 ANGLES PER LINE
         K    = 0
         K2   = 1
778      LERR = -1
         KP1  = K+1
         CALL  UNSAV(DOCFIL,K,NDOC,KP1,AAA(1,KP1),3,LERR,K2)
         IF (LERR == 0)  THEN
            K = K+1
            GOTO 778
         ENDIF
         CLOSE(NDOC)

         CALL FILERD
     &      (DOCFIL,NLETI,NULL,'OUTPUT FROM AP ** DOCUMENT',IRTFLG)
         IF (IRTFLG == -1)  RETURN

         NLIST = 4
         K     = 0
         K2    = 1

779      LERR  = -1
         KP1   = K+1

         CALL  UNSAV(DOCFIL,K,NDOC,KP1,X,6,LERR,K2)

         IF (LERR == 0)  THEN
	    K  = K+1
            MM = X(1)
            IF (MM .NE. 0)  THEN
               Y(1) = -X(3) + 360.0

               IF (MM < 0) THEN
                  MM = -MM
                  Y(1) = Y(1)+180.0
                  Y(2) = 180.0 - AAA(2,MM)
                  Y(3) = AAA(3,MM)+180.0
               ELSE
                  Y(2) = AAA(2,MM)
                  Y(3) = AAA(3,MM)
               ENDIF

               IF (Y(1) >= 360.0)  Y(1) = Y(1)-360.0
               IF (Y(3) >= 360.0)  Y(3) = Y(3)-360.0
               Y(0) = X(6)

               CALL SAVD(NDOUT,Y,NLIST,IRTFLG)
               IF (IRTFLG == -1) GOTO  5

            ENDIF
            GOTO  779
         ENDIF

5        CALL  SAVDC
         IF (MYPID <= 0) CLOSE(NDOUT)
         IF (MYPID <= 0) CLOSE(NDOC)
         END
@


1.15
log
@cosmetic modernization
@
text
@d15 1
a15 1
C=* Email: spider@@wadsworth.org                                        *
@


1.14
log
@GPL_2010
@
text
@d3 5
a7 1
C    VOMD.F 
d13 1
a13 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d31 1
a31 5
C  CREATE ANGULAR DOCUMENT FILE FROM THE AP MD OUTPUT  07/12/93
C  CHANGED TO NEW FORMAT OF THE AP MD OUTPUT DOC FILE 08/05/99
C PSI INVERTED
C  MIRRORED IMAGES HAVE NEGATIVE SIGN 10/21/99
C  UNASSIGNED IMAGES MARKED BY 0
d39 21
a59 22
         COMMON  DUMMY(1024),X(6),Y(0:3),AAA(6,1)
         CHARACTER*81  DOCFIL
         CHARACTER*1  NULL
         DATA  NDOC,NDOUT/55,56/
#ifdef USE_MPI
         include 'mpif.h'
         INTEGER MYPID, COMM, MPIERR
         COMM = MPI_COMM_WORLD
         MPIERR = 0
         CALL MPI_COMM_RANK(COMM, MYPID, MPIERR)
#else
         MYPID = -1
#endif
         NULL=CHAR(0)

         CALL  FILERD(DOCFIL,NLETI,NULL,'ANGULAR DOCUMENT',IRTFLG)
         IF(IRTFLG.EQ.-1)  RETURN

         K=0
         K2=1
778      LERR=-1
         KP1=K+1
d61 3
a63 3
         IF(LERR.EQ.0)  THEN
            K=K+1
            GOTO  778
d67 10
a76 6
         CALL  FILERD
     &   (DOCFIL,NLETI,NULL,'OUTPUT FROM AP MD/RD/RN DOCUMENT',IRTFLG)
         IF (IRTFLG.EQ.-1)  RETURN
         NLIST=4
         K=0
         K2=1
a77 2
779      LERR=-1
         KP1=K+1
d79 26
a104 21
         IF(LERR.EQ.0)  THEN
	  K=K+1
          MM=X(1)
	  IF(MM.NE.0)  THEN
           Y(1)=-X(3)+360.0
           IF(MM.LT.0) THEN
            MM=-MM
            Y(1)=Y(1)+180.0
            Y(2)=180.0-AAA(2,MM)
            Y(3)=AAA(3,MM)+180.0
           ELSE
            Y(2)=AAA(2,MM)
            Y(3)=AAA(3,MM)
           ENDIF
           IF(Y(1).GE.360.0)  Y(1)=Y(1)-360.0
           IF(Y(3).GE.360.0)  Y(3)=Y(3)-360.0
           Y(0)=X(6)
           CALL  SAVD(NDOUT,Y,NLIST,IRTFLG)
           IF(IRTFLG.EQ.-1) GOTO  5
          ENDIF
          GOTO  779
d106 1
d108 2
a109 2
         IF (MYPID .LE. 0) CLOSE(NDOUT)
         IF (MYPID .LE. 0) CLOSE(NDOC)
@


1.13
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.12
log
@Remove unnecessary MPI I/O sync
@
text
@d1 1
a1 1
C++************************************************************************
d5 25
a29 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
C **************************************************************************
d38 1
a38 1
C--************************************************************************
@


1.11
log
@mpi
@
text
@d33 6
a38 3
         integer mypid, comm, ierr
         comm = MPI_COMM_WORLD
         call MPI_COMM_RANK(comm, mypid, ierr)
a82 5
#ifdef USE_MPI
           if (mypid .eq. 0) then 
              CALL  SAVD(NDOUT,Y,NLIST,IRTFLG)
           endif
#else
a83 1
#endif
a87 19
#ifdef USE_MPI
5        if (mypid .eq. 0) then 
            CALL  SAVDC
            CLOSE(NDOUT)
         else
            ibcnt = ibcnt + 1
         endif
c
c        === must use a barrier here to ensure NDOUT 
c            is closed by process 0 before all processes 
c            proceed. ===
c
#ifdef MPI_DEBUG
         write(6,111) ibcnt, mypid
         call flushfile(6)
 111     format(1x, 'VOMD: ibcnt = ', I5, ' mypid = ', I3)
#endif
         call MPI_BARRIER(comm,ierr)
#else
d89 2
a90 3
         CLOSE(NDOUT)
#endif
         CLOSE(NDOC)
@


1.10
log
@cosmetic & header
@
text
@d31 6
d80 5
d86 1
d91 19
a109 1

d112 1
@


1.9
log
@negative mirror
@
text
@d3 1
a3 1
C $$ VOMD.FOR
d15 5
a20 1
C
d23 1
a23 3
C
C $$ VOMD.FOR
C
d25 1
a25 5
C  Create angular document file from the AP MD output  07/12/93
C  Changed to new format of the AP MD output doc file 08/05/99
C psi inverted
C  Mirrored images have negative sign 10/21/99
C  Unassigned images marked by 0
d32 2
a33 2
C
         CALL  FILERD(DOCFIL,NLETI,NULL,'Angular document',IRTFLG)
d35 1
a35 1
C
d42 2
a43 2
          K=K+1
          GOTO  778
d46 1
a46 1
C
d48 2
a49 2
     &   (DOCFIL,NLETI,NULL,'Output from AP MD/RD/RN document',IRTFLG)
         IF(IRTFLG.EQ.-1)  RETURN
d53 1
d79 1
@


1.8
log
@*** empty log message ***
@
text
@d26 2
d44 2
a45 2
         K=K+1
         GOTO  778
a47 1
         LPL=K
d61 1
a61 1
	  IF(MM.GT.0)  THEN
d63 2
a64 2
           IF(MM.GT.LPL) THEN
            MM=MM-LPL
d77 1
a77 1
           ENDIF
@


1.7
log
@Corrected
@
text
@a66 2
            IF(Y(1).GE.360.0)  Y(1)=Y(1)-360.0
            IF(Y(3).GE.360.0)  Y(3)=Y(3)-360.0
d71 2
@


1.6
log
@*** empty log message ***
@
text
@a61 2
           Y(2)=AAA(2,MM)
           Y(3)=AAA(3,MM)
a63 1
            Y(2)=180.0-Y(2)
d65 2
a66 1
            Y(3)=Y(3)+180.0
d69 3
@


1.5
log
@*** empty log message ***
@
text
@d22 1
a22 1
         SUBROUTINE VOMD(MAXMEM)
@


1.4
log
@New version
@
text
@d25 1
d61 4
a64 5
           IF(MM.LE.LPL) THEN
            Y(1)=X(3)
            Y(2)=AAA(2,MM)
            Y(3)=AAA(3,MM)
           ELSE
a65 3
            Y(1)=X(3)
            Y(2)=AAA(2,MM)
            Y(3)=AAA(3,MM)
d67 2
a68 2
            Y(1)=Y(1)+180
            Y(3)=Y(3)+180
@


1.3
log
@nosave
@
text
@d24 1
a24 1
#ifdef SP_UNIX
d26 1
a26 4
#else
         INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
         COMMON  DUMMY(1024),X(3),Y(0:3),AAA(3,1)
a29 1
CNO_SAVE
d48 1
a48 1
     &   (DOCFIL,NLETI,NULL,'Output from AP MD document',IRTFLG)
d55 1
a55 1
         CALL  UNSAV(DOCFIL,K,NDOC,KP1,X,3,LERR,K2)
d57 23
a79 21
         MM=X(1)
         IF(MM.LE.LPL) THEN
         Y(1)=X(3)
         Y(2)=AAA(2,MM)
         Y(3)=AAA(3,MM)
         ELSE
         MM=MM-LPL
         Y(1)=X(3)
         Y(2)=AAA(2,MM)
         Y(3)=AAA(3,MM)
         Y(2)=180.0-Y(2)
         Y(1)=Y(1)+180
         Y(3)=Y(3)+180
         IF(Y(1).GE.360.0)  Y(1)=Y(1)-360.0
         IF(Y(3).GE.360.0)  Y(3)=Y(3)-360.0
         ENDIF
         K=K+1
         Y(0)=K
         CALL  SAVD(NDOUT,Y,NLIST,IRTFLG)
         IF(IRTFLG.EQ.-1) GOTO  5
         GOTO  779
@


1.2
log
@cpp_lines_added
@
text
@d33 1
a33 1
C
@


1.1
log
@Initial revision
@
text
@d24 3
d28 1
@
