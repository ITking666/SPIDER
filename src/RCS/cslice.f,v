head	1.14;
access;
symbols
	pre_getangas:1.12
	GPL2010:1.12
	pre_GPL2010:1.11
	pre_var_equation:1.11
	pre_fftwrings:1.11
	pre_opfiles:1.11
	src:1.11
	best-code:1.11
	x-named-regs:1.11
	x:1.11
	v13-00:1.11
	pre_GPL:1.9
	prec_CA:1.9
	noindx:1.8
	Bproc:1.6
	oct21:1.5
	last77:1.5;
locks; strict;
comment	@c @;


1.14
date	2014.01.12.19.42.17;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2012.12.05.14.58.18;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.24.13.25.22;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.20.49.47;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.18.40.12;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.20.21.09.57;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.11.14.08.41;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.11.03.13.34.16;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.11.10.23.09.13;	author yuchen;	state Exp;
branches;
next	1.5;

1.5
date	99.02.05.15.21.42;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	97.10.03.21.10.07;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.09.15.19.44.59;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	95.10.03.14.50.57;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.48.07;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.14
log
@enter
@
text
@
C++*********************************************************************
C
C  CSLICE.F         FILE NAMES LENGTHENED                 ARDEAN LEITH
C                   USED OPFILE                    NOV 00 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2012  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  CSLICE:  SELECT CENTRAL SLICE OF A 3-D IMAGE WITH ARBITRARY
C           AZIMUTH AND INCLINATION.
C
C--*********************************************************************

	SUBROUTINE CSLICE

	INCLUDE 'CMBLOCK.INC'
	INCLUDE 'CMLIMIT.INC'

        COMMON /IOBUF/ A0(NBUFSIZ)
	COMMON  BUF(1)
 
        CHARACTER(LEN=MAXNAM) :: FILNAM,FILOUT
        
        INTEGER, PARAMETER    :: LUNI = 17
        INTEGER, PARAMETER    :: LUNO = 16
        REAL, PARAMETER       :: PI   = 3.14159

        MAXIM = 0
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNI,'O',IFORM,NX,NY,NZ,
     &                   MAXIM,'INPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

	IF (IFORM .NE. 3) THEN
           CALL ERRT(101,'OPERATION ONLY WORKS ON VOLUMES',NDUM)
           RETURN
        ENDIF

        FMININ = FMIN
	NY3    = NY*NZ
	S3     = SQRT(3.)
	MAXREC = NY*NZ
	NX2    = NX*S3+0.5
	NY2    = NY*S3+0.5
	NXH    = NX2/2+1
	NYH    = NY2/2+1

        MAXIM  = 0
	IFORM  = 1
        CALL OPFILEC(0,.TRUE.,FILOUT,LUNO,'U',IFORM,NX2,NY2,1,
     &                   MAXIM,'OUTPUT',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

	CALL RDPRM1S(PHI,NOT_USED,'AZIMUTH',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

	CALL RDPRM1S(THETA,NOT_USED,'INCLINATION',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000

	PHI   = PHI   * PI/180.
	THETA = THETA * PI/180.

 	KXM   = NX/2+1
 	KYM   = NY/2+1
 	KZM   = -9999   !NZ/2+1

	CALL RDPRI3S(KXM,KYM,KZM,NOT_USED,
     &               'X,Y, & Z POSITION',IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 9000
 
        IF (KZM == -9999) THEN
C           NOT ENTERED, MAYBE LEGACY PROCEDURE
 	    KZM   = NZ/2+1
	    CALL RDPRI1S(KZM,NDUM,NOT_USED,'Z POSITION',IRTFLG)
            IF (IRTFLG .NE. 0) GOTO 9000
        ENDIF

	SPHI   = SIN(PHI)
	CPHI   = COS(PHI)
	STHETA = SIN(THETA)
	CTHETA = COS(THETA)
	XFACT  = CTHETA*SPHI
	YFACT  = CTHETA*CPHI

C       DIMENSIONS OF 2-D FILE ARE NX2 BY NY2
	DO IY=1,NY2
           DO IX=1,NX2
              X = KXM + ((FLOAT(IX-NXH))*CPHI)+((FLOAT(IY-NYH))*XFACT)
              Y = KYM - ((FLOAT(IX-NXH))*SPHI)+((FLOAT(IY-NYH))*YFACT)
              Z = KZM + (FLOAT(IY-NYH))*STHETA

C             DETERMINE THE 8 SURROUNDING COEFFICIENTS
              KXBOT = X
              KXTOP = KXBOT+1
              XDEC  = X -(FLOAT(KXBOT))
              XREM  = 1. -XDEC

              KYBOT = Y
              KYTOP = KYBOT+1
              YDEC  = Y -(FLOAT(KYBOT))
              YREM  = 1. -YDEC

              KZBOT = Z
              KZTOP = KZBOT+1
              ZDEC  = Z -(FLOAT(KZBOT))
              ZREM  = 1. -ZDEC

C             CHECK IF COORDINATES ARE INSIDE THE VOLUME;  
C             CONTINUE IF THEY ARE, OTHERWISE, SET = 0.
              IF (KXTOP .LE. NX .AND. KYTOP .LE. NY .AND.
     &            KZTOP .LE. NZ .AND.
     &            KXBOT .GE. 1  .AND. KYBOT .GE. 1 .AND. KZBOT .GE. 1)
     &            THEN
                 CONTINUE
              ELSE
                 BUF(IX) = FMININ
                 CYCLE
              ENDIF

              IREC1 = (KZBOT-1) * NY+KYBOT
              IF (IREC1 > MAXREC) THEN
                 CALL ERRT(102,RECORD NUMBER OUT OF VOLUME,IREC1)
                 GOTO 9000
              ENDIF

              CALL REDLIN(LUNI,A0,NX,IREC1)

              PT1 = A0(KXBOT)
              PT2 = A0(KXTOP)

              IREC2 = (KZBOT-1)*NY+KYTOP
              IF (IREC2 > MAXREC)  THEN
                 CALL ERRT(102,RECORD NUMBER OUT OF VOLUME,IREC2)
                 GOTO 9000
              ENDIF

              CALL REDLIN(LUNI,A0,NX,IREC2)
              PT3 = A0(KXBOT)
              PT4 = A0(KXTOP)

              IREC3 = (KZTOP-1)*NY+KYBOT
              IF (IREC3 > MAXREC)  THEN
                 CALL ERRT(102,RECORD NUMBER OUT OF VOLUME,IREC3)
                 GOTO 9000
              ENDIF

              CALL REDLIN(LUNI,A0,NX,IREC3)
              PT5 = A0(KXBOT)
              PT6 = A0(KXTOP)

              IREC4 = (KZTOP-1)*NY+KYTOP
              IF (IREC4 > MAXREC)  THEN
                 CALL ERRT(102,RECORD NUMBER OUT OF VOLUME,IREC4)
                 GOTO 9000
              ENDIF

              CALL REDLIN(LUNI,A0,NX,IREC4)
              PT7 = A0(KXBOT)
              PT8 = A0(KXTOP)

C             WRITE(4,8888)PT1,PT2,PT3,PT4,PT5,PT6,PT7,PT8
C8888         FORMAT(' PTS 1-8 = ',8F7.3)

C             INTERPOLATE
	      BUF(IX) = ZREM*(XDEC*(YREM*PT2+YDEC*PT4) +
     &           XREM*(YREM*PT1+YDEC*PT3))+
     &           ZDEC*(XDEC*(YREM*PT6+YDEC*PT8)+
     &           XREM*(YREM*PT5+YDEC*PT7))

	   ENDDO
	   CALL WRTLIN(LUNO,BUF,NX2,IY)

	ENDDO

9000	CLOSE(LUNO)
	CLOSE(LUNI)

	END
@


1.13
log
@rewrite
@
text
@d87 1
a87 1
     &               'ENTER X,Y, & Z POSITION',IRTFLG)
d93 1
a93 1
	    CALL RDPRI1S(KZM,NDUM,NOT_USED,'ENTER Z POSITION',IRTFLG)
@


1.12
log
@GPL_2010
@
text
@d4 2
a5 2
C  CSLICE.F                                FILE NAMES LENGTHENED AL
C                                   USED OPFILE NOV 00 ARDEAN LEITH
d11 1
a11 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d29 2
a30 2
C  CSLICE:     SELECT CENTRAL SLICE OF A 3-D IMAGE WITH ARBITRARY
C		        AZIMUTH AND INCLINATION.
d32 1
a32 1
C--*******************************************************************
d40 1
a40 1
	COMMON BUF(1)
d42 1
a42 2
        CHARACTER(LEN=MAXNAM)   ::  FILNAM,FILOUT
        COMMON /COMMUN/ FILNAM,FILOUT
d44 3
a46 3
	DATA LUNI/17/,LUNO/16/,PI/3.14159/

        IERR  = 0
d49 1
a49 1
        CALL OPFILEC(0,.TRUE.,FILNAM,LUNI,'O',IFORM,NSAM,NROW,NSLICE,
d54 1
a54 1
           CALL ERRT(2,'CSLICE',NDUM)
d59 1
a59 1
	NROW3  = NROW*NSLICE
d61 5
a65 5
	MAXREC = NROW*NSLICE
	NSAM2  = NSAM*S3+0.5
	NROW2  = NROW*S3+0.5
	NSAMH  = NSAM2/2+1
	NROWH  = NROW2/2+1
d69 1
a69 1
        CALL OPFILEC(0,.TRUE.,FILOUT,LUNO,'U',IFORM,NSAM2,NROW2,1,
d73 12
a84 2
	CALL RDPRM(PHI,NOT_USED,'AZIMUTH')
	CALL RDPRM(THETA,NOT_USED,'INCLINATION')
d86 13
a98 9
	PHI   = PHI*PI/180.
	THETA = THETA*PI/180.
C	KXM   = NSAM/2+1
C	KYM   = NROW/2+1
C	KZM   = NSLICE/2+1
	CALL RDPRMI(KXM,KYM,NOT_USED,'ENTER X,Y POSITION')
	CALL RDPRMI(KZM,NDUM,NOT_USED,'ENTER Z POSITION')
	SPHI  = SIN(PHI)
	CPHI  = COS(PHI)
d104 6
a109 6
C       DIMENSIONS OF 2-D FILE ARE NSAM2 BY NROW2
	DO IY=1,NROW2
           DO 200 IX=1,NSAM2
              X = KXM+((FLOAT(IX-NSAMH))*CPHI)+((FLOAT(IY-NROWH))*XFACT)
              Y = KYM-((FLOAT(IX-NSAMH))*SPHI)+((FLOAT(IY-NROWH))*YFACT)
              Z = KZM+(FLOAT(IY-NROWH))*STHETA
d114 2
a115 2
              XDEC = X-(FLOAT(KXBOT))
              XREM = 1.-XDEC
d119 2
a120 2
              YDEC = Y-(FLOAT(KYBOT))
              YREM = 1.-YDEC
d124 2
a125 2
              ZDEC = Z-(FLOAT(KZBOT))
              ZREM = 1.-ZDEC
d129 15
a143 5
              IF (KXTOP.LE.NSAM.AND.KYTOP.LE.NROW.AND.
     &           KZTOP.LE.NSLICE.AND.
     &           KXBOT.GE.1.AND.KYBOT.GE.1.AND.KZBOT.GE.1)GOTO 100
              BUF(IX) = FMININ
              GOTO 200
d145 1
a146 5
100           IREC1=(KZBOT-1)*NROW+KYBOT
              IF (IREC1.GT.MAXREC) IERR=7
              IF (IERR.NE.0) GOTO 8000

              CALL REDLIN(LUNI,A0,NSAM,IREC1)
d150 7
a156 4
              IREC2=(KZBOT-1)*NROW+KYTOP
              IF (IREC2.GT.MAXREC) IERR=7
              IF (IERR.NE.0) GOTO 8000
              CALL REDLIN(LUNI,A0,NSAM,IREC2)
d160 7
a166 4
              IREC3=(KZTOP-1)*NROW+KYBOT
              IF (IREC3.GT.MAXREC) IERR=7
              IF (IERR.NE.0) GOTO 8000
              CALL REDLIN(LUNI,A0,NSAM,IREC3)
d170 5
d176 1
a176 4
              IREC4=(KZTOP-1)*NROW+KYTOP
              IF (IREC4.GT.MAXREC) IERR=7
              IF (IERR.NE.0) GOTO 8000
              CALL REDLIN(LUNI,A0,NSAM,IREC4)
d184 1
a184 1
	      BUF(IX) = ZREM*(XDEC*(YREM*PT2+YDEC*PT4)+
d189 2
a191 2
200	   CONTINUE
	   CALL WRTLIN(LUNO,BUF,NSAM2,IY)
a192 3
	GOTO 9000

8000	CALL ERRT(IERR,'CSLICE',NE)
d196 1
a196 1
        RETURN
@


1.11
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.10
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a7 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
a31 1
C **************************************************************************
@


1.9
log
@opfilec
@
text
@d2 1
d8 1
d10 1
d12 24
d42 1
@


1.8
log
@nloop,iloop_removed
@
text
@d30 1
a30 1
        CHARACTER *81   FILNAM,FILOUT
d38 1
a38 1
        CALL OPFILE(.TRUE.,FILNAM,LUNI,'O',IFORM,NSAM,NROW,NSLICE,
d58 1
a58 1
        CALL OPFILE(.TRUE.,FILOUT,LUNO,'U',IFORM,NSAM2,NROW2,1,
@


1.7
log
@used opfile, fixed for longer > 540 nsam, cosmetic
@
text
@d62 2
a63 2
	CALL RDPRM(PHI,NLOOP,ILOOP,'AZIMUTH')
	CALL RDPRM(THETA,NLOOP,ILOOP,'INCLINATION')
d70 2
a71 2
	CALL RDPRMI(KXM,KYM,NLOOP,ILOOP,'ENTER X,Y POSITION')
	CALL RDPRMI(KZM,NDUM,NLOOP,ILOOP,'ENTER Z POSITION')
@


1.6
log
@a
@
text
@d4 3
a6 2
C  CSLICE.FOR
C                                             FILE NAMES LENGTHENED
d24 5
d30 1
a30 10

	COMMON ADUM(80),A0(1270)
	COMMON /UNITS/LUN,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT

	COMMON /MASTER/ NSAMC,NROWC,IREC,NLABEL,IFORM,IMAMI,FMAX,FMIN,
     &                  AV,SIG,IHIST
	COMMON /BATCH/ IBCNT,NLOOP,IABSLP,ILOOP

	DIMENSION       BUF(1)
	EQUIVALENCE     (A0(520),BUF)
a31 3

        CHARACTER *81 FILNAM,FILOUT
        CHARACTER *1  NULL
d33 1
a33 1
	DATA LUNI/7/,LUNO/6/,PI/3.14159/
d35 1
a35 1
        NULL=CHAR(0)
d37 3
a39 3
	IERR=0

	CALL FILERD(FILNAM,NLET,NULL,'INPUT ',IRTFLG)
d42 18
a59 7
	CALL OPENF(FILNAM,LUNI,NSAM,NROW,'OLD',NF,NSLICE)
	IF(IFORM.NE.3)IERR=2
	IF(NF.EQ.1)IERR=4
	IF(IERR.NE.0)GOTO 8000
	NROW3=NROW*NSLICE
C	IF(IMAMI.EQ.0)CALL NORM(LUNI,NSAM,NROW3,FMAX,FMIN,AV)
	CALL FILERD(FILOUT,NLET,NULL,'OUTPUT',IRTFLG)
a61 10
	IFORM = 1
	S3 = SQRT(3.)
	MAXREC=NROW*NSLICE
	NSAM2=NSAM*S3+0.5
	NROW2=NROW*S3+0.5
	NSAMH=NSAM2/2+1
	NROWH=NROW2/2+1
	CALL OPENF(FILOUT,LUNO,NSAM2,NROW2,'UNKNOWN',NF,1)
	IF(NF.EQ.1)IERR=4
	IF(IERR.NE.0)GOTO 8000
d65 1
a65 2

	PHI = PHI*PI/180.
d67 3
a69 3
C	KXM = NSAM/2+1
C	KYM = NROW/2+1
C	KZM = NSLICE/2+1
d72 2
a73 2
	SPHI = SIN(PHI)
	CPHI = COS(PHI)
d76 2
a77 2
	XFACT = CTHETA*SPHI
	YFACT = CTHETA*CPHI
d79 1
a79 2
C  DIMENSIONS OF 2-D FILE ARE NSAM2 BY NROW2

d81 68
a148 74
	DO 200 IX=1,NSAM2
	X = KXM+((FLOAT(IX-NSAMH))*CPHI)+((FLOAT(IY-NROWH))*XFACT)
	Y = KYM-((FLOAT(IX-NSAMH))*SPHI)+((FLOAT(IY-NROWH))*YFACT)
	Z = KZM+(FLOAT(IY-NROWH))*STHETA

C  DETERMINE THE 8 SURROUNDING COEFFICIENTS

	KXBOT = X
	KXTOP = KXBOT+1
	XDEC = X-(FLOAT(KXBOT))
	XREM = 1.-XDEC

	KYBOT = Y
	KYTOP = KYBOT+1
	YDEC = Y-(FLOAT(KYBOT))
	YREM = 1.-YDEC

	KZBOT = Z
	KZTOP = KZBOT+1
	ZDEC = Z-(FLOAT(KZBOT))
	ZREM = 1.-ZDEC


C   CHECK IF COORDINATES ARE INSIDE THE VOLUME;  CONTINUE IF THEY ARE,
C   OTHERWISE, SET = 0.


	IF(KXTOP.LE.NSAM.AND.KYTOP.LE.NROW.AND.KZTOP.LE.NSLICE.AND.
     &     KXBOT.GE.1.AND.KYBOT.GE.1.AND.KZBOT.GE.1)GOTO 100
	BUF(IX) = FMIN
	GOTO 200


100	IREC1=(KZBOT-1)*NROW+KYBOT
	IF(IREC1.GT.MAXREC)IERR=7
	IF(IERR.NE.0)GOTO 8000
	CALL REDLIN(LUNI,A0,NSAM,IREC1)
	PT1 = A0(KXBOT)
	PT2 = A0(KXTOP)


	IREC2=(KZBOT-1)*NROW+KYTOP
	IF(IREC2.GT.MAXREC)IERR=7
	IF(IERR.NE.0)GOTO 8000
	CALL REDLIN(LUNI,A0,NSAM,IREC2)
	PT3 = A0(KXBOT)
	PT4 = A0(KXTOP)


	IREC3=(KZTOP-1)*NROW+KYBOT
	IF(IREC3.GT.MAXREC)IERR=7
	IF(IERR.NE.0)GOTO 8000
	CALL REDLIN(LUNI,A0,NSAM,IREC3)
	PT5 = A0(KXBOT)
	PT6 = A0(KXTOP)


	IREC4=(KZTOP-1)*NROW+KYTOP
	IF(IREC4.GT.MAXREC)IERR=7
	IF(IERR.NE.0)GOTO 8000
	CALL REDLIN(LUNI,A0,NSAM,IREC4)
	PT7 = A0(KXBOT)
	PT8 = A0(KXTOP)


C	WRITE(4,8888)PT1,PT2,PT3,PT4,PT5,PT6,PT7,PT8
C8888	FORMAT(' PTS 1-8 = ',8F7.3)

C    INTERPOLATE

	BUF(IX) = ZREM*(XDEC*(YREM*PT2+YDEC*PT4)+
     &         XREM*(YREM*PT1+YDEC*PT3))+
     &         ZDEC*(XDEC*(YREM*PT6+YDEC*PT8)+
     &         XREM*(YREM*PT5+YDEC*PT7))
d151 2
a152 2
200	CONTINUE
	CALL WRTLIN(LUNO,BUF,NSAM2,IY)
@


1.5
log
@CNO_SAVE
@
text
@d23 1
a23 1
CNO_SAVE 
@


1.4
log
@*** empty log message ***
@
text
@d23 2
d29 1
a29 1
     1                  AV,SIG,IHIST
d116 1
a116 1
     1     KXBOT.GE.1.AND.KYBOT.GE.1.AND.KZBOT.GE.1)GOTO 100
d159 3
a161 3
     1         XREM*(YREM*PT1+YDEC*PT3))+
     2         ZDEC*(XDEC*(YREM*PT6+YDEC*PT8)+
     3         XREM*(YREM*PT5+YDEC*PT7))
@


1.3
log
@removed unused COMMON /PROC/
@
text
@d85 1
a85 1
	DO 300 IY=1,NROW2
d164 1
a164 1
300	CONTINUE
@


1.2
log
@non f77 continuation lines
@
text
@a28 1
	COMMON /PROC/ IPROC,ITI,IWHERE,INFLUN
@


1.1
log
@Initial revision
@
text
@d27 1
a27 1
     1  AV,SIG,IHIST
d31 2
a32 2
	DIMENSION BUF(1)
	EQUIVALENCE(A0(520),BUF)
d39 1
d66 2
a67 2
	CALL RDPRM(PHI,NLOOP,ILOOP,'AZIMUTH$')
	CALL RDPRM(THETA,NLOOP,ILOOP,'INCLINATION$')
d75 2
a76 2
	CALL RDPRMI(KXM,KYM,NLOOP,ILOOP,'ENTER X,Y POSITION$')
	CALL RDPRMI(KZM,NDUM,NLOOP,ILOOP,'ENTER Z POSITION$')
d115 1
a115 1
	1  KXBOT.GE.1.AND.KYBOT.GE.1.AND.KZBOT.GE.1)GOTO 100
d153 1
a153 1
C8888	FORMAT(1X,'PTS 1-8 = ',8F7.3)
d158 3
a160 3
	1         XREM*(YREM*PT1+YDEC*PT3))+
	2         ZDEC*(XDEC*(YREM*PT6+YDEC*PT8)+
	3         XREM*(YREM*PT5+YDEC*PT7))
d172 1
@
