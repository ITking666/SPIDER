head	1.25;
access;
symbols
	healthdept_2018:1.25
	pre_getangas:1.24
	GPL2010:1.24
	pre_GPL2010:1.23
	pre_var_equation:1.23
	pre_fftwrings:1.23
	pre_opfiles:1.23
	src:1.23
	best-code:1.23
	x-named-regs:1.23
	x:1.23
	v13-00:1.23
	pre_GPL:1.21
	prec_CA:1.21
	noindx:1.13
	Bproc:1.11
	oct21:1.9
	last77:1.8;
locks; strict;
comment	@c @;


1.25
date	2018.10.03.14.33.56;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2010.06.24.13.25.10;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2005.10.17.20.20.48;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2005.10.17.18.13.25;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2003.10.08.18.30.10;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.30.13.16.16;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2003.06.04.16.43.25;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2003.05.29.17.12.05;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2003.05.28.15.20.00;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.05.28.13.04.39;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.02.20.21.41.54;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.20.21.40.56;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.01.02.18.03.23;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.19.15.55.07;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	99.12.07.15.15.29;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.11.10.23.09.09;	author yuchen;	state Exp;
branches;
next	1.9;

1.9
date	99.06.03.20.50.46;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	97.10.17.15.18.31;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	97.10.01.21.06.43;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.02.07.18.50.41;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	95.03.14.20.44.11;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	95.02.16.20.08.37;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	95.02.02.21.13.39;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.08.10.15.39.06;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.07.11.19.34.00;	author pawel;	state Exp;
branches;
next	;


desc
@@


1.25
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C   BPCQP         OPFILEC                         FEB 03 ARDEAN LEITH
C                 PARTITION                       MAY 03 ARDEAN LEITH
C                 PARTITION                       SEP 03 ARDEAN LEITH
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  BPCQP(PROJ,W,NNNN,NSAM,NROW,CB,NX3D,NY3D,NZC,ILIST,DM,SS,
C        NANG,NANGP,SNR,FINPAT,FINPIC)                                                                    *
C                                                                      *
C  PURPOSE:    VOLUME IN MEMORY                                                        *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE BPCQP(PROJ,W,NNNN,NSAM,NROW,CB,NX3D,NY3D,NZC,
     &           ILIST,ILISTP,DM,SS,NANG,NANGP,SNR,FINPAT,FINPIC,INPROJ)

        DIMENSION   PROJ(NNNN,NROW),CB(NX3D,NY3D,NZC),W(NNNN/2,NROW)
        DIMENSION   ILISTP(NANGP),DM(9,NANG),SS(6,NANG),ILIST(NANG)

        LOGICAL          :: PARTITION
        CHARACTER(LEN=*) :: FINPIC,FINPAT

        NLET  = LEN(FINPAT)

c$omp   parallel do private(i,j,k)
        DO K=1,NZC
           DO J=1,NY3D
              DO I=1,NX3D
                 CB(I,J,K) = 0.0
	      ENDDO
	   ENDDO
	ENDDO

        PARTITION = (NANG .NE. NANGP)

        DO K=1,NANGP
           IANGNOW = K
           IF (PARTITION) IANGNOW = ILISTP(K)

           CALL FILGET(FINPAT,FINPIC,NLET,ILISTP(K),IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

           MAXIM = 0
           CALL OPFILEC(0,.FALSE.,FINPIC,INPROJ,'O',IFORM,LSAM,LROW,NSL,
     &               MAXIM,' ',.FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN

C          LOAD THE PROJECTION, DO NOT USE REDVOL
           DO J=1,NROW
              CALL REDLIN(INPROJ,PROJ(1,J),NSAM,J)
           ENDDO
           CLOSE(INPROJ)

           IF (SNR .GT. 0.0) THEN
              CALL WTF(ILIST,PARTITION,PROJ,W,NNNN,NSAM,NROW,SS,
     &                 NANG,SNR,IANGNOW)
           ELSEIF (SNR .LT. 0.0) THEN
              CALL WTM(ILIST,PARTITION,PROJ,W,NNNN,NSAM,NROW,SS,
     &                 NANG,-SNR,IANGNOW)
           ENDIF

           CALL BPCQ(PROJ,NNNN,NSAM,NROW,CB,NX3D,NY3D,NZC,DM(1,IANGNOW))
	ENDDO

        END
@


1.24
log
@GPL_2010
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.23
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.22
log
@HRI GPL License used
@
text
@a8 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.21
log
@bad ilist
@
text
@d10 24
@


1.20
log
@partition bug
@
text
@d30 2
a31 2
        DIMENSION       PROJ(NNNN,NROW),CB(NX3D,NY3D,NZC),W(NNNN/2,NROW)
        DIMENSION       ILISTP(NANGP),DM(9,NANG),SS(6,NANG),ILIST(NANG)
d33 1
a33 1
        LOGICAL                             :: PARTITION
d53 1
a53 1
           CALL FILGET(FINPAT,FINPIC,NLET,IANGNOW,IRTFLG)
@


1.19
log
@for partition
@
text
@d6 1
d33 1
d47 2
d50 2
a51 1
           IANGNOW = ILISTP(K)
d68 2
a69 1
              CALL WTF(ILIST,PROJ,W,NNNN,NSAM,NROW,SS,NANG,SNR,IANGNOW)
d71 2
a72 1
              CALL WTM(ILIST,PROJ,W,NNNN,NSAM,NROW,SS,NANG,-SNR,IANGNOW)
@


1.18
log
@partition
@
text
@d27 1
a27 1
     &                 ILIST,DM,SS,NANG,NANGP,SNR,FINPAT,FINPIC,INPROJ)
d30 1
a30 1
        DIMENSION       ILIST(NANGP),DM(9,NANG),SS(6,NANG)
d46 3
a48 1
           CALL FILGET(FINPAT,FINPIC,NLET,ILIST(K),IRTFLG)
d62 4
a65 7
           IANGNOW = K
           IF (NANG .NE. NANGP) IANGNOW = ILIST(K)

           IF (SNR .GT. 0.0)  THEN
              CALL WTF(PROJ,W,NNNN,NSAM,NROW,SS,NANG,SNR,IANGNOW)
           ELSEIF (SNR .LT. 0.0)  THEN
              CALL WTM(PROJ,W,NNNN,NSAM,NROW,SS,NANG,-SNR,IANGNOW)
@


1.17
log
@partition & alloc.
@
text
@d4 2
a5 1
C   BPCQP          OPFILEC                         FEB 03 ARDEAN LEITH
d17 1
a17 1
C        NANG,SNR,FINPAT,FINPIC)                                                                    *
d27 1
a27 1
     &                 ILIST,DM,SS,NANG,SNR,FINPAT,FINPIC,INPROJ)
d30 1
a30 1
        DIMENSION       ILIST(NANG),DM(9,NANG),SS(6,NANG)
d45 1
a45 1
        DO K=1,NANG
d54 1
a54 1
C          LOAD THE SLICE, DO NOT USE REDVOL
d60 3
d64 1
a64 1
              CALL WTF(PROJ,W,NNNN,NSAM,NROW,SS,NANG,SNR,K)
d66 1
a66 1
              CALL WTM(PROJ,W,NNNN,NSAM,NROW,SS,NANG,-SNR,K)
d69 1
a69 1
           CALL BPCQ(PROJ,NNNN,NSAM,NROW,CB,NX3D,NY3D,NZC,DM(1,K))
@


1.16
log
@partition changes
@
text
@d4 1
a4 2
C   BPCQP                                                              *
C                  OPFILEC                         FEB 03 ARDEAN LEITH
d26 1
a26 1
     &                 ILIST,DM,SS,NANG,NANGP,SNR,FINPAT,FINPIC,INPROJ)
d29 1
a29 1
        DIMENSION       ILIST(NANGP),DM(9,NANG),SS(6,NANG)
d44 1
a44 2
        DO K=1,NANGP
           IMNOW = ILIST(K)
a58 3
           IANGNOW = K
           IF (NANG .NE. NANGP) IANGNOW = ILIST(K)

d60 1
a60 1
              CALL WTF(PROJ,W,NNNN,NSAM,NROW,SS,NANG,SNR,IANGNOW)
d62 1
a62 1
              CALL WTM(PROJ,W,NNNN,NSAM,NROW,SS,NANG,-SNR,IANGNOW)
d65 1
a65 1
           CALL BPCQ(PROJ,NNNN,NSAM,NROW,CB,NX3D,NY3D,NZC,DM(1,IANGNOW))
@


1.15
log
@*** empty log message ***
@
text
@d19 1
a19 1
C  PURPOSE:                                                            *
d26 2
a27 2
        SUBROUTINE  BPCQP(PROJ,W,NNNN,NSAM,NROW,CB,NX3D,NY3D,NZC,
     &                    ILIST,DM,SS,NANG,SNR,FINPAT,FINPIC,INPROJ)
d30 1
a30 1
        DIMENSION       ILIST(NANG),DM(9,NANG),SS(6,NANG)
d32 1
a32 1
        CHARACTER*(*)   FINPIC,FINPAT
d37 4
a40 4
        DO    K=1,NZC
           DO    J=1,NY3D
              DO    I=1,NX3D
                 CB(I,J,K)=0.0
d45 2
a46 1
        DO K=1,NANG
d49 1
d55 1
d61 3
d65 1
a65 1
              CALL WTF(PROJ,W,NNNN,NSAM,NROW,SS,NANG,SNR,K)
d67 1
a67 1
              CALL WTM(PROJ,W,NNNN,NSAM,NROW,SS,NANG,-SNR,K)
d70 1
a70 1
           CALL BPCQ(PROJ,NNNN,NSAM,NROW,CB,NX3D,NY3D,NZC,DM(1,K))
@


1.14
log
@opfilec
@
text
@d23 1
a23 1
23456789012345678901234567890123456789012345678901234567890123456789012
@


1.13
log
@finpat
@
text
@d5 1
d23 1
a23 2
C        0         2         3         4         5         6         7 *
C23456789012345678901234567890123456789012345678901234567890123456789012
d49 1
a49 1
           CALL OPFILE(.FALSE.,FINPIC,INPROJ,'O',IFORM,LSAM,LROW,NSL,
@


1.12
log
@openfb--> opfile & cosmetic
@
text
@d14 3
a16 2
C  BPCQP(PROJ,W,NNNN,NSAM,NROW,CB,NX3D,NY3D,NZC,
C        ILIST,DM,SS,NANG,SNR,NOUT)                                                                    *
d27 1
a27 1
     &                    ILIST,DM,SS,NANG,SNR,NOUT)
a30 2
        CHARACTER*80    FINPIC,FINPAT
        COMMON /F_SPEC/ FINPAT,NLET,FINPIC
d32 1
a32 1
        DATA  INPROJ/99/
d34 3
a36 1
c$omp parallel do private(i,j,k)
d46 2
a47 1
           CALL FILGET(FINPAT,FINPIC,NLET,ILIST(K),INTFLAG)
d53 1
a53 1
           DO    J=1,NROW
d58 4
a61 4
           IF (SNR.GT.0.0)  THEN
		CALL WTF(PROJ,W,NNNN,NSAM,NROW,SS,NANG,SNR,K)
           ELSEIF (SNR.LT.0.0)  THEN
		CALL WTM(PROJ,W,NNNN,NSAM,NROW,SS,NANG,-SNR,K)
@


1.11
log
@header
@
text
@d4 1
a5 1
C                                                                      *
d14 2
a15 1
C                                                                      *
a16 1
C                                                                      *
d25 8
a32 9
        SUBROUTINE  BPCQP
     &  (PROJ,W,NNNN,NSAM,NROW,CB,NX3D,NY3D,NZC,
     &          ILIST,DM,SS,NANG,SNR,NOUT)
        DIMENSION  PROJ(NNNN,NROW),CB(NX3D,NY3D,NZC),W(NNNN/2,NROW)
        DIMENSION  ILIST(NANG),DM(9,NANG),SS(6,NANG)
        COMMON     DUMMY(80),BUF(1024)
        CHARACTER*80  FINPIC,FINPAT
        COMMON  /F_SPEC/  FINPAT,NLET,FINPIC
C
a34 1
C
d37 5
a41 3
        DO    J=1,NY3D
        DO    I=1,NX3D
        CB(I,J,K)=0.0
d43 20
d64 1
a64 24
	ENDDO
c
        DO    K=1,NANG
        CALL  FILGET(FINPAT,FINPIC,NLET,ILIST(K),INTFLAG)
        CALL  OPENFB(BUF,FINPIC,INPROJ,LSAM,LROW,'O',NF,NSL)
        IF(NF.NE.2)  THEN
        write(nout,2032)   FINPIC
2032    FORMAT(' File not found ',A80,/,' Operation abandoned')
        RETURN
        ENDIF
        DO    J=1,NROW
        CALL  REDLIN(INPROJ,PROJ(1,J),NSAM,J)
	ENDDO
        CLOSE(INPROJ)
C
        IF(SNR.GT.0.0)  THEN
		CALL  WTF(PROJ,W,NNNN,NSAM,NROW,SS,NANG,SNR,K)
	ELSEIF(SNR.LT.0.0)  THEN
		CALL  WTM(PROJ,W,NNNN,NSAM,NROW,SS,NANG,-SNR,K)
	ENDIF
C
        CALL  BPCQ(PROJ,NNNN,NSAM,NROW,CB,NX3D,NY3D,NZC,DM(1,K))
	ENDDO
c 8       CONTINUE
@


1.10
log
@a
@
text
@d1 24
@


1.9
log
@OpenMP
@
text
@d11 1
a11 1
CNO_SAVE
@


1.8
log
@R
@
text
@d13 1
a13 1
c$doacross local(i,j,k)
@


1.7
log
@*** empty log message ***
@
text
@d24 1
a24 1
        CALL  OPENFB(BUF,FINPIC,INPROJ,LSAM,LROW,'R',NF,NSL)
@


1.6
log
@new version
@
text
@d14 7
a20 4
        DO  1  K=1,NZC
        DO  1  J=1,NY3D
        DO  1  I=1,NX3D
1       CB(I,J,K)=0.0
d22 1
a22 1
        DO  8  K=1,NANG
d30 3
a32 2
        DO  61  J=1,NROW
61      CALL  REDLIN(INPROJ,PROJ(1,J),NSAM,J)
d42 2
a43 1
8       CONTINUE
@


1.5
log
@mp
@
text
@d1 8
a8 8
	SUBROUTINE  BPCQP
     &	(PROJ,W,NSAM,NROW,CB,NX3D,NY3D,NZC,
     &		ILIST,DM,SS,NANG,SNR,NOUT,WORK)
	DIMENSION  PROJ(NSAM,NROW),W(NSAM,NROW),CB(NX3D,NY3D,NZC)
	DIMENSION  ILIST(NANG),DM(9,NANG),SS(6,NANG),WORK(*)
	COMMON     DUMMY(80),BUF(1024)
	CHARACTER*80  FINPIC,FINPAT
	COMMON  /F_SPEC/  FINPAT,NLET,FINPIC
d10 1
a10 1
	DATA  INPROJ/99/
d14 4
a17 4
	DO  1  K=1,NZC
	DO  1  J=1,NY3D
	DO  1  I=1,NX3D
1	CB(I,J,K)=0.0
d19 16
a34 7
	DO  8  K=1,NANG
	CALL  FILGET(FINPAT,FINPIC,NLET,ILIST(K),INTFLAG)
	CALL  OPENFB(BUF,FINPIC,INPROJ,LSAM,LROW,'R',NF,NSL)
	IF(NF.NE.2)  THEN
	write(nout,2032)   FINPIC
2032	FORMAT(' File not found ',A80,/,' Operation abandoned')
	RETURN
a35 3
	DO  61  J=1,NROW
61 	CALL  REDLIN(INPROJ,PROJ(1,J),NSAM,J)
	CLOSE(INPROJ)
d37 3
a39 5
	IF(SNR.GT.0.0)  CALL  WTF(PROJ,W,NSAM,NROW,SS,NANG,SNR,K,WORK)
c
	CALL  BPCQ(PROJ,NSAM,NROW,CB,NX3D,NY3D,NZC,DM(1,K))
8	CONTINUE
	END
@


1.4
log
@nosave mp
@
text
@d13 1
d31 1
a31 1
	IF(SNR.NE.0.0)  CALL  WTF(PROJ,W,NSAM,NROW,SS,NANG,SNR,K,WORK)
@


1.3
log
@nosave
@
text
@d2 4
a5 3
     &	(PROJ,NSAM,NROW,CB,NX3D,NY3D,NZC,ILIST,DM,NANG,NOUT)
	DIMENSION  PROJ(NSAM,NROW),CB(NX3D,NY3D,NZC)
	DIMENSION  ILIST(NANG),DM(9,NANG)
d29 2
@


1.2
log
@?
@
text
@d10 1
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
61 	CALL  REDLIN(INPROJ,PROJ(1,K2),NSAM,J)
@
