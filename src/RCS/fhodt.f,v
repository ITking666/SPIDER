head	1.14;
access;
symbols
	pre_mrcs:1.14
	healthdept_2018:1.14
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.11
	prec_CA:1.11
	noindx:1.11
	Bproc:1.11
	oct21:1.8
	last77:1.8;
locks; strict;
comment	@c @;


1.14
date	2018.10.03.14.34.05;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.25.36;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.21.07.46;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.03.24.18.43.03;	author bimal;	state Exp;
branches;
next	1.10;

1.10
date	99.12.27.17.10.16;	author bimal;	state Exp;
branches;
next	1.9;

1.9
date	99.11.10.23.09.17;	author yuchen;	state Exp;
branches;
next	1.8;

1.8
date	98.08.13.21.28.54;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	98.01.08.15.47.47;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.10.31.19.32.15;	author hedget;	state Exp;
branches;
next	1.5;

1.5
date	97.10.06.20.43.35;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.07.11.13.50.37;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.07.10.15.53.05;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	97.07.09.19.03.31;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	97.07.09.18.59.23;	author pawel;	state Exp;
branches;
next	;


desc
@CE OD
@


1.14
log
@email_health_dept
@
text
@C++*********************************************************************
C
C $$ FHODT.FOR
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C
C IMAGE_PROCESSING_ROUTINE
C
C        1         2         3         4         5         6         7
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C
C--*********************************************************************
C
C $$ FHODT.FOR
C
        FUNCTION  FHODT(B,N,LENH,XI,H1,H2,A,AVR)
        DIMENSION  XI(N),H1(LENH),H2(LENH)

C       AVR is "-average"

        AVR=0.0
        DO    I=1,N
           AVR=AVR-ALOG10(XI(I)+B)
        ENDDO
        AVR=AVR/N
        SVR=0.0
        DO    I=1,N
           Q=ALOG10(XI(I)+B)+AVR
           SVR=SVR+Q*Q
        ENDDO
        A=SQRT(N/SVR)

        DO    I=1,LENH
           H2(I)=0.0
        ENDDO
        DO    I=1,N
           Q=A*(ALOG10(XI(I)+B)+AVR)
           L=MAX0(1,MIN0(LENH,INT((Q+3.0)/6.0*FLOAT(LENH-1))+1))
           H2(L)=H2(L)+1
        ENDDO

        FHT=0.0
        DO    I=1,LENH
           IF(H2(I).NE.0.0)  FHT=FHT+(H1(I)-H2(I)/N)**2
        ENDDO
        FHODT=FHT
        END
@


1.13
log
@GPL_2010
@
text
@d11 1
a11 1
C=* Email: spider@@wadsworth.org                                        *
@


1.12
log
@GPL License fixed
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@cosmetic
@
text
@d1 1
a1 1
C++************************************************************************
d5 25
a29 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
C **************************************************************************
d38 1
a38 1
C--************************************************************************
@


1.10
log
@adapted for dynamical memory allocation
@
text
@d29 2
a30 1
C AVR is "-average"
d33 1
a33 1
        AVR=AVR-ALOG10(XI(I)+B)
d38 2
a39 2
        Q=ALOG10(XI(I)+B)+AVR
        SVR=SVR+Q*Q
d42 1
a42 1
C
d44 1
a44 1
        H2(I)=0.0
d47 3
a49 3
        Q=A*(ALOG10(XI(I)+B)+AVR)
        L=MAX0(1,MIN0(LENH,INT((Q+3.0)/6.0*FLOAT(LENH-1))+1))
        H2(L)=H2(L)+1
d51 1
a51 1
C
d54 1
a54 1
        IF(H2(I).NE.0.0)  FHT=FHT+(H1(I)-H2(I)/N)**2
@


1.9
log
@a
@
text
@d12 1
a12 1
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
d16 1
d18 4
d26 2
a27 2
	FUNCTION  FHODT(B,N,LENH,XI,H1,H2,A,AVR)
	DIMENSION  XI(N),H1(LENH),H2(LENH)
d30 27
a56 27
	AVR=0.0
	DO    I=1,N
	AVR=AVR-ALOG10(XI(I)+B)
	ENDDO
	AVR=AVR/N
	SVR=0.0
	DO    I=1,N
	Q=ALOG10(XI(I)+B)+AVR
	SVR=SVR+Q*Q
	ENDDO
	A=SQRT(N/SVR)
C
	DO    I=1,LENH
	H2(I)=0.0
	ENDDO
	DO    I=1,N
	Q=A*(ALOG10(XI(I)+B)+AVR)
	L=MAX0(1,MIN0(LENH,INT((Q+3.0)/6.0*FLOAT(LENH-1))+1))
	H2(L)=H2(L)+1
	ENDDO
C
	FHT=0.0
	DO    I=1,LENH
	IF(H2(I).NE.0.0)  FHT=FHT+(H1(I)-H2(I)/N)**2
	ENDDO
	FHODT=FHT
	END
@


1.8
log
@*** empty log message ***
@
text
@d23 1
a23 1
CNO_SAVE
@


1.7
log
@corrected, XMIN removed.
@
text
@d24 1
a24 1
C
d27 1
a27 1
	AVR=AVR+ALOG10(XI(I)+B)
d32 1
a32 1
	Q=ALOG10(XI(I)+B)-AVR
d41 1
a41 1
	Q=A*(ALOG10(XI(I)+B)-AVR)
@


1.6
log
@modified intrinsic function call for f90 compatibility
@
text
@a23 4
	IF(XRMI+B.LE.0.0)  THEN
	FHODT=1.0
	RETURN
	ENDIF
@


1.5
log
@*** empty log message ***
@
text
@d46 1
a46 1
	L=MAX0(1,MIN0(LENH,JNINT((Q+3.0)/6.0*FLOAT(LENH-1))+1))
@


1.4
log
@*** empty log message ***
@
text
@d30 3
a32 2
	DO  7  I=1,N
7	AVR=AVR+ALOG10(XI(I)+B)
d35 1
a35 1
	DO  8  I=1,N
d37 2
a38 1
8	SVR=SVR+Q*Q
d41 4
a44 3
	DO  1  I=1,LENH
1	H2(I)=0.0
	DO  2  I=1,N
d47 2
a48 1
2	H2(L)=H2(L)+1
d51 3
a53 2
	DO  3  I=1,LENH
3	IF(H2(I).NE.0.0)  FHT=FHT+(H1(I)-H2(I)/N)**2
@


1.3
log
@previous
@
text
@d21 2
a22 3
         FUNCTION  FHODT(AK,N,LENH,XI,H1,H2)
         DIMENSION  AK(3),XI(N),H1(3*LENH),H2(3*LENH)
         COMMON  /PARTR/  RXR,XRMI
d24 4
a27 6
	print  *,ak
	 IF(XRMI+AK(2).LE.0.0)  THEN
	 FHODT=1.0
	print  *,' Default=',FHODT
	 RETURN
	 ENDIF
d29 9
a37 9
	 LH=3*LENH
         DO  1  I=1,LH
1        H2(I)=0.0
         DO  2  I=1,N
         XN=AK(1)*ALOG10(XI(I)+AK(2))+AK(3)
C         L=JNINT((XN-XRMI)/RXR*(LENH-1)+LENH+1)
         L=MAX0(1,MIN0(LH,JNINT((XN+3.0)/6.0*FLOAT(LH-1))+1))
	 H2(L)=H2(L)+1
2        CONTINUE
d39 12
a50 6
         FHT=0.0
         DO  3  I=1,LH
3        FHT=FHT+(H1(I)-H2(I)/N)**2
	 FHODT=FHT
	print  *,' Chi^2=',FHODT
         END
@


1.2
log
@*** empty log message ***
@
text
@d25 4
a28 2
	 IF(-AK(2).GE.XRMI)  THEN
	 FHODT=3*LENH
d32 2
a33 1
         DO  1  I=1,3*LENH
d38 1
a38 1
         L=MAX0(1,MIN0(3*LENH,JNINT((XN+3.0)/6.0)*(LH-1)+1))
d43 1
a43 1
         DO  3  I=1,3*LENH
d46 1
@


1.1
log
@Initial revision
@
text
@d35 1
a35 1
         L=MAX0(1,MIN0(3*LENH),JNINT((XN+3.0)/6.0)*(LH-1)+1))
@
