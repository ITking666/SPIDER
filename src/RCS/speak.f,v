head	1.32;
access;
symbols
	healthdept_2018:1.32
	pre_getangas:1.26
	GPL2010:1.26
	pre_GPL2010:1.25
	pre_var_equation:1.25
	pre_fftwrings:1.25
	pre_opfiles:1.24
	src:1.24
	best-code:1.24
	x-named-regs:1.23
	x:1.23
	v13-00:1.23
	pre_GPL:1.21
	prec_CA:1.21
	noindx:1.21
	Bproc:1.12
	oct21:1.10
	last77:1.9;
locks; strict;
comment	@c @;


1.32
date	2018.10.03.14.34.23;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2014.01.12.19.04.46;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2013.04.12.13.51.17;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2012.12.04.15.54.16;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2012.12.03.19.08.35;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2012.11.30.19.32.26;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2010.06.24.13.27.00;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2007.05.15.17.25.54;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2005.12.16.01.51.29;	author cyang;	state Exp;
branches;
next	1.23;

1.23
date	2005.10.17.20.33.51;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2005.10.17.18.24.32;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2002.03.11.14.08.22;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2001.05.30.18.06.21;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2001.05.24.14.45.29;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2001.02.23.20.43.56;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2001.02.20.15.32.18;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2001.02.15.19.27.42;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2001.02.15.18.39.31;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2001.02.14.17.30.10;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2000.09.19.13.07.35;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.08.17.16.48.32;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.08.18.18.21;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.09.15.14.55.25;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	98.01.23.16.42.28;	author pawel;	state Exp;
branches;
next	1.8;

1.8
date	97.10.15.14.29.07;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	97.03.17.16.55.08;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	97.03.17.14.22.27;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	95.09.11.21.04.47;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	95.09.07.17.47.47;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	95.02.07.16.34.22;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.09.16.13.54.11;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.58;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.32
log
@email_health_dept
@
text
@
C++*********************************************************************
C SPEAK.F     PARAMETERS                        FEB 2001 ARDEAN LEITH
C             FORMATTING                        MAY 2001 ARDEAN LEITH
C             NDAT/NOUT BUG                     MAY 2007 ARDEAN LEITH
C             REWRITE                           NOV 2012 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2012  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  PURPOSE:  SEARCHES FOR THE ML HIGHEST PEAKS IN THE (REAL) IMAGE
C            FILNAM AND PRINTS OUT POSITIONS AND VALUES OF THESE PEAKS.
C
C  SPEAK(FILNAM,LUN,NX,NY,MAXDIM,OPT,NDOC)
c
C  PARAMETERS:    
C        FILNAM       FILE NAME
C        LUN          LOGICAL UNIT NUMBER OF IMAGE
C        NX,NY        DIMENSIONS OF IMAGE
C        MAXDIM       MAXIMUM BUFFER SPACE AVAILABLE
C        OPT          OUTPUT OPTION
C        OPT=' '      DEFAULT:NO DOCUMENT OUTPUT
C        OPT='X'      I.E.,REGISTER LIST FOLLOWING):NO DOCUMENT OUTPUT
C                       BUT OUTPUT OF POSITION & VALUE OF PEAK IN REGISTERS)
C        OPT='D'      DOCUMENT OUTPUT:NUMBER,POSITION, AND VALUE
C                       OF PEAK ARE WRITTEN INTO A DOCUMENT FILE
C        NDOCOUT      I/O UNIT NUMBER FOR DOCUMENT FILE
C
C        REGISTER POSITIONS 1= INTEGER X-SHIFT
C          2= INTEGER Y-SHIFT
C          3= ABSOLUTE PEAK HEIGHT
C
C          5= FLOATING PT. X-SHIFT
C          6= FLOATING PT. Y-SHIFT
C          7= VALUE OF EXTREMUM OF PARABOLOID
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

         SUBROUTINE SPEAK(FILNAM,LUN,NX,NY,MAXDIM,OPT,NDOCOUT,ML,NOR)

         INCLUDE 'CMBLOCK.INC'
         INCLUDE 'CMLIMIT.INC'

         COMMON  BUF(1)

         CHARACTER (LEN=*)      :: FILNAM
         INTEGER                :: LUN,NX,NY,MAXDIM
         CHARACTER              :: OPT
         INTEGER                :: NDOCOUT,ML,NOR


         REAL                   :: DLIST(5),RSQ(9)
         REAL                   :: ALIST(ML),RLIST(ML)
         INTEGER                :: ILIST(ML),KLIST(ML)
         INTEGER                :: KXLIST(ML),IXLIST(ML)
         CHARACTER (LEN=60)     :: COMMEN
         CHARACTER (LEN=MAXNAM) :: DOCOUT
         LOGICAL                :: ASKNAM,ADDEXT,ISOLD
         LOGICAL                :: WRTCOM,APPEND,NEWFILE

         CALL SET_MPI(ICOMM,MYPID,MPIERR) ! SETS ICOMM AND MYPID

         IF (MAXDIM < 3 * NX) THEN
            CALL ERRT(102,'INSUFFICIENT BUFFER SPACE',MAXDIM)
            RETURN
         ENDIF

         DO K = 1,ML
            ILIST(K) = 0
            KLIST(K) = 0
            RLIST(K) = 0.0
            ALIST(K) = -HUGE(THRESH)
         ENDDO

         NTAB     = 1
         NXCTR    = NX/2+1
         NYCTR    = NY/2+1

         IF  (NOR .NE. 0) THEN
            CALL RDPRIS(NXCTR,NYCTR,NOT_USED,
     &                  'ORIGIN COORDINATES',IRTFLG)
            IF (IRTFLG .NE. 0) RETURN

            CALL RDPRI1S(NTAB,NOT_USED,
     &             'PEAK NUMBER FOR RATIO',IRTFLG)
            IF (IRTFLG .NE. 0) RETURN

            IF (NTAB <= 0 .OR. NTAB > ML) THEN
               CALL ERRT(102,'NOT CONTAINED IN TABLE',NTAB)
               RETURN
            ENDIF
         ENDIF


30       THRESH = -HUGE(THRESH)
         NMAX   = 0
         NX1    = NX-1
         NY1    = NY -1
         I1     = 0
         I2     = 1
         I3     = 2
         CALL REDLIN(LUN,BUF,NX,1)
         CALL REDLIN(LUN,BUF(1+NX),NX,2)

         DO  I = 3,NY
            I1  = MOD(I1,3)+1
            I2  = MOD(I2,3)+1
            I3  = MOD(I3,3)+1
            I1A = (I1-1)*NX
            I2A = (I2-1)*NX
            I3A = (I3-1)*NX

            CALL REDLIN(LUN,BUF(1+I3A),NX,I)

            DO  K = 2,NX1
               A = BUF(K+I2A)

C              IGNORE PIXEL IF LOWER THAN LOWEST PIXEL ON PEAK LIST 
               IF (A <= THRESH)       CYCLE

C              IGNORE PIXEL IF LESS OR EQUAL TO ANY OF 8 NEIGHBORS
               IF (A <= BUF(K-1+I2A)) CYCLE
               IF (A <= BUF(K-1+I1A)) CYCLE
               IF (A <= BUF(K+I1A))   CYCLE
               IF (A <= BUF(K+1+I1A)) CYCLE
               IF (A <= BUF(K+1+I2A)) CYCLE
               IF (A <= BUF(K+1+I3A)) CYCLE
               IF (A <= BUF(K+I3A))   CYCLE
               IF (A <= BUF(K-1+I3A)) CYCLE

               NMAX = NMAX + 1

               DO L = 1,ML
                  IF (A  <=  ALIST(L)) CYCLE
                     IF (L .NE. ML) THEN
                     L1 = L + 1

                     DO J = L1,ML
                        JO        = ML-J+L1
                        JN        = ML-J+L1-1
                        ALIST(JO) = ALIST(JN)
                        ILIST(JO) = ILIST(JN)
                       KLIST(JO)  = KLIST(JN)
                     ENDDO 
                  ENDIF

                  ALIST(L) = A
                  ILIST(L) = I-1
                  KLIST(L) = K
                  IF (NMAX > ML) THRESH = ALIST(ML)
                  EXIT
               ENDDO
            ENDDO
	 ENDDO

         IF (NMAX == 0)  THEN
            IF (MYPID <= 0) WRITE(NDAT,*) ' NO PEAK FOUND'
            IF (NDAT .NE. NOUT .AND. MYPID <= 0) 
     &         WRITE(NOUT,*) ' NO PEAK FOUND'
            CALL REG_SET_NSEL(1, 5,0.0, 0.0, 0.0, 0.0, 0.0,IRTFLG)
            CALL REG_SET_NSEL(6, 2,0.0, 0.0, 0.0, 0.0, 0.0,IRTFLG)
            RETURN
         ENDIF

        IF (OPT == 'D') THEN
           ADDEXT  = .TRUE.
           ASKNAM  = .TRUE.
           ISOLD   = .FALSE.
           APPEND  = .FALSE.
           WRTCOM  = .TRUE.
           CALL OPENDOC(DOCOUT,ADDEXT,NLET,
     &                  NDOCOUT,NICDOCOUT,ASKNAM,'OUTPUT DOCUMENT',
     &                  ISOLD,APPEND,WRTCOM,NEWFILE,IRTFLG)
           IF (IRTFLG .NE. 0) RETURN
C                123456789 123456789 123456789 123456789 123456789 123
           COMMEN = 
     &      '            XO            YO        HEIGHT         RATIO'
C            123456789 123456789 123456789 123456789 123456789 123456
           CALL LUNDOCPUTCOM(NDOCOUT,COMMEN(1:56),IRTFLG)
         ENDIF

         IF (MYPID <= 0) THEN
            IF (VERBOSE) WRITE(NOUT,*) ' '
            WRITE(NDAT,299)
299         FORMAT(
     &      '    NO    IX    IY     XO    YO      HEIGHT         RATIO')
            IF (NDAT .NE. NOUT) WRITE(NOUT,299)
            IF (VERBOSE) WRITE(NOUT,*) ' '
         ENDIF

         MLIST = MIN(ML,NMAX)

         DO L = 1,MLIST
            KXLIST(L) = KLIST(L) - NXCTR
            IXLIST(L) = ILIST(L) - NYCTR
            RLIST(L)  = ALIST(L) / ALIST(NTAB)

            IF (OPT == 'D') THEN
               DLIST(1) = KXLIST(L)
               DLIST(2) = IXLIST(L)
               DLIST(3) = ALIST(L)
               DLIST(4) = RLIST(L)

C              PUSH DLIST INTO OUTPUT DOC. FILE
               CALL LUNDOCWRTDAT(NICDOCOUT,L,DLIST,4,IRTFLG)

cc               CALL SAVD(NDOC,DLIST,5,IRTFLG)
            ENDIF
            IF (NDAT .NE. NOUT .AND. MYPID <= 0)
     &         WRITE(NOUT,301)L,KLIST(L),ILIST(L),KXLIST(L),IXLIST(L),
     &                        ALIST(L),RLIST(L)
301         FORMAT(3I6,' ',2I6,G16.7,2X,F8.5)
C dgm 301         FORMAT(3I6,' ',2I6G16.7,2X,F8.5)

            IF (MYPID <= 0)  
     &         WRITE(NDAT,301) L,KLIST(L),ILIST(L),KXLIST(L),
     &                         IXLIST(L), ALIST(L),RLIST(L)
         ENDDO

         CLOSE(NDOCOUT)

         CALL REG_SET_NSEL(1,4,FLOAT(KXLIST(1)),FLOAT(IXLIST(1)),
     &                        ALIST(1),RLIST(1),0.0,IRTFLG)

C        9/25/81 PARABOLIC FIT TO 3X3 NEIGHBORHOOD OF THE PEAK POINT
C        PROGRAM SECTION SENT BY M.VAN HEEL, MODIFIED FOR SPIDER. JF

         KL = KLIST(1)

         DO I=1,3
            IROW = ILIST(1)+I-2
            IF (IROW < 1)  IROW = IROW + NY
            IF (IROW > NY) IROW = IROW - NY

            CALL REDLIN(LUN,BUF,NX,IROW)
            I1 = (I-1) * 3

            DO K=1,3
               ISAM = KL + K - 2
               IF (ISAM < 1)  ISAM = ISAM + NX
               IF (ISAM > NX) ISAM = ISAM - NX

               RSQ(I1+K) = BUF(ISAM)
            ENDDO
         ENDDO

         CALL PARABL(RSQ,XSH,YSH,PEAKV)

C        HACK FOR ALMOST BINARY PEAK ERROR
         IF (PEAKV < MAXVAL(RSQ)) PEAKV = MAXVAL(RSQ)

         IF (MYPID <= 0) THEN
            IF (VERBOSE) WRITE(NOUT,*) ' '
            WRITE(NDAT,302)XSH,YSH,PEAKV
            IF (NDAT .NE. NOUT) 
     &         WRITE(NOUT,302)XSH,YSH,PEAKV
302            FORMAT('  SUB-PIXEL OFFSET OF HIGHEST PEAK: (',
     &               F5.2,', ',F5.2,')  HEIGHT: ',G15.7)

            IF (MYPID .LE. 0) WRITE(NOUT,*) ' '
         ENDIF

         XT = XSH + KXLIST(1)
         YT = YSH + IXLIST(1)
 
         CALL REG_SET_NSEL(5,3,XT,YT,PEAKV, 0.0,0.0,IRTFLG)

         END

@


1.31
log
@enter
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.30
log
@FORMAT(3I6,' ',2I6G16.7, bug
@
text
@d100 1
a100 1
     &                  'ENTER ORIGIN COORDINATES',IRTFLG)
d104 1
a104 1
     &             'ENTER PEAK NUMBER FOR RATIO',IRTFLG)
@


1.29
log
@rewrite
@
text
@d231 2
a232 1
301         FORMAT(3I6,' ',2I6G16.7,2X,F8.5)
@


1.28
log
@savd --> lundocwrtdat
@
text
@d201 8
a208 5
         IF (VERBOSE .AND. MYPID <= 0) WRITE(NOUT,*) ' '
         IF (MYPID <= 0) WRITE(NDAT,299)
         IF (NDAT .NE. NOUT .AND. MYPID <= 0) WRITE(NOUT,299)
299      FORMAT(
     &    '    NO    IX    IY     XO    YO      HEIGHT         RATIO')
a264 2
C        write(6,*) rsq(1:3),rsq(4:6),rsq(7:9)

d270 10
a279 6
         IF (VERBOSE .AND. MYPID <= 0) WRITE(NOUT,*) ' '
         IF (MYPID <= 0) WRITE(NDAT,302)XSH,YSH,PEAKV
         IF (NDAT .NE. NOUT .AND. MYPID <= 0) 
     &      WRITE(NOUT,302)XSH,YSH,PEAKV
302      FORMAT('  SUB-PIXEL --  OFFSET OF HIGHEST PEAK: (',
     &        F5.2,', ',F5.2,')  HEIGHT: ',G15.7)
a280 1
         IF (VERBOSE .AND. MYPID .LE. 0) WRITE(NOUT,*) ' '
@


1.27
log
@rewrite
@
text
@d45 1
a45 1
C        NDOC         I/O UNIT NUMBER FOR DOCUMENT FILE
d58 1
a58 1
         SUBROUTINE SPEAK(FILNAM,LUN,NX,NY,MAXDIM,OPT,NDOC,ML,NOR)
d61 1
d65 14
a78 6
         CHARACTER (LEN=*)  :: FILNAM
         CHARACTER          :: OPT
         REAL               :: DLIST(5),RSQ(9)
         REAL               :: ALIST(ML),RLIST(ML)
         INTEGER            :: ILIST(ML),KLIST(ML)
         INTEGER            :: KXLIST(ML),IXLIST(ML)
d184 17
d205 1
a205 1
     &       '    NO    IX    IY     XO    YO      HEIGHT        RATIO')
d215 9
a223 6
               DLIST(1) = L
               DLIST(2) = KXLIST(L)
               DLIST(3) = IXLIST(L)
               DLIST(4) = ALIST(L)
               DLIST(5) = RLIST(L)
               CALL SAVD(NDOC,DLIST,5,IRTFLG)
d235 1
a235 2
         CALL SAVDC
         CLOSE(NDOC)
@


1.26
log
@GPL_2010
@
text
@d3 4
a6 3
C SPEAK.F                          PARAMETERS      FEB 2001 ARDEAN LEITH
C                                  FORMATTING      MAY 2001 ARDEAN LEITH
C                                  NDAT/NOUT BUG   MAY 2007 ARDEAN LEITH
d11 1
a11 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d32 1
a32 1
C  SPEAK(FILNAM,LUN,NSAM,NROW,MAXDIM,OPT,NDOC)
d35 11
a45 11
C         FILNAM       FILE NAME
C         LUN          LOGICAL UNIT NUMBER OF IMAGE
C         NSAM,NROW    DIMENSIONS OF IMAGE
C         MAXDIM       MAXIMUM BUFFER SPACE AVAILABLE
C        OPT           OUTPUT OPTION
C        OPT=' '       DEFAULT:NO DOCUMENT OUTPUT
C        OPT='X'      (I.E.,REGISTER LIST FOLLOWING):NO DOCUMENT OUTPUT
C                      BUT OUTPUT OF POSITION & VALUE OF PEAK IN REGISTERS)
C        OPT='D'       DOCUMENT OUTPUT:NUMBER,POSITION, AND VALUE
C                      OF PEAK ARE WRITTEN INTO A DOCUMENT FILE
C        NDOC          LOGICAL UNIT NUMBER FOR DOCUMENT FILE
d58 1
a58 1
         SUBROUTINE SPEAK(FILNAM,LUN,NSAM,NROW,MAXDIM,OPT,NDOC,ML,NOR)
d64 11
a74 16
         CHARACTER *(*) FILNAM
         CHARACTER      OPT
         DIMENSION      DLIST(5),RSQ(9)
         REAL,    DIMENSION(ML) ::    ALIST,RLIST
         INTEGER, DIMENSION(ML) ::    ILIST,KLIST,KXLIST,IXLIST

#ifdef USE_MPI
         include 'mpif.h'
         ICOMM   = MPI_COMM_WORLD
         MPIERR = 0
         CALL MPI_COMM_RANK(ICOMM, MYPID, MPIERR)
#else 
         MYPID = -1
#endif
         IF (MAXDIM .LT. 3*NSAM) THEN
            CALL ERRT(6,'SPEAK ',NE)
d86 3
a88 2
         NXCTR    = NSAM/2+1
         NYCTR    = NROW/2+1
d91 1
a91 1
     &            'ENTER ORIGIN COORDINATES',IRTFLG)
d98 2
a99 2
            IF (NTAB .LE. 0 .OR. NTAB .GT. ML) THEN
               CALL ERRT(25,'SPEAK',NE)
d104 1
d107 2
a108 2
         NSAM1  = NSAM-1
         NROW1  = NROW -1
d112 2
a113 2
         CALL REDLIN(LUN,BUF,NSAM,1)
         CALL REDLIN(LUN,BUF(1+NSAM),NSAM,2)
d115 1
a115 1
         DO  I = 3,NROW
d119 7
a125 5
            I1A = (I1-1)*NSAM
            I2A = (I2-1)*NSAM
            I3A = (I3-1)*NSAM
            CALL REDLIN(LUN,BUF(1+I3A),NSAM,I)
            DO 150  K = 2,NSAM1
d129 1
a129 1
               IF (A.LE.THRESH)       GOTO 150
d132 9
a140 8
               IF (A.LE.BUF(K-1+I2A)) GOTO 150
               IF (A.LE.BUF(K-1+I1A)) GOTO 150
               IF (A.LE.BUF(K+I1A))   GOTO 150
               IF (A.LE.BUF(K+1+I1A)) GOTO 150
               IF (A.LE.BUF(K+1+I2A)) GOTO 150
               IF (A.LE.BUF(K+1+I3A)) GOTO 150
               IF (A.LE.BUF(K+I3A))   GOTO 150
               IF (A.LE.BUF(K-1+I3A)) GOTO 150
d142 16
a157 12
               DO 100 L = 1,ML
                  IF (A .LE. ALIST(L)) GOTO 100
                  IF (L .EQ. ML)GOTO 90
                  L1 = L+1
                  DO J = L1,ML
                     JO = ML-J+L1
                     JN = ML-J+L1-1
                     ALIST(JO) = ALIST(JN)
                     ILIST(JO) = ILIST(JN)
                     KLIST(JO) = KLIST(JN)
                  ENDDO
90                ALIST(L) = A
d160 4
a163 4
                  IF (NMAX .GT. ML) THRESH = ALIST(ML)
                  GOTO 150
100            CONTINUE
150         CONTINUE
d166 3
a168 3
         IF (NMAX .EQ. 0)  THEN
            IF (MYPID .LE. 0) WRITE(NDAT,*) ' NO PEAK FOUND'
            IF (NDAT .NE. NOUT .AND. MYPID .LE. 0) 
d175 8
a182 4
         IF (MYPID .LE. 0) WRITE(NDAT,299)
         IF (NDAT .NE. NOUT .AND. MYPID .LE. 0) WRITE(NOUT,299)
299      FORMAT('    NO   NSAM  NROW    X     Y    VALUE         RATIO')
         MLIST = MIN0(ML,NMAX)
d187 2
a188 2
C           IF (L .EQ. 1 .AND. NDAT .NE. NOUT)
            IF (OPT .EQ. 'D') THEN
d196 1
a196 1
            IF (NDAT .NE. NOUT .AND. MYPID .LE. 0)
d198 2
a199 2
     &              ALIST(L),RLIST(L)
301         FORMAT(5I6,G16.7,2X,F8.5)
d201 1
a201 1
            IF (MYPID .LE. 0)  
d203 1
a203 1
     &         IXLIST(L), ALIST(L),RLIST(L)
a208 4
         IF (MYPID .LE. 0) WRITE(NDAT,302)
         IF (NDAT .NE. NOUT .AND. MYPID .LE. 0) WRITE(NOUT,302)
302      FORMAT(/,' LARGEST PEAK:')

d212 2
a213 2
C        9/25/81 PARABOLIC FIT TO THE 3X3 NEIGHBORHOOD OF THE PEAK POINT
C        PROGRAM SECTION SENT BY M.VAN HEEL, MODIFIED FOR SPIDER USE. JF
d216 1
d219 6
a224 4
            IF (IROW.LT.1) IROW=IROW+NROW
            IF (IROW.GT.NROW) IROW = IROW-NROW
            CALL REDLIN(LUN,BUF,NSAM,IROW)
            I1 = (I-1)*3
d226 3
a228 3
               ISAM = KL+K-2
               IF (ISAM.LT.1) ISAM=ISAM+NSAM
               IF (ISAM.GT.NSAM) ISAM=ISAM-NSAM
d234 2
a236 4
         IF (NOUT .NE. NDAT .AND. MYPID .LE. 0) 
     &       WRITE(NOUT,351)XSH,YSH,PEAKV
         IF (MYPID .LE. 0) WRITE(NDAT,351)XSH,YSH,PEAKV
351      FORMAT('  + (',F5.2,', ',F5.2,')  PEAK VALUE = ',G15.7)
d238 11
a253 1
         RETURN
@


1.25
log
@nout/ndat echo bug
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2007  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.24
log
@sync write to stdout for MPI
@
text
@d3 3
a5 4
C
C SPEAK.F                              PARAMETERS FEB 2001 ARDEAN LEITH
C                                      FORMATTING MAY 2001 ARDEAN LEITH
C
d8 1
a8 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d72 1
a74 1
         INTEGER MYPID, ICOMM, MPIERR
d175 1
a175 1
         IF (NDAT .NE. NOUT .AND. MYPID .LE. 0) WRITE(NDAT,299)
d204 1
a204 1
         IF (NDAT .NE. NOUT .AND. MYPID .LE. 0) WRITE(NOUT,302)
@


1.23
log
@GPL License fixed
@
text
@d73 9
a81 1

d167 3
a169 2
            WRITE(NDAT,*) ' NO PEAK FOUND'
            IF (NDAT .NE. NOUT) WRITE(NOUT,*) ' NO PEAK FOUND'
d175 2
a176 2
         WRITE(NDAT,299)
         IF (NDAT .NE. NOUT) WRITE(NDAT,299)
d192 1
a192 1
            IF (NDAT .NE. NOUT)
d197 3
a199 2
            WRITE(NDAT,301) L,KLIST(L),ILIST(L),KXLIST(L),IXLIST(L),
     &         ALIST(L),RLIST(L)
d205 2
a206 2
         IF (NDAT .NE. NOUT) WRITE(NOUT,302)
         IF (NDAT .NE. NOUT) WRITE(NOUT,302)
d232 3
a234 2
         IF (NOUT .NE. NDAT) WRITE(NOUT,351)XSH,YSH,PEAKV
         WRITE(NDAT,351)XSH,YSH,PEAKV
@


1.22
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a7 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a60 1
C--************************************************************************
@


1.21
log
@nloop,iloop_removed
@
text
@d2 1
d10 24
d68 1
@


1.20
log
@output header repeated
@
text
@d73 1
a73 1
            CALL RDPRIS(NXCTR,NYCTR,NLOOP,ILOOP,
d77 1
a77 1
            CALL RDPRI1S(NTAB,NLOOP,ILOOP,
@


1.19
log
@formatting, rdpris, comments
@
text
@d150 1
d179 1
a179 1
         IF (NDAT .NE. NOUT) WRITE(NOUT,299)
@


1.18
log
@rlist must be at least 9, replaced with rsq
@
text
@d5 1
d9 1
a9 1
C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
d57 1
a57 1
         IF (MAXDIM .LT. 3*NSAM+200) THEN
d66 1
a66 1
            ALIST(K) = -1.0E20
d73 7
a79 2
            CALL RDPRMI(NXCTR,NYCTR,NLOOP,ILOOP,
     &            'ENTER ORIGIN COORDINATES')
d81 1
a81 4
            CALL RDPRMI(NTAB,NDUM,NLOOP,ILOOP,
     &             'ENTER PEAK NUMBER FOR RATIO')

            IF (NTAB .GT. ML) THEN
d87 1
a87 1
30       THRESH = -1.0E20
d107 2
d110 2
a140 1
         WRITE(NDAT,299)
d143 1
d149 2
a150 3
295      IF (NDAT .NE. NOUT) WRITE(NOUT,302)
         IF (NDAT .NE. NOUT) WRITE(NOUT,299)
299      FORMAT('    NO   NSAM  NROW    X     Y    VALUE   RATIO'/)
a156 5
            IF (NDAT .NE. NOUT)
     &         WRITE(NOUT,301)L,KLIST(L),ILIST(L),KXLIST(L),IXLIST(L),
     &              ALIST(L),RLIST(L)
301         FORMAT(5I6,G16.7,2X,F8.5)

d165 5
d177 4
a180 1
302      FORMAT(' LARGEST PEAK:'/)
@


1.17
log
@changed parameters
@
text
@d52 1
a52 1
         DIMENSION      DLIST(5)
d147 3
a149 3
            KXLIST(L) = KLIST(L)-NXCTR
            IXLIST(L) = ILIST(L)-NYCTR
            RLIST(L)  = ALIST(L)/ALIST(NTAB)
d189 2
a190 2
C              USE RLIST BUFFER WHICH IS NO LONGER NEEDED
               RLIST(I1+K) = BUF(ISAM)
d194 2
a195 2
         CALL PARABL(RLIST,XSH,YSH,PEAKV)
         IF (NOUT.NE.NDAT) WRITE(NOUT,351)XSH,YSH,PEAKV
d197 1
a197 1
351      FORMAT('  + (',F6.2,', ',F6.2,')  PEAK VALUE = ',G15.7)
d199 4
a202 2
         CALL REG_SET_NSEL(5,3,XSH+KXLIST(1), YSH+IXLIST(1),
     &                       PEAKV, 0.0,0.0,IRTFLG)
@


1.16
log
@allocate does not like ML = 1
@
text
@d4 1
a4 1
C SPEAK.F
d6 8
a13 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
C **************************************************************************
d44 1
a44 1
         SUBROUTINE SPEAK(FILNAM,LUN,NSAM,NROW,MAXDIM,OPT,NDOC)
d53 2
a54 2
         REAL, ALLOCATABLE, DIMENSION(:) ::    ALIST,RLIST
         INTEGER, ALLOCATABLE, DIMENSION(:) :: ILIST,KLIST,KXLIST,IXLIST
a60 18
         CALL RDPRMI(ML,NOR,NLOOP,ILOOP,
     &      'ENTER # OF PEAKS, CENTER ORIGIN OVERRIDE(0/1)')
         IF (ML .LT. 1)   ML = 1

C        ALLOCATE SEEMS TO HAVE TROUBLE IF ML IS ONE al feb 2001
         MK = MAX(10,ML)

         ALLOCATE(ALIST(MK),RLIST(MK),STAT=IRTFLG)
         IF (IRTFLG .NE. 0) THEN 
           CALL ERRT(46,'SPEAK, ALIST.....',IER)
           RETURN
         ENDIF
         ALLOCATE(ILIST(MK),KLIST(MK),KXLIST(MK),IXLIST(MK),STAT=IRTFLG)
         IF (IRTFLG .NE. 0) THEN 
           CALL ERRT(46,'SPEAK, ILIST.....',IER)
           RETURN
         ENDIF

d80 1
a80 1
               GOTO 9999
d104 1
a104 1
               IF (A.LE.THRESH) GOTO 150
d136 1
a136 1
            WRITE(NDAT,*)' NO PEAK FOUND'
d139 1
a139 1
            GOTO 9999
d187 1
a187 1
               IF (ISAM.LT.1)ISAM=ISAM+NSAM
d197 1
a197 1
351      FORMAT('  + (',F5.2,', ',F5.2,')  PEAK VALUE = ',G15.7)
a200 7

9999     IF (ALLOCATED(ILIST))  DEALLOCATE (ILIST)
         IF (ALLOCATED(KLIST))  DEALLOCATE (KLIST)
         IF (ALLOCATED(KXLIST)) DEALLOCATE (KXLIST)
         IF (ALLOCATED(IXLIST)) DEALLOCATE (IXLIST)
         IF (ALLOCATED(ALIST))  DEALLOCATE (ALIST)
         IF (ALLOCATED(RLIST))  DEALLOCATE (RLIST)
@


1.15
log
@*** empty log message ***
@
text
@d66 4
a69 1
         ALLOCATE(ALIST(ML),RLIST(ML),STAT=IRTFLG)
d74 1
a74 1
         ALLOCATE(ILIST(ML),KLIST(ML),KXLIST(ML),IXLIST(ML),STAT=IRTFLG)
@


1.14
log
@allocate
@
text
@d66 1
a66 2
         ALLOCATE(ILIST(ML),KLIST(ML),KXLIST(ML),IXLIST(ML),
     &            ALIST(ML),RLIST(ML),STAT=IRTFLG)
d68 6
a73 1
           CALL ERRT(46,'SPEAK, KLIST.....',IER)
@


1.13
log
@nsel off by 1
@
text
@a50 1
         PARAMETER      (MLM = 4000)
d53 3
a55 2
         DIMENSION      ILIST(MLM),KLIST(MLM),KXLIST(MLM),IXLIST(MLM)
     &                  ,ALIST(MLM),RLIST(MLM),DLIST(5)
a56 4
         CALL RDPRMI(ML,NOR,NLOOP,ILOOP,
     &      'ENTER # OF PEAKS,CENTER ORIGIN OVERRIDE(0/1)')
         IF (ML .LT. 1)   ML = 1
         IF (ML .GT. MLM) ML = MLM
d62 11
d92 1
a92 1
               RETURN
d151 1
a151 1
            RETURN
d202 1
a202 1
               RLIST(I1+K)= BUF(ISAM)
d213 7
@


1.12
log
@*** empty log message ***
@
text
@d1 1
d142 2
a143 2
            CALL REG_SET_NSEL(1, 5,0.0, 0.0, 0.0, 0.0, 0,0,IRTFLG)
            CALL REG_SET_NSEL(6, 1,0.0, 0.0, 0.0, 0.0, 0,0,IRTFLG)
d209 1
@


1.11
log
@changes for reg_set
@
text
@d141 2
a142 2
            CALL REG_SET_NSEL(1, 0.0, 0.0, 0.0, 0.0, 0,0,IRTFLG)
            CALL REG_SET_NSEL(6, 0.0, 0.0, 0.0, 0.0, 0,0,IRTFLG)
d176 1
a176 1
         CALL REG_SET_NSEL(1,FLOAT(KXLIST(1)),FLOAT(IXLIST(1)),
d203 2
a204 2
         CALL REG_SET_NSEL(5, XSH+KXLIST(1), YSH+IXLIST(1),
     &                       PEAKV, 0,0,IRTFLG)
@


1.10
log
@loop index converted to register
@
text
@d15 2
a16 1
C   PURPOSE:    SEARCH FOR HIGHEST PEAKS
a17 3
C       THIS SUBROUTINE SEARCHES FOR THE ML HIGHEST PEAKS IN THE (REAL)
C       IMAGE FILNAM AND PRINTS OUT POSITIONS AND VALUES OF THESE PEAKS.
C
d19 2
d46 1
a46 8
         COMMON /UNITS/ LUNC,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT

C        MAXPARAM: NUMBER OF PARAMETER REGISTERS IN PARAM COMMON
C        REGISTERS 104...129 USED FOR OLD STYLE DO INDEX COUNTERS
        PARAMETER (MAXPARAM=129)

C        MAXPARAMSEL: NUMBER OF SELECTED  REGISTERS IN PARAM COMMON
         PARAMETER (MAXPARAMSEL=20)
a47 1
         COMMON /PARAM/PARAM(MAXPARAM),NS1,NS2,NS3,NS4,NS5,NS6,NS7
d50 1
a50 3
         COMMON    /BATCH/IBCNT,NLOOP,IABSLP,ILOOP

         PARAMETER      (MLM=4000)
d53 2
a54 5
         DIMENSION  ILIST(MLM),KLIST(MLM),KXLIST(MLM),IXLIST(MLM)
     &              ,ALIST(MLM),RLIST(MLM),DLIST(5)
         DIMENSION  NSI(7)
         EQUIVALENCE  (NSI(1),NS1),(NSI(2),NS2),(NSI(3),NS3),
     &     (NSI(4),NS4),(NSI(5),NS5),(NSI(6),NS6),(NSI(7),NS7)
d77 2
a78 1
     $            'ENTER ORIGIN COORDINATES')
d80 2
a81 1
     $             'ENTER PEAK NUMBER FOR RATIO')
a137 1
         CALL PDATES(FILNAM,0)
d141 2
a142 3
            DO I=1,7
               IF (NSI(I) .NE. 0) PARAM(NSI(I)) = 0.0
            ENDDO
d145 1
d174 1
d176 2
a177 4
         IF (NS1.NE.0) PARAM(NS1) = KXLIST(1)
         IF (NS2.NE.0) PARAM(NS2) = IXLIST(1)
         IF (NS3.NE.0) PARAM(NS3) = ALIST(1)
         IF (NS4.NE.0) PARAM(NS4) = RLIST(1)
d179 2
a180 2
C 9/25/81 PARABOLIC FIT TO THE 3X3 NEIGHBORHOOD OF THE PEAK POINT
C PROGRAM SECTION SENT BY M.VAN HEEL, MODIFIED FOR SPIDER USE. JF
d182 1
a182 1
         KL=KLIST(1)
d184 3
a186 3
            IROW=ILIST(1)+I-2
            IF(IROW.LT.1) IROW=IROW+NROW
            IF(IROW.GT.NROW) IROW = IROW-NROW
d190 1
a190 1
               ISAM=KL+K-2
d203 2
a204 3
         IF (NS5 .NE. 0) PARAM(NS5) = XSH+KXLIST(1)
         IF (NS6 .NE. 0) PARAM(NS6) = YSH+IXLIST(1)
         IF (NS7 .NE. 0) PARAM(NS7) = PEAKV
@


1.9
log
@nosave
@
text
@d3 1
a3 1
C $$ SPEAK.FOR
d20 1
a20 1
C       CALL SPEAK(FILNAM,LUN,NSAM,NROW,MAXDIM,OPT,NDOC)
d24 8
a31 8
C         MAXDIM      MAXIMUM BUFFER SPACE AVAILABLE
C        OPT  OUTPUT OPTION
C        OPT=' ' DEFAULT:NO DOCUMENT OUTPUT
C        OPT='X' (I.E.,REGISTER LIST FOLLOWING):NO DOCUMENT OUTPUT
C                 BUT OUTPUT OF POSITION & VALUE OF PEAK IN REGISTERS)
C        OPT='D'   DOCUMENT OUTPUT:NUMBER,POSITION, AND VALUE
C        OF PEAK ARE WRITTEN INTO A DOCUMENT FILE
C        NDOC  LOGICAL UNIT NUMBER FOR DOCUMENT FILE
d33 8
d47 9
a55 1
         COMMON /PARAM/PARAM(103),NS1,NS2,NS3,NS4,NS5,NS6,NS7
a58 1
         INTEGER          IBCNT,NLOOP,IABSLP,ILOOP
a67 9
CNO_SAVE
C        REGISTER POSITIONS 1= INTEGER X-SHIFT
C          2= INTEGER Y-SHIFT
C          3= ABSOLUTE PEAK HEIGHT
C
C          5= FLOATING PT. X-SHIFT
C          6= FLOATING PT. Y-SHIFT
C          7= VALUE OF EXTREMUM OF PARABOLOID

d70 1
a70 1
     1      'ENTER # OF PEAKS,CENTER ORIGIN OVERRIDE(0/1)')
d168 2
a169 2
     1         WRITE(NOUT,301)L,KLIST(L),ILIST(L),KXLIST(L),IXLIST(L),
     2              ALIST(L),RLIST(L)
d181 1
a181 1
     1         ALIST(L),RLIST(L)
d220 1
@


1.8
log
@*** empty log message ***
@
text
@d53 1
a53 1

a213 1
         RETURN
@


1.7
log
@cosmetic & fixed subroutine name
@
text
@d103 1
a103 1
         DO 250 I = 3,NROW
d141 1
a141 1
250      CONTINUE
@


1.6
log
@removed SPOOL/IPRTT stuff (no longer useable)
@
text
@a14 7
C
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--************************************************************************
C
C   SPEAK(FILNAM,LUN,NSAM,NROW,MAXDIM,OPT,NDOC)
C
d25 1
a25 1
C       OPT  OUTPUT OPTION
d30 7
a36 2
C       OF PEAK ARE WRITTEN INTO A DOCUMENT FILE
C       NDOC  LOGICAL UNIT NUMBER FOR DOCUMENT FILE
d54 1
a54 1
C     REGISTER POSITIONS 1= INTEGER X-SHIFT
d72 1
a72 1
10       DO 20 K = 1,ML
d75 3
a77 2
            RLIST(K) = 0.
20       ALIST(K) = -1.0E20
d82 1
a82 1
         IF  (NOR .NE. 0) GO TO 30
d96 4
a99 4
         NROW1 = NROW -1
         I1    = 0
         I2    = 1
         I3    = 2
d104 37
a140 37
         I1 = MOD(I1,3)+1
         I2 = MOD(I2,3)+1
         I3 = MOD(I3,3)+1
         I1A = (I1-1)*NSAM
         I2A = (I2-1)*NSAM
         I3A = (I3-1)*NSAM
         CALL REDLIN(LUN,BUF(1+I3A),NSAM,I)
         DO 150  K = 2,NSAM1
            A = BUF(K+I2A)
            IF (A.LE.THRESH) GOTO 150
            IF (A.LE.BUF(K-1+I2A)) GOTO 150
            IF (A.LE.BUF(K-1+I1A)) GOTO 150
            IF (A.LE.BUF(K+I1A))   GOTO 150
            IF (A.LE.BUF(K+1+I1A)) GOTO 150
            IF (A.LE.BUF(K+1+I2A)) GOTO 150
            IF (A.LE.BUF(K+1+I3A)) GOTO 150
            IF (A.LE.BUF(K+I3A))   GOTO 150
            IF (A.LE.BUF(K-1+I3A)) GOTO 150
            NMAX = NMAX + 1
            DO 100 L = 1,ML
               IF (A.LE.ALIST(L)) GOTO 100
               IF (L.EQ.ML)GOTO 90
               L1 = L+1
               DO 80 J = L1,ML
                  JO = ML-J+L1
                  JN = ML-J+L1-1
                  ALIST(JO) = ALIST(JN)
                  ILIST(JO) = ILIST(JN)
                  KLIST(JO) = KLIST(JN)
80             CONTINUE
90             ALIST(L) = A
               ILIST(L) = I-1
               KLIST(L) = K
               IF(NMAX.GT.ML) THRESH = ALIST(ML)
               GOTO 150
100         CONTINUE
150      CONTINUE
d145 6
a150 7
         IF (NMAX.EQ.0)  THEN
         WRITE(NDAT,1234)
1234     FORMAT(1X,'NO PEAK FOUND')
         DO I=1,7
            IF (NSI(I).NE.0) PARAM(NSI(I)) = 0.0
         ENDDO
         RETURN
d152 2
a153 2
295      IF (NDAT.NE.NOUT) WRITE(NOUT,302)
         IF (NDAT.NE.NOUT) WRITE(NOUT,299)
d156 1
a156 1
         DO 300 L = 1,MLIST
d159 3
a161 3
            RLIST(L) = ALIST(L)/ALIST(NTAB)
C           IF(L.EQ.1.AND.NDAT.NE.NOUT)
            IF(NDAT.NE.NOUT)
d164 11
a174 8
            IF (OPT.NE.'D') GOTO 300
            DLIST(1) = L
            DLIST(2) = KXLIST(L)
            DLIST(3) = IXLIST(L)
            DLIST(4) = ALIST(L)
            DLIST(5) = RLIST(L)
            CALL SAVD(NDOC,DLIST,5,IRTFLG)
300      WRITE(NDAT,301) L,KLIST(L),ILIST(L),KXLIST(L),IXLIST(L),
d176 2
a179 1
301      FORMAT(5I6,G16.7,2X,F8.5)
d190 1
a190 1
         DO 350 I=1,3
d195 2
a196 2
            I1=(I-1)*3
            DO 340 K=1,3
d202 2
a203 2
340         CONTINUE
350      CONTINUE
d206 1
a206 1
         IF (NOUT.NE.NDAT)  WRITE(NOUT,351)XSH,YSH,PEAKV
d209 5
a213 3
         IF (NS5.NE.0) PARAM(NS5)= XSH+KXLIST(1)
         IF (NS6.NE.0) PARAM(NS6)= YSH+IXLIST(1)
         IF (NS7.NE.0) PARAM(NS7)= PEAKV
@


1.5
log
@add ILOOP common block
@
text
@d20 1
a20 1
C $$ SPEAK.FOR
d22 1
a22 1
         SUBROUTINE SPEAK(FILNAM,LUN,NSAM,NROW,MAXDIM,OPT,NDOC)
a23 2
C $$ SPEAK:    SEARCH FOR HIGHEST PEAKS
C
d39 1
a39 1
C
a40 1
         COMMON /IPRTT/ IPRTT,NTRCE,NALPH
d43 3
a45 3
C
        COMMON    /BATCH/IBCNT,NLOOP,IABSLP,ILOOP
        INTEGER          IBCNT,NLOOP,IABSLP,ILOOP
d47 1
a47 1
         PARAMETER   (MLM=4000)
a62 1
C
d67 7
a73 5
         IF(ML.LT.1)  ML=1
         IF (ML.GT.MLM) ML=MLM
         IF(MAXDIM.GE.3*NSAM+200) GOTO 10
         CALL ERRT(6,'SPEAK ',NE)
         RETURN
d75 3
a77 3
         ILIST(K) = 0
         KLIST(K) = 0
         RLIST(K) = 0.
d79 6
a84 5
         NTAB=1
         NXCTR=NSAM/2+1
         NYCTR=NROW/2+1
         IF(NOR.EQ.0)GO TO 30
         CALL RDPRMI(NXCTR,NYCTR,NLOOP,ILOOP,
d86 1
a86 1
         CALL RDPRMI(NTAB,NDUM,NLOOP,ILOOP,
d88 6
a93 3
         IF(NTAB.LE.ML)GO TO 30
         CALL ERRT(25,'SPEAK',NE)
         RETURN
d95 2
a96 2
         NMAX = 0
         NSAM1 = NSAM-1
d98 3
a100 3
         I1 = 0
         I2 = 1
         I3 = 2
d103 1
d113 28
a140 28
         A = BUF(K+I2A)
         IF(A.LE.THRESH) GOTO 150
         IF(A.LE.BUF(K-1+I2A)) GOTO 150
         IF(A.LE.BUF(K-1+I1A)) GOTO 150
         IF(A.LE.BUF(K+I1A)) GOTO 150
         IF(A.LE.BUF(K+1+I1A)) GOTO 150
         IF(A.LE.BUF(K+1+I2A)) GOTO 150
         IF(A.LE.BUF(K+1+I3A)) GOTO 150
         IF(A.LE.BUF(K+I3A)) GOTO 150
         IF(A.LE.BUF(K-1+I3A)) GOTO 150
         NMAX = NMAX + 1
         DO 100 L = 1,ML
         IF(A.LE.ALIST(L)) GOTO 100
         IF(L.EQ.ML)GOTO 90
         L1 = L+1
         DO 80 J = L1,ML
         JO = ML-J+L1
         JN = ML-J+L1-1
         ALIST(JO) = ALIST(JN)
         ILIST(JO) = ILIST(JN)
         KLIST(JO) = KLIST(JN)
80       CONTINUE
90       ALIST(L) = A
         ILIST(L) = I-1
         KLIST(L) = K
         IF(NMAX.GT.ML) THRESH = ALIST(ML)
         GOTO 150
100      CONTINUE
d146 1
a146 1
         IF(NMAX.EQ.0)  THEN
d150 1
a150 1
         IF(NSI(I).NE.0) PARAM(NSI(I)) = 0.0
d154 2
a155 2
295      IF(NDAT.NE.NOUT) WRITE(NOUT,302)
         IF(NDAT.NE.NOUT) WRITE(NOUT,299)
d159 14
a172 14
         KXLIST(L) = KLIST(L)-NXCTR
         IXLIST(L) = ILIST(L)-NYCTR
         RLIST(L) = ALIST(L)/ALIST(NTAB)
C      IF(L.EQ.1.AND.NDAT.NE.NOUT)
         IF(NDAT.NE.NOUT)
     1   WRITE(NOUT,301)L,KLIST(L),ILIST(L),KXLIST(L),IXLIST(L),
     2   ALIST(L),RLIST(L)
         IF(OPT.NE.'D') GOTO 300
         DLIST(1) = L
         DLIST(2) = KXLIST(L)
         DLIST(3) = IXLIST(L)
         DLIST(4) = ALIST(L)
         DLIST(5) = RLIST(L)
         CALL SAVD(NDOC,DLIST,5,IRTFLG)
d174 1
a174 1
     1   ALIST(L),RLIST(L)
d179 5
a183 5
         IF(NS1.NE.0) PARAM(NS1) = KXLIST(1)
         IF(NS2.NE.0) PARAM(NS2) = IXLIST(1)
         IF(NS3.NE.0) PARAM(NS3) = ALIST(1)
         IF(NS4.NE.0) PARAM(NS4) = RLIST(1)
C
d186 1
a186 1
C
d189 12
a200 12
         IROW=ILIST(1)+I-2
         IF(IROW.LT.1) IROW=IROW+NROW
         IF(IROW.GT.NROW) IROW = IROW-NROW
         CALL REDLIN(LUN,BUF,NSAM,IROW)
         I1=(I-1)*3
         DO 340 K=1,3
         ISAM=KL+K-2
         IF(ISAM.LT.1)ISAM=ISAM+NSAM
         IF(ISAM.GT.NSAM) ISAM=ISAM-NSAM
C USE RLIST BUFFER WHICH IS NO LONGER NEEDED
         RLIST(I1+K)= BUF(ISAM)
340      CONTINUE
d202 1
a202 1
C
d204 1
a204 1
         IF(NOUT.NE.NDAT)  WRITE(NOUT,351)XSH,YSH,PEAKV
d207 4
a210 3
         IF(NS5.NE.0) PARAM(NS5)= XSH+KXLIST(1)
         IF(NS6.NE.0) PARAM(NS6)= YSH+IXLIST(1)
         IF(NS7.NE.0) PARAM(NS7)= PEAKV
@


1.4
log
@change 1,1 to nloop,iloop in dpr* calls
@
text
@d47 3
@


1.3
log
@clean up unused variables and hollerith warnings
@
text
@d66 2
a67 2
         CALL RDPRMI(ML,NOR,1,1,
     1      'ENTER # OF PEAKS,CENTER ORIGIN OVERRIDE(0/1)$')
d82 4
a85 2
         CALL RDPRMI(NXCTR,NYCTR,1,1,'ENTER ORIGIN COORDINATES$')
         CALL RDPRMI(NTAB,NDUM,1,1,'ENTER PEAK NUMBER FOR RATIO$')
@


1.2
log
@output fixed
@
text
@d49 1
a49 1
         CHARACTER      OPT,OPTD,NULL
d51 1
a51 1
     &   ,ALIST(MLM),RLIST(MLM),DLIST(5)
d53 2
a54 2
      EQUIVALENCE  (NSI(1),NS1),(NSI(2),NS2),(NSI(3),NS3),(NSI(4),NS4),
     &   (NSI(5),NS5),(NSI(6),NS6),(NSI(7),NS7)
d66 2
a67 2
         CALL RDPRMI(ML,NOR,1,1,'ENTER # OF PEAKS,CENTER ORIGIN OVER
     1   RIDE(0/1)$')
@


1.1
log
@Initial revision
@
text
@d139 1
a139 1
         WRITE(4,1234)
@
