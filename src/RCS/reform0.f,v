head	1.14;
access;
symbols
	healthdept_2018:1.14
	pre_getangas:1.12
	GPL2010:1.12
	pre_GPL2010:1.11
	pre_var_equation:1.11
	pre_fftwrings:1.11
	pre_opfiles:1.11
	src:1.11
	best-code:1.11
	x-named-regs:1.11
	x:1.11
	v13-00:1.11
	pre_GPL:1.9
	prec_CA:1.8
	noindx:1.7
	Bproc:1.4
	oct21:1.3
	last77:1.3;
locks; strict;
comment	@c @;


1.14
date	2018.10.03.14.34.14;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2014.01.12.19.10.35;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.24.13.26.43;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.20.37.35;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.18.28.01;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2003.11.10.15.50.24;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.02.18.16.01.40;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.11.14.08.27;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.11.08.14.45.18;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.06.14.45.13;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.11.17;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	99.02.05.13.42.49;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.10.09;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.14;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.14
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C REFORM0.F                CREATED        JAN 91
C                          OPFILEC        FEB 03   -- ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    REFORM0(LUNIN,LUNOUT,NSAM,NROW,NSLICE,MAXDIM,IRTFLG)
C
C    PURPOSE:         REFORM AN IMAGE STAGE BY ROTATION OF 90, 180 OR 270 
C                     DEGREES AROUND  THE X,Y, OR Z AXIS. DOES NOT!!
C                     USE SAME CENTERS AS STANDARD SPIDER ROTATIONS!!!
C                      
C    PARAMETERS:      MAXDIM     COMMON BUFFER SIZE
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE REFORM0(LUNIN,LUNOUT,NSAM,NROW,NSLICE,MAXDIM,IRTFLG)

        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'

        COMMON /COMMUN/           FILNAM
        CHARACTER(LEN=MAXNAM) ::  FILNAM

        CHARACTER(LEN=1) ::       NULL,AXIS
        LOGICAL ::                ERRI2

        NULL       = CHAR(0)

C       INPUT FILE OPENED IN UTIL3, FIND OUTPUT FILE NAME
 2      CALL FILERD(FILNAM,NLET,NULL,'OUTPUT',IRTFLG)
        IF (IRTFLG .NE. 0) RETURN

        WRITE(NOUT,900)
900     FORMAT(' FOLLOWING THREE QUESTIONS REFER TO ORIGINAL ',
     &         'VOLUME DIMENSIONS',/)
3       NSAM1 = 1
        NSAM2 = NSAM
        CALL RDPRIS(NSAM1,NSAM2,NOT_USED,
     &  'FIRST AND LAST X COLUMN NUMBER (OR <CR> FOR ALL)',IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 2
        IF (ERRI2(NSAM1,NSAM2,2,1,NSAM,NSAM1,NSAM)) GOTO 3

4       NROW1 = 1
        NROW2 = NROW
        CALL RDPRIS(NROW1,NROW2,NOT_USED,
     &    'FIRST AND LAST Y ROW NUMBER (OR <CR> FOR ALL)',IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 3
        IF (ERRI2(NROW1,NROW2,2,1,NROW,NROW1,NROW)) GOTO 4

5       NSLICE1 = 1
        NSLICE2 = NSLICE
        CALL RDPRIS(NSLICE1,NSLICE2,NOT_USED,
     &     'FIRST AND LAST Z SLICE NUMBER (OR <CR> FOR ALL)',
     &      IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 4
        IF (ERRI2(NSLICE1,NSLICE2,2,1,NSLICE,NSLICE1,NSLICE)) GOTO 5

6       CALL RDPRMC(AXIS,NLET,.TRUE.,
     &     'ROTATION AXIS (X,Y,Z) (<CR> IS Z)',NULL,IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 5
        IF (NLET .EQ. 0) AXIS = 'Z'

7       WRITE(NOUT,*) ' ROTATIONS ARE CLOCKWISE WHEN FACING ALONG AXIS.'
        WRITE(NOUT,*) ' X AXIS POINTS TO RIGHT, Y AXIS POINTS DOWN THE '
        WRITE(NOUT,*) ' SCREEN , Z AXIS POINTS OUT OF THE SCREEN.'
        IANG = 90
        CALL RDPRI1S(IANG,NOT_USED,
     &     'CLOCKWISE ROTATION ANGLE (90,180, OR 270)',IRTFLG)
        IF (IRTFLG .EQ. -1) GOTO 6
        IF (IANG .LT. 0) IANG = -IANG
        IF (IANG .NE. 90 .AND. IANG .NE. 180 .AND. IANG .NE. 270) THEN
           CALL ERRT(31,'REFORM',NE)
           GOTO 7
        ENDIF

C       SET IMAGE SIZE AND WINDOW
        NSAM3   = NSAM2   - NSAM1   + 1
        NROW3   = NROW2   - NROW1   + 1
        NSLICE3 = NSLICE2 - NSLICE1 + 1

        IF (AXIS .EQ. 'Z') THEN
C           3-D FILE WITH Z SLICE
            IF (IANG .EQ. 0 .OR. IANG .EQ. 180) THEN
               NSAMS   = NSAM3
               NROWS   = NROW3
            ELSE
               NSAMS   = NROW3
               NROWS   = NSAM3
            ENDIF
            NSLICES = NSLICE3
            NUMVOX  = MAX(NSAM,NSAMS)

        ELSEIF (AXIS .EQ. 'Y') THEN
C           3-D FILE WITH Y SLICE 

            IF (IANG .EQ. 0 .OR. IANG .EQ. 180) THEN
               NSAMS   = NSAM3
               NSLICES = NSLICE3
            ELSE
               NSAMS   = NSLICE3
               NSLICES = NSAM3
            ENDIF

            NROWS   = NROW3
            NUMVOX  = MAX(NSAM,NSAMS)

        ELSEIF (AXIS .EQ. 'X') THEN
C           3-D FILE WITH X SLICE

            IF (IANG .EQ. 0 .OR. IANG .EQ. 180) THEN
        
               NROWS   = NROW3
               NSLICES = NSLICE3
            ELSE
               NROWS   = NSLICE3
               NSLICES = NROW3
            ENDIF
            NSAMS   = NSAM3
            NUMVOX  = NSAMS * NROWS

        ENDIF

C       MAX. NO. OF VOXELS ALLOWED 
        MAXVOX  = MAXDIM 

        IF (NUMVOX .GT. MAXVOX) THEN
           CALL ERRT(9,'REFORM0',NE)
           GOTO 99
        ENDIF
     
C       OPEN OUTPUT FILE (HAD TO WAIT TO CALCULATE SIZE FROM AXIS INFO)
        MAXIM  = 0
        IRTFLG = 0
        CALL OPFILEC(LUNIN,.FALSE.,FILNAM,LUNOUT,'U',IFORM,NSAMS,
     &                 NROWS,NSLICES,
     &                 MAXIM,' ',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 99

C       ROTATE THE VOLUME
        CALL REFORM(LUNIN,LUNOUT,NSAM,NSAM1,NSAM2,NSAMS,
     &              NROW,NROW1,NROW2,NROWS,
     &       NSLICE,NSLICE1,NSLICE2,NSLICES,AXIS,IANG,IRTFLG)

99      CLOSE(LUNIN)
        CLOSE(LUNOUT)

	RETURN
	END

@


1.13
log
@enter
@
text
@d13 1
a13 1
C=* Email: spider@@wadsworth.org                                        *
@


1.12
log
@GPL_2010
@
text
@d63 1
a63 1
     &  'ENTER FIRST AND LAST X COLUMN NUMBER (OR <CR> FOR ALL)',IRTFLG)
d70 1
a70 1
     &    'ENTER FIRST AND LAST Y ROW NUMBER (OR <CR> FOR ALL)',IRTFLG)
d77 1
a77 1
     &     'ENTER FIRST AND LAST Z SLICE NUMBER (OR <CR> FOR ALL)',
d83 1
a83 1
     &     'ENTER ROTATION AXIS (X,Y,Z) (<CR> IS Z)',NULL,IRTFLG)
d92 1
a92 1
     &     'ENTER CLOCKWISE ROTATION ANGLE (90,180, OR 270)',IRTFLG)
@


1.11
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.10
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a7 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 6

C * COPYRIGHT (C)1985, 2003. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.9
log
@rot bug
@
text
@d2 1
d10 24
@


1.8
log
@opfilec
@
text
@d22 1
a22 2
C    PARAMETERS:       
C                     MAXDIM     COMMON BUFFER SIZE
a23 4
C    CALLED BY:       
C
C    CALLS:           REFORM
C
a31 2
        COMMON /IOBUF/            BUF(NBUFSIZ)
        COMMON                    BUF2(1)
a52 1
        NSAM3 = NSAM2 - NSAM1 + 1
a59 1
        NROW3 = NROW2 - NROW1 + 1
a67 1
        NSLICE3 = NSLICE2 - NSLICE1 + 1
d78 1
a78 1
        CALL RDPRIS(IANG,IDUM,NOT_USED,
d88 2
a89 2
        NSAM3   = NSAM2 - NSAM1 + 1
        NROW3   = NROW2 - NROW1 + 1
d114 1
d139 1
a139 1
           RETURN
d143 2
a144 1
        MAXIM = 0
d148 1
a148 1
        IF (IRTFLG .NE. 0) RETURN
d153 4
a156 1
     &       NSLICE,NSLICE1,NSLICE2,NSLICES,AXIS,IANG,MAXDIM,IRTFLG)
@


1.7
log
@nloop,iloop_removed
@
text
@d4 2
a5 1
C REFORM0.FOR -- CREATED JAN 91
d7 8
a14 10
C **************************************************************************
C *  AUTHOR:  ArDean Leith                                                 *
C *  PART OF SPIDER - MODULAR IMAGE PROCESSING SYSTEM.                     *
C *  COPYRIGHT (C)1987 , WADSWORTH CENTER FOR LABORATORIES AND             *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH			           *
C **************************************************************************
d16 1
a16 1
C    REFORM0
d19 3
a21 3
C                     DEGREES AROUND  THE X,Y, OR Z AXIS.  CENTER OF 
C                     ROTATION IS ALWAYS CENTER OF THE RELEVANT SLICE.
C
a28 1
C        0         2         3         4         5         6         7     
d35 1
d37 4
a40 2
        COMMON          BUF(16000),BUF2(1)
        COMMON /COMMUN/ FILNAM
d42 2
a43 3
        CHARACTER   *81  FILNAM
        CHARACTER   * 1  NULL,AXIS
        LOGICAL          ERRI2
d144 1
a144 1
        MAXVOX  = MAXDIM - 16000
d151 1
a151 1
C       OPEN OUTPUT FILE (HAD TO WAIT TO CALUCLATE SIZE FROM AXIS INFO)
d153 2
a154 1
        CALL OPFILE(.FALSE.,FILNAM,LUNOUT,'U',IFORM,NSAMS,NROWS,NSLICES,
@


1.6
log
@overlength line corrected
@
text
@d56 1
a56 1
        CALL RDPRIS(NSAM1,NSAM2,NLOOP,ILOOP,
d64 1
a64 1
        CALL RDPRIS(NROW1,NROW2,NLOOP,ILOOP,
d72 1
a72 1
        CALL RDPRIS(NSLICE1,NSLICE2,NLOOP,ILOOP,
d88 1
a88 1
        CALL RDPRIS(IANG,IDUM,NLOOP,ILOOP,
@


1.5
log
@used opfile
@
text
@d73 2
a74 1
     &    'ENTER FIRST AND LAST Z SLICE NUMBER (OR <CR> FOR ALL)',IRTFLG)
d80 1
a80 1
     &    'ENTER ROTATION AXIS (X,Y,Z) (<CR> IS Z)',NULL,IRTFLG)
@


1.4
log
@a
@
text
@a36 1
 
d52 1
a52 1
900     FORMAT('  FOLLOWING THREE QUESTIONS REFER TO ORIGINAL ',
d65 1
a65 1
     &  'ENTER FIRST AND LAST Y ROW NUMBER (OR <CR> FOR ALL)',IRTFLG)
d73 1
a73 1
     &  'ENTER FIRST AND LAST Z SLICE NUMBER (OR <CR> FOR ALL)',IRTFLG)
d79 2
a80 2
     &  'ENTER ROTATION AXIS (X,Y,Z) (<CR> IS Z)',NULL,IRTFLG)
         IF (IRTFLG .EQ. -1) GOTO 5
d88 1
a88 1
     &  'ENTER CLOCKWISE ROTATION ANGLE (90,180, OR 270)',IRTFLG)
a95 1

d151 4
a154 2
        CALL OPENF(FILNAM,LUNOUT,NSAMS,NROWS,'NEW',NF,NSLICES)
        IF (NF .NE. 2) RETURN
@


1.3
log
@CNO_SAVE
@
text
@d37 1
a37 1
CNO_SAVE 
@


1.2
log
@cpp_lines_added
@
text
@a35 1
#ifdef SP_UNIX
d37 1
a37 3
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
@


1.1
log
@Initial revision
@
text
@d36 3
d40 1
@
