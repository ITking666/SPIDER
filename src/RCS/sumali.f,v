head	1.18;
access;
symbols
	pre_getangas:1.18
	GPL2010:1.18
	pre_GPL2010:1.17
	pre_var_equation:1.17
	pre_fftwrings:1.17
	pre_opfiles:1.17
	src:1.17
	best-code:1.17
	x-named-regs:1.17
	x:1.17
	v13-00:1.17
	pre_GPL:1.15
	prec_CA:1.15
	noindx:1.15
	Bproc:1.12
	oct21:1.9
	last77:1.9;
locks; strict;
comment	@c @;


1.18
date	2010.06.24.13.27.04;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.17.20.01.28;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.17.17.57.12;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.11.14.07.49;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2002.03.08.21.21.04;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2001.08.01.20.26.35;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2000.08.17.15.50.48;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.10.15.47.42;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.07.14.22.57;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.03.01.19.39.34;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.02.10.22.40.09;	author pawel;	state Exp;
branches;
next	1.7;

1.7
date	99.02.10.18.44.10;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	98.01.21.19.35.12;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.09.17.14.54.44;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	97.03.17.14.39.34;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	97.01.21.14.02.45;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	96.02.14.20.50.31;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.53.13;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.18
log
@GPL_2010
@
text
@
C++***************************************************************1/5/82
C
C  SUMALI.F
C                           REMOVED INPUT REGISTERS AUG 01 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  SUMALI.F    
C
C  PURPOSE:  TO 'SUM' ANGLES,SHIFTS FROM TWO ALIGNMENT CYCLES
C
C--*********************************************************************

	SUBROUTINE SUMALI(P)

	INCLUDE 'CMBLOCK.INC'

	PARAMETER (QUADPI = 3.141592653589793238462643383279502884197)
	PARAMETER (DGR_TO_RAD = (QUADPI/180))
	
	LOGICAL       P

        CALL REG_GET_USED(NSEL_USED)

        IF (NSEL_USED .GT. 3) THEN
C         DEPRECATED REGISTER INPUT USED (AUG 01)
          CALL REG_GET_NSEL(1,ANGOLD,XSHOLD,YSHOLD,ANGNEW,XSHNEW,IRTFLG)
          CALL REG_GET_NSEL(6,YSHNEW,FDUM,FDUM,FDUM,FDUM,IRTFLG)
          IREGO = 7
        ELSE
C         PREFERRED INPUT METHOD
          CALL RDPRM3S(ANGOLD,XSHOLD,YSHOLD,NOT_USED,
     &                 'INITIAL ROTATION ANGLE, X & Y SHIFTS',IRTFLG)
          IF (IRTFLG .NE. 0) RETURN

          CALL RDPRM3S(ANGNEW,XSHNEW,YSHNEW,NOT_USED,
     &                 'REFINED ROTATION ANGLE, X & Y SHIFTS',IRTFLG)
          IF (IRTFLG .NE. 0) RETURN
          IREGO = 1
        ENDIF

	C      = COS(ANGNEW*DGR_TO_RAD)
	S      = SIN(ANGNEW*DGR_TO_RAD)
	IF (P)  S = -S
	XSHSUM = XSHNEW+XSHOLD*C-YSHOLD*S
	YSHSUM = YSHNEW+XSHOLD*S+YSHOLD*C
	ANGSUM = ANGNEW+ANGOLD
	DO WHILE(ANGSUM.LT.0.0)
	   ANGSUM=ANGSUM+360.0
	ENDDO
	ANGSUM=AMOD(ANGSUM,360.0)

        CALL REG_SET_NSEL(IREGO,3,ANGSUM,XSHSUM,YSHSUM,0.0 ,0.0 ,IRTFLG)

	END
@


1.17
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.16
log
@HRI GPL License used
@
text
@a7 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d11 1
a11 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a30 7

C *  COPYRIGHT (C)1981,2001, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH  			   *
a31 1
C **************************************************************************
a37 1
C--*************************************************************************
@


1.15
log
@nloop,iloop_removed
@
text
@d7 1
d9 1
d11 24
d41 1
d48 1
@


1.14
log
@NLOOPD bug
@
text
@d41 1
a41 1
          CALL RDPRM3S(ANGOLD,XSHOLD,YSHOLD,NLOOP,ILOOP,
d45 1
a45 1
          CALL RDPRM3S(ANGNEW,XSHNEW,YSHNEW,NLOOP,ILOOP,
@


1.13
log
@removed register input
@
text
@d41 1
a41 1
          CALL RDPRM3S(ANGOLD,XSHOLD,YSHOLD,NLOOPD,ILOOPD,
d45 1
a45 1
          CALL RDPRM3S(ANGNEW,XSHNEW,YSHNEW,NLOOPD,ILOOPD,
@


1.12
log
@reg_set_nsel params changed
@
text
@d5 1
d9 1
a9 1
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
d25 2
a28 2

	INCLUDE 'CMBLOCK.INC'
d32 18
a49 8
C	ANGOLD = PARAM(NSEL(1))
C	XSHOLD = PARAM(NSEL(2))
C	YSHOLD = PARAM(NSEL(3))
C	ANGNEW = PARAM(NSEL(4))
C	XSHNEW = PARAM(NSEL(5))
C	YSHNEW = PARAM(NSEL(6))
        CALL REG_GET_NSEL(1,ANGOLD,XSHOLD,YSHOLD,ANGNEW,XSHNEW,IRTFLG)
        CALL REG_GET_NSEL(6,YSHNEW,FDUM,FDUM,FDUM,FDUM,IRTFLG)
d62 1
a62 5
C	PARAM(NSEL(7)) = ANGSUM
C	PARAM(NSEL(8)) = XSHSUM
C	PARAM(NSEL(9)) = YSHSUM
        CALL REG_SET_NSEL(7,3,ANGSUM,XSHSUM,YSHSUM,0.0 ,0.0 ,IRTFLG)

@


1.11
log
@used reg_set
@
text
@d38 1
a38 1
        CALL REG_GET_NSEL(6,YSHNEW,0.0,0.0,0.0,0.0,IRTFLG)
d54 1
a54 1
        CALL REG_SET_NSEL(7,ANGSUM,XSHSUM,YSHSUM,0.0 ,0.0 ,IRTFLG)
@


1.10
log
@removed readpq
@
text
@d31 8
a38 6
	ANGOLD = PARAM(NSEL(1))
	XSHOLD = PARAM(NSEL(2))
	YSHOLD = PARAM(NSEL(3))
	ANGNEW = PARAM(NSEL(4))
	XSHNEW = PARAM(NSEL(5))
	YSHNEW = PARAM(NSEL(6))
d47 1
a47 1
	ANGSUM=ANGSUM+360.0
d51 5
a55 3
	PARAM(NSEL(7)) = ANGSUM
	PARAM(NSEL(8)) = XSHSUM
	PARAM(NSEL(9)) = YSHSUM
@


1.9
log
@fchar defined twice
@
text
@a30 10
C       GET REGISTER INFO
	CALL READPQ(FCHAR)

	DO I=7,9
	   IF (NSEL(I) .GT.99 .OR .NSEL(I).LT.3) THEN
              CALL ERRT(101,'ILLEGAL REGISTER USED',NERR)
              RETURN
           ENDIF
        ENDDO

@


1.8
log
@*** empty log message ***
@
text
@d23 1
d26 3
a28 1
	INCLUDE 'CMBLOCK.INC'	
d30 2
a31 1
        CHARACTER *80 FCHAR
@


1.7
log
@trig
@
text
@d24 1
a24 1
	PARAMETER (DRG_TO_RAD = (QUADPI/180))
d44 2
a45 2
	C      = COS(ANGNEW*DRG_TO_RAD)
	S      = SIN(ANGNEW*DRG_TO_RAD)
@


1.6
log
@bring angle to <0,360) range
@
text
@d23 3
a25 4

	COMMON /PARAM/PARAM(103),NSEL(9)
	COMMON /UNITS/LUN,NIN,NOUT,NECHO,IFOUND,NPROC,NDAT
	COMMON /FUNCTION/FCHAR
a27 2
CNO_SAVE

d44 2
a45 2
	C      = COSD(ANGNEW)
	S      = SIND(ANGNEW)
@


1.5
log
@altered errt call
@
text
@a19 1
C            NEW VERSION 1/6/85 M.RADERMACHER
d53 4
a61 1
	RETURN
@


1.4
log
@removed SPOOL/IPRTT stuff (no longer useable)
@
text
@d35 2
a36 3
	   IF( NSEL(I) .GT.99 .OR .NSEL(I).LT.3) THEN
	      WRITE(NOUT,*) '***ILLEGAL REGISTER USED'
              CALL ERRT(100,'SUMALI',NERR)
@


1.3
log
@replace COS by COSD
@
text
@d2 1
a2 1
C++******************************************************************1/5/82
d4 1
a4 1
C  SUMALI.FOR
d16 1
a16 1
C  SUMALI.FOR    SUBROUTINE TO 'SUM' ANGLES,SHIFTS FROM TWO ALIGNMENT CYCLES
d18 3
a20 1
C NEW VERSION 1/6/85 M.RADERMACHER
d24 1
a25 1
	COMMON /IPRTT/IPRTT,NTRACE,NALPH
d28 1
a28 1
	LOGICAL  P
d31 1
d34 26
a59 22
	DO 10 I=7,9
	IF(NSEL(I).GT.99 .OR .NSEL(I).LT.3) GOTO 1
10	CONTINUE
C
	ANGOLD=PARAM(NSEL(1))
	XSHOLD=PARAM(NSEL(2))
	YSHOLD=PARAM(NSEL(3))
	ANGNEW=PARAM(NSEL(4))
	XSHNEW=PARAM(NSEL(5))
	YSHNEW=PARAM(NSEL(6))
C
	C=COSD(ANGNEW)
	S=SIND(ANGNEW)
	IF(P)  S=-S
	XSHSUM=XSHNEW+XSHOLD*C-YSHOLD*S
	YSHSUM=YSHNEW+XSHOLD*S+YSHOLD*C
	ANGSUM=ANGNEW+ANGOLD
C
	PARAM(NSEL(7))=ANGSUM
	PARAM(NSEL(8))=XSHSUM
	PARAM(NSEL(9))=YSHSUM
C
a60 4

1	PARAM(10)=1.
	WRITE(NOUT,2)
2	FORMAT(' ***ILLEGAL REGISTER USED')
@


1.2
log
@nosave
@
text
@a21 1

a25 1

a27 2

	DATA PI/3.141592653589793/
d32 1
a32 2
	NS = NSEL(I)
	IF (NS .GT. 99 .OR .NS .LT. 3) GOTO 1
d34 2
a35 3

	DEGR=180/PI
	ANGOLD=PARAM(NSEL(1))/DEGR
d38 1
a38 1
	ANGNEW=PARAM(NSEL(4))/DEGR
d42 3
a44 3
	C=COS(ANGNEW)
	S=SIN(ANGNEW)
	IF (P)  S=-S
d49 1
a49 1
	PARAM(NSEL(7))=ANGSUM*DEGR
@


1.1
log
@Initial revision
@
text
@d32 1
a32 1

@
