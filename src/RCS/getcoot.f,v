head	1.16;
access;
symbols
	healthdept_2018:1.16
	pre_getangas:1.15
	GPL2010:1.15
	pre_GPL2010:1.14
	pre_var_equation:1.14
	pre_fftwrings:1.13
	pre_opfiles:1.13
	src:1.13
	best-code:1.13
	x-named-regs:1.13
	x:1.13
	v13-00:1.13
	pre_GPL:1.11
	prec_CA:1.5
	noindx:1.5
	Bproc:1.4
	oct21:1.3
	last77:1.3;
locks; strict;
comment	@c @;


1.16
date	2018.10.03.14.34.07;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.24.13.25.49;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2009.06.22.14.47.45;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.20.48.27;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.18.38.50;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.05.19.54.54;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2004.05.03.18.21.24;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.23.17.17.10;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2004.01.14.20.35.25;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.10.20.02.27;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.16.16.43.39;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.12.18.03.51;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.11.10.23.09.20;	author yuchen;	state Exp;
branches;
next	1.3;

1.3
date	99.02.05.16.41.54;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	99.02.04.15.24.23;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.49.17;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.16
log
@email_health_dept
@
text
@
C **********************************************************************
C
C  GETCOOT
C                         REWRITTEN            SEP 2003 ARDEAN LEITH
C                         AVERAGE WEIGHTP      MAY 2004 ARDEAN LEITH
C                         PIXEL FILE FDUM      JUN 2009 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  GETCOOT(NFAC,NUMIM,NPIX,INUMBR,USE_PCA,
C          EVECTS,EVALS,WEIGHTI,WEIGHTP,SUMW, CO, BLU, BLW, 
C          LUNS, LUNI, LUNP)
C
C  PURPOSE: GET COORDINATES FOR TRANSPOSED DATA
C
C  PARAMETERS:           
C	NFAC 	  NUMBER OF EIGENVECTORS REQUESTED              (INPUT)
C	NPIX      NUMBER OF PIXELS PER IMAGE                    (INPUT)
C       NUMIM	  NUMBER OF IMAGES                              (INPUT)
C       INUMBR()  IMAGE NUMBER LIST                             (INPUT)
C	USE_PCA   CORAN VS PCA FLAG                             (INPUT)
C       EVECTS    EIGENVECTORS (COLUMN)  OF X'X AND             (INPUT)
C                 X(I,*)= BLU() J=1,JTOT W/ I=1,ITOT
C       EVALS()    EIGENVALUES                                  (INPUT)
C	WEIGHTI() SUM OF PIXEL VALUES FOR THIS IMAGE            (INPUT)
C	WEIGHTP() SUM OF PIXEL VALUES AT THIS PIXEL             (INPUT)
C	SUMW      SUM OF ALL THE PIXEL VALUES IN ALL IMAGES     (INPUT)
C       CO()      WORKING ARRAY  
C       BLU()     WORKING ARRAY FOR INPUTS
C       BLW()     WORKING ARRAY FOR OUTPUTS
C	LUNS	  SEQUENTIAL IMAGE I/O UNIT ( FOR INPUT)        (INPUT)
C	LUNI      IMAGE COORDINATE I/O UNIT (FOR OUTPUT)        (INPUT)
C	LUNP      PIXEL COORDINATE I/O UNIT (FOR OUTPUT)        (INPUT)
C
C  NOTE: FOR CORAN WEIGHTP IS RETURNED UNCHANGED
C        FOR CORAN WEIGHTI IS RETURNED DIVIDED BY SUMW
C        FOR CORAN _PIX    IS WEIGHTP  DIVIDED BY SUMW
C        FOR CORAN _IMC    IS WEIGHTI  DIVIDED BY SUMW
C
C        FOR PCA   WEIGHTP IS RETURNED UNCHANGED
C        FOR PCA   WEIGHTI IS RETURNED UNCHANGED
C        FOR PCA   _PIX    IS WEIGHTP  UNCHANGED
C        FOR PCA   _IMC    IS WEIGHTI  UNCHANGED
C
C **********************************************************************

        SUBROUTINE GETCOOT(NFAC,NUMIM,NPIX,INUMBR,USE_PCA,
     &                  EVECTS,EVALS,WEIGHTI,WEIGHTP,SUMW, CO, BLU, BLW, 
     &                  LUNS, LUNI, LUNP)
            
        REAL    :: EVECTS(NUMIM, NUMIM), EVALS(NUMIM), CO(NUMIM)
        REAL    :: BLU(NUMIM), BLW(NFAC)
        INTEGER :: INUMBR(NUMIM)
        REAL    :: WEIGHTI(NUMIM)
        REAL    :: WEIGHTP(NPIX)
        LOGICAL :: USE_PCA

C       SKIP HEADERS ON RELEVANT I/O FILES          
        REWIND(LUNI)
        READ(LUNI,*)  IDUM, IDUM, IDUM, IDUM, IDUM, IDUM

        REWIND(LUNP)
        READ(LUNP,*) IDUM, IDUM, IDUM, IDUM, IDUM
      
        IF (USE_PCA) THEN
           CODUM = 0.0 
           DOR   = 0.0    
        ELSE
C          INITIALIZE ARRAYS  
           CO      =  0.0
           WEIGHTI =  WEIGHTI / SUMW 
        ENDIF      
        ACT  = 1
        FDUM = 0.0

C       WRITE PIX  DATA
        DO I = 1,NPIX

C         READ THE WHOLE PIXEL  IN BLU ARRAY FROM _SEQ FILE.
          READ(LUNS,REC=I,IOSTAT=IERR) BLU

          FPIX = I
          PIA  = WEIGHTP(I) 

C         COORDINATES TO ORIGIN FOR THE ROWS (SINCE TRANSPOSED)
          DO K=1,NFAC                                                   
            BLW(K) = 0.0 

            IF (USE_PCA) THEN
                DO J=1, NUMIM
                   BLW(K) = BLW(K) + (BLU(J) * EVECTS(J,K))
                ENDDO
             ELSE
                DO J=1, NUMIM
                   BLW(K) = BLW(K) + (BLU(J) * EVECTS(J,K)) / PIA
                ENDDO
             ENDIF
          ENDDO


          IF (USE_PCA) THEN
C            FOR PCA ANALYSIS
     
C            WRITE  DATA TO PIX FILE 
             FPIX = I

C            GET AVERAGE FOR _PIX FILE (MAY 04)
             PIAT = PIA / NPIX
             WRITE(LUNP,90) (BLW(K),K=1,NFAC), PIAT, DOR, FPIX, FDUM 
90           FORMAT(10(1PG12.5,' '))

          ELSE
C            FOR CORAN FIND DISTANCES TO ORIGIN FOR THE ROWS     
             DOR = 0.0   
             DO J=1,NUMIM
                DOR = DOR + (BLU(J)/PIA - WEIGHTI(J))**2 / WEIGHTI(J)
             ENDDO

             PI = PIA / SUMW   
             DO J=1,NUMIM
                CO(J) = CO(J) + (BLU(J)/(SUMW * WEIGHTI(J)) - PI)**2/PI
             ENDDO

C            WRITE  DATA TO PIX FILE 
C            GET AVERAGE FOR _PIX FILE (MAY 04)
             PIT = PI * SUMW / NPIX
             WRITE(LUNP,90) (BLW(K),K=1,NFAC), PIT, DOR, FPIX, FDUM
          ENDIF
        ENDDO

C       WRITE IMC DATA
C       COORDINATES  FOR THE COLS (SINCE TRANSPOSED)
        DO J=1,NUMIM
          DO K=1,NFAC 
C            IF  IMAGES HAVE SOME CROSS-CORRELATION (I.E; (PART OF) ONE 
C	     IMAGE IS THE SAME AS (PART OF) ANOTHER), ONE OF THE FACTORS
C	     WILL BE 0 (SO A NEGATIVE EIGENVALUE MAY EXIST).
             EVALS(K) = MAX(EVALS(K), 1.0E-9)

             BLW(K) = EVECTS(J,K) * SQRT(EVALS(K))            
          ENDDO

C         WRITE IMC DATA TO IMC FILE 
          FIM = INUMBR(J)
          IF (USE_PCA) THEN
             WRITE(LUNI,90) (BLW(K),K=1,NFAC),WEIGHTI(J),CODUM,FIM,ACT
          ELSE
             WRITE(LUNI,90) (BLW(K),K=1,NFAC),WEIGHTI(J),CO(J),FIM,ACT
          ENDIF
        ENDDO

        RETURN
        END
@


1.15
log
@GPL_2010
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.14
log
@_IMC or _PIX Line length bug
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.13
log
@GPL License fixed
@
text
@d5 3
a7 3
C                         REWRITTEN         SEP 2003 ARDEAN LEITH
C                         AVERAGE WEIGHTP   MAY 2004 ARDEAN LEITH
C 
d10 1
a10 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d97 2
a98 1
        ACT = 1
d133 1
a133 1
             WRITE(LUNP,90) (BLW(K),K=1,NFAC), PIAT, DOR, FPIX 
d151 1
a151 1
             WRITE(LUNP,90) (BLW(K),K=1,NFAC), PIT, DOR, FPIX 
@


1.12
log
@HRI GPL License used
@
text
@a2 1
C***************************************************************************
a8 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 6

C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a69 1
C***************************************************************************
@


1.11
log
@PIAT
@
text
@d2 1
d11 24
d77 1
@


1.10
log
@AVERAGE WEIGHTP for _PIX
@
text
@d106 1
a106 2
C         GET AVERAGE FOR _PIX FILE (MAY 04)
          PIA  = PIA / NPIX
d112 4
a115 1
             WRITE(LUNP,90) (BLW(K),K=1,NFAC), PIA, DOR, FPIX 
d131 3
a133 1
             WRITE(LUNP,90) (BLW(K),K=1,NFAC), PI, DOR, FPIX 
@


1.9
log
@file formats
@
text
@d5 3
a7 2
C                         REWRITTEN      SEP 2003 ARDEAN LEITH
C
d17 3
a19 2
C  GETCOOT(NFAC,NUMIM,NPIX,INUMBR,USE_PCA,EVECTS,EVALS,WEIGHTI,SUMW,
C              CO,BLU,BLW, LUNS, LUNI, LUNP)
d89 1
a89 1
          PIA  = WEIGHTP(I)
d106 2
@


1.8
log
@CA SR  bug
@
text
@d40 10
d64 5
a68 2
        CALL REWF(LUNI, 1)
        CALL REWF(LUNP, 1)
d71 2
a72 3
           DOR   = 0.0
           PI    = 0.0  
           CODUM = 0.0     
d78 1
d83 1
a83 1
C         READ THE WHOLE PIXEL  IN BLU ARRAY.
d86 2
a87 1
          PIA    = WEIGHTP(I)
d92 1
d104 10
a113 2
          IF (.NOT. USE_PCA) THEN
C            DISTANCES TO ORIGIN FOR THE ROWS     
d121 1
a121 2
                CO(J) = CO(J) + (BLU(J)/(SUMW * WEIGHTI(J)) - PI)**2 /
     &                  PI
d123 3
a126 5

C         WRITE  DATA TO PIX FILE 
          FPIX = I
          WRITE(LUNP,90) (BLW(K),K=1,NFAC), PI, DOR, FPIX 
90        FORMAT(10(1PG12.5,' '))
d144 1
a144 1
             WRITE(LUNI,90) (BLW(K),K=1,NFAC),WEIGHTI(J),CODUM,FIM
d146 1
a146 1
             WRITE(LUNI,90) (BLW(K),K=1,NFAC),WEIGHTI(J),CO(J),FIM
@


1.7
log
@output format
@
text
@d16 1
a16 1
C  GETCOOT(NFAC,NUMIM,NPIX,INUMBR,USE_PCA,BLS,BLD,WEIGHTI,SOM,
d22 17
a38 16
C	NFAC 	 NUMBER OF EIGENVECTORS REQUESTED              (INPUT)
C	NPIX     NUMBER OF PIXELS PER IMAGE                    (INPUT)
C       NUMIM	 NUMBER OF IMAGES                              (INPUT)
C       INUMBR() IMAGE NUMBER LIST                             (INPUT)
C	USE_PCA  CORAN VS PCA FLAG                             (INPUT)
C       BLS(,)   EIGENVECTORS (COLUMN)  OF X'X AND             (INPUT)
C                X(I,*)= BLU() J=1,JTOT W/ I=1,ITOT
C       BLD()    EIGENVALUES                                   (INPUT)
C       WEIGHTI() WEIGHT ARRAY                                  (INPUT)
C	SOM      SUM OF ALL THE PIXEL VALUES IN ALL IMAGES     (OUTPUT)
C       CO()     WORKING ARRAY  
C       BLU()    WORKING ARRAY FOR INPUTS
C       BLW()    WORKING ARRAY FOR OUTPUTS
C	LUNS	 SEQUENTIAL IMAGE I/O UNIT ( FOR INPUT)        (INPUT)
C	LUNI     IMAGE COORDINATE I/O UNIT (FOR OUTPUT)        (INPUT)
C	LUNP     PIXEL COORDINATE I/O UNIT (FOR OUTPUT)        (INPUT)
d43 2
a44 2
     &                     BLS,BLD,WEIGHTI, SOM, CO, BLU, BLW, 
     &                     LUNS, LUNI, LUNP)
d46 1
a46 1
        REAL    :: BLS(NUMIM, NUMIM), BLD(NUMIM), CO(NUMIM)
d50 1
d53 1
a53 2
C       SKIP HEADERS ON I/O FILES          
        CALL REW(LUNS,  1)
d64 1
a64 1
           WEIGHTI =  WEIGHTI / SOM 
d70 2
a71 2
C         LUNS HAS TRANSPOSED DATA!
          READ(LUNS) BLU, PIA
d73 2
a77 1

d80 1
a80 1
                   BLW(K) = BLW(K) + (BLU(J) * BLS(J,K))
d84 1
a84 1
                   BLW(K) = BLW(K) + (BLU(J) * BLS(J,K)) / PIA
d96 1
a96 1
             PI = PIA / SOM   
d98 2
a99 1
                CO(J) = CO(J) + (BLU(J)/(SOM * WEIGHTI(J)) - PI)**2 /PI
d116 1
a116 1
             BLD(K) = MAX(BLD(K), 1.0E-9)
d118 1
a118 1
             BLW(K) = BLS(J,K) * SQRT(BLD(K))            
@


1.6
log
@CA & CL rewrite
@
text
@d103 1
a103 1
90        FORMAT(100000(1PG12.5,' '))
d121 1
a121 1
             WRITE(LUNI,91) (BLW(K),K=1,NFAC),WEIGHTI(J),CODUM,FIM
d123 1
a123 2
             WRITE(LUNI,91) (BLW(K),K=1,NFAC),WEIGHTI(J),CO(J),FIM
91           FORMAT(100000(1PG12.5,' '))
@


1.5
log
@cosmetic
@
text
@d5 1
d16 2
a17 2
C  GETCOOT(NFAC,KB,NPIX,NUMIM,S,D,TRACE,PJ,SOM, 
C       CO, U, W, LSAV, LIMA, LPIX, LUV, MADARX,MADARY)
d19 2
d22 16
a37 8
C	NFAC 	NUMBER OF EIGENVECTORS REQUESTED
C       NUMIM	NUMBER OF IMAGES
C	NPIX    NUMBER OF PIXELS PER IMAGE
C	LSAV	SEQUENTIAL IMAGE FILE (INPUT)
C	LIMA    IMAGE COORDINATE FILE (OUTPUT)
C
C	S(,) HAS THE EIGENVECTORS (COLUMN)  OF X'X AND D() HAS THE
C       EIGENVALUES. X(I,*)= U() J=1,JTOT W/ I=1,ITOT
d41 3
a43 2
        SUBROUTINE GETCOOT(NFAC,KB,NPIX,NUMIM,S,D,TRACE,PJ,SOM, 
     &             CO, U, W, LSAV, LIMA, LPIX, LUV, MADAR)
d45 83
a127 57
        DIMENSION S(NPIX, KB), D(NPIX), CO(NPIX), PJ(NPIX),
     &            U(NPIX), W(NFAC)
        INTEGER LUV(NUMIM), MADAR(NPIX)
            
C       GET COORDINATES FOR TRANSPOSED DATA
        CALL REW(LSAV, 1)
        CALL REW(LIMA, 1)
        
        DO  J  =  1, NPIX
           CO(J)  =  0.0
        END DO
        DO  J  =  1, NPIX
          PJ(J)  =  PJ(J) / SOM       
        END DO
        DO I  =  1, NUMIM
          READ(LSAV) (U(J),  J = 1, NPIX),  PIA,  PVAR,  INO

C         COORDINATES  TO ORIGIN FOR THE ROWS

          DO  K=1, NFAC                                                   
            W(K)  =  0.0 
            DO J= 1, NPIX
              W(K) =  W(K)  +  (U(J) * S(J, K)) / (PIA)
            END DO
          END DO

C         DISTANCES TO ORIGIN FOR THE ROWS     
 
          DOR    =  0.0   
          DO J  =  1, NPIX
            DOR  =  DOR  +  (U(J)/PIA - PJ(J))**2 / PJ(J)
          END DO
c          DOR = AMAX1(DOR, 1.0E - 10)
          PI  =  PIA / SOM   
          IF (LUV(I) .NE. 0) THEN
            DO  J  =  1, NPIX
              CO(J) = CO(J) + (U(J)/(SOM * PJ(J)) - PI)**2 / PI
            END DO
          END IF
          WRITE(LIMA) (W(K), K = 1, NFAC), PI, DOR, INO, LUV(I)
        END DO

C       COORDINATES  FOR THE COLS

        DO J  =  1, NPIX
          DO K  =  1, NFAC 
C           IF THE IMAGES HAVE SOME CROSS-CORRELATION (I.E; (PART OF) ONE 
C	    IMAGE IS THE SAME AS (PART OF) ANOTHER), ONE OF THE FACTORS
C	    WILL BE 0 (SO A NEGATIVE EIGENVALUE MAY EXIST).
C
C1	    INCLUDE THE NEXT LINE IN THE WORKING VERSION OF THIS ROUTINE.
C2	    DELETE COMMENT 1 AND 2   ????? mar 02 al ????
C           D(K) = AMAX1(D(K), 1.0E - 9)
            W(K) = S(J, K) * SQRT(D(K))            
          END DO
          WRITE(LPIX)(W(K),K=1,NFAC),PJ(J),CO(J),MADAR(J),INO
        END DO
@


1.4
log
@a
@
text
@d4 1
d6 8
a13 9
C **************************************************************************
C *  AUTHOR :                                                              *
C *  COPYRIGHT (C)1987 , WADSWORTH CENTER FOR LABORATORIES AND             *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
C **************************************************************************
d15 2
d18 1
a27 2
C
C
d30 1
a30 1
        SUBROUTINE GETCOOT (NFAC,KB,NPIX,NUMIM,S,D,TRACE,PJ,SOM, 
a32 5
 

C       I DO NOT KNOW IF SAVE IS NEEDED FEB 99 al
        SAVE

d38 2
a39 2
        CALL REW(LSAV,  1)
        CALL REW(LIMA,  1)
d52 4
a55 4
          DO  K  =  1, NFAC                                                   
            W(K)   =  0.0 
            DO J  =  1, NPIX
              W(K)   =  W(K)  +  (U(J) * S(J, K)) / (PIA)
d67 1
a67 1
          IF(LUV(I) .NE. 0) THEN
d72 1
a72 2
C          WRITE(LIMA) (W(K), K = 1, NFAC), PI, DOR, LUV(I)
          WRITE(LIMA) (W(K), K = 1, NFAC), PI, DOR,  INO, LUV(I)
d79 7
a85 8
C           if the images have some cross-correlation (i.e; (part of) one 
C	    image is the same as (part of) another), one of the factors
C	    will be 0 (so a negative eigenvalue may exist).
C	    
C
C1	    include the next line in the working version of this routine.
C2	    delete comment 1 and 2
c           D(K) = AMAX1(D(K), 1.0E - 9)
d88 1
a88 1
          WRITE(LPIX) (W(K), K = 1, NFAC), PJ(J), CO(J), MADAR(J), INO
@


1.3
log
@typo
@
text
@d32 1
a32 1
CNO_SAVE 
@


1.2
log
@CNO_SAVE
@
text
@a1 1
C
d28 1
a28 1
\
@


1.1
log
@Initial revision
@
text
@d29 1
a29 2
C

d33 5
a37 2
C        INTEGER  LSAV, LIMA, LPIX
C        INTEGER * 4  NFAC, KB, NPIX, NUMIM
d42 1
a42 1
C      GET COORDINATES FOR TRANSPOSED DATA
d47 1
a47 1
          CO(J)  =  0.0
d55 1
a55 3
C
C       COORDINATES  TO ORIGIN FOR THE ROWS
C
d64 1
a64 3
C
C       DISTANCES TO ORIGIN FOR THE ROWS                    
C
d80 1
a80 1
C
d82 1
a82 1
C
@
