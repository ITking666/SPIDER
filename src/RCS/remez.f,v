head	1.10;
access;
symbols
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.9
	pre_opfiles:1.9
	src:1.9
	best-code:1.9
	x-named-regs:1.9
	x:1.9
	v13-00:1.9
	pre_GPL:1.8
	prec_CA:1.8
	noindx:1.8
	Bproc:1.8
	oct21:1.7
	last77:1.7;
locks; strict;
comment	@c @;


1.10
date	2010.06.24.13.26.44;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.17.21.01.08;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.11.10.23.11.17;	author yuchen;	state Exp;
branches;
next	1.7;

1.7
date	99.03.19.17.00.47;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	98.12.30.19.41.59;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.10.14.21.19.28;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	97.05.22.12.47.55;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	95.10.06.17.37.57;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	94.06.23.11.51.49;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.52.14;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.10
log
@GPL_2010
@
text
@

C ++********************************************************************
C                                                                      *
C REMEZ                                                                *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   REMEZ(EDGE,NBANDS,NOUT)
C                                                                   *
C***********************************************************************

          SUBROUTINE  REMEZ(EDGE,NBANDS,NOUT)

          COMMON TDM(2000),
     &	  PI2,AD,DEVI,X,Y,GRID,DES,WT,ALPHA,IEXT,NFCNS,NGRID 

          DIMENSION  IEXT(66),AD(66),ALPHA(66),X(66),Y(66)
          DIMENSION  EDGE(20) 
          DIMENSION  DES(1056),GRID(1056),WT(1056)
          DIMENSION  A(66),P(65),Q(65)
          DOUBLE PRECISION  PI2,DNUM,DDEN,DTEMP,A,P,Q 
          DOUBLE PRECISION  AD,DEVI,X,Y
          DOUBLE PRECISION  DEE,GEE
          EXTERNAL  DEE,GEE

          ARCOS(QT)=1.57079632-ATAN(QT/SQRT(1.0-QT*QT)) 

          ITRMAX=25 
          DEVL=-1.0 
          NZ=NFCNS+1
          NZZ=NFCNS+2 
          NITER=0 

 100      CONTINUE
          IEXT(NZZ)=NGRID+1 
          NITER=NITER+1 
          IF (NITER.GT.ITRMAX)  GO TO 400
          DO J=1,NZ 
             JJ=IEXT(J)
             DTEMP=GRID(JJ)
             DTEMP=DCOS(DTEMP*PI2) 
             X(J)=DTEMP
	  ENDDO
          JET=(NFCNS-1)/15+1
          DO J=1,NZ 
             AD(J)=DEE(J,NZ,JET) 
	  ENDDO
          DNUM=0.0
          DDEN=0.0
          K=1 
          DO    J=1,NZ 
            L=IEXT(J) 
            DTEMP=AD(J)*DES(L)
            DNUM=DNUM+DTEMP 
            DTEMP=FLOAT(K)*AD(J)/WT(L)
            DDEN=DDEN+DTEMP 
            K=-K
	  ENDDO
          DEVI=DNUM/DDEN 
          NU=1
          IF (DEVI.GT.0.0)  NU=-1 
          DEVI=-FLOAT(NU)*DEVI
          K=NU
          DO    J=1,NZ 
            L=IEXT(J) 
            DTEMP=FLOAT(K)*DEVI/WT(L)
            Y(J)=DES(L)+DTEMP 
            K=-K
	  ENDDO
          IF (DEVI .LT. DEVL)  THEN
             WRITE(NOUT,1111)
1111         FORMAT(' ********** FAILURE TO CONVERGE **********'/
     &              '0PROBABLE CAUSE IS MACHINE ROUNDING ERROR'/ 
     &              '0THE IMPULSE RESPONSE MAY BE CORRECT'/
     &              '0CHECK WITH A FREQUENCY RESPONSE')
              GO TO 400
          ENDIF 

          DEVL=DEVI
          JCHNGE=0
          K1=IEXT(1)
          KNZ=IEXT(NZ)
          KLOW=0
          NUT=-NU 
          J=1 


 200          IF (J.EQ.NZZ)   YNZ=COMP 
          IF (J.GE.NZZ)  GO TO 300 
          KUP=IEXT(J+1) 
          L=IEXT(J)+1 
          NUT=-NUT
          IF (J.EQ.2)  Y1=COMP 
          COMP=DEVI
          IF (L.GE.KUP)  GO TO 220 
          ERR=GEE(L,NZ) 
          ERR=(ERR-DES(L))*WT(L)
          DTEMP=FLOAT(NUT)*ERR-COMP 
          IF (DTEMP.LE.0.0)  GO TO 220 
          COMP=FLOAT(NUT)*ERR 
 210      L=L+1 
          IF (L.GE.KUP)  GO TO 215 
          ERR=GEE(L,NZ) 
          ERR=(ERR-DES(L))*WT(L)
          DTEMP=FLOAT(NUT)*ERR-COMP
          IF (DTEMP.LE.0.0)   GO TO 215
          COMP=FLOAT(NUT)*ERR
          GO TO 210

 215      IEXT(J)=L-1
          J=J+1
          KLOW=L-1
          JCHNGE=JCHNGE+1
          GO TO 200

 220      L=L-1 
 225      L=L-1 
          IF (L.LE.KLOW) GO TO 250
          ERR=GEE(L,NZ)
          ERR=(ERR-DES(L))*WT(L)
          DTEMP=FLOAT(NUT)*ERR-COMP
          IF (DTEMP.GT.0.0) GO TO 230
          IF (JCHNGE.LE.0) GO TO 225
          GO TO 260
 
 230      COMP=FLOAT(NUT)*ERR 
 235      L=L-1 
          IF (L.LE.KLOW)  GO TO 240
          ERR=GEE(L,NZ) 
          ERR=(ERR-DES(L))*WT(L)
          DTEMP=FLOAT(NUT)*ERR-COMP 
          IF (DTEMP.LE.0.0) GO TO 240 
          COMP=FLOAT(NUT)*ERR 
          GO TO 235 

 240      KLOW=IEXT(J)
          IEXT(J)=L+1 
          J=J+1 
          JCHNGE=JCHNGE+1 
          GO TO 200 

 250      L=IEXT(J)+1 
          IF (JCHNGE.GT.0)  GO TO 215
 255      L=L+1 
          IF (L.GE.KUP)  GO TO 260 
          ERR=GEE(L,NZ) 
          ERR=(ERR-DES(L))*WT(L)
          DTEMP=FLOAT(NUT)*ERR-COMP 
          IF (DTEMP.LE.0.0)  GO TO 255 
          COMP=FLOAT(NUT)*ERR 
          GO TO 210
 
 260      KLOW=IEXT(J)
          J=J+1 
          GO TO 200 

 300      IF (J.GT.NZZ)  GO TO 320 
          IF (K1.GT.IEXT(1))  K1=IEXT(1) 
          IF (KNZ.LT.IEXT(NZ))   KNZ=IEXT(NZ)
          NUT1=NUT
          NUT=-NU 
          L=0 
          KUP=K1
          COMP=YNZ*1.00001
          LUCK=1
 310      L=L+1 
          IF (L.GE.KUP)  GO TO 315 
          ERR=GEE(L,NZ) 
          ERR=(ERR-DES(L))*WT(L)
          DTEMP=FLOAT(NUT)*ERR-COMP 
          IF (DTEMP.LE.0.0)  GO TO 310 
          COMP=FLOAT(NUT)*ERR 
          J=NZZ 
          GO TO 210
 
 315      LUCK=6
          GO TO 325 

 320      IF (LUCK.GT.9) GO TO 350
          IF (COMP.GT.Y1) Y1=COMP 
          K1=IEXT(NZZ)
 325      L=NGRID+1 
          KLOW=KNZ
          NUT=-NUT1
          COMP=Y1*1.00001 
 330      L=L-1 
          IF (L.LE.KLOW) GO TO 340
          ERR=GEE(L,NZ) 
          ERR=(ERR-DES(L))*WT(L)
          DTEMP=FLOAT(NUT)*ERR-COMP 
          IF (DTEMP.LE.0.0) GO TO 330 
          J=NZZ 
          COMP=FLOAT(NUT)*ERR 
          LUCK=LUCK+10
          GO TO 235 

 340      IF (LUCK.EQ.6)  GO TO 370
          DO J=1,NFCNS
            NZJ=NZ-J
            NZZJ=NZZ-J
            IEXT(NZZJ)=IEXT(NZJ)
	  ENDDO
          IEXT(1)=K1
          GO TO 100
 
 350          KN=IEXT(NZZ)
          DO    J=1,NFCNS
           IEXT(J)=IEXT(J+1) 
	  ENDDO
          IEXT(NZ)=KN 
          GO TO 100
 
 370          IF (JCHNGE.GT.0)  GO TO 100
 400          CONTINUE
          NM1=NFCNS-1 
          FSH=1.0E-06 
          GTEMP=GRID(1) 
          X(NZZ)=-2.0 
          CN=2*NFCNS-1
          DELF=1.0/CN 
          L=1 
          KKK=0 
          IF (EDGE(1).EQ.0.0 .AND. EDGE(2*NBANDS).EQ.0.5)  KKK=1 
          IF (NFCNS.LE.3)  KKK=1 
          IF (KKK.EQ.1)  GO TO 405 
          DTEMP=DCOS(PI2*GRID(1)) 
          DNUM=DCOS(PI2*GRID(NGRID))
          AA=2.0/(DTEMP-DNUM) 
          BB=-(DTEMP+DNUM)/(DTEMP-DNUM)
 405      CONTINUE
          DO    J=1,NFCNS
          FT=FLOAT(J-1)*DELF
          XT=DCOS(PI2*FT) 
          IF (KKK.EQ.1)  GO TO 410 
          XT=(XT-BB)/AA 
          FT=ARCOS(XT)/PI2
 410      XE=X(L) 
          IF (XT.GT.XE)  GO TO 420 
          IF ((XE-XT).LT.FSH)  GO TO 415 
          L=L+1 
          GO TO 410
 
 415      A(J)=Y(L) 
          GO TO 425 

 420      IF ((XT-XE).LT.FSH) GO TO 415 
          GRID(1)=FT
          A(J)=GEE(1,NZ)
 425          CONTINUE
          IF (L.GT.1) L=L-1 
	  ENDDO
          GRID(1)=GTEMP 
          DDEN=PI2/CN 
          DO J=1,NFCNS
            DTEMP=0.0 
            DNUM=FLOAT(J-1)*DDEN
            IF (NM1.LT.1) GO TO 505
              DO K=1,NM1
                 DTEMP=DTEMP+A(K+1)*DCOS(DNUM*FLOAT(K))
	      ENDDO
 505        DTEMP=2.0*DTEMP+A(1)
            ALPHA(J)=DTEMP
	  ENDDO
          DO J=2,NFCNS
             ALPHA(J)=2.0*ALPHA(J)/CN
	  ENDDO
          ALPHA(1)=ALPHA(1)/CN
          IF (KKK.EQ.1)  GO TO 545 
          P(1)=2.0*ALPHA(NFCNS)*BB+ALPHA(NM1) 
          P(2)=2.0*AA*ALPHA(NFCNS)
          Q(1)=ALPHA(NFCNS-2)-ALPHA(NFCNS)
          DO  540  J=2,NM1
          IF (J.LT.NM1)  GO TO 515 
          AA=0.5*AA 
          BB=0.5*BB
 
 515      CONTINUE
          P(J+1)=0.0
          DO K=1,J
             A(K)=P(K) 
             P(K)=2.0*BB*A(K)
	  ENDDO
          P(2)=P(2)+A(1)*2.0*AA 
          JM1=J-1 
          DO K=1,JM1
             P(K)=P(K)+Q(K)+AA*A(K+1)
	  ENDDO
          JP1=J+1 
          DO    K=3,JP1
             P(K)=P(K)+AA*A(K-1) 
	  ENDDO
          IF (J.EQ.NM1)  GO TO 540 
          DO K=1,J
             Q(K)=-A(K)
	  ENDDO
          NF1J=NFCNS-1-J
          Q(1)=Q(1)+ALPHA(NF1J) 
 540          CONTINUE
          DO J=1,NFCNS
             ALPHA(J)=P(J) 
	  ENDDO
 545      CONTINUE

          IF (NFCNS.GT.3)  RETURN

          ALPHA(NFCNS+1)=0.0
          ALPHA(NFCNS+2)=0.0

          END 
@


1.9
log
@GPL License fixed
@
text
@a7 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d9 5
a13 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d15 1
a15 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d22 1
a22 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a23 1
C=*                                                                    *
d25 1
a25 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@a
@
text
@d8 23
a30 6
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
@


1.7
log
@nout
@
text
@d35 1
a35 1
CNO_SAVE
@


1.6
log
@merged ouch into this, cosmetic
@
text
@d16 1
a16 1
C   REMEZ(EDGE,NBANDS)
d20 1
a20 1
          SUBROUTINE  REMEZ(EDGE,NBANDS)
@


1.5
log
@*** empty log message ***
@
text
@d1 19
d21 1
d24 1
d33 1
d41 2
a42 1
 100          CONTINUE
d45 6
a50 6
          IF(NITER.GT.ITRMAX)  GO TO 400
          DO    J=1,NZ 
          JJ=IEXT(J)
          DTEMP=GRID(JJ)
          DTEMP=DCOS(DTEMP*PI2) 
          X(J)=DTEMP
d53 2
a54 2
          DO    J=1,NZ 
           AD(J)=DEE(J,NZ,JET) 
d60 6
a65 6
           L=IEXT(J) 
           DTEMP=AD(J)*DES(L)
           DNUM=DNUM+DTEMP 
           DTEMP=FLOAT(K)*AD(J)/WT(L)
           DDEN=DDEN+DTEMP 
           K=-K
d69 1
a69 1
          IF(DEVI.GT.0.0)  NU=-1 
d73 15
a87 9
           L=IEXT(J) 
           DTEMP=FLOAT(K)*DEVI/WT(L)
           Y(J)=DES(L)+DTEMP 
           K=-K
	  ENDDO
          IF(DEVI.GE.DEVL)  GO TO 150
          CALL  OUCH
          GO TO 400 
 150          DEVL=DEVI
d94 4
a97 4
C 
C 
 200          IF(J.EQ.NZZ)   YNZ=COMP 
          IF(J.GE.NZZ)  GO TO 300 
d101 1
a101 1
          IF(J.EQ.2)  Y1=COMP 
d103 1
a103 1
          IF(L.GE.KUP)  GO TO 220 
d107 1
a107 1
          IF(DTEMP.LE.0.0)  GO TO 220 
d109 2
a110 2
 210          L=L+1 
          IF(L.GE.KUP)  GO TO 215 
d114 1
a114 1
          IF(DTEMP.LE.0.0)   GO TO 215
d117 2
a118 1
 215          IEXT(J)=L-1
d123 4
a126 3
 220          L=L-1 
 225          L=L-1 
          IF(L.LE.KLOW)   GO TO 250
d130 7
a136 6
          IF(DTEMP.GT.0.0)  GO TO 230
          IF(JCHNGE.LE.0)  GO TO 225
         GO TO 260 
 230          COMP=FLOAT(NUT)*ERR 
 235          L=L-1 
          IF(L.LE.KLOW)  GO TO 240
d140 1
a140 1
          IF(DTEMP.LE.0.0)  GO TO 240 
d143 2
a144 1
 240          KLOW=IEXT(J)
d149 5
a153 4
 250          L=IEXT(J)+1 
          IF(JCHNGE.GT.0)  GO TO 215
 255          L=L+1 
          IF(L.GE.KUP)  GO TO 260 
d157 1
a157 1
          IF(DTEMP.LE.0.0)  GO TO 255 
d159 3
a161 2
          GO TO 210 
 260          KLOW=IEXT(J)
d164 4
a167 3
 300          IF(J.GT.NZZ)  GO TO 320 
          IF(K1.GT.IEXT(1))  K1=IEXT(1) 
          IF(KNZ.LT.IEXT(NZ))   KNZ=IEXT(NZ)
d174 2
a175 2
 310          L=L+1 
          IF(L.GE.KUP)  GO TO 315 
d179 1
a179 1
          IF(DTEMP.LE.0.0)  GO TO 310 
d182 3
a184 2
          GO TO 210 
 315          LUCK=6
d186 3
a188 2
 320          IF(LUCK.GT.9)  GO TO 350
          IF(COMP.GT.Y1)  Y1=COMP 
d190 1
a190 1
 325          L=NGRID+1 
d194 2
a195 2
 330          L=L-1 
          IF(L.LE.KLOW)  GO TO 340
d199 1
a199 1
          IF(DTEMP.LE.0.0)  GO TO 330 
d204 6
a209 5
 340          IF(LUCK.EQ.6)  GO TO 370
          DO    J=1,NFCNS
           NZJ=NZ-J
           NZZJ=NZZ-J
           IEXT(NZZJ)=IEXT(NZJ)
d212 2
a213 1
          GO TO 100 
d219 3
a221 2
          GO TO 100 
 370          IF(JCHNGE.GT.0)  GO TO 100
d231 3
a233 3
          IF(EDGE(1).EQ.0.0 .AND. EDGE(2*NBANDS).EQ.0.5)  KKK=1 
          IF(NFCNS.LE.3)  KKK=1 
          IF(KKK.EQ.1)  GO TO 405 
d238 1
a238 1
 405          CONTINUE
d242 1
a242 1
          IF(KKK.EQ.1)  GO TO 410 
d245 3
a247 3
 410          XE=X(L) 
          IF(XT.GT.XE)  GO TO 420 
          IF((XE-XT).LT.FSH)  GO TO 415 
d249 3
a251 2
          GO TO 410 
 415          A(J)=Y(L) 
d253 2
a254 1
 420          IF((XT-XE).LT.FSH)  GO TO 415 
d258 1
a258 1
          IF(L.GT.1)  L=L-1 
d262 1
a262 1
          DO    J=1,NFCNS
d265 2
a266 2
            IF(NM1.LT.1)   GO TO 505
              DO    K=1,NM1
d272 2
a273 2
          DO    J=2,NFCNS
            ALPHA(J)=2.0*ALPHA(J)/CN
d276 1
a276 1
          IF(KKK.EQ.1)  GO TO 545 
d281 1
a281 1
          IF(J.LT.NM1)  GO TO 515 
d283 3
a285 2
          BB=0.5*BB 
 515          CONTINUE
d287 3
a289 3
          DO    K=1,J
           A(K)=P(K) 
           P(K)=2.0*BB*A(K)
d293 2
a294 2
          DO    K=1,JM1
           P(K)=P(K)+Q(K)+AA*A(K+1)
d298 1
a298 1
            P(K)=P(K)+AA*A(K-1) 
d300 3
a302 3
          IF(J.EQ.NM1)  GO TO 540 
          DO    K=1,J
            Q(K)=-A(K)
d307 2
a308 2
          DO    J=1,NFCNS
            ALPHA(J)=P(J) 
d310 4
a313 2
 545          CONTINUE
          IF(NFCNS.GT.3)  RETURN
d316 1
@


1.4
log
@function D changed to DEE
@
text
@d23 1
a23 1
          DO  110  J=1,NZ 
d27 2
a28 1
 110          X(J)=DTEMP
d30 3
a32 2
          DO  120  J=1,NZ 
 120          AD(J)=DEE(J,NZ,JET) 
d36 8
a43 7
          DO  130  J=1,NZ 
          L=IEXT(J) 
          DTEMP=AD(J)*DES(L)
          DNUM=DNUM+DTEMP 
          DTEMP=FLOAT(K)*AD(J)/WT(L)
          DDEN=DDEN+DTEMP 
 130          K=-K
d49 6
a54 5
          DO  140  J=1,NZ 
          L=IEXT(J) 
          DTEMP=FLOAT(K)*DEVI/WT(L)
          Y(J)=DES(L)+DTEMP 
 140          K=-K
d167 5
a171 4
          DO  345  J=1,NFCNS
          NZJ=NZ-J
          NZZJ=NZZ-J
 345          IEXT(NZZJ)=IEXT(NZJ)
d175 3
a177 2
          DO  360  J=1,NFCNS
 360          IEXT(J)=IEXT(J+1) 
d198 1
a198 1
          DO  430  J=1,NFCNS
d216 1
a216 1
 430          CONTINUE
d219 13
a231 10
          DO  510  J=1,NFCNS
          DTEMP=0.0 
          DNUM=FLOAT(J-1)*DDEN
          IF(NM1.LT.1)   GO TO 505
          DO  500  K=1,NM1
 500          DTEMP=DTEMP+A(K+1)*DCOS(DNUM*FLOAT(K))
 505          DTEMP=2.0*DTEMP+A(1)
 510          ALPHA(J)=DTEMP
          DO  550  J=2,NFCNS
 550          ALPHA(J)=2.0*ALPHA(J)/CN
d243 4
a246 3
          DO  520  K=1,J
          A(K)=P(K) 
 520          P(K)=2.0*BB*A(K)
d249 3
a251 2
          DO  525  K=1,JM1
 525          P(K)=P(K)+Q(K)+AA*A(K+1)
d253 3
a255 2
          DO  530  K=3,JP1
 530          P(K)=P(K)+AA*A(K-1) 
d257 3
a259 2
          DO  535  K=1,J
 535          Q(K)=-A(K)
d263 3
a265 2
          DO  543  J=1,NFCNS
 543          ALPHA(J)=P(J) 
@


1.3
log
@nosave
@
text
@d10 2
a11 2
          DOUBLE PRECISION  D,GEE
          EXTERNAL  D,GEE
d30 1
a30 1
 120          AD(J)=D(J,NZ,JET) 
@


1.2
log
@double precision function call fixed
@
text
@d13 1
a255 1
          RETURN
@


1.1
log
@Initial revision
@
text
@d10 2
d78 1
a78 1
        ERR=(ERR-DES(L))*WT(L)
@
