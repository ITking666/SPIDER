head	1.14;
access;
symbols
	healthdept_2018:1.14
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.11
	prec_CA:1.11
	noindx:1.10
	Bproc:1.10
	oct21:1.10
	last77:1.9;
locks; strict;
comment	@c @;


1.14
date	2018.10.03.14.34.07;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.25.50;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.58.17;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2003.03.04.14.37.42;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.09.13.16.27.24;	author pawel;	state Exp;
branches;
next	1.9;

1.9
date	99.02.04.15.24.25;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	97.12.12.17.40.13;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.08.14.13.32.01;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	95.08.14.15.10.44;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	95.08.11.17.41.00;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.05.04.18.01.21;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	95.04.17.18.36.59;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.11.14.10.51.40;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.49.19;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.14
log
@email_health_dept
@
text
@
C++*********************************************************************
C
C GETLAB.FOR -- CREATED NOV 87  BY ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  GETLAB(LUN,NSAM,BUF,IBUF1,NBUF,VALUE,IRTFLG)
C
C  PURPOSE:    THIS SUBROUTINE RETRIEVES VARIABLES FROM THE HEADER 
C              BY BUFFER POSITION NUMBER
C
C  PARAMETERS:
C             LUN          LOGICAL UNIT NUMBER OF FILE 
C             NSAM         NUMBER OF SAMPLES IN FILE
C             UNUSED       UNUSED 
C             IBUF1        FIRST BUFFER POSITION TO BE RETRIEVED
C             NBUF         NUMBER OF BUFFER POSITIONS TO BE RETRIEVED
C             VALUES       ARRAY FOR BUFFER VALUES RETRIEVED
C             IRTFLG       ERROR FLAG
C 
C       NOTE:   THE HEADER RECORD(S) OF THE FILE CONTAINS THE FOLLOWING 
C               BUFFER POSITIONS WHICH CAN BE RETRIEVED (AMONG OTHERS)
C                   7  FMAXD = IMAGE MAXIMUM
C                   8  FMIND = IMAGE MINIMUM
C                   9  AVD   = IMAGE AVERAGE
C                  10  SIG   = STANDARD DEVIATION (SQ. ROOT OF VARIANCE)
C                  14  IANGLE= FLAG INDIACATING THAT THERE ARE TILT
C                              ANGLES ARE STORED
C                  15  PHI   = TILT ANGLE
C                  16  THETA = TILT ANGLE
C                  17  GAMMA = TILT ANGLE
C                  18  XOFF  = X OFFSET
C                  19  YOFF  = Y OFFSET
C                  20  ZOFF  = Z OFFSET
C                  21  SCALE = SCALE
C
C--*******************************************************************
  
        SUBROUTINE GETLAB(LUN,NSAM,UNUSED,IBUF1,NBUF,VALUES,IRTFLG)

        DIMENSION VALUES(*), UNUSED(1)   

        ISTOP = IBUF1 + NBUF - 1
        IF (ISTOP .GT. 256) THEN
           CALL ERRT(102,'MAXIMUM HEADER LOCATION MUST BE < 257',ISTOP)
           IRTFLG = 1
           RETURN
        ENDIF

        NVAL = ISTOP - IBUF1 + 1

C       COPY THE HEADER INTO VALUES
        CALL LUNGETVALS(LUN,IBUF1,NVAL,VALUES,IRTFLG)
                 
        RETURN
        END

@


1.13
log
@GPL_2010
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.12
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@redhed/wrthed removal
@
text
@d2 1
a2 1
C++************************************************************************
d6 25
a30 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
@


1.10
log
@*** empty log message ***
@
text
@d24 1
a24 1
C             BUF          BUFFER FOR USE IN READING FILE
d48 1
a48 1
        SUBROUTINE GETLAB(LUN,NSAM,BUF,IBUF1,NBUF,VALUES,IRTFLG)
d50 1
a50 1
        INCLUDE 'CMLIMIT.INC'
d52 1
a52 8
        DIMENSION VALUES(*),BUF(1)   
c       BUF MUST BE >MAX(256,NSAM)

        COMMON /UNITS/  NDOC,NIN,NOUT

        NBUFSIZT = NBUFSIZ

        ISTOP    = IBUF1+NBUF-1
d54 1
a54 3
           WRITE(NOUT,*) 
     &           '*** MAXIMUM HEADER LOCATION MUST BE < 257: ',ISTOP
           CALL ERRT(100,'GETLAB',NE)
d59 4
a62 2
C       READ THE HEADER INTO BUF
        CALL REDHED(LUN,BUF,NBUFSIZT,NSAM,0,IRTFLG)
a63 7
        J = 0
        DO  I = IBUF1,ISTOP
           J         = J + 1
           VALUES(J) = BUF(I)
        ENDDO
        IRTFLG = 0

@


1.9
log
@CNO_SAVE
@
text
@d50 1
a50 1
CNO_SAVE 
d57 3
a59 1
        ISTOP = IBUF1+NBUF-1
d69 1
a69 1
        CALL REDHED(LUN,BUF,17000,NSAM,0,IRTFLG)
@


1.8
log
@added NOSTOP parameter to redhed call
.added NOSTOP parameter to redhed call
.added NOSTOP parameter to redhed call
.added NOSTOP parameter to redhed call
.added NOSTOP parameter to redhed call
@
text
@d50 2
@


1.7
log
@ no more short label code
@
text
@d65 1
a65 1
        CALL REDHED(LUN,BUF,17000,NSAM,IRTFLG)
@


1.6
log
@removed debug message
@
text
@d18 2
a19 2
C  PURPOSE:    THIS SUBROUTINE RETRIEVES VARIABLES FROM THE LABEL 
C                   BY BUFFER POSITION NUMBER
d30 1
a30 1
C       NOTE:   THE LABEL RECORD(S) OF THE FILE CONTAINS THE FOLLOWING 
d32 13
a44 16
C                          7  FMAXD = IMAGE MAXIMUM
C                          8  FMIND = IMAGE MINIMUM
C			   9  AVD   = IMAGE AVERAGE
C                         10  SIG  =  STANDARD DEVIATION (SQ. ROOT OF VARIANCE)
C                         11  IHIST=  FLAG INDICATING IF THE HISTOGRAM HAS
C                                     BEEN COMPUTED,AND STORED IN RECORDS
C                                     LABREC+NROW+1 ETC.
C                         14  IANGLE= FLAG INDIACATING THAT THERE ARE TILT
C                                     ANGLES STORED
C                         15  PHI   = TILT ANGLE
C                         16  THETA = TILT ANGLE
C                         17  GAMMA = TILT ANGLE
C                         18  XOFF  = X OFFSET
C                         19  YOFF  = Y OFFSET
C                         20  ZOFF  = Z OFFSET
C                         21  SCALE = SCALE
a52 1
        COMMON /LUNARA/ LUNARA(100),LASLAB
a53 1
        COMMON /IOERR/  IERR
d55 6
a60 9
C       COMMON OPSYS IS UNIX VS VMS FLAG
	LOGICAL        ONSUN,ONUNIX,ONSGI,ONOSF
        COMMON /OPSYS/ ONSUN,ONUNIX,ONSGI,ONOSF

        IERR   = 0
        IRTFLG = 1

        IF (ONUNIX .AND. NBUF .GT. 256) THEN
           CALL ERRT(101,'FILE LACKS THIS VARIABLE LOCATION',NE)
a61 4
        ELSEIF (NBUF .GT. 256 .OR. 
     &          LASLAB .EQ. 0 .AND. NBUF .GT. NSAM) THEN
           CALL ERRT(101,'FILE LACKS THIS VARIABLE LOCATION',NE)
           RETURN
d64 2
a65 9
        LABREC = LUNARA(LUN)
        LUNARA(LUN) = 1

        CALL REDLIN(LUN,BUF,NSAM,0)
        IF (IERR .NE. 0) THEN
          CALL ERRT(12,' *** ERROR READING FILE',NE)
          LUNARA(LUN) = LABREC
          RETURN
        ENDIF
a66 11
        NLOC = NSAM
        IF (ONUNIX .OR. BUF(1) .LT. 0.0) THEN
C         LONG LABEL FORMAT FILE, READ IN REST OF LABEL
          ILOC = NSAM + 1
          DO  I = 1,LABREC-1
             CALL REDLIN(LUN,BUF(ILOC),NSAM,I)
             ILOC = ILOC + NSAM
          ENDDO
          NLOC = 256
        ENDIF

a67 1
        ISTOP = IBUF1+NBUF-1
d69 2
a70 6
          IF (I .LE. NLOC) THEN
            J = J + 1
            VALUES(J) = BUF(I)
          ELSE
            GOTO 21
          ENDIF
a72 2

21      LUNARA(LUN) = LABREC
@


1.5
log
@new runtime inline buffer alteration
@
text
@d66 1
a66 3
C****************************
        write(6,*) ' getlab is OK'
C********************
@


1.4
log
@changes for inlined buff because of openf.f
@
text
@d55 2
a56 6
#ifdef SP_VMS
      COMMON /LUNARA/ LUNARA(100),LASLAB,LUNINI(100)
#else
      COMMON /LUNARA/ LUNARA(100),LASLAB,NOFFSET,
     &                  LUNOFF(100),LUNFORM(100),LUNINI(100)
#endif
d66 3
a68 1

d78 2
a79 9
C       EITHER A FILE (lunara(lun) .ne. 0) OR AN INLINED BUFFER
C	(lunini(lun) .ne. 0) IS BEING USED.
        IF(LUNARA(LUN) .GT. 0) THEN
           LABREC = LUNARA(LUN)
           LUNARA(LUN) = 1
	ELSE
           LABREC = LUNINI(LUN)
           LUNINI(LUN) = 1
	END IF
d91 1
a91 1
	  ILOC = NSAM + 1
d96 2
a97 2
	END IF
        NLOC = 256
d111 1
a111 5
21      IF(LUNARA(LUN) .GT. 0) THEN
           LUNARA(LUN) = LABREC
	ELSE
           LUNINI(LUN) = LABREC
	END IF
@


1.3
log
@add inlined buffer
@
text
@d55 6
a60 2

        COMMON /LUNARA/ LUNARA(100),LASLAB
a66 3
C       FORTRAN UNIT ASSOCIATED WITH EACH inlined buff
        INTEGER INLUN1,RECLN01,RECLN11,INLUN2,RECLN02,RECLN12
        COMMON/LUNYP/INLUN1,RECLN01,RECLN11,INLUN2,RECLN02,RECLN12
d80 9
a88 2
        LABREC = LUNARA(LUN)
        LUNARA(LUN) = 1
d100 7
a106 13
C         CHECK IF USER HAS ASKED FOR INLINED BUFFER
          IF(LUN.EQ.INLUN1 .OR.LUN.EQ.INLUN2 ) THEN
             ILOC = LABREC * NSAM
             CALL REDLIN(LUN,BUF,ILOC,0)
          ELSE
	     ILOC = NSAM + 1
             DO  I = 1,LABREC-1
                CALL REDLIN(LUN,BUF(ILOC),NSAM,I)
                ILOC = ILOC + NSAM
             ENDDO
	  END IF
          NLOC = 256
        ENDIF
d120 5
a124 1
21      LUNARA(LUN) = LABREC
@


1.2
log
@USED onunix for negative nslice trap
@
text
@d63 3
d92 11
a102 5
          ILOC = NSAM + 1
          DO  I = 1,LABREC-1
             CALL REDLIN(LUN,BUF(ILOC),NSAM,I)
             ILOC = ILOC + NSAM
          ENDDO
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
C $$ GETLAB.FOR -- CREATED NOV 87  BY ArDean Leith
d16 1
a16 1
C $$ GETLAB(LUN,NSAM,BUF,IBUF1,NBUF,VALUE,IRTFLG)
d18 1
a18 1
C       PURPOSE:    THIS SUBROUTINE RETRIEVES VARIABLES FROM THE LABEL 
d21 1
a21 1
C       PARAMETERS:
d60 4
d67 2
a68 2
        IF (NBUF .GT. 256 .OR. LASLAB .EQ. 0 .AND. NBUF .GT. NSAM) THEN
           WRITE(NOUT,*) ' *** FILE LACKS THIS VARIABLE LOCATION'
d70 4
d81 1
a81 1
          WRITE(NOUT,*) ' *** ERROR READING FILE'
d87 1
a87 1
        IF (BUF(1) .LT. 0.0) THEN
d90 1
a90 1
          DO 300 I = 1,LABREC-1
d93 1
a93 1
300       CONTINUE
d99 1
a99 1
        DO 20 I = IBUF1,ISTOP
d106 1
a106 1
20      CONTINUE
@
