head	1.10;
access;
symbols
	pre_getangas:1.7
	GPL2010:1.7
	pre_GPL2010:1.6
	pre_var_equation:1.6
	pre_fftwrings:1.6
	pre_opfiles:1.6
	src:1.6
	best-code:1.6
	x-named-regs:1.6
	x:1.6
	v13-00:1.6
	pre_GPL:1.4
	prec_CA:1.4
	noindx:1.4
	Bproc:1.4
	oct21:1.2
	last77:1.2;
locks; strict;
comment	@c @;


1.10
date	2012.10.10.11.56.35;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2012.10.02.18.41.07;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2012.10.02.18.32.35;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.24.13.25.07;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.20.25.49;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.17.18.17.40;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.10.28.14.52.01;	author bimal;	state Exp;
branches;
next	1.3;

1.3
date	99.10.28.14.50.31;	author bimal;	state Exp;
branches;
next	1.2;

1.2
date	95.02.06.15.48.48;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.47.23;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.10
log
@writes bad argument
@
text
@C++*********************************************************************
C
C BETAI.F 
C               
C **********************************************************************
C *                                                                         *
C **********************************************************************
C
C  BETAI(A,B,X) 
C
C  PURPOSE: RETURNS THE INCOMPLETE BETA FUNCTION  / (A,B)/X
C
C  AUTHOR: WILLIAM H PRESS ET AL., NUMERICAL RECIPES, PG 167
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        DOUBLE PRECISION FUNCTION BETAI(A,B,X)

        IMPLICIT DOUBLE PRECISION (A-H,O-Z)

        DOUBLE PRECISION ::  GAMMLN

        INCLUDE 'CMBLOCK.INC' 

        IF ( X < 0.0D0 .OR. X > 1.0D0) THEN
           WRITE(NOUT,*) '*** Bad argument X in BETAI:',X

        ELSEIF ( X == 0.0D0 .OR. X == 1.0D0) THEN
           BT = 0.0D0
        ELSE

C       FACTORS IN FRONT OF THE CONTINUED FRACTION.
        Y  = X
        BT = EXP( GAMMLN(A + B) - GAMMLN(A) - GAMMLN(B) +
     &               A * DLOG(Y) + B * DLOG(1. - Y))

        ENDIF

        IF ( X < ((A + 1.) / (A + B + 2.0))) THEN

C          USE CONTINUED FRACTION DIRECTLY.
           BETAI = BT * BETACF (A, B, X) / A
        ELSE

C          USE CONTINUED FRACTION AFTER MAKING THE SYMMETRY TRANSFORMATION
           BETAI = 1.0 - (BT * BETACF(B, A, 1.0 - X) / B)
        ENDIF

        END

C++*********************************************************************
C
C GAMMLN.F
C
C **********************************************************************
C
C PURPOSE: RETURNS THE VALUE ln(XX) FOR XX > 0. FULL ACCURACY IS 
C          OBTAINED FOR  0 < XX < 1, THE REFLECTION FORMULA CAN BE USED
C          FIRST.
C
C--*********************************************************************

        DOUBLE PRECISION FUNCTION GAMMLN(XX)

        DOUBLE PRECISION :: COF(6), STP, HALF, ONE, FPF, TMP, SER
        DOUBLE PRECISION :: X, XX
        INTEGER          :: J


        DATA COF, STP/76.18009173D0, -86.50532033D0, 24.01409822D0,
     &          -1.231739516D0, .120858003D-2, -.536382D-5, 
     &          2.50662827465D0/

        DATA HALF, ONE, FPF/0.5D0, 1.0D0, 5.5D0/

        X   = XX - ONE
        TMP = X + FPF
        TMP = (X + HALF) * DLOG(TMP) - TMP
        SER = ONE

        DO J = 1, 6
          X   = X + ONE
          SER = SER + COF(J) / X
        END DO

        GAMMLN = TMP + DLOG(STP * SER)

        END 


C++*********************************************************************
C
C **********************************************************************
C BETACF(A, B, X)
C
C	CONTINUED FRACTION EVALUATION BY THE RECURENCE METHOD
C       EQUATION 5.2.5  IN BOOK
C         
C--*********************************************************************

        DOUBLE PRECISION FUNCTION BETACF(A, B, X)

        IMPLICIT DOUBLE PRECISION (A-H,O-Z)

        INCLUDE 'CMBLOCK.INC'       

        PARAMETER (ITMAX = 100, EPS = 3. E-7)

        AM = 1.0
        BM = 1.0
        AZ = 1.0

        QAB = A + B
        QAP = A + 1
        QAM = A - 1
        BZ  = 1.0 - (QAB * X / QAP)

C	CONTINUED FRACTION EVALUATION BY THE RECURENCE METHOD
C       EQUATION 5.2.5  IN BOOK

        DO M = 1, ITMAX
          EM = M
          TEM = EM + EM
          D = EM * (B - M) * X / ((QAM + TEM) * (A + TEM))

C         ONE STEP (THE EVEN ONE) OF THE RECURENCE
          AP = AZ + D * AM
          BP = BZ + D * BM
          D  = - (A + EM) * (QAB + EM) * X / ((A + TEM) * (QAP + TEM))

C         NEXT STEP OF THE RECURRENCE (THE ODD ONE)
          APP = AP + D * AZ
          BPP = BP + D * BZ

C         SAVE THE OLD ANSWER
          AOLD = AZ

C         RENORMALIZE TO PREVENT OVERFLOW
          AM = AP / BPP
          BM = BP / BPP
          AZ = APP / BPP
          BZ = 1.0
   
C         ARE WE DONE ?
          IF(DABS(AZ - AOLD) .LT. EPS * DABS(AZ)) GOTO 1
        END DO

        WRITE(NOUT,*) 
     &        '***  IN BETACF, A or B too big, or ITMAX too small '

1       BETACF = AZ

        END
@


1.9
log
@put betacf.f inside here
@
text
@d27 1
a27 1
           WRITE(NOUT,*) '*** Bad argument X in BETAI'
@


1.8
log
@put gammln inside, removed copyrite statement, cosmetic
@
text
@d91 64
@


1.7
log
@GPL_2010
@
text
@d3 1
a3 2
C BETAI.FOR
C               
a5 1
C *	AUTHOR: MAHIEDDINE LADJADJ     6/16/93                             *
a6 19
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
d9 1
a9 1
C  BETAI.FOR
d11 1
a11 5
C	RETURNS THE INCOMPLETE BETA FUNCTION  / (A,B)
C                                            /X
C	       "NUMERICAL RECIPES" 
C	       BY      WILLIAM H PRESS ET ALL.
C       COPIED FROM PAGE 167 OF "NUMERICAL RECIPES" BOOK
d13 1
a14 1
C IMAGE_PROCESSING_ROUTINE
d18 1
a18 1
         DOUBLE PRECISION FUNCTION BETAI(A,B,X)
d21 3
d26 1
a26 1
	 IF ( X .LT. 0.0D0 .OR. X .GT. 1.0D0) THEN
d28 8
a35 7
         ELSEIF ( X .EQ. 0.0D0 .OR. X .EQ. 1.0D0) THEN
           BT =  0.0D0
         ELSE

C          FACTORS IN FRONT OF THE CONTINUED FRACTION.
           Y = X
           BT = EXP( GAMMLN(A + B) - GAMMLN(A) - GAMMLN(B) +
d38 3
a40 2
         END IF
         IF ( X .LT. ((A + 1.) / (A + B + 2.0))) THEN
d42 1
a42 1
C	   USE CONTINUED FRACTION DIRECTLY.
d44 1
a44 1
         ELSE
d48 38
a85 1
         END IF
d87 1
a87 1
         END
d89 1
@


1.6
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.5
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a6 1
C **************************************************************************
a8 2
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
a32 1
C **************************************************************************
a45 1
C--************************************************************************
@


1.4
log
@*** empty log message ***
@
text
@d1 1
d7 1
d11 1
d13 24
d43 1
d57 1
@


1.3
log
@included the common block
@
text
@d34 1
a34 1
        INCLUDE '/net/ithaca/usr1/spider/src/CMBLOCK.INC' 
@


1.2
log
@double precision fixed
@
text
@a0 1

d27 1
d34 2
a35 2
         COMMON /UNITS/LUN,NIN,NOUT
CNO_SAVE
d59 2
@


1.1
log
@Initial revision
@
text
@d31 1
a31 1
         FUNCTION BETAI(A,B,X)
d33 1
a33 2
         DOUBLE PRECISION A,B,X
         REAL BT,Y
d35 2
a36 2

	 IF ( X .LT. 0 .OR. X .GT. 1) THEN
d38 2
a39 2
         ELSEIF ( X .EQ. 0 .OR. X .EQ. 1) THEN
           BT =  0.
d45 1
a45 1
     &               A * ALOG(Y) + B * ALOG(1. - Y))
a57 1
         RETURN
@
