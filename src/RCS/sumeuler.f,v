head	1.14;
access;
symbols
	pre_mrcs:1.14
	healthdept_2018:1.14
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.10
	Bproc:1.6
	oct21:1.2
	last77:1.2;
locks; strict;
comment	@c @;


1.14
date	2018.10.03.14.34.24;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.27.04;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.20.14.06;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.18.07.51;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.11.14.08.02;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.08.21.21.17;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.30.13.55.04;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.01.20.26.54;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.17.15.51.15;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.10.16.07.27;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.07.14.23.07;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.11.10.23.11.22;	author yuchen;	state Exp;
branches;
next	1.2;

1.2
date	99.02.11.15.40.55;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	99.02.09.16.24.41;	author pawel;	state Exp;
branches;
next	;


desc
@SA E
@


1.14
log
@email_health_dept
@
text
@
C++***************************************************************1/5/82
C
C  SUMEULER.F               USED REG_SET AUG 00 ARDEAN LEITH
C                           REMOVED INPUT REGISTERS AUG 01 ARDEAN LEITH
C                           IREG0 BUG               NOV 01 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  SUMEULER.F    
C
C  PURPOSE:  TO 'SUM' EULERIAN ANGLES,
C
C--*********************************************************************

	SUBROUTINE SUMEULER

	INCLUDE 'CMBLOCK.INC'	

        DIMENSION  FI1(3),FI2(3),FIO(3)

        CALL REG_GET_USED(NSEL_USED)

        IF (NSEL_USED .GT. 3) THEN
C         DEPRECATED REGISTER INPUT USED (AUG 01)
          CALL REG_GET_NSEL(1,FI1(3),FI1(2),FI1(1),FI2(3),FI2(2),IRTFLG)
          CALL REG_GET_NSEL(6,FI2(1),FDUM,FDUM,FDUM,FDUM,IRTFLG)
          IREGO = 7
        ELSE
C         PREFERRED INPUT METHOD
          CALL RDPRM3S(FI1(3),FI1(2),FI1(1),NOT_USED,
     &       'FIRST TRANSFORMATION ROTATION ANGLES (PHI, THETHA, PSI)',
     &       IRTFLG)
          IF (IRTFLG .NE. 0) RETURN

          CALL RDPRM3S(FI2(3),FI2(2),FI2(1),NOT_USED,
     &       'SECOND TRANSFORMATION ROTATION ANGLES (PHI, THETHA, PSI)',
     &       IRTFLG)
          IF (IRTFLG .NE. 0) RETURN
          IREGO = 1
        ENDIF

	CALL CALDS(FI1,FI2,FIO)

        CALL REG_SET_NSEL(IREGO,3,FIO(3),FIO(2),FIO(1) ,0.0,0.0,IRTFLG)

        RETURN
	END


        SUBROUTINE  CALDS(FI1,FI2,FIO)
        DIMENSION  FI1(3),FI2(3),FIO(3)
        DOUBLE PRECISION  R1(3,3),R2(3,3),R3(3,3)
        DOUBLE PRECISION  PSI,THETA,PHI,DEPS
	DOUBLE PRECISION  QUADPI,DGR_TO_RAD,RAD_TO_DGR
	PARAMETER (QUADPI = 3.141592653589793238462643383279502884197)
	PARAMETER (RAD_TO_DGR = (180.0/QUADPI))

         DATA  DEPS/1.0D-7/
C
         CALL  BLDR(R1,FI1(1),FI1(2),FI1(3))
         CALL  BLDR(R2,FI2(1),FI2(2),FI2(3))
         DO    I=1,3
            DO    J=1,3
               R3(I,J)=0.0
               DO    K=1,3
                  R3(I,J)=R3(I,J)+R2(I,K)*R1(K,J)
	       ENDDO
 	    ENDDO
	 ENDDO

C<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
C  Limit precision
         DO    J=1,3
            DO    I=1,3
               IF(DABS(R3(I,J)).LT.DEPS)  R3(I,J)=0.0D0
               IF(R3(I,J)-1.0D0.GT.-DEPS)  R3(I,J)=1.0D0
               IF(R3(I,J)+1.0D0.LT.DEPS)  R3(I,J)=-1.0D0
	    ENDDO
	 ENDDO

         IF (R3(3,3).EQ.1.0)  THEN
            THETA=0.0
            PSI=0.0
            IF (R3(1,1).EQ.0.0)  THEN
               PHI=RAD_TO_DGR*DASIN(R3(1,2))
            ELSE
               PHI=RAD_TO_DGR*DATAN2(R3(1,2),R3(1,1))
            ENDIF
         ELSEIF(R3(3,3).EQ.-1.0)  THEN
            THETA=180.0
            PSI=0.0
            IF(R3(1,1).EQ.0.0)  THEN
               PHI=RAD_TO_DGR*DASIN(-R3(1,2))
            ELSE
               PHI=RAD_TO_DGR*DATAN2(-R3(1,2),-R3(1,1))
            ENDIF
         ELSE
            THETA=RAD_TO_DGR*DACOS(R3(3,3))
            ST   =DSIGN(1.0D0,THETA)
            IF (R3(3,1).EQ.0.0)  THEN
               IF(ST.NE.DSIGN(1.0D0,R3(3,2)))  THEN
                  PHI=270.0
               ELSE
                  PHI=90.0
               ENDIF
            ELSE
               PHI=RAD_TO_DGR*DATAN2(R3(3,2)*ST,R3(3,1)*ST)
            ENDIF
            IF (R3(1,3).EQ.0.0)  THEN
               IF(ST.NE.DSIGN(1.0D0,R3(2,3)))  THEN
                   PSI=270.0
               ELSE
                  PSI=90.0
               ENDIF
            ELSE
               PSI=RAD_TO_DGR*DATAN2(R3(2,3)*ST,-R3(1,3)*ST)
            ENDIF
         ENDIF

         IF(PSI.LT.0.0)  PSI=PSI+360.0
         IF(THETA.LT.0.0)  THETA=THETA+360.0
         IF(PHI.LT.0.0)  PHI=PHI+360.0

         FIO(1)=PSI
         FIO(2)=THETA
         FIO(3)=PHI

         END

@


1.13
log
@GPL_2010
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.12
log
@GPL License fixed
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@HRI GPL License used
@
text
@a8 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 6

C * COPYRIGHT (C)1985, 2001. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a38 1
C--*************************************************************************
@


1.10
log
@nloop,iloop_removed
@
text
@d10 24
d45 1
@


1.9
log
@NLOOPD bug
@
text
@d38 1
a38 1
          CALL RDPRM3S(FI1(3),FI1(2),FI1(1),NLOOP,ILOOP,
d43 1
a43 1
          CALL RDPRM3S(FI2(3),FI2(2),FI2(1),NLOOP,ILOOP,
@


1.8
log
@iro0 bug
@
text
@d38 1
a38 1
          CALL RDPRM3S(FI1(3),FI1(2),FI1(1),NLOOPD,ILOOPD,
d43 1
a43 1
          CALL RDPRM3S(FI2(3),FI2(2),FI2(1),NLOOPD,ILOOPD,
@


1.7
log
@removed register input
@
text
@d6 1
d8 8
a15 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH  			   *
C **************************************************************************
d47 1
a47 1
          IREG0 = 1
@


1.6
log
@reg_set_nsel params changed
@
text
@d4 2
a5 1
C  SUMEULER.F                    USED REG_SET AUG 00 ARDEAN LEITH
d26 1
d29 20
a48 6
C	DO  I=1,3
C	   FI1(4-I)=PARAM(NSEL(I))
C	   FI2(4-I)=PARAM(NSEL(3+I))
C	ENDDO
        CALL REG_GET_NSEL(1,FI1(3),FI1(2),FI1(1),FI2(3),FI2(2),IRTFLG)
        CALL REG_GET_NSEL(6,FI2(1),FDUM,FDUM,FDUM,FDUM,IRTFLG)
d52 1
a52 4
C	DO  I=1,3
C	   PARAM(NSEL(6+I)) = FIO(4-I)
C	ENDDO
        CALL REG_SET_NSEL(7,3,FIO(3),FIO(2),FIO(1) ,0.0,0.0,IRTFLG)
@


1.5
log
@used reg_get
@
text
@d32 1
a32 1
        CALL REG_GET_NSEL(6,FI2(1),0.0,0.0,0.0,0.0,IRTFLG)
d39 3
a41 1
        CALL REG_SET_NSEL(7,FIO(3),FIO(2),FIO(1) ,0.0,0.0,IRTFLG)
@


1.4
log
@removed readpq
@
text
@d4 1
a4 1
C  SUMEULER.F
d23 1
d27 6
a32 4
	DO  I=1,3
	   FI1(4-I)=PARAM(NSEL(I))
	   FI2(4-I)=PARAM(NSEL(3+I))
	ENDDO
d36 4
a39 3
	DO  I=1,3
	   PARAM(NSEL(6+I)) = FIO(4-I)
	ENDDO
@


1.3
log
@a
@
text
@d24 1
a24 1
         DIMENSION  FI1(3),FI2(3),FIO(3)
a25 7
	CALL READPQ(FCHAR)
	DO I=7,9
	   IF (NSEL(I) .GT.99 .OR .NSEL(I).LT.3) THEN
              CALL ERRT(101,'ILLEGAL REGISTER USED',NERR)
              RETURN
           ENDIF
        ENDDO
d27 2
a28 2
	FI1(4-I)=PARAM(NSEL(I))
	FI2(4-I)=PARAM(NSEL(3+I))
d30 1
d32 1
d34 1
a34 1
	PARAM(NSEL(6+I)) = FIO(4-I)
d37 6
a42 25
C++************************************************************************
C
C $$ CALDS.FOR
C
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
C **************************************************************************
C
C
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--************************************************************************
C
C $$ CALDS.FOR
C
         SUBROUTINE  CALDS(FI1,FI2,FIO)
         DIMENSION  FI1(3),FI2(3),FIO(3)
         DOUBLE PRECISION  R1(3,3),R2(3,3),R3(3,3)
         DOUBLE PRECISION  PSI,THETA,PHI,DEPS
d46 1
d52 6
a57 4
         DO    J=1,3
         R3(I,J)=0.0
         DO    K=1,3
         R3(I,J)=R3(I,J)+R2(I,K)*R1(K,J)
d59 1
a59 3
 	 ENDDO
	 ENDDO
C
d63 5
a67 4
         DO    I=1,3
         IF(DABS(R3(I,J)).LT.DEPS)  R3(I,J)=0.0D0
         IF(R3(I,J)-1.0D0.GT.-DEPS)  R3(I,J)=1.0D0
         IF(R3(I,J)+1.0D0.LT.DEPS)  R3(I,J)=-1.0D0
d69 9
a77 10
	 ENDDO
C
         IF(R3(3,3).EQ.1.0)  THEN
         THETA=0.0
         PSI=0.0
         IF(R3(1,1).EQ.0.0)  THEN
         PHI=RAD_TO_DGR*DASIN(R3(1,2))
         ELSE
         PHI=RAD_TO_DGR*DATAN2(R3(1,2),R3(1,1))
         ENDIF
d79 28
a106 6
         THETA=180.0
         PSI=0.0
         IF(R3(1,1).EQ.0.0)  THEN
         PHI=RAD_TO_DGR*DASIN(-R3(1,2))
         ELSE
         PHI=RAD_TO_DGR*DATAN2(-R3(1,2),-R3(1,1))
d108 1
a108 22
         ELSE
         THETA=RAD_TO_DGR*DACOS(R3(3,3))
         ST=DSIGN(1.0D0,THETA)
         IF(R3(3,1).EQ.0.0)  THEN
         IF(ST.NE.DSIGN(1.0D0,R3(3,2)))  THEN
         PHI=270.0
         ELSE
         PHI=90.0
         ENDIF
         ELSE
         PHI=RAD_TO_DGR*DATAN2(R3(3,2)*ST,R3(3,1)*ST)
         ENDIF
         IF(R3(1,3).EQ.0.0)  THEN
         IF(ST.NE.DSIGN(1.0D0,R3(2,3)))  THEN
         PSI=270.0
         ELSE
         PSI=90.0
         ENDIF
         ELSE
         PSI=RAD_TO_DGR*DATAN2(R3(2,3)*ST,-R3(1,3)*ST)
         ENDIF
         ENDIF
d112 1
a112 1
C<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
d116 1
@


1.2
log
@trig
@
text
@d25 1
a25 1
CNO_SAVE
@


1.1
log
@Initial revision
@
text
@d67 3
a69 3
#ifdef SP_F90
	DOUBLE PRECISION  DCOSD,DSIND,DATAN2D
#endif
a70 1
CNO_SAVE
d97 1
a97 1
         PHI=DASIND(R3(1,2))
d99 1
a99 1
         PHI=DATAN2D(R3(1,2),R3(1,1))
d105 1
a105 1
         PHI=DASIND(-R3(1,2))
d107 1
a107 1
         PHI=DATAN2D(-R3(1,2),-R3(1,1))
d110 1
a110 1
         THETA=DACOSD(R3(3,3))
d119 1
a119 1
         PHI=DATAN2D(R3(3,2)*ST,R3(3,1)*ST)
d128 1
a128 1
         PSI=DATAN2D(R3(2,3)*ST,-R3(1,3)*ST)
@
