head	1.3;
access;
symbols
	pre_fftwrings:1.2
	pre_opfiles:1.2
	src:1.2
	best-code:1.2
	x-named-regs:1.2
	x:1.2
	v13-00:1.2
	pre_GPL:1.1;
locks; strict;
comment	@c @;


1.3
date	2009.05.13.16.10.19;	author leith;	state dead;
branches;
next	1.2;

1.2
date	2005.10.17.16.54.41;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.21.18.39.43;	author leith;	state Exp;
branches;
next	;


desc
@@


1.3
log
@does not work
@
text
@C++*********************************************************************
C
C  VAR3C.F                                        06/03/02
C                                         
C **********************************************************************
C *  VAR3D
C=**********************************************************************
C=* From: SPIDER - MODULAR IMAGE PROCESSING SYSTEM                     *
C=* Copyright (C)2002, P. A. Penczek                                   *
C=*                                                                    *
C=* University of Texas - Houston Medical School                       *
C=*                                                                    *
C=* Email:  pawel.a.penczek@@uth.tmc.edu                                *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* This program is distributed in the hope that it will be useful,    *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
C=* General Public License for more details.                           *
C=*                                                                    *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
C=*                                                                    *
C=**********************************************************************
C **********************************************************************
C
C   VAR3C - Calculate a section of crosscorrelation for a set of 3D volumes
C
C IMAGE_PROCESSING_ROUTINE
C
C        1         2         3         4         5         6         7
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************
      SUBROUTINE  VAR3C
      CHARACTER *81    FILNAM,FILA,FILV,FILPAT
      COMMON /COMMUN/  FILNAM,FILA,FILV,FILPAT
      INCLUDE 'CMBLOCK.INC'
      INCLUDE 'CMLIMIT.INC'
#ifndef SP_32
      INTEGER *8       NVOX,IOK8
#else
      INTEGER *4       NVOX,IOK8
#endif
      REAL, ALLOCATABLE, DIMENSION(:) :: AVGARAY,VARARAY,COVAR,INPARAY
	DATA  LUN1/81/
         
      CALL FILELIST(.TRUE.,NDOC,FILPAT,NLETP,INUMBR,NIMAX,NUMT,
     &                 'INPUT FILE TEMPLATE',IRTFLG)
      IF (IRTFLG .NE. 0) RETURN

C     GET FIRST PICTURE TO DETERMINE DIMS
      CALL FILGET(FILPAT,FILNAM,NLETP,INUMBR(1),IRTFLG)
      IF (IRTFLG .NE. 0) RETURN

      MAXIM = 0
      CALL OPFILEC(0,.FALSE.,FILNAM,LUN1,'O',IFORM,NSAM,NROW,NSLICE,
     &               MAXIM,' ',.TRUE.,IRTFLG)
      IF (IRTFLG .NE. 0) RETURN
      CLOSE(LUN1)

	CALL RDPRI3S(IX,IY,IZ,NOT_USED,'IX, IY, IZ',IRTFLG)

      NVOX = NSAM * NROW * NSLICE
      CALL BIGALLOC(NVOX,IOK8,.FALSE.,.TRUE.,IRTFLG)

      ALLOCATE(AVGARAY(NVOX),VARARAY(NVOX),
     &		COVAR(NVOX),INPARAY(NSAM),STAT=IRTFLG)
      IF (IRTFLG .NE. 0) GOTO 997


        AVGARAY = 0.0
         NUMA  = 0
         DO IFIL=1,NUMT

            CALL FILGET(FILPAT,FILNAM,NLETP,INUMBR(IFIL),IRTFLG)
            IF (IRTFLG .NE. 0) THEN
               CALL ERRT(3,'VA3R',NE)
               GOTO 997
            ENDIF

            CALL OPFILEC(0,.FALSE.,FILNAM,LUN1,'Z',IFORM,
     &                   NSAM,NROW,NSLICE,MAXIM,' ',.TRUE.,IRTFLG)
            IF (IRTFLG .EQ. 0) THEN
            NUMA = NUMA+1
C  Get the selected point for covar
	    I=IY+(IZ-1)*NROW
	    CALL  REDLIN(LUN1,INPARAY,NSAM,I)
	    SELECTED=INPARAY(IX)
C
	    DO  I=1,NROW*NSLICE
		CALL  REDLIN(LUN1,INPARAY,NSAM,I)
	        AVGARAY(1+(I-1)*NSAM:I*NSAM)=
     &			AVGARAY(1+(I-1)*NSAM:I*NSAM)+INPARAY
	    ENDDO 
	    CLOSE(LUN1)
	    ENDIF
         ENDDO
C        COMPUTE AVERAGE, VARIANCE, AND CORRELATION
            AVGARAY = AVGARAY / NUMA
C           OPEN NEW AVERAGE OUTPUT FILE
        CALL OPFILEC(0,.TRUE.,FILA,LUN1,'U',IFORM,NSAM,NROW,NSLICE,
     &                      MAXIM,'AVERAGE',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 997
	CALL WRITEV(LUN1,AVGARAY,NSAM,NROW,NSAM,NROW,NSLICE)
	CLOSE(LUN1)
C
 	VARARAY=0.0
	COVAR=0.0
        DO IFIL=1,NUMT

            CALL FILGET(FILPAT,FILNAM,NLETP,INUMBR(IFIL),IRTFLG)
            IF (IRTFLG .NE. 0) THEN
               CALL ERRT(3,'VA3R',NE)
               GOTO 997
            ENDIF

            CALL OPFILEC(0,.FALSE.,FILNAM,LUN1,'Z',IFORM,
     &                   NSAM,NROW,NSLICE,MAXIM,' ',.TRUE.,IRTFLG)
            IF (IRTFLG .EQ. 0) THEN
C  Get the selected point for covar
	    I=IY+(IZ-1)*NROW
	    CALL  REDLIN(LUN1,INPARAY,NSAM,I)
	    SELECTED=AVGARAY(IX+(IY-1+(IZ-1)*NSLICE)*NROW)-INPARAY(IX)
C
	    DO  I=1,NROW*NSLICE
		CALL  REDLIN(LUN1,INPARAY,NSAM,I)
	     VARARAY(1+(I-1)*NSAM:I*NSAM)=VARARAY(1+(I-1)*NSAM:I*NSAM)+
     &		(AVGARAY(1+(I-1)*NSAM:I*NSAM)-INPARAY)**2

	        COVAR(1+(I-1)*NSAM:I*NSAM)=
     &			COVAR(1+(I-1)*NSAM:I*NSAM)+
     &		(AVGARAY(1+(I-1)*NSAM:I*NSAM)-INPARAY)*SELECTED
	    ENDDO 
	    CLOSE(LUN1)
	    ENDIF
         ENDDO


	VARARAY=VARARAY/REAL(NUMA-1)
	SELECTED=VARARAY(IX+(IY-1+(IZ-1)*NSLICE)*NROW)
	IF(SELECTED.LE.0.0)  THEN
	  COVAR=0.0
	ELSE
	SELECTED=1.0/SQRT(SELECTED)/REAL(NUMA)
	DO  I=1,NSAM*NROW*NSLICE
	IF(VARARAY(I).GT.0.0)  THEN
	 COVAR(I)=COVAR(I)*SELECTED/SQRT(VARARAY(I))
	ELSE
	 COVAR(I)=0.0
	ENDIF
	ENDDO
	ENDIF
C
C           OPEN NEW VARIANCE OUTPUT FILE
        CALL OPFILEC(0,.TRUE.,FILV,LUN1,'U',IFORM,NSAM,NROW,NSLICE,
     &                   MAXIM,'VARIANCE',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 997
	CALL WRITEV(LUN1,VARARAY,NSAM,NROW,NSAM,NROW,NSLICE)
	CLOSE(LUN1)
C
C           OPEN NEW CORRELATION OUTPUT FILE
        CALL OPFILEC(0,.TRUE.,FILV,LUN1,'U',IFORM,NSAM,NROW,NSLICE,
     &                   MAXIM,'CORRELATION',.TRUE.,IRTFLG)
        IF (IRTFLG .NE. 0) GOTO 997
	CALL WRITEV(LUN1,COVAR,NSAM,NROW,NSAM,NROW,NSLICE)
	CLOSE(LUN1)
997     IF (ALLOCATED(INPARAY)) DEALLOCATE(INPARAY)
        IF (ALLOCATED(COVAR))  DEALLOCATE(COVAR)
        IF (ALLOCATED(VARARAY)) DEALLOCATE(VARARAY)
        IF (ALLOCATED(AVGARAY)) DEALLOCATE(AVGARAY)
	END
@


1.2
log
@Pawels GPL License used
@
text
@@


1.1
log
@pawel
@
text
@d1 1
a1 1
C++************************************************************************
d5 1
a5 2
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.
d7 25
a31 6
C *  COPYRIGHT (C)2002, P.A.Penczek
C *  University of Texas - Houston Medical School
C *  pawel.a.penczek@@uth.tmc.edu
C *    THE CONTENTS OF THIS DOCUMENT CANNOT BE CHANGED WITHOUT WRITTEN
C *    PERMISSION OF THE AUTHOR                          *
C **************************************************************************
@

