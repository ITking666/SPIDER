head	1.12;
access;
symbols
	pre_getangas:1.11
	GPL2010:1.11
	pre_GPL2010:1.10
	pre_var_equation:1.10
	pre_fftwrings:1.8
	pre_opfiles:1.7
	src:1.7
	best-code:1.7
	x-named-regs:1.7
	x:1.7
	v13-00:1.7
	pre_GPL:1.5
	prec_CA:1.5
	noindx:1.5
	Bproc:1.5
	oct21:1.4
	last77:1.3;
locks; strict;
comment	@c @;


1.12
date	2017.11.28.15.24.27;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.24.13.25.45;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2008.11.25.15.32.28;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2008.08.05.13.18.50;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2008.03.19.18.08.08;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.17.20.47.04;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.18.37.27;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.21.16.59.57;	author bimal;	state Exp;
branches;
next	1.4;

1.4
date	99.06.03.20.50.51;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	99.03.01.14.41.33;	author pawel;	state Exp;
branches;
next	1.2;

1.2
date	97.10.02.13.30.53;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	97.09.30.14.31.54;	author pawel;	state Exp;
branches;
next	;


desc
@@


1.12
log
@lacked igo in parallel private  bug
@
text
@C++*********************************************************************
C
C FOURING_Q.F
C             DE-OMP PARRALEL LOOP FOR FFTW3 USE    MAR 08 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C FOURING_Q(CIRC,LCIRC,NUMR,NRING,EO,MODE)
C
C PARAMETERS:
C             CIRC   - FT OF RINGS MULTIPLIED BY WEIGHTS   (SENT/RET)
C             EO  WEIGHTING?                                     RET. 
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE FOURING_Q(CIRC,LCIRC,NUMR,NRING,EO,MODE)

        INTEGER           :: NUMR(3,NRING)
        DIMENSION         :: CIRC(LCIRC)
        CHARACTER*1       :: MODE
        DOUBLE PRECISION  :: E,EO,QT,PI

        PI = 4.0 * DATAN(1.0D0)
        IF (MODE .EQ. 'F')  PI = 2*PI
        E = 0.0

c$omp   parallel do private(i,j,nval,igo,qt),reduction(+:e)
        DO  I=1,NRING
           NVAL = NUMR(3,I) - 2
           IGO  = NUMR(2,I)
           QT   = REAL(NUMR(1,I)) * PI / REAL(NVAL)  ! PI * N / (N-2)

           DO J=IGO, IGO+NVAL-1
              E = E + QT * DBLE(CIRC(J)) * CIRC(J)
           ENDDO
        ENDDO

        EO = E

c       parallel do private(i,inv,nval,igo)(FAILS MAKING PLAN WITH FFTW3)
        DO I=1,NRING
           INV  = +1              ! FMRS USES INV AS ERROR RETURN
           NVAL = NUMR(3,I) - 2
           IGO  = NUMR(2,I)
           CALL FMRS_1(CIRC(IGO),NVAL,INV)
        ENDDO

        END

@


1.11
log
@GPL_2010
@
text
@d29 4
a32 3
C  PARAMETERS:
C               CIRC   - FT OF RINGS MULTIPLIED BY WEIGHTS   (SENT/RET)
C               EO  WEIGHTING?                                     RET. 
d47 1
a47 1
c$omp   parallel do private(i,j,nval,qt),reduction(+:e)
d62 1
a62 1
           INV  = +1
@


1.10
log
@igo bug
@
text
@a5 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d7 5
a11 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d13 1
a13 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d18 1
a18 1
C=* This program is distributed in the hope that it will be useful,    *
d20 1
a20 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a21 1
C=*                                                                    *
d23 1
a23 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.9
log
@*** empty log message ***
@
text
@d41 4
a44 4
        INTEGER           NUMR(3,NRING)
        DIMENSION         CIRC(LCIRC)
        CHARACTER*1       MODE
        DOUBLE PRECISION  E,EO,QT,PI
d50 1
a50 1
c$omp   parallel do private(i,j,nsirt,qt),reduction(+:e)
d54 1
a54 1
           QT   = REAL(NUMR(1,I)) * PI / REAL(NVAL)  !PI * N / (N-2)
d62 2
a63 1
CC      parallel do private(i,nsirt,inv) (FAILS WITH FFTW3)
d66 2
a67 1
           NVAL = NUMR(3,I)-2
@


1.8
log
@DE-OMP PARRALEL LOOP FOR FFTW3
@
text
@d33 3
d52 3
a54 2
           NSIRT = NUMR(3,I)-2
           QT    = REAL(NUMR(1,I)) * PI / REAL(NSIRT)
d56 1
a56 1
           DO J=NUMR(2,I), NUMR(2,I)+NSIRT-1
d64 3
a66 3
           INV   = +1
           NSIRT = NUMR(3,I)-2
           CALL FMRS_1(CIRC(NUMR(2,I)),NSIRT,INV)
@


1.7
log
@GPL License fixed
@
text
@d3 2
a4 2
C $$ FOURING_Q.FOR
C
d7 1
a7 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d31 1
a32 3
C IMAGE_PROCESSING_ROUTINE
C
C        1         2         3         4         5         6         7
d35 6
a40 7
C
C $$ FOURING_Q.FOR
C
        SUBROUTINE  FOURING_Q(CIRC,LCIRC,NUMR,NRING,EO,MODE)
        INTEGER  NUMR(3,NRING)
        DIMENSION  CIRC(LCIRC)
        CHARACTER*1  MODE
d43 5
a47 4
        PI=4.0*DATAN(1.0D0)
        IF(MODE.EQ.'F')  PI=2*PI
        E=0.0
c$omp parallel do private(i,j,nsirt,qt),reduction(+:e)
d49 5
a53 4
           NSIRT=NUMR(3,I)-2
           QT=REAL(NUMR(1,I))*PI/REAL(NSIRT)
           DO  J=NUMR(2,I),NUMR(2,I)+NSIRT-1
              E=E+QT*DBLE(CIRC(J))*CIRC(J)
d56 7
a62 6
        EO=E
c$omp parallel do private(i,nsirt,inv)
        DO  I=1,NRING
           INV=+1
           NSIRT=NUMR(3,I)-2
           CALL  FMRS_1(CIRC(NUMR(2,I)),NSIRT,INV)
d64 1
@


1.6
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a29 1
C **************************************************************************
a36 1
C--************************************************************************
@


1.5
log
@cosmetic
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d48 1
@


1.4
log
@OpenMP
@
text
@d16 1
d18 1
d29 1
d35 6
a40 6
        NSIRT=NUMR(3,I)-2
        QT=REAL(NUMR(1,I))*PI/REAL(NSIRT)
        DO  J=NUMR(2,I),NUMR(2,I)+NSIRT-1
	E=E+QT*DBLE(CIRC(J))*CIRC(J)
	ENDDO
	ENDDO
d44 4
a47 4
	INV=+1
        NSIRT=NUMR(3,I)-2
        CALL  FMRS_1(CIRC(NUMR(2,I)),NSIRT,INV)
	ENDDO
d49 1
@


1.3
log
@ff
@
text
@d30 1
a30 1
c$doacross local(i,j,nsirt,qt,l),reduction(e)
d39 1
a39 1
c$doacross local(i,nsirt,inv)
@


1.2
log
@*** empty log message ***
@
text
@d23 1
a23 1
        INTEGER*2  NUMR(3,NRING)
a26 1
CNO_SAVE
@


1.1
log
@Initial revision
@
text
@d32 1
a32 1
        DO  201  I=1,NRING
d34 5
a38 3
        QT=FLOAT(NUMR(1,I))*PI/FLOAT(NSIRT)
        DO  201  J=NUMR(2,I),NUMR(2,I)+NSIRT-1
201     E=E+QT*DBLE(CIRC(J))*CIRC(J)
d41 1
a41 1
        DO  202  I=1,NRING
d45 1
a45 1
202     CONTINUE
@
