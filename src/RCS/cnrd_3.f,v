head	1.10;
access;
symbols
	pre_getangas:1.10
	GPL2010:1.10
	pre_GPL2010:1.9
	pre_var_equation:1.9
	pre_fftwrings:1.8
	pre_opfiles:1.7
	src:1.7
	best-code:1.7
	x-named-regs:1.6
	x:1.6
	v13-00:1.6
	pre_GPL:1.4
	prec_CA:1.4
	noindx:1.4
	Bproc:1.4
	oct21:1.2
	last77:1.2;
locks; strict;
comment	@c @;


1.10
date	2010.06.24.13.25.15;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2009.04.28.13.15.35;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2008.02.19.16.53.54;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.07.18.15.47;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.17.20.25.07;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.17.18.17.05;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.14.19.45.13;	author bimal;	state Exp;
branches;
next	1.3;

1.3
date	99.11.10.23.09.11;	author yuchen;	state Exp;
branches;
next	1.2;

1.2
date	96.09.06.15.23.58;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	96.08.27.19.52.24;	author pawel;	state Exp;
branches;
next	;


desc
@simple CN 3D, calling program
@


1.10
log
@GPL_2010
@
text
@C++*********************************************************************
C
C  CNRD_3.F 
C                PGI BUG                       FEB 10 2006 ArDean Leith
C                MOD PGI COMPILER BUG          FEB 19 2008 ArDean Leith
C                X RETURNS O                   APR 24 2009 ArDean Leith
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  PURPOSE: CALCULATES CONVOLUTION
C
C  PARAMETERS: X  FOURIER TRANSFORM                           (SENT)
C                    X=F(X*Y)                                 (RET.)
C              BUF  IO  
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C--*********************************************************************

        SUBROUTINE CNRD_3(LUN2,X,BUF, LS,NSAM,NROW,NSLICE)

        COMPLEX          :: X(LS/2,NROW,NSLICE)
        COMPLEX          :: BUF(LS/2)

        DOUBLE PRECISION :: PI2
        COMPLEX          :: CTEMP
   
        NNNN = LS / 2
        LRS  = 2 * NNNN

        PI2  = 8.0 * DATAN(1.0D0)
        ITMP = NSAM / 2
        SX   = PI2 * FLOAT(ITMP) / FLOAT(NSAM)
        ITMP = NROW / 2
        SY   = PI2 * FLOAT(ITMP) / FLOAT(NROW)
        ITMP = NSLICE / 2
        SZ   = PI2 * FLOAT(ITMP) / FLOAT(NSLICE)

        NR = 0

        DO K=1,NSLICE
              IZ=K-1
              IF (IZ .GT. (NSLICE/2))  IZ = IZ - NSLICE
              ARGZ = SZ * IZ
              DO J=1,NROW
                 IY = J-1
                 IF (IY .GT. (NROW/2))  IY = IY - NROW
                 ARGY = SY * IY + ARGZ
                 NR   = NR + 1
                 CALL  REDLIN(LUN2,BUF,LRS,NR)

                 DO I=1,NNNN
                    IX       = I - 1
                    ARG      = SX * IX + ARGY
                    CTEMP    = CMPLX(COS(ARG),SIN(ARG))
                    x(I,J,K) = X(I,J,K) * BUF(I) * CTEMP
                 ENDDO
              ENDDO
        ENDDO

        INS = -1
        CALL FMRS_3(X,NSAM,NROW,NSLICE,INS)

        END
@


1.9
log
@*** empty log message ***
@
text
@a8 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2009  Health Research Inc.                      *
d10 5
a14 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d16 1
a16 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d21 1
a21 1
C=* This program is distributed in the hope that it will be useful,    *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.8
log
@ added parameter
@
text
@d6 1
d10 1
a10 1
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d34 1
d36 3
a38 3
C  Calculates circular convolution, non-power-of-two dimensions
C  Input - X,Y Fourier transforms
C  Output -  O=F(X*Y)
d43 1
a43 1
        SUBROUTINE  CNRD_3(LUN2,X,BUF,O, LS,NSAM,NROW,NSLICE)
d47 1
a47 1
        COMPLEX          :: O(LS/2,NROW,NSLICE)
d51 10
a60 2
        NNNN = LS/2
        LRS  = 2*NNNN
d62 1
a62 8
        PI2  = 8.0*DATAN(1.0D0)
        ITMP = NSAM/2
        SX   = PI2*FLOAT(ITMP)/FLOAT(NSAM)
        ITMP = NROW/2
        SY   = PI2*FLOAT(ITMP)/FLOAT(NROW)
        ITMP = NSLICE/2
        SZ   = PI2*FLOAT(ITMP)/FLOAT(NSLICE)
        NR=0
d65 16
a80 15
           IZ=K-1
           IF(IZ.GT.NSLICE/2)  IZ=IZ-NSLICE
           ARGZ=SZ*IZ
           DO J=1,NROW
              IY = J-1
              IF (IY.GT.NROW/2)  IY=IY-NROW
              ARGY = SY*IY+ARGZ
              NR   = NR+1
              CALL  REDLIN(LUN2,BUF,LRS,NR)

              DO    I=1,NNNN
                 IX       = I - 1
                 ARG      = SX * IX + ARGY
                 CTEMP    = CMPLX(COS(ARG),SIN(ARG))
                 O(I,J,K) = X(I,J,K) * BUF(I) * CTEMP
a81 1
           ENDDO
d85 2
a86 1
        CALL FMRS_3(O,NSAM,NROW,NSLICE,INS)
@


1.7
log
@pgi compiler bug
@
text
@d3 3
a5 2
C $$ CNRD_3.FOR
C                           PGI BUG            FEB 10 2006 ArDean Leith
d9 1
a9 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
a33 2
C IMAGE_PROCESSING_ROUTINE
C
d41 1
a41 1
        SUBROUTINE  CNRD_3(LUN2,X,BUF,O,NSAM,NROW,NSLICE)
d43 5
a47 5
        COMPLEX  X((NSAM+2-MOD(NSAM,2))/2,NROW,NSLICE)
        COMPLEX  BUF((NSAM+2-MOD(NSAM,2))/2)
        COMPLEX  O((NSAM+2-MOD(NSAM,2))/2,NROW,NSLICE)
        DOUBLE PRECISION  PI2
        COMPLEX :: CTEMP
d49 10
a58 9
        NNNN = (NSAM+2-MOD(NSAM,2))/2
        LRS=2*NNNN
        PI2=8.0*DATAN(1.0D0)
        ITMP=NSAM/2
        SX=PI2*FLOAT(ITMP)/FLOAT(NSAM)
        ITMP=NROW/2
        SY=PI2*FLOAT(ITMP)/FLOAT(NROW)
        ITMP=NSLICE/2
        SZ=PI2*FLOAT(ITMP)/FLOAT(NSLICE)
@


1.6
log
@GPL License fixed
@
text
@d4 1
d35 4
a38 1
C        1         2         3         4         5         6         7
d48 2
a49 10

C  Calculates circular convolution, non-power-of-two dimensions
C  Input - X,Y Fourier transforms
C  Output -  O=F(X*Y)

C       INS=1
C       CALL  FMRS_3(X,NSAM,NROW,NSLICE,INS)
C       IF(INS.EQ.0)  RETURN
C       CALL  FMRS_3(Y,NSAM,NROW,NSLICE,INS)
     
d60 2
a61 1
        DO    K=1,NSLICE
d65 5
a69 5
           DO    J=1,NROW
              IY=J-1
              IF(IY.GT.NROW/2)  IY=IY-NROW
              ARGY=SY*IY+ARGZ
              NR=NR+1
d71 1
d73 4
a76 3
                 IX=I-1
                 ARG=SX*IX+ARGY
        O(I,J,K)=X(I,J,K)*BUF(I)*CMPLX(COS(ARG),SIN(ARG))
d81 2
a82 2
        INS=-1
        CALL  FMRS_3(O,NSAM,NROW,NSLICE,INS)
@


1.5
log
@HRI GPL License used
@
text
@a1 1
C++************************************************************************
a5 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 7

C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *  THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR       *
C *  LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR    *
C *  USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF     *
C *  THE CENTER FOR LABORATORIES AND RESEARCH                              *
a29 1
C **************************************************************************
a36 1
C--************************************************************************
@


1.4
log
@adapted for dynamical memory allocation
@
text
@d1 1
d6 1
d8 1
d10 24
d40 1
d48 1
@


1.3
log
@a
@
text
@d12 1
a12 1
C *  THE CENTER FOR LABORATORIES AND RESEARCH   			   *
d16 1
d18 2
d21 44
a64 5
C
C $$ CNRD_3.FOR
C
	SUBROUTINE  CNRD_3(LUN2,X,BUF,O,NSAM,NROW,NSLICE)
	DIMENSION  X(*),BUF(*),O(*)
d66 3
a68 3
	CALL  CNRD_3R(
     &		LUN2,X,BUF,O,(NSAM+2-MOD(NSAM,2))/2,NSAM,NROW,NSLICE)
	END
@


1.2
log
@nosave
@
text
@d23 1
a23 1
CNO_SAVE
@


1.1
log
@Initial revision
@
text
@d23 1
@
