head	1.33;
access;
symbols
	pre_getangas:1.31
	GPL2010:1.31
	pre_GPL2010:1.30
	pre_var_equation:1.30
	pre_fftwrings:1.30
	pre_opfiles:1.28
	src:1.28
	best-code:1.28
	x-named-regs:1.28
	x:1.28
	v13-00:1.28
	pre_GPL:1.26
	prec_CA:1.26
	noindx:1.25
	Bproc:1.22
	oct21:1.22
	last77:1.19;
locks; strict;
comment	@c @;


1.33
date	2014.08.18.15.19.38;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2014.01.12.19.32.10;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2010.06.24.13.26.03;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2007.02.28.20.04.54;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2007.01.31.14.04.03;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	2005.10.17.20.29.12;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	2005.10.17.18.20.33;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	2003.03.04.14.37.38;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2002.08.02.15.32.25;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2002.03.11.14.08.16;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2000.11.21.15.38.08;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	99.08.13.15.01.53;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	99.08.09.13.28.48;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	99.08.09.13.06.44;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	98.09.23.14.35.59;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	97.12.12.17.40.26;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	97.03.19.17.17.28;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	97.01.14.18.43.53;	author mladjadj;	state Exp;
branches;
next	1.15;

1.15
date	96.11.07.15.06.32;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	96.09.13.13.49.13;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	96.09.06.18.28.43;	author pawel;	state Exp;
branches;
next	1.12;

1.12
date	96.09.04.14.16.28;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	96.09.04.13.53.32;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	96.09.03.13.15.10;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	96.07.22.19.54.02;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	96.07.22.18.58.01;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	96.04.29.19.12.59;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	96.04.26.14.18.44;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	94.12.16.11.06.44;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	94.11.15.11.08.30;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.11.14.15.49.40;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.13.14.08.21;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.50.55;	author leith;	state Exp;
branches;
next	;


desc
@unix specific source code with preprocessor lines
@


1.33
log
@'LI T' for header can output to register now,  nx, ==
@
text
@
C++*********************************************************************
C
C  LISTIT.F   REWRITTEN & REMOVED FROM OPENPIC     AUG 96 ARDEAN LEITH
C             LONG FILENAMES                       DEC 88 ARDEAN LEITH
C             IMAGE  LIST BUG FIXED                SEP 98 ARDEAN LEITH
C             FIXED KEY FOR DOCFILE OF COL OUTPUT  AUG 99 ARDEAN LEITH
C             USED NBUFSIZ                         AUG 02 ARDEAN LEITH
C             LUNRED                               FEB 03 ARDEAN LEITH
C             'Pixel' COL & ROW INTERCHANGE BUG    JAN 07 ARDEAN LEITH
C             INCORE COMMENT WRITE BUG             FEB 07 ARDEAN LEITH
C             'LI T x' ADDED                       AUG 14 ARDEAN LEITH
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C    LISTIT()
C
C    PURPOSE:   TO LIST CONTENTS OF SELECTED IMAGE ELEMENTS 
C
C    PARAMETERS:
C         FILNAM     FILE NAME (ONLY USED FOR TITLE)
C         LUN        LOGICAL UNIT NUMBER OF FILE
C         NX,NY  IMAGE DIMENSIONS
C         NZ     IMAGE DIMENSIONS SLICES
C         DOCPRNT    PRINT TO DOC FILE
C         TERMPRNT   PRINT TO TERMINAL
C                    OTHERWISE PRINT TO RESULTS FILE
C
C--*********************************************************************

	SUBROUTINE LISTIT(FILNAM,LUN,NX,NY,NZ,DOCPRNT,TERMPRNT)

	INCLUDE 'CMBLOCK.INC' 
	INCLUDE 'CMLIMIT.INC' 

	INTEGER                :: IROW(NBUFSIZ),ICOL(NBUFSIZ)
	INTEGER                :: ISLI(NBUFSIZ)
	INTEGER                :: IBUF(NBUFSIZ),JOUT(NBUFSIZ)
	REAL                   :: AOUT(NBUFSIZ),A0(2*NBUFSIZ+1)

        COMPLEX                :: BCOM(1)
        EQUIVALENCE              (A0,BCOM)

        CHARACTER (LEN=MAXNAM) :: DOCNAM
        CHARACTER (LEN=160)    :: COMMENT

        CHARACTER (LEN=*)      :: FILNAM
        CHARACTER (LEN=1)      :: ANS,OTYPE,FTYPE
        LOGICAL                :: INTPRNT, DOCPRNT, TERMPRNT, PHAMPRNT
        LOGICAL                :: NEWFILE
        REAL                   :: DLIST(10)
        CHARACTER (LEN=1)      :: NULL = CHAR(0)

	INTEGER, PARAMETER     :: NDOC = 76


        NLET = INDEX(FILNAM,NULL) - 1

C       DETERMINE OUTPUT OPTION
	NLIS     =  NDAT
        IF (TERMPRNT) NLIS = NOUT
        INTPRNT = .FALSE.


        IF (DOCPRNT) THEN
C           OPEN THE DOC FILE NOW
            CALL OPENDOC(DOCNAM,.TRUE.,NLETD,NDOC,NDOCOUT,.TRUE.,
     &          'OUTPUT DOC FILE',.FALSE.,.FALSE.,.TRUE.,NEWFILE,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 999

            COMMENT = ' FROM IMAGE FILE: '// FILNAM(1:NLETD) // CHAR(0)
            NL      = LNBLNKN(COMMENT)
            CALL LUNDOCPUTCOM(NDOCOUT,COMMENT(1:NL),IRTFLG)

        ELSE
            WRITE(NLIS,91)  FILNAM(1:NLET)
 91         FORMAT(' -------- LISTING FROM IMAGE FILE: ',A)
        ENDIF

C       SET FOR ALL COLUMS, ROWS, FIRST SLICE ONLY
        NIROW   = 0
        NICOL   = 0
        NISLI   = 1
        ISLI(1) = 1

        CALL RDPRMC(OTYPE,NCHAR,.TRUE.,
     &    'HEADER, PIXEL, ROW, COLUMN, IMAGE, OR WINDOW (H/P/R/C/I/W)',
     &     NULL,IRTFLG)

        IF (OTYPE == 'H') THEN
C          WANT HEADER ONLY
           NICOL = NBUFSIZ
           CALL RDPRAI(ICOL,NBUFSIZ,NICOL,1,256,
     &              'HEADER POSITION(S)', NULL,IRTFLG)

        ELSEIF (OTYPE == 'P') THEN
C          WANT ONE PIXEL ONLY
           CALL RDPRIS(IROW(1),ICOL(1),NOT_USED,
     &        'ROW & COLUMN',IRTFLG)
           NIROW = 1
           NICOL = 1

        ELSEIF (OTYPE == 'R') THEN
C          WANT ONE ROW ONLY
           NIROW = NBUFSIZ
           CALL RDPRAI(IROW,NBUFSIZ,NIROW,1,NY,'ROW(S)',
     &                 NULL,IRTFLG)
           DO I = 1,NX
              ICOL(I) = I
           ENDDO
           NICOL = NX

        ELSEIF (OTYPE == 'C') THEN
C          WANT ONE COL. ONLY
           NICOL = NBUFSIZ
           CALL RDPRAI(ICOL,NBUFSIZ,NICOL,1,NX,'COLUMN(S)',
     &                 NULL,IRTFLG)
           DO I = 1,NY
              IROW(I) = I
           ENDDO
           NIROW = NY

        ELSEIF (OTYPE == 'I') THEN 
C          WANT ONE WHOLE IMAGE 
 
           IF (NZ > 1) THEN
C             WANT ONE IMAGE ONLY FROM THE VOLUME
              NISLI = NBUFSIZ
              CALL RDPRAI(ISLI,NBUFSIZ,NISLI,1,NZ,'SLICE(S)',
     &            NULL,IRTFLG)
           ENDIF

           DO I = 1,NY
              IROW(I) = I
           ENDDO
           NIROW = NY
           DO I = 1,NX
              ICOL(I) = I
           ENDDO
           NICOL = NX

        ELSEIF (OTYPE == 'W') THEN
C          WANT WINDOW FROM IMAGE
           NICOL = NBUFSIZ
           CALL RDPRAI(ICOL,NBUFSIZ,NICOL,1,NX,'COLUMNS(S)',
     &                 NULL,IRTFLG)
           NIROW = NBUFSIZ
           CALL RDPRAI(IROW,NBUFSIZ,NIROW,1,NY,'ROW(S)',
     &                 NULL,IRTFLG)
           IF (NZ > 1) THEN
C             MAY WANT MORE THAN ONE SLICE
              NISLI = NBUFSIZ
              CALL RDPRAI(ISLI,NBUFSIZ,NISLI,1,NZ,'SLICE(S)',
     &                    NULL,IRTFLG)
           ENDIF
        ENDIF            

        IF (.NOT. DOCPRNT .AND. IFORM > 0 .AND.
     &      OTYPE .NE. 'H') THEN
           CALL RDPRMC(FTYPE,NCHAR,.TRUE.,
     &         'FLOATING POINT OR INTEGER FORMAT OUTPUT (F/I)', 
     &          NULL,IRTFLG)
           IF (FTYPE == 'I') INTPRNT = .TRUE.
        ENDIF

        PHAMPRNT = .FALSE.
        IF (IFORM < 0 .AND. OTYPE .NE. 'H') THEN
C          FOURIER FILE
           CALL RDPRMC(ANS,NCHAR,.TRUE.,
     &          'PHASE & MODULI LISTING? (Y/N)', NULL,IRTFLG)
           IF (ANS .NE. 'N') PHAMPRNT = .TRUE.
        ENDIF

        IF (OTYPE == 'H') THEN
C         PRINT OUT HEADER STUFF

C         READ 256 HEADER POSITIONS INTO A0 BUFFER
          CALL LUNGETVALS(LUN,1,256,A0,IRTFLG)

          IF (DOCPRNT) THEN
C           SAVE IN DOC FILE, DO NOT APPEND
            COMMENT = '  FILE HEADER VALUES ---------------------'
            NL      = LNBLNKN(COMMENT)
            CALL LUNDOCPUTCOM(NDOCOUT,COMMENT(1:NL),IRTFLG)

             DO I = 1, NICOL
                CALL LUNDOCWRTDAT(NDOCOUT,ICOL(I),A0(I),1,IRTFLG)
             ENDDO
          ELSE
C            FLOATING POINT HEADER LISTING
             WRITE(NLIS,*) ' '
             WRITE(NLIS,*) 'FILE HEADER VALUES -----------------'

             WRITE(NLIS,302) (A0(ICOL(J)),J=1,NICOL)
302          FORMAT(5(1X,G12.4))
          ENDIF

          CALL REG_GET_USED(NSEL_USED)
          IF (NSEL_USED > 0) THEN
             NSEL_USED = MIN(NSEL_USED,NICOL)
             CALL REG_SET_NSELA(NSEL_USED,A0,.TRUE.,IRTFLG)
          ENDIF

          GOTO 999
        ENDIF

        IF (PHAMPRNT) THEN
           IF (DOCPRNT) THEN
              COMMENT = ' LISTING OF FOURIER MODULI AND PHASES ------'
              NL      = LNBLNKN(COMMENT)
              CALL LUNDOCPUTCOM(NDOCOUT,COMMENT(1:NL),IRTFLG)
           ELSE
              WRITE(NLIS,*) ' '
              WRITE(NLIS,*)'LISTING OF FOURIER MODULI AND PHASES ------'
           ENDIF
        ELSE
           IF (DOCPRNT) THEN
              COMMENT = ' LISTING OF FILE VALUES ------'
              NL      = LNBLNKN(COMMENT)
              CALL LUNDOCPUTCOM(NDOCOUT,COMMENT(1:NL),IRTFLG)
           ELSE
              WRITE(NLIS,*) ' '
              WRITE(NLIS,*) 'LISTING OF FILE VALUES ------'
           ENDIF
        ENDIF

        IKEY = 0
C       FOR EACH SLICE IN THE REQUESTED LISTING
        DO  KSLICE = 1, NISLI
           ISLICET = ISLI(KSLICE)
      
C          FOR EACH ROW IN THE REQUESTED LISTING
           DO  KROW = 1,NIROW
              IROWT = IROW(KROW)

C             RECOVER THE IMAGE ROW
              IROWNOW = (ISLICET - 1) * NY + IROWT
              CALL REDLIN(LUN,A0,NX,IROWNOW)

              IF (DOCPRNT) THEN
C                OUTPUT TO DOC FILE
                 WRITE(COMMENT,902) ISLICET,IROWT
902              FORMAT('    SLICE: ',I5,'   ROW: ',I5)
                 NL      = LNBLNKN(COMMENT)
                 CALL LUNDOCPUTCOM(NDOCOUT,COMMENT(1:NL),IRTFLG)
              ELSE
                 WRITE(NLIS,903) ISLICET,IROWT
 903             FORMAT(' SLICE: ',I5,'   ROW: ',I5)
              ENDIF

C             GET THE PIXELS WANTED FROM THIS LINE, PUT IN AOUT
              IVALS = 0
              DO KSAM = 1,NICOL
                 IVALS = IVALS + 1
                 JOUT(IVALS) = ICOL(KSAM)
                 AOUT(IVALS) = A0(ICOL(KSAM))
              ENDDO

              IF (PHAMPRNT) THEN
C                WANT PHASE & MODULI FOR FOURIER
                 ANGF  = 180. / 3.14159
                 IVALS = 0
                 DO KSAM = 1,NICOL
                    IF (KSAM .LE. (NX / 2)) THEN
                       L  = ICOL(KSAM)
                       BR = A0(2*(L-1)+1)
                       BI = A0(2*L)
                       AM = SQRT(BI**2+BR**2)
                       PH = 0.0
                       IF (BI .NE. 0. .OR. BR .NE. 0.) 
     &                     PH = ATAN2(BI,BR)*ANGF
                       IVALS       = IVALS + 1
                       AOUT(IVALS) = AM
                       JOUT(IVALS) = ICOL(KSAM)
                       IVALS       = IVALS + 1
                       AOUT(IVALS) = PH
                    ENDIF
                 ENDDO
              ENDIF

              IF (DOCPRNT) THEN
C                PRINT INTO DOC FILE ONLY
                 DO I = 1, IVALS 
C                   REG. 0: KEY
                    IKEY     = IKEY + 1
                    DLIST(1) = IKEY

C                   REG. 1: VALUE
                    DLIST(2) = AOUT(I)

C                   REG. 2: COLUMN
                    DLIST(3) = JOUT(I)

C                   REG. 3: ROW
                    DLIST(4) = IROWT

C                   REG. 4: SLICE
                    DLIST(5) = ISLICET
                    CALL LUNDOCWRTDAT(NDOCOUT,IKEY,DLIST(2),4,IRTFLG)
                 ENDDO

              ELSEIF (INTPRNT) THEN
C                PRINT AS INTEGERS
                 DO  J=1,IVALS
                    IBUF(J) = AOUT(J)
                 ENDDO

                 WRITE(NLIS,602)(IBUF(J),J=1,IVALS)
602              FORMAT(10(1X,I10.6))

              ELSE
C                FLOATING POINT LISTING 
                 WRITE(NLIS,106)(AOUT(J),J=1,IVALS)
 106             FORMAT(5G12.4)
              ENDIF
           ENDDO
        ENDDO
        IF (.NOT. DOCPRNT) WRITE(NLIS,*) ' '

999     CONTINUE
        IF (DOCPRNT) CLOSE(NDOC)

        END


@


1.32
log
@enter
@
text
@d4 9
a12 8
C  LISTIT.F   REWRITTEN & REMOVED FROM OPENPIC AUG 96      ARDEAN LEITH      
C             LONG FILENAMES DEC 88                        ARDEAN LEITH
C             IMAGE  LIST BUG FIXED SEPT 98                ARDEAN LEITH
C             FIXED KEY FOR DOCFILE OF COL OUTPUT AUG 99   ARDEAN LEITH
C             USED NBUFSIZ AUG 02                          ARDEAN LEITH
C             LUNRED                              FEB 03   ARDEAN LEITH
C             'Pixel' COL & ROW INTERCHANGE BUG   JAN 07   ARDEAN LEITH
C             INCORE COMMENT WRITE BUG            FEB 07   ARDEAN LEITH
d17 1
a17 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d42 2
a43 2
C         NSAM,NROW  IMAGE DIMENSIONS
C         NSLICE     IMAGE DIMENSIONS SLICES
d50 1
a50 1
	SUBROUTINE LISTIT(FILNAM,LUN,NSAM,NROW,NSLICE,DOCPRNT,TERMPRNT)
d55 7
a61 4
	COMMON           IROW(NBUFSIZ),ICOL(NBUFSIZ),ISLI(NBUFSIZ)
	COMMON           IBUF(NBUFSIZ),AOUT(NBUFSIZ),JOUT(NBUFSIZ),A0(1)
        COMPLEX          BCOM(1)
        EQUIVALENCE      (A0,BCOM)
d67 1
a67 1
        CHARACTER (LEN=1)      :: NULL,ANS,OTYPE,FTYPE
d71 1
d73 1
a73 1
        DATA NDOC   /76/
a74 1
        NULL = CHAR(0)
d83 1
d109 1
a109 1
        IF (OTYPE .EQ. 'H') THEN
d115 1
a115 1
        ELSEIF (OTYPE .EQ. 'P') THEN
d122 1
a122 1
        ELSEIF (OTYPE .EQ. 'R') THEN
d125 1
a125 1
           CALL RDPRAI(IROW,NBUFSIZ,NIROW,1,NROW,'ROW(S)',
d127 1
a127 1
           DO I = 1,NSAM
d130 1
a130 1
           NICOL = NSAM
d132 1
a132 1
        ELSEIF (OTYPE .EQ. 'C') THEN
d135 1
a135 1
           CALL RDPRAI(ICOL,NBUFSIZ,NICOL,1,NSAM,'COLUMN(S)',
d137 1
a137 1
           DO I = 1,NROW
d140 1
a140 1
           NIROW = NROW
d142 1
a142 1
        ELSEIF (OTYPE .EQ. 'I') THEN 
d145 1
a145 1
           IF (NSLICE .GT. 1) THEN
d148 1
a148 1
              CALL RDPRAI(ISLI,NBUFSIZ,NISLI,1,NSLICE,'SLICE(S)',
d152 1
a152 1
           DO I = 1,NROW
d155 2
a156 2
           NIROW = NROW
           DO I = 1,NSAM
d159 1
a159 1
           NICOL = NSAM
d161 1
a161 1
        ELSEIF (OTYPE .EQ. 'W') THEN
d164 1
a164 1
           CALL RDPRAI(ICOL,NBUFSIZ,NICOL,1,NSAM,'COLUMNS(S)',
d167 1
a167 1
           CALL RDPRAI(IROW,NBUFSIZ,NIROW,1,NROW,'ROW(S)',
d169 1
a169 1
           IF (NSLICE .GT. 1) THEN
d172 1
a172 1
              CALL RDPRAI(ISLI,NBUFSIZ,NISLI,1,NSLICE,'SLICE(S)',
d177 1
a177 1
        IF (.NOT. DOCPRNT .AND. IFORM .GT. 0 .AND.
d182 1
a182 1
           IF (FTYPE .EQ. 'I') INTPRNT = .TRUE.
d186 1
a186 1
        IF (IFORM .LT. 0 .AND. OTYPE .NE. 'H') THEN
d193 1
a193 1
        IF (OTYPE .EQ. 'H') THEN
d196 1
a196 1
C         READ ALL HEADER POSITIONS INTO A0 BUFFER
d201 1
a201 1
            COMMENT = '  FILE HEADER VALUES ---------------------'//NULL
d216 7
d256 2
a257 2
              IROWNOW = (ISLICET - 1) * NROW + IROWT
              CALL REDLIN(LUN,A0,NSAM,IROWNOW)
d280 1
a280 1
                 ANGF  = 180./3.14159
d283 1
a283 1
                    IF (KSAM .LE. (NSAM / 2)) THEN
d342 1
a342 2
       RETURN
       END
@


1.31
log
@GPL_2010
@
text
@d108 1
a108 1
     &              'ENTER HEADER POSITION(S)', NULL,IRTFLG)
d113 1
a113 1
     &        'ENTER ROW & COLUMN',IRTFLG)
d120 1
a120 1
           CALL RDPRAI(IROW,NBUFSIZ,NIROW,1,NROW,'ENTER ROW(S)',
d130 1
a130 1
           CALL RDPRAI(ICOL,NBUFSIZ,NICOL,1,NSAM,'ENTER COLUMN(S)',
d143 1
a143 1
              CALL RDPRAI(ISLI,NBUFSIZ,NISLI,1,NSLICE,'ENTER SLICE(S)',
d159 1
a159 1
           CALL RDPRAI(ICOL,NBUFSIZ,NICOL,1,NSAM,'ENTER COLUMNS(S)',
d162 1
a162 1
           CALL RDPRAI(IROW,NBUFSIZ,NIROW,1,NROW,'ENTER ROW(S)',
d167 1
a167 1
              CALL RDPRAI(ISLI,NBUFSIZ,NISLI,1,NSLICE,'ENTER SLICE(S)',
@


1.30
log
@INCORE COMMENT WRITE BUG
@
text
@a12 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2007  Health Research Inc.                      *
d14 5
a18 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d20 1
a20 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d25 1
a25 1
C=* This program is distributed in the hope that it will be useful,    *
d27 1
a27 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a28 1
C=*                                                                    *
d30 1
a30 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.29
log
@'Pixel' COL & ROW INTERCHANGE BUG
@
text
@d11 1
a11 1
C
a61 2
        CHARACTER *81    DOCNAM
        COMMON /COMMUN/  DOCNAM
d63 8
a70 4
        CHARACTER *(*)   FILNAM
        CHARACTER *1     NULL,ANS,OTYPE,FTYPE
        LOGICAL          INTPRNT, DOCPRNT, TERMPRNT, PHAMPRNT
        REAL             DLIST(10)
a83 3
C           GET NAME FOR DOC FILE
            CALL FILERD(DOCNAM,NLETD,NULL,'OUTPUT DOC FILE',IRTFLG)
            A0(1) = 0
d85 8
a92 5
            NRUN  = 0
            CALL SAVDN1(NDOC,DOCNAM,AO,0,NRUN,0)
            NRUN  = 1
            WRITE(NDOC,90)  FILNAM(1:NLET)
 90         FORMAT(' ; FROM IMAGE FILE: ',A)
d200 3
a202 2
            WRITE(NDOC,94)  
 94         FORMAT(' ; FILE HEADER VALUES ---------------------')
d205 1
a205 3
                DLIST(1) = ICOL(I)
                DLIST(2) = A0(I)
                CALL SAVDN1(NDOC,DOCNAM,DLIST,2,NRUN,0)
d220 3
a222 2
              WRITE(NDOC,95)  
 95           FORMAT(' ; LISTING OF FOURIER MODULI AND PHASES ------')
d225 1
a225 2
              WRITE(NLIS,*)
     &             'LISTING OF FOURIER MODULI AND PHASES ------'
d229 3
a231 2
              WRITE(NDOC,96)  
 96           FORMAT(' ; LISTING OF FILE VALUES ------')
d234 1
a234 2
              WRITE(NLIS,*)
     &               'LISTING OF FILE VALUES ------'
d253 4
a256 2
                 WRITE(NDOC,902) ISLICET,IROWT
 902             FORMAT(' ;    SLICE: ',I5,'   ROW: ',I5)
d310 1
a310 2

                    CALL SAVDN1(NDOC,DOCNAM,DLIST,5,NRUN,0)
@


1.28
log
@GPL License fixed
@
text
@d10 1
d14 1
a14 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d115 1
a115 1
     &        'ENTER COLUMN & ROW',IRTFLG)
@


1.27
log
@HRI GPL License used
@
text
@a2 1
C++************************************************************************
a11 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d15 1
a15 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a34 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.26
log
@redhed/wrthed removal
@
text
@d2 1
d14 24
@


1.25
log
@nbufsiz used .
@
text
@d9 1
d174 1
d176 1
a176 2
          CALL REDHED(LUN,A0,NBUFSIZ,NSAM,0,IRTFLG)
          IF (IRTFLG .NE. 0) GOTO 999
@


1.24
log
@nloop,iloop_removed
@
text
@d8 1
a31 1
C        0         2         3         4         5         6         7     
a35 2
	PARAMETER (NBUF=16000)

d37 1
d39 2
a40 2
	COMMON           IROW(NBUF),ICOL(NBUF),ISLI(NBUF)
	COMMON           IBUF(NBUF),AOUT(NBUF),JOUT(NBUF),A0(1)
d89 2
a90 2
           NICOL = NBUF
           CALL RDPRAI(ICOL,NBUF,NICOL,1,256,
d102 2
a103 2
           NIROW = NBUF
           CALL RDPRAI(IROW,NBUF,NIROW,1,NROW,'ENTER ROW(S)',
d112 2
a113 2
           NICOL = NBUF
           CALL RDPRAI(ICOL,NBUF,NICOL,1,NSAM,'ENTER COLUMN(S)',
d125 2
a126 2
              NISLI = NBUF
              CALL RDPRAI(ISLI,NBUF,NISLI,1,NSLICE,'ENTER SLICE(S)',
d141 2
a142 2
           NICOL = NBUF
           CALL RDPRAI(ICOL,NBUF,NICOL,1,NSAM,'ENTER COLUMNS(S)',
d144 2
a145 2
           NIROW = NBUF
           CALL RDPRAI(IROW,NBUF,NIROW,1,NROW,'ENTER ROW(S)',
d149 2
a150 2
              NISLI = NBUF
              CALL RDPRAI(ISLI,NBUF,NISLI,1,NSLICE,'ENTER SLICE(S)',
d174 1
a174 1
          CALL REDHED(LUN,A0,NBUF,NSAM,0,IRTFLG)
@


1.23
log
@                   IF (KSAM .LE. (NSAM / 2)) THEN
for fourier output
@
text
@d96 1
a96 1
           CALL RDPRIS(IROW(1),ICOL(1),NLOOP,ILOOP,
@


1.22
log
@consecutive key for doc files
@
text
@d254 1
a254 1
                    IF (KSAM .LT. NSAM / 2) THEN
@


1.21
log
@changed column key increment location
@
text
@d4 4
a7 4
C  LISTIT.F   REWRITTEN & REMOVED FROM OPENPIC AUG 96      ArDean Leith      
C             LONG FILENAMES DEC 88                        ArDean Leith
C             IMAGE  LIST BUG FIXED SEPT 98                ArDean Leith
C             FIXED KEY FOR DOCFILE OF COL OUTPUT AUG 99   ArDean Leith
d100 1
d110 1
d120 1
d122 1
a122 1
C          WANT ONE IMAGE ONLY
d125 1
a125 1
C             WANT ONE IMAGE ONLY
d275 2
a276 5
                    DLIST(1) = JOUT(I)
                    IF (OTYPE .EQ. 'C') THEN
                       IKEY     = IKEY + 1
                       DLIST(1) = IKEY
                    ENDIF
@


1.20
log
@fixed document key
@
text
@a242 4
                 IF (OTYPE .EQ. 'C') THEN
                    IKEY        = IKEY + 1
                    JOUT(IVALS) = IKEY
                 ENDIF
a261 4
                       IF (OTYPE .EQ. 'C') THEN
                          IKEY        = IKEY + 1
                          JOUT(IVALS) = IKEY
                       ENDIF
d271 1
d273 6
d280 2
d283 2
d286 2
d289 1
d292 1
d301 1
@


1.19
log
@image listing bug fixed
@
text
@d4 4
a7 3
C  LISTIT.F        REWRITTEN & REMOVED FROM OPENPIC AUG 96 ArDean Leith      
C                  LONG FILENAMES DEC 88                   ArDean Leith
C                  IMAGE  LIST BUG FIXED SEPT 98           ArDean Leith
d9 8
a16 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
C **************************************************************************
a38 1
CNO_SAVE
d216 1
d243 4
d266 4
@


1.18
log
@added NOSTOP parameter to redhed call
@
text
@d4 3
a6 2
C    LISTIT.FOR             REWRITTEN & REMOVED FROM OPENPIC AUG 96 al      
C                           LONG FILENAMES DEC 88 al
d119 10
a128 5
        ELSEIF (OTYPE .EQ. 'I' .AND. NSLICE .GT. 1) THEN
C          WANT ONE IMAGE. ONLY
           NISLI = NBUF
           CALL RDPRAI(ISLI,NBUF,NISLI,1,NSLICE,'ENTER SLICE(S)',
     &          NULL,IRTFLG)
d137 1
@


1.17
log
@removed call to listitr (unused here)
@
text
@d166 1
a166 1
          CALL REDHED(LUN,A0,NBUF,NSAM,IRTFLG)
@


1.16
log
@remove extra comma in format 902 statement
@
text
@a56 5
        IF (NSEL(1) .NE. 0) THEN
C          SINGLE NUMBER (REGISTER) OPTION:
           CALL LISTITR(FILNAM,LUN,NSAM,NROW,NSLICE,TERMPRNT)
           RETURN
        ENDIF
@


1.15
log
@bad format ,
@
text
@d230 1
a230 1
 902             FORMAT(' ;    SLICE: ',I5,'   ROW: ',I5,)
@


1.14
log
@bad format for fourier (i)
@
text
@d233 1
a233 1
 903             FORMAT(' SLICE: ',I5,'   ROW: ',I5,)
@


1.13
log
@obsolete ffind3 removed
@
text
@d49 1
a49 1
        LOGICAL          INTPRINT, DOCPRNT, TERMPRNT, PHAMPRNT
d66 1
a66 1
        INTPRINT = .FALSE.
d165 1
a165 1
           IF (ANS .NE. 'N')PHAMPRNT = .TRUE.
@


1.12
log
@added no_save
@
text
@a159 37
        IF (IFORM .LT. 0 .AND. NSLICE .GT. 1) THEN
C          3-D FOURIER FILE

           CALL RDPRMC(ANS,NCHAR,.TRUE.,
     &        'PICK INDIVIDUAL COEFFICIENTS? (Y/N)',NULL,IRTFLG)
           IF (ANS .EQ. 'Y') THEN
C             PICK COEFFICIENTS NOW, THEN RETURN
              CALL RDPRMI(KX,KY,NLOOP,ILOOP,'KX, KY')
              CALL RDPRMI(KZ,NDUM,NLOOP,ILOOP,'KZ')
              CALL FFIND3(NSAM,NROW,NSLICE,KX,KY,KZ,JR,NADDR,PHFACT)

              WRITE(NOUT,1402) JR,NADDR,PHFACT
1402          FORMAT(' JR = ',I4,' NADDR = ',I4,' PHFACT = ',F3.1)

              CALL TOTREC(NSAM,NROW,NSLICE,ITREC)
              IF (JR .GT. ITREC .OR. JR .LT. 1) THEN
                WRITE(NOUT,*) ' *** FOURIER RECORD NUMBER OUT OF BOUNDS')
                CALL ERRT(100,'LISTIT',NE)
                RETURN
              ENDIF

              CALL REDLIN(LUN,BCOM,NSAM,JR)
              WRITE(NOUT,1403) BCOM(NADDR)
1403          FORMAT(1X,2G12.4)
              NS1 = NSEL(1)
              NS2 = NSEL(2)
              NS3 = NSEL(3)
              NS4 = NSEL(4)
              IF (NS1 .NE. 0) PARAM(NS1) = REAL(BCOM(NADDR))
              IF (NS2 .NE. 0) PARAM(NS2) = AIMAG(BCOM(NADDR))
              IF (NS3 .NE. 0) PARAM(NS3) = CABS(BCOM(NADDR))
              IF (NS4 .NE. 0)
     &          PARAM(NS4)=180./PI*ATAN2(PARAM(NS2),PARAM(NS1))
              GOTO 999
           ENDIF
        ENDIF

@


1.11
log
@spelling
@
text
@d38 1
@


1.10
log
@renamed from opnpic, rewritten
@
text
@d116 1
a116 1
           CALL RDPRAI(ICOL,NBUF,NICOL,1,NSAM,'ENTER COLUMNS(S)',
@


1.9
log
@cosmetic output changes
@
text
@d4 3
a6 2
C    OPNPIC.FOR
C                                             FILENAMES DEC 88 al
d17 1
a17 1
C    OPNPIC(FILNAM,LUN,NSAM)
d19 1
a19 2
C    PURPOSE:   TO DUMP OUT CONTENT OF SELECTED IMAGE LINES 
C	         - OR -    TO DUMP CONTENTS OF ALL REGISTERS
d25 4
a28 8
C
C    DESCRIPTION:  ON CALL, THE ROUTINE PRINTS OUT NUMBER OF ROWS
C                  TO BE PRINTED: 5
C                  AND THEN ASKS FOR THE SPECIFIC ROWS
C                  ENTER 5 ROW NUMBERS (0...<NROW>): 1,6,7,8,65
C                  EACH LINE PRINTED OUT IS IDENTIFIED BY NUMBER AND
C                  FILE NAME.
C                  THE ROW NUMBER 0 CONTAINS THE LABEL INFO
d33 1
a33 1
	SUBROUTINE OPNPIC(FILNAM,LUN,NSAM,NROW,NSLICE)
d35 1
a35 1
	PARAMETER (NBUF=4096)
d39 4
a42 2
	COMMON           IROW(NBUF),IBUF(NBUF),A0(1)
        CHARACTER *32    PROMPT
d44 1
a44 2
        COMMON /COMMUN/  PROMPT,DOCNAM
        COMMON /LUNARA/  LUNARA(100)
d46 4
a49 4
        CHARACTER *(*) FILNAM
        CHARACTER *1   NULL,ANS
        LOGICAL        INTPRINT, DOCPRNT
        REAL           DLIST(2)
a50 1
        DATA MAXINT /32768/
a54 1
        CALL PDATES(FILNAM,-1)
a55 1

d58 1
a58 1
           CALL OPNPICP(FILNAM,LUN,NSAM,NROW,NSLICE)
d63 140
d204 15
a218 31
	NLIS = NDAT
	IF (FCHAR(4:4) .EQ. 'T'.OR. FCHAR(5:5) .EQ. 'T') NLIS = NOUT
        INTPRINT=.FALSE.
	IF (FCHAR(4:4) .EQ. 'I'.OR. FCHAR(5:5) .EQ. 'I') INTPRINT=.TRUE.
        DOCPRNT=.FALSE.
	IF (FCHAR(4:4) .EQ. 'D') DOCPRNT = .TRUE.

	IF (FCHAR(4:4) .EQ. 'R') THEN
C         DUMP REGISTERS EITHER INTO THE RESULTS FILE (DEFAULT)
C         OR ONTO THE TERMINAL ('LI RT')

200	  WRITE(NLIS,2011)
2011	  FORMAT(' REGISTER DUMP FOLLOWS ---------------------'/
     &           '    X0 ... X9 (SYSTEM REGISTERS):'/)

	  WRITE(NLIS,201) (PARAM(K),K=1,10)
201	  FORMAT(' DO-LP',G12.4,' NSAM ',G12.4,' NROW ',G12.4,
     1      ' FMAX ',G12.4/
     2      ' FMIN ',G12.4,' AVRG ',G12.4,' SIGM ',G12.4,' X7   ',G12.4/
     3      ' X8   ',G12.4,' ERRFL',G12.4/)

	  IF (.NOT.INTPRINT) THEN
C            REAL OUTPUT
             WRITE(NLIS,202)
202          FORMAT('    X10 ... X102 FOLLOW:'/)
	     WRITE(NLIS,106) (PARAM(K),K=11,103)

          ELSEIF (INTPRINT) THEN 
C            INTEGER OUTPUT
             DO I=11,103
                IROW(I) = PARAM(I)
d220 4
d225 2
a226 4
             WRITE(NLIS,204)
204          FORMAT('INTEGER VALUES OF X10 ... X102 FOLLOW:'/)
             WRITE(NLIS,205) (IROW(I),I=11,103)
205          FORMAT(10(1X,I10))
d228 2
d231 9
d241 9
a249 1
C        DIMP LINES OF AN IMAGE
d251 50
a300 2
C        ITREC IS THE MAXIMUM RECORD ACCESS NUMBER FOR I/O
         CALL TOTREC(NSAM,NROW,NSLICE,ITREC)
d302 14
a315 65
         IPHAM = 0

         IF (IFORM .LT. 0) THEN
C           FOURIER FILES
            CALL RDPRMC(ANS,NCHAR,.TRUE.,'PHASE / MOD LISTING? (Y/N)',
     &                 NULL,IRTFLG)

            IF (ANS .NE. 'N' .AND. ANS .NE. 'n') THEN
               IPHAM = 1
               WRITE(NLIS,21)
21             FORMAT(' ** LISTING OF FOURIER MODULI AND PHASES'/)
            ENDIF
         ENDIF

C                  12345678901234567890123456789
         PROMPT = 'ENTER ROW NUMBERS (0...     )   '

         WRITE(PROMPT(24:27),8000) ITREC
8000     FORMAT(I4)

         NUM = 1024


1        CALL RDPRAI(IROW,NBUF,NUM,0,MAXINT,PROMPT(1:29),NULL,IRTFLG)
         IF (DOCPRNT) THEN
            IF ( NUM .GT. 1) THEN
               WRITE(NOUT,*) 
     &            '*** ONLY ONE ROW ALLOWED IN DOC FILE OUTPUT' 
               CALL ERRT(100,'OPNPIC',NE)
               RETURN
            ELSE
               CALL FILERD(DOCNAM,NLETD,NULL,'OUTPUT DOC FILE',IRTFLG)
               A0(1) = 0
               NRUN = 0
               CALL SAVDN1(NDOC,DOCNAM,AO,0,NRUN,0)
               NRUN = 1
               WRITE(NDOC,90) IROW(1), FILNAM(1:NLET)
                    WRITE(NLIS,110) IROW(1), FILNAM(1:NLET)
 90            FORMAT(' ;   ROW:',I4,'  IMAGE FILE:',A)
            ENDIF
         ENDIF

         IF (IPHAM .EQ. 0) THEN
C           REGULAR IMAGE FILE OR STRAIGHT FOURIER LISTING

C           FOR EACH LINE IN THE REQUESTED LISTING
            DO 50 K =1,NUM

C             LIST COMPLETE HEADER (LONG LABEL FORMAT ASSUMED)
              IF (IROW(K) .LT. 0) THEN
                 RETURN

              ELSEIF (IROW(K) .EQ. 0) THEN 
C                LIST HEADER POSITIONS
                 CALL RDPRMI(IHOWMANY,IDUM,NLOOP,ILOOP,
     &                    'LAST HEADER POSITION')

C                READ ALL HEADER POSITIONS INTO A0 BUFFER
                 IND   = 1
                 NRECS = LUNARA(LUN)
                 IIR   = 1-NRECS
                 DO  I=1,NRECS
                    CALL REDLIN(LUN,A0(IND),NSAM,IIR)
                    IIR = IIR+1
                    IND = IND+NSAM
d318 10
a327 22
                 IF (DOCPRNT) THEN
C                   SAVE IN DOC FILE, DO NOT APPEND
                    DO I = 1, IHOWMANY
                       DLIST(1) = I
                       DLIST(2) = A0(I)
                       CALL SAVDN1(NDOC,DOCNAM,DLIST,2,NRUN,0)
                    ENDDO

                 ELSEIF (.NOT. INTPRINT) THEN
C                   FLOATING POINT HEADER LISTING
                    WRITE(NLIS,*) 'FILE HEADER:'
                    WRITE(NLIS,302) (A0(I),I=1,IHOWMANY)
302                 FORMAT(10(1X,G12.4))

                 ELSE
C                   INTEGER HEADING LISTING (MEANINGLESS!!)
                    WRITE(NLIS,*) 'FILE HEADER:'
                    DO  I=1,256
                       IBUF(I) = A0(I)
                    ENDDO
                    WRITE(NLIS,602) (IBUF(I),I=1,IHOWMANY)
                 ENDIF
d329 1
a329 78
              ELSE
C                LIST IMAGE ROWS
                 IF (IROW(K) .GT .ITREC) THEN
C                   OUTSIDE OF IMAGE RECORDS
                    WRITE(NOUT,*) '*** RECORD NUMBER OUT OF LIMITS'
                    RETURN
                 ENDIF

C                RECOVER IMAGE ROW
                 CALL REDLIN(LUN,A0,NSAM,IROW(K))

                 IF (DOCPRNT) THEN
C                   OUTPUT TO DOC FILE
                    DO J = 1,NSAM
                       DLIST(1) = J
                       DLIST(2) = A0(J)
                       CALL SAVDN1(NDOC,DOCNAM,DLIST,2,NRUN,0)
                    ENDDO
                 ELSE
                    WRITE(NLIS,110) IROW(K), FILNAM(1:NLET)
110                 FORMAT('   ROW = ',I4,' FILE = ',A)

                    IF (.NOT.INTPRINT) THEN 
C                      FLOATING POINT LISTING OF THIS LINE
                       WRITE(NLIS,106)(A0(J),J=1,NSAM)
 106                   FORMAT(10G12.4)
                    ELSE
C                      INTEGER LISTING OF THIS LINE
                       DO  J=1,NSAM
                          IBUF(J)=A0(J)
                       ENDDO
                       WRITE(NLIS,602)(IBUF(J),J=1,NSAM)
602                    FORMAT(10(1X,I10.6))
                    ENDIF
                 ENDIF
               ENDIF
50          CONTINUE
         ELSE
C           FOURIER FORMAT FILES

60          ANGF = 180./3.14159
            NSAMH = NSAM/2

            DO 80 K = 1,NUM
               CALL REDLIN(LUN,A0,NSAM,IROW(K))
               WRITE(NLIS,110) IROW(K), FILNAM(1:NLET)

C              IF THIS IS THE LABEL RECORD, SIMPLY COPY INTO THE RESULTS FILE.
               IF (IROW(K) .GT. 0) THEN
                  DO  L = 1,NSAMH
                     BR = A0(2*(L-1)+1)
                     BI = A0(2*L)
                     PH = 0.0
                     IF (BI .NE. 0. .OR. BR .NE. 0.) 
     &                   PH = ATAN2(BI,BR)*ANGF
                     AM = SQRT(BI**2+BR**2)
                     A0(2*(L-1)+1) = AM
                     A0(2*L)       = PH
                   ENDDO
                ENDIF
                IF (DOCPRNT) THEN
C                   OUTPUT TO DOC FILE
                    DO J = 1,NSAM
                       DLIST(1) = J
                       DLIST(2) = A0(J)
                       CALL SAVDN1(NDOC,DOCNAM,DLIST,2,NRUN,0)
                    ENDDO
                ELSEIF (.NOT. INTPRINT) THEN
75                 WRITE(NLIS,106)(A0(J),J=1,NSAM)
                ELSE
                   DO  J=1,NSAM
                     IBUF(J) = A0(J)
                   ENDDO
                   WRITE(NLIS,602) (IBUF(J),J=1,NSAM)
                ENDIF
80           CONTINUE
          ENDIF
        ENDIF
d332 2
a333 2
        RETURN
	END
@


1.8
log
@chnged pdates ifmt to no new page
@
text
@d39 1
a39 1
	PARAMETER (NBUF=1024)
d47 1
a47 1
        COMMON /LUNARA/  LUNARA(100),LASLAB
d82 1
a82 1
2011	  FORMAT(' ** REGISTER DUMP FOLLOWING'/
d92 1
d94 1
a94 1
202          FORMAT('    X10 ... X102 FOLLOWING:'/)
a95 1
          ENDIF
d97 4
a100 3
          IF (INTPRINT) THEN 
             DO  I=11,103
                IROW(I)=PARAM(I)
d102 1
d104 1
a104 1
204          FORMAT('INTEGER VALUES OF X10 ... X102 FOLLOWING:'/)
d110 1
a110 1
C        'LI R' FOR REGISTER DUMP
@


1.7
log
@bug fixed
@
text
@d59 1
a59 1
        CALL PDATES(FILNAM,1)
@


1.6
log
@added li d
@
text
@d150 1
a150 1
                    WRITE(NLIS,110) IROW(K), FILNAM(1:NLET)
@


1.5
log
@removed errt for record number limit
@
text
@a34 1
C23456789012345678901234567890123456789012345678901234567890123456789012
a40 1
#ifdef SP_UNIX
a41 3
#else
	INCLUDE 'COMMON1:CMBLOCK.INC' 
#endif
d44 3
a46 2
        CHARACTER *29    PROMPT
        COMMON /COMMUN/  PROMPT
d51 2
a52 1
        LOGICAL        INTPRINT
d55 1
d74 2
d128 1
a128 1
         PROMPT = 'ENTER ROW NUMBERS (0...     )'
a134 1
1        CALL RDPRAI(IROW,NBUF,NUM,0,MAXINT,PROMPT,NULL,IRTFLG)
d136 19
d158 1
d166 1
d169 2
d179 12
a190 2
                 WRITE(NLIS,*) 'FILE HEADER:'
                 IF (.NOT. INTPRINT) THEN
d193 1
d195 2
d198 1
a198 1
                       IBUF(I)=A0(I)
d202 1
d204 1
d210 2
d214 10
a223 2
                 WRITE(NLIS,110) IROW(K), FILNAM(1:NLET)
110              FORMAT('   ROW = ',I4,' FILE = ',A)
d225 13
a237 10
                 IF (.NOT.INTPRINT) THEN 
                    WRITE(NLIS,106)(A0(J),J=1,NSAM)
 106                FORMAT(10G12.4)
                  ELSE
                    DO  J=1,NSAM
                       IBUF(J)=A0(J)
                    ENDDO
                    WRITE(NLIS,602)(IBUF(J),J=1,NSAM)
602                 FORMAT(10(1X,I10.6))
                  ENDIF
d263 8
a270 1
                IF (.NOT. INTPRINT) THEN
d281 1
@


1.4
log
@undefined nlet fixed
@
text
@d170 1
a170 1
                    CALL ERRT(7,'OPNPIC',NE)
@


1.3
log
@cosmetic
@
text
@d62 1
a138 1
            NLET = INDEX(FILNAM,NULL) - 1
@


1.2
log
@cpp_lines_added
@
text
@d4 1
a4 1
C $$ OPNPIC.FOR
d16 1
a16 1
C $$ OPNPIC(FILNAM,LUN,NSAM)
a46 3
	COMMON         IROW(NBUF),IBUF(NBUF),A0(1)
        COMMON  /COMMUN/ PROMPT
        COMMON /LUNARA/ LUNARA(100),LASLAB
d48 5
a53 1
        CHARACTER *29  PROMPT
d55 2
a56 1
        LOGICAL INTPRINT
d63 4
a66 6
C SINGLE NUMBER (REGISTER) OPTION:


        IF(NSEL(1) .NE. 0) THEN
          CALL OPNPICP(FILNAM,LUN,NSAM,NROW,NSLICE)
        RETURN
d69 1
a69 1
C        DETERMINE OUTPUT OPTION
d72 1
a72 1
	IF (FCHAR(4:4) .EQ. 'T'.OR. FCHAR(5:5) .EQ. 'T') NLIS=NOUT
d74 2
a75 2
	IF (FCHAR(4:4) .EQ. 'I'.OR. FCHAR(5:5) .EQ. 'I')
     $  INTPRINT=.TRUE.
d90 4
a93 4
	  IF(.NOT.INTPRINT) THEN
          WRITE(NLIS,202)
202       FORMAT('    X10 ... X102 FOLLOWING:'/)
	  WRITE(NLIS,106) (PARAM(K),K=11,103)
d96 8
a103 7
          IF(INTPRINT) THEN 
           DO 203 I=11,103
203        IROW(I)=PARAM(I)
           WRITE(NLIS,204)
204        FORMAT('INTEGER VALUES OF X10 ... X102 FOLLOWING:'/)
           WRITE(NLIS,205) (IROW(I),I=11,103)
205        FORMAT(10(1X,I10))
d105 1
a106 1

d115 3
a117 3
C          FOURIER FILES
           CALL RDPRMC(ANS,NCHAR,.TRUE.,'PHASE / MOD LISTING?(Y/N)$',
     &       NULL,IRTFLG)
d119 5
a123 5
           IF (ANS .EQ. 'Y') THEN
             IPHAM = 1
             WRITE(NLIS,21)
21           FORMAT(' ** LISTING OF FOURIER MODULI AND PHASES'/)
           ENDIF
d126 1
a126 1
C                  123456789012345678901234567890
a135 1

d142 2
a143 26
C LIST COMPLETE HEADER (LONG LABEL FORMAT ASSUMED)
              IF(IROW(K).EQ.0) THEN 
              CALL RDPRMI
     $        (IHOWMANY,IDUM,NLOOP,ILOOP,'LAST HEADER POSITION')
               IND=1
               NRECS=LUNARA(LUN)
               IIR=1-NRECS
               DO 301 I=1,NRECS
               CALL REDLIN(LUN,A0(IND),NSAM,IIR)
               IIR=IIR+1
               IND=IND+NSAM
301            CONTINUE
               WRITE(NLIS,*) 'FILE HEADER:'
               IF(.NOT.INTPRINT) THEN
               WRITE(NLIS,302) (A0(I),I=1,IHOWMANY)
302            FORMAT(10(1X,G12.4))
               ELSE
               DO 303 I=1,256
303            IBUF(I)=A0(I)
               WRITE(NLIS,602) (IBUF(I),I=1,IHOWMANY)
               ENDIF
              ELSE

              IF (IROW(K) .GT .ITREC) THEN
C                OUTSIDE OF IMAGE RECORDS
                 CALL ERRT(7,'OPNPIC',NE)
a144 2
              ENDIF
              CALL REDLIN(LUN,A0,NSAM,IROW(K))
d146 28
a173 2
              WRITE(NLIS,110) IROW(K), FILNAM(1:NLET)
110           FORMAT('   ROW = ',I4,' FILE = ',A)
d175 2
a176 11
            IF(.NOT.INTPRINT) THEN 
              WRITE(NLIS,106)(A0(J),J=1,NSAM)
 106          FORMAT(10G12.4)
            ELSE
              DO 601 J=1,NSAM
              IBUF(J)=A0(J)
601           CONTINUE
              WRITE(NLIS,602)(IBUF(J),J=1,NSAM)
602           FORMAT(10(1X,I10.6))
             ENDIF
            ENDIF
d178 11
a189 1

d197 2
a198 2
              CALL REDLIN(LUN,A0,NSAM,IROW(K))
              WRITE(NLIS,110) IROW(K), FILNAM(1:NLET)
d200 24
a223 21
C             IF THIS IS THE LABEL RECORD, SIMPLY COPY INTO THE RESULTS FILE.
              IF (IROW(K) .GT. 0) THEN
                DO 70 L = 1,NSAMH
                  BR = A0(2*(L-1)+1)
                  BI = A0(2*L)
                  PH = 0.0
                  IF (BI .NE. 0. .OR. BR .NE. 0.) PH = ATAN2(BI,BR)*ANGF
                  AM = SQRT(BI**2+BR**2)
                  A0(2*(L-1)+1) = AM
70              A0(2*L) = PH
              ENDIF
             IF(.NOT.INTPRINT) THEN
75            WRITE(NLIS,106)(A0(J),J=1,NSAM)
              ELSE
              DO 603 J=1,NSAM
              IBUF(J)=A0(J)
603           CONTINUE
              WRITE(NLIS,602) (IBUF(J),J=1,NSAM)
              ENDIF
80          CONTINUE
         ENDIF
a224 1
        ENDIF
@


1.1
log
@Initial revision
@
text
@d42 3
d46 1
@
