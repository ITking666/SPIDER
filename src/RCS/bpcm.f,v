head	1.14;
access;
symbols
	pre_mrcs:1.14
	healthdept_2018:1.14
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.10
	Bproc:1.9
	oct21:1.7
	last77:1.6;
locks; strict;
comment	@c @;


1.14
date	2018.10.03.14.33.56;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.25.09;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.19.52.56;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.17.50.07;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.02.18.03.41;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.12.07.15.15.22;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.11.10.23.09.09;	author yuchen;	state Exp;
branches;
next	1.7;

1.7
date	99.06.03.20.50.45;	author pawel;	state Exp;
branches;
next	1.6;

1.6
date	97.10.01.21.06.40;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	97.02.07.18.50.51;	author pawel;	state Exp;
branches;
next	1.4;

1.4
date	95.10.03.12.59.40;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.10.03.12.53.26;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	95.02.02.21.15.17;	author pawel;	state Exp;
branches;
next	1.1;

1.1
date	94.07.11.19.34.13;	author pawel;	state Exp;
branches;
next	;


desc
@@


1.14
log
@email_health_dept
@
text
@
C ++********************************************************************
C                                                                      *
C  BPCM                                                                *
C                                                                      *
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C                                                                      *
C  BPCM(B,NNNN,NSAM,NROW,LPRJ,CUBE,NX3D,NY3D,NZC,DM,IOPIC,FIRST)                                                            *
C                                                                      *
C  PURPOSE:                                                            *
C                                                                      *
C  PARAMETERS:                                                         *
C                                                                      *
C23456789012345678901234567890123456789012345678901234567890123456789012
C***********************************************************************

        SUBROUTINE BPCM(B,NNNN,NSAM,NROW,LPRJ,CUBE,NX3D,NY3D,NZC,DM,
     &                   IOPIC,FIRST)

        DIMENSION         B(NNNN,NROW,LPRJ),CUBE(NX3D,NY3D)
        DIMENSION         DM(9,LPRJ)
        COMMON /PAR/      LDPX,LDPY,LDPZ,LDPNMX,LDPNMY,NZ1
        LOGICAL           FIRST

        DO K=1,NZC
           KZ = K-1+NZ1
           DO J=1,NY3D
              IF (FIRST)  THEN
                 DO I=1,NX3D
                    CUBE(I,J) = 0.0
		 ENDDO
              ELSE
                 CALL REDLIN(IOPIC,CUBE(1,J),NX3D,J+(K-1)*NY3D)
              ENDIF
	   ENDDO

           DO LP=1,LPRJ
c$omp         parallel do private(i,j,iqx,iqy,xb,yb,xbb,ybb,dipx,dipy)
              DO    J=1,NY3D
                 XBB =
     &            (1-LDPX)*DM(1,LP)+(J-LDPY)*DM(2,LP)+(KZ-LDPZ)*DM(3,LP)
                 YBB =
     &            (1-LDPX)*DM(4,LP)+(J-LDPY)*DM(5,LP)+(KZ-LDPZ)*DM(6,LP)
                 DO I=1,NX3D

                   XB   = (I-1)*DM(1,LP)+XBB
                   IQX  = IFIX(XB+FLOAT(LDPNMX))
                   IF (IQX.LT.1 .OR. IQX.GE.NSAM)  GOTO  101
                   YB   = (I-1)*DM(4,LP)+YBB
                   IQY  = IFIX(YB+FLOAT(LDPNMY))
                   IF (IQY.LT.1 .OR. IQY.GE.NROW)  GOTO  101
                   DIPX = XB+LDPNMX-IQX
                   DIPY = YB+LDPNMY-IQY

C faster version :
                   CUBE(I,J) = CUBE(I,J)
     &              +B(IQX,IQY,LP)+DIPY*(B(IQX,IQY+1,LP)-B(IQX,IQY,LP))
     &              +DIPX*(B(IQX+1,IQY,LP)-B(IQX,IQY,LP)
     &              +DIPY*(B(IQX+1,IQY+1,LP)-B(IQX+1,IQY,LP)
     &              -B(IQX,IQY+1,LP)+B(IQX,IQY,LP)))

C orig. version :
c                  CUBE(I,J) = CUBE(I,J)
c     &                 +(1.0-DIPX)*(1.0-DIPY)*B(MAP(IQX,IQY))
c     &                 +     DIPX *(1.0-DIPY)*B(MAP(IQX+1,IQY))
c     &                 +(1.0-DIPX)*     DIPY *B(MAP(IQX,IQY+1))
c     &                 +     DIPX *     DIPY *B(MAP(IQX+1,IQY+1))

101                CONTINUE
	  	 ENDDO
	    ENDDO
	  ENDDO

          DO J=1,NY3D
             CALL WRTLIN(IOPIC,CUBE(1,J),NX3D,J+(K-1)*NY3D)
          ENDDO
	ENDDO
        END
@


1.13
log
@GPL_2010
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.12
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@HRI GPL License used
@
text
@a6 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 6

C * COPYRIGHT (C)1985, 1999. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
@


1.10
log
@finpat
@
text
@d8 24
@


1.9
log
@header
@
text
@d4 1
a5 1
C                                                                      *
d15 1
a15 1
C                                                                      *
a20 1
C        0         2         3         4         5         6         7 *
d24 1
a24 1
        SUBROUTINE  BPCM(B,NNNN,NSAM,NROW,LPRJ,CUBE,NX3D,NY3D,NZC,DM,
d26 1
d32 6
a37 6
        DO    K=1,NZC
           KZ=K-1+NZ1
           DO   J=1,NY3D
              IF(FIRST)  THEN
                 DO    I=1,NX3D
                 CUBE(I,J)=0.0
d40 1
a40 1
                 CALL  REDLIN(IOPIC,CUBE(1,J),NX3D,J+(K-1)*NY3D)
a42 1
c 12         CONTINUE
d44 2
a45 2
           DO    LP=1,LPRJ
c$omp parallel do private(i,j,iqx,iqy,xb,yb,xbb,ybb,dipx,dipy)
d47 8
a54 6
             XBB=(1-LDPX)*DM(1,LP)+(J-LDPY)*DM(2,LP)+(KZ-LDPZ)*DM(3,LP)
             YBB=(1-LDPX)*DM(4,LP)+(J-LDPY)*DM(5,LP)+(KZ-LDPZ)*DM(6,LP)
                 DO    I=1,NX3D
C
                   XB=(I-1)*DM(1,LP)+XBB
                   IQX=IFIX(XB+FLOAT(LDPNMX))
d56 2
a57 2
                   YB=(I-1)*DM(4,LP)+YBB
                   IQY=IFIX(YB+FLOAT(LDPNMY))
d59 2
a60 2
                   DIPX=XB+LDPNMX-IQX
                   DIPY=YB+LDPNMY-IQY
a61 5
                   CUBE(I,J)=CUBE(I,J)
c     1                 +(1.0-DIPX)*(1.0-DIPY)*B(MAP(IQX,IQY))
c     2                 +     DIPX *(1.0-DIPY)*B(MAP(IQX+1,IQY))
c     3                 +(1.0-DIPX)*     DIPY *B(MAP(IQX,IQY+1))
c     4                 +     DIPX *     DIPY *B(MAP(IQX+1,IQY+1))
d63 13
a75 5
     1              +B(IQX,IQY,LP)+DIPY*(B(IQX,IQY+1,LP)-B(IQX,IQY,LP))
     2              +DIPX*(B(IQX+1,IQY,LP)-B(IQX,IQY,LP)
     3              +DIPY*(B(IQX+1,IQY+1,LP)-B(IQX+1,IQY,LP)
     4              -B(IQX,IQY+1,LP)+B(IQX,IQY,LP)))
C
a77 3
c 19              CONTINUE
C101            XB=XB+DM(1,LP)
C19             YB=YB+DM(4,LP)
a78 1
c18           CONTINUE
d80 3
a82 3
c 17        CONTINUE
          DO    J=1,NY3D
             CALL  WRTLIN(IOPIC,CUBE(1,J),NX3D,J+(K-1)*NY3D)
a84 1
c1       CONTINUE
@


1.8
log
@a
@
text
@d1 24
@


1.7
log
@OpenMP
@
text
@d7 1
a7 1
CNO_SAVE
@


1.6
log
@*** empty log message ***
@
text
@d22 1
a22 1
c$doacross local(i,j,iqx,iqy,xb,yb,xbb,ybb,dipx,dipy)
@


1.5
log
@*** empty log message ***
@
text
@d8 1
a8 1
        DO  1  K=1,NZC
d10 1
a10 1
           DO  12  J=1,NY3D
d12 3
a14 2
                 DO  11  I=1,NX3D
11               CUBE(I,J)=0.0
d18 2
a19 1
12         CONTINUE
d21 1
a21 1
           DO  17  LP=1,LPRJ
d23 1
a23 1
              DO  18  J=1,NY3D
d26 1
a26 1
                 DO  19  I=1,NX3D
d49 2
a50 1
19              CONTINUE
d53 4
a56 2
18           CONTINUE
17        CONTINUE
d60 2
a61 1
1       CONTINUE
@


1.4
log
@removed unused variables
@
text
@d1 1
a1 2

	SUBROUTINE  BPCM(B,NSAM,NROW,LPRJ,CUBE,NX3D,NY3D,NZC,DM,
d3 4
a6 5

	DIMENSION         B(NSAM,NROW,LPRJ),CUBE(NX3D,NY3D)
 	DIMENSION         DM(9,LPRJ)
	COMMON /PAR/      LDPX,LDPY,LDPZ,LDPNMX,LDPNMY,NZ1
	LOGICAL           FIRST
d8 9
a16 10

	DO  1  K=1,NZC
	   KZ=K-1+NZ1
	   DO  12  J=1,NY3D
	      IF(FIRST)  THEN
	         DO  11  I=1,NX3D
11	         CUBE(I,J)=0.0
	      ELSE
	         CALL  REDLIN(IOPIC,CUBE(1,J),NX3D,J+(K-1)*NY3D)
	      ENDIF
d19 1
a19 2
	   DO  17  LP=1,LPRJ

d21 4
a24 4
	      DO  18  J=1,NY3D
	     XBB=(1-LDPX)*DM(1,LP)+(J-LDPY)*DM(2,LP)+(KZ-LDPZ)*DM(3,LP)
	     YBB=(1-LDPX)*DM(4,LP)+(J-LDPY)*DM(5,LP)+(KZ-LDPZ)*DM(6,LP)
	         DO  19  I=1,NX3D
d26 8
a33 8
	           XB=(I-1)*DM(1,LP)+XBB
	           IQX=IFIX(XB+FLOAT(LDPNMX))
	           IF (IQX.LT.1 .OR. IQX.GE.NSAM)  GOTO  101
	           YB=(I-1)*DM(4,LP)+YBB
	           IQY=IFIX(YB+FLOAT(LDPNMY))
	           IF (IQY.LT.1 .OR. IQY.GE.NROW)  GOTO  101
	           DIPX=XB+LDPNMX-IQX
	           DIPY=YB+LDPNMY-IQY
d35 1
a35 1
	           CUBE(I,J)=CUBE(I,J)
d41 2
a42 2
     1	            +B(IQX,IQY,LP)+DIPY*(B(IQX,IQY+1,LP)-B(IQX,IQY,LP))
     2	            +DIPX*(B(IQX+1,IQY,LP)-B(IQX,IQY,LP)
d44 1
a44 1
     4		    -B(IQX,IQY+1,LP)+B(IQX,IQY,LP)))
d48 5
a52 5
C101	        XB=XB+DM(1,LP)
C19	        YB=YB+DM(4,LP)
18	     CONTINUE
17	  CONTINUE
	  DO    J=1,NY3D
d55 2
a56 3
1	CONTINUE
        RETURN
	END
@


1.3
log
@cosmetic and 72 col line enforced
@
text
@a5 1
	DOUBLE PRECISION  CPHI,SPHI,CTHE,STHE,CPSI,SPSI
d32 1
a32 1
	           IF(IQX.LT.1 .OR. IQX.GE.NSAM)  GOTO  101
d35 1
a35 1
	           IF(IQY.LT.1 .OR. IQY.GE.NROW)  GOTO  101
d56 3
a58 2
	  DO  15  J=1,NY3D
15	  CALL  WRTLIN(IOPIC,CUBE(1,J),NX3D,J+(K-1)*NY3D)
@


1.2
log
@nosace mp
@
text
@d1 5
a5 2
	SUBROUTINE  BPCM(B,NSAM,NROW,LPRJ,CUBE,NX3D,NY3D,NZC,DM,IOPIC,FIRST)
	DIMENSION  B(NSAM,NROW,LPRJ),CUBE(NX3D,NY3D)
d7 3
a9 3
 	DIMENSION  DM(9,LPRJ)
	COMMON /PAR/  LDPX,LDPY,LDPZ,LDPNMX,LDPNMY,NZ1
	LOGICAL  FIRST
d11 1
a11 1
C
d13 12
a24 12
	KZ=K-1+NZ1
	DO  12  J=1,NY3D
	IF(FIRST)  THEN
	DO  11  I=1,NX3D
11	CUBE(I,J)=0.0
	ELSE
	CALL  REDLIN(IOPIC,CUBE(1,J),NX3D,J+(K-1)*NY3D)
	ENDIF
12      CONTINUE
C
	DO  17  LP=1,LPRJ
C
d26 4
a29 4
	DO  18  J=1,NY3D
	XBB=(1-LDPX)*DM(1,LP)+(J-LDPY)*DM(2,LP)+(KZ-LDPZ)*DM(3,LP)
	YBB=(1-LDPX)*DM(4,LP)+(J-LDPY)*DM(5,LP)+(KZ-LDPZ)*DM(6,LP)
	DO  19  I=1,NX3D
d31 8
a38 8
	XB=(I-1)*DM(1,LP)+XBB
	IQX=IFIX(XB+FLOAT(LDPNMX))
	IF(IQX.LT.1 .OR. IQX.GE.NSAM)  GOTO  101
	YB=(I-1)*DM(4,LP)+YBB
	IQY=IFIX(YB+FLOAT(LDPNMY))
	IF(IQY.LT.1 .OR. IQY.GE.NROW)  GOTO  101
	DIPX=XB+LDPNMX-IQX
	DIPY=YB+LDPNMY-IQY
d40 1
a40 1
	CUBE(I,J)=CUBE(I,J)
d46 4
a49 4
     1	   +B(IQX,IQY,LP)+DIPY*(B(IQX,IQY+1,LP)-B(IQX,IQY,LP))
     2	   +DIPX*(B(IQX+1,IQY,LP)-B(IQX,IQY,LP)
     3		+DIPY*(B(IQX+1,IQY+1,LP)-B(IQX+1,IQY,LP)
     4		-B(IQX,IQY+1,LP)+B(IQX,IQY,LP)))
d51 8
a58 8
101     CONTINUE
19      CONTINUE
C101	XB=XB+DM(1,LP)
C19	YB=YB+DM(4,LP)
18	CONTINUE
17	CONTINUE
	DO  15  J=1,NY3D
15	CALL  WRTLIN(IOPIC,CUBE(1,J),NX3D,J+(K-1)*NY3D)
d60 1
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
	DIMENSION  B(NSAM,NROW,LPRJ),CUBE(NX3D)
d7 1
d11 1
a11 1
	DO  1  J=1,NY3D
d14 1
a14 1
11	CUBE(I)=0.0
d16 1
a16 1
	CALL  REDLIN(IOPIC,CUBE,NX3D,J+(K-1)*NY3D)
d18 1
a20 2
	XB=(1-LDPX)*DM(1,LP)+(J-LDPY)*DM(2,LP)+(KZ-LDPZ)*DM(3,LP)
	YB=(1-LDPX)*DM(4,LP)+(J-LDPY)*DM(5,LP)+(KZ-LDPZ)*DM(6,LP)
d22 4
d28 1
d31 1
d37 1
a37 1
	CUBE(I)=CUBE(I)
d48 5
a52 2
101	XB=XB+DM(1,LP)
19	YB=YB+DM(4,LP)
d54 2
a55 1
	CALL  WRTLIN(IOPIC,CUBE,NX3D,J+(K-1)*NY3D)
@
