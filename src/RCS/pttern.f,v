head	1.22;
access;
symbols
	pre_getangas:1.16
	GPL2010:1.16
	pre_GPL2010:1.15
	pre_var_equation:1.15
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.11
	x:1.11
	v13-00:1.11
	pre_GPL:1.9
	prec_CA:1.6
	noindx:1.6
	Bproc:1.6
	oct21:1.5
	last77:1.5;
locks; strict;
comment	@c @;


1.22
date	2014.02.18.19.50.49;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2014.01.12.19.15.53;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2012.03.22.14.24.17;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2012.03.07.14.14.38;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2012.02.15.20.20.54;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2012.01.25.16.47.30;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.24.13.26.34;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2008.11.06.16.39.40;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2008.11.06.16.34.01;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2008.10.30.13.36.08;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.12.14.17.58.23;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.20.37.14;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2005.10.17.18.27.40;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.08.08.15.20.53;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.03.12.21.02;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2004.05.03.12.16.05;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.11.10.23.11.15;	author yuchen;	state Exp;
branches;
next	1.5;

1.5
date	99.02.04.18.33.56;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	98.07.16.14.58.35;	author pawel;	state Exp;
branches;
next	1.3;

1.3
date	97.04.21.19.39.56;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	97.04.21.19.31.23;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	94.05.13.12.51.44;	author leith;	state Exp;
branches;
next	;


desc
@copied from USER2:[PSIDER.CMSREF] on 11 May 1994
@


1.22
log
@mline2 used for aliasing
@
text
@C ++********************************************************************
C PTTERN
C          CHANGED RECTANGLE TO BOX             AUG 2005 ARDEAN LEITH
C          'S' BUG FOR NEW IMAGE FIXED          OCT 2008 ARDEAN LEITH
C          MENU                                 JAN 2012 ARDEAN LEITH
C          LINE INTENSITY                       JAN 2014 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2014  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@wadsworth.org                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C PTTERN(LUN,NX,NY,FMAXT,FMINT)
C
C PURPOSE:  TO CREATE PATTERNS FOR USE AS MASKS  0....1 IF NEW FILE
C
C PARAMETERS:  LUN           LOGICAL UNIT NUMBER
C	       NX,NY         FILE DIMENSIONS
C              FMAXT,FMINT   FILE MIN & MAX
C
C **********************************************************************

	SUBROUTINE PTTERN(LUN,NX,NY,NZ,FMAXT,FMINT)

        IMPLICIT NONE
        INCLUDE 'CMBLOCK.INC'

        INTEGER             :: LUN,NX,NY,NZ
	REAL, INTENT(INOUT) :: FMAXT,FMINT

	REAL                :: BUF(NY)
	REAL                :: RP
        INTEGER             :: JMP,IY,IDIM,I,IRTFLG,NCHAR,NF

        CHARACTER(LEN=3)    :: CODE
        CHARACTER(LEN=1)    :: YN
        CHARACTER(LEN=1)    :: NULL = CHAR(0)

	IF (COPT == 'I' .OR. VERBOSE) WRITE(NOUT,100)
 100    FORMAT(
     &      ' .MENU: P   -- POINT'/
     &      '        L   -- LINE'/
     &      '        C   -- FILLED   CIRCLE',/,
     &      '        CL  -- OUTLINED CIRCLE',/,
     &      '        CJ  -- CIRCLE FROM 3 POINTS',/,
     &      '        T   -- FILLED   TRIANGLE',/,
     &      '        TL  -- OUTLINED TRIANGLE'/
     &      '        B   -- FILLED   BOX',/,
     &      '        BL  -- OUTLINED BOX',//)

1	CODE(1:3) = '   '
	CALL RDPRMC(CODE,NCHAR,.TRUE.,
     &              'PATTERN (P,L,C,T,B,etc)',
     &              NULL,IRTFLG)

	RP = FMAXT                     ! FILL VALUE
        IF (FMINT == FMAXT) RP = 1.0   ! NEW IMAGE FILL VALUE

c       write(6,*) 'fmin,fmax:',fmin,fmax

        IF (INDEX(CODE,'S') > 0) THEN
C          FILL DENSITY IS FMINT, BACKGROUND IS FMAXT

           IF (FMINT  ==   FMAXT) THEN
C             RECREATE NEW IMAGE WITH BACKGROUND DENSITY = 1.0 FIRST
              BUF = 1.0   ! INITIALIZE WHOLE ARRAY
              DO IY = 1,NY*NZ
	         CALL WRTLIN(LUN,BUF,NX,IY)
              ENDDO
              FMINT = 0.0
           ENDIF
           RP = FMINT      ! FILL VALUE
        ENDIF
c       write(6,*) ' fmin,fmax,rp:',fmin,fmax,rp

	JMP  = 0
	IDIM = 2

	DO I=1,3
          IF (CODE(I:I) ==  'P') JMP  = 1   ! POINT
          IF (CODE(I:I) ==  'C') JMP  = 3   ! CIRCLE
          IF (CODE(I:I) ==  'T') JMP  = 4   ! TRIANGLE
          IF (CODE(I:I) ==  'R') JMP  = 5   ! OLD BOX
          IF (CODE(I:I) ==  'B') JMP  = 6   ! BOX

          IF (CODE(I:I) ==  'L') IDIM = 1   ! LINE
          IF (CODE(I:I) ==  'J') IDIM = -1  ! UNDOCUMENTED 3 PT CIR.
        ENDDO

C       DEFAULT IS LINE!!
	IF (IDIM == 1 .AND. JMP == 0) JMP = 2  ! LINE

        SELECT CASE(JMP)

        CASE(1)
C          POINT
 	   CALL MPOINT(LUN,NX,NY,RP)

        CASE(2)
C          LINE
	   IF (NZ  ==   1)  THEN
              CALL MLINE2(LUN,NX,NY,RP,IRTFLG)
	   ELSE
	      CALL MLINE3(LUN,NX,NY,NZ,RP)
	   ENDIF

        CASE(3)
C          CIRCLE
           CALL MCIRCL(LUN,NX,NY,RP,IDIM)

        CASE(4)
C          TRIANGLE
           CALL MTRIAN(LUN,NX,NY,RP,IDIM)

        CASE(5)
C          RECTANGLE  (RELATIVE ADDRESSSING OBSOLETE AUG 2005
           CALL MRECTL(LUN,NX,NY,RP,IDIM)

        CASE(6)
C          BOX
           CALL MBOX(LUN,NX,NY,RP,IDIM)

        CASE  DEFAULT 
C          ERROR HANDLING,UNKNOWN OPTION
           CALL ERRT(101,'UNKNOWN PATTERN',NF)
        END SELECT

        CALL RDPRMC(YN,NCHAR,.TRUE.,'CONTINUE? (Y/N)',NULL,IRTFLG)
	IF (YN .NE. 'N') GOTO 1

	END


C       ------------------- MBOX -------------------------------------

	SUBROUTINE MBOX(LUN,NX,NY,RP,IDIM)

        REAL, DIMENSION(NX) :: BUF
	
	CALL RDPRMI(IX,IY,NOT_USED,
     &      'COORDINATES OF UPPER  LEFT CORNER')
	IF (IX <= 0 .OR. IY <= 0) THEN
           CALL ERRT(101,'INCONSISTENT INPUT PARAMETERS',NF)
	   RETURN
        ENDIF

	CALL RDPRMI(IXR,IYR,NOT_USED,
     &      'COORDINATES OF LOWER RIGHT CORNER')
	IF (IXR <= 0 .OR. IYR <= 0) THEN
           CALL ERRT(101,'INCONSISTENT INPUT PARAMETERS',NF)
	   RETURN
        ENDIF

	IYSTRT = MAX(1,IY)
	IYEND  = MIN(NY,IYR)
	IF (IYSTRT > IYEND .OR. IYEND <  IYSTRT) THEN
           CALL ERRT(101,'INCONSISTENT INPUT PARAMETERS',NF)
	   RETURN
        ENDIF

	IXSTRT = MAX(1,IX)
	IXEND  = MIN(NX,IXR)
	IF (IXSTRT > IXEND .OR. IXEND <  IXSTRT) THEN
           CALL ERRT(101,'INCONSISTENT INPUT PARAMETERS',NF)
	   RETURN
        ENDIF

	DO I=IYSTRT,IYEND
	   CALL REDLIN(LUN,BUF,NX,I)
	   IF ((IDIM  ==   2) .OR.
     &         (I   == IYSTRT .AND. IYSTRT == IY) .OR.
     &         (I   == IYEND  .AND. IYEND  == IYR)) THEN
              DO J=IXSTRT,IXEND
                 BUF(J) = RP
              ENDDO
           ELSE 
	      IF (IX   == IXSTRT) BUF(IX)  = RP
	      IF (IXR  == IXEND)  BUF(IXR) = RP
	   ENDIF

 	   CALL WRTLIN(LUN,BUF,NX,I)
        ENDDO

	END
@


1.21
log
@enter
@
text
@d6 1
d12 1
a12 1
C=* Copyright 1985-2012  Health Research Inc.,                         *
d76 1
a76 1
c        write(6,*) 'fmin,fmax:',fmin,fmax
d107 1
a107 1
C       DEFAULT IS LINE
d119 1
a119 1
	      CALL MLINE(LUN,NX,NY,RP)
@


1.20
log
@IF (COPT == 'I' .OR. VERBOSE for menu, rmoved debug output
@
text
@d69 1
a69 1
     &              'ENTER PATTERN (P,L,C,T,B,etc)',
d157 1
a157 1
     &      'ENTER COORDINATES OF UPPER  LEFT CORNER')
d164 1
a164 1
     &      'ENTER COORDINATES OF LOWER RIGHT CORNER')
@


1.19
log
@*** empty log message ***
@
text
@d55 1
a55 1
	WRITE(NOUT,100)
a66 1

d68 2
a69 1
	CALL RDPRMC(CODE,NCHAR,.TRUE.,'ENTER PATTERN (P,L,C,T,B,etc)',
d72 1
a72 1
	RP   = FMAXT                   ! FILL VALUE
a104 2

        write(6,*) ' jmp,idim:',jmp,idim,rp
@


1.18
log
@menu changed
@
text
@d106 2
@


1.17
log
@added menu, updated NX,
@
text
@d56 2
a57 6
 100  FORMAT(
     &      ' .MENU: B   -- FILLED BOX'/
     &      '        BL  -- BOX'/
     &      '        C   -- FILLED CIRCLE'/
     &      '        CL  -- CIRCLE'/
     &      '        CJ  -- CIRCLE FROM 3 POINTS'/
d59 8
a66 3
     &      '        P   -- POINT'/
     &      '        T   -- FILLED TRIANGLE'/
     &      '        TL  -- TRIANGLE'//)
d69 1
a69 1
	CALL RDPRMC(CODE,NCHAR,.TRUE.,'ENTER PATTERN (B,C,L,P,T,etc)',
@


1.16
log
@GPL_2010
@
text
@d5 1
d11 1
a11 1
C=* Copyright 1985-2010  Health Research Inc.,                         *
d29 1
a29 1
C PTTERN(LUN,NSAM,NROW,FMAXT,FMINT)
d34 1
a34 1
C	       NSAM,NROW     FILE DIMENSIONS
d37 1
a37 1
C *********************************************************************
d39 1
a39 1
	SUBROUTINE PTTERN(LUN,NSAM,NROW,NSLICE,FMAXT,FMINT)
d41 1
d44 7
d52 2
a53 3
        CHARACTER(LEN=1)    :: CDUM,YN
	REAL                :: BUF(NROW)
	REAL, INTENT(INOUT) :: FMAXT,FMINT
d55 11
a65 1
        WRITE(NOUT,*) ' CREATE: POINT, LINE, CIRCLE, TRIANGLE, OR BOX'
d68 2
a69 2
	CALL RDPRMC(CODE,NCHAR,.TRUE., 'ENTER PATTERN TYPE (P,L,C,T,B)',
     &              CDUM,IRTFLG)
d71 2
a72 2
	RP   = FMAXT                    ! FILL VALUE
        IF (FMINT .EQ. FMAXT) RP = 1.0   ! NEW IMAGE FILL VALUE
d76 1
a76 1
        IF (INDEX(CODE,'S') .GT. 0) THEN
d78 2
a79 1
           IF (FMINT .EQ. FMAXT) THEN
d82 2
a83 2
              DO IY = 1,NROW*NSLICE
	         CALL WRTLIN(LUN,BUF,NSAM,IY)
d93 1
d95 8
a102 7
          IF (CODE(I:I) .EQ. 'L') IDIM = 1
          IF (CODE(I:I) .EQ. 'J') IDIM = -1
          IF (CODE(I:I) .EQ. 'P') JMP  = 1
          IF (CODE(I:I) .EQ. 'C') JMP  = 3
          IF (CODE(I:I) .EQ. 'T') JMP  = 4
          IF (CODE(I:I) .EQ. 'R') JMP  = 5
          IF (CODE(I:I) .EQ. 'B') JMP  = 6
d105 2
a106 1
	IF (IDIM .EQ. 1 .AND. JMP .EQ. 0) JMP = 2
d112 1
a112 1
 	   CALL MPOINT(LUN,NSAM,NROW,RP)
d116 2
a117 2
	   IF (NSLICE .EQ. 1)  THEN
	      CALL MLINE(LUN,NSAM,NROW,RP)
d119 1
a119 1
	      CALL MLINE3(LUN,NSAM,NROW,NSLICE,RP)
d124 1
a124 1
           CALL MCIRCL(LUN,NSAM,NROW,RP,IDIM)
d128 1
a128 1
           CALL MTRIAN(LUN,NSAM,NROW,RP,IDIM)
d132 1
a132 1
           CALL MRECTL(LUN,NSAM,NROW,RP,IDIM)
d136 1
a136 1
           CALL MBOX(LUN,NSAM,NROW,RP,IDIM)
d143 1
a143 1
        CALL RDPRMC(YN,NCHAR,.TRUE.,'CONTINUE? (Y/N)',CDUM,IRTFLG)
d151 1
a151 1
	SUBROUTINE MBOX(LUN,NSAM,NROW,RP,IDIM)
d153 1
a153 1
        REAL, DIMENSION(NSAM) :: BUF
d157 1
a157 1
	IF (IX .LE. 0 .OR. IY .LE. 0) THEN
d164 1
a164 1
	IF (IXR .LE. 0 .OR. IYR .LE. 0) THEN
d170 2
a171 2
	IYEND  = MIN(NROW,IYR)
	IF (IYSTRT .GT. IYEND .OR. IYEND .LT. IYSTRT) THEN
d177 2
a178 2
	IXEND  = MIN(NSAM,IXR)
	IF (IXSTRT .GT. IXEND .OR. IXEND .LT. IXSTRT) THEN
d184 4
a187 4
	   CALL REDLIN(LUN,BUF,NSAM,I)
	   IF ((IDIM .EQ. 2) .OR.
     &         (I  .EQ. IYSTRT .AND. IYSTRT.EQ. IY) .OR.
     &         (I  .EQ. IYEND  .AND. IYEND .EQ. IYR)) THEN
d192 2
a193 2
	      IF (IX  .EQ. IXSTRT) BUF(IX)  = RP
	      IF (IXR .EQ. IXEND)  BUF(IXR) = RP
d196 1
a196 1
 	   CALL WRTLIN(LUN,BUF,NSAM,I)
@


1.15
log
@fimnt,fmast do not collide cmblock
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2008  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.14
log
@*** empty log message ***
@
text
@d32 1
a32 1
C PTTERN(LUN,NSAM,NROW,FMAX,FMIN)
d36 3
a38 3
C PARAMETERS:  LUN :	LOGICAL UNIT NUMBER
C	       NSAM,NROW : FILE DIMENSIONS
C              FMAX,FMIN : FILE MIN & MAX
d42 1
a42 1
	SUBROUTINE PTTERN(LUN,NSAM,NROW,NSLICE,FMAX,FMIN)
d46 4
a49 3
        CHARACTER(LEN=3) :: CODE
        CHARACTER(LEN=1) :: CDUM,YN
	REAL             :: BUF(NROW)
d57 2
a58 2
	RP   = FMAX                    ! FILL VALUE
        IF (FMIN .EQ. FMAX) RP = 1.0   ! NEW IMAGE FILL VALUE
d63 2
a64 2
C          FILL DENSITY IS FMIN, BACKGROUND IS FMAX
           IF (FMIN .EQ. FMAX) THEN
d70 1
a70 1
              FMIN = 0.0
d72 1
a72 1
           RP = FMIN      ! FILL VALUE
@


1.13
log
@S bug fixed, cosmetic
@
text
@d44 2
@


1.12
log
@bad ixstart
@
text
@d4 2
a5 1
C 
d8 1
a8 1
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d30 1
a30 1
C *********************************************************************C **********************************************************************
d34 1
a34 1
C PURPOSE:  TO CREATE PATTERNS
d40 1
a40 1
C **********************************************************************
d44 5
a48 2
        CHARACTER * 3 CODE
        CHARACTER     NULL,YN
d50 3
a52 1
        NULL = CHAR(0)
d54 2
d57 1
a57 1
        IF (FMAX .EQ. FMIN) FMAX = FMIN + 2
d59 13
a71 3
1	CODE(1:3) = '   '
	CALL RDPRMC(CODE,NCHAR,.TRUE., 'ENTER PATTERN TYPE (P,L,C,T,B)',
     &              NULL,IRTFLG)
a73 1
	RP   = FMAX
a74 1

a75 1
          IF (CODE(I:I) .EQ. 'S') RP   = FMIN
d122 1
a122 1
        CALL RDPRMC(YN,NCHAR,.TRUE.,'CONTINUE? (Y/N)',NULL,IRTFLG)
d128 1
a128 1

d136 4
a139 1
	IF (IX .LE. 0 .OR. IY .LE. 0) GOTO 9000
d143 4
a146 1
	IF (IXR .LE. 0 .OR. IYR .LE. 0) GOTO 9000
d151 2
a152 2
c           write(6,*) iystrt,iyend
           GOTO 9000
d158 2
a159 2
c           write(6,*) ixstrt, ixend
           GOTO 9000
a176 3
	RETURN

9000	CALL ERRT(14,'PTTERN',NF)
a177 1
	RETURN
@


1.11
log
@GPL License fixed
@
text
@d129 4
a132 1
	IF (IYSTRT .GT. IYEND .OR. IYEND .LT. IYSTART) GOTO 9000
d136 4
a139 1
	IF (IXSTRT .GT. IXEND .OR. IXEND .LT. IXSTART) GOTO 9000
@


1.10
log
@HRI GPL License used
@
text
@a5 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d9 1
a9 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a28 6

C * COPYRIGHT (C)1985, 2005. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a39 1
C***************************************************************************
@


1.9
log
@box instead of rectangle
@
text
@d7 24
d46 1
@


1.8
log
@restored s meaning
@
text
@d2 3
a4 8
C
C **********************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK      *
C *  COPYRIGHT (C)1985, 1996 HEALTH RESEARCH INCORPORATED, ALBANY, NY. *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HEALTH            *
C * RESEARCH INC. AND ARE NOT TO BE DISCLOSED TO OTHERS OR USED        *
C * FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF       *
C * HEALTH RESEARCH INC.                                               *
d6 7
a25 1
 
a30 1
1	CONTINUE
a32 1
        CODE(1:3)='   '
d34 2
a35 1
	CALL RDPRMC(CODE,NCHAR,.TRUE., 'ENTER CODE (P,L,C,T,R)',
d50 1
a53 1
	IF (JMP  .EQ. 0) GOTO 9001
d55 37
a91 1
	GOTO (101,102,103,104,105) ,JMP
d93 1
a93 3
C       POINT
101	CALL MPOINT(LUN,NSAM,NROW,RP)
	GOTO 9000
a94 7
C       LINE
102	IF(NSLICE.EQ.1)  THEN
	CALL MLINE(LUN,NSAM,NROW,RP)
	ELSE
	CALL MLINE3(LUN,NSAM,NROW,NSLICE,RP)
	ENDIF
	GOTO 9000
a95 3
C       CIRCLE
103	CALL MCIRCL(LUN,NSAM,NROW,RP,IDIM)
	GOTO 9000
a96 3
C       TRIANGLE
104	CALL MTRIAN(LUN,NSAM,NROW,RP,IDIM)
	GOTO 9000
d98 1
a98 3
C       RECTANGLE
105	CALL MRECTL(LUN,NSAM,NROW,RP,IDIM)
	GOTO 9000
d100 30
d131 3
a133 2
C       ERROR HANDLING,UNKNOWN OPTION
9001	CALL ERRT(23,'PTTERN',NF)
d135 1
a135 2
9000	CALL RDPRMC(YN,NCHAR,.TRUE.,'CONTINUE? (Y/N)',NULL,IRTFLG)
	IF (YN .NE. 'N') GOTO 1
d137 1
@


1.7
log
@no suc option 's'
@
text
@d43 1
@


1.6
log
@a
@
text
@d35 1
a35 1
	CALL RDPRMC(CODE,NCHAR,.TRUE., 'ENTER CODE (P,L,C,T,R,S)',
a42 1
          IF (CODE(I:I) .EQ. 'S') RP   = FMIN
@


1.5
log
@CNO_SAVE
@
text
@d24 1
a24 1
CNO_SAVE 
@


1.4
log
@*** empty log message ***
@
text
@d24 1
@


1.3
log
@bad continue question
@
text
@d22 1
a22 1
	SUBROUTINE PTTERN(LUN,NSAM,NROW,FMAX,FMIN)
d61 5
a65 1
102	CALL MLINE(LUN,NSAM,NROW,RP)
a86 1
	RETURN
@


1.2
log
@changed prompts
@
text
@d25 1
a25 1
        CHARACTER     NULL
d80 2
a81 2
9000	CALL RDPRMC(B,NCHAR,.TRUE.,'CONTINUE? (Y/N)',NULL,IRTFLG)
	IF (B .NE. 'N') GOTO 1
@


1.1
log
@Initial revision
@
text
@d1 1
d3 16
a18 1
C SUBROUTINE PTTERN TO CREATE PATTERNS
a19 7
C
C	CALL PTTERN(LUN,NSAM,NROW)
C
C	LUN :	LOGICAL UNIT NUMBER
C
C	NSAM,NROW : FILE DIMENSIONS
C
d25 1
a25 2
        CHARACTER     B,OPTA,OPTC,OPTF,OPTL,OPTP,OPTQ,OPTR,OPTS,OPTT
        CHARACTER     OPTJ,NULL
d27 1
a27 2
	DATA OPTA/'A'/,OPTC/'C'/,OPTF/'F'/,OPTL/'L'/,OPTP/'P'/,OPTQ/'Q'/
	DATA OPTR/'R'/,OPTS/'S'/,OPTT/'T'/,OPTJ/'J'/
a28 2
        NULL=CHAR(0)

d31 1
a31 1
        IF(FMAX.EQ.FMIN) FMAX=FMIN+2
d34 2
a35 18
	CALL RDPRMC(CODE,NCHAR,.TRUE.,
     &      'ENTER CODE (P,L,C,T,R,S)$',NULL,IRTFLG)

	JMP=0
	RP=FMAX
	IDIM=2

	DO 3 I=1,3
          B = CODE(I:I)
          IF (B.EQ.OPTS) RP   = FMIN
          IF (B.EQ.OPTL) IDIM = 1
          IF (B.EQ.OPTJ) IDIM = -1
          IF (B.EQ.OPTP) JMP  = 1
          IF (B.EQ.OPTC) JMP  = 3
          IF (B.EQ.OPTT) JMP  = 4
          IF (B.EQ.OPTR) JMP  = 5
          IF (B.EQ.OPTQ) JMP  = 6
3	CONTINUE
d37 13
a49 2
	IF(IDIM.EQ.1 .AND. JMP.EQ.0) JMP = 2
	IF(JMP.EQ.0) GOTO 9001
d51 2
a52 1
	GOTO (101,102,103,104,105,106) ,JMP
d54 1
a54 1
C POINT
d56 1
d60 1
a60 2
C LINE

d64 1
a64 2
C CIRCLE

d68 1
a68 2
C TRIANGLE

d72 1
a72 2
C RECTANGLE

a75 7
C QUADRANGLE

106	CONTINUE
C106	CALL MQUADR(LUN,NSAM,NROW,RP,IDIM)
	GOTO 9000

C ERROR HANDLING
d77 2
a78 2
9001	IER=14
	CALL ERRT(IER,'PTTERN',NF)
d80 2
a81 2
9000	CALL RDPRMC(B,NCHAR,.TRUE.,'CONTINUE ? (Y/N)$',NULL,IRTFLG)
	IF (B .EQ. 'Y') GOTO 1
@
