head	1.19;
access;
symbols
	pre_mrcs:1.19
	healthdept_2018:1.19
	pre_getangas:1.18
	GPL2010:1.17
	pre_GPL2010:1.16
	pre_var_equation:1.15
	pre_fftwrings:1.15
	pre_opfiles:1.14
	src:1.14
	best-code:1.14
	x-named-regs:1.14
	x:1.14
	v13-00:1.14
	pre_GPL:1.12
	prec_CA:1.12
	noindx:1.11
	Bproc:1.7
	oct21:1.4
	last77:1.4;
locks; strict;
comment	@c @;


1.19
date	2018.10.03.14.51.08;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2010.12.02.14.23.08;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2010.06.24.13.27.13;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2009.09.25.13.38.56;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.07.13.10.08;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.17.20.50.23;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.17.18.40.47;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.20.14.58.20;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2002.11.21.16.47.59;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2002.11.20.15.19.19;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2002.11.19.16.06.54;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2002.10.31.19.23.30;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.06.19.53.34;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.12.14.17.54.29;	author pawel;	state Exp;
branches;
next	1.5;

1.5
date	99.11.10.23.11.24;	author yuchen;	state Exp;
branches;
next	1.4;

1.4
date	98.09.11.15.44.13;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.10.02.15.04.24;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	95.09.13.15.01.17;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	95.09.12.21.11.04;	author mladjadj;	state Exp;
branches;
next	;


desc
@EC group of commands
@


1.19
log
@email_health_dept
@
text
@
C **********************************************************************
C
C   UTIL6.F                                  AUTHOR: ArDean Leith
C                           ADDED SURFFIT      MAR  00 ARDEAN LEITH
C                           'LA' ADDED         OCT  02 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C   UTIL6(MAXDIM)
C
C   PURPOSE: HANDLES OPERATIONS FOR EXTRACT CLUSTERS (EC) AND IA
C	     THEY DEAL WITH CLUSTER CONNECTIVITY VOLUMES. AND SO
C            WHICH ANALYZES SURFACE FITTING BETWEEN TWO VOLUMES.
C
C--*********************************************************************
             
        SUBROUTINE UTIL6(MAXDIM)
		                                                                                        
        INCLUDE 'CMBLOCK.INC'
	INCLUDE 'CMLIMIT.INC'

        CHARACTER(LEN=MAXNAM)::    FILNAM
        CHARACTER(LEN=1)     ::    NULL
        LOGICAL              ::    BOTTEM

C	MAXIMUM NUMBER OF REGISTERS PER KEY IN 'UD IC'
	PARAMETER (MAXREG=7)
    
C	MAXIMUM NUMBER OF KEYS IN 'UD IC'
	PARAMETER (MAXKEY=4000)
 

        MAXIM1 = 0
        MAXIM2 = 0
        MAXIM3 = 0
	LUN1   = 8
	LUN2   = 12
	LUN3   = 7

        IF (FCHAR(1:2) .EQ. 'IA')  THEN
C          SURFACE AREA FROM VOLUME ------------------------------- IA

           CALL SURFAREA(MAXDIM)

	ELSEIF (FCHAR(1:2) .EQ. 'EC') THEN

	 IF (FCHAR(4:8) .EQ. 'CLOSE') THEN
C          EXTRACT CLUSTERS FROM VOLUME ---------------------- EC CLOSE

            CALL MAPDIST(.TRUE.,.TRUE.,IRTFLG)

         ELSEIF (FCHAR(4:5) .EQ. 'SE') THEN
C          EXTRACT CLUSTERS FROM VOLUME ------------------------- EC SE

           CALL MAPDOC(IRTFLG)

         ELSEIF (FCHAR(4:5) .EQ. 'ST') THEN
C          EXTRACT CLUSTERS FROM VOLUME ------------------------- EC ST

           CALL IMSTAT(IRTFLG)

         ELSEIF (FCHAR(4:5) .EQ. 'FI') THEN
C          EXTRACT CLUSTERS FROM VOLUME ------------------------- EC FI

           CALL MAPFILT(IRTFLG)

         ELSEIF (FCHAR(4:5) .EQ. 'CL')  THEN
C          EXTRACT CLUSTERS FROM VOLUME ------------------------- EC CL
           CALL CONINT(IRTFLG)
	 ENDIF

	ELSEIF (FCHAR(1:2) .EQ. 'FV') THEN
C          FIND THRESHOLD RESULTING IN A SPECIFIED VOLUME --------- FV
           CALL  FV

	ELSEIF (FCHAR(1:2) .EQ. 'SO' .AND. FCHAR(4:4) .EQ. 'C') THEN
C          FIND SURFACE DIFFERENCE ------------------------------ SO C
           CALL  SURFCOMP()

	ELSEIF (FCHAR(1:2) .EQ. 'SO') THEN
C          FIND SURFACE DIFFERENCE -------------------------------- SO
           CALL  SURFFIT()

	ELSEIF (FCHAR(1:2) .EQ. 'LA') THEN
C          LABEL SPIDER IMAGE WITH A LABEL ------------------------- LA

C          OPEN INPUT FILE AND FIND MIN & MAX
           CALL OPFILEC(0,.TRUE.,FILNAM,LUN1,'O',IFORM,
     &             NSAM1,NROW1,NSLICE1, MAXIM1,'INPUT',.FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000

           IF (IMAMI .NE. 1)
     &         CALL NORM3(LUN1,NSAM1,NROW1,NSLICE1,FMAX,FMIN,AV)
           FMIN1 = FMIN
           FMAX1 = FMAX

C          OPEN NEW OUTPUT FILE
C          NROWF IS DEPENDENT ON YOUR FONT IMAGE (KLUDGE)
           NROWF = 36

           BOTTEM = (FCHAR(4:4) .NE. 'L')
           NROW2  = NROW1
           IF (BOTTEM) NROW2 = NROW1 + NROWF

           CALL OPFILEC(0,.TRUE.,FILNAM,LUN3,'U',IFORM,
     &              NSAM1,NROW2,NSLICE1,MAXIM3,'OUTPUT',.FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000

           CALL LABELSPI(LUN1,LUN2,LUN3,NSAM1,NROW1,NSLICE1,
     &                   FMIN1,FMAX1,BOTTEM)

9000       CLOSE(LUN1)
           CLOSE(LUN2)
           CLOSE(LUN3)

        ENDIF

	END

@


1.18
log
@COMMON /COMMUN1/ removed
@
text
@d14 1
a14 1
C=* Email: spider@@wadsworth.org                                        *
@


1.17
log
@GPL_2010
@
text
@a46 2
        COMMON /COMMUN1/LABELSTR,FILNAM

d106 1
a106 1
C          PAD SPIDER IMAGE WITH A LABEL -------------------------- LA
d113 1
a113 1
           IF (IMAMI.NE.1)
d118 1
a118 1
C          OPEN AN OUTPUT FILE
d123 1
a123 1
           NROW2 = NROW1
@


1.16
log
@EC operations rewrite
@
text
@d9 4
a12 3
C=* This file is part of:                                              * 
C=* SPIDER - Modular Image Processing System.   Author: J. FRANK       *
C=* Copyright 1985-2009  Health Research Inc.,                         *
d23 1
a23 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a24 1
C=*                                                                    *
@


1.15
log
@close
@
text
@d5 1
a5 1
C                                ADDED SURFFIT MAR 00 ARDEAN LEITH
d9 5
a13 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d15 1
a15 6
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C=*                                                                    *
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d20 1
a20 1
C=* This program is distributed in the hope that it will be useful,    *
d26 1
a26 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
d73 1
a73 1
            CALL MAPDIST(.FALSE.,.TRUE.,IRTFLG)
d92 1
a92 3

           MAXTAB = MAXREG * MAXKEY * 2
           CALL CONINT(MAXDIM,MAXTAB)
@


1.14
log
@GPL License fixed
@
text
@d74 1
a74 1
	 IF (FCHAR(4:5) .EQ. 'CLOSE') THEN
@


1.13
log
@HRI GPL License used
@
text
@a2 1
C **************************************************************************
a8 1
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.    AUTHOR: J.FRANK       *
d12 1
a12 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a31 6

C * COPYRIGHT (C)1985, 2002. HEALTH RESEARCH INCORPORATED (HRI),       *
C * ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
C * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO HRI AND ARE NOT   *
C * TO BE DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED *
C * WITHOUT WRITTEN APPROVAL OF HRI.                                   *
a40 1
C--*************************************************************************
@


1.12
log
@opfilec
@
text
@d2 1
d11 24
d48 1
@


1.11
log
@la l
@
text
@d100 2
a101 2
           CALL OPFILE(.TRUE.,FILNAM,LUN1,'O',IFORM,NSAM1,NROW1,NSLICE1,
     &                MAXIM1,'INPUT',.FALSE.,IRTFLG)
d117 2
a118 2
           CALL OPFILE(.TRUE.,FILNAM,LUN3,'U',IFORM,NSAM1,NROW2,NSLICE1,
     &                MAXIM3,'OUTPUT',.FALSE.,IRTFLG)
@


1.10
log
@labelspi call changed
@
text
@a30 1
        CHARACTER(LEN=256)   ::    LABELSTR
d32 1
d99 1
a99 1
C          OPEN INPUT FILE 
d109 1
a109 1
C          OPEN AN OUTPUT FILE, APPEND LABEL ALONG BOTTEM OF INPUT IMAGE
a111 1
           NROW2 = NROW1 + NROWF
d113 4
d121 2
a122 8
C          DO NOT UPPERCASE THE INPUT
           IRTFLG = -999
           CALL RDPRMC(LABELSTR,NLET,.TRUE.,'LABEL',NULL,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000

           ISLICE = 1
           CALL LABELSPI(LUN1,LUN2,LUN3,NSAM1,NROW1,ISLICE,FMIN1,FMAX1,
     &                   LABELSTR,NLET)
@


1.9
log
@null was undefined
@
text
@a108 9
C          OPEN FONT INPUT FILE 
           CALL OPFILE(.TRUE.,FILNAM,LUN2,'O',IFORM,NSAMF,NROWF,NSLICEF,
     &                MAXIM2,'FONT',.FALSE.,IRTFLG)
           IF (IRTFLG .NE. 0) GOTO 9000
           IF (IMAMI.NE.1)
     &         CALL NORM3(LUN1,NSAM1,NROW1,NSLICE1,FMAX,FMIN,AV)
           FMINF = FMIN
           FMAXF = FMAX

d110 2
d118 1
a122 16
CC         FONT WIDTH (DEPENDS ON FONT IN USE!!!
CC         CALL RDPRM2S(WIDEF,OFFCON,NOT_USED,
CC     &                'FONT WIDTH & OFFSET',IRTFLG)
CC         IF (IRTFLG .NE. 0) GOTO 9000

CC         FONT WIDTH (DEPENDS ON FONT IN USE!!!
CC         CALL RDPRM2S(AA,AB,NOT_USED,
CC     &               'OFFSET A & A',IRTFLG)
CC         IF (IRTFLG .NE. 0) GOTO 9000

C          KLUDGE TO GET WORKING FAST, FIX IT SOMETIME
           WIDEF  = 12.3
           OFFCON = 18.0
           AA     = 385.5
           AB     = 754.0

d125 1
a125 2
     &             NSAMF,NROWF,WIDEF,OFFCON,FMINF,FMAXF,LABELSTR,NLET,
     &             AA,AB)
@


1.8
log
@added 'LA'
@
text
@d32 1
d148 1
a148 1
     &             aa,ab)
@


1.7
log
@added "so"
@
text
@d6 1
d8 8
a15 9
C **************************************************************************
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
C *  COPYRIGHT (C)1981,1987 WADSWORTH CENTER FOR LABORATORIES AND          *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
C **************************************************************************
d28 1
d30 5
d41 8
d94 59
@


1.6
log
@FV added
@
text
@d5 1
d19 3
a21 2
C   PURPOSE: HANDLES OPERATIONS FOR EXTRACT CLUSTERS (EC) and IA
C	     THEY DEAL WITH CLUSTER CONNECTIVITY VOLUMES.
a28 1

d41 1
d68 1
d72 8
@


1.5
log
@a
@
text
@d39 2
a40 1
	ELSEIF (FCHAR(4:5) .EQ. 'CLOSE') THEN
d45 1
a45 1
        ELSEIF (FCHAR(4:5) .EQ. 'SE') THEN
d50 1
a50 1
        ELSEIF (FCHAR(4:5) .EQ. 'ST') THEN
d55 1
a55 1
        ELSEIF (FCHAR(4:5) .EQ. 'FI') THEN
d60 1
a60 1
        ELSEIF (FCHAR(4:5) .EQ. 'CL')  THEN
d65 4
a68 1

a70 1
	RETURN
@


1.4
log
@added ia
@
text
@d26 1
a26 1
CNO_SAVE
@


1.3
log
@used unlabeled common
@
text
@d4 1
a4 3
C	THESE COMMANDS ARE GROUPED UNDER THE NAME
C	EXTRACT CLUSTERS (EC)
C	THEY DEAL WITH CLUSTER CONNECTIVITY VOLUMES.
d16 5
d26 1
d29 2
a30 1
	PARAMETER (MAXREG=7)    
d34 7
a40 1
	IF (FCHAR(4:5) .EQ. 'CLOSE') THEN
d45 1
d50 1
d55 1
d60 1
@


1.2
log
@delete extraneous variables
@
text
@d1 2
a2 2
C
C       VOL.F    DRIVER FOR VOLUME STUDIES
a18 1
C
a21 1
#ifdef SP_UNIX
a22 3
#else
        INCLUDE 'COMMON1:CMBLOCK.INC'
#endif
d29 1
a29 61
C	LOGICAL         ONSUN,LABAH,OKVMS,SERSEC
 	LOGICAL         DEBUG
        CHARACTER * 1   NULL
        CHARACTER * 6   ANS

C        COMMON /OPSYS/ ONSUN
C        COMMON /VMSCALL/ OKVMS,SERSEC,LABAH  
        COMMON /DOC_BUF/ DBUF(MAXREG,MAXKEY,2)

        COMMON /SPI_BUF/ DUMMY(40000)

C        PARAMETER   (MAXDIM = 300000)
C        COMMON      IWORK(MAXDIM)
        COMMON      IWORK(1)
	
C	DATA ONSUN/.FALSE./, LABAH  /.TRUE./
	DATA  ISTOP /0/,IBIG/1/, NUMREP/1/,NDOC  /4/
	DATA  NTERM /5/,NUNIN  /7/, LUN1/4/, NDISK/1/
        DATA  DEBUG/.TRUE./

        NULL   = CHAR(0)
C        NIN    = 5
C        NOUT   = 6
C        DATEXC = 'DAT' // NULL

        DUMMY(1)    = 1
        IWORK(1)    = 1
        DBUF(1,1,1) = 1

C        CALL RDPRMC(DATEXC,NCHAR,.FALSE.,'EXTENSION',NULL,IRTFLG)
C        IF (IRTFLG .EQ. -1) STOP
C        DATEXC(4:4) = NULL
        
C        WRITE(NOUT,699) 
C699     FORMAT(
C     &    ' OPTIONS: CO, CU, MP, MB, STA, FILT, FILD, DIST',//,
C     &    ' CO    CONINT   (CONNECTED CLUSTER FINDER)',/,
C     &    ' MP    MAPDOC   (KEEPS ALL VOXELS IN CLUSTER AT XYZ)',/,
C     &    ' MB    MAPIMB   (MASKING AN IMAGE USING 2ND IMAGE)',/,
C     &    ' STA   MAPSTAT  (FINDS VOXELS/CLUSTER AND COM)',/,
C     &    ' FILT  MAPFILT  (TO FILTER OUT SMALL CLUSTERS)',/,
C     &    ' FILD  DOCFILT  (TO FILTER OUT SMALL CLUSTERS)',/,
C     &    ' DIST  MAPDIST  (COMBINES NEARBY CLUSTERS) ',/,
C     &    ' CU    CUBES   (SPIDER --> CUBERILLE BYU FILE)'//)
C
C
C 10     CALL RDPRMC(ANS,NCHAR,.TRUE.,'OPERATION',NULL,IRTFLG)
C
C        IF (ANS(1:2) .EQ. 'CO') THEN
	IF(FCHAR(4:8) .EQ. 'CLOSE') THEN

C           WRITE(NOUT,*) 'RUNNING mapdist'
C           WRITE(NOUT,*) 'READS A DOC. FILE CONTAINING CLUSTER NUMBER'
C           WRITE(NOUT,*) '(REG 1), NUMBER OF VOXELS (REG 2) IN THE'  
C           WRITE(NOUT,*) 'CLUSTER, AND COM. DETERMINES DISTANCE,'
C           WRITE(NOUT,*) 'BETWEEN ALL COMS.  IF DISTANCE BETWEEN,'
C           WRITE(NOUT,*) 'PRESENT CLUSTER AND TEST CLUSTER IS LESS'
C           WRITE(NOUT,*) 'THAN THRESHOLD, SETS TEST CLUSTER TO'
C           WRITE(NOUT,*) 'PRESENT CLUSTER.  REMAPS IMAGE TO NEW '
C           WRITE(NOUT,*) 'CLUSTER NUMBERS.'
C           WRITE(NOUT,*) ' '
a31 13
	
C        ELSEIF(ANS(1:2) .EQ. 'CU') THEN
C
C           WRITE(NOUT,*) 'RUNNING cubes'
C           WRITE(NOUT,*) 'READS SPIDER 3-D PICTURE FILE, CREATES'
C           WRITE(NOUT,*) 'MOVIE.BYU FILE CONTAINING CUBERILLE'
C           WRITE(NOUT,*) 'SURFACE MODEL.'
C           WRITE(NOUT,*) ' '
C
C           CALL CUBES(IWORK,MAXDIM)
C
C        ELSEIF(ANS(1:2) .EQ. 'MP') THEN
        ELSEIF(FCHAR(4:9) .EQ. 'SELECT') THEN
d33 1
a33 9
C           WRITE(NOUT,*) 'RUNNING mapdoc'
C           WRITE(NOUT,*) 'READS A DOC FILE FOR MAPPING AN IMAGE FILE'
C           WRITE(NOUT,*) 'INTO A NEW IMAGE FILE. DOC. FILE CONTAINS'
C           WRITE(NOUT,*) 'X,Y & Z LOCATIONS OF A VOXEL IN THE IMAGE'
C           WRITE(NOUT,*) 'FILE. ALL VOXELS IN THE FILE HAVING THE'
C           WRITE(NOUT,*) 'CLUSTER NUMBER FOUND AT THIS LOCATION'
C           WRITE(NOUT,*) 'ARE CARRIED INTO A NEW FILE.  ALL OTHER'
C           WRITE(NOUT,*) 'VOXELS ARE SET TO ZERO.'
C           WRITE(NOUT,*) ' '
d37 1
a37 17
C        ELSEIF(ANS(1:2) .EQ. 'MB') THEN
C        ELSEIF(FCHAR(4:7) .EQ. 'MASK') THEN
C
C           WRITE(NOUT,*) 'RUNNING mapimb'
C           WRITE(NOUT,*) 'MAPS AN IMAGE FILE INTO A NEW IMAGE FILE'
C           WRITE(NOUT,*) 'DEPENDING ON VALUE OF CORRESPONDING VOXEL'
C           WRITE(NOUT,*) 'IN REFERENCE IMAGE.  IF THE VOXEL IN THE'
C           WRITE(NOUT,*) 'REFERENCE IS ZERO, THE VALUE OF THE IMAGE'
C           WRITE(NOUT,*) 'VOXEL IS SET TO ZERO. IF THE VALUE OF THE'
C           WRITE(NOUT,*) 'REFERENCE VOXEL IS NOT ZERO, THE IMAGE IS'
C           WRITE(NOUT,*) 'UNCHANGED.' 
C           WRITE(NOUT,*) ' '
C
C           CALL MAPIMB(IRTFLG)
C
C        ELSEIF(ANS(1:3) .EQ. 'STA') THEN
        ELSEIF(FCHAR(4:7) .EQ. 'STAT') THEN
a38 10
C           WRITE(NOUT,*) 'RUNNING imstat and mapstat'
C           WRITE(NOUT,*) 'EXAMINES AN IMAGE STACK FOR NUMBERS OF EACH'
C           WRITE(NOUT,*) 'IMAGE VALUE AND CENTER OF MASS OF EACH IMAGE'
C           WRITE(NOUT,*) 'VALUE.  CREATES A DOC. FILE FOR STATISTICS' 
C           WRITE(NOUT,*) 'OUTPUT HAVING KEY=IMAGE VALUE, THEN'
C           WRITE(NOUT,*) 'NUMBER OF CELLS HAVING THAT VALUE, '
C           WRITE(NOUT,*) 'IXCOM, IYCOM, IZCOM, & NO. OF SLICES WITH'
C           WRITE(NOUT,*) 'EACH CLUSTER.'
C           WRITE(NOUT,*) ' '

d41 1
a41 23
C        ELSEIF(ANS(1:4) .EQ. 'FILD') THEN
C        ELSEIF(FCHAR(4:7) .EQ. 'FILD') THEN
C
C           WRITE(NOUT,*) 'RUNNING docfilt'
C           WRITE(NOUT,*) 'READS A DOC. FILE CONTAINING CLUSTER NUMBER'
C           WRITE(NOUT,*) '(REG 1) AND NUMBER OF VOXELS (REG 2) IN THE'
C           WRITE(NOUT,*) 'CLUSTER.  IF NUMBER OF VOXELS < MIN OR > NMAX'
C           WRITE(NOUT,*) 'THEN THE VOXELS BELONGING TO THIS CLUSTER'
C           WRITE(NOUT,*) 'ARE SET TO ZERO.'
C           WRITE(NOUT,*) ' '
C
C           CALL DOCFILT(IRTFLG)
C
C        ELSEIF(ANS(1:4) .EQ. 'FILT') THEN
        ELSEIF(FCHAR(4:9) .EQ. 'FILTER') THEN

C           WRITE(NOUT,*) 'RUNNING mapfilt'
C           WRITE(NOUT,*) 'READS A DOC. FILE CONTAINING CLUSTER NUMBER'
C           WRITE(NOUT,*) ' (REG 1) AND NUMBER OF VOXELS (REG 2) IN' 
C           WRITE(NOUT,*) 'THE CLUSTER. IF NUMBER OF VOXELS < MIN OR'
C           WRITE(NOUT,*) '> NMAX THEN THE VOXELS BELONGING TO THIS'
C           WRITE(NOUT,*) 'CLUSTER ARE SET TO ZERO.'
C           WRITE(NOUT,*) ' '
d45 2
a46 2
C        ELSEIF(ANS(1:4) .EQ. 'DIST') THEN
        ELSEIF(FCHAR(4:5) .EQ. 'CL')  THEN
d48 1
a48 8

C           WRITE(NOUT,*) 'RUNNING conint (connectivity mapper)'
C           WRITE(NOUT,*) 'READS SPIDER 3-D IMAGE STACK, CREATES 3-D'
C           WRITE(NOUT,*) 'IMAGE STACK FILE CONTAINING NUMBERS FOR'
C           WRITE(NOUT,*) 'CONNECTED CLUSTERS'
C           WRITE(NOUT,*) ' '

           CALL CONINT(IWORK,MAXDIM,MAXTAB)
a49 2
C        ELSEIF(ANS(1:2) .EQ. 'EN') THEN
C	  STOP
a51 1
C        GOTO 10
@


1.1
log
@Initial revision
@
text
@d34 2
a35 1
	LOGICAL         ONSUN,DEBUG,LABAH,OKVMS,SERSEC
d39 2
a40 2
        COMMON /OPSYS/ ONSUN
        COMMON /VMSCALL/ OKVMS,SERSEC,LABAH  
d48 5
a52 7

	DATA NSTART /1/, NFILE/0/,IFILE /0/,ISTOP /0/,IBCNT /0/
	DATA IPRTT  /0/, IBIG/1/, NUMREP/1/,ILOOP /1/,NLOOP /1/ 
	DATA INFLUN /2/, NDAT/3/, NTERM /5/,IFOUND/1/,NDOC  /4/
	DATA NUNIN  /7/, LUN1/4/, NDISK/1/, IFOR  /0/,NTRACE/0/

        DATA LABAH  /.TRUE./, ONSUN/.FALSE./, DEBUG/.TRUE./
@
