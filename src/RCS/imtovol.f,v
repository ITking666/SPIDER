head	1.14;
access;
symbols
	pre_mrcs:1.14
	healthdept_2018:1.14
	pre_getangas:1.13
	GPL2010:1.13
	pre_GPL2010:1.12
	pre_var_equation:1.12
	pre_fftwrings:1.12
	pre_opfiles:1.12
	src:1.12
	best-code:1.12
	x-named-regs:1.12
	x:1.12
	v13-00:1.12
	pre_GPL:1.10
	prec_CA:1.10
	noindx:1.10
	Bproc:1.10
	oct21:1.8
	last77:1.7;
locks; strict;
comment	@c @;


1.14
date	2018.10.03.14.34.08;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.24.13.25.56;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.17.19.51.57;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.17.17.49.18;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2000.05.01.15.12.05;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.24.20.02.34;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.09.08.16.59.17;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.03.19.15.31.48;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.03.19.15.28.43;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.04.06.15.11.37;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	98.04.03.21.15.37;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	98.04.03.20.59.18;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	96.08.08.14.27.03;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	96.07.17.20.02.07;	author leith;	state Exp;
branches;
next	;


desc
@new
@


1.14
log
@email_health_dept
@
text
@C++*********************************************************************
C
C  IMTOVOL.F   -- CREATED JUL 96 al
C                 USED AUTOMATIC ARRAYS APRIL 00 ARDEAN LEITH
C
C **********************************************************************
C=*                                                                    *
C=* This file is part of:   SPIDER - Modular Image Processing System.  *
C=* SPIDER System Authors:  Joachim Frank & ArDean Leith               *
C=* Copyright 1985-2010  Health Research Inc.,                         *
C=* Riverview Center, 150 Broadway, Suite 560, Menands, NY 12204.      *
C=* Email: spider@@health.ny.gov                                        *
C=*                                                                    *
C=* SPIDER is free software; you can redistribute it and/or            *
C=* modify it under the terms of the GNU General Public License as     *
C=* published by the Free Software Foundation; either version 2 of the *
C=* License, or (at your option) any later version.                    *
C=*                                                                    *
C=* SPIDER is distributed in the hope that it will be useful,          *
C=* but WITHOUT ANY WARRANTY; without even the implied warranty of     *
C=* merchantability or fitness for a particular purpose.  See the GNU  *
C=* General Public License for more details.                           *
C=* You should have received a copy of the GNU General Public License  *
C=* along with this program. If not, see <http://www.gnu.org/licenses> *
C=*                                                                    *
C **********************************************************************
C
C  IMTOVOL(LUNIM,NSAM,NROW,NSLICE,LUNVOL,FMINT,FMAXT, MAXDIM)
C
C  PURPOSE:  CONVERTS IMAGES TO VOLUME ASSUMING THAT THE IMAGE
C            VALUE IS DEPTH.  VOLUME IS BINARY CONTAINING 0 AND 1
C
C        0         2         3         4         5         6         7     
C23456789 123456789 123456789 123456789 123456789 123456789 123456789 12
C--*********************************************************************

       SUBROUTINE IMTOVOL(LUNIM,NSAM,NROW,NSLICE,LUNVOL,FMINT,FMAXT,
     &                    MAXDIM)

       INCLUDE 'CMBLOCK.INC'
       INCLUDE 'CMLIMIT.INC'

       REAL, DIMENSION(NSAM*NROW*NSLICE) :: VOLBUF

       COMMON /IOBUF/ BUF(NBUFSIZ)

C      ZERO THE WHOLE VOLUME
       VOLBUF = 0.0

C      FIND CONVERSION FACTOR FROM IMAGE MIN..MAX  TO DEPTH (SLICE)
       FACT = (FLOAT(NSLICE - 1) / (FMAXT - FMINT))      

C      FIND PIXELS PER SLICE
       IPPSL = NSAM * NROW

       NSLICEM1 = NSLICE - 1

       DO IROW = 1,NROW
C         READ IMAGE ROW
          CALL REDLIN(LUNIM,BUF,NSAM,IROW)
          ICON1 = (IROW - 1) * NSAM

C         CONVERT IMAGE VALUE TO DEPTH (SLICE) FOR EACH PIXEL
          DO ISAM = 1,NSAM

C            INVERT THE SLICES SO TOP IS UP
             ISLICEM1 = NSLICEM1 - (BUF(ISAM) - FMINT) * FACT
             ICON2    = ICON1 + ISAM

C            SET THE PIXEL AT THAT LOCATION TO 1.0 FOR ALL SLICES BELOW
             DO ISLICE = ISLICEM1, NSLICEM1           
                VOLBUF(ISLICE * IPPSL + ICON2) = 1.0
             ENDDO
          ENDDO
       ENDDo
    
C      SAVE THE VOLUME BUFFER  
       ILOC = 1 
       DO IREC = 1, NROW * NSLICE
          CALL WRTLIN(LUNVOL,VOLBUF(ILOC),NSAM,IREC)
          ILOC = ILOC + NSAM
       ENDDO

999    CONTINUE
       CLOSE(LUNVOL)
       CLOSE(LUNIM)

       RETURN
       END
@


1.13
log
@GPL_2010
@
text
@d12 1
a12 1
C=* Email: spider@@wadsworth.org                                        *
@


1.12
log
@GPL License fixed
@
text
@a6 2
C=* FROM: SPIDER - MODULAR IMAGE PROCESSING SYSTEM.   AUTHOR: J.FRANK  *
C=* Copyright (C) 1985-2005  Health Research Inc.                      *
d8 5
a12 2
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *   
C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                   *
d14 1
a14 3
C=* Email:  spider@@wadsworth.org                                       *
C=*                                                                    *
C=* This program is free software; you can redistribute it and/or      *
d19 1
a19 1
C=* This program is distributed in the hope that it will be useful,    *
d21 1
a21 1
C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  *
a22 1
C=*                                                                    *
d24 1
a24 3
C=* along with this program; if not, write to the                      *
C=* Free Software Foundation, Inc.,                                    *
C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
@


1.11
log
@HRI GPL License used
@
text
@a1 1
C++*************************************************************************
a6 3
C **************************************************************************
C * SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK         *
C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
d10 1
a10 1
C=* HEALTH RESEARCH INCORPORATED (HRI),                                *  
a29 7

C *  COPYRIGHT (C)1981,1996, WADSWORTH CENTER FOR LABORATORIES AND         *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
a30 1
C **************************************************************************
@


1.10
log
@automatic arrays usded now
@
text
@d1 1
d7 1
d9 1
d11 24
d41 1
@


1.9
log
@SP_F90 removed
@
text
@d3 2
a4 1
C  IMTOVOL.FOR -- CREATED JUL 96 al
d28 2
a29 2
        INCLUDE 'CMBLOCK.INC'
        INCLUDE 'CMLIMIT.INC'
d31 1
a31 1
        COMMON /IOBUF/ BUF(NBUFSIZ)
d33 1
a33 1
        COMMON       FIMBUF(1)
a34 20
        LOGICAL      RUNTIME
 
        INCLUDE 'F90ALLOC.INC'
        REAL, DIMENSION(:), POINTER :: IPVOLBUF
        REAL, DIMENSION(:), POINTER :: VOLBUF

       MEMWANT = NSAM * NROW * NSLICE + 1024

C      USE COMMON BUFFER OR ALLOCATE MEMORY AS NEEDED
       CALL CHKMEM(MEMWANT, FIMBUF, MAXDIM, 
     &              RUNTIME,IPVOLBUF,IRTFLG)

       VOLBUF => IPVOLBUF

       IF (IRTFLG .NE. 0) THEN
C          NOT ENOUGH MEMORY
           CALL ERRT(6,'PP V',NE)
           GOTO 999
       ENDIF

d36 1
a36 3
       DO I = 1,NSAM * NROW * NSLICE
          VOLBUF(I) = 0.0
       ENDDO
a74 3

C      FREE ANY ALLOCATED MEMORY
       IF (RUNTIME)  CALL DEALLOCMEM_R(IPVOLBUF,IRTFLG)
@


1.8
log
@CMLIMIT.INC
@
text
@a35 1
#ifdef SP_F90
a38 4
#else
        DIMENSION    VOLBUF(1)
        POINTER      (IPVOLBUF,VOLBUF) 
#endif
a45 1
#ifdef SP_F90
a46 1
#endif
@


1.7
log
@deallocmem_r
@
text
@d28 1
a29 1
        PARAMETER    (NBUFSIZ = 17008)
@


1.6
log
@dec f90 compilation problems
@
text
@d105 1
a105 1
       IF (RUNTIME)  CALL DEALLOCMEM(IPVOLBUF,IRTFLG)
@


1.5
log
@f90 chkmem update
@
text
@a26 1
CNO_SAVE
d29 5
a34 2
        PARAMETER    (INBUFLEN = 17008)
        COMMON       FIMBUF(INBUFLEN)
d48 1
a48 1
       CALL CHKMEM(MEMWANT, FIMBUF(INBUFLEN+1), (MAXDIM-INBUFLEN), 
d76 1
a76 1
          CALL REDLIN(LUNIM,FIMBUF,NSAM,IROW)
d83 1
a83 1
             ISLICEM1 = NSLICEM1 - (FIMBUF(ISAM) - FMINT) * FACT
d105 1
a105 1
       IF (RUNTIME)  CALL ALLOCIT(0,RUNTIME,IPVOLBUF,'IMTOVOL',IRTFLG)
@


1.4
log
@restored earlier version
@
text
@a23 1

d27 2
a28 1
       INCLUDE 'CMBLOCK.INC'
d30 9
a38 2
#ifdef SP_ALLOC
        COMMON       FIMBUF(4096)
a40 3
        LOGICAL      RUNTIME
#else
        COMMON       FIMBUF(4096),VOLBUF(1)
d44 7
a50 7
#ifdef SP_ALLOC
C      RUN TIME ALLOCATE MEMORY
       CALL ALLOCIT(MEMWANT,RUNTIME,IPVOLBUF,'PP V',IRTFLG)
       IF (.NOT.RUNTIME)  THEN
#else
C      USE COMMON BUFFER
       IF (MEMWANT .GT. MAXDIM) THEN
d52 2
d101 3
@


1.3
log
@added include F90ALLOC.INC
@
text
@a27 4
#ifdef SP_F90
       INCLUDE 'F90ALLOC.INC' 
#endif

@


1.2
log
@made all of slices set to new valuee
@
text
@d28 4
@


1.1
log
@Initial revision
@
text
@d76 1
d78 4
a81 2
C            SET THE PIXEL AT THAT LOCATION TO 1.0            
             VOLBUF(ISLICEM1 * IPPSL + ICON1 + ISAM) = 1.0
@
